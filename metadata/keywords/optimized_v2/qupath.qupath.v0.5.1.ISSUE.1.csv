quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"**Describe the bug**; Starting with m10, when the new command line was introduced, the ""getCurrentImageData()"" function returns NULL. Prior to 0.2.0-m10 (m4 -> m9 confirmed working) the following command could be used to run a script on the (MacOS) command line ""QuPath-0.2.0-m9 -image myimage.svs -script myscript.groovy"". The arguments ""-image"" identifited the image and ""-script"" identified the script. On execution you would see QuPath output (e.g. qupath.QuPath - Launching QuPath with args), then the script would be executed. In versions after 0.2.0-m10, including the 0.2.0 release, I am trying to use the command ""QuPath-0.2.0 -i=myimage script myscript.groovy"", but this fails with NullPointerException related to a null returned by ""getCurrentImageData()"". The exact same script works just fine using the script editor in all versions. . I am possibly using the new command line interface incorrectly. . **To Reproduce**; Steps to reproduce the behavior:; 1. Create any script that needs to reference the current image, without using a project. The following script ""myscript.groovy"" demonstrates the issue:; ```; import static qupath.lib.gui.scripting.QPEx.*. def imageData = getCurrentImageData(). if(imageData == null) {; println ""imageData == Null""; } else {; println ""imageData != Null""; }. def server = imageData.getServer(); ```; 2. Run the script referencing an image on the command line: ; ```; ./QuPath-0.2.0 -i=myimage.svs script myscript.groovy; ```; 3. See error:; imageData == Null; NullPointerException at line 11: Cannot invoke method getServer() on null object. **Expected behavior**; I would expect that if the command line arguments were changed to the new format the script processing would work the same as 0.2.0-m9 and earlier. The script editor seems to work just fine. Example working output from 0.2.0-m9 is shown below: . 10:23:10.593 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, myimage.svs, -script, myscript.groovy; 10:23:11.387 [main] [WA",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/511:582,release,release,582,https://qupath.github.io,https://github.com/qupath/qupath/issues/511,1,['release'],['release']
Deployability,"**Describe the bug**; The automated update check happens in a background thread, but then tries to update the UI. This can cause an exception when there's something to update. **To Reproduce**; See https://forum.image.sc/t/error-on-launching-qupath-v0-4-0/75116. Depends upon an update to something being available - manually checking for updates probably won't show this problem. > Edit: Manually checking *does* have the same problem... **Expected behavior**; Update check succeeds, or fails quietly. Because it acts on the right thread. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.0. **Additional context**; This is potentially horrible, since when QuPath is updated everyone who has it installed will see the exception... so better to fix it before we have even more downloads :(",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1191:36,update,update,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1191,8,"['Update', 'install', 'update']","['Update', 'installed', 'update', 'updated', 'updates']"
Deployability,"**Description**; When I attempt to install QuPath 0.3.0 on Windows 10, the text of QuPath is unreadable (please see screenshot below). **To Reproduce**; Steps to reproduce the behavior:; 1. Download QuPath from https://github.com/qupath/qupath/releases/download/v0.3.0/QuPath-0.3.0-Windows.msi.; 2. Bypass Windows Defender security alerts.; 3. Run the installer.; 4. Open QuPath 0.3.0. **Screenshots**. ![image](https://user-images.githubusercontent.com/43010710/146222250-0d831aa3-f959-4bec-95d4-6af049cf994e.png). **Desktop**; - OS: Windows; - QuPath Version: 0.3.0. **Hash**; The SHA256 hash of the file I downloaded is:; ```; certutil -hashfile QuPath-0.3.0-Windows.msi SHA256; SHA256 hash of QuPath-0.3.0-Windows.msi:; d3661adca21ab8ea31acfa5d150345fb4b46a983526803fce3869f520949965e; ```; However, I cannot find the hash of the file from the GitHub API: https://api.github.com/repos/qupath/qupath/releases (see [here](https://stackoverflow.com/questions/29671303/where-to-get-md5-hashes-from-a-github-release)).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866:35,install,install,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/866,5,"['install', 'release']","['install', 'installer', 'release', 'releases']"
Deployability,"**Extra:** CUDA 11.8 suggests to me you were following the instructions for [QuPath v0.5.x here](https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#pytorch). These need to be updated for v0.6.0.; We will do this when we've time, but my guess is that you'll need a different CUDA version (possibly [12.1](https://publish.djl.ai/pytorch/2.3.1/files.txt)). For reference, QuPath v0.6.0-rc1 uses DJL v0.29.0 - which defaults to PyTorch 2.3.1 according to [this link](http://djl.ai/engines/pytorch/pytorch-engine/). QuPath v0.6.0-rc2 is likely to use DJL v0.30.0, which has only just been released... and may require [CUDA 12.4](https://publish.djl.ai/pytorch/2.4.0/files.txt). We've been incredibly busy trying to make all these releases, and I'd ask for patience as we update the docs and try to stabilize all the final versions. The CUDA question in particular is further complicated by our dependencies updating, and none of us routinely using Windows.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598:183,update,updated,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598,4,"['release', 'update']","['released', 'releases', 'update', 'updated']"
Deployability,"**Many** improvements, in preparation for the release of v0.3.0. See the changelog for more details, but the biggest changes are:; * New OMERO web support; * Use of CI with GitHub actions; * Easier object export/import with GeoJSON; * Storage of `ServerBuilder` JSON within .qpdata files (rather than a path only); * *Many* bug-fixes, quality improvements & additional methods (useful for scripts). Note that this is **not** complete. Further changes and tests are required before v0.3.0 can be released later this month, including a completely revised use of Gradle for building. However, GitHub Actions appear to have some branch troubles that merging with main will hopefully resolve.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/737:46,release,release,46,https://qupath.github.io,https://github.com/qupath/qupath/pull/737,2,['release'],"['release', 'released']"
Deployability,"**To Reproduce**; Steps to reproduce the behavior:; 1. Make a directory and add a QuPath Extension; 2. Within Edit > Preferences > QuPath user Directory and set it to your created directory above.; 2. Close QuPath And Reopen; 3. **Go to Help > Installed Extensions, the extension is not there.**; 4. Drag and Drop extension into QuPath; 5. QuPath says ""No Extensions Directory is set"" (So it is not the user directory?) and offers to create it at C:\Users\username; 6. Set the Extension directory to where it was created in step 1; 7. Now Extension is loaded but inside an 'extensions' directory. **Expected behavior**; When the `User Directory` is set (Which I guess used to be called `Extensions Directory`, which is no longer in preferences), and restarting QuPath, all extensions from that directory should be loaded.; Moreover the location of the Extension Directory should be accessible somewhere in the preferences.; We would expect the Extensions directory be independent from the User Directory. This seems like a non-braking change as there is no documentation on how to load extensions in QuPath 0.2.0 in readthedocs and most people are not using extensions (Except us). **Additional Remarks**; As a core facility, Extensions make little sense on a 'per user' basis, especially given how complex and supposedly independent they are from each other, or from the individual user's needs. For us they are more suitably used like in ImageJ: All extensions (or plugins) are loaded by ImageJ/Fiji regardless of the currently logged in user. This ensures a streamlined experience for all our users without intervention on our side. We see that we can load or save preferences, so we can do this for each user as needed, but it makes it more tedious for us to distribute and debug issues when such settings are per-user. **Desktop (please complete the following information):**; - Windows 10 x64; - QuPath Version .2.0-m12. Thank you for your time.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500:244,Install,Installed,244,https://qupath.github.io,https://github.com/qupath/qupath/issues/500,1,['Install'],['Installed']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/308:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/308,1,['release'],['release']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is.; Zooming in and out with the mousewheel with multiple viewers open results in slight ""zoom lag"" in unselected (non active) windows. Harder to confirm, but I believe there is related XY drift.; **To Reproduce**; Steps to reproduce the behavior:; Open two windows using multiviewer. Open an image in both, it should default to the same zoom. Rapidly zoom in, and the zoom will desync, with the non-selected window . **Expected behavior**; Zoom stays synchronized within all windows.; **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; All versions, Win10,7 64 bit. **Additional context**; Add any other context about the problem here.; Testing bug submission",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/284,1,['release'],['release']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; In brightness and contrast menu the x axis of the intensity plot always has min 0 and max 429496729 when 'Keep settings' is enabled. The scaling bars also stop working when this happens. Have seen this with multiplex fluorescent images (multipage tifs) that have the same channels (same names) but in different order. ; EDIT: Happens even if all channels are in consistent order and with just 2-3 images. **To Reproduce**; Steps to reproduce the behavior:; 1. Open multiple multi-page .tif multiplex fluorescent images in the same project (32-bit).; 2. Click on Brightness and contrast menu; 3. Change scaling for a single channel and enable 'Keep settings'; 4. Repeat for different images; 5. After a few images the gets set to min 0 and max 429496729 for all channels, not just the one. This happens in multiple images in the same project. ; 6. Different subsets of images (that I've tested so far at least) always produce the same unexpected min and max on the x axis. Don't know the significance of these numbers.; 7. Axis scale doesn't return to normal when 'Keep settings' is disabled. **Expected behavior**; This shouldn't be happening - 'Keep settings' option messes up the intensity plots. **Screenshots**; ![brightnessandcontrastqupath2bug](https://user-images.githubusercontent.com/22013848/58724088-a15bd900-83d3-11e9-97d0-7b0522abd17c.png). **Desktop (please complete the following information):**; - OS: Windows 10 and Mac OS; - QuPath Version 0.2.0-m2 (doesn't happen in 0.1.3)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/326:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/326,1,['release'],['release']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; In order to right click while running QuPath on macOS, one must have a mouse that can right click. The normal control-click shortcut in the absence of a mouse does not perform a right click in QuPath. I could easily grab a mouse, but I am lazy and would rather control-click. **To Reproduce**; Steps to reproduce the behavior:; 1. Attempt to right-click on a mac without a mouse.; 2. Try holding control and clicking on image or annotation.; 3. Nothing happens. **Expected behavior**; Hold down control and click on image. The right-click menu pops up. **Desktop (please complete the following information):**; - OS: macOS (10.14.3); - QuPath Version 0.2.0 m1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/285:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/285,1,['release'],['release']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; Not sure if this is a bug or intended:; In 0.1.x versions of qupath the qupath project would save the relative path to the images if placed inside a folder inside the project folder.; In version 0.2.0-m2 the path to an image is always absolute.; This makes moving a project folder very risky :). **To Reproduce**; Steps to reproduce the behavior:; - How I setup a project under QuPath 0.2.0-m2 and 0.1.2:; 1. In QuPath choose empty folder for the project; 2. mkdir images inside the project folder; 3. copy images into new folder images; 4. In QuPath add images from this images folder to the project; 5. Save/Close; 5. Check QuPath project file with texteditor:; -> v 0.1.2 - path to images are relative to project folder; -> v 0.2.0-m2 - path to images are absolute. **Expected behavior**; Same behavior in v0.2.0-m2 as i v0.1.2 - usage of relative path in project file. **Screenshots**; -. **Desktop (please complete the following information):**; - OS: Windows 10 x64; - QuPath Version 0.2.0-m2 vs 0.1.2. **Additional context**; - Work-around:; - setup project folder directly in the base directory (https://github.com/qupath/qupath/issues/325#issuecomment-497796974); - Edit project file with text editor to replace/update absolute path",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/325:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/325,2,"['release', 'update']","['release', 'update']"
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; Opening a project file by double-clicking in file file explorer [Windows 10 x64] fails if path contains special characters [in my case it was Ø]. QuPath error message: Could not open file. Opening the same project file residing in the same folder by using QuPath menu option ""Open project"" works fine. **To Reproduce**; Steps to reproduce the behavior:; On Windows 10 x64:; 1. create a project in a folder containing a special character (e.g. ø); 2. double click the project file in file explorer to open through MIME-type association; 3. QuPath opens but cannot open the project. **Expected behavior**; QuPath opens the project. **Screenshots**; not needed. **Desktop (please complete the following information):**; - OS: Windows 10 x64; - QuPath Version 0.2.0. **Additional context**; ---",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/320,1,['release'],['release']
Deployability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; When opening .bif images the image edges are irregular. **To Reproduce**; Steps to reproduce the behavior:; 1.Drag .bif image into viewer and look. . **Expected behavior**; Expected image would not have irregular edges . **Screenshots**; Attached. **Desktop (please complete the following information):**; - OS:Mac OS. ![bif issue screenshot](https://user-images.githubusercontent.com/51175473/58586285-bb0ced00-8228-11e9-8524-30c14cc453f8.png). - QuPath Version [e.g. 0.1.2 and in beta test version]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/323:52,release,release,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/323,1,['release'],['release']
Deployability,*Edit &rarr; Reset preferences* should fix it (preferences aren't impacted by a new installation).; I notice you're using v0.1.2 - I think this bug should already have been fixed since then.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422#issuecomment-604962678:84,install,installation,84,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-604962678,1,['install'],['installation']
Deployability,"*system**: CentOS7、java version ""1.8.0_131""; **work path**:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1304,deploy,deploy,1304,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,", I tried opening one of our multichannel, multi-scene (TMA) Zeiss *.czi files on an installation of QuPath Version 0.2.0-m2 on a recently installed Windows 10 system. To my surprise, this failed. I tried other files of the same type and got the same result. I could not open any of the multi-scene *.czi files I have tried. Of note, I have been working with version 0.2.0-m2 for a while now and it worked very well with ""normal"" *.czi files, which are also multi-channel, but do not contain multiple scenes. It must have been by sheer coincidence that, so far, I just had not tried any multi-scene files. We have another PC with a QuPath installation in our lab, which runs 0.2.0-m1. It shows the same behaviour: no problem opening ""normal"" multichannel (4-plex) *.czi files, not able to open multi-scene files. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to File; 2. Click on open; 3. Choose a *.czi file which you know is multi-scene ; 4. See error ""Sorry, can't open ... path to file"". **Expected behavior**; These files used to open in version 0.1.3. The scenes were read as individual images. In the Zeiss ""ZEN blue"" software, there is an option to show all the scenes at once. This had not been possible in QuPath in the past. I was hoping that with the new version of Bioformats it might now be possible, but it seems we have moved a step backwards. **Screenshots**; Not applicable. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version [e.g. 0.2.0-m2]. **Additional context**; Multi-scene *.czi files have been giving trouble in the past, e.g. with memory use. However, apart from the inability to ""stitch"" the scenes and show them all at once, the prior versions of QuPath could open them. Some googleing led me to checking as to whether the Microsoft Visual C++ Runtime Redistributables are installed on my system. The answer is yes. Thank you in advance,. Arnulf; University Medical Center Mainz, Germany; Dept. of Radiation Oncology",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337:1942,install,installed,1942,https://qupath.github.io,https://github.com/qupath/qupath/issues/337,1,['install'],['installed']
Deployability,"- Adds mac arm64 build; - Only uploads javadoc from mac arm64 ; - Removes the linux stuff as RPMs weren't usable for snapshot/rc builds.; - Bumps action versions to remove some warnings. See #1460. So workflow would basically be, run the jpackage action, add info about release draft (changelog/etc), people download + test the artifacts from the draft release, when happy make a tag and publish the release",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464:270,release,release,270,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464,3,['release'],['release']
Deployability,"- Delete .app when creating the installer on macOS; - Create the Windows .zip directly, so that the sha512 is also computed",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1371:32,install,installer,32,https://qupath.github.io,https://github.com/qupath/qupath/pull/1371,1,['install'],['installer']
Deployability,- Fix QuPath version compatibility logging when extensions can't be installed; - Support `GeneralTools.isAppleSilicon()`; - Update the welcome message,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1624:68,install,installed,68,https://qupath.github.io,https://github.com/qupath/qupath/pull/1624,2,"['Update', 'install']","['Update', 'installed']"
Deployability,- Fixed #638.; - Updated the `Wand tool` name for consistency.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/644:17,Update,Updated,17,https://qupath.github.io,https://github.com/qupath/qupath/pull/644,1,['Update'],['Updated']
Deployability,"- Fixed several formatting issues for Windows, including:; - Import of tab-delimited data (e.g. TMA grids); - Escaping of paths when exporting TMA data; - Separation of paths in 'Help -> System info'; - Cached image paths (still experimental); - TMA data export now records directory (rather than name) in script, so that it can be reused across a project without editing; - Added use of OpenSlide's background color - this fixes previously-buggy appearance when scans where part of the image is omitted (e.g. some mrxs images); - Updated TMA dearraying command to support fluorescence TMAs; - Modified TMA dearraying script command to abort if dearraying for the first time by default - this encourages good practice of checking dearrayed result prior to running full analysis (although means that any generated script would need to be run twice - once to dearray, and then again to do everything else); - 'Relabel TMA Grid' now a scriptable command; - Fixed reassigning child objects with 'Make inverse annotation' command; - Fixed bug that prevented plugins cancelling more than once; - Minor improvements to Brightness/Contrast panel; - Set default logging level to INFO; - Added sample script to change logging level; - Improved display of licenses & third-party dependencies; - Updated location of user preferences; - Added menu entry to reset preferences",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/4:531,Update,Updated,531,https://qupath.github.io,https://github.com/qupath/qupath/pull/4,2,['Update'],['Updated']
Deployability,"- Fixed the View Tracking feature; - Renamed the View Tracking command; - Added the possibility to have more than one recording; - Recordings are automatically saved into the project folder and are reloaded when the command is called again; - Added data analysis pane to analyse the data from the recording; - Added `BufferedImageOverlay` to represent the time spent on each region of the image during the recording. This is a draft PR and more changes will be made to polish this feature. Moreover, the CHANGELOG will need to be updated.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/903:530,update,updated,530,https://qupath.github.io,https://github.com/qupath/qupath/pull/903,1,['update'],['updated']
Deployability,- Update to Bio-Formats 6.11.0 - see https://forum.image.sc/t/release-of-bio-formats-6-11-0/72733; - Add javafx-fxml.jar for testing; - Update ReadMe with dev team,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1073:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1073,3,"['Update', 'release']","['Update', 'release-of-bio-formats-']"
Deployability,- Update to ControlsFX 11.1.2; - Attempt to further improve dialogs in dark mode (duplicating images in a project had a light boundary); - Replace 'Remove/Duplicate image(s)' with the actual number of images in the project context menu,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1077:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1077,1,['Update'],['Update']
Deployability,"- Update training extension (rename tour, remove from toolbar); - Ensure ImageJ sample macros appear before Groovy scripts; - Reduce max image size for ImageJ script runner; - Adjust default options in script runner; - Add a Groovy script example; - Link docs to the 'latest' (not v0.5)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1687:2,Update,Update,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1687,1,['Update'],['Update']
Deployability,"- [x] 'Owner' is higher than 'Repository'; - [x] The gap before 'Cancel' seems to be using space that 'Repository' could have; - [x] There should be some separation between the owner text field and repository label; - [x] After clicking 'Add extension' once, the other options appear - but then clicking it again has no effect. So it's not clear what exactly is the purpose of the button, or if it has the right text on it.; - [x] It's confusing that there's a list, but nothing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:919,update,update,919,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['update'],['update']
Deployability,"-------------------------------------------------------------; test environment:; **system**: CentOS7、java version ""1.8.0_131""; **work path**:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jar",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1213,deploy,deploy,1213,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,--------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1111,deploy,deploy,1111,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2673,deploy,deploy,2673,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2935,deploy,deploy,2935,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 3,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2668,deploy,deploy,2668,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslid,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2314,deploy,deploy,2314,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslid,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2047,deploy,deploy,2047,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,". This might have some small improvements in performance (especially if initializing a reader is slow), but could be brittle and easy to get wrong. > * The `T getImage(int series);` function should be removed, and the `T getImage(TileRequest tileRequest, int[] channels, boolean isRGB, ColorModel colorModel, int series)` function should be used instead. Ideally yes. As the `HnE_3_1x1component_data.tif` example, shows, we don't know what kind of image will be returned by `getImage(int series)`, and so having a separate API that assumes a single-resolution, non-pyramidal, 2D image seems to add (rather than reduce) complexity. > However I didn't understand where the `OMEPixelParser` class would be in all of this. As seen with the `HnE_3_1x1component_data.tif` example, we don't know for sure what. I think we should go back to thinking about the *ideal* design here, based upon what needs to be reusable - and also what are the simplest and safest changes that can be made before the v0.5.0 release. My understanding of the original requirements is. 1. **Essential** The OMERO `Gateway` returns byte arrays in a format very similar to Bio-Formats, and the logic convert these into a `BufferedImage` (with suitable `ColorModel` etc.) is complex. This should be extracted from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsIm",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:3458,release,release,3458,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['release'],['release']
Deployability,". We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your code to work as an extension in its own repo (I'll link to it) I'd love to give it a try - and I know there are [users who are very interested in benchmarking and trying to maximize StarDist performance](https://forum.image.sc/t/thoughts-on-0-3-2-rc2-with-stardist/56481) :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-912009706:1990,update,update,1990,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706,2,['update'],['update']
Deployability,".0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2624,update,updateDefaultSelection,2624,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateDefaultSelection']
Deployability,.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-native,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2400,deploy,deploy,2400,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2133,deploy,deploy,2133,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1378,deploy,deploy,1378,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2161,deploy,deploy,2161,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1894,deploy,deploy,1894,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2861,deploy,deploy,2861,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2594,deploy,deploy,2594,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,".2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ----------",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3769,deploy,deploy,3769,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,".2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3502,deploy,deploy,3502,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1116,deploy,deploy,1116,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,.VSI Format update,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1034:12,update,update,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/1034,1,['update'],['update']
Deployability,.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-n,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2556,deploy,deploy,2556,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-n,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2289,deploy,deploy,2289,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,.java:1029); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.pr,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6086,update,updateDefaultSelection,6086,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateDefaultSelection']
Deployability,".java:473); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/RK_HE.ptif; INFO: TiffDelegateReader initializing /home/joelrv/Downloads/RK_HE.ptif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/RK_HE.ptif; ERROR: QuPath exception; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(IntegerInterleavedRaster.java:267); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:540); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:3243,update,update,3243,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['update']
Deployability,.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:7836,update,updateSuggestedOverlayColorFromThumbnail,7836,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2714,deploy,deploy,2714,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2447,deploy,deploy,2447,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-native,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2089,deploy,deploy,2089,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-native,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1822,deploy,deploy,1822,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 1000",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3544,deploy,deploy,3544,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.mai",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3277,deploy,deploy,3277,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupat,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1616,deploy,deploy,1616,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupat,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1349,deploy,deploy,1349,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oam,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2796,deploy,deploy,2796,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2529,deploy,deploy,2529,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ------------------------------------------------------------------------------",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3838,deploy,deploy,3838,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3571,deploy,deploy,3571,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1687,deploy,deploy,1687,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1420,deploy,deploy,1420,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predic",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1363,release,releases,1363,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['release'],['releases']
Deployability,0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/b,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1819,deploy,deploy,1819,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/b,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1552,deploy,deploy,1552,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"1 is clearly wrong to me; should probably be equivalent to selecting the outer rectangle, and definitely not throw a concurrent exception (whether or not it throws another exception, or a warning about undefined behaviour is another question). I think as much as it may not be intuitive, using the object hierarchy here is more flexible (ie, there may be situations where this is what people want to do, and as long as it's possible to toggle between, I tend to prefer flexibility). For 4, I can't decide if I should expect connections between disjoint annotations when both are selected. I think.... no...?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1590#issuecomment-2312272850:436,toggle,toggle,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/1590#issuecomment-2312272850,2,['toggle'],['toggle']
Deployability,"1. There seems to no longer be an 'extensions directory' in the `Preferences` menu; 2. When drag and dropping an extension, you are prompted whether to use the default location or to choose one. If you choose one, it does not work. Is this a conscious choice? For us in the facility, it is useful for the extensions to be shared among users, this avoids us from having to install them for everyone when as they use their own logins on our processing PCs.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298:372,install,install,372,https://qupath.github.io,https://github.com/qupath/qupath/issues/298,1,['install'],['install']
Deployability,"1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true,",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3699,deploy,deploy,3699,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codeha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3432,deploy,deploy,3432,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissue",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3462,deploy,deploy,3462,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.j",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3195,deploy,deploy,3195,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2015,deploy,deploy,2015,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1748,deploy,deploy,1748,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-os,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2490,deploy,deploy,2490,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-os,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2223,deploy,deploy,2223,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groov,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3150,deploy,deploy,3150,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2883,deploy,deploy,2883,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qu,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1459,deploy,deploy,1459,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qu,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1192,deploy,deploy,1192,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,":) I'd like to advise against it, but I can't think of a sufficiently good reason why not... and I imagine the extra pixel-setting step is pretty time-consuming. So you might want to try something like this...; ```groovy; // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. // If you want to trigger the 'Image' tab on the left to update, try setting a property to something different (and perhaps back again); type = getCurrentImageData().getImageType(); setImageType(null); setImageType(type); ```; If this is performed at an early stage (before any measurements/analysis), I can't think of a reason why it would go wrong... although if you find one, please do let me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424844216:507,update,update,507,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424844216,1,['update'],['update']
Deployability,:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:1985); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.clearSelection(TableView.java:2733); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2928); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:2736,update,updateItemsObserver,2736,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateItemsObserver']
Deployability,"; at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:493); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:457); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at qupath.lib.gui.viewer.tools.AbstractPathTool.setConstrainedAreaParent(AbstractPathTool.java:231); at qupath.lib.gui.viewer.tools.MoveTool.mousePressed(MoveTool.java:138); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$7(AbstractPathTool.java:441); ...; ```. [This is an example serialized ROI](https://github.com/qupath/qupath/files/4442109/broken_area_roi_Liver_Necroses_mf_hp_01_0.ser.tar.gz) that corresponds to this image (this kind of complex geometries happen often in our dataset, blame nature and our super-careful pathologists). ![Screenshot 2020-04-07 at 06 57 48](https://user-images.githubusercontent.com/642252/78631688-50432e00-789d-11ea-9de4-bfe43035cf3f.png). **Side note**. We are converting this using a small qupath-as-a-python-library wrapper we are putting together (our data scientists are not fluent in java/groovy and all our other data management and ML code is in python, so somewhat this makes sense). As part of it, we have a [simple conda recipe for qupath](https://github.com/sdvillal/qupath-feedstock) capable of both repackaging releases or building qupath from source (for this I went the rabbit whole of also repackaging OpenJDK 14 over the weekend) in a continuous delivery fashion. At the moment I'm publishing these qupath packages to [my personal conda channel](https://anaconda.org/sdvillal/qupath/files). Conda packages are kind of cool in the sense that conda is a nice package manager that allows to quickly swapping qupath versions and, for example, ensuring that native libraries do not have known bugs, like, for example, [this pixman bug that made so many demos look badly](https://github.com/qupath/qupath/issues/355).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434:2483,release,releases,2483,https://qupath.github.io,https://github.com/qupath/qupath/issues/434,2,"['continuous', 'release']","['continuous', 'releases']"
Deployability,"<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/20",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1798,install,install,1798,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['install'],['install']
Deployability,========; /lib64/libc.so.6(+0x81329)[0x7f087c503329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7effa4e62192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7effa4e625e3]; /lib64/libstdc++.so.6(+0x71555)[0x7effa4e63555]; /lib64/libpthread.so.0(+0x620b)[0x7f087be4520b]; /lib64/libstdc++.so.6(+0x715a1)[0x7effa4e635a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7effa4e635e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7effa4e6043c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7efeb6536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f087cd659c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f087cd6a59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f087cd69b8b]; /lib64/libdl.so.2(+0xfab)[0x7f087cb52fab]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/libdl.so.2(+0x15ad)[0x7f087cb535ad]; /lib64/libdl.so.2(dlopen+0x31)[0x7f087cb53041]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57924)[0x7f087b494924]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(+0xc57a5a)[0x7f087b494a5a]; /scratch3/downloads/QuPath/lib/runtime/lib/server/libjvm.so(JVM_LoadLibrary+0xbb)[0x7f087b169d6b]; /scratch3/downloads/QuPath/lib/runtime/lib/libjava.so(Java_jdk_internal_loader_NativeLibraries_load+0x17f)[0x7f087915427f]; [0x7f0862860bbb]; ======= Memory map: ========; 416a7000-416a9000 r-xs 00000000 00:04 19971786 /memfd:/.glXXXXXX (deleted); 419dd000-41a8c000 rw-p 00000000 00:00 0 . ```. full error trace here https://pastebin.com/raw/qZy5Vb5d . ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core. ```,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:3013,release,release,3013,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,2,"['Release', 'release']","['Release', 'release']"
Deployability,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-932797893:370,install,install,370,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893,1,['install'],['install']
Deployability,"> > > Yes, looks good to me!; > > > The pull request was updated; > ; > How should I set the min width / height now on the QuPath side?. `logviewer.getWidth()` and `logviewer.getHeight()` should work",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731204742:57,update,updated,57,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731204742,1,['update'],['updated']
Deployability,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1247,update,update,1247,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724,1,['update'],['update']
Deployability,"> > Yes, looks good to me!; > The pull request was updated. How should I set the min width / height now on the QuPath side?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731192852:51,update,updated,51,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731192852,1,['update'],['updated']
Deployability,"> @One-sixth this sounds like a duplicate of #904; > ; > The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them. Thanks a lot, problem solved.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-1072298270:115,release,release,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072298270,1,['release'],['release']
Deployability,"> @oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs).; > ; > You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images; > ; > Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to _know_ in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes.; > ; > Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution.; > ; > If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be. Thanks. It makes perfect sense. I think dropping the pop-up and clarifying this label image is available under master is likely a safer way to go. Unless my issue is very rare.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732318132:146,install,installed,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732318132,1,['install'],['installed']
Deployability,"> As you've likely seen, the values should persist when the image is closed/reopened within the same QuPath session, but not when QuPath is reopened. Hi! @petebankhead I was just wondering if there's been any updates to this thread? Is there a way to save the max/min values to be used once QuPath is reopened - for example to apply these settings to an entire project?. Thank you,. belliveau13",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453632278:209,update,updates,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453632278,1,['update'],['updates']
Deployability,"> By 'true dimensions' I mean the pixel dimensions stored in the raw file. I'm curious where you get these from, because I can't find them in the `.ini` file associated with .mrxs. `tiffinfo` isn't really relevant here, since it can only get from a tiff what was written there during the conversion process... and if OpenSlide was used to help convert the file without cropping, then the tiff dimensions will inevitably agree. `tiffinfo` is meaningful for .scn because the original format itself is tiff-based, so no conversion is needed. As shown in that example, it's possible that the true dimensions stored in the original file are the ones you get *after* cropping with OpenSlide's bounds, not before. I can't check the dimensions of any .mrxs image with other software as I don't have any viewer for mrxs files that isn't using OpenSlide (and ImageScope failed to open it). There is supposedly a free viewer from the company behind the .mrxs format, but it requires too much personal info to install so I don't want to use it. There are some [links here](https://qupath.readthedocs.io/en/0.4/docs/intro/formats.html#mrxs-3d-histech) that may help give some idea what it's not exactly my favorite file format for whole slide scans. I have seen examples of mrxs images where failing to crop results in very excessive padding (and the associated computational problems), so I still thing cropping / avoiding padding is the more appropriate choice for QuPath to make as a default... and the .scn example demonstrates that it's the right choice there. In conclusion, it sounds like:; * QuPath isn't doing anything weird or buggy - it's behaving as it should here; * You can use QuPath with your pyramidal tiffs, no matter how they are generated (as long as they can be opened by either OpenSlide and Bio-Formats); * You can use QuPath with the mrxs images used to generate tiffs if you do **one** of the following; * generate the tiffs to give the cropped/unpadded region, e.g.; * using [`libvips` an",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136:998,install,install,998,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136,2,['install'],['install']
Deployability,"> Converting to composite works. Is it an option to let QuPath do this automatically when the image type is set to Fluorescence? . I'm afraid not, QuPath doesn't really allow you to modify the image in any way, so changes like this are difficult. Batch conversion in ImageJ is the easiest 'fix' I can think of. The code used to make measurements with StarDist is a lot more generic than the code for the built-in cell detection... but I overlooked the RGB problem since I didn't have any images quite like that. Good to know about it now so we can fix it before the next release. > Thanks for the great program. We like QuPath a lot!. I'm glad! If you haven't already, it would be great if you could fill in the [user survey](https://edinburgh.onlinesurveys.ac.uk/qupath-user-survey-2021) - and please share it with anyone else you know uses the software!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/686#issuecomment-804259530:571,release,release,571,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804259530,1,['release'],['release']
Deployability,"> Could you provide an example script showing how it should be used please?. You can find a script using it [here](https://forum.image.sc/t/add-additional-channel-in-fluorescence-image-after-scanning/99174/16). I think it's simple enough not to change `TransformedServerBuilder`. > Including the example as a comment here is fine - and we should link to this issue in the CHANGELOG for anyone who wishes to read more. Updated in last commit. > Also: did anything change in the JSON serialization that could have compatibility concerns, i.e. if someone has stored an image in a project using ColorTransform in v0.5.1, can we expect it to work here?. No, the behaviour of the existing classes didn't change.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1566#issuecomment-2260011491:418,Update,Updated,418,https://qupath.github.io,https://github.com/qupath/qupath/pull/1566#issuecomment-2260011491,1,['Update'],['Updated']
Deployability,"> Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2. Yes I just realized a few minutes ago that it was the Weka extention that might have been causing the problem, which it was.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632432142:74,update,updated,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632432142,1,['update'],['updated']
Deployability,"> Hmmm, is this something we should address through JNA?. Not sure honestly, in retrospect maybe respecting people's installed OpenSlide version is good, only falling back on the version we bundle if we have to? But at the moment it's a bit backwards, with the apt version behind ours. > In any case, it seems to be working fine here (just tried running from Gradle on M1, and both the x86_64 and aarch64 builds were working) - so I think that's good news for making the native release, or we can stick with the versioned snapshot for now if you prefer. Great, I want to make sure the main artifact (without qualifiers) includes everything, and to include the sources on maven, will do that before the main release. > My guess is that taking the licenses from the Windows build should be sufficient, or is anything radically different / missing if we do that?. I *think* the licenses should be the same across versions now for the most part - the extra windows libraries are removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764471338:117,install,installed,117,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764471338,3,"['install', 'release']","['installed', 'release']"
Deployability,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431978:203,UPDATE,UPDATE,203,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978,2,"['UPDATE', 'install']","['UPDATE', 'installed']"
Deployability,"> I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under _View &rarr; Show log_ when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the [step by step instructions](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension)... but it shouldn't be necessary for standard .svs files.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-410954902:752,update,updates,752,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-410954902,4,"['install', 'update']","['install', 'updates']"
Deployability,"> I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. I agree, this feels a bit aggressive to me. If the existing copy may not be atomic, I'd rather try to implement an atomic version than to switch to a ""definitely not atomic"" version. > If atomicity of the operation is what worries you, i could implement a method that does it safely, very similarly to what you do with .qpproj files. This sounds good to me, it's important for obvious reasons that user data operations are done as safely as possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126:285,release,releases,285,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126,1,['release'],['releases']
Deployability,"> I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. Hmmm, but I don't think it does? At least there's nothing in QuPath to intentionally do that. The only thing I can think of is that the 'user' is somehow remembered with the .msi from the installation... but I don't know if that makes sense. The Windows packages are created using `jpackage`, which in turn uses Wix toolset - so any surprising behavior may originate there. I remain confused and unconvinced that QuPath is doing anything odd, since it seems to me there *must* be other steps involved that aren't included in your PDF (because it doesn't talk about installing CellPose) *and/or* the path is coming from some the preferences from some prior installation. There won't be an extensions folder set if you have a completely clean QuPath installation with no lingering preferences*. And if you've set anything in the preferences, then that should affect the .msi and .zip in exactly the same way. *-I guess optionally removing the preferences when uninstalling QuPath might be handy, but I don't think `jpackage` offers that. > From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. Sounds possible. In case it helps investigate, the preferences should be found in the Windows registry under; ```; HKEY_CURRENT_USER/SOFTWARE/JavaSoft/Prefs/io.github.qupath/0.3/; ```. Again, this should be the same regardless of whether the .msi or .zip is used.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302544432:74,install,installation,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302544432,8,['install'],"['installation', 'installed', 'installing']"
Deployability,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527239383:76,install,installation,76,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383,3,"['Update', 'install', 'integrat']","['Update', 'installation', 'integrated']"
Deployability,"> Is there any reason you need to build from source, rather than use the pre-built binaries?. I'd like to get stardist working eventually. I get the same error when building it with tensorflow too but I always tried without that first. And when I run `build/dist/QuPath-0.2.0-m12/bin/QuPath-0.2.0-m12` after the failed build I get `Warning: Could not load Pointer: java.lang.UnsatisfiedLinkError: jnijavacpp (Not found in java.library.path)` followed by a segfault. The following ticket from just yesterday might be the same issue: https://github.com/bytedeco/javacpp/issues/399 and the latest commit there is about gradle too: https://github.com/bytedeco/javacpp/commit/3189a117080ca63ad93c6427cd367ed7395d5103 These might all be red herrings of course, I have very little experience with java, so I can't tell. . Looking at the stack trace this UnsatisfiedLinkError is coming from the `installWand` method (`Loader.load(opencv_core.class);`), which I guess is expected.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633285245:888,install,installWand,888,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633285245,1,['install'],['installWand']
Deployability,"> Is this a feature anyone really wants?. The answer to that is almost always ""yes""; the better question is whether it is worthwhile to implement given the refactoring/maintenance burden it entails. > Is it likely to be more helpful or confusing for new users?. It seems like the sort of thing that would be confusing if done accidentally, so we should try to make that difficult if possible, but as Leo says in imaging software it's common to have multiple images open. > Detaching one viewer (and leaving the rest of the 'viewer grid' intact). Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. > Breaking up the UI entirely, so that there is no longer a grid and instead we have separate windows (including for the toolbar and analysis pane, more like ImageJ). It seems to me like at least some UI elements should be broken up across windows. For example I'd want to be able to view/edit the object hierarchy in each image separately (e.g. for training classifiers). If we wanted to emulate the other mode you described, then being able to hide UI elements would be a good start. > Is there a need to have the same image open in multiple viewers? . Probably a natural behaviour, as long as we lock the imageData when a viewer is interacting with it. There's a related issue in here to improve support for QuPath windows in tiling window managers, but I suspect I'm the only person who cares about that right now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939:598,toggle,toggles,598,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708675939,1,['toggle'],['toggles']
Deployability,"> It is a slightly scary change to make since it is so core. Yes, i get it. It's better being cautious here!. > When ImageServer metadata is written in a project and when it isn't (I see it missing sometimes, which has previously been irrelevant since it's generated when the ImageServer is built... but becomes much more important if the server isn't necessarily built). what I would say that in that case it would load the server, read the metadata and write them in the `.qpproj` file for future accesses. I wouldn't assure that `ImageData.getServerMetadata()` never loads the image server. It avoids it as long as it is possible, otherwise it will. > What happens when a script changes the metadata, but the server itself hasn't been read (e.g. setting channel names or pixel size). Again, if `ImageData.updateServerMetadata()` i would actually load the server()+update `qpproj` file. Avoid doing it lazily, as that would easily lead to unexpected states for the users. > How exceptions are handled when lazy loading fails. What's wrong in behaving the same as when an exception occurs while creating an `ImageServer`?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2271091629:808,update,updateServerMetadata,808,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2271091629,2,['update'],"['update', 'updateServerMetadata']"
Deployability,"> It would be interesting to compare it with applyColorTransforms() where you pass all the ColorTransform objects and avoid concatChannels(). Using `concatChannels`, the JSON entry makes 430 lines, while with only `applyColorTransforms` the JSON entry makes 195 lines. I'll update the Image.sc script with only `applyColorTransforms`. > I suggest providing both TransformedServerBuilder.applyColorTransforms(ColorTransform... transforms) and TransformedServerBuilder.applyColorTransforms(Collection<? extends ColorTransform> transforms) for convenience. Added in last commit. > What is the name given to any new channel generated in this way?. * If the channel names are provided with the coefficients, it's the linear combination with the channel names, for example `""-0.25*PDL1 + -0.15*FoxP3 + 1.0*CD8""`; * If only the coefficients are provided, it's the linear combination with `""channel"" + channelIndex` as channel names, for example `""-0.25*channel1 + -0.15*channel3 + 1.0*channel4""`",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1566#issuecomment-2260446815:274,update,update,274,https://qupath.github.io,https://github.com/qupath/qupath/pull/1566#issuecomment-2260446815,1,['update'],['update']
Deployability,"> Looks great - is there any way to run it before merging? I think it's possible if it's on a branch of this repo, but not a fork. Here's what it makes on my fork: https://github.com/alanocallaghan/qupath/releases/tag/v0.5.1-SNAPSHOT. If I dispatch it again without making any changes, it just makes another release. There's no issue with tag collision until you try to publish both. I did update the release code so it points at the specific commit SHA that the builds correspond to, though, rather than a moving target (eg `main`). > Is it also possible to separate out the draft of the release - or check what happens if running twice without a change of version?. Yes, I rearranged the workflows so that jpackage and draft release are separate workflows (though ofc draft release does jpackage first). So you can just build binaries, or build and draft a release. Any other wishlist ideas for CI while I'm at it?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943694811:205,release,releases,205,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943694811,8,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"> My best guess is that it's related to user permissions. But I really don't know - I haven't seen this either.; > ; > There's also one obscure tip that might be relevant at the very bottom of [this page](https://github.com/qupath/qupath/wiki/Paths-&-configuration). Basically, inside the QuPath installation there should be a file `QuPath.cfg`. You could try opening that in a plain text editor and on a line below [JVMOptions] adding `-Xmx8G` for 8 GB (for example).; > ; > I haven't tested this to check it works, but then my memory settings are being read from my preferences so I can't replicate the exact problem. I had a look in the QuPath.cfg file and reallocated the memory from 50% to 100%. ; This worked. Thanks for the help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-644769313:251,configurat,configuration,251,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-644769313,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"> No, it just picks up my system libopenslide.so before the Jar version, which I think is not ideal. Hmmm, is this something we should address through JNA?. In any case, it seems to be working fine here (just tried running from Gradle on M1, and both the x86_64 and aarch64 builds were working) - so I think that's good news for making the native release, or we can stick with the versioned snapshot for now if you prefer. The aim is to get rc2 out shortly, but the final v0.5.0 won't be until next week at least. We'll also need to update the info at https://github.com/qupath/qupath/tree/main/qupath-extension-openslide/src/main/resources/licenses/OpenSlide. My guess is that taking the licenses from the Windows build should be sufficient, or is anything radically different / missing if we do that?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764462455:347,release,release,347,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764462455,2,"['release', 'update']","['release', 'update']"
Deployability,"> One easy way. Do you have any advice on how to streamline that, while using GitHub releases?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1198350412:85,release,releases,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1198350412,1,['release'],['releases']
Deployability,"> So solving this will likely require any any info you can get from VisualVM's CPU sampling. Since I wasn't sure which outputs to provide you with from VisualVM, I made a quick recording of the profiling as it ran while QuPath was loading the project: https://youtu.be/_GHn556qEAk. I wasn't able to get the profiler to work, despite installing a 64 bit version of Java 17, but the sampler and all other tools seemed to work. I've uploaded the thread and heap dumps to: https://drive.google.com/drive/folders/1akRolrnUwbryc3YMSRR_aXhJ5H6AgBWO?usp=sharing. > QuPath shouldn't be regenerating thumbnails when a project is opened, and it shouldn't be remembering anything (other than the preferences) across relaunches.; v0.4.0 should generating missing thumbnails only, and do so in a background thread that doesn't block. Both v0.3 and v0.4 will try to access the thumbnail images in the project when it is opened; this could potentially block the UI, because it needs to be done in the UI thread (and there can only be one). However these should generally be small JPEGs so I've never known that to be a problem. Therefore I'd only expect this to be troublesome if there is some other reason why access to the disk is exceptionally slow. Based on my limited interpretation of the VisualVM results, I'd say that you're right. The lowest-level QuPath method I could find which was responsible for the ~4 minute load time is `qupath.lib.io.UriUpdater$SingleUriItem.getStatus()` which invokes `java.nio.file.File.exists()`. ![image](https://user-images.githubusercontent.com/52012166/203870112-0ecd0822-7efd-4360-af2e-0858b8a03df7.png). My guess is that there is some kind of checking going on, comparing the URI listed in the project, with the file path, to verify that each project entry is pointing to the correct image, and that's what's taking up CPU time. > I couldn't really tell what was going on in the video, partly because the analysis pane was closed - and when the image was opened I couldn't ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1326872166:333,install,installing,333,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1326872166,1,['install'],['installing']
Deployability,"> Sounds good, as long as it doesn't enforce any tag until we actually release. Yeah, was used to software where version bumps are much more liberal. > Also, if you want to take it on... I think this PR fails because the two mac builds become 'pkg' and only one survives. Will have a look now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935866859:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935866859,1,['release'],['release']
Deployability,"> The stardist extension hasn't been updated for QuPath 0.6 yet. I'd suggest one of these three options:; > ; > 1. Test stardist using QuPath 0.5.1; > 2. Build the latest stardist extension from source, ideally this branch: [Update for QuPath v0.6 qupath-extension-stardist#36](https://github.com/qupath/qupath-extension-stardist/pull/36); > 3. Use the Jar file attached below in QuPath 0.6.0-rc1.; > ; > [qupath-extension-stardist-0.6.0-SNAPSHOT.zip](https://github.com/user-attachments/files/16977870/qupath-extension-stardist-0.6.0-SNAPSHOT.zip). Thanks @alanocallaghan . The new jar solved the issue. ; (QP 0.5.1 is working well with Stardist extension 0.5.0). best; Ofra",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2346029465:37,update,updated,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2346029465,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"> To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the project.qpproj file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a Recent Projects option to reopen the last project. Thanks for the suggestion, we will be doing that then. I apologize for the use of GitHub issues. I really thought that for some reason it was not taking the relative paths in windows and not that the feature had been removed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623989433:16,update,update,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623989433,2,['update'],['update']
Deployability,"> Would it be possible to avoid duplicating the shortcuts in the properties files, and instead extract them directly from the Action accelerator property?. Yes, it's now the case. > A complication I see is that making the tooltip text auto-update if the accelerator or action 'long description' is changed - but this is not an essential feature (since it should be rare). Right now I have the impression that the tooltip text will auto-update if the language changes. Is that enough?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1463#issuecomment-1941752636:240,update,update,240,https://qupath.github.io,https://github.com/qupath/qupath/pull/1463#issuecomment-1941752636,2,['update'],['update']
Deployability,"> Yes, looks good to me!. The pull request was updated",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731182428:47,update,updated,47,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731182428,1,['update'],['updated']
Deployability,"> is there anything conventional about where the project/images are stored?. The project is stored on the C drive, same physical SSD as the OS. The images are stored on the E drive, a separate 2TB SSD. Both have at least 300Gb of free space. The update check is printed in the log and occurs prior to loading any project, so I don't suspect it's affecting project loading. Will check out VisualVM and see if I can use it to monitor the initial project creation step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212:246,update,update,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212,1,['update'],['update']
Deployability,"> the same first user credentials were used to install both QuPath's. I guess maybe that's the issue. . QuPath is using Java's `Preferences` class: https://docs.oracle.com/en/java/javase/11/docs/api/java.prefs/java/util/prefs/Preferences.html. Specifically, it's going through `Preferences.userRoot()`, which according to Java's docs should be *'the root preference node for the calling user'*: https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/prefs/PathPrefs.java#L475. I think the Cellpose extension is doing the same. I've no idea what miniconda does, or if it's relevant here. I'm not sure what happens when the credentials used for installation are different from those used to run the software - but providing an .exe in addition to an .msi is intended to help in scenarios when one isn't suitable (usually a lack of admin access for installation). Based on all that, do you still think QuPath should be doing something differently?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302330711:47,install,install,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302330711,3,['install'],"['install', 'installation']"
Deployability,">Does setting it to any other location fail, or does it fail only if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. Setting it to another location simply does not load the extension. But I have not tested whether this is because QuPath does not read the preference (which cannot be set anymore in the Preferences menu).; This was the case when the extension was going to be added to a local disk. No network drive. > Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... We created an extension which you can found here https://github.com/BIOP/qupath-biop-extensions which we have been using sucessfully (and which is not updated to work with our little modifications to QuPath 0.2.2-m2",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-476258374:839,update,updated,839,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476258374,2,['update'],['updated']
Deployability,">I think this implies that the bug only occurs when deserializing a PathClass written using the 'earlier' syntax, and doesn't affect a PathClass that was written by v0.4 itself.; Does that sound correct?. Yeah, I think that is a correct deduction!. > In the meantime I'm keen to understand when the bug strikes. This bug occurs when I open an image in a project with annotations with derived `PathClass`. These sort of project/images are made with [ABBA's extension](https://github.com/BIOP/qupath-extension-abba), however the bug occurs when opening such images in a QuPath v0.4.3 installation without installed extensions, too.; I am not a developer of ABBA extension, but I'm willing to investigate if you think it's necessary. I just need to understand where the serialized `PathClass`es of a project are saved to file!. > I'm on leave at the moment, but will explore the PR in more detail in a couple of weeks, and before the next QuPath release. Thanks a ton!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1670347461:582,install,installation,582,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1670347461,3,"['install', 'release']","['installation', 'installed', 'release']"
Deployability,">it seems that the issue is normally related to the driver. You're absolutely correct, after updating my GeForce Game Ready driver to 527.37, which is the latest release at the time of posting this comment, I no longer have the issue, and I'm able to segment cells, confirming that the GPU is being used based on VRAM. Unless anyone else is still having this issue after updating their drivers, I'll close this as resolved. Thanks again for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341741875:162,release,release,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341741875,1,['release'],['release']
Deployability,@AnesthesiaNeurotoxicity did you install the _Visual Studio 2015 C++ Redistributable_ as specified in the [link I posted above](https://github.com/qupath/qupath/issues/330#issuecomment-501853968)?. The Bio-Formats website mentions the need for this to handle CZI files with JPEG-XR compression: https://docs.openmicroscopy.org/bio-formats/6.1.0/formats/zeiss-czi.html,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330#issuecomment-501900222:33,install,install,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/330#issuecomment-501900222,1,['install'],['install']
Deployability,"@DavidMHaumann Sorry I wasn't clear on the colour deconv subject. I was generally speaking on the color space, RGB, HSV, LUV but I was also thinking about standart HE and immunostains. Your case might be difficult. . I was sure SimpleTissueDetection2 was not using ColourDeconv but after looking at #93 I know a bit more what is using. For me it is working fine but I'm working with very standard stains. . However, I'm working also on some special stains where deconvolution is necessary and of added value, especially with regard to the cell-object segmentation that would follow. The link to ImageJ is very useful because you can send the region to ImageJ , deconvolve, normalize, analyse and return the objects ROI back to qupath interface for further visual inspection/analysis. There is a plugin on the embedded ImageJ installation with QuPath that allows the integration of regions from ImageJ to QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/124#issuecomment-352399785:825,install,installation,825,https://qupath.github.io,https://github.com/qupath/qupath/issues/124#issuecomment-352399785,4,"['install', 'integrat']","['installation', 'integration']"
Deployability,"@JoelRV It's not too strange, much of the image-reading code has been completely rewritten and I can see the change where the problem occurs. Building v0.2.0 with JDK 11 isn't documented anywhere yet, but it is more involved than v0.1.3 (mostly because OpenJDK 11 is needed along a pre-release version of jpackage, downloaded separately, with paths set accordingly). If 'the same error' means a build error, then I'd guess that's why.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472857161:286,release,release,286,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472857161,1,['release'],['release']
Deployability,"@One-sixth this sounds like a duplicate of https://github.com/qupath/qupath/issues/904. The underlying bug has been fixed, but needs a new QuPath release. In the meantime, you can [add your images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) to open them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-1072251008:146,release,release,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-1072251008,1,['release'],['release']
Deployability,"@ajaysingh096 thanks, I've identified the source of the problem as being the same as https://github.com/qupath/qupath/issues/894 - although it appears in a slightly different way (just opening a low-res image rather than freezing). It was also discussed [here](https://forum.image.sc/t/problem-about-opening-ndpis-files-in-qupath-v0-3-1/62184). The good news it that this means the bug has already been fixed, and the fix will be included in the next QuPath release. In the meantime, it should be possible to open the images in QuPath as long as you [add them to a project first](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065833035:458,release,release,458,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065833035,1,['release'],['release']
Deployability,"@ajerusalmi the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:; * delete the Weka extension; to find its location, go to *Edit &rarr; Preferences* and check the 'QuPath user directory'; * use *Edit &rarr; Reset preferences* to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see https://github.com/qupath/qupath/issues/454",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620375806:64,install,installed,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620375806,1,['install'],['installed']
Deployability,"@alanocallaghan @Rylern @finglis can anyone think of a reason not to do this...?. The main goal is to be able to set awkward DJL/CUDA options from a command line (e.g. .bat file or shell script), rather than needing configuration later. May or may not be successful; if it works, it may make https://github.com/qupath/qupath/pull/1429 unnecessary (but probably worth keeping anyway).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1430#issuecomment-1833531086:216,configurat,configuration,216,https://qupath.github.io,https://github.com/qupath/qupath/pull/1430#issuecomment-1833531086,1,['configurat'],['configuration']
Deployability,"@alanocallaghan @Rylern @finglis shall we merge this for now, then remember to make non-SNAPSHOT releases before v0.6.0?. Otherwise we need to test things by using `includeBuild` for `qupath-fxtras` and `log-viewer`, or else commit to new releases for them now (but there may be more changes to come).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1509#issuecomment-2086262683:97,release,releases,97,https://qupath.github.io,https://github.com/qupath/qupath/pull/1509#issuecomment-2086262683,2,['release'],['releases']
Deployability,@andrewjUTSW the right click + open did eventually help for me. I actually installed qupath once more and then I had to do the right click + open twice to get it to open. The first time using right click+open I got the same message about the sw being damaged. The second time I got the same message but it had the option to open the app this time. I am currently running Ventura 13.1 and today I worked with Qupath 0.4.2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307:75,install,installed,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307,1,['install'],['installed']
Deployability,"@balazs-endresz looking again at your exception, I see a reference to `J9Generic_Signal_Number`. This causes me to guess that you're using OpenJ9 rather than Hotspot (you can get either from AdoptOpenJDK): https://www.eclipse.org/openj9/oj9_faq.html. I've only tested things using Hotspot (the default with OpenJDK); conceivably there might be some OpenJ9-related problem I've not seen before.. In any case, v0.2.1 is also now released - I'd be interested to know if you experience the same exceptions there. It would be great if you or @gawells could confirm if there remains any fixable issue here, or if it can be closed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-648053127:427,release,released,427,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648053127,1,['release'],['released']
Deployability,"@bpmed12 can you be more specific regarding what exactly you have tried, what does/does not work and any error messages you see?. Note that the 'image list' (under the 'Image' tab) does not exist in m3. So your issue may be different. Also not that the Bio-Formats extension must *not* be installed with m3 - it is included by default. You may still need to install the visual studio redistributable as specified at https://docs.openmicroscopy.org/bio-formats/6.1.1/formats/zeiss-czi.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-517719018:289,install,installed,289,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-517719018,2,['install'],"['install', 'installed']"
Deployability,"@brijeshwar2002 you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606409716:164,release,release,164,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606409716,1,['release'],['release']
Deployability,"@erexhepa good that the conversion is working!. Regarding CellProfiler, is interaction between it and QuPath something you'd need/want? If so, it would be good to add a new feature request here to draw attention to it, and maybe try to spark some discussion on how it should look. I personally never managed to get Javabridge set up successfully, and I didn't have any sufficiently important CellProfiler pipelines to work further on the integration myself. But it should be manageable in a few ways. The easiest might be to write out temporary image files (with Groovy) and then launch CellProfiler from the command line, before reading back in the results. However, early next year I plan to work more on streamlining the interaction between QuPath and Python, in which case the use of [CellProfiler as a Python package](https://github.com/CellProfiler/CellProfiler/wiki/CellProfiler-as-a-Python-package) could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350202064:405,pipeline,pipelines,405,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350202064,2,"['integrat', 'pipeline']","['integration', 'pipelines']"
Deployability,"@finglis on tenterhooks here, any updates? I've tried it on two different Macs (Intel & Apple Silicon) and it worked on both. What is not positive, and could it be permissions or OS-related?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748617650:34,update,updates,34,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748617650,1,['update'],['updates']
Deployability,"@kwiechen thanks for the suggestion, I haven't looked into this - what would it involve and what would it solve?; Currently, 'official' Windows builds are available for OpenSlide and seem to work fine. It is portability on Mac/Linux that poses the biggest problem (especially since pixman included in the last LTS Ubuntu release causes trouble).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761851656:321,release,release,321,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761851656,1,['release'],['release']
Deployability,"@martyna90 Could you copy & paste the text of the error, or else scroll up a bit when making the screenshot? The bit with the most valuable information is usually near the top of the long list of 'at' statements; I'd need to see the first lines to better understand the problem. Thanks!. As far as I recall, VSI is *only* supported through Bio-Formats, but this is built-in with v0.2.0-m8. If you are using v0.2.0-m8, but still have the *old* Bio-Formats extension installed (for v0.1.2), then I believe both may fail to work properly. In case that's the issue, you can remove the Bio-Formats extension .jar files from QuPath's extensions folder, or use *Edit &rarr; Reset preferences* to reset the extensions folder itself in v0.2.0-m8. The second option leaves things unchanged for v0.1.2, in case you need to be able to use both versions on the same computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-577108438:465,install,installed,465,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-577108438,1,['install'],['installed']
Deployability,"@mezwick Hashes aren't currently generated or made available. Making a release remains a fairly laborious and manual process. Although the builds themselves are now generated automatically using GitHub Actions, I have to download and check these run on each platform and then upload again. And write all the release notes, tag the version etc. There can also be some extra renaming required, since `jpackage` (used for the build) has some awkwardness connected to artefact naming and 0.x.x versions that affects some platforms but not others (e.g. I think macOS forbids 0.x.x versions, so this needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,5,"['Release', 'install', 'release']","['Release', 'installed', 'release']"
Deployability,"@mmfalco I've just checked out the [JavaFX 17 release note](https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md) and saw this fix: https://bugs.openjdk.java.net/browse/JDK-8248126. Currently QuPath is using JavaFX 16, although if you'd like to try it with 17 you'd probably only need to change one line [here](https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.common-conventions.gradle#L70), then build from source as described [here](https://qupath.readthedocs.io/en/stable/docs/reference/building.html). QuPath v0.4.x will use Java/JavaFX 17. I'm a little tempted to introduce JavaFX 17 already in v0.3.1, especially if it resolves this problem (and doesn't [break our own versioning rules](https://qupath.readthedocs.io/en/stable/docs/intro/versions.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/833#issuecomment-962152233:46,release,release,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-962152233,2,['release'],"['release', 'release-notes-']"
Deployability,"@oharismendy it sounds like in v0.2 the image is being opened with Bio-Formats. In v0.1.2 OpenSlide would have been used by default (unless you installed the Bio-Formats extension), and this flags specific images as label for a few formats (including .svs). You can choose the image reader when importing an image to a project: https://qupath.readthedocs.io/en/latest/docs/tutorials/projects.html#add-images. Because QuPath relies upon open source image readers that support a wide range of formats, it's difficult/impossible to *know* in all cases whether an image stored within a file as intended a 'full' image for analysis, label or macro image... particularly since different vendors write images in different ways, and we don't have specifications for the formats. It may be necessary for us to remove the label pop-up in the future, since it will inevitably fail to find a label sometimes sometimes. Misassigning a full image as a label is a big problem, since QuPath doesn't support any analysis on labels - therefore we need to err on the side of caution. If you can share an example image along with details of how it was written (e.g. software/scanner) then we might be able to add some logic to handle this specific case but otherwise we can only guess what a fix might be.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/643#issuecomment-732091427:144,install,installed,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/643#issuecomment-732091427,1,['install'],['installed']
Deployability,"@petebankhead : I can certainly understand you need to carefully balance workload. As our organization is somewhat rigorous regarding this topic I have looked into things further and it seems you mercifully use an accessible installer solution and as such I have been able to build it from source in full. This way, we can perform static code review and use an internally built binary, currently removing the need to obtain the hash from you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208463614:225,install,installer,225,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208463614,1,['install'],['installer']
Deployability,"@petebankhead I use QuPath mostly on Win10/7 with or without GPU. I usually try to always install and use the most recent release version. You have made it very easy since version 0.2.X (by maintaining backward compatibility for projects). It is nice to have the msi installer and the ability to install multiple versions for advanced users. Occasionally that has created confusions for some of our users who are not so familiar or up-to-date with QuPath development and; not realizing consequences of working with the incorrect version. Since it is a per user install, It would be okay if the installer overwrites/upgrades the existing installation instead of creating a parallel install. In the event I do need a different version (Old or recent Snapshot) I can always use the zip version instead of having multiple versions installed. I do not have clear understanding of software versioning but is there any specific reason you are not using 1.X.X version for the next release! and not 0.X.X ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-805880198:90,install,install,90,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805880198,22,"['install', 'release', 'upgrade']","['install', 'installation', 'installed', 'installer', 'release', 'upgrades']"
Deployability,"@petebankhead thank you for tagging me on these changes. . > Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I agree. > My proposal is to change **Unique ID** to become **Case ID**. You have my upvote for this. Not necessarily better but the alternative I could think of is **Subject ID** but it has a similar vibe to **Patient ID**. > Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it, but it means that IDs saved in QuPath v0.4.0 won't be recognized in older versions. If these changes mean less confusing and clear APIs in the future, then, the sooner we address them, the fewer projects will be affected. . I personally do not have a reason to go back to 0.3.X once I create a project in 0.4.0X - because I believe all the commands that were present in 0.3.0X will be available in 0.4.0X. Please correct me if I am wrong - Are there any methods/workflows that will be dropped in 0.4.0? It would be easy to make a decision if we could identify potential reasons for someone to want to go back to 0.3.X - besides the fact that not everyone is running the most up-to-date version of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568:713,update,update,713,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1303784568,2,['update'],['update']
Deployability,"@petebankhead, do you know an approach to run QuPath as a script for 0.3.0 version? In example, StarDist model worked in this way:; ```; ./QuPath/bin/QuPath script run_stardist.groovy -i OS-3.ndpi; ```; where `run_stardist.groovy` is a script from https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html. Now with StarDist as a separate JAR extensions, I have an error ""unable to resolve class qupath.ext.stardist.StarDist2D"". ---; **Update**: The following workaround looks fine for me. ```groovy; // import qupath.ext.stardist.StarDist2D; this.class.classLoader.addURL(new File(""qupath-extension-stardist-0.3.0.jar"").toURL());; def StarDist2D = Class.forName(""qupath.ext.stardist.StarDist2D"").newInstance();; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-919283605:446,Update,Update,446,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-919283605,1,['Update'],['Update']
Deployability,"@petebankhead, many thanks for such great progress and letting me know! I'll definitely take a look on current structure and update the proposal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-913405484:125,update,update,125,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-913405484,1,['update'],['update']
Deployability,@saudet could you please let me know how to do this in CentOS 7? ; gradle is installed in /opt/gradle,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095727131:77,install,installed,77,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095727131,1,['install'],['installed']
Deployability,"@saudet since my machine is CentOS 7, I decided to build the code from scratch (as you can see in my Stackoverflow error). Running what you mentioned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1022,release,release,1022,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['release'],['release']
Deployability,"@skalteis any updates? v0.2.0-m10 is now available, and should be capable of working with VisualVM directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-617732952:14,update,updates,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-617732952,1,['update'],['updates']
Deployability,"@yli-hallila did you spot any patterns when it happened?. Like, was it a high-resolution pixel classifier, and did the memory use accumulate over time?; Would it happen after 3 images, 30 images, or 300 images...?. I'm hoping that there is some place where I'm just failing to release memory used by OpenCV / JavaCPP, but I thought I'd tracked down where that was the case. The script does two things: clears the cache, and calls the garbage collector. If the thing that helps is clearing the cache, then that suggests to me that it is delaying (rather than solving) the problem - and there is probably still a leak somewhere. If the thing that helps is running the garbage collector then... I guess I'm confused, because I think that should happen before an out-of-memory error occurs anyway. I quite like hunting for leaks (as long as they are in code I can control), but here I'm not sure where exactly I should start.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498:277,release,release,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/1322#issuecomment-1715940498,2,['release'],['release']
Deployability,@zindy Do you mind if I close this and merge https://github.com/qupath/qupath/pull/676 in preparation for v0.3?; That would give time for anyone trying the dev branch to test it a bit before release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-797278645:191,release,release,191,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-797278645,1,['release'],['release']
Deployability,"A clean set of patches this time that fixes #648, fixes #649, fixes #650",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652:15,patch,patches,15,https://qupath.github.io,https://github.com/qupath/qupath/pull/652,1,['patch'],['patches']
Deployability,"A clean set of patches this time that fixes #648, fixes #649, fixes #650; This time, I have told GitHub that this patch is against the dev-0.3 branch.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/680:15,patch,patches,15,https://qupath.github.io,https://github.com/qupath/qupath/pull/680,2,['patch'],"['patch', 'patches']"
Deployability,"A lot of refactoring, with the aims:; * clear out a lot of legacy code; * improve the way commands are added/documented; * reduce the public API (so internal parts can be cleaned up later); * improve the javadocs. Two main noticeable changes:; * The command list now gives help text (currently as a tooltip) for most commands; * It is now possible to install new tools in the toolbar",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/441:351,install,install,351,https://qupath.github.io,https://github.com/qupath/qupath/pull/441,1,['install'],['install']
Deployability,"A proposal to fix #1487. The [`UndoRedoManager.hierarchyChanged()`](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L472) function is called each time the hierarchy changes and is supposed to update the `UndoRedoManager` state. However, when loading objects using `Import objects from file`, the `PathObjectHierarchyEvent` parameter of this function contains no changed objects (`PathObjectHierarchyEvent.getChangedObjects()` function). So, [this condition](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L474) is `true`, the event is ignored, and the `UndoRedoManager` doesn't update its state. This creates the issues described in #1487. Therefore, the issue is not coming from the `UndoRedoManager`, but from the function that created the event. The event is created in [`PathObjectHierarchy.addObjects()`](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-core/src/main/java/qupath/lib/objects/hierarchy/PathObjectHierarchy.java#L626). I'm sure there is reason behind it, but here a hierarchy changed event is emitted, instead of an object added event. This PR simply emits an object added event instead of a hierarchy changed event. The `PathObjectHierarchy.addObjects()` function add several objects, but in the PR only one object event is emitted. It seems to be enough still.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1578:287,update,update,287,https://qupath.github.io,https://github.com/qupath/qupath/pull/1578,2,['update'],['update']
Deployability,According to this - https://github.com/qupath/qupath/issues/270 - the issue may already be resolved in the latest milestone release. See https://qupath.github.io/QuPath-v0.2.0. Also potential duplicate of the (somewhat vague...) https://github.com/qupath/qupath/issues/273,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471602054:124,release,release,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471602054,1,['release'],['release']
Deployability,Add ROI.updatePlane(plane) method,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1053:8,update,updatePlane,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/1053,1,['update'],['updatePlane']
Deployability,"Add badge for number of downloads (all releases), downloads for latest release and DOI link.; ![image](https://user-images.githubusercontent.com/10900214/103023501-15ad1e80-451c-11eb-970f-87409de3e9df.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/656:39,release,releases,39,https://qupath.github.io,https://github.com/qupath/qupath/pull/656,2,['release'],"['release', 'releases']"
Deployability,"Adding superpixel support, among other updates",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/17:39,update,updates,39,https://qupath.github.io,https://github.com/qupath/qupath/pull/17,1,['update'],['updates']
Deployability,Adding/removing a class didn't update the dialog until it was relaunched (bug spotted by @lacan),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/883:31,update,update,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/883,1,['update'],['update']
Deployability,"Addresses https://forum.image.sc/t/please-help-us-test-the-qupath-v0-5-0-release-candidate/87976/12. If an extension can't be deleted, inform the user and ask if the directory should be opened for manual deletion. Previously, a 'success' message was shown even if the deletion had failed. I couldn't figure out a way to make the extension 'deletable' - although I vaguely recall @yli-hallila might know more about this.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1419:73,release,release-candidate,73,https://qupath.github.io,https://github.com/qupath/qupath/pull/1419,1,['release'],['release-candidate']
Deployability,"After installation you get an message ""Qupath"" is damaged and can't be opened. ![Screenshot 2023-02-07 at 11 56 23](https://user-images.githubusercontent.com/10047748/217226474-76131924-91e9-47a4-8478-0b8351d51e2f.png). Fix for now is control-click on QuPath Application and select Open",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1228:6,install,installation,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/1228,1,['install'],['installation']
Deployability,After working some time (can be anything from a few minutes to half an hour) the menus stop responding. The only fix for me is to save and restart the software. I've recently updated to the latest dev build and the issue persists here.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267:175,update,updated,175,https://qupath.github.io,https://github.com/qupath/qupath/issues/267,1,['update'],['updated']
Deployability,"Agree, think it's better to show things with missing class/measurement, imo showing them last is better but that could be a toggle",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588#issuecomment-2317256340:124,toggle,toggle,124,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588#issuecomment-2317256340,1,['toggle'],['toggle']
Deployability,"Ah ok, thanks for investigating - seems to be another of the `jpackage` changes. Fortunately, the packaging tool is [targeted for Java 16](http://openjdk.java.net/projects/jdk/16/) so should hopefully be stable then. I'm hesitant about merging this since it really requires a thorough investigation of everything that has changed with Java 15, tested across all platforms, and making a call about whether compatibility with Java 14 needs to be maintained (probably not - but in that case, more changes should be incorporated in the build.gradle to warn the user at build time). https://github.com/qupath/qupath/issues/615 is the issue intended to track this, but we aren't planning to explore this until our dev branch is a bit more stable and closer to a release. In the meantime, I updated the docs recently to [list Java 14 as required](https://qupath.readthedocs.io/en/latest/docs/reference/building.html#install-a-java-development-kit-jdk), for consistency across branches.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/640#issuecomment-727052962:756,release,release,756,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727052962,3,"['install', 'release', 'update']","['install-a-java-development-kit-jdk', 'release', 'updated']"
Deployability,"Ah ok, the prompt _should_ appear but it should be pre-populated with the correct URIs. However agreeing to the changes will result in the absolute paths being overwritten. Consequently, one might wish to copy the '.qpproj' file first if it's desirable to have a project file with both sets of absolute URIs - updating one and leaving the other untouched. This does however become more complicated if images are later added or removed for one project. This is the intended behavior, although would be good to discuss if there is a better choice. My concern with depending upon relative paths _only_ is that if the project moves - but images remain in the same place - then the project will also break. It becomes essential to move both together. Also, if the absolute paths are _not_ updated whenever relative paths 'work' then this means that QuPath needs to silently make adjustments to URIs - and _potentially_ could end up selecting a wrong image that happens to have the same name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346#issuecomment-518200990:784,update,updated,784,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518200990,1,['update'],['updated']
Deployability,"Ah ok, then I'm afraid I have no idea and no way to reproduce the problem. It is working for me on all my test systems (but I haven't got CentOS installed anywhere). I can't see any obvious clues to a problem within QuPath's code from the error. The versions of Java, JavaFX and jpackage have been updated for v0.3.0, not sure if that is related. One option would be to try [building from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) using a different JDK, or launch using `./gradlew run` (which would skip the jpackage part).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925047351:145,install,installed,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925047351,2,"['install', 'update']","['installed', 'updated']"
Deployability,"Ah ok, you might find shifting any native libraries (in the same way as the cfg file) can also do the job. The underlying problem is that the Java library path needs to be set to find `openslide-jni`. Usually this 'just works' because the necessary library is found within the 'current' directory at the time QuPath is launched (through whatever magic jpackage has applied to set the current directory). You can also specify the library path in the `.cfg` file... but that may be more complicated. You might need to install OpenSlide through a package manager too, thanks to a separate Linux-related problem regarding how sub-dependencies are found.... https://github.com/qupath/qupath/issues/629. Not sure how much sense that makes, and I haven't looked into what has changed in Linux - but the summary is that moving things around may well be the solution to get things going with Java 15.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725534079:516,install,install,516,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725534079,1,['install'],['install']
Deployability,"Ah you're right, sorry. I was mixing it up with the appearance whenever the buttons are inactive (because the extension can't be updated). When that is the case, the selection color impacts the button color... but it doesn't if the buttons are active. So the displays are consistent after all.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486#issuecomment-2258172093:129,update,updated,129,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486#issuecomment-2258172093,1,['update'],['updated']
Deployability,"Ah! Bleaching and rescanning changes things; what I'm currently working on *might* be exactly what you need. This is some related discussion on [Google Groups](https://groups.google.com/d/msg/qupath-users/XNdaWK_9Ex4/VKHAbBGDBAAJ). If you'd be interested in collaborating on this, and perhaps sharing some images to help me develop the tool to do what you need, please send me a message. I'm quite find-able on Twitter, ResearchGate or LinkedIn... or if you sign up to the QuPath Google Group I'll get a notification and can write to you directly. Otherwise I'll post a reply back here once I have something worth testing, but I haven't got an expected timeframe yet. . The CellProfiler bit is also interesting. If we can achieve the alignment then maybe this step wouldn't be necessary and everything could be done in QuPath. But if you do need more CellProfiler-specific functionality then it would be good to discuss if there's a way to help streamline that bit of the process too - since better integration with CellProfiler is something that has already come up (e.g. #123).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377167248:999,integrat,integration,999,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377167248,1,['integrat'],['integration']
Deployability,"Ah, I didn't realize there are two different kinds of java distributions! **It does work with Hotspot**, thank you!. For the record, on ubuntu, and similar distros the following should be enough to install java. Not having used java on linux before the adoptopenjdk site was a bit confusing to me. ```; wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -; sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/; # sudo apt remove adoptopenjdk-*; sudo apt install adoptopenjdk-14-hotspot; export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-hotspot-amd64/ # add to ~/.bashrc; ```. Before:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); Eclipse OpenJ9 VM AdoptOpenJDK (build openj9-0.20.0, JRE 14 Linux amd64-64-Bit 20200416_45 (JIT enabled, AOT enabled); OpenJ9 - 05fa2d361; OMR - d4365f371; JCL - 5757187cae based on jdk-14.0.1+7); ```. After:; ```; $ java --version; openjdk 14.0.1 2020-04-14; OpenJDK Runtime Environment AdoptOpenJDK (build 14.0.1+7); OpenJDK 64-Bit Server VM AdoptOpenJDK (build 14.0.1+7, mixed mode, sharing); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-648114847:198,install,install,198,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-648114847,2,['install'],['install']
Deployability,"Ah, no, you are absolutely correct. I normally would handle this by exporting the detections file and processing it in R. But if you want to visualize the ratio (with view measurements etc) you will need to update the cell measurements once you have determined the nuclear/cytoplasmic localization. Roughly speaking, you need to either cycle through all cells, and sum/average their stats for that cell, or cycle through all subcellular detections, and update the parent cell as each one is processed. I only know how to do the latter. You already have the loop for all cells from the previous example, and a loop for all clusters from the first. I will start with the loop for all clusters since I have some idea how that would work. Note that this does not summarize stain OD or actual spot area, just estimated spot count. It also only works if the second stain is labeled as DAB! After that, you should have the two values you need to get your ratio. ```; import qupath.lib.scripting.QP; def NuclearSum = ""Nuclear Spot Sum""; def CytoSum = ""Cytoplasmic Spot Sum"". //Probably not necessary when using putMeasurement, but I liked to have this loop for completeness, plus it will reset all values to zero when rerunning the script.; for (def cell : QP.getDetectionObjects()) {; def ml = cell.getMeasurementList(); ml.putMeasurement(NuclearSum, 0); ml.putMeasurement(CytoSum, 0); ml.closeList(); }; def clusters = getObjects({p -> p.class == qupath.imagej.detect.cells.SubcellularDetection.SubcellularObject.class}). // Loop through clusters; for (c in clusters) {; // Each subcellular detection can have one parent; def cell = c.getParent(). def ml = cell.getMeasurementList(); ; //Important note: This value (Num Spots) will be heavily influenced by the Estimated Spot Size when running the; //subcellular detection command. you may instead want to use the Area measurement which you can find; //by clicking on a subcellular detection; double thisCluster = c.getMeasurementList().getMeasurementValue(",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/119#issuecomment-347208202:207,update,update,207,https://qupath.github.io,https://github.com/qupath/qupath/issues/119#issuecomment-347208202,2,['update'],['update']
Deployability,"Ah, thank you for investigating this!. The hierarchy event system is horrible, and traces back to the early versions of QuPath where the hierarchy was much more important, undo/redo didn't exist, and we didn't have a good spatial cache from JTS. Then, it was a continual fight to avoid very expensive processing every time an object changed - because `resolveHierarchy()` was effectively being called automatically, and lots of things needed to update. I thinks this shows event system is *very* overdue a major revision. > I'm sure there is reason behind it, but here a hierarchy changed event is emitted, instead of an object added event. From your post and my failing memory, I suspect that the idea was that the 'object added' event would just handle a single object, but if multiple objects were added then we fired a more general structure change event. I guess this was because, when adding a single object, we knew that it could only affect ancestor and descendent objects in QuPath v0.1.2 and earlier. But if we changed multiple objects, then all the *potential* auto-resolved parent/child relationships between objects would be too complex to decipher. Instead, it was easier and safer to fire an event that basically said: _'something big changed, don't try to figure out exactly what, but just update to handle the hierarchy as it now is'_. I'm reluctant to switch to `addObjects` firing an event that doesn't include all the objects that were added, in case there is any legacy code that might be sensitive to the change. Which leads to... > So, [this condition](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L474) is true, the event is ignored, and the UndoRedoManager doesn't update its state. It looks like I failed to recognize that ; ```java; event.getChangedObjects().stream().allMatch(p -> p instanceof ParallelTileObject); ```; would return true when `getChangedObjects().isEmpty()`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306:445,update,update,445,https://qupath.github.io,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306,2,['update'],['update']
Deployability,"Ah, that's a bit of a shame... but thanks for testing - there might be some other [platform preferences](https://openjfx.io/javadoc/23/javafx.graphics/javafx/application/Platform.Preferences.html) that help, although I'd be tempted to just leave is a bug that may magically get fixed by dependency updates. We still have the option to choose light or dark explicitly, so as long as that still works no one should be stuck.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625:298,update,updates,298,https://qupath.github.io,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625,1,['update'],['updates']
Deployability,"Ah, yes I was trying to update the javadocs site/action to host multiple versions (a la https://qupath.github.io/qupath-fxtras/stable/qupath.fx/module-summary.html) but without mergedJavadocs, I couldn't get my head around gradle well enough to recreate it from the component pieces",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1604#issuecomment-2310704919:24,update,update,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/1604#issuecomment-2310704919,1,['update'],['update']
Deployability,"Aims to fix https://github.com/qupath/qupath/issues/753. Use of Mat.release() seems to be a misunderstanding of how deallocation is handled in JavaCPP/OpenCV (or a throwback to the pre-JavaCPP days). It seems that Indexer.release() is valid, but Mat.release() is unhelpful. Probably most meaningful change is the use of PointerScope in OpenCVPixelClassifier, since this could result in particularly high memory use.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/754:68,release,release,68,https://qupath.github.io,https://github.com/qupath/qupath/pull/754,3,['release'],['release']
Deployability,"Aims to fix https://github.com/qupath/qupath/issues/843; Synchronization is performed in QuPathViewer and does not fire a property update (should it?). In the end, may be preferable to separate and simplify this logic.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/844:131,update,update,131,https://qupath.github.io,https://github.com/qupath/qupath/pull/844,1,['update'],['update']
Deployability,Aims to provide a mechanism to address; * https://github.com/qupath/qupath/issues/841; * https://github.com/qupath/qupath-extension-stardist/issues/11; by ensuring that an OpenCV Net wrapped in a DnnModel can be closed without needing a reference to the Net itself.; The StarDist and TensorFlow extensions should be updated to make use of this.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/871:316,update,updated,316,https://qupath.github.io,https://github.com/qupath/qupath/pull/871,1,['update'],['updated']
Deployability,"Alas, in the end I had to revert these changes as they ended up causing much bigger problems, which only emerged when preparing the next release candidate. More details at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750315940:137,release,release,137,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750315940,1,['release'],['release']
Deployability,Also update commonmark to 0.24.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1690:5,update,update,5,https://qupath.github.io,https://github.com/qupath/qupath/pull/1690,1,['update'],['update']
Deployability,Also updated changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1151:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/pull/1151,1,['update'],['updated']
Deployability,"Also, I have an invalid extension installed (the [OMERO one currently isn't compatible](https://github.com/qupath/qupath-extension-omero)). If that could be captured here to easily remove that it would be great; currently, it isn't displayed at all. That might require more refactoring, since it is identified as invalid at the point when there is an attempt to install it... and so isn't added to the extensions list. Finally, could / should there be a way to list additional jars that are in the extensions directory but not actual extensions? Even just a count would be informative. I'm thinking of the scenario when a user deletes an extension, but doesn't have any knowledge of the fact that its dependencies are lingering. I know we don't have proper management of the dependencies, but some indication it's an issue would be good.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250:34,install,installed,34,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250,2,['install'],"['install', 'installed']"
Deployability,"Also, since these files are being read with the Bio-Formats extension, I looked that up quickly and at:; https://docs.openmicroscopy.org/bio-formats/5.7.2/formats/nikon-nis-elements-nd2.html; You can read that there are two versions of .nd2 files. It may be that previously you were saving as the older version (jpeg2000 compressed) versus the new version which may be ZIP compressed. I am unsure if the updates you mentioned might have transitioned you between versions, but there may be some file settings you could change regarding how it compresses your data.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/163#issuecomment-379566248:404,update,updates,404,https://qupath.github.io,https://github.com/qupath/qupath/issues/163#issuecomment-379566248,1,['update'],['updates']
Deployability,"An extra detail: this is less important if a project is used, since then the image path is stored in two places:; 1. The `.qpdata` file; 2. The `.qpproj` file. The path stored in the `.qpproj` file is used first. Fortunately, this is also the easiest to change: since the `.qpproj` file is text ([JSON](https://en.wikipedia.org/wiki/JSON)), this file can simply be opened in a text editor, and the paths replaced. In the event that a `.qpdata` file has already been created, and now won't open, there are two workarounds to handle this:; 1. Put the original image back in the location where it previously was, or; 2. Create a new project, and add the image to the project in its new location. Whenever any data relating to this image is saved within the project, QuPath will create a new `.qpdata` file inside the `data` directory of the project. If you replace this `.qpdata` file with the old one (after renaming it), then QuPath will treat it as the proper data from then on. Several morals of this story:; - If possible, don't move images to different directories after starting to analyse them with QuPath; - If you do (or might) need to move images, it's better to use projects - since they can be updated more easily later; - QuPath ought to handle moved images in a better way than it currently does...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/9#issuecomment-256318716:1204,update,updated,1204,https://qupath.github.io,https://github.com/qupath/qupath/issues/9#issuecomment-256318716,2,['update'],['updated']
Deployability,"An update on this. Ended up re-installing Win10 x64 and the problem was resolved. There must have been something preventing this from working correctly before; looks like it was upgraded from win8 home to win10 home, and then multiple upgrades since then. Thank you both for your input!; running into a different problem, but will try to replicate before posting that one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-497471530:3,update,update,3,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-497471530,4,"['install', 'update', 'upgrade']","['installing', 'update', 'upgraded', 'upgrades']"
Deployability,"And is the same server being used for both? I am not sure why it would not be, but I am not sure how much the installations may have been modified.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/891#issuecomment-1016538196:110,install,installations,110,https://qupath.github.io,https://github.com/qupath/qupath/issues/891#issuecomment-1016538196,1,['install'],['installations']
Deployability,Another workaround for this bug is to try out the [pre-release for v0.1.3](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html)...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/74#issuecomment-399181470:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/74#issuecomment-399181470,2,"['release', 'update']","['release', 'updates']"
Deployability,"Are you able to share an example file that doesn't work? It sounds like the problem is in either QuPath or Bio-Formats, and much has changed in both. Either way, since the log isn't recording anything very obviously wrong I'd need to test it with a failing file to identify where it is going wrong. If it's not possible to share a file, then I'd be trying to fix it through guesswork... to have a chance, I'd need to know more about how it works in v0.1.2, e.g.; * under the 'Image' tab, what is the 'Server type' when the image is correctly opened?; * if the type is 'Bio-Formats', which version of Bio-Formats is installed? v0.2.0 is using Bio-Formats v6.0.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472005071:615,install,installed,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472005071,1,['install'],['installed']
Deployability,"As I mentioned at both https://github.com/qupath/qupath/issues/363#issuecomment-606369334 and https://github.com/qupath/qupath/issues/426 the *next* release of QuPath will use JDK 14; v0.2.0-m9 does not (because it was not released at the time, and the version of Gradle used with it is not compatible with JDK 14). If you want v0.2.0-m9, you should follow the build instructions I posted under the above links using JDK 13 to build, but pointing to jpackage within JDK 14. It's cumbersome, but necessary because of the incompatibilities and the fact JDK 14 is extremely new. Otherwise you can build from the dev branch using JDK 14 or wait until v0.2.0-m10 is available. I will update the build documentation at that time. > **Please avoid creating issues for anything other than bug reports, and do not create multiple issues for the same thing. Use [the forum](http://forum.image.sc/tags/qupath/) for questions instead, as requested in the documentation and on the 'Issues' page itself.**; > ; > <img width=""696"" alt=""Issues"" src=""https://user-images.githubusercontent.com/4690904/71262757-5afea500-2338-11ea-8c14-91f68652c70b.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-606731627:149,release,release,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-606731627,3,"['release', 'update']","['release', 'released', 'update']"
Deployability,"As a workaround, I launch QuPath with installed JAVA on my PC(e.g. OpenJDK or Amazon Corretto). Do you have a plan to fix this issue in QuPath?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612963510:38,install,installed,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612963510,1,['install'],['installed']
Deployability,"As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407442971:215,update,update,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407442971,1,['update'],['update']
Deployability,"As you wish. For me it is not urgent at all, the next milestone will not be the final release version and I need to work on many other things.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479846872:86,release,release,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479846872,1,['release'],['release']
Deployability,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/287#issuecomment-473682408:484,install,install,484,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408,1,['install'],['install']
Deployability,At long last this issue should be resolved without need for an extra script if you use the version of QuPath described in [this blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-374199736:195,update,updates,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-374199736,1,['update'],['updates']
Deployability,"Attempted to update ControlsFX to 11.2.1, but it had some very weird `CheckComboBox` behavior (returning null checked items).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1626:13,update,update,13,https://qupath.github.io,https://github.com/qupath/qupath/pull/1626,1,['update'],['update']
Deployability,Auto-update URIs for self-contained projects,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1668:5,update,update,5,https://qupath.github.io,https://github.com/qupath/qupath/pull/1668,1,['update'],['update']
Deployability,"Avoid setting a 'zoom-to-fit' status that affects all viewers, but instead just adjust the zoom/positioning of the current viewer. This is to avoid the problem where a user might accidentally select the option, and then find themselves unable to zoom/pan in the image until the toggle has been deselected. Also turn off 'synchronize viewers' by default, but also make it a *persistent preference* so that its status is remembered when QuPath is restarted.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1398:278,toggle,toggle,278,https://qupath.github.io,https://github.com/qupath/qupath/pull/1398,1,['toggle'],['toggle']
Deployability,"Avoid showing the URI dialog if all missing image paths can be updated using relative links, and the links are all within the existing project directory. This can help make projects more self-contained.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1668:63,update,updated,63,https://qupath.github.io,https://github.com/qupath/qupath/pull/1668,1,['update'],['updated']
Deployability,"BTW, binaries for OpenCV on macosx-arm64 are available in the snapshots: http://bytedeco.org/builds/; Would you mind giving that a try with a native (ARM64) version of the JDK?; At the moment, such builds of the JDK seem to be available from at least Azul, Microsoft, and Oracle here: ; https://www.azul.com/downloads/?os=macos&architecture=arm-64-bit&package=jdk; https://github.com/microsoft/openjdk-aarch64/releases/tag/jdk-16.0.2-ga; https://jdk.java.net/17/",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811:410,release,releases,410,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018240811,1,['release'],['releases']
Deployability,"Back after a long delay... @kwiechen I didn't know of Spack but it looks interesting. Only issue is that we don't actually need OpenSlide only, but rather [OpenSlide Java](https://github.com/openslide/openslide-java). I created a [Homebrew tap](https://github.com/petebankhead/homebrew-qupath) that handles this, and works - but would require users to install locally and then has some awkward path issues to deal with. I found Homebrew installation on Mac straightforward... on Ubuntu, not so much. I wonder if trying to get OpenSlide Java into some familiar package manager is the best way to go. If the installation is easy enough, I guess Linux users probably won't mind and Mac users might tolerate it (and Windows users can still have the 'official' binaries made available by the OpenSlide devs). Alternatively, when Java's [foreign function & memory API](https://openjdk.org/jeps/424) stabilizes then perhaps it'll be possible to skip the current Java JNI stuff, and just use the existing package manager support for OpenSlide without Java. @delta2golf tifffile is a Python library, so unfortunately won't help here since QuPath is written in Java. @jcupitt thanks very much for these suggestions. It sounds trickier than I'd hoped, but also promising - I'll try to find a free day when my optimism levels are high enough to give this a proper go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726:352,install,install,352,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1346032726,3,['install'],"['install', 'installation']"
Deployability,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497262635:139,install,install,139,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635,1,['install'],['install']
Deployability,"Because I'm not great with git :) Could probably have cherry-picked it, but `main` has a *lot* of other changes, since the intention was that the next release would be v0.5.0 - and these should not be part of any v0.4.4 release. My aim this morning was to create tests, working off the original v0.4.3 code to ensure that the tests were failing initially. This revealed another issue that wasn't covered through your fix (namely that deserializing a `PathClass` only works properly via a `PathObject`). So I approached it a different way by first introducing a new `PathClass.readResolve()` method, which solved that problem and also most of the original issue. I then found it was still possible to work around the use of `readResolve()` alone when deserializing legacy JSON - so I followed your approach to update the `getSingleton` method as you'd suggested as well to try to cover all scenarios. The end result is that there are now 4 different deserialization tests, but it required the combination of approaches to pass all of them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1307#issuecomment-1699143030:151,release,release,151,https://qupath.github.io,https://github.com/qupath/qupath/pull/1307#issuecomment-1699143030,3,"['release', 'update']","['release', 'update']"
Deployability,"Before doing that, could you check if there's anything is in https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html that could help?. I *think* the issue may be because there's no test for the event type in your current code - and so it could be fired on a mouse move event as well (with the middle button down). So I think you need to check for a pressed, released or click event (I forget which... this is a place were cross-platform stuff can be annoying). I've never used [`isStillSincePressed()`](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/input/MouseEvent.html#isStillSincePress()) because I don't discovered it recently, but perhaps it can also help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857:383,release,released,383,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219670857,1,['release'],['released']
Deployability,"Before submitting your bug report, please check the following:. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an u",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:241,release,release,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,3,['release'],['release']
Deployability,"Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; If you import objects from a file, then select an object like a rectangle and change/move it and then finally using; undo it weirdly going to delete all added objects instead of undoing the change/move. **To Reproduce**; Steps to reproduce the behavior:; 1. Loading image using `Open...`; 2. Loading objects using `Import objects from file`; 3. Double click (select) any object; 4. Move/Change the selected object, like transforming a rectangle or whatever; 5. Undoing the action. **Expected behavior**; Undoing the move/change of the object.; Instead it just deletes all objects. **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version: 0.5.1",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1487:241,release,release,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1487,2,['release'],['release']
Deployability,"Before submitting your bug report, please check the following:. * [x] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [x] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [x] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [x] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; `Multiple actions registered for Shift+Shortcut+I, will keep Show input display and drop Insert into hierarchy`. **To Reproduce**; Steps to reproduce the behavior:; 1. Launch latest main build; 2. View log. Or, see: https://github.com/search?q=repo%3Aqupath%2Fqupath%20shortcut%2Bshift%2Bi&type=code. **Expected behavior**; No multimapped accelerators. Suggest adding alt to the one that's considered less important. **Desktop (please complete the following information):**; - OS: Linux; - QuPath Version: 0.5.0-SNAPSHOT",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1324:241,release,release,241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1324,2,['release'],['release']
Deployability,"Bio-Formats server options (Bio-Formats 6.2.0) (20 ms); 10:11:48.235 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Experimental commands (19 ms); 10:11:48.278 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension ImageJ extension (42 ms); 10:11:48.290 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension JPen extension (12 ms); 10:11:48.294 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension OpenCV extensions (3 ms); Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: loading JPen 2-150301 JNI library: jpen-2-4-x86_64 ...; Oct 13, 2019 10:11:48 AM jpen.provider.NativeLibraryLoader$4 run; INFO: jpen-2-4-x86_64 loaded; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/usr/local/src/QuPath-0.2.0-m4/app/groovy-2.5.7.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 10:11:48.594 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Loaded extension Rich script editor extension (300 ms); 10:11:48.603 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 10:11:48.698 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 10:11:48.698 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 10:11:48.704 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []. (QuPath-0.2.0-m4:17581): Gdk-WARNING **: 10:11:48.706: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369:3294,release,release,3294,https://qupath.github.io,https://github.com/qupath/qupath/issues/369,2,"['release', 'update']","['release', 'update']"
Deployability,Brightness/Contrast 'Apply to similar images' fails to update settings immediately across viewers,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1499:55,update,update,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/1499,1,['update'],['update']
Deployability,Brightness/Contrast histogram doesn't always update when switching between similar images,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1459:45,update,update,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/1459,1,['update'],['update']
Deployability,"Bring back several key methods and classes that are used in extensions, and mark them as deprecated while logging a warning the first time they are used. The purpose is to not break more extensions than necessary, and give a clue as to how to update the code for future compatibility.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1367:243,update,update,243,https://qupath.github.io,https://github.com/qupath/qupath/pull/1367,1,['update'],['update']
Deployability,"Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java; On line 438 you closed the imageserver for the current image, but not for the other entries?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635240856:25,release,release,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240856,1,['release'],['release']
Deployability,"Bug fixed, performance improvements, updated javadocs",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/419:37,update,updated,37,https://qupath.github.io,https://github.com/qupath/qupath/pull/419,1,['update'],['updated']
Deployability,Build updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1424:6,update,updates,6,https://qupath.github.io,https://github.com/qupath/qupath/pull/1424,1,['update'],['updates']
Deployability,Can we deploy qupath instance on cloud and access it from web url?,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/576:7,deploy,deploy,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/576,1,['deploy'],['deploy']
Deployability,"Changelog:; ------------; * Completely revised projects; * New image importer, supports drag & drop for multiple images; * Specify image rotation on import; * Automatically check URIs when opening projects, attempt to resolve relative paths; * Fix broken paths through the user interface (rather than editing the .qpproj file manually); * Use the same image reader each time (e.g. OpenSlide, Bio-Formats); * Right-click in the project pane to add metadata for one or more selected images; * Store custom server metadata (double-click pixel sizes under the 'Image' tab to fix them); * Add support for more complex images via ServerBuilders (useful in the future...); * Adjust project pane thumbnail size in preferences; * Allow duplicate images in projects; * Viewer updates; * Improved touch gesture support; * New, perceptually uniform color tables for measurement maps; * Fixed bug with right-click being unresponsive on some Mac laptops; * Smoother Brush tool behavior; * Wand tool now pressure-sensitive (for supported graphics tablets only); * Revised pixel classifier features; * New Hessian features; * New 3D support; * Improved JSON serialization, via GsonTools class; * ROIs and PathObjects as GeoJSON; * Most ImageServers (via ServerBuilders); * Common OpenCV classes (Mat, StatModel); * Bio-Formats updates; * Update library to v6.2.0; * Improved multithreading and OME-TIFF export; * Avoid creating .bfmemo files in image directories (specify in preferences if/where you want them); * Miscellaneous changes; * Updated to JDK 12.0.2; * Default max memory to 50% available (previously 25%); * New .msi installer for Windows, optional 'debug' startup with console; * Improved 'Send to ImageJ' command, supports z-stacks & extra customization; * Major refactoring (warning, older scripts may not work!); * Added many javadocs for core modules; * Lots of bugs fixed! (No doubt some added...)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/342:766,update,updates,766,https://qupath.github.io,https://github.com/qupath/qupath/pull/342,5,"['Update', 'install', 'update']","['Update', 'Updated', 'installer', 'updates']"
Deployability,"Changes now available [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Absolute paths are stored, but QuPath checks relative path if the image is not found.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/325#issuecomment-514589547:67,release,releases,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/325#issuecomment-514589547,1,['release'],['releases']
Deployability,Channel names are included now in the v0.2.0 milestone releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/186#issuecomment-518313426:55,release,releases,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-518313426,1,['release'],['releases']
Deployability,"Check out the updates described [in this blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) - it explains how projects can be arranged and descriptions added. Also, in the version described there, you can press *Enter* and then add some description text for annotations. (*Viewing* the description remains rather sub-optimal... either press *Enter* again, or see it as a tooltip when hovering over the annotation under the *Annotations* tab on the left.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144#issuecomment-374198719:14,update,updates,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/144#issuecomment-374198719,2,['update'],['updates']
Deployability,"Cheers, hope you don't mind! Thanks for flagging these, added the badges with some other changes needed to update the ReadMe in a single commit.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/656#issuecomment-791557989:107,update,update,107,https://qupath.github.io,https://github.com/qupath/qupath/pull/656#issuecomment-791557989,1,['update'],['update']
Deployability,Classifier updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/480:11,update,updates,11,https://qupath.github.io,https://github.com/qupath/qupath/pull/480,1,['update'],['updates']
Deployability,"Click on ""Automate"" Button gives ""QuPath exception"" every time even after new installation",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422:78,install,installation,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/422,1,['install'],['installation']
Deployability,Closed due to lack of activity and at least some of the issue has been resolved :); Next milestone release should support setting pixel sizes for images in a project from within QuPath by double-clicking them under the 'Image' tab.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-494363347:99,release,release,99,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-494363347,1,['release'],['release']
Deployability,Closed due to the lack of any update.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/242#issuecomment-494372482:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/242#issuecomment-494372482,1,['update'],['update']
Deployability,"Closing this because it has been quiet, and because the original issue should be fixed in the latest release. Positioning scenes in 2D remains a possible future improvement, but is a little tricky/risky because of uncertainty in how exactly to interpret position information consistently across formats. See https://forum.image.sc/t/improve-bio-formats-image-position-metadata/30770",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-632241436:101,release,release,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-632241436,1,['release'],['release']
Deployability,Closing this because it has gone quiet and the issue could not be reproduced... hopefully the issue has been fixed along the path to v0.2.0 as a stable release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-632235419:152,release,release,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-632235419,1,['release'],['release']
Deployability,"Closing this because of lack of activity, and it is addressed in the latest milestone release (especially through the pixel classifier).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-471152043:86,release,release,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-471152043,1,['release'],['release']
Deployability,Closing this because:. * I see no way to fix it completely; * there's now a preference to toggle whether the system menubar is used by QuPath... which provides a way in which to deal with the issue,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/6#issuecomment-632217898:90,toggle,toggle,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/6#issuecomment-632217898,1,['toggle'],['toggle']
Deployability,"Closing this issue after discussion with @melvingelbard... it's not something we plan to do, and would be very apprehensive about including the change even if someone else implemented it. As I mentioned above, the consistency thing has some (partly historic) reasons. We only started adding spinners recently; the underlying rationale has been that sliders are used when the range is known in advance, spinners are used when it's not... New commands will endeavour to apply this rule more consistently, and old commands will either be either removed or updated. Regarding spinners and mouse wheel input, I think this really would need to be implemented in JavaFX directly. There are ostensibly easy ways to add support by attaching a scroll listener, in my experience to date this can open a whole can of worms... basically, scroll events can differ a lot depending upon the input device/platform (not to mention 'natural' scrolling in some cases, which can flip the direction). Therefore I think the risk is too high of creating something that inadvertently makes the user experience *worse* for many, and we would have no way to test all the relevant platforms to check this. I presume the JavaFX developers have reasons for not implementing this directly yet - perhaps related to the reason I give. But in any case, they would have access to potentially more platform-specific information to enable a robust implementation. For these reasons, I'm afraid I don't think we can/should act on this feature request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/495#issuecomment-641183465:553,update,updated,553,https://qupath.github.io,https://github.com/qupath/qupath/issues/495#issuecomment-641183465,2,['update'],['updated']
Deployability,"Closing this issue as it has gone quiet - feel free to reopen if there is more information. The recent [update to the Bio-Formats extension](https://groups.google.com/d/msg/qupath-users/78PpZuu2J1s/su6ZjY0mAgAJ) addresses numerous memory & performance issues, and should help with CZI images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-359880979:104,update,update,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-359880979,1,['update'],['update']
Deployability,"Closing this issue because I'm afraid I don't see it as possible - at least not with the current cell detection. It might be more feasible in a future incarnation, but that may need to be radically different (e.g. like how the simple threshold in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) can potentially replace simple tissue detection). Of course, feel free to prove me wrong with a pull request :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/327#issuecomment-549053462:292,release,releases,292,https://qupath.github.io,https://github.com/qupath/qupath/issues/327#issuecomment-549053462,2,['release'],['releases']
Deployability,Combined summary of the main v0.5.0 changes I can remember (along with general UI adjustments). * Save/restore display settings in projects; * Filter the channel names by text or regular expressions; * Optionally view log counts for channel histograms; * For multi-channel (non-RGB images):; * Better support to toggle channels on/off; * Remember previous selection when switching between grayscale & color; * More quickly change channel colors (the square icon is now a color picker). (Plus many other internal changes and a major refactorization / simplification of the associated codebase to make this possible),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1340:312,toggle,toggle,312,https://qupath.github.io,https://github.com/qupath/qupath/pull/1340,1,['toggle'],['toggle']
Deployability,Committing to v0.5.0 being the next release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1274:36,release,release,36,https://qupath.github.io,https://github.com/qupath/qupath/pull/1274,1,['release'],['release']
Deployability,"Complete rewrite of `build.gradle` in the hope of something that less resembles an explosion in a a curly brackets factory. Now uses `buildSrc` directory to isolate shared conventions, with most of the packaging logic moved to a new `qupath-app` subproject. For basic use to create an image; ```bash; ./gradlew clean jpackage`; ```. The type of package can be specified as one of `[image, msi, exe, dmg, pkg, deb, rpm, installer, all]`. Not all are supported on all platforms, and `installer` simply selects a platform-dependent installer (although this may fail for Linux...). The syntax is; ```bash; gradlew jpackage -P qupath.package=installer -P git-commit=true; ```; where `git-commit` requests that the last git commit is included in jar files for reference. The improved structure means that more tasks work as they should, so that; ```bash; ./gradlew tasks; ```; finally becomes meaningful. **Native libraries** are extracted at an early stage, and put into `build/natives`, which means that this is a good choice as a working directory when running from an IDE. It is also used by `gradlew run`. Several other small changes were made to ensure Java 11 compatibility (change to a use of `FileSystems`) and to remove `&` from Javadocs. ## Important. The QuPath version is now set in `settings.gradle`, and this is added to the `resources` of `qupath-core` - thereby making it available through `GeneralTools`. This should be more reliable than depending upon a `VERSION` file in the main repo, particularly when launching QuPath with different working directories. Relatedly, the project logic has been updated; previously it would fail completely if no version was found within a project JSON file, in the assumption it originated from v0.1.2 or earlier. Now it will make an effort to recover.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/738:419,install,installer,419,https://qupath.github.io,https://github.com/qupath/qupath/pull/738,5,"['install', 'update']","['installer', 'updated']"
Deployability,"Complete rewrite of `build.gradle` in the hope of something that less resembles an explosion in a a curly brackets factory. Now uses `buildSrc` directory to isolate shared conventions, with most of the packaging logic moved to a new `qupath-app` subproject. For basic use to create an image; ```bash; ./gradlew clean jpackage`; ```. The type of package can be specified as one of `[image, msi, exe, dmg, pkg, deb, rpm, installer, all]`. Not all are supported on all platforms, and `installer` simply selects a platform-dependent installer (although this may fail for Linux...). The syntax is; ```bash; gradlew jpackage -P qupath.package=installer -P git-commit=true; ```; where `git-commit` requests that the last git commit is included in jar files for reference. The improved structure means that more tasks work as they should, so that; ```bash; ./gradlew tasks; ```; finally becomes meaningful. Native libraries are extracted at an early stage, and put into `build/natives`, which means that this is a good choice as a working directory when running from an IDE. It is also used by `gradlew run`. Several other small changes were made to ensure Java 11 compatibility (change to a use of `FileSystems`) and to remove `&` from Javadocs. ## Important. The QuPath version is now set in `settings.gradle`, and this is added to the `resources` of `qupath-core` - thereby making it available through `GeneralTools`. This should be more reliable than depending upon a `VERSION` file in the main repo, particularly when launching QuPath with different working directories. Relatedly, the project logic has been updated; previously it would fail completely if no version was found within a project JSON file, in the assumption it originated from v0.1.2 or earlier. Now it will make an effort to recover.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/736:419,install,installer,419,https://qupath.github.io,https://github.com/qupath/qupath/pull/736,5,"['install', 'update']","['installer', 'updated']"
Deployability,"Concerning the intensity, in fact we are trying to calculate an area above a threshold for different condition. De : Pete <notifications@github.com>; Envoyé : Monday, July 23, 2018 2:04 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding 'a way to calculate the intensity for fluorescence above a threshold' do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:. * Using Send region to ImageJ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like this one<https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html>; * Using a script, macro or Simple tissue detection to generate the QuPath annotation first, then within QuPath calling Analyze → Calculate features → Add intensity features (experimental). —; You are receiving this because you au",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407035378:813,install,installed,813,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407035378,1,['install'],['installed']
Deployability,"Converting arbitrary shapes to Geometry objects has proven horribly difficult, although m9 should be better than any previous version. From your example I can see a way to improve the conversion a bit in the next release. New complex annotations should be Geometry objects immediately, avoiding the need for the conversion later. In the meantime, this script works for me to create a slightly simplified shape that can be converted to a valid Geometry for your example:; ```groovy; def file = new File('/path/to/broken_area_roi.ser'). def obj; file.withObjectInputStream {; obj = it.readObject(); }. obj = ROIs.createAreaROI(obj.getShape(), obj.getImagePlane()); roi = qupath.lib.roi.ShapeSimplifier.simplifyShape(obj, 0.5). println roi.getGeometry(); println roi.getGeometry().isValid(). println obj.getArea(); println roi.getGeometry().getArea(); ```; The area has been changed slightly, but not by much. Perhaps this, or the *Objects &rarr; Annotations... &rarr; Simplify shape* command might help resolve the conversion for you?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607483340:213,release,release,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607483340,2,['release'],['release']
Deployability,"Current LTS release, enables some new features",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1225:12,release,release,12,https://qupath.github.io,https://github.com/qupath/qupath/pull/1225,1,['release'],['release']
Deployability,"Currently building the latest version of QuPath; will close ticket if it ends up being fixed. ## Before we begin... Before submitting your bug report, please check the following:. * [X] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [X] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; QuPath projects with several hundred IMC images take a notably longer time to load. Opening the images themselves is comparatively faster, yet are still read into memory. No noticeable change in memory usage is occurring when the QuPath project is being loaded, indicating that these images may not be pre-loaded (i.e. cached) during loading of the project itself. My guess is that the thumbnails are being reconstructed each time the QuPath project is loaded (computer must be restarted to reproduce, closing and relaunching QuPath is not sufficient). Given that thumbnail generation was updated in the changelog of the newest unofficial release, I'll build from source now and close the ticket if I can't reproduce the bug. It's a minor inconvenience at best, especially since it's only a delay of two minutes. But keep in mind, the CPU here is a Ryzen 5950X with among the highest single thread speeds of desktop CPUs, and only 1 of the 32 threads is being used during this period. Depending on the root cause and a user's hardware configuration, load times may scale linearly or exponentially as project sizes move into the range of thousands of images. If this is caused by thumbnail generation, then this may only be affecting multiplexed IHC images such as those acquired through IMC or CODEX. **To Reproduce**; Video de",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154:357,release,release,357,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154,2,['release'],['release']
Deployability,"Currently, you can do that via the workflow tab - assuming you've run it once before on that image. Or you can leave the window open when switching images - assuming they are the same type... bad things may happen if not, e.g. fluorescence to brightfield. Although that led me to see that bad things happen with this PR when the image type changes: QuPath isn't able to adjust and update the available options. So if I run cell detection for brightfield, then I can't use it for fluorescence within that QuPath session - because it will be stuck with the same available channels the first time it was run.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318:381,update,update,381,https://qupath.github.io,https://github.com/qupath/qupath/pull/1560#issuecomment-2255814318,1,['update'],['update']
Deployability,"Dear @Svidro . You gave me the best Christmas gift !!! Amazing help indeed! I thank you so much to help me for that. _I give you the following update and also put forward a few queries if you don't mind:_. **1.** **I was not sure how you found the following values for the Stain 1 and 2.** I mean, these:. ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""**0.18752 0.65887 0.72851** "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""**0.72191 0.55664 0.41109** "". Did you use the technique (shown in this video https://www.youtube.com/watch?v=IpCDnPnFvDc&t=7s) to assign colour values for each ROI for each stain?; ![image](https://user-images.githubusercontent.com/44507241/50432704-490b3300-0899-11e9-89b5-87f5653ffc0f.png). **2.** **You mentioned in your post:** ""Certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough."". **>My comment:** Essentially, they are the valid population of cells, so I would not like to exclude them. Would it be possible to classify them as a third type? . **>Also,** can I somehow make the Qupath learn that they belong to Stain 2/ DAB, by setting the ""Stain vector for their ROI""? I mean:; ![image](https://user-images.githubusercontent.com/44507241/50433088-aacc9c80-089b-11e9-9bb7-f975b4fbab7e.png). I hope you'll kindly take your time to help me with this again. I'm sorry that I get back to you lately each time - this is because I carefully go through your comments, try to replicate it, and gather questions for you. I hope you'll not misunderstand it. But I am grateful to you how you are helping!. Thanks again. sincerely,; Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-449906512:143,update,update,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449906512,2,['update'],['update']
Deployability,"Dear Arnulf,. Certainly I'm agreed with you on the benefits of fluorescence for image analysis. I intended that the cell detection should work with fluorescence, but since I have primarily been working with brightfield until now, this was not taken very far. Success with fluorescence cell detection previously relied upon several undocumented tricks in terms of choosing parameters, and the good fortune of having your nuclear counterstain in the first channel. This morning I tried to address this, and hopefully you find it functions better in [v0.0.5](https://github.com/qupath/qupath/releases/tag/v0.0.5), which I've just uploaded. An example image from a fluorescence microscope is shown below. ![qupath_fluorescence_cells](https://cloud.githubusercontent.com/assets/4690904/20115597/cf2682ae-a5f0-11e6-88c9-82298e3cd1ea.jpg). A few important points (which will eventually be documented on the Wiki):; - QuPath tries to identify brightfield and fluorescence images when they are opened (although you can ask it not to under _Auto-estimate image type on opening_ option in the _Preferences_); if it gets it wrong, you will need to double-click the `Image type` in the _Image_ tab to set this manually to fluorescence.; - The `Image type` needs to be set before running the _Cell detection_ command, to make sure that the right options are displayed; - The _Threshold_ option under _Intensity parameters_ will be important, and will likely need to be adjusted... the default is simply selected for all images of that type and bit-depth, and not based on the information present in the image; - If you are working with images at a relatively low resolution (such as in the screenshot I showed), it can be helpful to decrease the _Detection line thickness_ parameter in the _Preferences_ so that the cell or nucleus outlines do not obscure your view too much.; - The _Brightness/Contrast_ options currently misbehave somewhat with fluorescence. If you want to show/hide specific channels, it's actua",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259250203:589,release,releases,589,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259250203,2,['release'],['releases']
Deployability,"Dear Dr Peter,. I was having a project opened, with drawn annotations on a few H&E images. The following message popped-up when I clicked on **""Automate""**. It didn't open the regular choices shown when inserting a script; I instantly had:. _ERROR:_; INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (29 ms); INFO: Loaded extension Experimental commands (16 ms); INFO: Loaded extension ImageJ extension (35 ms); INFO: Loaded extension JPen extension (16 ms); INFO: Loaded extension OpenCV extensions (5 ms); INFO: Loaded extension Rich script editor extension (213 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: _Name_; INFO: Image data set to ImageData: Brightfield (H&E), _ImageName_; ERROR: QuPath exception; at qupath.lib.gui.ScriptMenuLoader.addMenuItemsForPath(ScriptMenuLoader.java:149); at qupath.lib.gui.ScriptMenuLoader.updateMenu(ScriptMenuLoader.java:130); at qupath.lib.gui.QuPathGUI.lambda$new$9(QuPathGUI.java:776); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:198); at javafx.scene.control.Menu.show(Menu.java:412); at javafx.scene.control.skin.MenuBarSkin.showMenu(MenuBarSkin.java:472); at javafx.scene.control.skin.MenuBarSkin.showMenu(Men",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373:700,update,update,700,https://qupath.github.io,https://github.com/qupath/qupath/issues/373,1,['update'],['update']
Deployability,"Dear Dr. Bankhead,. First of all: this is an incredible piece of software! We are exploring its multiple possibilities with great excitement. Thank you very much for making it publicly available. Among others, we are working with a lot of Zeiss *.czi and 3D Histech *.mrxs multichannel fluorescence whole slide images. The default version of QuPath can open the *.mrxs files, but only in the most coarse resolution. So I installed the Bio-Formats extension and it does show up in the ""Help/Installed Extensions ""dialogue. However, it does not appear in the ""Extensions"" Menu. Only ImageJ is accessible in this menu. Best regards,. Arnulf Mayer, University Medical Center Mainz, Germany",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12:421,install,installed,421,https://qupath.github.io,https://github.com/qupath/qupath/issues/12,2,"['Install', 'install']","['Installed', 'installed']"
Deployability,"Dear Pete,. . It is indeed windows 10. This is what log shows:. . ERROR: Unable to load OpenCV libraries!. at java.lang.ClassLoader$NativeLibrary.load(Native Method). at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941). at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857). at java.lang.Runtime.loadLibrary0(Runtime.java:870). at java.lang.System.loadLibrary(System.java:1122). at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59). at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72). at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:581,install,installExtension,581,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['install'],['installExtension']
Deployability,"Dear Pete,. . Unfortunately it still didn’t work. I noticed there was an Error during installation (see below), do you know what it means?. . Best and thank you so much for your support!. Marcel. . . Microsoft Windows [Version 10.0.17134.228]. (c) 2018 Microsoft Corporation. Alle Rechte vorbehalten. . C:\Users\marsh\Documents\GitHub\qupath>gradlew.bat jfxNative. Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. . > Configure project :. I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed). Operating system: Windows 10 10.0 x86. Current Java version: 1.8. Found the packager at C:\Program Files (x86)\Java\jdk1.8.0_181\jre\..\lib\packager.jar. Copying license directories:. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-opencv\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-ij\src\main\resources\licenses. C:\Users\marsh\Documents\GitHub\qupath\qupath-processing-opencv\src\main\resources\licenses. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\openslide\openslide\3.4.1_2\openslide-3.4.1_2-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\net\sourceforge\jpen\jpen\2-150301\jpen-2-150301-natives-windows.jar. Extracting native libraries from C:\Users\marsh\Documents\GitHub\qupath\maven\repo\org\opencv\opencv\3.1.0\opencv-3.1.0-natives-windows.jar. Re",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414648451:86,install,installation,86,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414648451,2,['install'],"['installation', 'installed']"
Deployability,"Dear Pete,. Thanks a lot for the fast response!; You are right it seems related to that issue. As the problem only occurs after labeling for quite a while ; (and is resolved by a new start of QuPath); i thought QuPath might hand over to Java a variable on when to ""forget"" old points; or ""how many to store"". . If not, I just stick to the two workarounds described above.; I can not write Java, but I guess the problem might be solved in future Java releases. Thanks again & Kind regards. Tobias",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/372#issuecomment-549459616:450,release,releases,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/372#issuecomment-549459616,1,['release'],['releases']
Deployability,"Dear Pete,; My machine config: 16core CPU + 64G RAM, assign 60G for qpath to use; I am using qpath to analyze WSIs with 1 million to 3 million cells. When I trained object classifier, the qpath is freezing while the usage of CPU is about 1 CPU and the usage of RAM is about 15G of 64G after clicking Live Update. Seems that Qpath has issue on using computing resourses.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/831:305,Update,Update,305,https://qupath.github.io,https://github.com/qupath/qupath/issues/831,1,['Update'],['Update']
Deployability,"Definitely should axe jet, maybe add turbo in a future release",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1471#issuecomment-1966630170:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/pull/1471#issuecomment-1966630170,1,['release'],['release']
Deployability,Dependency updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/873:11,update,updates,11,https://qupath.github.io,https://github.com/qupath/qupath/pull/873,4,['update'],['updates']
Deployability,"Detections could sometimes not appear in the viewer.; This was caused by an overly-enthusiastic attempted optimization, introduced in v0.6.0 pre-releases.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1680:145,release,releases,145,https://qupath.github.io,https://github.com/qupath/qupath/pull/1680,1,['release'],['releases']
Deployability,"Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. If so, it may be because the native libraries are in the same location as the launcher. This happened 'naturally' with the `javafxpackager` in JDK 8, but not with `jpackage` now. Because loading [sub-dependencies is not exactly straightforward](https://bugs.openjdk.java.net/browse/JDK-8213772) the only way I could see to get it working on Windows was to load the dependencies in reverse order [here](https://github.com/qupath/qupath/blob/v0.2.0-m4/qupath-extension-openslide/src/main/java/qupath/lib/images/servers/openslide/OpenslideServerBuilder.java#L51). The problem may be masked on Linux where OpenSlide is already installed and so the libraries are found on the system... just not the expected ones. So the 'bug' in QuPath is separate from the pixman issue - it's rather around how the native libraries are made available. Therefore updating pixman on a broken system could at least get things working again. I can think of three possible ways around this within QuPath:; * Try to load the sub-dependencies 'backwards', as with Windows; not terribly maintainable, but if OpenSlide isn't actively developed then it won't be updated often; * Change the build script to try to get the native libraries alongside the launcher; I'd _prefer_ not to fight `jpackage` regarding locations in case it causes more trouble, but may be ok; * Require a separate OpenSlide installation (but the JNI library will still be needed). Overall, getting OpenSlide to behave well cross-platform has proven very difficult... not helped by my lack of C. The situation with OpenCV had been similar, but is now _much_ better thanks to JavaCPP. Any help with packaging OpenSlide up in a portable, cross-platform way would be much appreciated. See also https://github.com/qupath/qupath/issues/151",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527339421:715,install,installed,715,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527339421,3,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,"Did you try right-click and Open?. Here's the info from the docs: https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos. The right-click + open trick might be required both for the installer and for the app itself on first launch (I'm not sure, the behavior on a Mac can vary a bit).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199#issuecomment-1363847204:114,install,installation,114,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199#issuecomment-1363847204,2,['install'],"['installation', 'installer']"
Deployability,"Did you try right-click, as described at https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#installation ?. Edit: I've occasionally found I need to try to open the app by right-click twice (the first time macOS stops me, the second it relents).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352080849:89,install,installation,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352080849,2,['install'],['installation']
Deployability,Do not overwrite the last workflow step when setting stain vectors multiple times in a row. This is to address a recent workshop confusion in which it wasn't possible to restore previous values.; Also update the default stain names when using 'Estimate stain vectors'.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/793:201,update,update,201,https://qupath.github.io,https://github.com/qupath/qupath/pull/793,1,['update'],['update']
Deployability,"Do you have any more information on what you are doing (in QuPath),; operating system and version, etc?. Does the unresponsiveness occur before you try to run anything? Are other; programs running in the background?. On Thu, Feb 7, 2019, 9:31 AM Bjarne Thorsted <notifications@github.com>; wrote:. > After working some time (can be anything from a few minutes to half an; > hour) the menus stop responding. The only fix for me is to save and restart; > the software. I've recently updated to the latest dev build and the issue; > persists here.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/267>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AWEq-QSuGR2aghxKXt5rME9eLnnFPi-Wks5vLGL0gaJpZM4anysq>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461524342:481,update,updated,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461524342,1,['update'],['updated']
Deployability,"Don't really know the distinction between `.pkg` and `.app`, it'd be the output of `./gradlew jpackage -P git-commit=true -P package=installer mergedJavadoc`. But if possible within gradle that'd be much easier",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727754758:133,install,installer,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727754758,1,['install'],['installer']
Deployability,"Due to the problem with straight line ROIs shifting when reloading previously-saved image data (Issue #71), I've already upgraded to v0.1.3 ( #71 fixed). Unfortunately the 90 degree point bug remains in effect.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409484563:121,upgrade,upgraded,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409484563,1,['upgrade'],['upgraded']
Deployability,Easily done I guess! . I for one really appreciate the updated docs with the new example. Thats much more than I was expecting and I am looking forward to testing it out. Thanks again!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-264866312:55,update,updated,55,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-264866312,1,['update'],['updated']
Deployability,Enable fixed-size patch export with `TileExporter`,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/814:18,patch,patch,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/814,1,['patch'],['patch']
Deployability,"Enable mechanism for extensions to report the version of QuPath for which they were designed, and then to log this upon (possibly failed) installation.; New public comparators to make comparing semantic versions easier.; Updated build script to reinstate '--bind-services' option.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/742:138,install,installation,138,https://qupath.github.io,https://github.com/qupath/qupath/pull/742,2,"['Update', 'install']","['Updated', 'installation']"
Deployability,"Eventually I managed to create a new Linux download for [v0.0.6](https://github.com/qupath/qupath/releases/tag/v0.0.6) using OpenJDK and OpenJFX. Still, two troubles remain: one minor, one major. The minor trouble is that (at least on Ubuntu 16.04) the build process is not entirely seamless, and `jfxrt.jar` needs to be manually copied into the distribution at the end (perhaps because it's not included in OpenJDK, but rather only a symbolic link is made with installing `openjfx` with Synaptic?). The major trouble is that OpenSlide continues not to be distributed in a ready-to-run fashion (as mentioned [here](https://github.com/qupath/qupath/wiki/Installing-QuPath#linux)). Indeed, I'm not sure if it will work on anyone's machine other than the one I was using. It is likely clear that my Linux use and experience is limited. The suggestions of someone who is more familiar with this would be very welcome. I think one of the following is required:; - Inclusion of OpenSlide and all its dependencies, precompiled (in the same way as QuPath provides for Windows and macOS), or; - A method of ensuring the Java library path in the packaged version of QuPath includes all the places that would be required to find a local installation of OpenSlide. In the second case, the user would still be asked to download and install it... but if this step goes smoothly, it can be expected to work. I plan to investigate this more in the future, but it may take some time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-261056258:98,release,releases,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-261056258,9,"['Install', 'install', 'release']","['Installing-QuPath', 'install', 'installation', 'installing', 'releases']"
Deployability,"Everyone's forum :). You might want to check out [this new blog post](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) describing how to try out lots of new QuPath improvements early. Especially check out the bit about *Positive pixel count* (about half-way down the page), which describes now & improved outputs that the command can give.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-374165232:126,update,updates,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-374165232,1,['update'],['updates']
Deployability,"Excellent, thanks @ajay1685! I hadn't been able to test tensorflow on Windows yet, that's great news. Some of the more recent commits have hopefully resolved lingering issues with OpenSlide/Bio-Formats, and restored the version number to the application name on Windows. I *think* this is a good thing for people using the .msi installer, since it means they can easily have multiple versions installed. But I don't use Windows enough to know for sure if that's a desirable feature for most people.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-805568183:328,install,installer,328,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-805568183,2,['install'],"['installed', 'installer']"
Deployability,Exception when checking for updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1191:28,update,updates,28,https://qupath.github.io,https://github.com/qupath/qupath/issues/1191,1,['update'],['updates']
Deployability,"FO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.jav",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1795,release,release,1795,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['release'],['release']
Deployability,"Fair enough - I've also gone rogue in including the version number in the name, e.g. `QuPath-0.5.5.app`. It's not the Mac way to do things, but I figure there is a strong possibility people will want to have multiple versions installed (or at least I do... and suspect everyone should).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732345950:226,install,installed,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732345950,1,['install'],['installed']
Deployability,"Fantastic, that's a relief, thanks!; I saw those errors tile width/height too, only with MRXS files... but yes, they don't seem to cause trouble. For reference, this is what happened:; I recompiled OpenSlide for Mac back for v0.0.7, to address issues related to opening MRXS files with certain types of compression (possibly BMP or PNG). However, I appear to have accidentally included the previous versions of the library + dependencies in the Mac download, possibly because the machine on which I finally compiled the Mac version of QuPath for distribution had cached the original libraries, which had the same version number (since they traced back to the same version of OpenSlide). So v0.1.1 was the first download to actually contain the Mac OpenSlide updates intended for v0.0.7. And it turned out that those updates were missing a couple of required files, but which were available on my development machines... lulling me into a false sense of security that all was well. Anyhow, I've now repackaged OpenSlide + dependencies, added in the license notices for the additional required files, and bumped up the version number to 3.1.4_2 to make it clear which OpenSlide should be included in all future versions of QuPath compiled for Mac - regardless of machine. Outcome:; * OpenSlide included with the Mac distribution of v0.1.1 should be able to handle slightly more kinds of image than previous versions... but in the overwhelming majority of cases, it will look the same; * None of this matters for QuPath running on anything other than Mac; * I was never going to figure out there was a problem on my own, since it was working for me... so thanks for letting me know!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265679401:758,update,updates,758,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265679401,4,['update'],['updates']
Deployability,"Features:. - Display name, description, version; - Add extensions from a github repo[^1]; - Drag & drop repo URLs to install[^2]; - Remove and update[^3] extensions; - Open containing folder. Other changes:. - Make extensions `Map` an `Observable`; - Slightly change ""no newer version"" message, because 0.4.4 is not newer than 0.4.4 (for example); - Set minimum dimensions on welcome stage. Questionable:. - New Pane class as a (static) inner class of ExtensionManager, could be separate.; - Use of FXML for `ExtensionListCellVBox` --- it's easier for me to make sensible layouts with ML, but it also seems convoluted for a small class; - Existing ""Installed extensions"" pane distinguishes between ImageServer providers and Extensions, this one doesn't (which I think is fine, but I could easily add a wrapper class like the old `QuPathExtensionEntry` class.; - Downloading code located in DragDropImportHandler, seems like it should be in a Utils class instead. [^1]: If the repo follows some conventions; [^2]: ...hopefully, if the repo follows some conventions...; [^3]: if the extension class implements GitHubProject",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342:117,install,install,117,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342,3,"['Install', 'install', 'update']","['Installed', 'install', 'update']"
Deployability,Finally we got to the bottom of the problem. Thanks you for the patience and for merging it!. When can we expect the next release?; I'm interested in updating all the old (v0.3) installations of QuPath in my laboratory so that we can all use some scripts i wrote taking advantage of a couple of features of v0.4+ ^^,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1691841233:122,release,release,122,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1691841233,2,"['install', 'release']","['installations', 'release']"
Deployability,"First draft implementation of two measurement classifier and scatter plots in measurement viewer (along with histograms). Ideally I think these two panes should be merged, with an X and Y dropdown. If X or Y alone is selected, or if ==Y, then do a histogram. If both are selected and different, do a scatter plot. Saves space and I doubt many people will want to see histogram & scatter plot at the same time. Two measurement classifier currently uses composite classifier, but really it should be something like a ""union"" classifier... or some kind of logical operand classifier. But I'm not currently sure what or how. The point colours on the scatter plot should also probably live update. The code here is horrendous and needs to be refactored in both cases, but works as a POC.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1544:685,update,update,685,https://qupath.github.io,https://github.com/qupath/qupath/pull/1544,1,['update'],['update']
Deployability,Fix ImageDisplay json channel update bug,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1482:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/1482,1,['update'],['update']
Deployability,"Fix minor bugs, warnings & update gradlew",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1608:27,update,update,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/1608,1,['update'],['update']
Deployability,Fix update check bug,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1194:4,update,update,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/1194,1,['update'],['update']
Deployability,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/288#issuecomment-514592598:54,release,releases,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/288#issuecomment-514592598,1,['release'],['releases']
Deployability,Fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; (Please reopen if this has caused any other unwelcome behavior...),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/285#issuecomment-514593091:54,release,releases,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/285#issuecomment-514593091,1,['release'],['releases']
Deployability,Fixes and build updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1165:16,update,updates,16,https://qupath.github.io,https://github.com/qupath/qupath/pull/1165,1,['update'],['updates']
Deployability,"Fixes https://github.com/qupath/qupath/issues/1468. There may still be an underlying issue whenever the display is initialized with a new server. What happened was that `selectedChannels` contained one extra channel that wasn't in `availableChannels`, so this was never removed within the `updateFromJSON` method. The bonus channel had the same name/properties as the in `availableChannels`, but the object itself was different. The situation 'corrected itself' whenever the image's channels were manipulated directly, not via 'Apply to similar image' changes in a different viewer. Nevertheless, anything in the selected channels list *should* always be in the available channels list - if that was truly the case, the previous implementation would have worked.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1482:290,update,updateFromJSON,290,https://qupath.github.io,https://github.com/qupath/qupath/pull/1482,1,['update'],['updateFromJSON']
Deployability,"Fixes https://github.com/qupath/qupath/issues/1606. Note that this makes the change at a higher level than cell detection, so potentially impacts (fixes?) other commands. Note also that it can potentially change how tiling operates, by adjusting the parent ROI temporarily. In other words, large regions may be tiled with a different origin - and so have boundaries in a different place. However it is planned for a v0.x release, and most ROIs shouldn't be outside the image, so any reproducibility impact is expected to be minimal.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1607:421,release,release,421,https://qupath.github.io,https://github.com/qupath/qupath/pull/1607,1,['release'],['release']
Deployability,"Fixes https://github.com/qupath/qupath/issues/593; When the image name is set for an image open in the viewer, the metadata is update immediately. Otherwise, the name is set only in the project (as before) and update in the server as entry.readImageData() is called.; Potentially, getting an image some other way (i.e. via a serverBuilder) could fail to give the updated name.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/761:127,update,update,127,https://qupath.github.io,https://github.com/qupath/qupath/pull/761,3,['update'],"['update', 'updated']"
Deployability,"Fixes to undo this fix:; * https://github.com/qupath/qupath/issues/1337. It turned out to be problematic in subtle ways. The main one was that there were strange permissions issues *that only emerged when the package was downloaded and installed* (not built locally). Basically, QuPath could no longer open images within its own project *unless* it had 'seen' them before in almost any interactive way (e.g. the images were opened via drag & drop, or even pasted into the script editor). When that was the case, the image opened fine consistently - and across restarts of QuPath, but not of the OS as a whole. For images QuPath hadn't seen, `new File(path).canRead()` would return false and there seemed to be no code-based way to convince it otherwise. The image-reading library didn't matter: OpenSlide, Bio-Formats, ImageJ all failed. Setting full disk access seemed promising, but ultimately didn't work consistently. The only workaround was to launch QuPath via a terminal, avoiding `launchd`. The hint that this was to blame came from; ```; tccutil reset SystemPolicyAllFiles QuPath-0.5; ```; producing an error and a report that the .plist had been modified... so macOS *knew*. Reverting this plist changes (and using Java 17) was sufficient to get things working again. The noticeable difference is that, when first trying to open an image, a system dialog pops up to ask whether QuPath can have access to Documents/Desktop/Downloads - which never happened with the change. Along the way, I learned that; * https://github.com/qupath/qupath/issues/1358. first emerged in JavaFX 20.0.1 so this PR also reverts to JavaFX 20 for now. I wanted to use Java 20 as well, but it complained when trying to build the `.pkg` from an existing `.app` because it didn't like the `app/.jpackage.xml` so that's why we're back on 17 for now.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1379:236,install,installed,236,https://qupath.github.io,https://github.com/qupath/qupath/pull/1379,1,['install'],['installed']
Deployability,Fixes; * https://github.com/qupath/qupath/issues/1191. Also extend the delay between update checks to at least 12 hours.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1194:85,update,update,85,https://qupath.github.io,https://github.com/qupath/qupath/pull/1194,1,['update'],['update']
Deployability,"For 1. you didn't need to install OpenSlide yourself - just excluding/disabling Bio-Formats is enough, and QuPath should default to using OpenSlide. This has support for at least [some .scn](https://openslide.org/formats/leica/) files, but not necessarily all of them and I guess not yours. > Note: This is true for Windows, Mac and some variations of Linux. The default version of OpenSlide might not work currently on all kinds of Linux. For 2. I fully understand you need the full-resolution image; my point is that it may not be the full-resolution image that you have opened. If there are multiple images in the file and you drag it onto QuPath, then one of these multiple images will be displayed - but it might not be the full-resolution image you want. I describe in my last answer how you can access the other images in the file from within QuPath (either under the 'Image' tab or through a project). Nevertheless, if you need to rely on Bio-Formats then the 'pink' issue has to be resolved, and the problem appears to be in Bio-Formats and not QuPath. If it hasn't been fixed yet, then if you are able to export your image in another format (e.g. .svs) then this may help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435651179:26,install,install,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435651179,1,['install'],['install']
Deployability,"For now I'd suggest trying to link up with the source code directly through IntelliJ: https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ. I was finally convinced of the value of Javadocs recently, and also discovered that those for QuPath v0.1.2 didn't compile nicely due to illegal characters and various other issues... I think I've resolved most of these problems and plan to have them working and online somewhere for the next release, once the necessary refactoring for Java 11 is completed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/230#issuecomment-431095054:451,release,release,451,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431095054,1,['release'],['release']
Deployability,"For some reason, when running `gradlew jpackage` you get the full set of qupath javadocs, but with `gradlew jpackage -P package=installer`, you get just a small subset. However you can bodge around this by explicitly asking for all the javadocs as part of the same call; it'll still copy the directory. Temporarily address #1652; won't consider it closed until jpackage contains all javadoc jars by default.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1694:128,install,installer,128,https://qupath.github.io,https://github.com/qupath/qupath/pull/1694,1,['install'],['installer']
Deployability,"For the macos-latest builds on github actions, it might suffice to add a step (assuming we set the version in an env variable somehow):. ```yaml; - name: Set version number; if: matrix.platform == 'macos-latest'; shell: bash; run: defaults write /Applications/QuPath.app/Contents/Info.plist CFBundleShortVersionString {{env.version}}; ```. and (remembering to) manually run the same command locally for the mac m1 builds, until GitHub finally releases m1 runners into the wild.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727709163:443,release,releases,443,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727709163,1,['release'],['releases']
Deployability,"For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage. Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; But I wanted to answer here quickly in empathy for the impending submission deadline...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519550791:30,install,installing,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519550791,1,['install'],['installing']
Deployability,"From [v0.1.2](https://github.com/qupath/qupath/releases/tag/v0.1.2), *Measure &rarr; Show Annotation Measurements* should be recorded in the command history - and able to generate a script line, including filtering by specified columns if required. The syntax looks like this:; ```java; saveAnnotationMeasurements('/path/to/exported/file.txt', 'Area', 'Length'); ```. There is also now a small trick that can be used to run short scripts that affect the GUI (which must be run in the [JavaFX Platform thread](https://docs.oracle.com/javase/8/javafx/api/javafx/application/Platform.html#runLater-java.lang.Runnable-)), namely to include ```guiscript=true``` at the top of the script. This isn't a good idea routinely (since it will result in the entire script being run on that thread), but it avoids needing to use ```Platform.runLater(...)``` every time this is required. An example is given [here](https://gist.github.com/petebankhead/6f73a01a67935dae2f7fa75fabe0d6ee).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/25#issuecomment-269880610:47,release,releases,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/25#issuecomment-269880610,1,['release'],['releases']
Deployability,"From https://forum.image.sc/t/qupath-script-for-random-square-selection/73258/3. Also update ImageRegion/TileRequest API to use `getImagePlane()` rather than `getPlane()`, for consistency with the `ROI` class and QuPathViewer.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1097:86,update,update,86,https://qupath.github.io,https://github.com/qupath/qupath/pull/1097,1,['update'],['update']
Deployability,"From your description I don't think this is a bug. QuPath generates markup images on demand, and then caches these for performance. A lot of the functionality depends upon this ability (e.g. measurement maps, the ability to quickly fill/unfill detections), but it does mean that there can be a short delay when generating the markup tiles each time the delay changes significantly. This delay increases with the number of detections. Working with a static markup image would be a lot faster... but also a lot more restrictive. I don't know what you mean with 'high initial latency', but a second or two is to be expected. 10-20 seconds isn't. If this is the explanation you should find the latency returns if (for example) you press 'f' to fill/unfill the detections - but goes away again after a few seconds, once the new tiles have been cached. There is a performance issue with v0.2.0-m9 when it comes to drawing annotations (under some circumstances) on an image with a large number of annotations already present, but this will be fixed in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614145319:1054,release,release,1054,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614145319,1,['release'],['release']
Deployability,"Full list from changelog (including some updated through previous commits):; * Bio-Formats 6.8.0; * See https://www.openmicroscopy.org/2021/12/09/bio-formats-6-8-0.html for details; * JavaFX 17.0.1; * Introduced to fix UI bugs, e.g. https://github.com/qupath/qupath/issues/833; * ImageJ 1.53i; * Downgrade to support headless, see https://github.com/imagej/imagej1/issues/140; * ControlsFX 11.1.1; * Groovy 3.0.9; * Gson 2.8.9; * Logback 1.2.9; * Picocli 4.6.2; * RichTextFX 0.10.7. Additionally, updated Gradle wrapper to 7.3.3 and both badass-runtime-plugin and dependency-license-report plugins.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/873:41,update,updated,41,https://qupath.github.io,https://github.com/qupath/qupath/pull/873,2,['update'],['updated']
Deployability,"Going to have to make a few assumptions here, but I think that you probably changed locations or moved your project around from M2. M2 did not really tolerate changes to project locations very well, which led to the URI update detection and some other things. To work with the M2 projects in M2 again, the project file should either be in the same place, or I think you may need to edit the .qpproj file to update the new file path to the images. That is why the project will open (that path is set wherever you have run it from), but the images will not be found. If you open the log, I suspect that is the error message (and it will show the old file path). M8 will not run M2 projects, and I don't think it is very easy to even transfer annotations between them (you would probably need a script... and I'm not sure how well it would work even then).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388#issuecomment-567689754:220,update,update,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/388#issuecomment-567689754,2,['update'],['update']
Deployability,"Good catch, thanks. Looks like this was a late and not-thought-through late addition - it should be ok to calculate the downsample and pass it directly, as [in the examples in the docs](https://qupath.readthedocs.io/en/latest/docs/advanced/exporting_images.html#tile-exporter). Will fix this for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/648#issuecomment-739896593:305,release,release,305,https://qupath.github.io,https://github.com/qupath/qupath/issues/648#issuecomment-739896593,1,['release'],['release']
Deployability,"Great! Yes, I think we shouldn't increase the download by too much. My suggestion is to use a command line flag e.g. `-Pdocs=all` to activate this. Possible options:. * `all` - all javadocs, devs building locally may (rarely) want this; * `none` - don't include any javadocs; * `qupath` - jars that include `qupath` as the first element in the name only (should include extensions); * `default` - curated list of jars; I'd say `qupath` + JTS + ImageJ as a starting point. I think the default list should only add ~10MB or so. This also allows the gradle to be simplified and `mergedJavadocs` can be removed as a task (in preparation for a nicer javadoc viewer). **Note:** Currently, I can't build this PR fully with `./gradlew jpackage` because I get either. ```; The specified installation directory '/path/to/qupath/qupath-app/build/install/QuPath-0.6.0-SNAPSHOT' is neither empty nor does it contain an installation for 'QuPath-0.6.0-SNAPSHOT'.; ```; or (if I delete that directory); ```; Entry lib/qupath-gui-fx-0.6.0-SNAPSHOT.jar is a duplicate but no duplicate handling strategy has been set. Please refer to https://docs.gradle.org/8.7/dsl/org.gradle.api.tasks.Copy.html#org.gradle.api.tasks.Copy:duplicatesStrategy for details.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369:778,install,installation,778,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2089590369,6,['install'],"['install', 'installation']"
Deployability,"Great, shall I push out a proper release of the blosc jar, then?. > Will take a bit of thought to figure out how to do it. Maybe we need an 'Open image directory' option? But then people might assume that it opens all the images in a directory (which, I suppose, it something it could do...). Both useful, but should be distinguished semantically in some way",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1971366708:33,release,release,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1971366708,1,['release'],['release']
Deployability,"Great, thanks - no need to update here, I'll add that into a new PR I'm making to use the latest changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1731070755:27,update,update,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1731070755,1,['update'],['update']
Deployability,"Great, thanks! I'll merge it for inclusion in the next point release then, I don't think the old behavior can count as anything other than a bug. If you spot any other similar problems please let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/846#issuecomment-974648914:61,release,release,61,https://qupath.github.io,https://github.com/qupath/qupath/pull/846#issuecomment-974648914,1,['release'],['release']
Deployability,"HI,. Thanks for you help!. File format: .tif . This is all the info of the image. I didn’t try with another version. Will do now. . Info under show log:. INFO: Initializing type adapters; INFO: Bio-Formats version 6.7.0; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.7.0) (18 ms); INFO: Loaded extension ImageJ extension (69 ms); INFO: Loaded extension Processing extension (30 ms); INFO: Loaded extension Rich script editor extension (81 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Update check for https://github.com/qupath/qupath; INFO: Starting QuPath with parameters: []; INFO: Setting max Bio-Formats readers to 4; WARN: Temp memoization directory created at /var/folders/_v/1nq60v556l5cbwcdv47wq76w0000gn/T/qupath-memo-4532483650866269942; WARN: If you want to avoid this warning, either specify a memoization directory in the preferences or turn off memoization by setting the time to < 0; INFO: Image data set to ImageData: Not set, 16.tif - Series 0. Again, thank you very much for your incredible help!. Manuel. > El 30 may. 2022, a las 13:52, Pete ***@***.***> escribió:; > ; > ; > Hi, some questions:; > ; > What is the file format?; > Under the 'Image' tab, what is shown at the entry 'Server type'?; > Have you been able to view the whole slide image with any other version of QuPath (e.g. on Windows)?; > Is there any relevant information under View → Show log?; > If you have an mrxs image, this may be relevant: https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917 <https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917>; > If you have an mrxs or vsi image, you might be missing the folder the should exist alongside the main image file (the folder contains the high-resolution data).; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/973#issuecomment-1141062643>, or unsubscribe <https://gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758:545,Update,Update,545,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758,1,['Update'],['Update']
Deployability,Have you tried building off a tag that corresponds to a release?; Does the downloadable v0.2.0-m11 for Linux work (built on Ubuntu)?. The current master builds for me fine on the Mac I'm currently using. The specific line that is causing you trouble is creating a Mat with JavaCPP + OpenCV. Therefore you might also try building any minimal code using these libraries to assess what is going wrong.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630295536:56,release,release,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630295536,1,['release'],['release']
Deployability,Have you tried removing the Weka extension? I don't think that has been updated since 0.1.2.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431919:72,update,updated,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431919,1,['update'],['updated']
Deployability,"Have you tried the troubleshooting instructions here?; https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos. Right-click + open has always worked for me, across multiple Mac computers - but Apple do sometimes change things. Recently, I find I need to right-click + open for the installer, and then also right-click + open for the app itself the *first* time I use it (but a simple double-click works after that).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068:103,install,installation,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068,4,['install'],"['installation', 'installer']"
Deployability,"Hello @petebankhead, I apologize for being out of network for a while. You asked me two questions above. Please let me answer them:. 1. Did you also try it without Bio-Formats, e.g. before installing it or by turning it off for .scn (as was reported to workaround the problem at #141 (comment)? ; Answer: Sure, I did that as before I wrote my first comment, but it says ""sorry I can't open *.scn"". That perhaps says that OpenSlide is not being used by default on my system. . In order to let OpenSlide help in some ways externally, I went back to Openslide.org, specifically to https://files.openslides.org/releases/1.3/INSTALL-1.3.txt , followed the instruction to install openslide on Windows 32bits. But could not have success in installing finally (couldn't run on cmd). I even didn't know whether or how I could link this to QuPath. Anyway, just letting you know my attempt. 2. is it possible that you're actually looking at an overview image/thumbnail rather than the full resolution image? ; Answer: I am afraid, it's not possible as I'll have to quantify the signals in the fully resolved scanned brightfield image (X20). That is the main goal of using QuPath for my project. I already had success in segregating my signals based on their intensity in the extracted region of the entire image, but I am stuck in loading the whole image on QuPath. If I can solve this, I am all set. Looks like this is challenging now!! I have in my mind to convert these .scn files to tiff if it is possible. I thank you for your care and suggestions. Please let me know if you have something in mind. I'll appreciate your help. Sorry again for the belated comment. Many thanks, Sincerely, Partha",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435641891:189,install,installing,189,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435641891,5,"['INSTALL', 'install', 'release']","['INSTALL-', 'install', 'installing', 'releases']"
Deployability,"Hello Pete, hello everyone on this forum!. ## Bug report. **Describe the bug**; Today, I tried opening one of our multichannel, multi-scene (TMA) Zeiss *.czi files on an installation of QuPath Version 0.2.0-m2 on a recently installed Windows 10 system. To my surprise, this failed. I tried other files of the same type and got the same result. I could not open any of the multi-scene *.czi files I have tried. Of note, I have been working with version 0.2.0-m2 for a while now and it worked very well with ""normal"" *.czi files, which are also multi-channel, but do not contain multiple scenes. It must have been by sheer coincidence that, so far, I just had not tried any multi-scene files. We have another PC with a QuPath installation in our lab, which runs 0.2.0-m1. It shows the same behaviour: no problem opening ""normal"" multichannel (4-plex) *.czi files, not able to open multi-scene files. . **To Reproduce**; Steps to reproduce the behavior:; 1. Go to File; 2. Click on open; 3. Choose a *.czi file which you know is multi-scene ; 4. See error ""Sorry, can't open ... path to file"". **Expected behavior**; These files used to open in version 0.1.3. The scenes were read as individual images. In the Zeiss ""ZEN blue"" software, there is an option to show all the scenes at once. This had not been possible in QuPath in the past. I was hoping that with the new version of Bioformats it might now be possible, but it seems we have moved a step backwards. **Screenshots**; Not applicable. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version [e.g. 0.2.0-m2]. **Additional context**; Multi-scene *.czi files have been giving trouble in the past, e.g. with memory use. However, apart from the inability to ""stitch"" the scenes and show them all at once, the prior versions of QuPath could open them. Some googleing led me to checking as to whether the Microsoft Visual C++ Runtime Redistributables are installed on my system. The answer is yes. Thank you in adv",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337:170,install,installation,170,https://qupath.github.io,https://github.com/qupath/qupath/issues/337,3,['install'],"['installation', 'installed']"
Deployability,"Hello Pete,; I have installed jdk-14 as well and when i compiled on my mac the following error showed. Starting a Gradle Daemon, 2 incompatible Daemons could not be reused, use --status for details; java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7; at org.codehaus.groovy.vmplugin.VMPluginFactory.<clinit>(VMPluginFactory.java:43); at org.codehaus.groovy.reflection.GroovyClassValueFactory.<clinit>(GroovyClassValueFactory.java:35); at org.codehaus.groovy.reflection.ClassInfo.<clinit>(ClassInfo.java:107); at org.codehaus.groovy.reflection.ReflectionCache.getCachedClass(ReflectionCache.java:95); at org.codehaus.groovy.reflection.ReflectionCache.<clinit>(ReflectionCache.java:39); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.registerMethods(MetaClassRegistryImpl.java:210); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:108); at org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.<init>(MetaClassRegistryImpl.java:86); at groovy.lang.GroovySystem.<clinit>(GroovySystem.java:36); at org.codehaus.groovy.runtime.InvokerHelper.<clinit>(InvokerHelper.java:86); at groovy.lang.GroovyObjectSupport.getDefaultMetaClass(GroovyObjectSupport.java:59); at groovy.lang.GroovyObjectSupport.<init>(GroovyObjectSupport.java:32); at org.gradle.internal.extensibility.DefaultExtraPropertiesExtension.<init>(DefaultExtraPropertiesExtension.java:29); at org.gradle.internal.extensibility.DefaultConvention.<init>(DefaultConvention.java:49); at org.gradle.internal.extensibility.ExtensibleDynamicObject.<init>(ExtensibleDynamicObject.java:60); at org.gradle.internal.instantiation.generator.MixInExtensibleDynamicObject.<init>(MixInExtensibleDynamicObject.java:35); at org.gradle.initialization.DefaultSettings_Decorated.getAsDynamicObject(Unknown Source); at org.gradle.initialization.SettingsFactory.createSettings(SettingsFactory.java:58); at org.gradle.initialization.ScriptEvaluatingSett",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:20,install,installed,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['install'],['installed']
Deployability,"Hello Pete,; I tried to install QuPATH latest version on linux CentOS.; I installed openjdk and JavaFX.; While I was installing with command:; ./gradlew createPackage -Ppackager=~/tools/jdk-14/bin/jpackage; The following error occurred (which can also be seen from the 2 screenshots attached); ![error_message_part1](https://user-images.githubusercontent.com/9053403/65413033-1344ac00-de23-11e9-988e-3dc178c613c3.png); ![error_message_part2](https://user-images.githubusercontent.com/9053403/65413036-150e6f80-de23-11e9-9275-6fe70d290ece.png). "" Task :createRuntime; /public/home/yangzhzh/tools/jdk-12.0.2/bin/jlink --output /public/home/yangzhzh/tools/qupath-master/build/jre --add-modules java.desktop,java.xml,java.scripting,java.sql,java.naming,jdk.uns> Task :createPackage FAILED"". ""FAILURE: Build failed with an exception."" . Does this mean that only this task failed (I could use some of the tasks) or the compilation failed completely?. Also, if it indicates some of the tasks can be used, is there a place showing how to use the command line to perform analyses?. I only tried it on my macMini, but it frequently aborted. That's why I switched to linux. But I wonder how to use the commands. Looking forward to your response.; Zhenzhen",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363:24,install,install,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/363,3,['install'],"['install', 'installed', 'installing']"
Deployability,Hello Pete; i tried to install qupath on my mac; and while i was installing with command the following error occured. Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories:; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; Task :createPackage FAILED. Please specify where I can find a suitable packager! Something like this:; gradlew createPac,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426:23,install,install,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/426,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hello!. As a pathologist, I use QuPath very much in my work. Though, the IT support of my institution hardly provides to install it in the hospital computers which are not assigned to the pathology department.; As I use QuPath also for labmeetings which often are held in other departments (pneumology, radiology, dermatology etc), I wonder if it would be possible to develop a portable version of QuPath.; Thank you!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391:121,install,install,121,https://qupath.github.io,https://github.com/qupath/qupath/issues/391,1,['install'],['install']
Deployability,"Hello!. I wanted to ask if there are any updates on this potential ImageJ macro runner extension. I have a similar case as @bpavie and would be interested in finding a way to send a single channel (DAB) from QuPath to ImageJ. Also, @bpavie if you found a way to get this to work, I´d be very happy about any input. Thank you!. Best, ; Julia",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68#issuecomment-1999765237:41,update,updates,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/68#issuecomment-1999765237,1,['update'],['updates']
Deployability,"Hello!. We had been running qupath for cell detection on a number of small images crops and it worked well. However later we decided that it would be better to make a mosaic out of input images and open one instance of qupath with a mosaic image and then run cell detection on a number of ROI. This time it did not work well. At the begining it seemed to work, so we started integrating that. Later it turned out that it randomly messes up giving a result of one ROI in multiple ones. You can see that in the screenshot. . ![image](https://user-images.githubusercontent.com/9865688/31624260-610252b6-b2a2-11e7-86b0-b8c8c08c3e7f.png). It happens only one in a 2-3 runs. What's more today I've been thinking about how I want to avoid multithreading in some other project (as it is error prone) and realized that it may be the case here. So I changed the number of processors per parallel command (in preferences) and it seems that the problem no longer exists :). To sum up, multi ROI cell detection fails randomly when multithreading is on.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110:375,integrat,integrating,375,https://qupath.github.io,https://github.com/qupath/qupath/issues/110,1,['integrat'],['integrating']
Deployability,"Hello, I was wondering how to package the program into an exe file from the source code of QuPath? I don't mean just download the installer you provide, but I want to package it directly from source into an exe file myself. Is there any good way? How did you do it? Your answer is very important to me, thank you!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1542:130,install,installer,130,https://qupath.github.io,https://github.com/qupath/qupath/issues/1542,1,['install'],['installer']
Deployability,"Hello, I'm one of the libvips maintainers, I can add a couple more links. libvips uses jhbuild to make windows and macos binaries, including openslide support. jhbuild came out of the gnome project: you describe a set of packages in xml and it'll download, patch, compile and link the library stack automatically. If you run inside a docker container, it's simple way to do things like nightly builds. . The build scripts are here for win:. https://github.com/libvips/build-win64. And here for macos:. https://github.com/jcupitt/build-osx. There are a set of MXE (makefile-style) scripts here for win as well, some people find them simpler to work with. https://github.com/libvips/build-win64-mxe. libvips 8.10 has added OME-TIFF pyramid support. There are some notes here:. https://libvips.github.io/libvips/2020/06/18/What's-new-in-8.10.html#pyramids. It should be quite a bit quicker than bioformats, though you may need to do some work to get the xml right. If QuPath were to use libvips for openslide import, there would probably need to be some kind of Java->libvips link. There are various Java bindings, but I've not used them myself and I don't know how suitable they would be. libvips is supposed to be mostly self-binding through introspection, so a full Java binding might only be a few weeks work. There's a high-quality C# binding which could be used as a model. https://github.com/kleisauke/net-vips. It's about 3,000 lines of code.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-716174039:257,patch,patch,257,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-716174039,2,['patch'],['patch']
Deployability,"Hello,. I have tried tissue detection using the ""Simple Tissue Detection (deprecated)"" and ""Create Thresholder"" commands. The main problem here are often missing parts of adipose tissue. Is it possible to integrate another algorithm using structure information? Described for example in ; Bug, Daniel, Friedrich Feuerhake, und Dorit Merhof. „Foreground Extraction for Histopathological Whole Slide Imaging“. In Bildverarbeitung für die Medizin 2015, 419–424. Springer, 2015. http://link.springer.com/chapter/10.1007/978-3-662-46224-9_72. I have added some lines of code for testing to ""SimpleTissueDetection2.java"". The Laplacian operator was replaced with the Canny edge detector and the floodFill steps by findContours/fillPoly using the OpenCV bindings. ; [patch-tissue-extraction.zip](https://github.com/qupath/qupath/files/5761754/patch-tissue-extraction.zip). Best regards,. Kai",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657:205,integrat,integrate,205,https://qupath.github.io,https://github.com/qupath/qupath/issues/657,3,"['integrat', 'patch']","['integrate', 'patch-tissue-extraction']"
Deployability,"Hello,. I installed QuPath and the bioformats plugin on a new computer. When I try to open a .czi image, I get the error below and the image cannot be opened. What can be the problem and the solution?. Thanks in advance!. INFO: Refreshing extensions in C:\Users\u0127462\QuPath\extensions; INFO: Added extension: C:\Users\u0127462\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\u0127462\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Bio-Formats version 6.1.1; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: ZeissCZIReader initializing E:\Konijnen\Histologie\5\6.czi; INFO: Generating memoization file E:\Konijnen\Histologie\5\.6.czi.bfmemo (9.23 MB); INFO: Returning server: Bio-Formats for E:\Konijnen\Histologie\5\6.czi; ERROR: java.lang.UnsatisfiedLinkError: ome.jxrlib.JXRJNI.new_DecodeContext()J; ERROR: QuPath exception; at ome.jxrlib.JXRJNI.new_DecodeContext(Native Method); at ome.jxrlib.DecodeContext.<init>(DecodeContext.java:43); at ome.jxrlib.AbstractDecode.decodeFirstFrame(AbstractDecode.java:101); at ome.jxrlib.Decode.decodeFirstFrame(Decode.java:51); at loci.formats.services.JPEGXRServiceImpl.decompress(JPEGXRServiceImpl.java:54); at loci.formats.codec.JPEGXRCodec.decompress(JPEGXRCodec.java:84); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3820); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3776); at loci.formats.in.ZeissCZIReader$SubBlock.readPixelData(ZeissCZIReader.java:3771); at loci.formats.in.ZeissCZIReader.openBytes(ZeissCZIReader.java:394); at loci.formats.FormatReader.openBytes(FormatReader.java:878); at loci.formats.ImageReader.openBytes(ImageReader.java:445); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.imag",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/330:10,install,installed,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/330,2,"['install', 'update']","['installed', 'update']"
Deployability,"Hello,. I've recently installed the most recent version of QuPath (0.2.0-m12) and am getting an error message saying ""Failed to launch JVM"" when I try to launch the software. I am opening the software by double clicking on the actual QuPath application, not through opening a .svs file or any other image file. I had a similar issue when I installed a new-at-the-time vesion of QuPath (0.2.0-m8) but was eventually able to run it through means that I do not recall. Can anyone please help me out with what could be going wrong? I've attached a log from the debug version when I try to open it. I'm not very strong in computer science so unfortunately I could not decipher these hieroglyphics. -Phil . ![Qupath Error](https://user-images.githubusercontent.com/62361137/82617731-dda8bc00-9b85-11ea-8a6f-5f85cc40539a.PNG)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497:22,install,installed,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/497,2,['install'],['installed']
Deployability,"Hello,; Great work on the QuPath, really nice tool!. We are working on implementing a plugin for QuPath that will provide importing slides from the PMA.Core/PMA.Start/My Pathomation servers (https://www.pathomation.com/). We are trying to achieve that by integrating our web-based tool PMA.UI (https://host.pathomation.com/sdk/pma.ui.documentation/) that provides all sort of menus and interfaces for interacting with PMA products. Unfortunately, the current build of QuPath does not contain ""jdk.jsobject"" module which is required for interaction with the WebView component. . In this PR I have introduced an adding of that ""jdk.jsobject"" to the build process and looking forward to PR being merged. Please ping me back if you have any questions/concerns. Kind Regards,; Egor",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639:255,integrat,integrating,255,https://qupath.github.io,https://github.com/qupath/qupath/pull/639,1,['integrat'],['integrating']
Deployability,Here's the complete output:; ```; > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 14; /home/gordon/src/jdk-14.0.1+7; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Linux 5.4.39-1-MANJARO amd64; Use -Ptensorflow-cpu=true or -Ptensorflow-gpu=true if you wish to include experimental TensorFlow module; Excluding project ':qupath-extension-tensorflow'; Copying license directories: ; /home/gordon/src/qupath/qupath-core/src/main/resources/licenses; /home/gordon/src/qupath/qupath-core-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-bioformats/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-openslide/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-pen/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-processing/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-script-editor/src/main/resources/licenses; /home/gordon/src/qupath/qupath-extension-svg/src/main/resources/licenses; /home/gordon/src/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /home/gordon/src/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /home/gordon/src/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /home/gordon/src/qupath/license-unknown.txt; > Task :clean; > Task :qupath-core:clean; > Task :qupath-core-processing:clean; > Task :qupath-experimental:clean; > Task :qupath-extension-bioformats:clean; > Task :qupath-extension-omero:clean; > Task :qupath-extension-openslide:clean; > Task :qupath-extension-pen:clean; > Task :qupath-extension-processing:clean; > Task :qupath-extension-script-editor:clean; > Task :qupath-extension-svg:clean; > Task :qupath-exte,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-630769356:286,install,installed,286,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-630769356,1,['install'],['installed']
Deployability,"Hey everybody, . we would like to inform you that Olympus has recently updated their .vsi file format generated by their VS200 slide-scanner. Sadly it cant be opened by qupath anymore which is a major setback for our institute. . Should i let the Bioformat guys know or is this problem reported here correctly? We can ofcourse provide sample images if neccessary. . Kind regards from germany and a big thanks for your amazing work, . Georg",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1034:71,update,updated,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/1034,1,['update'],['updated']
Deployability,"Hi @Edwinterb this seems to be a duplicate of https://github.com/qupath/qupath/issues/1250 with a potential fix. I'm not sure if/how the proposed fix could be incorporated into the build process using `jpackage` though. Is that something you've explored at all?. There's a description of the build process at https://qupath.readthedocs.io/en/0.4/docs/reference/building.html - it automatically generates the installers, and [jpackage doesn't like versions that start with 0](https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/CFBundleVersion.java).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1723256378:408,install,installers,408,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1723256378,1,['install'],['installers']
Deployability,"Hi @KidElectric I agree that's a bit odd and it took me a while to figure out what was going on. I think it's a consequence of QuPath evolving a bit and the old docs not being kept updated. And me hardly ever working with TMAs for years now. Basically, the TMA core is locked. The locking happens whenever the core is used for object detection. It's essentially inheriting the same behavior as for annotations. Unfortunately it's not very clear when an object is locked; QuPath v0.4.0 will make this more obvious through the UI thanks to; * #924. In the meantime, calling `getTMACoreList().each { it.setLocked(false) }` should resolve it. I suspect - but don't entirely remember - that `TMACoreObject.isEditible()` existed before object locking became a thing in QuPath, and when [the object hierarchy was more strict](https://petebankhead.github.io/qupath/2019/11/17/changing-the-hierarchy.html), as a way to make it harder to completely mess up TMA data by shifting a core ROI by a few pixels. It should possibly be removed, since locking gives a better way to control ROI editability than checking for detections. (I hope that helps - I'll keep this issue open at least until the javadocs are updated.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1190617712:181,update,updated,181,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1190617712,4,['update'],['updated']
Deployability,"Hi @cossiomanuel . thanks for sharing an image. The underlying bug seems to be the same as these:; * https://github.com/qupath/qupath/issues/904; * https://github.com/qupath/qupath/issues/894. It will be fixed in the next QuPath release. In the meantime, the workaround is to [add images to a project](https://qupath.readthedocs.io/en/stable/docs/tutorials/projects.html) first. I'll close the issue because that resolved it for me on Monterey, but please do let me know if it works for you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973#issuecomment-1141214361:229,release,release,229,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141214361,1,['release'],['release']
Deployability,"Hi @dkurt sorry for the long delay, I'm finally getting back to StarDist/ImageOps/normalization before the next release. In the end, percentile normalization turned out to have a lot of extra complexities that I hadn't originally considered. I've tried to address them in; * https://github.com/qupath/qupath/pull/1130; * https://github.com/qupath/qupath/pull/1146. These are intended to help QuPath fully support the [bioimage.io preprocessing spec](https://github.com/bioimage-io/spec-bioimage-io/blob/gh-pages/preprocessing_spec_0_4.md), which assumes 32-bit input and output. They also add support to normalize channels independently or jointly (since it [turns out some of the StarDist models uses joint channel normalization](https://forum.image.sc/t/stardist-in-qupath-normalization-issue/38912/13)). I hadn't realised Apache Commons Math provides [10 different methods that can give different results](https://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)), so I've now switched to using the one that matches with NumPy (and I think also R, Julia and others). Along the way, performance should be substantially improved by avoiding full array sorting and using parallelization; I'm seeing reductions from ~1 second to 0.2-0.3s in some tests. Because of these changes, I'd like to close this PR in favor of keeping the code simpler and not introducing an optimized alternative specifically for 8-bit RGB. Thanks again though - this helped to show me how slow & in need of improvement the original code was :). (If you ever want to test how the performance of your optimized approach compares with the new version, I'd be curious about the result - but I realise that probably isn't a priority. In any case, my [timing code is here](https://github.com/qupath/qupath/blob/main/qupath-core-processing/src/test/java/qupath/opencv/tools/TestOpenCVTools.java#L487)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547:112,release,release,112,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319775547,2,['release'],['release']
Deployability,"Hi @hubutui could you try building with `gradlew` (Gradle wrapper) instead? That's the 'proper' way to build QuPath - see https://qupath.readthedocs.io/en/stable/docs/reference/building.html. The part you link to in `build.gradle` isn't actually trying to specify the toolchain, but rather to recover the Java version for the toolchain that is already being used. When it comes to *specifying* the toolchain, it looks like the example you give is just copied from the code I wrote here :); https://github.com/qupath/qupath/blob/main/buildSrc/src/main/groovy/qupath.java-conventions.gradle#L11. That's what QuPath already uses, so you can already pass it a `-Ptoolchain=20` if you like. **However** I think the problem is that QuPath's build is locked to Gradle 7.5.1 because of ; * https://github.com/bytedeco/gradle-javacpp/issues/28. There hasn't been another `gradle-javacpp` release yet, and I don't want to switch to a snapshot - so I'm waiting for that before updating our build scripts. Since Gradle releases break stuff pretty often, I suspect other changes will be needed. Also, older Gradles can't build using toolchains for newer Javas and Java 20 wasn't around when Gradle 7.5.1 was released - so you're probably stuck building QuPath v0.4.x on Java 17-19. But using Gradle wrapper avoids most of those problems, as long as you use a compatible toolchain version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346:879,release,release,879,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262#issuecomment-1524666346,3,['release'],"['release', 'released', 'releases']"
Deployability,"Hi @imgifty, have you checked if it could be the same as https://github.com/qupath/qupath/issues/355?; This is referenced in the docs [here](https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux). See also; * https://github.com/qupath/qupath/issues/627; * https://github.com/libvips/libvips/issues/1862#issuecomment-715237292; * https://forum.image.sc/t/change-image-provider-after-import/42502/3; * https://forum.image.sc/t/install-and-start-qupath-ubuntu-20-04/39580/11. In summary, the specific problem with some .mrxs images isn't something that can be resolved directly inside QuPath - rather, it depends upon OpenSlide and/or its dependencies. You might be able to fix things by installing/updating OpenSlide via a package manager. (There *is* a more general QuPath issue inasmuch as it needs a better way to support OpenSlide in the future... I'll create another issue to discuss that.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-716163314:192,install,installation,192,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-716163314,3,['install'],"['install-and-start-qupath-ubuntu-', 'installation', 'installing']"
Deployability,"Hi @ipaine01 this sounds like the issue reported at https://forum.image.sc/t/bug-channel-name-changed-when-changing-color/95010/6. If so, I have already fixed it at https://github.com/qupath/qupath/pull/1508 and the fix will be available in the next QuPath release. In the meantime, the workaround is to double-click on the channel (rather than clicking the color box) since this will allow you to choose a custom color in a different way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988:257,release,release,257,https://qupath.github.io,https://github.com/qupath/qupath/issues/1539#issuecomment-2141265988,1,['release'],['release']
Deployability,"Hi @melvingelbard . Thank you for checking these old codes and adding the patch!. However, I test the `.qpmap` file again and find it might be a bug about encoding (Chinese or maybe non-ACSII characters). In my test, in the current version (v0.3.0), qupath can handle the `.qpmap` with the last line only having one value. But the example I provided had been simplified. Each unique ID not only contain “C” & four number, like “C2293"", but also a person's name in Chinese, like ""C2293张三"" (“张三” is a fabricated name). For example, this format is ok: ; `qpmap` file is attached below and feel free to delete `.txt`.; [test ok.qpmap.txt](https://github.com/qupath/qupath/files/7374322/test.ok.qpmap.txt); ```; C2293	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293									; ```; But with only one Chinese name, qupath think it‘s an image:; [test with a chinese name.qpmap.txt](https://github.com/qupath/qupath/files/7374354/test.with.a.chinese.name.qpmap.txt); ```; C2293张三	C2297	C2301	C2313	C2314	C2315	C2334	C2345	C2357	C2384; C2386	C2388	C2401	C2402	C2437	C2447	C2481	C2510	C2512	C2528; C2524	C2536	C2539	C2557	C2585	C2595	C2602	C2615		; C2293; ```; However, all the unique ID contain a Chinese name. To protect patients' privacy, only first name is shown below.; [test with all chinese first name.qpmap.txt](https://github.com/qupath/qupath/files/7374378/test.with.all.chinese.first.name.qpmap.txt); ```; C2293章	C2297顾	C2301马	C2313张	C2314周	C2315耿	C2334王	C2345田	C2357刘	C2384孔; C2386张	C2388周	C2401陈	C2402罗	C2437胡	C2447许	C2481朱	C2510嵇	C2512施	C2528周; C2524李	C2536彭	C2539司	C2557吴	C2585陈	C2595赵	C2602林	C2615孙		; C2293章									; ```. It seems another part of the code triggers the bug. In addition, all the three `.qpmap` files above work well in qupath v0.2.3.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/829#issuecomment-946818399:74,patch,patch,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/829#issuecomment-946818399,2,['patch'],['patch']
Deployability,"Hi @petebankhead , Hi @belliveau13 . The growing need coming from our users and [lacan](https://github.com/lacan)'s curiosity for the QuPath ""extension"" made him write a tool which allow the user to :; - Save/Load the current display settings; - Apply the settings to the similar images in the project . From @lacan : “_It requires QuPath 0.1.4, which is a minor update released by our group, that has a few functions made public. We’ve also created a small extension (which is currently only compatible with v0.1.4) that can handle saving and reapplying brightness and contrast settings (NEED DOC). ; Howeever, we would like to point out that you can use this version at your own risk. We will, of course merge all we can with @petebankhead’s new and coming release and modify what we need, but some functionality may be broken in between._”. In case you are interested, you can find some links on our [documentation page](https://c4science.ch/w/bioimaging_and_optics_platform_biop/image-processing/qupath/). Best,. Romain. ![image](https://user-images.githubusercontent.com/8309560/51099846-5a2dcc80-17d3-11e9-95e4-e967c8afedcc.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453955094:363,update,update,363,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453955094,3,"['release', 'update']","['release', 'released', 'update']"
Deployability,Hi @petebankhead - thank you for your helpful reply! That does the trick. It totally makes sense to lock annotations once a detection is performed. I got distracted by isEditable and didn't realize to check what other relevant methods might be inherited. I agree with removing isEditable() and I look forward to the locked/unlocked annotation update! Thank you for the great tool!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1190645393:343,update,update,343,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1190645393,1,['update'],['update']
Deployability,"Hi @petebankhead, . RGB may be the main target of QuPath and they have no such issue. But honestly the lack of ability to conveniently set B&C for all fluorescent images of the same kind is pretty annoying. We regularly have users with k.10's of multichannel images. The workaround with the retain option is okish but clearly not as convenient as a 'set B&C for all images of the same kind'. > So that remains a task for a future version... So why not letting the issue open and add a tag for a future release ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632599816:502,release,release,502,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632599816,2,['release'],['release']
Deployability,"Hi @petebankhead, apologies for creating this new enhancement without properly searching exisintg ones! ; I have read up the links and the previous request and I understand the predicament you have now. Unfortunately I do not have any experience with jpackage to be able to offer any insights, other than of course changing the verion to 1.4.4, but I appreciate this may not be desired.; Perhaps the package could be created using Xcode in future? Again not something I have much experience with as I am not a developer, but it may also aid you in future if there is a desire to sign and notorize future releases. Gatekeeper on macOS Ventura is a bit more agreesive with unsigned apps and may notify users on first launch that the app is damaged. This can be bypassed by right clicking and selecting Open. This is when we deploy the Qupath pkg to managed devices using MDM tools:; <img width=""328"" alt=""App is damaged - Gatekeeper warning Ventura"" src=""https://github.com/qupath/qupath/assets/47144936/10b13e47-916f-4ce9-a904-dd4e1c7b97bc"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727468792:604,release,releases,604,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727468792,2,"['deploy', 'release']","['deploy', 'releases']"
Deployability,"Hi @petebankhead, thank you for looking at this. Does Preview work for you on this image? I was struck by the way Preview and QuPath fail in the same way for me. Do you have a homebrew install?. You're probably doing all this already, but my macos .app builds have all native libraries in `Contents/Resources/lib/`, then a wrapper script in `Contents/MacOS/` that sets `DYLD_LIBRARY_PATH` to point to the lib directory. I include my own libtiff. My macOS build scripts are here:. https://github.com/jcupitt/build-osx/. It's gtk-osx plus some tweaks. You probably have something much fancier!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715506343:185,install,install,185,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715506343,1,['install'],['install']
Deployability,"Hi @petebankhead, thanks for the pointer. To close the loop here, **my installation of QuPath is now working as expected**, and the text is displaying appropriately. In case others encounter a similar problem, here's what worked to solve it:. 1. Download the Segoe UI font (e.g., from https://www.fontreach.com/segoe-ui-font-free-download/) and reinstall Segoe UI. For future reference, the following steps did NOT work:. 1. Reinstalling QuPath. 2. Using the `Repair` tool to repair the existing Qupath installation. 3. Updating Java to the latest version. 4. Updating OS from Windows 10 to Windows 11. Here are some links I found on 'javafx unreadable text' and Segoe UI:. 1. https://stackoverflow.com/questions/66747171/why-javafx-application-and-scene-builder-is-showing-garbled-text. 2. https://stackoverflow.com/questions/14091011/how-to-add-utf-8-for-non-english-support-in-javafx. 3. https://stackoverflow.com/questions/65150438/scene-builder-editor-displaying-weird-characters",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996226418:71,install,installation,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996226418,2,['install'],['installation']
Deployability,"Hi @pssaha did you also try it without Bio-Formats, e.g. before installing it or by turning it off for .scn (as was reported to workaround the problem at https://github.com/qupath/qupath/issues/141#issuecomment-400023655 ? Further instructions are at https://github.com/qupath/qupath-bioformats-extension#performance; This would leave the job of reading the image to OpenSlide; I don't know what the status of .scn support is there. Regarding the script, I don't see why my code should be limited in the resolution; is it possible that you're actually looking at an overview image/thumbnail rather than the full resolution image? Many slide formats contain multiple images, and versions of the same image. Under the 'Image' tab you can explore the 'Image list' and 'Associated images'. Or if you're working with a [Project](https://github.com/qupath/qupath/wiki/Projects) then all images in the file should be added to the project immediately. Nevertheless, I don't really recommend my script. It was just put together to try to help explore the issue, but it is rather inconvenient to use and I don't know if the image it produces in the end really matches with the original or not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-435301582:64,install,installing,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-435301582,1,['install'],['installing']
Deployability,"Hi Arnulf,. Thanks very much for reporting this, and I'm glad you like the software!. From what you say, the Bio-Formats extension is probably installed correctly. It doesn't appear in the 'Extensions' menu because it isn't associated with any particular command you need to run - rather, QuPath will simply start using it if it needs to. When an image is opened, QuPath will go through a list of possible image readers and take the first that works. These include:; - OpenSlide (included by default); - ImageJ (included by default); - Bio-Formats (if it's installed). The _Server type_ entry in the table that appears under the _Image_ tab on the right of QuPath shows you which reader was used for whichever image is currently open - in the screenshot below, OpenSlide was used. ![mirax](https://cloud.githubusercontent.com/assets/4690904/19970686/a81eaf8a-a1d4-11e6-810e-491db8fb6612.jpg). Unfortunately, to the best of my knowledge Bio-Formats cannot handle MIRAX files - there is some information [here](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/). Bio-Formats also cannot handle CZI files with JPEG-XR compression (which seems to be the default for whole slide scanners) - although the good news is that [this is being worked on](https://www.openmicroscopy.org/community/viewtopic.php?f=13&t=8138). OpenSlide also cannot handle CZI files (possibly for [license reasons](https://github.com/openslide/openslide/issues/144)), although this is discussed on the mailing list sometimes. However, OpenSlide should be able to handle [MIRAX](http://openslide.org/formats/mirax/) (at least 2D RGB images), and I've tried QuPath successfully with several MIRAX files that I [downloaded from the OpenSlide website](http://openslide.cs.cmu.edu/download/openslide-testdata/Mirax/). From the examples I've seen, the MIRAX images consist of two parts: a `*.mrxs` file and a separate directory containing a lot of other data files. These need to:; - have the same name (exce",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258165973:143,install,installed,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258165973,4,['install'],['installed']
Deployability,"Hi Benjamin,. Great! Glad it works, thanks for letting me know. Regarding including the extension by default, that would definitely be handy. It should also be quite easy technically (thanks to Maven), but until now I've been a bit apprehensive about what requirements it would place on QuPath in terms of the GPL... i.e. providing source code, licenses for Bio-Formats and all its dependencies etc. So while I'm still learning about that side of things, I thought that requiring a separate download direct from the OME website makes things simpler in one way, even if it's a bit inconvenient. I'll give it a bit more thought though, and hopefully will be able to come up with a more streamlined way to install it at some point. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266709923:703,install,install,703,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266709923,2,['install'],['install']
Deployability,"Hi Benjamin,. It should work already. If you download the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension), then so long as you add the latest Bio-Formats 5.3.0 then you should get CZI support immediately. I've tried it with a couple of images and it seems to work well. I have some plans to update the Bio-Formats extension to incorporate [memoization](https://www.openmicroscopy.org/site/support/bio-formats5.3/developers/matlab-dev.html#improving-reading-performance) to see if it improves performance... although it shouldn't be needed for CZI support in general. Please let me know if it works for you as well, or if you find any problems. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266703994:329,update,update,329,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266703994,1,['update'],['update']
Deployability,"Hi Egor, I was meaning to get to this - but ended up swamped by so many huge things to sort before the next release, and this one requires switching to an old computer with a small screen and no battery life... which I never quite found time to do. I've just merged in the >200 commits since this. If it builds ok I'll try to have a look in the next day or two.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298:108,release,release,108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298,1,['release'],['release']
Deployability,"Hi Guys. I am trying to open a .czi file which has 5 channel Multiplexing, this does not open at all with the logs shown below, however, the 4 plex scans open fine and we can do analysis on them. I have attached the file here https://drive.google.com/file/d/1kvqmxDA5n4Bq29FSrg8b6o_j5S--ZHp5/view?usp=sharing . Any help would very much be appreciated. Kindest of Regards . Mustafa. `INFO: Refreshing extensions in W:\Images\QuPath Extensions; INFO: Added extension: W:\Images\QuPath Extensions\bioformats_package.jar; INFO: Added extension: W:\Images\QuPath Extensions\qupath-extension-bioformats.jar; INFO: Added extension: W:\Images\QuPath Extensions\qupath-weka-extension.jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; WARN: Unable to open W:\Images\David\HW_5plex test\2018_02_02__4525.czi with OpenSlide: W:\Images\David\HW_5plex test\2018_02_02__4525.czi: Not a file that OpenSlide can recognize; WARN: Error opening W:\Images\David\HW_5plex test\2018_02_02__4525.czi with ImageJ: Could not open W:\Images\David\HW_5plex test\2018_02_02__4525.czi with ImageJ; WARN: QuPath Bio-Formats extension is in beta! Be watchful for bugs...; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; INFO: Returning server: Bio-Formats for W:\Images\David\HW_5plex test\2018_02_02__4525.czi; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' wi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145:733,update,update,733,https://qupath.github.io,https://github.com/qupath/qupath/issues/145,1,['update'],['update']
Deployability,"Hi Kai,. Thanks for the link, I only skimmed the first part of the paper. The method looks very interesting, I'll give some more thought about if/how it could be added to QuPath. In the meantime, you can already integrate whatever algorithms you like via scripting (in Groovy) or creating a Java extension. Changing/adding core algorithms raises a lot more complications in terms of user expectations and reproducibility (QuPath has thousands of users...), not to mention maintenance, and increasingly we need to think carefully about algorithms that handle images with different numbers of channels. Note that you can also use [pixel classification](https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html), which provides more sophisticated options than simply thresholding. I'd suggest reimplementing your changes as either a script or extension. Also, since this isn't a bug in QuPath, I will close the issue - the best place to discuss such things is the forum at http://forum.image.sc/tag/qupath. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753634843:212,integrat,integrate,212,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753634843,2,['integrat'],['integrate']
Deployability,"Hi Marcel, if you want to try the version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-408029691:115,update,updates,115,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-408029691,1,['update'],['updates']
Deployability,Hi Mike and Pete. Thanks for looking into it. I haven't been able to get the issue to reproduce on my end either since I made the report. I also updated to 4.4 and haven't encountered the issue with this version either. Perhaps it was just a weird day with a strange software gremlin. 🤷🏼,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1288#issuecomment-1721348517:145,update,updated,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/1288#issuecomment-1721348517,1,['update'],['updated']
Deployability,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635237844:35,upgrade,upgrade,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,Hi Pete! I've updated my pull request by basing it on `dev-0.3` and changing the parameter passing as requested.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-795593240:14,update,updated,14,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795593240,1,['update'],['updated']
Deployability,"Hi Pete, ; it happend two more times and I found in the log file, that the chosen channel 4 does not offer information for celldetection. After that QuPath switches automatically into channel 1. But Cell detection errors happen. Maybe because the switch is to slow?. You can see the nature of the cell detection errors in the screenshots. It happens, that QuPath copies celldetections form one part of the image into another one. I marked that in the screenshot above with the red polygons. . I changed the script using directly channel 1 instead of channel 4. ; Now it seems like not to happen anymore. I keep you updated. Since I changed the channel, I analysed only two more images. . The script uses fluorescence type on a DAB only stained jpg image for watershed cell detection. ; That seems to make no sence in the first place. But I found out by accident, that it allows cell detection in white areas if nuclei are not stained at all. ; This is very useful for many applications. . Is there any argument against this way for image processing of a brightfield image?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/153#issuecomment-370400288:615,update,updated,615,https://qupath.github.io,https://github.com/qupath/qupath/issues/153#issuecomment-370400288,1,['update'],['updated']
Deployability,"Hi Pete, and thanks for putting us in the loop!; It is true that the` RegionRequest` bits are a bit verbose, and any ease on that part would be welcome. . The proposed changes will have little effect on our scripts, as most calls are for `IJTools.createPathImage()` in any case... Concerning Warpy, and other extensions, we are happy to modify them and to update them no problem, and make sure to freeze the previous versions. On a personal note, breaking changes let us keep an eye on scripts that are still being used (often for projects that have little to do with the original requirements), so we kind of see it as a good thing when people come to us because something ""no longer works"". Helps us make sure that not too many weird things are being done with our scripts :) . I am pinging @rdornier, for completion, as he was working on the OMERO-RAW part we have here and might need to make some changes there, if we keep that extension after the 0.4 update. . One argument for making more intensive changes, without too much backwards compatibility is that it really forces us to keep up with the new developments, rather than let it linger on until it's too late. So I'm more in favor of ""breaking"" than keeping full backwards compatibility. Though admittedly, our user base is not as large as yours, so we won't see as much of a tidalwave... > include this in QuPath v0.4.0 (hopefully later this month). Awesome. > remove the default implementation of readRegion in v0.5.0, forcing any subclass of ImageServer to be updated to work... but still allowing scripts to use readBufferedImage, with the deprecation message logged. OK for us, though if the scripts end up breaking, this would not be a problem, kind of a nice extra way of announcing that things have changed. > remove readBufferedImage later, e.g. in v0.6.0. Not in v0.5.0 already? . Thanks again for the discussion! Looking forward to notes and comments from others!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547:356,update,update,356,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273134547,3,['update'],"['update', 'updated']"
Deployability,"Hi Pete, here is a set of screenshots replicating my steps. Now that you mention this, I am not sure if the issue generates due to user privilege's. One of the user here is an admin, the second one isn't, the same first user credentials were used to install both QuPath's. From this test I was able to navigate to all the folders of the first user. ; ; [qupath_security.pdf](https://github.com/qupath/qupath/files/9930678/qupath_security.pdf)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302305950:250,install,install,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302305950,1,['install'],['install']
Deployability,"Hi Pete,. . thank you so much!. However can you tell me which is the very latest version?. Is it “core-processing-awt” or “gui-fx”? Both were published five days ago. . Once again thank you so much for your quick support!. . Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Donnerstag, 26. Juli 2018 05:04; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . Hi Marcel, if you want to try the version described here <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html> then hopefully it resolves this issue. Be sure to fetch the very latest version, as I've only incorporated in the changes in the last few minutes. I just have one Dell touchscreen to test on (and no pen), but with these changes it certainly behaves a lot more sensibly than it did previously. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-408029691> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t627iqkNMmyVFat9LbnxkR_wY7xIks5uKYX4gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t_MNy2cguhmKmBspZsSx-GuGcLgeks5uKYX4gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-409252791:564,update,updates,564,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409252791,1,['update'],['updates']
Deployability,"Hi Pete,. . that seems to be the solution! Thank you sooo much!!!!. I still got some weird lines in the command prompt but QuPath is working now, supports all pen functions I was looking for and I am able to open *.svs files again!. . You are truly the best!. . Once again thank you so much for your fast reply and great solutions!. Best regards from New York,. Marcel. . . . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 21. August 2018 08:03; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-414650057> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t8wENrYavz2PybkZl3_cTMFIedraks5uS_bZgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t5RWGu2zR9v2mWkHqPuU0bk-gBHDks5uS_bZgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414685806:829,install,installing,829,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414685806,1,['install'],['installing']
Deployability,"Hi Pete,. I have used the code from ""Simple Tissue Detection"" for demonstration; purposes because I have no experience in Java (and Groovy too) development; at all. The few lines of demo code are simply placed between your ui/image; extraction code and the transformation of the tissue area mask to an; annotation.; Is it possible to reuse this module code and transfer to an extension or a; script?. Best regards,. Kai. Am So., 3. Jan. 2021 um 16:34 Uhr schrieb Pete <notifications@github.com>:. > Hi Kai,; >; > Thanks for the link, I only skimmed the first part of the paper. The; > method looks very interesting, I'll give some more thought about if/how it; > could be added to QuPath.; >; > In the meantime, you can already integrate whatever algorithms you like; > via scripting (in Groovy) or creating a Java extension. Changing/adding; > core algorithms raises a lot more complications in terms of user; > expectations and reproducibility (QuPath has thousands of users...), not to; > mention maintenance, and increasingly we need to think carefully about; > algorithms that handle images with different numbers of channels.; >; > Note that you can also use pixel classification; > <https://qupath.readthedocs.io/en/latest/docs/tutorials/pixel_classification.html>,; > which provides more sophisticated options than simply thresholding.; >; > I'd suggest reimplementing your changes as either a script or extension.; > Also, since this isn't a bug in QuPath, I will close the issue - the best; > place to discuss such things is the forum at; > http://forum.image.sc/tag/qupath; >; > Best wishes,; >; > Pete; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/657#issuecomment-753634843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZG4BEALLTARPZEDYZVLSYCFBTANCNFSM4VR5VYCA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/657#issuecomment-753650048:728,integrat,integrate,728,https://qupath.github.io,https://github.com/qupath/qupath/issues/657#issuecomment-753650048,2,['integrat'],['integrate']
Deployability,"Hi Pete,. I just ran the `paquo` test suite against the `qupath` snapshot version from this PR and all tests pass. So there are no concerns from our side. Also, since the current release of `paquo` supports any QuPath from `0.2.0-m9` to (now tested) `0.4.0+snapshot` (https://github.com/qupath/qupath/pull/1072/commits/a91c5bfc865710308dc22f11fd6a3f4709eaf799) having a small breaking change would also be fine. We're maintaining a bunch of checks to support the different QuPath versions anyways. So what I am saying is: please don't keep any cruft around just because it might break `paquo`. Cheers,; Andreas",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1273266885:179,release,release,179,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1273266885,1,['release'],['release']
Deployability,"Hi Pete,. I’ve attached the classifier file. Thanks very much for your help,. Cam. From: Pete [mailto:notifications@github.com]; Sent: 22 March 2018 15:07; To: qupath/qupath <qupath@noreply.github.com>; Cc: Camilla Coulson-Gilmer <>; Author <author@noreply.github.com>; Subject: Re: [qupath/qupath] loading classifier error (#160). I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that might affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the .qpclassifier file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the QuPath user forum on Google Groups<https://groups.google.com/forum/#!forum/qupath-users> I can contact you directly. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/160#issuecomment-375339965>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Aj60nFu_XkbrWH1Xr6vaENeGtItS4XCuks5tg74MgaJpZM4S3J1c>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375346429:481,update,updates,481,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375346429,2,['update'],['updates']
Deployability,"Hi Pete,. Just as on twitter. Let me know if I can help with Javadocs or creating; tutorials on Groovy for Qupath. On Thu, Oct 18, 2018 at 6:29 PM Pete <notifications@github.com> wrote:. > For now I'd suggest trying to link up with the source code directly; > through IntelliJ:; > https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ; >; > I was finally convinced of the value of Javadocs recently, and also; > discovered that those for QuPath v0.1.2 didn't compile nicely due to; > illegal characters and various other issues... I think I've resolved most; > of these problems and plan to have them working and online somewhere for; > the next release, once the necessary refactoring for Java 11 is completed.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/230#issuecomment-431095054>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AqMBwxGT_h-Sk7VfVcCIJT9OMzy4USR9ks5umLqDgaJpZM4XtyUr>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/230#issuecomment-431349486:663,release,release,663,https://qupath.github.io,https://github.com/qupath/qupath/issues/230#issuecomment-431349486,1,['release'],['release']
Deployability,"Hi Pete,. Thanks for your great work. I've just upgraded to 0.2.0-m6 from m5 and got the following exception when loading an image in a project that worked well in m5:. ""QuPath exception: missing initial moveto in path definition"". The project was created using an earlier version, but was working fine in 0.2.0-m5. The exception is thrown for images without any objects as well. OS: Windows 10, 1903",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376:48,upgrade,upgraded,48,https://qupath.github.io,https://github.com/qupath/qupath/issues/376,1,['upgrade'],['upgraded']
Deployability,"Hi Pete,. Whaoou, indeed, it works perfectly, thanks a lot!; Why not to include this extension by default in the installer (or may be add an option to install it) ?; Thanks again!; Benjamin",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34#issuecomment-266705423:113,install,installer,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/34#issuecomment-266705423,2,['install'],"['install', 'installer']"
Deployability,"Hi Pete,. thanks for your answer. I want to learn all functions of QuPath. I like ; your documentation a lot. Its well done work. Do you develop QuPath all alone by yourself?. Another question: is there a log file, QuPath is writing, that can help ; you to track and find the reason for bugs and system crashes?. We did that with our software in the past. It is very helpful. Best. David. Am 23/01/2017 um 21:44 schrieb Pete:; >; > Thanks for reporting this. I have not been working with CZI images ; > myself, but I recently received one example image with this problem. ; > Unfortunately, I have not yet been able to identify the exact cause, ; > beyond the fact that too much memory is used. Because the image is not ; > being read by QuPath directly (but rather Bio-Formats) it is a bit ; > harder for me to track down where exactly the problem lies. However, I ; > will continue to investigate, and add an update here when I learn more.; >; > In the meantime, I have been told that the Zeiss ZEN software is able ; > to export the different scenes as separate images, which can then be ; > read into a QuPath project ; > <https://github.com/qupath/qupath/wiki/Projects>. Therefore this may ; > be a workaround that enables you to work with the images in QuPath.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qupath/qupath/issues/45#issuecomment-274611030>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/APmGEV0UakHZI556HGXSHym-5fglXkHwks5rVREZgaJpZM4Lrcx8>.; >. -- ; Mit freundlichen Grüßen; Kind regards. Dipl. Biologe; David Haumann; CEO. Tel: +49 (0)7247 9342998-0; Mobil: +49 (0)171 9903171; E-Mail: david.haumann@hs-analysis.com; Webseite: www.hs-analysis.com. HS-Analysis GmbH; Steinbuch Centre for Computing (SCC), Geb. 441; Hermann-von-Helmholtz-Platz 1; 76344 Eggenstein-Leopoldshafen. Handelsregister: Amtsgericht Mannheim HRB 723920; UStIdNr: DE304551126; G",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274930919:911,update,update,911,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274930919,2,['update'],['update']
Deployability,"Hi Pete,. there's no much else I can do on this for now. It's ready to be tested by someone else in case I missed anything, and I don't have a mac to test on so I just can't guarantee this will work on all platforms. Also, the code is probably over-annotated and over-verbose on the console side, but that's just so that you can check what's going on in case there are issues I didn't notice myself. Once okayed, the code can be both toned down and cleaned up :-). If this is too much to test before the new release, we can reconsider this change for later. In fact, for this to be complete, I would also need to document my change (wouldn't be fair to let *you* do it if I wrote the feature) and add a middle button to your ""input viewer"". Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231:508,release,release,508,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312782231,1,['release'],['release']
Deployability,"Hi Pete,; I gave the full path to compile, yet it still shows error:. (base) [yangzhzh@hpc-login-gpu01 qupath-master]$ ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin; Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin; /public/home/yangzhzh/tools/jdk-14/bin --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/t",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534106040:406,install,installed,406,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534106040,1,['install'],['installed']
Deployability,"Hi Pete,; thanks for your reply!. The latency is about 3 seconds, maybe this is to be expected. :-). If I understand you correctly then the cached tiles don't have to be regenerated on each pan action but will be if I toggle annotations, detections, etc., right?. I've attached a gif animation of the behavior. ![latency-demo](https://user-images.githubusercontent.com/4951046/79364460-ad984880-7f49-11ea-8d93-1c529efe4d56.gif)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614153366:218,toggle,toggle,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614153366,1,['toggle'],['toggle']
Deployability,Hi Pete; i tried to install qupath on my mac ; and while i was installing with command the following error occured. > Configure project :; Building QuPath version 0.2.0-m9; Current Java version: 13; /Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Mac OS X 10.15.4 x86_64; Copying license directories: ; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-core-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-experimental/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-bioformats/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-openslide/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-pen/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-processing/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-extension-script-editor/src/main/resources/licenses; /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-osx.jar into build/qupath; Extracting native libraries from /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-osx.jar into build/qupath; LICENSE PATH: /Users/Gurjeetarora/Desktop/programming/GITHUB/qupath/license-unknown.txt; > Task :createPackage FAILED; -------; Please specify where I can find a suitable packager! Something like this:; gradl,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-606369334:20,install,install,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-606369334,3,['install'],"['install', 'installed', 'installing']"
Deployability,"Hi Peter,; I was trying to make a project folder sharable by sending the image files in an annexing folder. My Idea was initially to modify the project json image paths manualy to either make them relative to the project dir using ""../image/image.file"" or ""{$PROJECT_DIR}/image/image.file"". It seems that since the milestone releases the json structure and image loading changed substantially. Thus when I try the above solution, I get:. ```; ""uri"": ""file:/../image/image1.tif"" >>> I get the new prompt window to change the URIs. ""uri"": ""file:/{$PROJECT_DIR}/../image/image1.tif"" >>> Error : java.net.URISyntaxException: Illegal character in path at index 6:....; ```. So my guess is simply that the new uri process broke those old workarounds. Is the an other way to either use the ""../"" syntax or to use a project dir variable?. I know that #325 specifies that the m3 version should recognize relative paths, but I simply can't get it to work. Desktop (please complete the following information):. OS: Linux Ubuntu 16.04; QuPath Version 0.2.0-m3 vs 0.1.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346:325,release,releases,325,https://qupath.github.io,https://github.com/qupath/qupath/issues/346,1,['release'],['releases']
Deployability,"Hi Romain,. You should be able to double-click on the 'Min display' or 'Max display' labels and input values manually there. As you've likely seen, the values should persist when the image is closed/reopened within the same QuPath session, but not when QuPath is reopened. I'll give some thought to where this information could best be added to the ```.qpdata``` file, and how to set the values through scripting (similar to ImageJ's ```setMinAndMax(min, max, channels)```. If both of these can be done, then running such a script would be one way to use the same values across the whole project. I'll post an update here when I've made progress on this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-261924933:610,update,update,610,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-261924933,1,['update'],['update']
Deployability,"Hi Shushan,. I think this relates to your last question: https://groups.google.com/d/msg/qupath-users/89AbDQSknm8/SCAbYzA2CAAJ; I've written a script linked to that tries to do the job of converting cells into region annotations. The bigger question of creating full image annotations is one that I'm very interested in and (kind of) working on. Currently, I often use [QuPath + ImageJ + conventional image processing](https://github.com/qupath/qupath/wiki/Working-with-ImageJ) to generate detailed annotations; I suspect that in your case, converting to 8-bit, Gaussian smoothing and thresholding would do a pretty good job of mimicking the red annotation; if you have that, then it's possible to 'invert' the annotation to get everything else - either for the entire image, or constrained to a larger (coarse, hand-drawn) annotation. It's still quite a laborious process, but armed with QuPath, ImageJ and a few short scripts (e.g. to invert annotations) it's possible to create much better annotations than could be done by hand. I've also made some steps towards creating brush/wand annotations that can't overlap but rather snap to the boundary of existing annotations when pressing a specific key (although it's hard to not get tangled up in the various keyboard modifiers this involves, so it may need more work). I don't actually remember if it's included [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) or is more recent... but it may be worth investigating if you haven't already. Slightly further in the distance (but hopefully not too far), I've also got a prototype pixel classifier working... but again some more work needs to be done to convert this into something usable and annotation-generating. And having a very large number of annotations across a full slide might raise some performance issues that needs to be addressed to. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/222#issuecomment-424650877:1427,update,updates,1427,https://qupath.github.io,https://github.com/qupath/qupath/issues/222#issuecomment-424650877,2,['update'],['updates']
Deployability,"Hi Sorry for the delay, I replicated the steps with a clean installation no plugins and saw the same access to the files. I went to the registry and it shows the paths for the first user that installed QuPath, . did a quick search and it seems that it can be a problem with the msix packages, ; https://techcommunity.microsoft.com/t5/msix/registry-keys-created-after-installation-and-left-behind-after/m-p/1802357. [QuPath Clean installation.pdf](https://github.com/qupath/qupath/files/9973964/QuPath.Clean.installation.pdf)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309180858:60,install,installation,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309180858,5,['install'],"['installation', 'installation-and-left-behind-after', 'installed']"
Deployability,"Hi again,. In v0.1.2. the servertype is set as Openslide.; Installed Bio-Formats is 5.9.2. I could share a one-time link with you for an example file (due to privacy concerns).; Do you have a preference?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472017812:59,Install,Installed,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472017812,1,['Install'],['Installed']
Deployability,"Hi all!. I'm trying to understand the bottom line of what seems to be a tricky bug. I do not really understand all of it... what I can tell is simply that Oli (@lacan) helped me to make a 'derived path class' in order to label if a Roi is on the left or on the right part of the brain:. https://github.com/BIOP/qupath-extension-abba/blob/d9384ba7e198a454cb8e9da4661988eac7ee285c/src/main/java/qupath/ext/biop/abba/AtlasTools.java#L248. After, the serialisation was delegated to QuPath, there was nothing custom here. The abba extension has been in use since the v0.3, so both projects with the 0.3 serialization way and projects with the 0.4 serialisation way exist in the wild. Since there won't be any new release of QuPath 0.4, I think I should look at solving this issue in the extension. Is there a way to do that ?. Again, sorry for my lack of understanding, I think I need to spend a full hour to understand it and I do not know when I'll be afford it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1687573535:708,release,release,708,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1687573535,2,['release'],['release']
Deployability,"Hi all, . I want to make all of my .qupath data to patches. The problem is there are so many data to do so and I cannot find a way to do it automatically. ![2018-11-16_13-15-37](https://user-images.githubusercontent.com/26561999/48597716-744d5900-e9a2-11e8-8636-ef9211b098fb.png). As you can see at above image, I have to deal with all of those data. The simple way is just to open each data manually and run a script. However, it would be better if I can do it without any care....; Can you give me any suggestion or advice to do so?; Thanks a lot!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/246:51,patch,patches,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/246,1,['patch'],['patches']
Deployability,"Hi all,; I have an issue on QuPath recently installed on a MacBook Pro (15-inch, 2016).; When I upload an image, in the dashboard the name displayed does not correspond to the name of the file I uploaded.; <img width=""402"" alt=""Screenshot 2020-12-12 at 18 25 57"" src=""https://user-images.githubusercontent.com/66163009/101990545-bb07fd00-3ca7-11eb-9209-e9d5e8d1732a.png"">; On the contrary I do not have this issue when I open the same version of QuPath on a PC.; My version of QuPath is the following: **version 0.2.3**",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/655:44,install,installed,44,https://qupath.github.io,https://github.com/qupath/qupath/issues/655,1,['install'],['installed']
Deployability,"Hi everyone,. I hope I'm not too late but I wanted to update the feed based on my own experience with the .mrxs format from 3DHISTECH. . It's a problematic format and we have found at least 2 issues related to interoperability with both OpenSlide and Bio-Format. 1) Bio-Format: When scanning in high throughput the software piloting the scanner sometime saves as a snapshot for the current slide the snapshot of the previous slide. Bio-Format by default loads the snapshot so you have to be carefull if you're planing to do some analysis at very low resolution. 2) OpenSlide: Because of the issue above we started to use OpenSlide and grab the low-res from the stack but this also is problematic. For some slides the lowres is larger (in terms of area on the slide) then the actual scanned area on the consecutive higher resolution stack representations. We do not know why it happens only on a few slides of the batch. the converter is an option but this means you have to duplicate the data and when you have a lot slides it is such a pain when you think about the amount of actual data generated.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-340702105:54,update,update,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-340702105,1,['update'],['update']
Deployability,"Hi there,. First, thanks so much for developing such great tool! I'm wondering if there is anyway I can directly specify the size of a rectangle in terms of pixels, e.g. 256x256? Preferably, I can specify the pixel size of currently focused region denoted by the red box on the top right overview. It is also great if I can specify the pixel size of a ROI annotation in a shape of rectangle. The reason I'm asking this is because I'm developing deep learning tools to analyze WSI, and most deep learning algorithms currently only work with small patches, e.g 256x256 on level 0 WSI. I want to see to how large these patches look like and how much area they occupy in the context of the full WSI. Thanks",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/137:546,patch,patches,546,https://qupath.github.io,https://github.com/qupath/qupath/issues/137,2,['patch'],['patches']
Deployability,"Hi! I just wanted to quickly verify that you are using Pete's newest Bioformats extension (updated 20 days ago) and Bioformats 5.7.3. . I suspect everything is up to date since the 4plex works, but I had some problems a few weeks ago, and realized I had not updated Bioformats (separately from the extension) in a while, which turned out to be my problem. And being sure you have both of those may help Pete troubleshoot the problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145#issuecomment-363809051:91,update,updated,91,https://qupath.github.io,https://github.com/qupath/qupath/issues/145#issuecomment-363809051,2,['update'],['updated']
Deployability,Hi! I'm struggling with QuPath showing black squares on large parts of the image when zooming in on whole slide images. File extension is *.ndpi (Hamamatsu scanner) an size of the images are 200-2000 mb. Anyone know how to fix this? Using Qupath 0.12 with the latest BioFormats update.; ![picture1](https://user-images.githubusercontent.com/43611111/46150670-564e5c80-c26d-11e8-98a4-3af22df9f8be.png),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/224:278,update,update,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/224,1,['update'],['update']
Deployability,"Hi!. Yes, for ""portable"" I was meaning a version quich does not require installation and thus admin priviledges.; Silly me, I hadn't tried the .zip distribution even if it was written _and it should work without further installation_ :-/. Anyway, I just tried and works as intended.; Thank you! I can flag this as closed",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570505027:72,install,installation,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570505027,1,['install'],['installation']
Deployability,"Hi!; I am having some problem re-installing Qupath v0.1.3. Here is what happened recently:. I used Qupath v0.1.3 for while on mac OS with no big issues until I upgraded to Mojave. At this point Qupath started crashing (with a few more other Apps on my Mac) so I decided to downgrade to macOS Sierra using an old backup. Once I have done that, Qupath was working nicely again, however, one day I opened the software and the first things I have noticed, was that the setting I have changed in the preferences were back to the default ones. I didn't really bother, but then when I tried to open any of my immunofluorescence or chromogenic scans (.scn) Qupath was giving me an error saying that it was not able to find the images in the selected path (even if the images were there). I tried to change location of the slides or start a new project, but nothing worked. Then I tried to re-install the bioformat and qupath extentions. In this way the error message went away and I was apparently able to open the images but for some reason the actual scan wasn't there, it was only able to open the label and the prescan. I tried with different images (all .scn) but I wasn't able to fix the problem. Then I have decided to uninstall Qupath and re-install everything, and now the problem I have is that Qupath is not even opening. The installation from the repository went fine, I have also did `./gradlew clean` before running `./gradlew jfxNative` again. No errors during the installation but now when I double click on the Qupath icon, the software starts but before even opening the main interface it crashes. Any idea of what I am doing wrong?; Many thanks in advance for any help you can give me!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270:33,install,installing,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/270,6,"['install', 'upgrade']","['install', 'installation', 'installing', 'upgraded']"
Deployability,"Hi, . I got IT to reinstall as you suggested and it solved the problem. I was looking for my post to close it but can’t find it, can you close it for me please?. Thanks for your help. . Rivka. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-521570540:296,install,installing,296,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-521570540,1,['install'],['installing']
Deployability,"Hi, . I have a problem trying to open .scn images. ; So far and with the help I have found in previous threads, my conclusion is:. - Single color .scn images (ex: H&E scanned on Leica SCN4000) can be opened in QuPath by installing openslide and disabling bio-formats. - Multiplexed IF images .scn cannot be openned (ex: if scanned on a Leica Aperio Versa). To the developpers: any idea how to support multiplexed IF images with .scn extension? I would be happy to provide example images. Many thanks",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191:220,install,installing,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/191,1,['install'],['installing']
Deployability,"Hi, ; I'm having some frustrating problems.; My first problem is: I counted cells manual (negative and positive), and then ran the 'positive cell detection' on my ROI. Thereafter, Qupath did not save my negative count but only my positive cells. Why is that? Now I lost a whole morning counting more then 2000 cells for nothing. Really frustrating and time consuming. Second problem: The program sometimes fails to run the command on both single and multi ROI. My solution was save the file, close Qupath and open it again. However, my third problem came a cross.... It didn't want to open my Qupath data file... Other files can be opened. I tried to open in by clicking on the file self and by drag and dropping it into qupath. I also tried opening the original file (CZI) and then drag and drop the Qupath file, but without succes. Does anyone have answers and release me of my frsutrations? or can the bugs be fixed please?. Cheers, ; Eline",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112:863,release,release,863,https://qupath.github.io,https://github.com/qupath/qupath/issues/112,1,['release'],['release']
Deployability,"Hi, I'm getting the following bug when launching QuPath from a ssh server:. WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @62379589'; Exception in thread ""main"" java.lang.UnsupportedOperationException: Unable to open DISPLAY; at com.sun.glass.ui.gtk.GtkApplication.lambda$new$5(GtkApplication.java:165); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.glass.ui.gtk.GtkApplication.<init>(GtkApplication.java:163); at com.sun.glass.ui.gtk.GtkPlatformFactory.createApplication(GtkPlatformFactory.java:40); at com.sun.glass.ui.Application.run(Application.java:145); at com.sun.javafx.tk.quantum.QuantumToolkit.startup(QuantumToolkit.java:290); at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:292); at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:162); at com.sun.javafx.application.LauncherImpl.startToolkit(LauncherImpl.java:651); at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:671); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196); at java.base/java.lang.Thread.run(Unknown Source). Anyone knows why this is happening?. Using latest version QuPath and JDK 17, but nothing seems to work",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1547:104,configurat,configuration,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/1547,1,['configurat'],['configuration']
Deployability,"Hi, ah, silly error on my part. Thanks. . Ok, so now the imports seem to work, but something isn't connecting right for the jep section of the script. ```. INFO: Mean red (from Java): 86.81525; INFO: Mean green (from Java): 72.492275; INFO: Mean blue (from Java): 68.141675; INFO: java.lang.UnsatisfiedLinkError: no jep in java.library.path. ```. I tried the script you sent and received:; ```. INFO: Current image data: ImageData: Fluorescence, IMG_5_11_sq; INFO: Current image server: ImageJ server: /home/bl/Documents/IMG_5_11_sq.png (IMG_5_11_sq.png). ```. I should say that I think jep is installed ok, though I have only played with for a second this morning. But I can start jep, and do the basic test on the jep git Getting Started page (the python to java one).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262781834:594,install,installed,594,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262781834,1,['install'],['installed']
Deployability,"Hi, it looks like in your script the coordinates of the points will be export in pixel units. The annotations (in the second export) will be export in µm (probably) or pixel units depending upon the image - but the column heading should tell you which. (I edited your post to update the code formatting to make it more readable)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-690897795:276,update,update,276,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-690897795,1,['update'],['update']
Deployability,"Hi, sorry I'm coming to this a bit late... From looking at the image, I agree that it would be good to try to find a way to detect the regions you want with a threshold (maybe *Simple tissue detection* or an ImageJ macro). However, I can't really say very confidently how well this will work since I have not tried an application like this before. With regard to *Trainable Weka segmentation*, you might be able to run it through QuPath by pointing the ImageJ plugins directory (under *Edit &rarr; Preferences...*, double-click on the text field beside *ImageJ plugins directory*) somewhere where the *Trainable Weka segmentation* plugin and all its dependencies can be found (e.g. the *plugins* directory of a Fiji installation).; Then use *Send region to ImageJ* to send all or part of the image to ImageJ for processing, and call the *Trainable Weka segmentation* from there. > Note that QuPath won't actually use Fiji itself, but rather ImageJ1, so whenever you set the *plugins* directory to be that of a Fiji installation you may find that some commands don't work (if they have Fiji-specific dependencies). But I think *Trainable Weka segmentation* is ok. However, that might not be necessary. QuPath doesn't offer a pixel classifier like *Trainable Weka segmentation* or *ilastik*, but you can use QuPath's object classifiers to get a similar result. The process would be something like this:. * Create an annotation around an area of interest (e.g. manually, or with *Simple tissue detection*); * Run *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Create tiles* to create square tiles of any size (*don't* choose 'Make annotation tiles' in this case!); * Run *Analyze &rarr; Calculate features &rarr; Add Intensity features (experimental)* and choose a few color transforms along with *Mean* and *Compute Haralick features* from the bottom (and others if you like). If your square tiles are tiny, set *Region* to be either *Square tiles* or *Circular tiles* and choos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-288506877:716,install,installation,716,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-288506877,4,['install'],['installation']
Deployability,"Hi, the instructions are for QuPath v0.1.2 (which uses Maven) but the repo contains the code for the next release (which uses Gradle and has a build.gradle instead of pom.xml). As part of that, the API is also changing rather considerably. The goal is to stabilize things to make it easier to add extensions, but limited by a chronic lack of time and the fact I'm the only person working on the software (although there's [a position being advertised to join me](https://www.vacancies.ed.ac.uk/pls/corehrrecruit/erq_jobspec_version_4.jobspec?p_id=048500)...). I don't know what's the goal of your extension, but my advice would be to focus on scripting first. It's generally much faster to get things working, and you can convert your Groovy script to a Java extension at some point in the future. I often prototype extensions first as scripts (and usually never actually need to convert the scripts to extensions). My instructions for getting started with IntelliJ are on the Wiki, which you've seen. I don't know what specifically 'I was unsuccessful' means, so really can't expand on that without knowing _exactly_ where or how it went wrong. Note that the instructions were written for v0.1.2 and need updated, but this won't happen until v0.2.0 is ready. Note also that the Q&A forum is at https://forum.image.sc/tags/qupath and this is the place to ask questions that are not directly related to a bug in the software.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/338#issuecomment-511680035:106,release,release,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/338#issuecomment-511680035,2,"['release', 'update']","['release', 'updated']"
Deployability,"Hi, this looks to be the same issue as #74 . It should only affect images that are being read with ImageJ, because of the way in which a cropped region is extracted (when you're unlucky, a second thread might call ```setRoi``` at an inopportune moment). One potential quick fix in the code could be to make [this method](https://github.com/qupath/qupath/blob/v0.1.2/qupath-extension-ij/src/main/java/qupath/imagej/images/servers/ImageJServer.java#L175) synchronized, although this could be refined a bit further. To the best of my knowledge, images accessed any other way (including all whole slide images) should be unaffected. This should be fixed in the next QuPath update. In the meantime, restricting the number of threads should work too.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-336955291:669,update,update,669,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-336955291,1,['update'],['update']
Deployability,"Hi, this sounds potentially very challenging in H&E. It may be possible using a combination of existing QuPath features, such as superpixels and random trees classifiers and cell detection, although the steps are likely to be quite involved and elaborate. But it is not really possible to judge the difficulty without seeing some example images. I'm currently embroiled a multitude of tasks necessary to make a new release of QuPath ahead of some talks and workshops in March; this release will have some new features that may very well be useful for this application, but I need to finish them first. In the meantime, since this is more a question about applying the software, and not an 'issue' as such, you might get more answers on the QuPath user forum at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users)*. I'm afraid I can't help more myself at the moment, since I need to dive back into the code to try to meet the deadline... > *-Before getting too attached to the Google Group, I should mention that the main forum will likely move to https://forum.image.sc to coincide with the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/262#issuecomment-458652442:415,release,release,415,https://qupath.github.io,https://github.com/qupath/qupath/issues/262#issuecomment-458652442,3,['release'],['release']
Deployability,"Hi,. I am trying to use python with QuPath via JEP, as per the docs. I am using linux (Fedora 24) and am having trouble locating the JEP directory to symlink, and also I am not sure from the docs exactly which directory to put the symlink in. . I've tried symlinking from the jep folder in the python installation site-packages directory, to the jars directory under qpath. I've also symlinked all the contents of the jep folder, including the jep-3.6.1.jar, into the QuPath/apps/jars directory. I still get 3 errors when I run the groovy script provided in the docs; they are just 'unable to resolve class jep.Jep', etc. I appreciate your help, thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27:301,install,installation,301,https://qupath.github.io,https://github.com/qupath/qupath/issues/27,1,['install'],['installation']
Deployability,"Hi,. I have a problem installing QuPath packages in my desktop (Window 10). First I downloaded QuPath 0.2.0 and installed it in 'My document'. I then downloaded;; * A Java 11 JDK from https://jdk.java.net/11/; * JPackage from https://jdk.java.net/jpackage/; * The QuPath source code from https://github.com/qupath/qupath/releases/tag/v0.2.0-m2. I unzipped above zip three zip files under 'My document' but different folder respectively.; I did not see any installation file for above files. Then, I started a command prompt, and move to the folder containing Qupath-0.2.0.exe file.; Then I ran ./gradlew.bat createPackage -Ppackager=/path/to/jpackage; I got error message saying; '.' is not recognized as an internal or external command,; operable program or batch file. Can anybody tell me what I have done wrong or how to have packages installed in Qupath in my situation?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303:22,install,installing,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/303,5,"['install', 'release']","['installation', 'installed', 'installing', 'releases']"
Deployability,"Hi,. I have trouble installing qupath 0.2.1 on ubuntu 20.04. I extracted the file to /Home but what do I have to do next? - I tried it several times also with downloading other packages in the past, but I forgot the steps, but I was not successful whatsoever. And I am new to Ubuntu. I was hoping there is just some ""make install"" command?. Best,; Sophia",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546:20,install,installing,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/546,2,['install'],"['install', 'installing']"
Deployability,"Hi,. I spend a few hours to get the Deep Java Library, PyTorch to work. And I did not succeed. Installed Cuda 11.8 and cudnn 11.x. Made a python env with mamba, created the launcher. Changed my System Path. And finaly it seemed to work. But:. ai.djl.pytorch.jni.LibUtils - No matching cuda flavor for win-x86_64 found: cu118. Looked at all forums and searched the internet. I am sorry to say, but I give up. There is just no way to get this running easily it seems. So no InstanSeg and other Deep Learning models that depend on this Deep Java Library for me. . There just must be a way to make it work more easily. Maybe just use the python version (like BIOP/Cellpose does). In that case you depend on a single python environment!. Best, Ron",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640:95,Install,Installed,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640,1,['Install'],['Installed']
Deployability,"Hi,. I'm encountering the following error when ever I click 'automate' on the menu bar:. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at qupath.lib.gui.ScriptMenuLoader.addMenuItemsForPath(ScriptMenuLoader.java:134); at qupath.lib.gui.ScriptMenuLoader.updateMenu(ScriptMenuLoader.java:115); at qupath.lib.gui.QuPathGUI.lambda$new$5(QuPathGUI.java:662); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:199); at javafx.scene.control.Menu.show(Menu.java:408); at com.sun.javafx.scene.control.skin.MenuBarSkin.lambda$rebuildUI$401(MenuBarSkin.java:677); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.eve",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/139:142,update,update,142,https://qupath.github.io,https://github.com/qupath/qupath/issues/139,2,['update'],"['update', 'updateMenu']"
Deployability,"Hi,. I'm getting an error when loading my classifier, which has previously been working absolutely fine. I am able to bypass the issue on closing and reopening the file. This has been happening for 2 days. I have copied and pasted the classifier for my colleague to use, however she's now getting the same error but it won't resolve for her on reopening the file. Is there something we're doing wrong or is this a software problem? Can you let me know how I can fix it/when the issue will be resolved?. Thanks,. Cam. The error message is as follows:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: [N:\Faculty-of-Medicine-and-Health\LICAP\DATA\PTHY\Pathology\Breast Group\BCCTB Samples\Audits\BCN QA 2017\Frozen samples QuPath tumourstromaratio\Batch_2\Tumour\402428.svs]; INFO: Test reading thumbnail with openslide: passed (BufferedImage@5d207157: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 193 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for N:\Faculty-of-Medicine-and-Health\LICAP\DATA\PTHY\Pathology\Breast Group\BCCTB Samples\Audits\BCN QA 2017\Frozen samples QuPath tumourstromaratio\Batch_2\Tumour\402428.svs; INFO: Estimating H & E staining; INFO: Image data set to ImageData: Brightfield (H&E), 402428; INFO: 1 region detected (processing time: 215.44 seconds); INFO: Processing complete in 215.63 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.tissue.SimpleTissueDetection2 {""threshold"": 219, ""requestedPixelSizeMicrons"": 2.0, ""minAreaMicrons"": 20.0, ""maxHoleAreaMicrons"": 200.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; INFO: Adding Area (AWT) to hierarchy; ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160:604,update,update,604,https://qupath.github.io,https://github.com/qupath/qupath/issues/160,1,['update'],['update']
Deployability,"Hi,. In previous versions, selecting an annotation on the Annotations panel made the displayed view to be updated (at any given zoom level) so the selected annotation was visible, which is very useful to quickly review them. This is (mostly) not happening in m12. Best regards,; Carlos",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/502:106,update,updated,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/502,1,['update'],['updated']
Deployability,"Hi,. Looking back that the documentation, I see it wasn't the clearest... I've just tested the following on macOS Sierra with a downloaded QuPath and I was able to run the script in the docs after the following steps:. 1. If you don't already have a QuPath extensions directory, you can either set one under *Edit &rarr; Preferences* or follow the process to install any extension that takes your interest [here](https://github.com/qupath/qupath/wiki/Extensions). 2. Next, locate where JEP is installed and create a symbolic link in your QuPath extensions directory to its Jar file. For me, this was the command:; ```; ln -s /usr/local/lib/python2.7/site-packages/jep/jep-3.5.3.jar /Users/pete/QuPath/extensions/jep.jar; ```. 3. Alongside the Jar, there were also two native files ```jep.so``` and ```libjep.jnilib```. The easiest way to get QuPath to see them is simply to copy these into your QuPath directory containing ```QuPathApp.jar``` (there should already be other native libraries there too). I haven't tested this on Linux, but would be very interested to know if it works (or, indeed, if other things are working fine for you with Fedora). If so I'll update the docs to be a bit clearer. Note that I never took the use of JEP with QuPath far enough for it to be genuinely useful, since I didn't have a sufficient need for it myself until now. But I think the ability to run Python scripts could be really valuable, so I'd be happy to help with setting this up or coming up with a neat way to wrap or convert data structures. If you'd like to discuss more the kind of applications you see this being useful for (e.g. segmentation, classification, manipulating objects, statistical analysis...) just let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262733775:359,install,install,359,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262733775,6,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"Hi,. QuPath is brilliant and the recent updates for IF images have been very helpful - so thanks for all the work you've put into it. I am now trying to get mean intensity values from manually annotated ROIs within multiplex IF images with 11 channels (with hopes to go up to 20-30 channels in the future). Unfortunately, it seems that QuPath can currently only provide mean intensity measurements for a maximum of 8 channels at the moment. Is it possible to overcome this limit?. I tried to do this using the following Groovy script:. `setImageType('FLUORESCENCE');; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""downsample"": 1.0, ""region"": ""ROI"", ""tileSizePixels"": 200.0, ""channel1"": true, ""channel2"": true, ""channel3"": true, ""channel4"": true, ""channel5"": true, ""channel6"": true, ""channel7"": true, ""channel8"": true, ""channel9"": true, ""channel10"": true, ""channel11"": true, ""doMean"": true, ""doStdDev"": false, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickMin"": NaN, ""haralickMax"": NaN, ""haralickDistance"": 1, ""haralickBins"": 32}');`. This generated intensity measurements for the first 8 channels. However, I get the following error:. > WARN: Unable to set parameter channel9 with value true; > WARN: Unable to set parameter channel10 with value true; > WARN: Unable to set parameter channel11 with value true; > WARN: Unable to set parameter haralickMin with value NaN; > WARN: Unable to set parameter haralickMax with value NaN. A simple workaround would have been to switch the first few channels to ""false"" and the remaining channels to ""true"" in the above script. Sadly that didn't work either. Would be grateful for your help with this. Cheers,; Ashwin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/197:40,update,updates,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/197,1,['update'],['updates']
Deployability,"Hi,. Strange... my quick attempt on Ubuntu also didn't work, but apparently for a different reason... An alternative method to add to your library path would be to track down the ```QuPath.cfg``` file within your QuPath installation, and amend it - something like the following:; ```; [JVMOptions]; -Djava.library.path=.:/usr/local/lib/python2.7/dist-packages/jep/; ```. With this, it shouldn't be necessary to copy the files. Does this help at all, or is it the same error?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262835928:220,install,installation,220,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262835928,1,['install'],['installation']
Deployability,"Hi,; I am trying to set the ImageJ plugins directory and I am getting the following error:. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at java.io.File.<init>(File.java:277); at qupath.imagej.gui.IJExtension.lambda$1(IJExtension.java:468); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.MenuItem.fire(MenuItem.java:462); at com.sun.javafx.scene.control.GlobalMenuAdapter.lambda$bindMenuItemProperties$20(GlobalMenuAdapter.java:153); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.MenuItem.fire(MenuItem.java:462); at com.sun.javafx.tk.quantum.GlassSystemMenu$1.action(GlassSystemMenu.java:238). Thanks in advance for the help",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/91:145,update,update,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/91,1,['update'],['update']
Deployability,"Hi,; I just quickly built your branch on Linux and can see no NUL in the image name anymore. Unfortunately I am a bit busy and can't build on Windows right now - but my SIS-TIFF files need further fixes that will (hopefully) show up in the next Bioformats tag version anyway so this should probably not delay the QuPath release today. 👍 . (FYI: The pixel calibration is completely off for SIS-TIFFs but this should be fixed in Bioformats HEAD and will likely show up in the next release - https://github.com/ome/bioformats/pull/3535)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664984542:320,release,release,320,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664984542,2,['release'],['release']
Deployability,"Hi,; On a whole-slide-image I use simple tissue detection to select the whole tumour area, then positive cell selection to identify positive cells and finally I train a classifier to distinguish between tumour and stromal cells.; I would like to know if it is possible to send to ImageJ ONLY the annotation of tumour cells because when I click send region to ImageJ i get all annotations as overlays even if I remove stromal annotations using Toggle dispaly class.; Thanks",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/108:443,Toggle,Toggle,443,https://qupath.github.io,https://github.com/qupath/qupath/issues/108,1,['Toggle'],['Toggle']
Deployability,"Hi,; Thanks for the reply and sorry for late feedback. So, I tested it all with a fresh install of m3 and a clean dedicated folder for testing. the structure is as follows:. -TestFolder; -- ImageFolder; -- qupath_project_folder1; -- qupath_project_folder2. For both projects, I generate a fresh initialization, load all the images in the ImageFolder and do some operations (shapes, cell detection ...). My aim is to be able to open either of both projects and it finding the relevant image files relatively (going one folder up), especially after moving the TestFolder around. Now I tested it on different PCs and VMs and keep getting the same behavior, i.e. getting the prompt window to manually re-specify the URI paths. So either I am missing something or I am going wrong about it. While the prompt is not a problem for me per se, when sending the files to collaborators, people tend to get scared or confused by the prompt, so I wanted to manually specify relative paths to make it more user friendly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346#issuecomment-518195636:88,install,install,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518195636,2,['install'],['install']
Deployability,"Hi,; the update from 0.0.7 to 0.1.1 broke MRXS support.; The files (Brightfield, RGB, JPG) now only open in lowest resolution.; Changing back to version 0.0.7 fixes the problem. Thanks for all you great work,; Mario",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32:9,update,update,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/32,1,['update'],['update']
Deployability,"Hi. Your right it is (maybe) not a bug. But the beauty of QuPath is/was the ease of use and ease of installing. We run it on 20+ workstations. But these new extensions that use the DeepJava Library are (for me) a big pain. Maybe you (not me) can after installing all the prerequisites and tweaking get it working. But it will be impossible to install it next to many other programs on all our workstations. There must be a easier way. Or a better explanation. And for just using the CPU only. I still had to do all the Cuda and tweaking. Out of the box it does not support CPU only. Best, Ron. And just to be clear. I love your work!!! I love QuPath!!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352862393:100,install,installing,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352862393,6,['install'],"['install', 'installing']"
Deployability,"Hi:. The latest release of the QuPath v0.5.1:. [QuPath-v0.5.1-Mac-arm64.pkg](https://github.com/qupath/qupath/releases/download/v0.5.1/QuPath-v0.5.1-Mac-arm64.pkg); [QuPath-v0.5.1-Mac-x64.pkg](https://github.com/qupath/qupath/releases/download/v0.5.1/QuPath-v0.5.1-Mac-x64.pkg). The issue with Mac applications that use ad-hoc signatures is that, while they provide a code signing digest (or cdhash) allowing macOS to verify whether the app or component has been altered, they don't verify the identity of the developer. This means that macOS can detect if the code has changed but has no way to confirm who signed the code or if it comes from a trusted source. Key concerns with ad-hoc signatures include:. No Developer Identity Verification: Ad-hoc signatures don’t provide information about the developer’s identity, unlike certificates from Apple, which are linked to verified developer accounts. This can pose security risks as it’s harder to establish trust in the source of the code. Limited Use Cases: Ad-hoc signing is typically used for specific scenarios, such as:; Unsigned code running on Apple Silicon, where macOS requires all code to be signed, even if it’s just ad-hoc.; Web Apps on macOS 14 Sonoma, where the code isn't distributed via traditional app distribution methods. Security Risks: Since there is no certification authority involved in ad-hoc signing, it is easier for malicious or unauthorized code to be signed ad-hoc and executed, which could expose the system to potential vulnerabilities. I would recommend moving away from ad-hoc certificates and following the Apple Developer guidelines on application creation & distribution. For example, here is a free GUI application called ""Apparency"" that will help explain issues and test your applications.; https://mothersruin.com/software/Apparency/. ![image](https://github.com/user-attachments/assets/d69830e4-e271-430a-987c-c58b1b708481); ![image](https://github.com/user-attachments/assets/4a03b7ba-c911-486b-91de-2d86d0e",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1672:16,release,release,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/1672,3,['release'],"['release', 'releases']"
Deployability,"Hmm, I am no longer seeing this behavior (no changes that I am aware of). It was the full release of M9. I am actually using the same project now that I was before, with untyped files still in the project Scripts folder when I was testing it before. I will reopen if I can reproduce the exact steps, since it seems to be more involved than simply happening every time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/433#issuecomment-613481580:90,release,release,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/433#issuecomment-613481580,2,['release'],['release']
Deployability,"Hmm, I worry about burying the option in the preferences. It reminds me of ImageJ's 'Black background' option where a hidden preference causes different results for different users, making it harder to give instructions to anyone else. If you want to run as script as a command (with menu item), you can use this:; ```groovy; getQuPath().installGroovyCommand(""Objects>Select children"", ; """"""; def children = getSelectedObject().getChildObjects(); selectObjects(children); """"""; ); ```. To make it always available without the hassle of creating an extension, you can include it in a startup script file - basically any Groovy file, which can be set in the preferences under 'Startup script path'. This should allow you to add multiple custom commands in menus of your choosing, to run any short scripts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777:338,install,installGroovyCommand,338,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1851926777,1,['install'],['installGroovyCommand']
Deployability,"Hmmm, this isn't a scenario I ever had to deal with myself... it looks like an unfortunate limitation of how the project arranges ```.qpdata``` files simply according to the image name stored for the entry in the image. There's no 'good' way to fix it currently, unless you're willing to put all your images in separate projects... which would kind of defeat the purpose of using a project. So you could try this as a workaround:. ```groovy; guiscript=true. // Get QuPath & project; def qupath = getQuPath(); def project = qupath.getProject(). // Loop through images, setting the name; // (actually accessing a private field... therefore 'bad'); project.getImageList().each {; def path = it.getServerPath(); int ind = path.lastIndexOf(':'); def scene = path[ind+1..-1]; def name = new File(path[0..ind-2]).getName(); it.putMetadataValue('Slide_ID', name); it.imageName = name + ' (' + scene + ')'; print it.imageName; }. // Need to set to null first to force update; qupath.setProject(null); qupath.setProject(project). // Be very careful is you use this to write the project!; // The logic is a bit weird and it will probably overwrite ; // the existing project - so duplicate your .qpproj file to be safer; //qupath.lib.projects.ProjectIO.writeProject(project); ```. Basically, this should rename the images in the project to include both the original file name and the scene. This should then be used by QuPath when arranging the ```.qpdata``` files afterwards. It won't automatically update the names of any existing data files - this would have to be done manually. It has the added bonus of setting the 'Slide_ID' keyword; if you right-click on the project, you can then choose to *Sort by &rarr; Slide ID*.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332598953:959,update,update,959,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332598953,4,['update'],['update']
Deployability,"However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](https://petebankhead.github.io).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1665,release,release,1665,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['release'],['release']
Deployability,"I also had some problems using the bioformats package and scn files. After installing the plugin, when I try to open my images on qupath, qupath tries to open my scn files using the bioformats server (not openslide) and it cannot determine the magnification metadata I tried manually editing the metadata into the qpproj file, but this had no effect. Turning off the bioformats plugin in edit>preferences resolved my error.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-400023655:75,install,installing,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-400023655,1,['install'],['installing']
Deployability,"I am encountering an issue with the QuPath Viewer while attempting to load a .tiff image. When I click on the image to view it in the viewer, the QuPath UI hangs, and it appears that the OpenSlide library is not loading correctly. I have attempted to resolve this by installing the OpenSlide library using the package manager, but the problem persists. The logs indicate that OpenSlide is loaded successfully, yet an error is thrown stating “No OpenSlide search path supplied and failed to load OpenSlide.”. It’s worth noting that I have created a project and added the .tiff image to the project using a Groovy script. I am invoking QuPath through the command line. Note: I have successfully loaded a .tiff image in QuPath Viewer using a script without any issues on the Windows platform(openslide installed with qupath binary). However, on Linux, I encountered a problem where OpenSlide is not installed by default with QuPath binaries. Even after installing OpenSlide separately using a package manager, the issue persists. Any insights or suggestions on resolving this issue would be greatly appreciated. qupath_exe=“/opt/QuPath/bin/QuPath”; “$qupath_exe” script /usr/addImages.groovy --args “$volumeDataDir” --args “$QupathProjDir”; “$qupath_exe” -q -p “$QupathProjDir”/QuPathProject/project.qpproj. OS : Ubuntu :22.04. ![image](https://github.com/qupath/qupath/assets/6927393/5bc64744-cde9-4e11-8261-dc2c401727f4); ![image](https://github.com/qupath/qupath/assets/6927393/cad90c79-ef22-4339-8068-e50407028b6c)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1491:267,install,installing,267,https://qupath.github.io,https://github.com/qupath/qupath/issues/1491,4,['install'],"['installed', 'installing']"
Deployability,"I am so sorry,; I found this to be my fault. I did not add the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-nat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:218,deploy,deploy,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,20,['deploy'],['deploy']
Deployability,"I am sure the answer to this question is simple but I just don´t find it in the ""user guide"". I created a detection classifier (to distinguish between tumor, stroma and immune cells) which was doing ok, so I saved it for later use. When I created it, it got better and better as I drew more annotations and set their class. However it is not working as well as it needs to. So I loaded it again today in an attempt to continue training it. I opened the classifier (Classify -> load classifier (the one I had saved the other day) -> run classifier. At this point it worked like it had when I saved it. How do I continue teaching it from here on? Drawing annotations and setting their class doesn´t work like it did when I created the classifier. Selecting Classify -> create detection classifier does not work because this way I am creating a whole new classifier. How can I get my existing classifier in the mode where I can press auto update or where it automatically continues to update? I must be missing a very simple step! . I have one more question: I am using the classifier on a TMA slide. The TMA cores differ quite a bit. So I have to adjust/train the classifier slightly for each single core until it works the way I want. Do these changes in classification only apply to the selected annotation (TMA core) or does this automatically change the classifications already made using the classifier in other TMA cores on the same slide? ; Thank you very much for your help! . Kind regards,. Liese",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57:936,update,update,936,https://qupath.github.io,https://github.com/qupath/qupath/issues/57,2,['update'],['update']
Deployability,"I assume so as well, although I've never done it. I generally use Eclipse for working with the full QuPath source/extensions, and IntelliJ for most other things. I dabbled briefly with dl4j in IntelliJ, but never introduced it to QuPath and never took the time to figure out how to set up QuPath in IntelliJ. I wouldn't claim my Eclipse setup is particularly elegant, but there is some information [here](https://github.com/qupath/qupath/blob/076fb69112b22a299e70819b5af31bd469e47e8a/src/main/resources/eclipse/README.md). The ability to run in debug more, and even to change the code in a running application (within limits), is extremely useful. If you did want to keep the worlds separate, with QuPath in Eclipse (or as a standalone application) and dl4j in IntelliJ, then you might have some benefit in creating a symbolic link in your QuPath extensions folder to wherever your dl4j jars are located; if I remember correctly, QuPath should look into subdirectories (symbolically linked or otherwise) for dependencies. At least that may allow the jars to be managed by IntelliJ, and updated without needing to copy them over to QuPath again. Native libraries will still need to be handled, but this only involves setting the path to the directory containing them anyway.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-301229258:1086,update,updated,1086,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-301229258,1,['update'],['updated']
Deployability,"I attempted to replicate this on a standard system (Win10 Pro, no active directory, no abnormal group policy) and was not able to. The normal user with the admin installed QuPath was not able to access any of the admin folders, nor could they see projects that had been opened/created by the admin user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309474176:162,install,installed,162,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309474176,1,['install'],['installed']
Deployability,"I briefly explored this, and can confirm that incorporating following logic into `readRegion` **didn't** solve things... ```java; // Fix output size to match tiles, if necessary; 		// See https://github.com/qupath/qupath/issues/1527; 		if (request.getDownsample() > 1 && nResolutions() > 1; 				&& request.getMaxX() <= getWidth() && request.getMaxY() <= getHeight(); 				&& request.getMinX() >= 0 && request.getMinY() >= 0) {; 			int minX = Integer.MAX_VALUE;; 			int minY = Integer.MAX_VALUE;; 			int maxX = -Integer.MAX_VALUE;; 			int maxY = -Integer.MAX_VALUE;; 			for (var tile : tiles) {; 				minX = Math.min(minX, tile.getRegionRequest().getMinX());; 				minY = Math.min(minY, tile.getRegionRequest().getMinY());; 				maxX = Math.max(maxX, tile.getRegionRequest().getMaxX());; 				maxY = Math.max(maxY, tile.getRegionRequest().getMaxY());; 			}; 			if (minX != request.getMinX() || minY != request.getMinY() || maxX != request.getMaxX() || maxY != request.getMaxY()) {; 				var request2 = request.intersect2D(minX, minY, maxX, maxY);; 				logger.debug(""RegionRequest updated from {} -> {}"", request, request2);; 				request = request2;; 			}; 		}; ```; This *did* crop the `RegionRequest`, but the output image was still 1432, due to rounding up after being calculated to be 1431.5... and then Java's rendering pipeline still left the black line. It seems to be especially subtle and hard to address...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527#issuecomment-2124491582:1073,update,updated,1073,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527#issuecomment-2124491582,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"I can also confirm both are working for me in v0.1.2 - I don't believe I made any changes with v0.1.3 that should affect it working, but there are changes that are likely to improve performance. I'm running it on a Mac. I'd suggest making sure you have the latest versions of Bio-Formats at the [QuPath Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension). If the latest (v0.0.6) doesn't work, then try removing it and going back to v0.0.5. It's best to do this by adding/removing the `.jar` files from the extensions folder directly whenever QuPath isn't running, to make sure there aren't old versions lingering (unfortunately v0.0.5 and v0.0.6 were accidentally given different filenames... so installing one won't overwrite the other). If there's any double about the location of the extensions folder, you could try this script: https://gist.github.com/petebankhead/e687cbcc2e35195e177104e05b633072. Please let me know if this works (or doesn't); if there are any problems, I'd like to try to resolve them before updating the extension. One small(ish) thing: the original brightness/contrast settings applied in QuPath for these images are pretty bad, and so you'll need to adjust the sliders to something sensible. One reason they are so bad is that at least some channels of some of the images are quite severely clipped at the low end (i.e. lots of pixels with 0 values).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409095677:722,install,installing,722,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409095677,1,['install'],['installing']
Deployability,"I can confirm this is a QuPath problem, not a Bio-Formats one. It actually seems to already be fixed in my code (without realising it was ever broken...), so should work in the next milestone. Thanks for reporting this, it helps to remind me I need to check this specifically before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509303832:292,release,release,292,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509303832,1,['release'],['release']
Deployability,"I can open Camelyon16 images with QuPath on macOS 10.13, Ubuntu 16.04 and Windows 10 (the last two through VirtualBox). So it definitely *should* work. I'd certainly like to find a way to resolve it since it doesn't. I didn't have any luck with Bio-Formats though - so that suggestion can be discarded. My best guess is that you're using Linux and the solution involves building/installing OpenSlide separately. You can then remove/replace any OpenSlide-related files from within the *qupath/app* directory. If you copy your own OpenSlide files into that directory then it should be ok; otherwise, you probably need to set the Java library path within *QuPath.cfg* (which is also in the same directory).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371769693:379,install,installing,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371769693,1,['install'],['installing']
Deployability,"I can replicate this if I open the slide label under the 'Image' tab. It turns out, the label **is** updated if it is shown via *View &rarr; Show slide label*. I agree it's confusing to have different behavior, although I'm not sure what is the best way to fix it because both ways of showing the label have different aims:. * Under the 'Image' tab, the aim is to show all the associated images and be able to freely choose.; * With *View &rarr; Show slide label*, QuPath tries to determine which associated image corresponds to the slide label, and uses that. The second command is more complicated, because there's no guarantee that any image will have an associated label - and, if it does, there's no guarantee what precisely it will be called. Here's the awkward code that tries to figure that out:. https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-gui-fx/src/main/java/qupath/lib/gui/panes/SlideLabelView.java#L130-L148. I'm not sure if either command can or should fully replace the other. Maybe it would be better if *View &rarr; Show slide label* was more prominent (e.g. somewhere under the 'Image' tab as well)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1246#issuecomment-1481503527:101,update,updated,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/1246#issuecomment-1481503527,1,['update'],['updated']
Deployability,"I couldn't spot anything in the ""package"" parts that would change what's included in the output. I can get that list into the output directory by adding `assembleJavadocs` to the gradle build command. I would've guessed that adding `tasks.jpackage.dependsOn(""assembleJavadocs"")` in `build.gradle` would work too, but apparently not... I can update the github action for now, and try to fix the gradle logic after?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652#issuecomment-2457072276:341,update,update,341,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652#issuecomment-2457072276,1,['update'],['update']
Deployability,"I didn't have a more elegant solution - and I like @Svidro's approach of reusing (and renaming) an existing ```.qpdata``` file. If you do this, I'd suggest trying to create one from any similar image you have that works - since it will also do things like set the image type (brightfield, fluorescence, stain colors...), and it makes sense to use values from related images rather than have to update them later. I always planned vaguely to make it possible to create a manual TMA grid, but the automated dearrayer never failed catastrophically enough on any image that I encountered to make this necessary; I only ever added/removed rows as needed. Nevertheless, in the absence of a user-friendly way to do something, it's generally possible to resort to a script. If you draw a rectangle around where the grid should be, you could try running this:. ```groovy; import qupath.lib.objects.TMACoreObject; import qupath.lib.objects.hierarchy.DefaultTMAGrid. // Enter the number of horizontal & vertical cores here; int numHorizontal = 12; int numVertical = 9; // Enter the core diameter, in millimetres; double diameterMM = 1.2. // Convert diameter to pixels; double diameterPixels = (diameterMM * 1000) / getCurrentImageData().getServer().getAveragedPixelSizeMicrons(). // Get the current ROI; def roi = getSelectedROI(). // Create the cores; def cores = []; double xSpacing = roi.getBoundsWidth() / numHorizontal; double ySpacing = roi.getBoundsHeight() / numVertical; for (int i = 0; i < numVertical; i++) {; for (int j = 0; j < numHorizontal; j++) {; double x = roi.getBoundsX() + xSpacing / 2 + xSpacing * j; double y = roi.getBoundsY() + ySpacing / 2 + ySpacing * i; cores << new TMACoreObject(x, y, diameterPixels, false); }; }. // Create & set the grid; def tmaGrid = new DefaultTMAGrid(cores, numHorizontal); getCurrentHierarchy().setTMAGrid(tmaGrid); ```. Note that there are a few variables at the top that should be specified (i.e. the number of cores horizontally and vertically, and the an",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-301234930:394,update,update,394,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-301234930,2,['update'],['update']
Deployability,"I don't know, I haven't seen this problem before - and if nothing has changed in the meantime, I see no reason why the classifier wouldn't work. The updates mentioned above shouldn't affect this (more accurately, the updates that *might* affect it aren't available there yet). When you say you copied and pasted the classifier, I guess you mean the whole file through Windows Explorer?. Do you have any more luck if you try running it from a different location, e.g. copy it to the Desktop and try from there?. If you are able to send me the `.qpclassifier` file then I can investigate some more. If there isn't a way for you to upload it here and you haven't already got my email address from somewhere, then if you sign up to the [QuPath user forum on Google Groups](https://groups.google.com/forum/#!forum/qupath-users) I can contact you directly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375339965:149,update,updates,149,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375339965,2,['update'],['updates']
Deployability,"I don't know; to better understand what has gone wrong I'd need to know more information about what might be different in this case from previous times when you loaded scripts and didn't have a problem (e.g. anything appearing in the log, where QuPath is installed / where the script is located, if other scripts have the same effect). Since I can't replicate the problem myself, I'm afraid I can't really help much- also since the underlying issue should already be fixed in v0.2.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/422#issuecomment-606432591:255,install,installed,255,https://qupath.github.io,https://github.com/qupath/qupath/issues/422#issuecomment-606432591,1,['install'],['installed']
Deployability,"I don't recall any memoization-related changes in v0.3.0-SNAPSHOT, except for the fact it will be using a different JDK and updated version of Bio-Formats itself. Unless I'm missing a key part, the git blame suggests the memoization code was last changed 2 years ago. v0.2 made a change from v0.1.2 to no longer store the .bfmemo files in the same directory as the image, because this was causing problems for some users and confusion with new files being generated unexpectedly. Since v0.2, you can specify a memoization directory in the preferences, and also a memoization time in ms. If the time is <= 0, then no memoization files should be created. Otherwise, a file will be [generated either in the specified directory or in a temp directory](https://github.com/qupath/qupath/blob/dev-0.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1314). Could it be that you have a directory set in the preferences? If you don't, I would expect the memoization files to be temporary and automatically removed. In any case, the warning you see has been [logged by Bio-Formats](https://github.com/ome/bioformats/blob/25645389e076a7bd0011e04c4dd8982c0f0614ed/components/formats-bsd/src/loci/formats/Memoizer.java#L923). I don't know why it is unable to delete the file, but my guess is that it relates in some way to https://github.com/ome/bioformats/issues/3659 and the fact QuPath is now using Java 16. This is likely to cause various memoization problems involving kyro. I can think of two potential workarounds:; * Add `--illegal-access=warn` to the Java options for QuPath (based on [this](https://openjdk.java.net/jeps/396)); * Turn off memoization entirely, at least by default. I'm not sure which is preferable; neither feels great. I think you should be able to try the first option by editing the `.cfg` file - if you try, please let me know if it works",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717#issuecomment-828490219:124,update,updated,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-828490219,1,['update'],['updated']
Deployability,"I feel that is likely to cause more confusing and maintenance headaches as the software develops, mostly for the reasons I outlined above. Commands will change and improve. The same command (e.g. *Load object classifier*) might meaningfully only work for detections now, but handle other object types in the future (I think that, in principle, it already *does* support other object types, if you can somehow create and save a classifier that applies to annotations). There had been a *Train detection classifier* in earlier versions, so the renaming in that case was to reduce confusion because there was a transition period during which both commands were maintained in parallel. If we move things, we need to update the documentation - and some of the docs are in the form of videos, so that's not straightforward. And if we push the term 'detection classifier' it will likely confuse *someone* who thinks it isn't relevant to them because they have cells, not detections. I don't think the current arrangement is ideal, but we are always trying to balance the current software with the past, the future, the docs, and a large number of users with very different needs and expectations... and a very small number of developers. Added to that are the people who write extensions, for whom changing menu structures can cause trouble. It is not an easy project to manage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506:712,update,update,712,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506,1,['update'],['update']
Deployability,I fixed the two things. I updated the javadoc-viewer snapshot on maven.scijava.org so Intellij might not directly see it.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1519#issuecomment-2129621413:26,update,updated,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/1519#issuecomment-2129621413,1,['update'],['updated']
Deployability,"I guess it's good news that it works for you. Could be related to my set up then.... I'm on mac as well, High Sierra currently. I've tried different bioformat extension versions, doing as you said to remove or add, also tried reinstalling QuPath, but I still get an error like this:. INFO: Refreshing extensions in /Users/rmevel/QuPath/extensions; INFO: Added extension: /Users/rmevel/QuPath/extensions/qupath-extension-bioformats(1).jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Checking Big TIFF images currently not supported!!!; ERROR: QuPath exception; at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:45); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:59); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409140774:492,update,update,492,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409140774,1,['update'],['update']
Deployability,"I hadn't seen the problem where some lines require multiple corrections, but from your explanation I think I understand what has happened. The issue should be predictable and reproducible; here's the background:. * When a line is drawn, it is represented inside QuPath by the coordinates of its end points, ```(x1,y1)``` and ```(x2,y2)```; * When the line is saved, these coordinates are written (correctly) into the ```.qpdata``` file; * When the ```.qpdata``` file is loaded again later, the first thing QuPath does is read the coordinates and convert them into ```(x1, y1)``` and ```(x2-x1, y2-y1)```. This last step is a bug; there is no need to subtract the first coordinates from the second. It happens because, long ago (and before being released), QuPath stored its lines differently (with the first coordinate and then displacement).... and this bit of the code was not updated when it should have been, and lines were used rarely enough for it to go unnoticed. With that in mind, the error can be cumulative; if you open a ```.qpdata``` file and the lines display wrongly, and then you save it again, QuPath will now save the wrong coordinates... and, when reading them, make them even more wrong, i.e. ```(x2-x1-x1, y2-y1-y1)```. You'd have to run the script twice to fix such lines. Therefore it is important to have all your lines corrected before you save, and then run the script to fix them immediately after opening the image. This avoids having a combination of correct and incorrect lines on the image at the same time. The purpose of the script is to go through and fix the second coordinate for all your lines by adding the first coordinate. It does this for all lines, regardless of whether or not they are correct. If you want to change only some of the lines then @Svidro's idea is great - select the lines you want to change (e.g. in the list at the top of the *Annotations* tab on the left of the screen) and run this script instead:. ```groovy; getSelectedObjects().each {; ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-299623260:745,release,released,745,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-299623260,2,"['release', 'update']","['released', 'updated']"
Deployability,"I have a bunch of PreciPoint .vmic slide files, and I see that OpenSlide implemented support for this format about a year ago. However, Qupath cannot read these files, and Openslide has not actually had a release since this implementation was merged (3.4.1 was almost 3 years ago). Can Qupath be rebuilt against the ""head"" version of Openslide or does it need additional changes to support a new filetype?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/151:205,release,release,205,https://qupath.github.io,https://github.com/qupath/qupath/issues/151,1,['release'],['release']
Deployability,"I have installed the new extension with the same results. I tried to exclude the .scn file from bioformats so that OpenSlide opens it to no avail it comes up with file can't open, however, I downloaded a sample of the .scn file from openslide it opens OK ; It could well be the issue @Svidro illuded to.; Its seems like this is an ongoing issue https://github.com/openslide/openslide/issues/189, The files I have here are produced by Leica Versa while our older .scn from SCN400 work OK",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358745153:7,install,installed,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358745153,1,['install'],['installed']
Deployability,"I have installed the new version of QuPath and after that the app doesn't load any longer on my Mac.; The version I downloaded was QuPath-0.4.1-Mac.pkg. <img width=""263"" alt=""Screenshot 2022-12-23 at 11 18 39"" src=""https://user-images.githubusercontent.com/11831210/209308931-805aca40-25d6-4ceb-b659-23a801eb6167.png"">. MacOS version: 13.1 (22C65); MacBook Pro 13-inch, 2020.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199:7,install,installed,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199,1,['install'],['installed']
Deployability,"I have lots of QuPath's installed, and for me and `QuPath` (presumably v0.1.2) and `QuPath-0.3.0.app` are the only ones that show up in launchpad. v0.4.3 doesn't. To be honest, I forgot launchpad exists. I suspect the issue is related to the macOS version stored in the app. For v0.1.2 this is 0.1.2, but for all subsequent releases it is 1.0.0. The issue has come up a couple of times:; * https://github.com/qupath/qupath/issues/1250; * https://github.com/qupath/qupath/issues/1337. I spent several days trying to address it, but ultimately trying to embed the 'true' version number caused subtle, release-destroying issues: ; * https://github.com/qupath/qupath/pull/1379; Most annoyingly, the failure only emerged at the very end when *downloading* QuPath - local builds were ok, which meant that it's possible to believe it's fixed when it isn't. Therefore unless anyone else can spot a fix and confirm it works with downloaded versions, I'm afraid it's not something we can address. If my theory is correct, it will hopefully go away for QuPath >1.0.0, when we get there. For now, it's a restriction imposed by `jpackage` and macOS.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102:24,install,installed,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/1448#issuecomment-1898097102,3,"['install', 'release']","['installed', 'release-destroying', 'releases']"
Deployability,"I have replicated the issue on:; * MacBook Pro (M1, macOS Ventura 13.5.1); * MacBook Pro (Intel, macOS Big Sur 11.7.9). I could **not** replicate it on a Windows 10 laptop - colors using both screenshot methods were identical. Therefore it seems to affect all macOS releases, but probably not other platforms (although Linux hasn't been checked yet).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1309#issuecomment-1703759077:266,release,releases,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/1309#issuecomment-1703759077,1,['release'],['releases']
Deployability,"I haven't been able to replicate this - but I was trying to do it by adjusting screen size, and not installing extensions (since creating an extension to add a button would be quite a hassle...). Questions:; * How are you opening the project (e.g. button, menu, drag & drop), and does it matter?; * Can you see the issue *without* any custom extensions installed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352368210:100,install,installing,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352368210,2,['install'],"['installed', 'installing']"
Deployability,"I haven't noticed any changes with this behavior recently on Win10; I just tested with the 3 kinds of image servers I normally use. . 0.2.0 release. Is this happening on a particular OS? I take it Pete is seeing it on his end. I am seeing the magnification get smaller as I zoom out, and larger as I zoom in.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640780209:140,release,release,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640780209,1,['release'],['release']
Deployability,"I haven't seen this problem - does it happen consistently or intermittently? If you restart QuPath and open the same image again, does the problem persist? Also, is the image on your local hard disk or on a network drive?. If you are able to share an image, then I can investigate some more - otherwise if I can't reproduce it I can only really look out for it in the future. In the meantime, for .ndpi it should be possible to open the image with either OpenSlide or Bio-Formats, and the settings described at the bottom of this page give ways to toggle Bio-Formats on/off for specific file extensions: https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/224#issuecomment-425106079:548,toggle,toggle,548,https://qupath.github.io,https://github.com/qupath/qupath/issues/224#issuecomment-425106079,1,['toggle'],['toggle']
Deployability,"I haven't tried the new classifier with a large training set, and I'm afraid I really cannot help more without a clear error message (e.g. from the log). However, the new object classifier is not really intended to scale to 200,000 objects for interactive training... or, at least, doing so is likely to require more memory. Therefore this sounds like it may be a limitation rather than a bug. This may change in the future; in particular, a future release may document how to train a classifier via scripting in a way that requires less memory. The legacy classifier might cope with larger training sets but at a cost of being much more restricted in how it works, and having other issues (e.g. needing to be retrained when reloaded https://github.com/qupath/qupath/issues/343). It is deprecated, but not yet removed in case anyone still needs to use it: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-are-some-commands-marked-as-deprecated. For now I'd recommend trying to be more selective for training examples when using the new classifier, or else resort to the legacy classifier if you prefer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-631451060:449,release,release,449,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-631451060,2,['release'],['release']
Deployability,"I keep getting the following error while installing QuPath on MacOS Big Sur v 11.6.; Nothing shows up in the security settings, so it's not the normal case of being blocked and needing to approve installation in settings.; What can be done?. Thanks; <img width=""438"" alt=""Screen Shot 2021-10-21 at 9 36 33 AM"" src=""https://user-images.githubusercontent.com/11299568/138761171-413c2c15-f636-49cf-9f2a-ca22deca134c.png"">",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832:41,install,installing,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/832,2,['install'],"['installation', 'installing']"
Deployability,"I know there are some updates to how OpenCV operates with the newest version of QuPath. Are you running that one or the older 1.2? (I don't know that it is entirely official yet, but you can find it here https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). I don't have anything immediately useful, just wanting to check which version the error is happening in!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/160#issuecomment-375334835:22,update,updates,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/160#issuecomment-375334835,2,['update'],['updates']
Deployability,"I made two recent commits:; * https://github.com/petebankhead/qupath/commit/a0e1ec253dd790dfceb89b845848c037183d46e7; * https://github.com/petebankhead/qupath/commit/05aaf8f83b8de9166832d64fa6cdba53163e8d92. I'm not entirely sure if the issues have been resolved, but I haven't been able to reproduce any viewer synchronization issues since then. If you have a chance to build m8-SNAPSHOT (or wait until v0.2.0-m8 is released) please let me know if you can replicate the problems (or find new ones) connected to multiple viewers.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284#issuecomment-562845276:417,release,released,417,https://qupath.github.io,https://github.com/qupath/qupath/issues/284#issuecomment-562845276,1,['release'],['released']
Deployability,I recently found resources like this:. Release hash:; https://github.com/MCJack123/ghaction-Generate-Release-Hashes. Release signing:; https://wiki.debian.org/Creating%20signed%20GitHub%20releases (which equally allows one to verify a given download),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309:39,Release,Release,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1200433309,3,['Release'],"['Release', 'Release-Hashes']"
Deployability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor). ; Now my QuPath program doesn't work at all. ; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail. ; Any advice?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686:11,update,updated,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686,1,['update'],['updated']
Deployability,"I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS to no avail.; Any advice?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281:11,update,updated,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281,1,['update'],['updated']
Deployability,"I saw some z-stacks in the images that you linked, and it's possible to switch between slices with the slider at the top left. The auto contrast settings are a bit more sensible at if you can build the beta version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), and this will also then save the contrast settings within the `.qpdata` file. The viewer should be quite a bit more responsive as well, if you have more channels. So it's definitely worth checking out if you're working with fluorescence. If you add the image to a QuPath project, all the potentially-interesting images _should_ become available in the project, and you can optionally delete some afterwards.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409247462:278,update,updates,278,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409247462,2,['update'],['updates']
Deployability,"I see the same - I don't think it was the case before v0.1.2 was released (I developed it on a Mac and think I'd have noticed...). So my guess is that some macOS update in between could be responsible, but I'm not certain. As a workaround, under the _Preferences_ try turning on the option _Use tile brush_. This will change the behavior of the brush if you happen to be using superpixels... but otherwise it shouldn't. However, it _will_ avoid the attempted use of a custom cursor, which appears to be what is causing the trouble.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/194#issuecomment-409582139:65,release,released,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/194#issuecomment-409582139,2,"['release', 'update']","['released', 'update']"
Deployability,"I should probably admit that I didn't know anything about shapefiles - I'll look out for them from now on! If you happen to know of other pathology software that can export/import them (can Definiens do both?) that would be very good to know. I actually made a half-hearted attempt to incorporate Jython support in the early days, before I went all-in for Groovy because trying to be multilingual took extra effort that (at the time) didn't seem worth it. _However_, this means that if you download the Jython standalone jar and drag it onto QuPath then a new 'Jython' option will appear as an available scripting language. Now the half-hearted bit: there's a tiny error in the default import statement for Jython in v0.1.2 - so until that's fixed you'll need to *uncheck* the option *Run &rarr; Include default bindings*. This means that the normal [`QPEx` things](https://github.com/qupath/qupath/wiki/Writing-custom-scripts#default-methods--imports) will not be available in the script, and you'll need to import these separately... and possibly remember to turn the default imports back on if your Groovy scripts require them. The following works for me, after installing the jar and setting the script language to `Jython`:; ```python; from qupath.lib.scripting.QPEx import *; annotations = getAnnotationObjects(); print annotations; ```. The fix to address this in the code appears trivial (switching `+` to `,` in the code), so potentially this won't be necessary in later versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945546:1165,install,installing,1165,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945546,1,['install'],['installing']
Deployability,"I suspect that one computer is opening the image with OpenSlide, and the other with Bio-Formats.; My guess is that this one (with the black background) is using Bio-Formats. If you have a recent version of the Bio-Formats extension installed, you can force it not to be used (or always to be used) for the `.scn` files - there are instructions at the bottom of https://github.com/qupath/qupath-bioformats-extension",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/189#issuecomment-408123949:232,install,installed,232,https://qupath.github.io,https://github.com/qupath/qupath/issues/189#issuecomment-408123949,1,['install'],['installed']
Deployability,"I tested some old mice (that got hidden away for a reason), and their wheel button triggered multiple events at times. This behaviour was corrected with a 10ms debounce. Am I OK to add a (if you're happy with the variable name) :. ```; 	private long lastMousePressedWheel = 0L;; ```. and then, the `e.isMiddleButtonDown()` event would be handled as such:; ```; 			else if (e.isMiddleButtonDown()) {; 				//For 10ms after the first click, ignore all additional events; 				long time = System.currentTimeMillis();; 				if (time - lastMousePressedWheel < 10); 					return;. 				// Here we toggle between the MOVE tool and any previously selected tool; 				if (getSelectedTool() == PathTools.MOVE); 					setSelectedTool(previousTool);; 				else; 					setSelectedTool(PathTools.MOVE);; 				lastMousePressedWheel = time;; 			}; ```. I'm hoping to reuse the same variable to debounce the horizontal scroll buttons as well, hence the name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1219652529:586,toggle,toggle,586,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1219652529,1,['toggle'],['toggle']
Deployability,"I think I found the problem -- it's the libtiff in homebrew. It's a vanilla build of libtiff 4.1 and it's missing a series of patches which Ubuntu have applied to fix problems with things like YCbCR and JPEG-in-TIFF. This means that TIFFs created on mac tend to be broken :(. Sorry for the noise, I'll close.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715898223:126,patch,patches,126,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715898223,1,['patch'],['patches']
Deployability,"I think it would be better to post a question like this on [the forum](https://forum.image.sc/) along with a clear description of what you tried, which software versions you're working with, etc. > So no InstanSeg and other Deep Learning models that depend on this Deep Java Library for me. DJL generally and InstanSeg specifically should still work with CPU support only. > There just must be a way to make it work more easily. We have indeed done our best to do so; it's not necessarily easy to handle all of the possible configurations people have",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352697439:524,configurat,configurations,524,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352697439,2,['configurat'],['configurations']
Deployability,"I think so, it's probably the most relevant link. But it can vary depending on what exactly you want, e.g.; * if you are working with brightfield/fluorescence images; * if you need the pixel size to be stored in microns within the image or not; * if you want compressed images or not; * if you're using QuPath v0.1.2 (the stable one) or the more recent milestones (which are a work in progress and requires some scripts to be updated). I'd suggest giving it a try, and starting a thread at https://forum.image.sc/tags/qupath if more customization is needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494035194:426,update,updated,426,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494035194,1,['update'],['updated']
Deployability,"I think the current answer is 'no'. As I understand your question, you mean tiles containing pixel data - is that right?. I have been working on some related things that could change this situation, making it possible to overlay different images and apply a (rigid) transformation if necessary to aid alignment... but as one project among many, it could take some time for the changes I'm making to become really useful. And I'm not actively working on any more complex registration - just shifts and rotations. Can you say more about what your aim is? For example,; * Do you primarily want this for visualization or analysis?; * Do you have different tissue sections, or the same tissue restained? (I guess the first, but the second is certainly easier on the image processing side...); * Which stains (colors) are you using for each TMA?. I'm not sure if it helps or you have already seen it, but with [Multiple viewers](https://github.com/qupath/qupath/wiki/Multiple-images) it is already possible to view different TMA cores side-by-side, and then navigate the grid using the arrow keys. TMA cores at the same grid location will be displayed together. You could also export each TMA core as a TIFF image from QuPath, and explore aligning these using some of Fiji/ImageJ's [image registration](https://imagej.net/Category:Registration) tools on a core-by-core basis. This could require quite a bit of effort. > Sidenote: I'm using [this blog](https://petebankhead.github.io) to describe some of the updates I'm working on, but which aren't yet in a QuPath release - it's also a good place to give feedback/suggestions to help shape where the changes go.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377154596:1502,update,updates,1502,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377154596,4,"['release', 'update']","['release', 'updates']"
Deployability,"I think the video is showing exactly this issue: https://github.com/qupath/qupath/issues/894; It relates to opening a subset of images *outside of a project* using Bio-Formats in v0.3.1 and v0.3.2, when QuPath hangs. Not all svs files are affected, it depends upon how labels/macro images are stored inside. Some other formats (e.g. .vsi, .lif) suffer the issue too. I've already fixed that and the fix will be in the next release. Because that particular bug is related to the UI, I don't think it should have any impact when called from the command line - so I think it's different from the original tiling issue here. I'm really interested to find out of the tiling issue is avoided when using QuPath v0.3.0. There was a change in how tiles are requested in parallel in QuPath v0.3.1 and v0.3.2. This didn't directly *cause* the UI problem, but it revealed its existence (because the UI code was requesting tiles from an image after it was closed, and that caused the hang). Intermittent issues like the tiling one here do sound like parallelisation is somehow involved, but the initial error on this thread is strange.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906:423,release,release,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1057173906,1,['release'],['release']
Deployability,"I think this is a different issue; somehow the magnification needs to be written to the OME-TIFF. Unfortunately I don't know enough about OME-TIFF to do that... I don't have another QuPath-based workaround myself. There isn't a way to override what the image-reader gets from the image yet. The problem exists because _Add Local Binary Pattern features_ and _Add Coherence texture feature_ come from a time when I was using magnification instead of 'Requested/Preferred pixel size' (as is now the case for _Add intensity features_); the pixel size is a better and more robust approach to define an appropriate resolution, but it seems I didn't update the other two commands to adopt it... not least because I didn't find a use for them myself. I'm curious: do you find them to be particularly valuable, or are you just exploring if they are useful? Lest the software become too bloated by options and confusing, I would be tempted to remove them rather than update them... but if they are very useful then I should probably resist.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424744221:644,update,update,644,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424744221,2,['update'],['update']
Deployability,"I think this is pretty much it. ; https://groups.google.com/forum/#!searchin/qupath-users/touch%7Csort:date/qupath-users/IZSVOOgWZ9E/Hd3QWlQXBAAJ; I am not sure if the changes are in version 1.3 yet, but you could try downloading that.; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407441080:293,update,updates,293,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407441080,1,['update'],['updates']
Deployability,"I think you are right, but I saw the current naming being an upgrade, like. ""Each user has their own folder where they can have their own code and settings."". Which meant that other settings like ImageJ directory and Extensions directory could be system-wide. But I think I am being too wishful, because like you said: since the start, options that in my opinion should be system-wide are not... Like when a new user logs-in they have to set the QuPath Setup options even though someone else already set them (even though the amount of RAM should not change from user to user, nor the Locale). Of course I am not going to pretend it is a dealbreaker, but it puts overhead on us when debugging issues: Did the user set the right amount of RAM? Where did they set the folder for the extensions?If we do not chase after our users, they each could have their own extensions folder in the default location (C:\Users\) which might be an issue for us [We are looking configure our workstations so that they do not keep any user preferences upon logging out because AppData tends to overfill over time, choking the C:\ drive in Windows]. But we favor apps that have a 'configure once' behaviour for these things. We have already been struggling with Imaris for years on this very issue. . This simply adds to the tedium of maintaining something in a multi-user environment.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632628884:61,upgrade,upgrade,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632628884,2,['upgrade'],['upgrade']
Deployability,"I think you're right, fortunately I don't see any obvious code path that could call it with anything other than 0 for those values but I'll look a bit deeper before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/649#issuecomment-740503008:174,release,release,174,https://qupath.github.io,https://github.com/qupath/qupath/issues/649#issuecomment-740503008,1,['release'],['release']
Deployability,"I tried `defaults` first, but quickly ran into the permissions problem - so switched to `PlistBuddy` as suggested at https://github.com/qupath/qupath/issues/1250. That *seemed* to work, but it turned out to still fail in confusing and subtle ways after downloading & installing. After very many hours spent trying to sort it out, I had to admit defeat because it was blocking the release - details are at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372:267,install,installing,267,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750386372,2,"['install', 'release']","['installing', 'release']"
Deployability,"I tried to install Segoe UI Bold from an online vendor but doing so simply reverted all the text to the garbled version. Looks like you can't re-download the original TrueType font files directly from Microsoft (see https://docs.microsoft.com/en-us/typography/font-list/segoe-ui), so not sure where to obtain the correct `.ttf` files from.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996246433:11,install,install,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996246433,2,['install'],['install']
Deployability,"I understand, it is hard to capture the idea. Overall I see that after installing QuPath using the "".msi"" in two different users in the same computer when opening QuPath in the second one I notice that I have access to the first user files. . I'll proceed to close this ticket, Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1309223445:71,install,installing,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1309223445,1,['install'],['installing']
Deployability,I untarred the file and tried to start the program but got a dependency error on Linux. ./QuPath: /usr/lib/x86_64-linux-gnu/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./QuPath). I ran sudo apt-get install libstdc++6. libstdc++6 is already the newest version. Any idea what may be causing the issue?. Appreciated.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51:218,install,install,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/51,1,['install'],['install']
Deployability,I updated my [pull request](https://github.com/qupath/log-viewer/pull/59) with these changes,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1339#issuecomment-1729327335:2,update,updated,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1339#issuecomment-1729327335,1,['update'],['updated']
Deployability,"I updated the `MetadataStore` and changed `Project` and `DefaultProject` accordingly. I didn't update other classes that were using `MetadataStore` like `TMACoreObject`, and I didn't make `ProjectImageEntry` implements `MetadataStore`. Should I do that here, or create another PR?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1584#issuecomment-2285962728:2,update,updated,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/1584#issuecomment-2285962728,2,['update'],"['update', 'updated']"
Deployability,I was also wondering how to do this. Looking into the doc how it could be programatically accessed for read/write operations. I will keep updated if I find something,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-349589480:138,update,updated,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-349589480,1,['update'],['updated']
Deployability,"I will close this issue because of a lack of a response, and I haven't been able to replicate it. Please reopen it again if you are able to replicate it with the latest release (currently v0.2.0-m10) and provide further information.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/416#issuecomment-617786012:169,release,release,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/416#issuecomment-617786012,1,['release'],['release']
Deployability,"I will close this issue because there isn't anything we can replicate or fix. I see there have been about >4,500 downloads of the macOS version of v0.3 at this point, and since there haven't been other reports I guess it may be a system-specific problem that we can't fix on the QuPath side. Please do add comments if there is further info. Meanwhile, it might be possible to get a version of QuPath that works for you by following the [build from source](https://qupath.readthedocs.io/en/stable/docs/reference/building.html) instructions. This can directly generate an .app rather than a .pkg, so might work around any installer problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-966046117:620,install,installer,620,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-966046117,1,['install'],['installer']
Deployability,"I wonder if you can help. I have to apologise but I am not the most computer literate but I have some CZI files from Zen I would like to analyse in QuPath. I have downloaded the bioformats extension and package and attempted to download the visual c++ redistributable but I keep failing at this step. I cannot install this and my only option is to repair, which it attempts and then fails giving me a log code which I can provide if required. I have also tried installing qupath on my mac with the same problems. I have downloaded the bioformats package and extension and still cannot open said files. . Please help.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135:310,install,install,310,https://qupath.github.io,https://github.com/qupath/qupath/issues/135,2,['install'],"['install', 'installing']"
Deployability,I would be interested in two classes but the whole project is released under GPL. The program I have been developing will be free of charge but I am not very interested in disclosing the complete source code that I have written for six month. Maybe LGPL would have been a better choice for linking some library functions only.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/263:62,release,released,62,https://qupath.github.io,https://github.com/qupath/qupath/issues/263,1,['release'],['released']
Deployability,"I would start by using another computer temporarily and ensuring you can open your data set with another installation of QuPath on that computer. Even better if it is a Win10 computer where you had not installed QuPath before. If it is a time crunch, using another computer might be the best short term bet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519191277:105,install,installation,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519191277,2,['install'],"['installation', 'installed']"
Deployability,I'd be very interested to know if the [JavaFX update v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) has resolved this.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-549051596:46,update,update,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-549051596,2,"['release', 'update']","['releases', 'update']"
Deployability,"I'd like to give generic examples of how others might (and will, IMHO) find this problematic in the future. Let's get more specific then:. My use cases include QuPath exports that do not align with the true image dimensions. The IIPImage server does not auto-crop images or read these bounds from server files. My files do not even store this data. ML researchers work with libraries (TF, pytorch...), and they might rely on OpenSlide/BioFormats to read the data, they might as well be unaware of behind the scenes and be surprised later. The output of a convolutional network is probably misaligned to the original data. We are writing ML pipeline data loaders for OME-TIFF and DICOM that use, for example, [wsidicom](https://github.com/imi-bigpicture/wsidicom). I don't know (but doubt it) whether this library delivers by default cropped data. . >I'll give it some more thought. Thank you.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630907596:640,pipeline,pipeline,640,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630907596,1,['pipeline'],['pipeline']
Deployability,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-632239499:61,release,release,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499,2,['release'],['release']
Deployability,I'll close this because `jdk.jsobject` is now included in the `build.gradle` for the next release - thanks!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/639#issuecomment-811283033:90,release,release,90,https://qupath.github.io,https://github.com/qupath/qupath/pull/639#issuecomment-811283033,1,['release'],['release']
Deployability,"I'll close this because there's now an Apple Silicon build of QuPath, other QuPath updates, JavaCPP updates, macOS updates... and I can't remember the last time I saw the problem. So let's assume it's no longer a problem at all. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602:83,update,updates,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1732338602,3,['update'],['updates']
Deployability,"I'll close this issue as part of my Saturday repo-cleaning, since support for overlays in SVG exports has now been merged and will be available in the next release (v0.5.0).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239:156,release,release,156,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1732340239,1,['release'],['release']
Deployability,"I'll close this issue, because it has been over a year and QuPath v0.4.x has come along in the meantime with other changes that may have helped (including Bio-Formats updates)... or at least taken us further away from figuring out what happened in v0.3.2 specifically. v0.5.0 will also be long soon; feel free to reopen if the issue reoccurs with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/932#issuecomment-1732337755:167,update,updates,167,https://qupath.github.io,https://github.com/qupath/qupath/issues/932#issuecomment-1732337755,1,['update'],['updates']
Deployability,"I'll close this issue, would be good to continue any discussion at #336 ; I hope that it's resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) through the update in the JavaFX dependency, but I haven't got a way to test it myself.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-549051719:148,release,releases,148,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-549051719,2,"['release', 'update']","['releases', 'update']"
Deployability,"I'll close this, since it has been 2 years since the last reply and I want to optimistically believe that means @yli-hallila's solution is working well enough. In any case, it relates to an old QuPath release and I want to clean up our open issues to remove ones we won't realistically be able to solve. QuPath v0.5.0 is coming soon; if there are still problems with it and CentOS, feel free to open a new issue then.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-1732336555:201,release,release,201,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-1732336555,1,['release'],['release']
Deployability,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:201,Update,Update,201,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434,1,['Update'],['Update']
Deployability,"I'll merge this because I think it solves the initial problem with exceptions due to the extensions directory not existing. I couldn't replicate the other issue on my Mac, although I'm not certain I was following the steps correctly. I first dragged https://github.com/qupath/qupath-extension-wsinfer from a browser, and then https://github.com/qupath/qupath-extension-stardist. Both extensions seemed to install 'properly', except WSInfer wasn't compatible so that confused things slightly by throwing exceptions (rightly). Immediately after installation, the extension manager wrongly showed the StarDist extension version as being v0.5.0-SNAPSHOT, but after relaunching QuPath this was corrected to v0.4.0.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1415#issuecomment-1798044775:405,install,install,405,https://qupath.github.io,https://github.com/qupath/qupath/pull/1415#issuecomment-1798044775,2,['install'],"['install', 'installation']"
Deployability,"I'm afraid I don't have much experience of handling dependencies on Linux. There is a little more information the binaries were created at https://github.com/qupath/qupath/issues/2. Basically I compiled it on Ubuntu 16.04 and have not tested it on 14.04. The possibilities that I can think of that might help would be:; * Try a newer version of Ubuntu if possible.; * Make sure Java is installed in Ubuntu. I don't think this should be necessary (since it is included in the QuPath download)... but perhaps.; * Try removing any ```.jar``` files connected to OpenSlide / OpenCV / JInput / JPen from within QuPath (the libraries should be mentioned in the ```qupath-***.jar``` file name). Apart from the Java Runtime Environment (JRE) itself, these are the parts that depend on native libraries. QuPath should still work without them, but will miss some features - such as whole slide image handling and classification. If the JRE is not the problem then hopefully this would enable QuPath to start, and you can recover some of the missing functionality by downloading [extensions](https://github.com/qupath/qupath/wiki/Extensions) that don't require native libraries.; * Try compiling QuPath from source from within Eclipse. You may find this easier to set up using Oracle's Java Development Kit than OpenJDK... but both should work.; * Try launching QuPath from the command line, setting the ```java.library.path``` variable and possibly using a different JRE if required... figuring out how to do this could be tricky, although [this](https://github.com/qupath/qupath/issues/27) may help a little bit. I hope something in there might be useful. If you are able to find a solution, it would be great if you could post it here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280861844:386,install,installed,386,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280861844,1,['install'],['installed']
Deployability,"I'm afraid I don't know of any way to open at 16-bit .mrxs files within QuPath... and I don't know of any current developments that will change that situation. Basically, there are two libraries that can be used to read whole slide images into QuPath: OpenSlide and Bio-Formats. However, OpenSlide only supports a subset of 8-bit RGB .mrxs files (16-bit multichannel would require a very substantial redesign), and is [not officially supported](https://lists.andrew.cmu.edu/pipermail/openslide-users/2012-July/000377.html).; [This blog post](http://blog.openmicroscopy.org/file-formats/community/2016/01/06/format-support/) explains why there is no support for .mrxs files within Bio-Formats. If another library became freely available that could read .mrxs files, then potentially this could be used to add support within QuPath. But I'm not personally aware of any such library, and the blog post above suggests that creation one would be a difficult task. I've tagged this post as 'help wanted', in case anyone sees a possibility to help by creating such a library/integration.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-333917237:1068,integrat,integration,1068,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-333917237,1,['integrat'],['integration']
Deployability,"I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see [docs](https://qupath.readthedocs.io/en/stable/docs/intro/installation.html#macos)). Does that method give the installation failed result for you? Could you find any solution?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956030617:32,install,installed,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956030617,3,['install'],"['installation', 'installed']"
Deployability,"I'm afraid `undefined symbol: JLI_InitArgProcessing` looks like some deep error independent of QuPath. I know that jpackage is also a work in progress. I've build QuPath successfully on Windows, Mac & Ubuntu but don't know how well it works anywhere else. The build script does sometimes need to be updated whenever jpackage is updated because the command line arguments it requires change. I'll close this issue as there doesn't seem to be a QuPath problem to solve - hope you find a solution that lets you do what you need to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534118216:299,update,updated,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534118216,2,['update'],['updated']
Deployability,"I'm afraid not, since `The crash happened outside the Java Virtual Machine in native code.` it will probably be very hard to debug. The actual problem has happened outside of QuPath, and the best QuPath can do is to try to avoid calling the problematic code. Such errors have been quite common when using OpenCV, and it is a constant battle to eliminate them as far as possible... I will look out for it, but since the TensorFlow code is still at a very early and experimental stage (and not part of the public release) I'm afraid it really isn't something I'm able to support at this stage. If you are able to replicate it with a minimal sequence of steps and/or find any solution, please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630152060:511,release,release,511,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630152060,1,['release'],['release']
Deployability,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/206#issuecomment-416021080:109,install,installed,109,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080,2,['install'],['installed']
Deployability,"I'm afraid that some of the commands flagged 'experimental' are more experimental than others... and that's one that is more experimental than most. It was added as a very simple counting method, but I only used it myself for some TMAs to have a quick comparison of the results against 'full' cell-by-cell analysis. It turns out to have some troubles that need to be fixed, especially when used in other contexts. The problem @Svidro mentions is that it requires at least one 'hematoxylin' pixel to be able to return anything.; Another strange feature is that, if you look at the hierarchy, the 'Positive' region is _inside_ the 'Negative' one.; And a third is that the 'Num pixels' value is a count of the pixels at the downsample level used. This isn't necessarily 'wrong', but it is not ideal because the measurement name doesn't say what downsample was used. It would be preferable to have a value converted to µm. > Some of these problems arose because the command was initially designed to generate 'Any staining' and 'DAB' regions; at that time, it was logical to return nothing if 'Any staining' was 0. It was also logical to put the 'DAB' region inside 'Any staining' in the hierarchy. Unfortunately, these aspects weren't updated when 'Any staining' was switched to become 'Hematoxylin'. Added to all that, the command doesn't handle fluorescence or other stain types. For all these reasons, I expect that this command will be replaced or substantially changed at some point. Therefore, while you could maybe work around the limitations of the positive pixel command, I'd suggest trying to use other commands for now if possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-297915004:1232,update,updated,1232,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-297915004,2,['update'],['updated']
Deployability,"I'm getting the same two test failures when trying to build on ubuntu 18.04 and java14 installed from adoptopenjdk.net. For master, m11, and m10 too. And the wand tool does fail on the pre-built m11:. ```; ERROR: QuPath exception: OpenCV(4.3.0) /home/travis/build/javacpp-presets/opencv/cppbuild/linux-x86_64/opencv-4.3.0/modules/imgproc/src/drawing.cpp:1866: error: (-215:Assertion failed) radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT in function 'circle'. at org.bytedeco.opencv.global.opencv_imgproc.circle(Native Method); at qupath.process.gui.WandToolCV.createShape(WandToolCV.java:423); at qupath.lib.gui.viewer.tools.BrushTool.createNewROI(BrushTool.java:497); at qupath.lib.gui.viewer.tools.AbstractPathROITool.createNewAnnotation(AbstractPathROITool.java:92); at qupath.lib.gui.viewer.tools.BrushTool.mousePressed(BrushTool.java:259); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:419); at qupath.lib.gui.viewer.tools.BrushTool.handle(BrushTool.java:65); at qupath.lib.gui.viewer.tools.AbstractPathTool.handle(AbstractPathTool.java:62); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-631377861:87,install,installed,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-631377861,1,['install'],['installed']
Deployability,I'm learning about Qupath (v0.2.0-m2) and can not open any image (.ZVI or .TFI). The error log is as follows:; ----; INFO: Refreshing extensions in C:\Users\souza\QuPath\extensions; INFO: Added extension: C:\Users\souza\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\souza\QuPath\extensions\qupath-bioformats-extension.jar; INFO: Added extension: C:\Users\souza\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Bio-Formats version 6.0.1; INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at qupath.lib.images.servers.ImageServerProvider.lambda$buildServer$0(ImageServerProvider.java:147); at java.base/java.util.TimSort.binarySort(TimSort.java:296); at java.base/java.util.TimSort.sort(TimSort.java:221); at java.base/java.util.Arrays.sort(Arrays.java:1515); at java.base/java.util.ArrayList.sort(ArrayList.java:1749); at java.base/java.util.Collections.sort(Collections.java:177); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:146); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2450); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2369); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$50(QuPathGUI.java:3412); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.s,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/312:549,update,update,549,https://qupath.github.io,https://github.com/qupath/qupath/issues/312,1,['update'],['update']
Deployability,"I'm not sure about this. It has been a long time, but I think the reason I excluded sum from non-nucleus measurements is because it is common for people to train classifiers using all features. Because cell expansion is only distance-based, I felt that sum measurements outside the nucleus could be extremely unreliable. Also, the sum depends upon the resolution at which the measurement is calculated; for the default cell detection, this is the detection resolution, but that might not be what the user expects. The need for a nucleus sum, however, seemed sufficiently common that it should be included - and the nucleus ROI is likely to be more reliable, which reduces the problems slightly. I realise it's a judgement call and people may disagree. I'm reluctant to change the built-in cell detection, since the current behavior hasn't changed across releases and any modifications can impact classifiers. I'd rather we focus on moving away to alternative cell detection methods, and decouple measurement from detection to improve flexibility.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883:854,release,releases,854,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883,1,['release'],['releases']
Deployability,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497588046:313,install,install,313,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046,4,['install'],['install']
Deployability,"I'm not sure what you mean by 'portable version', but it should be possible to use QuPath without installation, e.g. from a folder on the desktop. For Windows, you'd need to download the .zip distribution (not the .msi - which is the only one that required installation).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/391#issuecomment-570329327:98,install,installation,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/391#issuecomment-570329327,2,['install'],['installation']
Deployability,"I'm quite sure my file has no metadata (might have been given to me from a crop on photoshop). That could explain the error, I'm trying to get metadata info (px to um). I'm using version 0.1.2. I'm actually trying what was suggested here but with no success. Dimensions get updated on FIJI but not on QuPath; https://github.com/qupath/qupath/issues/163",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/328#issuecomment-499254844:274,update,updated,274,https://qupath.github.io,https://github.com/qupath/qupath/issues/328#issuecomment-499254844,1,['update'],['updated']
Deployability,"I'm running archlinux and trying to build against openjdk 14 (it's not in the official repo yet but I installed and set it via JAVA_HOME in the gradlew script). Running . `> ./gradlew clean build createPackage`. results in two failed tests:. ```; Task :qupath-core:test FAILED. TypeAdaptersCVTest > testGetOpenCVTypeAdaptorFactory() FAILED; java.lang.ExceptionInInitializerError at TypeAdaptersCVTest.java:32; Caused by: java.lang.NullPointerException at TypeAdaptersCVTest.java:32. TypeAdaptersCVTest > testGetTypeAdaptor() FAILED; java.lang.NoClassDefFoundError at TypeAdaptersCVTest.java:99. 42 tests completed, 2 failed. FAILURE: Build failed with an exception.'; ```. I get the same failure using the latest archlinux openjdk (13) too. I can build the dist using the 'assemble' command but it doesn't run either.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484:102,install,installed,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/484,1,['install'],['installed']
Deployability,"I'm wondering if it's possible for QuPath to automate a process that draws something like the below right image, breaking apart the lines of the left image. ; ![image](https://user-images.githubusercontent.com/29108723/41568774-90e2c228-731c-11e8-993b-94d0641e4fd2.png). I ask because when deploying my qupath coordinates to a server the server currently does not support hole generation. I also don't want to force a connection between the outer and inner polygons, leaving a line in between the two. So I was wondering if the ""horseshoe"" idea is possible...can we write code to break a small part of the inner and outer polygons and establish a connection between them, and do this across all inner polygons (if an outer polygon has multiple inner polygons?).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/177:290,deploy,deploying,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/177,1,['deploy'],['deploying']
Deployability,"I've attempted a fix at https://github.com/qupath/qupath/pull/1344 - it seems to be working on my computer, so if no new problems arise the correct version should be available in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244:188,release,release,188,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732323244,1,['release'],['release']
Deployability,"I've downloaded _m6_ and it seems like I still have the same problem. Also, when I click on the menus (File, Edit, Tools...) they close when I release the mouse button, they don't stay open to allow clicking on them.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-558638519:143,release,release,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-558638519,1,['release'],['release']
Deployability,"I've flagged this as ready for review now. It definitely needs more testing. As described by @carlocastoldi the server is loaded whenever *any* change to the metadata is made. The server can be loaded more often might be expected, sometimes for subtle, hard-to-address reasons. Some relevant facts:; * `ImageServerMetadata` *isn't usually saved with an image when it is first added to a project*. This only happens the first time the data file is saved.; * The `ImageServerMetadata` is updated as soon as an image is opened in a project to ensure that the name specified in the project matches that in the server metadata. This triggers the server to be loaded if; * The `ImageServerMetadata` isn't available, or; * The `ImageServerMetadata` is available, but contains the wrong name (e.g. the name was changed in a project, but then the data file wasn't saved afterwards); * *Run for project* will always force the `ImageServer` to be loaded, because it will always save the data - and this act of saving requires the `ImageServer`. So you can only get advantages if you avoid *Run for project*, e.g. by using *Run for project (without save)* instead.; * We can't rely on not saving if there have been no changes, because the script editor now automatically fires a hierarchy change after completion. This means QuPath *always* thinks that the script may have changed the `ImageData`, so `ImageData.isChanged()` returns true. We didn't used to do this, but then we had to keep telling users to add `fireHierarchyUpdate()` at the end of many otherwise simple-looking scripts, and that was a pain for everyone. This basically means that lazy-loading only works if the data for an image has been saved at least once, and the user hasn't messed around too much with image names within their project. The 'easy' way to trigger an image to be saved once is to do a 'Run for project' script - even if the script doesn't do anything. This should be enough to prompt the `ImageServerMetadata` to become embedd",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037:486,update,updated,486,https://qupath.github.io,https://github.com/qupath/qupath/pull/1489#issuecomment-2273821037,2,['update'],['updated']
Deployability,"I've had similar issues with different Linux distros, try downloading the JDK/JRE for Java 16 from AdoptOpenJDK (Here's the JRE 16 for Linux x64: https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16.0.1%2B9/OpenJDK16U-jre_x64_linux_hotspot_16.0.1_9.tar.gz), extract it, and navigate to `<QuPath folder>/lib/app` and run `<where you extracted the JRE>/jdk-16.0.1+9-jre/bin/java -cp ""./*"" qupath.QuPath` (or set the folder to your PATH and just use `java`). This has magically solved many of my issues.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925125755:197,release,releases,197,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925125755,1,['release'],['releases']
Deployability,"I've installed Debian + i3 in VirtualBox to experience the issue and can conclude... QuPath really doesn't seem to work very nicely under these conditions, but it's not clear to me if/how this can be resolved. It also might be my lack of familiarity with i3 that is causing the trouble. QuPath v0.2.0 includes a *File &rarr; Quit* option and removes the startup screen... so this should at least address some of the problems reported. Otherwise, it uses standard JavaFX windows. If most of these work, but an identifiable minority do not, then these is something that could potentially be fixed by providing other ways to close these windows. But if there is a more fundamental issue with i3 and JavaFX then this likely cannot be handled in QuPath alone. Is this issue still of sufficient interest to anyone to explore in more detail what does/doesn't work and help try to construct a plan to resolve it? If so, please let me know what issues remain.; If not, or if the changes in v0.2.0 have been enough, I'd like to close the issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-641999427:5,install,installed,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-641999427,2,['install'],['installed']
Deployability,I've just built v0.6.0-SNAPSHOT from source and this problem seems to have gone anyway... I guess through a Java/JavaFX dependency update. So I think we can close this since it'll be fixed in the next release (even though we didn't intentionally change anything to fix it)?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1436#issuecomment-2256309017:131,update,update,131,https://qupath.github.io,https://github.com/qupath/qupath/issues/1436#issuecomment-2256309017,2,"['release', 'update']","['release', 'update']"
Deployability,I've just made a pull request above that should strip off any null characters at the end of image names provided by Bio-Formats. This may not fix existing projects (since the image names have already been set) but hopefully is enough to prevent it occurring in new projects. If you've a chance to check it please let me know how it goes. I was in the process of setting up the v0.2.2 release when this issue emerged; if it looks basically ok then the proposed fix could be included in the release tomorrow.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/573#issuecomment-664581368:384,release,release,384,https://qupath.github.io,https://github.com/qupath/qupath/issues/573#issuecomment-664581368,2,['release'],['release']
Deployability,"I've just made a pull request that I think resolves this. The underlying issue is that QuPath has stored the requested maximum memory value from another installation, but this isn't consistent with the cfg file of the current installation. If you request that the max memory is identical to the value stored in the preference, then it isn't updated. Setting it to anything else (higher or lower) should work. (There is possibly no need to store the memory in a persistent preference at all - this was more relevant in v0.1.2 when memory could be handled differently. The pull request doesn't go quite that far though.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/582#issuecomment-669019754:153,install,installation,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/582#issuecomment-669019754,3,"['install', 'update']","['installation', 'updated']"
Deployability,"I've just updated the Mac release [here](https://github.com/qupath/qupath/releases/tag/v0.1.1).; It works for me on all three computers now. Please let me know if it also solves things on your side. (Thanks again for reporting this - it appears to have been connected to libraries I have installed on my own computers but didn't include in the distribution, so I assume the Mac version was not working for anyone else... so it was a pretty big problem!)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265556833:10,update,updated,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265556833,4,"['install', 'release', 'update']","['installed', 'release', 'releases', 'updated']"
Deployability,"I've made a fix for the 'double-point' issue in one of my branches for inclusion in the next release. Depending on your use case and why this is causing you problems, it may help to edit an existing polygon with the Brush tool, which can address small (or large) defects. Potentially the problematic final point for existing annotations could be removed by scripting, if really necessary. Switching tools while in the process of drawing isn't really intended...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-438962953:93,release,release,93,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438962953,1,['release'],['release']
Deployability,"I've made an update that will be included in v0.1.2 so that QuPath can recover more gracefully if it finds that OpenSlide cannot be loaded. Previously, it recovered only the first time... but subsequent attempts to open images were thwarted by a particularly nasty error - which caused the trouble you found. Therefore while it still remains a mystery why OpenSlide cannot be used on one of your computers, at least there should be no need to manually disable OpenSlide through renaming from now on. (Note: I'd recommend uninstalling QuPath before installing the update, since otherwise it is likely that the current files, renamed and not, will hang around within Windows... they shouldn't cause trouble, but uninstalling manually can help make sure.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268797552:13,update,update,13,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268797552,3,"['install', 'update']","['installing', 'update']"
Deployability,"I've made changes on my fork at https://github.com/petebankhead/qupath/commit/bfaa0bc7aed21c28497be064da3cd2009db249cb#diff-c197962302397baf3a4cc36463dce5ea but haven't merged these back yet. For now, jpackage remains a moving target and the build script will probably need further updates as it develops...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/311#issuecomment-487147127:282,update,updates,282,https://qupath.github.io,https://github.com/qupath/qupath/issues/311#issuecomment-487147127,1,['update'],['updates']
Deployability,I've merged a proposed fix at https://github.com/qupath/qupath/pull/1620 which will be in the next QuPath release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1586#issuecomment-2339638253:106,release,release,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/1586#issuecomment-2339638253,1,['release'],['release']
Deployability,"I've now added a reference to this in the documentation: https://qupath.readthedocs.io/en/latest/docs/intro/installation.html#linux. I'll close the issue since it seems that the bug is outside QuPath and therefore I don't think it's something we can resolve, beyond documenting the workaround.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614#issuecomment-709417032:108,install,installation,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/614#issuecomment-709417032,1,['install'],['installation']
Deployability,"I've now updated the documentation on using ImageJ with QuPath at https://github.com/qupath/qupath/wiki/Working-with-ImageJ. I'll close this issue now, but please reopen it if things aren't working as described. The use of visibility status to influence what is sent to ImageJ should be available in the v0.0.4 release of QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253767302:9,update,updated,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253767302,2,"['release', 'update']","['release', 'updated']"
Deployability,"I've only set up the entire project with Eclipse, using the approach briefly described at https://github.com/qupath/qupath/tree/v0.1.2/src/main/resources/eclipse - I'm afraid I don't know how to address the issues when using other IDE's.; (Incidentally, those instructions are a little old now, not all steps may be necessary. For example, from memory I think only the .project file needs updated, not the .classpath file.). However, here are some notes that might be helpful:. * Most of the POM files should descend from the 'base' POM, which specifies that the compiler should be compatible with [Java 8 here](https://github.com/qupath/qupath/blob/v0.1.2/pom.xml#L176). I believe this should then be inherited across the project.; * slf4j-api is a dependency of logback-classic. This is specified in the base POM, and so Maven should still take care of slf4j even if it isn't mentioned directly. I don't know why anything involving javax.script would be troublesome.; * The jar files alone required for QuPath are reasonably small, but the JRE is required for running it. The JavaFX packager can be used to put them all together in one (larger) installer, but if you already have a compatible JRE installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:389,update,updated,389,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['update'],['updated']
Deployability,"I've rebased my patches on main, now that I understand that main is the correct branch to use, so I'll make a separate pull request and close this one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/651#issuecomment-740692600:16,patch,patches,16,https://qupath.github.io,https://github.com/qupath/qupath/pull/651#issuecomment-740692600,1,['patch'],['patches']
Deployability,"I've repeated the issue several times but not always (I know this doesn't make sense but I don't know how to explain it). Here is an example of error message that I have been getting when it has not worked:. ```; INFO: Bio-Formats version 6.2.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.2.0) (17 ms); INFO: Loaded extension Experimental commands (9 ms); INFO: Loaded extension ImageJ extension (49 ms); INFO: Loaded extension JPen extension (15 ms); INFO: Loaded extension OpenCV extensions (2 ms); INFO: Loaded extension Rich script editor extension (161 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: 190804; WARN: Unable to obtain full image format info for file:/C:/pathtoimage***.scn (null)WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; WARN: Unable to open UriImageSupport (class qupath.lib.images.servers.openslide.OpenslideServerBuilder) support=2.5builders=1; WARN: Unable to open file:/C:/pathtoimage***.scn with OpenSlide: Couldn't locate TIFF directory for quickhash; ```. Seems like it tried to open with openslide while it should have used bioformats?. Another weird behaviour (not sure if this is intended) of the new version: if I drag an drop fluorescent images (.scn or .vsi) (not tried with chromogenic) to qupath without having pre-created a project, it only opens the label/macro image without letting me access to higher resolution images....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/348#issuecomment-518022687:661,update,update,661,https://qupath.github.io,https://github.com/qupath/qupath/issues/348#issuecomment-518022687,1,['update'],['update']
Deployability,"I've tested this on two computers and found:. * It works for me on Windows; * It works from me on Mac if I build the code from source... but not if I use the installer. This makes me think it *might* be a permissions issue within the operating system, but I'm not sure. Any more info you can provide would be helpful. In case it cannot be resolved, I've added documentation on setting the memory manually to; https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-631258118:158,install,installer,158,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631258118,1,['install'],['installer']
Deployability,"I've tried now on three computers (Windows 64, Mac M1, Mac Intel) and can't replicate any problem - the tiles open fine at all resolutions in QuPath v0.3.2. I see the warning in v0.3.1 but the image still opens without problems. Two things you could try:; * Reset QuPath's preferences, with *Edit &rarr; Reset preferences*; * Increase the logging in the hope that a more useful error appears; to do this go to *Edit &rarr; Preferences...* and search for `Log level`, then set its value to `DEBUG`. (I do see that the images aren't recognised as RGB, but that's a different issue... I may need to update QuPath to convert it to a more standard RGB automatically)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828:596,update,update,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/904#issuecomment-1065014828,1,['update'],['update']
Deployability,"I've updated one of my old incorrect javadocs - assuming it still builds fine I think this is good to merge, thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1465#issuecomment-2085691166:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/pull/1465#issuecomment-2085691166,1,['update'],['updated']
Deployability,I've updated the ReadMe to remove the (out-of-date) reference to needing to build it yourself.; https://github.com/qupath/qupath/commit/3d2331fb2f0f169c35a3bd04f6026bd0d7bfecc9,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-489080862:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-489080862,1,['update'],['updated']
Deployability,"I've updated the page to clarify that it refers to v0.1.2. Everything will need to be revised for v0.2.0, but the priority for now is to work on the code. You'll need to clone the repository to get the code, the sources are no longer included in the distribution.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/350#issuecomment-518597688:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/350#issuecomment-518597688,1,['update'],['updated']
Deployability,I've updated these limits in v0.2.1. Hopefully that is enough to avoid this issue resurfacing.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/96#issuecomment-644847539:5,update,updated,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/96#issuecomment-644847539,1,['update'],['updated']
Deployability,INFO: Refreshing extensions in C:\Users\user\QuPath\extensions; 	INFO: Selected style: Modena Light; 	INFO: Performing update check...; 	INFO: Starting QuPath with parameters: []; 	INFO: Refreshing extensions in C:\Users\user\QuPath\extensions; 	INFO: Added extension: C:\Users\user\QuPath\extensions\qupath-extension-bioformats.jar; 	INFO: Extension loaded: Bio-Formats server options; 	INFO: Image server loaded: Bio-Formats; 	WARN: Strange 'bits per sample' of 0; 	ERROR: QuPath exception; 		at qupath.lib.images.servers.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:46); 		at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 		at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); 		at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); 		at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); 		at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/168:119,update,update,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/168,1,['update'],['update']
Deployability,"If you double-click on the number, you can get lots of digits... is that sufficient?. If not, it looks like something we should be able to change by switching the [formatting here](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/BrightnessContrastCommand.java#L202) (to use a `NumberFormatter`, so that decimal places aren't added when not needed) @melvingelbard . (PS. I'd really rather use [the forum](http://image.sc/tag/qupath) for discussions/ requests, and GitHub only for bugs/dev use for specific releases)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/669#issuecomment-785239425:588,release,releases,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-785239425,1,['release'],['releases']
Deployability,"If you get it working I would be curious to see a sample script. ; For clarity since I have not played with this... updateClassifier will add the input list of objects to the current list of objects from all previous slides? Or restart the classifier with only the current slide input, but same choice of classifier and variables?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/208#issuecomment-417789387:116,update,updateClassifier,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417789387,1,['update'],['updateClassifier']
Deployability,"If you remove the jar file with 'qupath-extension-script-editor' in the name from your installation, QuPath is supposed to fall back to use a simpler script editor that lacks any kind of syntax highlighting. This may be worth trying as a workaround if the bug is more problematic than the loss of highlighting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314#issuecomment-491329554:87,install,installation,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/314#issuecomment-491329554,2,['install'],['installation']
Deployability,"If you try the latest [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) you can get the channel names by scripting. And if you combine it with my QuPath fork, you can see them in the _Brightness/Contrast_ window. There are more details [here](https://petebankhead.github.io/qupath/2018/08/03/bioformats-update.html#support-for-32-bit-multichannel-images)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/186#issuecomment-410657364:332,update,update,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/186#issuecomment-410657364,1,['update'],['update']
Deployability,"If you use VisualVM then you should be able to find exactly what takes time. Thumbnail generation can't safely be done in parallel because there's no guarantee the images will be pyramidal, so there is a high risk of out of memory errors. That being said, I'm not certain thumbnail generation is the problem. If it's once per day, there could be some issue associated with update checking... but I can't see why that would be a problem and it wouldn't happen with the project is requested. VisualVM should resolve it one way or another in any case. One other thing: is there anything conventional about where the project/images are stored? The need for a reboot makes me think there could be an operating system component. I've never seen it myself and don't recall anyone having reported it before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611:373,update,update,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325599611,1,['update'],['update']
Deployability,"If you zoom in more, by default the brush will be effectively smaller and so it's easier to select a region without changing the shape. Of you change just switch to the *Move* tool to select another region by double-clicking on it, without any risk of changing its shape. You can toggle between tools by just pressing `M` and `B`. In general, you might find 'locking' annotations helpful - that helps avoid changing them accidentally, and also allows you to draw _new_ regions inside an existing annotation with the brush. To do so, select the annotation and then right-click on it, and choose *Annotations &rarr; Lock*. Finally, if you are doing a lot of painstaking annotations be sure to save regularly (*Ctrl + S*)... or consider trying the beta/pre-release version [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). Installation is a bit more awkward, but it does provide (limited) undo support along with many other improvements - so may be worth it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/179#issuecomment-399201573:280,toggle,toggle,280,https://qupath.github.io,https://github.com/qupath/qupath/issues/179#issuecomment-399201573,7,"['Install', 'release', 'toggle', 'update']","['Installation', 'release', 'toggle', 'updates']"
Deployability,Image reading issues on macOS - updated OpenSlide binaries required,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/23:32,update,updated,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/23,1,['update'],['updated']
Deployability,Image server using affine Transform does not update pixel size,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/528:45,update,update,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/528,1,['update'],['update']
Deployability,ImageOps and pixel classification updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/808:34,update,updates,34,https://qupath.github.io,https://github.com/qupath/qupath/pull/808,1,['update'],['updates']
Deployability,"Improve build scripts for building using Apple silicon; * Avoid including TensorFlow & OpenSlide (which won't work); * Support a -Popenslide=/path/to/openslide.jar preference to create a build that uses a local openslide jar; * Give more informative error if (when) OpenSlide can't be found. Without a custom build, installing with homebrew and including `libopenslide-jni.jnilib` in the app directory can also work (assuming it contains links to its dependencies).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1170:316,install,installing,316,https://qupath.github.io,https://github.com/qupath/qupath/pull/1170,1,['install'],['installing']
Deployability,Improve logging while checking for updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/803:35,update,updates,35,https://qupath.github.io,https://github.com/qupath/qupath/pull/803,1,['update'],['updates']
Deployability,Improvements to ImageJ integration,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1676:23,integrat,integration,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1676,1,['integrat'],['integration']
Deployability,In 0.1.3-SNAPSHOT I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\Qupath-dev\app\jpen-2-3-64.dll already loaded in another classloader`; In 0.2.0-m2 I get this output:; `INFO: java.lang.UnsatisfiedLinkError: Native Library C:\Program Files\QuPath-0.2.0-m2\app\jpen-2-3-64.dll already loaded in another classloader`; Hope that helps you somehow. Update: It appears the lack of pressure sensitivity was actually caused by a recent change in Windows 10 which was fixed by a driver released in mid-march. So We are back to only having trouble with the zooming while moving up/down.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479821853:388,Update,Update,388,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479821853,2,"['Update', 'release']","['Update', 'released']"
Deployability,"In particular, remove legacy detection classifiers and related code. They are much less maintainable than the current ObjectClassifier implementation, and relied upon serialization + retraining. Serialized classifiers from older QuPath releases couldn't even be read in the latest version due to serialization incompatibilities, or could sometimes be read but would not give the expected results (e.g. because of differences in feature calculations). One significant change is that `PathClassifierTools` has been removed, with the relevant methods moved primarily to `PathObjectTools` or (for channels) `ServerTools`.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1015:236,release,releases,236,https://qupath.github.io,https://github.com/qupath/qupath/pull/1015,1,['release'],['releases']
Deployability,"In the Brightness/Contrast dialog, update the settings combo box whenever settings are modified (e.g. sliders moved) to include an asterisk and name in italics. This is intended to address https://forum.image.sc/t/please-help-us-test-the-qupath-v0-5-0-release-candidate/87976/23. The change is relatively conservative, aiming to avoid any substantial overhead whenever changes are made quickly. Specifically, we don't check whether and changes have been *reversed* so that the settings are now 'unmodified again'. We also don't try to handle settings being flagged as changed when switching across multiple viewers. Therefore the asterisk and italics doesn't mean the settings are different, only that they might be different. This could be addressed, but the tests would be more expensive to perform and therefore a little risky immediately before release, in case the performance impact is noticeable. @lacan @MichaelSNelson",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1433:35,update,update,35,https://qupath.github.io,https://github.com/qupath/qupath/pull/1433,3,"['release', 'update']","['release', 'release-candidate', 'update']"
Deployability,"In the `QuPath.cfg` file of your installation, under `[JavaOptions]`, the exact line to add is; ```; java-options=--illegal-access=warn; ```; I've just tried this and it has resolved another problem that I expect to be related (the inability to add metadata to project entries in the current v0.3.0-SNAPSHOT).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717#issuecomment-829898314:33,install,installation,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/717#issuecomment-829898314,1,['install'],['installation']
Deployability,"In the end I had to revert the changes that 'fixed' this because they ended up causing much bigger problems, which only emerged when preparing the next release candidate. More details at https://github.com/qupath/qupath/pull/1379",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750316605:152,release,release,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750316605,1,['release'],['release']
Deployability,"In the script editor, when you have a script selected, File->Close script. I overlooked that a few times too when I was starting, thinking it might close the whole thing. Update measurement names: Where does it break down? Are the channels named correctly? And is there an error?. Batch images for view settings-> These will not have any effect, as they only work on the currently open image and are not saved as part of the .qpdata file at this time. Pete mentioned this in another post... https://groups.google.com/forum/#!searchin/qupath-users/viewer%7Csort:date/qupath-users/uBMxJ_3JnBM/GkDahJw7EAAJ ah there it is.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411576889:171,Update,Update,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411576889,1,['Update'],['Update']
Deployability,Include checksums when using jpackage.; Update gradle wrapper for Java 21 support (when available).,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1369:40,Update,Update,40,https://qupath.github.io,https://github.com/qupath/qupath/pull/1369,1,['Update'],['Update']
Deployability,Incorrect changelog link on https://github.com/qupath/qupath/releases/tag/v0.2.0-m9,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/407:61,release,releases,61,https://qupath.github.io,https://github.com/qupath/qupath/issues/407,1,['release'],['releases']
Deployability,"Initially in the WSInfer extension, now moved to QuPath code - and updated to make it immutable, and create using a builder. An example script showing it in action to tile the current selected object:. ```groovy; def tiler = Tiler.builder(512, 256); .symmetric(true); .trimToParent(true); .filterByCentroid(false); .build(). def pathObject = getSelectedObject(); def tiles = tiler.createAnnotations(pathObject.getROI()). pathObject.clearChildObjects(); pathObject.addChildObjects(tiles); println ""Created ${tiles.size()} tiles""; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1347:67,update,updated,67,https://qupath.github.io,https://github.com/qupath/qupath/pull/1347,1,['update'],['updated']
Deployability,"Install on Ubuntu 20.04, image artifacts in slide pane",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628:0,Install,Install,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/628,1,['Install'],['Install']
Deployability,Installed via the rich text extension. Not done very elegantly for now.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1080:0,Install,Installed,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1080,1,['Install'],['Installed']
Deployability,Installing QuPath on CentOS 7,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:0,Install,Installing,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,1,['Install'],['Installing']
Deployability,Integrating QuPath & CellProfiler,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123:0,Integrat,Integrating,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/123,1,['Integrat'],['Integrating']
Deployability,Intel OpenVINO integration,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665:15,integrat,integration,15,https://qupath.github.io,https://github.com/qupath/qupath/pull/665,1,['integrat'],['integration']
Deployability,"Interesting, I can get the file, and when I look inside it, I see the same .qpdata structure as ones I have with only annotations, but when I load it there are no annotations. I am unsure if the reason I do not get any annotations is related to your problem, or something else related to regional settings/commas/periods. One last try before I leave this for Pete... sometimes cells can get trapped ""outside"" of the annotations, and you need to force an update. I honestly forget when this happens, but I have an example of it right now where the Annotations tab shows the annotation with no cells, and the Hierarchy tab shows the annotation at the top (but empty) and a list of polygons below it, all on the first level. In order to resolve the above case, you can either select and ""jiggle"" the annotation slightly, or to be more precise, use the following script to try and force it to update. Be aware it may seem to freeze if you have a large number of detections. For ~600,000 detections it took about 10-15 minutes on my fairly fast computer since it only runs on one CPU core. https://gist.github.com/Svidro/5829ba53f927e79bb6e370a6a6747cfd#file-force-update-selected-annotation-groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/147#issuecomment-365453095:454,update,update,454,https://qupath.github.io,https://github.com/qupath/qupath/issues/147#issuecomment-365453095,3,['update'],"['update', 'update-selected-annotation-groovy']"
Deployability,Intriguing - if you download the x86 build does it have the same behavior? I guess you may have to rename any Apple silicon installation beforehand (I'm not sure if/how the general package installer deals with multiple installations with the same name).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309:124,install,installation,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1351834309,3,['install'],"['installation', 'installations', 'installer']"
Deployability,Introduce PatchClassifierParams,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1156:10,Patch,PatchClassifierParams,10,https://qupath.github.io,https://github.com/qupath/qupath/pull/1156,1,['Patch'],['PatchClassifierParams']
Deployability,Is an sha256 hash available for the current Qupath (0.3.2) release? (specifically the windows distribution?),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738:59,release,release,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1207982738,1,['release'],['release']
Deployability,Is it worth revisiting the idea of a draft release pipeline using actions? Manually triggered,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935805125:43,release,release,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935805125,2,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,"Is there a scenario when this causes a problem, or is it just unexpected?. I can make a change easy to use the pixel size of the image at the time the `LabeledImageServer` is created (I'll think more about it, but I haven't come up with a reason not to do this yet). However, this still won't be able to recognize any changes to the metadata of the underlying image... so if you were to change the pixel size after creating the labeled server this change would not filter through. That might then also be unexpected. An alternative (but consistent) change would be for the labeled server to *always* be uncalibrated. And as you may have seen, labelled servers can't currently have their metadata updated at all. Perhaps they should permit this. I tend towards the first proposal (use the pixel size at the time the `LabeledImageServer` is created, but before committing to any one solution I'd like to better understand when the pixel size matters for labelled images.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/591#issuecomment-673115164:696,update,updated,696,https://qupath.github.io,https://github.com/qupath/qupath/issues/591#issuecomment-673115164,1,['update'],['updated']
Deployability,Is there an installer log available with useful information (as described at [this post](https://apple.stackexchange.com/questions/275915/debugging-the-installer-encountered-an-error-that-caused-the-installation-to-fa))?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956259133:12,install,installer,12,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956259133,2,['install'],"['installer', 'installer-encountered-an-error-that-caused-the-installation-to-fa']"
Deployability,Is there anyway to install Qupath by scoop?,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1536:19,install,install,19,https://qupath.github.io,https://github.com/qupath/qupath/issues/1536,1,['install'],['install']
Deployability,"Is this able to add it to the `.pkg`, or only the .`.app`?. If it's only the `.app`, we could build that separately with `jpackage` but then need to somehow get it properly into a `.pkg` (which might not be that hard, but I don't know...). Actually, now that I think of it, it might be doable in Gradle as well - which has the benefit of knowing the version. Will try to look into it, but not sure if I'll have time before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727749527:432,release,release,432,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727749527,1,['release'],['release']
Deployability,"It does happen constantly. It didn't at first, and then started to appear. I don't know why,... but thought it might be worst reporting in case it had anything to do with QuPath. I might just try to re-install QuPath and see if it comes back.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349#issuecomment-518388476:202,install,install,202,https://qupath.github.io,https://github.com/qupath/qupath/issues/349#issuecomment-518388476,1,['install'],['install']
Deployability,"It has been a while, but I do not think you should have to install anything for Bioformats. All you need is the JAR file off of their website, and the JAR file from Pete, both at: https://github.com/qupath/qupath-bioformats-extension; And as it says, just drag them into the open QuPath window to add them to QuPath. I am not sure why you are having issues with a visual C++ redistributable; I am not entirely sure if that is related. At least, I do not recall having to install anything else when adding bioformats to QuPath, even when it was one of the first things I put on my computer. Is the error a QuPath error? It would probably be best to include a picture or at least the text of the error, and exactly when the error pops up (when you drag the bioformats extension into the QuPath window? when you try to open the CZI file?).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-356998068:59,install,install,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-356998068,2,['install'],['install']
Deployability,"It looks like OpenSlide may need to be recompiled (maybe with a different libtiff) to handle these files. In the meantime, it should be possible to get QuPath to use an alternative version of OpenSlide by removing the OpenSlide-related files from QuPath, and amending the ```java.library.path``` used when launching QuPath if needed. I do not have much experience of handling native libraries with Java on Linux, but Issue #27 may be of some use for reference. Basically you can launch QuPath from the command line and set ```-Djava.library.path``` or modify the ```QuPath.cfg``` file. If you would prefer to avoid this, as a shortcut do either of these two methods work?. * Install the Bio-Formats extension, as described [here](https://github.com/qupath/qupath-bioformats-extension), to use Bio-Formats as an alternative; * Copy ```libopenslide.so.0``` from your working OpenSlide distribution to replace the corresponding file in your QuPath installation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65#issuecomment-296463668:675,Install,Install,675,https://qupath.github.io,https://github.com/qupath/qupath/issues/65#issuecomment-296463668,2,"['Install', 'install']","['Install', 'installation']"
Deployability,"It looks like the root problem is that OpenSlide can't be loaded, which I presume is somehow related to the upgrade - but I don't know how. I would suggest trying the zipped version of QuPath v0.1.2 and running it from your desktop (or at least a folder where you definitely have full write permissions): https://github.com/qupath/qupath/releases/tag/v0.1.2; (You will need to extract all the files from the zipped file and the .exe you need to run will be among them.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519087329:108,upgrade,upgrade,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519087329,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"It looks like this is a JavaFX bug/limitation:. * https://bugs.openjdk.org/browse/JDK-8239590; * https://bugs.openjdk.org/browse/JDK-8241973. I'll explore whether I can find any workarounds for the next QuPath release, but it looks like it could be a more fundamental problem of how JavaFX and macOS work.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1701617743:210,release,release,210,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1701617743,1,['release'],['release']
Deployability,"It looks like you're using 32-bit Windows - or, if not, then at least the 32-bit version of the Java JDK. QuPath needs the 64-bit bit version, unfortunately. If your Windows supports it, then you could try uninstalling the Java JDK and installing the one on the download page flagged as 'Windows x64' (rather than 'Windows x86'). That might help. I don't see exactly why it would cause this error (at 98%, so close!), but it's my best guess... I've not seen that error before, but I've only been able to test it on a 64-bit system.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-414650057:236,install,installing,236,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-414650057,1,['install'],['installing']
Deployability,It seems YouTube changed the access settings a while ago - they should be visible again now. (Note that the wiki hasn't been updated since QuPath v0.1.2 - the current documentation is at https://qupath.readthedocs.io/ ),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880:125,update,updated,125,https://qupath.github.io,https://github.com/qupath/qupath/issues/955#issuecomment-1105367880,1,['update'],['updated']
Deployability,"It should be possible - the classifier interface is fairly simple, and once you've got a classifier you just need to update it. See https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathObjectClassifier.java#L69. The default is the [RTreesClassifier](https://github.com/qupath/qupath/blob/v0.1.2/qupath-processing-opencv/src/main/java/qupath/opencv/classify/RTreesClassifier.java), and there are some useful helper methods in the [PathClassificationLabellingHelper](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/classifiers/PathClassificationLabellingHelper.java) class.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/208#issuecomment-417774812:117,update,update,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/208#issuecomment-417774812,2,['update'],['update']
Deployability,"It shouldn't be file size. Under *Help &rarr; Show setup options* I can restrict the RAM available to QUPath to 1GB and can still open the image without problems. You can also try the memory monitor from https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. The log says `Not a file that OpenSlide can recognize`. It's not clear to me if *any* images are working for you using OpenSlide. I asked above: under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? If you see that for any images, then we can conclude that OpenSlide is (at least partially) working. But if you always see *ImageJ server* or *Bio-Formats server*, then it probably isn't and that's the problem that needs to be solved. In that case, it would help to know if a separate installation of OpenSlide on your machine can read the image at all through any means.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371850256:799,install,installation,799,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371850256,2,['install'],['installation']
Deployability,"It was never stated, but I assume the basics were tried? Redownload the program, or try installing some other open source software to make sure it is not a general installer issue?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956184479:88,install,installing,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956184479,2,['install'],"['installer', 'installing']"
Deployability,It will be possible to set the grid spacing from the preference pane in the next release.; https://github.com/petebankhead/qupath/commit/9f337258120125724e17c7f6985fdce495a230f0,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/252#issuecomment-450680141:81,release,release,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/252#issuecomment-450680141,1,['release'],['release']
Deployability,"It will still be possible to change the RAM, it just wouldn't be such a prominent option on startup. I'm not sure what the best default is, but I have the impression that more users will have too little RAM than too much - and the proportion needs to be defined when QuPath is built (I don't know any way to change it after it is installed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986#issuecomment-1171921970:330,install,installed,330,https://qupath.github.io,https://github.com/qupath/qupath/issues/986#issuecomment-1171921970,1,['install'],['installed']
Deployability,"It's a long time since I wrote that bit (and I probably should have used `Set.of(...)` instead of the `HashSet`...), but I'm not sure that adding `MOUSE_RELEASED` would be correct. The purpose of the `EventFilter` in general is to block UI events under some circumstances, e.g. when a script is running. We'd want mouse pressed & released events to be blocked (and not ignored... since ignoring them would let them through. I realise that's not entirely intuitive naming...). To make minimal changes I think you'd just need to check for the event you want and leave the rest as it was, e.g.; ```java; ...; } else if (e.getEventType() == MouseEvent.MOUSE_CLICKED && e.getButton() == MouseButton.MIDDLE) {; ...; }; ```. (Not certain I've understood, since that comment is only from reading - not running)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1313439231:330,release,released,330,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1313439231,2,['release'],['released']
Deployability,It's a mystery what worked (if anything) but this tries to include the javadoc jars missing in the past release candidates.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1683:104,release,release,104,https://qupath.github.io,https://github.com/qupath/qupath/pull/1683,1,['release'],['release']
Deployability,"It's intentional to have a 'user directory' rather than an 'extensions directory', as described here: https://qupath.github.io/QuPath-v0.2.0 (no direct links to headings yet...). The idea is much the same though. Since Bio-Formats became built-in, I haven't had reason to use it much though and need to check some more how it behaves... Does setting it to _any_ other location fail, or does it fail _only_ if the location is on a network drive? I've learned of some network drive weirdness, e.g. QuPath can't be started from a network location on Windows, but don't know if it's related to this or not. > Note that it's not a good idea to use an existing directory extension because older extensions can be horribly incompatible because of the many code changes. I could look at failing more elegantly in this case, but I only know of a couple of other people who had installed extensions other than Bio-Formats or Weka...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-476237704:868,install,installed,868,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-476237704,2,['install'],['installed']
Deployability,"It's not clear to me if this is a QuPath question or an eclipse question, or if you are already familiar with eclipse. There are various other posts if you search for ""eclipse"" either here or on the [QuPath Google Group](https://groups.google.com/forum/#!forum/qupath-users) and I don't know what you've read or tried. In any case, I'm working on my own fork currently and making major changes (including a switch to Java 11, and from Maven to Gradle). The code here was always a bit awkward to set up, but once I have merged in the changes the process will be different... I'm afraid I can't write up any more extensive documentation on setting up this version, because it will soon be out of date and all my spare time to work on this really needs to be devoted to the update. Someone else may be able to help more.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/257#issuecomment-456983998:771,update,update,771,https://qupath.github.io,https://github.com/qupath/qupath/issues/257#issuecomment-456983998,2,['update'],['update']
Deployability,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-402686585:261,integrat,integration,261,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585,4,"['integrat', 'update']","['integration', 'update']"
Deployability,It's now possible to call `DnnModel.close()`. It will also be possible to call `StarDist2D.close()` in the next release of the extension.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/841#issuecomment-1336094677:112,release,release,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-1336094677,1,['release'],['release']
Deployability,"It's the same process to install extensions on Windows: drag the jar onto QuPath when it's running and (generally) accept the default extensions directory. You might need to restart QuPath, but maybe not. Files inside `QuPath\app\jars` aren't automatically picked up, rather they need to be added to the classpath explicitly. There's a file `QuPath.cfg` that defines this for the built-in jars.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/238#issuecomment-434396341:25,install,install,25,https://qupath.github.io,https://github.com/qupath/qupath/issues/238#issuecomment-434396341,1,['install'],['install']
Deployability,Ive just downloaded and re-installed on my mac and its working now! What a pallava! I think I was tried to add extensions on the mac where they weren't needed and it seems to be working now. Ive just had a look at some tissue detections and it seems to be functional! I will continue using the software and would you mind if I checked in again if I continue having problems?. Thank you again,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357061650:27,install,installed,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357061650,1,['install'],['installed']
Deployability,"JPEG-XR compressed CZI files cannot be open, however the last version of bioformat can now read this format (see http://www.openmicroscopy.org/site/news/release-of-bio-formats-5.3.0 ); Any chance of having the support of this format in qupath soon ?. Best,; Benjamin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/34:153,release,release-of-bio-formats-,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/34,1,['release'],['release-of-bio-formats-']
Deployability,JTS update & related fixes,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/998:4,update,update,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/998,1,['update'],['update']
Deployability,JavaFX update and fixes,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1255:7,update,update,7,https://qupath.github.io,https://github.com/qupath/qupath/pull/1255,1,['update'],['update']
Deployability,"JavaFX update is included based on changelog, since it may fix issues such as #833. Build scripts now have *extremely* provisional and experimental support for both Apple Silicon and 32-bit Windows. To use either, it is necessary to build with a compatible JDK and (probably) skip specifying a toolchain, e.g. with; ```; ./gradlew build jpackage -Ptoolchain=skip; ```; Note 1: This will break OpenSlide support. Whole slide images need to be read some other way (e.g. Bio-Formats). For 32-bit Windows this can be fixed by replacing the dlls with the 32-bit ones from openslide.org, but there's no such straightforward fix on Mac. Note2 : The Apple Silicon build relies upon a JavaCPP-Presets snapshot for OpenCV, so is subject to change and not intended for any serious work. Nevertheless, it can be used to give an impression of performance improvements.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/849:7,update,update,7,https://qupath.github.io,https://github.com/qupath/qupath/pull/849,1,['update'],['update']
Deployability,Javadoc jars are missing from QuPath installations,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652:37,install,installations,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652,1,['install'],['installations']
Deployability,Javadoc updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1101:8,update,updates,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/1101,1,['update'],['updates']
Deployability,LabeledImageServer updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/787:19,update,updates,19,https://qupath.github.io,https://github.com/qupath/qupath/pull/787,1,['update'],['updates']
Deployability,Let me know when this is tested on different platforms so I can do a non-snapshot blosc release,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1474#issuecomment-1966588492:88,release,release,88,https://qupath.github.io,https://github.com/qupath/qupath/pull/1474#issuecomment-1966588492,1,['release'],['release']
Deployability,"Library(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:748); 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 13:20:08.246 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 13:20:08.256 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 13:20:17.509 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Calling Platform.exit();; ```. In Centos 6, I found some information about the error message ""j java.lang.Object.<clinit>()V+0"" : this may be a stack problem. I tried to change the thread stack size with -Xss in QuPath.cfg [JVMOptions], but I can not do it : . ```; 13:11:03.460 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; QuPath Error invoking method.; QuPath Failed to launch JVM; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:2571,update,update,2571,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,1,['update'],['update']
Deployability,"Licenses are up-to-date. For the release of the natives Jar for the final 0.5 release I'd like to have everything semi-cleanly coming from one repo, rather than currently taking their dll directly from openslide.org for windows. Therefore this is good to go, unless you want to clean up the loading code",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1764700837:33,release,release,33,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1764700837,2,['release'],['release']
Deployability,Linux binaries are only available for the very first release (v0.0.1). There hasn't yet been any audible demand for updated binaries... but they should at least be provided for v0.1. Ideally these would use OpenJDK and OpenJFX... although so far it has proven easier to create them using Oracle's JDK. Any Linux users who would like to see Linux binaries are invited to comment here...,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-258683889:53,release,release,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-258683889,2,"['release', 'update']","['release', 'updated']"
Deployability,ListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.graphics/javafx.css.StyleableObjectProperty.set(Unknown Source); at javafx.base/javafx.beans.property.ObjectProperty.setValue(Unknown Source); at javafx.controls/javafx.scene.control.Labeled.setGraphic(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:423); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:413); at javafx.controls/javafx.scene.control.TreeCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.TreeCell.lambda$new$3(Unknown Source); at javafx.base/javafx.beans.WeakInvalidationListener.invalidated(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.controls/javafx.scene.control.TreeView.setRoot(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView.hierarchyChanged(PathObjectHierarchyView.java:563); at qupath.lib.gui.panes.PathObjectHierarchyView.lambda$hierarchyChanged$11(PathObjectHierarchyView.java:559,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:3584,update,updateItem,3584,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,Location text does not update when navigating with keyboard,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/819:23,update,update,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/819,1,['update'],['update']
Deployability,"Looking into this some more, it is more awkward than I had realised. I had thought that wrapping everything in a `PointerScope` would help, by ensuring that the `Net` was closed properly without further effort - however the use if [`Net.retainReference()`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/OpenCVDnn.java#L651) thwarts this. Calling `System.gc()` before/after using a DNN can help patch over the problem, however a better solution is likely to require a more thorough revision of `OpenCVDnn` - possibly by updating `DnnModel` to implement `AutoCloseable`. This makes it more of a v0.4.0 issue than a v0.3.1 issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/841#issuecomment-969247636:482,patch,patch,482,https://qupath.github.io,https://github.com/qupath/qupath/issues/841#issuecomment-969247636,1,['patch'],['patch']
Deployability,"Looks good but unfortunately doesn't work on a Mac :( Or, rather, it seems to copy fine - but then immediately overwrite the clipboard contents with a screenshot of the current viewer (from the *Edit &rarr; Copy to clipboard... &rarr; Current viewer* shortcut). Switching to an event filter or to use key released didn't resolve it. I can think of three workarounds:. 1. Add a context menu, so that Mac users have an alternative option; 2. Disable copying to clipboard if the viewer isn't directly in focus; 3. Turn off the copying a current viewer screenshot to the clipboard shortcut altogether, so that it can't conflict with Ctrl/Cmd + C (I guess copying a screenshot isn't *that* common a task?). What do you think? I can't use Ctrl/Cmd + C in a measurement table of any kind, I guess because of the eagerness of QuPath to make screenshots.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/720#issuecomment-831461238:305,release,released,305,https://qupath.github.io,https://github.com/qupath/qupath/pull/720#issuecomment-831461238,1,['release'],['released']
Deployability,"Looks good! I'll merge this as it looks small enough to be a good candidate for v0.5.1 (if we make a release). Feel free to refactor according to the new style as a separate PR, but it's not urgent if it's currently working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1455#issuecomment-1910501486:101,release,release,101,https://qupath.github.io,https://github.com/qupath/qupath/pull/1455#issuecomment-1910501486,1,['release'],['release']
Deployability,"Looks great - is there any way to run it before merging? I think it's possible if it's on a branch of this repo, but not a fork. Is it also possible to separate out the draft of the release - or check what happens if running twice without a change of version? I imagine sometimes we might want to make builds without creating a release - but having the option to make a draft release as well is a fantastic improvement.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943515233:182,release,release,182,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943515233,3,['release'],['release']
Deployability,"Looks like I need to also get my head around `includeBuild`, though the gradle documentation is as abstract as ever. I don't really see a huge difference either way. Would we be pushing updates to the openslide (or other ""core"" extensions) without making a new QuPath release?. I guess it would make issue tracking (and responsibilities) more granular if we can gradually slim down the qupath repo, though if that has the side-effect of making issues harder to find, then it's not really great. It is straightforward to extract the git history: https://docs.github.com/en/get-started/using-git/splitting-a-subfolder-out-into-a-new-repository",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343:186,update,updates,186,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1714324343,2,"['release', 'update']","['release', 'updates']"
Deployability,"Lots of scripting-related improvements, along with some major refactoring and a bit of changed behavior. ## Prompts when 'Run for project' includes a currently-open image. Using 'Run for project' with an image that is currently open is a common source of confusion in QuPath. This operations on the saved data files in the project, but the changes aren't automatically reflected in the viewer. These changes update the message shown to the user when this may be affected:. <img width=""601"" alt=""Open images message"" src=""https://user-images.githubusercontent.com/4690904/196366026-b771f014-be4b-4f07-8185-55af6745e7d2.png"">. And a prompt automatically appears when the scripting is complete, inviting the user to reload the data to see any changes:. <img width=""375"" alt=""Prompt to reload"" src=""https://user-images.githubusercontent.com/4690904/196366065-23f2a1f7-0146-41a9-a8ba-367d11605d12.png"">. ## New `ScriptAttributes` to access file and batch info. Several [attributes](https://github.com/qupath/qupath/commit/a1d40fb6647454a4500cb305d19e2f8698caa2fa) are now set when scripts are run, which can be queried in Groovy via `getProperty(attribute)`. Examples:. ```groovy; // The number of images being processed in batch (e.g. with 'Run for project'); int batchSize = getProperty(ScriptAttributes.BATCH_SIZE). // The 0-based index for the current image being processed; int batchIndex = getProperty(ScriptAttributes.BATCH_INDEX). // Query if this is the last image being processed in a batch; boolean batchLast = getProperty(ScriptAttributes.BATCH_LAST). // The file path for the script file (or null if not available); // (Note that the file contents may differ from the script if there are unsaved changes); String filePath = getProperty(ScriptAttributes.FILE_PATH); ```. The inspiration is from https://github.com/qupath/qupath/issues/1029. These changes make useful things possible, e.g.; * take action to notify the user at the end of long-running batch processing; * access other scripts or ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1078:408,update,update,408,https://qupath.github.io,https://github.com/qupath/qupath/pull/1078,1,['update'],['update']
Deployability,Main changes:; * Update to JavaFX 20; * Fix for https://github.com/qupath/qupath/issues/1252; * Many fixes suggested by IntelliJ,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1255:17,Update,Update,17,https://qupath.github.io,https://github.com/qupath/qupath/pull/1255,1,['Update'],['Update']
Deployability,Make both rpm and deb installers for linux builds,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1366:22,install,installers,22,https://qupath.github.io,https://github.com/qupath/qupath/pull/1366,1,['install'],['installers']
Deployability,"Maybe it's a legitimate memory leak in Rosetta? Did you check that? It appears a lot of people are having problems with it, like this: https://feedback-readonly.photoshop.com/conversations/lightroom-classic/lightroom-classic-desktop-disk-readwrite-to-ssd-m1-macs-with-rosetta/5fd7cefe7288d52d004c5a1c. Anyway, I'm waiting after a couple of things myself before the next release of JavaCPP, so if you figure out anything in the next week or so and find something, please do let me know! Thanks",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344:370,release,release,370,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024399344,2,['release'],['release']
Deployability,"Merging recent changes into `main`, as the first step towards v0.5.0 being the next release. Currently should be considered *very* unstable. Some of the main changes:; * Major refactoring (still ongoing); * Main aim is to shorten & simplify code (e.g. `QuPathGUI` now half the size); * Extract JavaFX controls that don't depend upon QuPath to a separate module; * Externalize many strings (for localization); * Improve Brightness/Contrast dialog; * Improve SVG export; * Support `-Dnoextensions` system property; * Require Java 17 as minimum version; * Many dependency updates",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1274:84,release,release,84,https://qupath.github.io,https://github.com/qupath/qupath/pull/1274,2,"['release', 'update']","['release', 'updates']"
Deployability,Might be an idea to do releases with & without javadocs as I guess many users won't use scripting at all,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1513#issuecomment-2088504244:23,release,releases,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1513#issuecomment-2088504244,1,['release'],['releases']
Deployability,Minor OMERO updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/709:12,update,updates,12,https://qupath.github.io,https://github.com/qupath/qupath/pull/709,1,['update'],['updates']
Deployability,"Minor changes:; * Use 'crop' rather than 'trim' with Tiler; * Turn this setting off by default with `PixelProcessor`. Major change:; * Convert `PluginRunner` to `TaskRunner`; * Provide `QPEx.createTaskRunner()` and `QPEx.createTaskRunner(int nThreads)` methods. The reasoning is that `PluginRunner` no longer really makes sense as a name: the class rather represents a simple and generic way to run tasks in parallel. It's also more general than in previous QuPath releases. The following script shows it in action:. ```groovy; def tasks = []; for (int i in 1..50) {; int n = i; tasks << () -> sleepyTask(n); }. def runner = createTaskRunner(); runner.runTasks(tasks). def sleepyTask(int n) {; Thread.sleep(250L); println ""I'm awake! And I'm task $n""; }; ```. When run interactively, this should show a progress dialog (after a short delay). But when using *Run for project* it will switch to using a command line task runner, and not generate a new dialog of its own. The number of threads can also be specified. For example, for single-threaded tasks we can use; ```groovy; def runner = createTaskRunner(1); ```. This is an easy way to provide a progress monitor for multiple tasks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1360:465,release,releases,465,https://qupath.github.io,https://github.com/qupath/qupath/pull/1360,1,['release'],['releases']
Deployability,Minor dependency updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/999:17,update,updates,17,https://qupath.github.io,https://github.com/qupath/qupath/pull/999,1,['update'],['updates']
Deployability,Minor fixes & updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/681:14,update,updates,14,https://qupath.github.io,https://github.com/qupath/qupath/pull/681,1,['update'],['updates']
Deployability,"Minor fixes to javadocs, gson update",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/920:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/920,1,['update'],['update']
Deployability,Minor script editor updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/939:20,update,updates,20,https://qupath.github.io,https://github.com/qupath/qupath/pull/939,1,['update'],['updates']
Deployability,"More info on using x64 build on Apple Silicon + OpenCV DNN:. * OpenCV 4.6.0 - **works!** But warns JavaCPP versions are incompatible (mixing 1.5.9 and 1.5.8); * OpenCV 4.7.0 - **fails**; * OpenCV 4.8.1 - **works!** But requires JavaCPP snapshot, `4.8.1-1.5.10-SNAPSHOT`, and a small change to QuPath's source due to an API difference (related to `Model.setScale(Scalar)`). So there seems to be 3 options, none ideal:; * Revert to OpenCV 4.6.0, *solely* for the benefit of Apple Silicon users with .czi images; * Use OpenCV 4.7.0, but require Apple Silicon users with .czi images to convert the images if they want to use StarDist; * Use OpenCV 4.8.1, but be relying on a snapshot rather than full release (of JavaCPP)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1406#issuecomment-1782837510:697,release,release,697,https://qupath.github.io,https://github.com/qupath/qupath/issues/1406#issuecomment-1782837510,1,['release'],['release']
Deployability,"More refactoring, javadocs and update to JUnit 5",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/443:31,update,update,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/443,1,['update'],['update']
Deployability,"Mostly improve symmetry and consistency:` addObject` instead of `addPathObject`, because removing uses `removeObject` and not `removePathObject`. Also, QP uses `addObject` rather than `addPathObject`. Along the way, update names of add/remove methods for listeners as well.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1109:216,update,update,216,https://qupath.github.io,https://github.com/qupath/qupath/pull/1109,1,['update'],['update']
Deployability,"My best guess is that it's related to user permissions. But I really don't know - I haven't seen this either. There's also one obscure tip that might be relevant at the very bottom of [this page](https://github.com/qupath/qupath/wiki/Paths-&-configuration). Basically, inside the QuPath installation there should be a file `QuPath.cfg`. You could try opening that in a plain text editor and on a line below [JVMOptions] adding `-Xmx8G` for 8 GB (for example). I haven't tested this to check it works, but then my memory settings are being read from my preferences so I can't replicate the exact problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-391973431:242,configurat,configuration,242,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-391973431,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"My experience with ISH makes me prefer straight measurement of estimated spot count versus using or creating H-scores. Sets of numbers representing+1 to +4 can be useful to distinguish populations with both high and low members versus a medium number of spots, but once you want to compare samples by a single number you might be better off with the spot count Mean/Median/Standard deviation, since those are all probably one or two lines of code. Plus I am not sure how well the new version of the H-score would compare to older publications, even if the math was adjusted to a 0-300 scale. I second using the Brightfield (other) when eliminating yellow areas like that for brightfield ISH. Sometimes once you have enough colors, though, you have to apply multiple sets of measurements to the ISH spots (select the subcellular detections, pick your color vectors, Add Intensity Measurements), and then filter them in a script, and update a ""Filtered Red Estimated Num spots"" or something like that. Two color brightfield ISH with red blood cells in the background gets to be a real pain. For a first pass you could try moving the color vectors in Estimate color vectors to something like :; ![image](https://user-images.githubusercontent.com/23145209/36652180-ed8010a8-1a61-11e8-8d09-d639962fd706.png); One vector picks up as much red as possible, and one to get ""the rest"" of what is in your sample. They do not need to be the same as when you did the cell detection. Picking up Groovy isn't bad if you understand programming basics like variables, if/for loops, etc. The main trick (for me) is learning the QuPath specific functions to use, and making use of either Gists, the forums, or IntelliJ to figure out how doable my plans actually are! I mostly just modify other people's scripts. I'm trying to fill out some of what I have learned in my Gists as I go along. On the image, it looks like you are missing quite a few of the smaller spots. If that isn't intentional, I would try turning off a",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-368380554:932,update,update,932,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-368380554,2,['update'],['update']
Deployability,New color maps included in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3). Further information in [this tweet](https://twitter.com/petebankhead/status/1145616588823040000).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/315#issuecomment-514590018:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/315#issuecomment-514590018,1,['release'],['releases']
Deployability,Newbie asking installation of Qupath packages,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303:14,install,installation,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/303,1,['install'],['installation']
Deployability,"No external dependencies should be needed - a Java Runtime Environment is included in the installation. A google search for `""the installer encountered an error that caused the installation to fail""` reveals quite a few discussions about all kinds of different software applications where the error appeared, but I'm afraid I can't replicate the issue so I can't test any of the proposed solutions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956171629:90,install,installation,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956171629,3,['install'],"['installation', 'installer']"
Deployability,"No need to install anything extra to run scripts, but you can also just change the downsample for TMA export in the preferences. > Please use the forum at https://forum.image.sc/tags/qupath for questions as described whenever you try to create an issue here... it helps keep the answers in one, searchable place. GitHub issues is intended just for bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494029538:11,install,install,11,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494029538,1,['install'],['install']
Deployability,"No problem @medskillz !. @Tkilvaer Yes, I recall the change was recent. It came up on the forum:; * https://forum.image.sc/t/making-shared-library-file-type-executable-on-linux/37778; * https://forum.image.sc/t/exe-missing-with-qupath-0-2-0-m11-and-0-2-0-m12-releases/38073. It wasn't intentional - but I don't know exactly what update caused it. I don't see how it could have been a change in the QuPath code, since the launcher is generated using jpackage. I don't know if something in Ubuntu or jpackage changed that caused this. Happy to include a workaround if anyone finds one, but since the software does still run (and the number of Linux downloads is much lower than other platforms) it isn't something we've been exploring much.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650188152:259,release,releases,259,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650188152,2,"['release', 'update']","['releases', 'update']"
Deployability,"No problem! The same bug has turned up in surprising ways, but all should be resolved in the next release. Thanks for confirming the workaround works for now!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1023#issuecomment-1192464518:98,release,release,98,https://qupath.github.io,https://github.com/qupath/qupath/issues/1023#issuecomment-1192464518,1,['release'],['release']
Deployability,"No problem, it is also challenging to advise correctly without having the full image, so thank you for that!; Changing channels should be possible with the 1/2/3/4 keys, but you can only do this once you have picked color vectors. They do not update ""live."". I am not sure what you mean by question 2, but hopefully the script below improves things for you, and I am sure if you play around with the values you can improve it even further!. Here is what I came up with for settings that seem to work for cell detection in the main bulk of your tissue:; ```; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""red blue"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.18752 0.65887 0.72851 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.72191 0.55664 0.41109 "", ""Background"" : "" 255 255 255 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.27, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 2.0, ""minAreaMicrons"": 30.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.6, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.4, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```; ![image](https://user-images.githubusercontent.com/23145209/50290376-79864380-0439-11e9-86dc-7b4375cee119.png); ![image](https://user-images.githubusercontent.com/23145209/50290399-873bc900-0439-11e9-937b-7dc5c5ce1139.png). A couple of things to note about this, some cells in certain sections of your sample are so dark that they basically show up as all colors. That makes them very difficult to distinguish, although it might be possible to exclude them or classify them as a third type if it is important enough. The script ab",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/250#issuecomment-449019237:243,update,update,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/250#issuecomment-449019237,1,['update'],['update']
Deployability,"No problem, thanks for your reply. If you have an ImageJ/Fiji macro/script that completes your analysis (once the ROIs are out), then I could think some more about whether the entire thing might be callable from within QuPath. It's already possible to connect QuPath to a specific ImageJ plugins directory for an existing installation (through _Edit &rarr; Preferences..._), and thereby do more complex ImageJ analysis - including the use of additional plugins - all launched and managed from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:322,install,installation,322,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['install'],['installation']
Deployability,"No worries, I looked at the Wiki multiple times as well and completely missed it :). I've also updated the [Working with Python](https://github.com/qupath/qupath/wiki/Working-with-Python) section of the Wiki and started adding a bit of info about [Paths & configuration](https://github.com/qupath/qupath/wiki/Paths-&-configuration) that might be useful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-264699698:95,update,updated,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-264699698,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"No worries, thanks for the reply. I revived the thread because so far only you and @evan-bailey have reported this issue and that was before various further changes were made for the v0.2.0 release. In general, I try to employ a utilitarian approach to QuPath development, and prioritise things that will benefit as many people as possible. In this case I don't have a very clear idea of what remains to be solved - and whether or not it remains important to anyone. The overwhelming majority of QuPath users use Windows or Mac, and most Linux users also shouldn't be affected by this... so if it's not terribly important to either you or Evan, it's probably not worth spending time on.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/336#issuecomment-642210602:190,release,release,190,https://qupath.github.io,https://github.com/qupath/qupath/issues/336#issuecomment-642210602,2,['release'],['release']
Deployability,"No, it just picks up my system libopenslide.so before the Jar version, which I think is not ideal, but hopefully fine once the versions get pushed to homebrew/apt/rpm. So yeah @petebankhead if this works on apple silicon and x86 Mac it should be good to publish a release of the natives and be done. Linux seems to work fine for me, and I'm grabbing the windows binary directly from them",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1388#issuecomment-1762376097:264,release,release,264,https://qupath.github.io,https://github.com/qupath/qupath/pull/1388#issuecomment-1762376097,1,['release'],['release']
Deployability,"Not currently... do you think off is a better default? My thinking is that:. * names often aren't used (might be different for you); * most people won't know names can be displayed at all if they are not revealed by default; * pressing `n` doesn't cost much. It might well become persistent in the next release, but for now it's not worth the risk of getting it wrong and introducing late bugs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/499#issuecomment-632639493:303,release,release,303,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632639493,1,['release'],['release']
Deployability,Not for earlier releases; https://github.com/qupath/qupath/commit/857d7670007e31631a97e7a854aba098ebc70d34 + JDK 14 fixes any handshake errors I have seen and will be in future releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-612965106:16,release,releases,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-612965106,2,['release'],['releases']
Deployability,"Not really a solution, but a thought... they just updated BioFormats to 6.0.0, so I am guessing you downloaded the newest version on the new computer. You might try copying the BioFormats jar files from your Extensions folder on the older PC, and using them instead to see if it allows you to open the files again. If that works, there was probably something in the update that either messed up the .scn reader on the BioFormats end, or broke some kind of connection in the QuPath extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/271#issuecomment-467942230:50,update,updated,50,https://qupath.github.io,https://github.com/qupath/qupath/issues/271#issuecomment-467942230,2,['update'],"['update', 'updated']"
Deployability,"Not really intended, but I think it's a limitation that was always there - I don't think it's a new regression. Not sure how much the grid view is used. We should address it in a future release if it turns out to be extremely useful (to us or others), but I think it's obscure enough to ignore for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1478#issuecomment-1976306381:186,release,release,186,https://qupath.github.io,https://github.com/qupath/qupath/pull/1478#issuecomment-1976306381,1,['release'],['release']
Deployability,"Not sure it's better, but quicker for now without changing the API - so if we both think it should solve the issue I'll merge it. Your insights from exploring this ugly bit of the code are welcome any time for refactoring in a major release :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1476#issuecomment-1973328681:233,release,release,233,https://qupath.github.io,https://github.com/qupath/qupath/pull/1476#issuecomment-1973328681,1,['release'],['release']
Deployability,"OK when QuPath failed, I try to install Openslide independently, becauses my project needs. I have installed openslide in \usr\local\Celluar. and openslide python interface by Anaconda in /anaconda/lib/python36. Thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371784054:32,install,install,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371784054,2,['install'],"['install', 'installed']"
Deployability,"OK, I updated the PR",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1457#issuecomment-1916693983:6,update,updated,6,https://qupath.github.io,https://github.com/qupath/qupath/pull/1457#issuecomment-1916693983,1,['update'],['updated']
Deployability,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:412,update,update,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,1,['update'],['update']
Deployability,"Oh dear, sorry, I see now I didn't reply to this (although I was away from QuPath at the time and I think we discussed it elsewhere...). I recall at the time I wondered about how this would impact supporting RGB/non-RGB images with the same command and also maintaining scripting compatibility. In the meantime, the code has diverged rather a lot and other issues with _Simple Tissue Detection_ have emerged, e.g.; * https://github.com/qupath/qupath/issues/124; * https://github.com/qupath/qupath/issues/248. I'm reluctant to try to resolve the code conflicts to incorporate this small change that may complicate scripting compatibility whenever it looks like the whole simple detection command really needs a thorough overhaul. There are now also other ways to gain more control over tissue detection, e.g.; * https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html; * the pixel classifier (not yet complete, but I hope it will become a 'standard' way). The pixel classifier is also being designed to support different kinds of classification, which could eventually also include a simple threshold applied to an original or transformed image. It has the benefit of allowing the classification to be applied at a higher resolution through tiling, and to interactively show preliminary results (e.g. with a threshold slider). I think that this is needed in the longer term, and _Simple tissue detection_ will move into retirement. Sorry again for not replying here sooner. If this change is still of interest to you, please feel free to reopen the issue. To integrate it, we'd need to; * update the code to be compatible with the current codebase; * test the impact on scripts created before/after the change",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-518571384:1590,integrat,integrate,1590,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-518571384,4,"['integrat', 'update']","['integrate', 'update']"
Deployability,"Oh dear... could you try [v0.3.0-rc1](https://github.com/qupath/qupath/releases) to see if it has been fixed? There have been some fixes in that part of the code that may help, but I'm not sure. If that doesn't resolve things, could you please post the script that's failing? There are several on the linked page and so I'm not sure which exactly is going wrong and where.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777#issuecomment-876724096:71,release,releases,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/777#issuecomment-876724096,1,['release'],['releases']
Deployability,"Ok, I tested the ""Offline TMA Data Viewer"" (not sure what to call this method!). I exported TMA data (qptma) for all 6 TMA slides. I loaded one file in the TMA Data Viewer in a new QuPath instance which seem to load data for all the qptma files present in the folder ! is that expected behavior ?. With this method the table is very smooth. It makes sense to work offline if I want to look at the combined data from multiple TMAs after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:942,toggle,toggle,942,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['toggle'],['toggle']
Deployability,"Ok, good, since it's building ok can you have a look for a `.jar` file inside QuPath starting `qupath-extension-openslide` and then move/rename it (so that QuPath won't find it)? My hope is this will prevent QuPath trying to load the troublesome library. You may not be able to open whole slide images then (although adding the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) could work around that, at least for some formats). But if it at least starts ok then hopefully you could install OpenSlide with your package manager, and the problem changes to getting QuPath to find it whenever you put the `.jar` file back...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368859872:513,install,install,513,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368859872,1,['install'],['install']
Deployability,"Ok, had a quick check on my Mac since you mentioned it - and I'm afraid the scroll isn't working very nicely :( The 'magic mouse' makes horizontal scrolling really easy - which is handy for panning around the image if you turn *View &rarr; Multi-touch gestures &rarr; Scroll gestures*. However here it means that tools switch *really* easily... and continually happen by accident during normal use. How useful is this aspect of the PR? Would you miss it badly if that part was removed...?. I think (but haven't thoroughly checked) that the middle button should be less troublesome, partly because Mac mice don't have middle buttons. But I remain a bit apprehensive about needing a debounce delay, and worry about adding even more complexity to the various event filters and handlers that are active when interacting with the viewer. Can you say a bit more about how useful you've found this, and when?. The option remains to add the functionality through an extension or startup script, to give it a bit more time before possibly integrating it into the core software later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312793422:1030,integrat,integrating,1030,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312793422,1,['integrat'],['integrating']
Deployability,"Ok, much revised and extended PR at https://github.com/qupath/qupath/pull/1318. Please do check out the explanation of the changes. I *think* it's a substantial improvement to handling multiple viewers, and other aspects of the code should be healthier than they were before. But there's a good chance it could be improved - and potentially things are broken in ways I haven't yet spotted. Unless something terrible emerges, I will merge the PR soon so there is still a reasonable amount of time to explore and fix anything it before release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1713197089:534,release,release,534,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1713197089,1,['release'],['release']
Deployability,"Ok, so there's a polyline tool in the current milestone releases.; ![Line](https://user-images.githubusercontent.com/4690904/62520963-8cae1e00-b826-11e9-9e21-4cbc94065b33.jpg). I've updated the 'Expand annotations' command for v0.2.0-m4 as follows. Previously, expanding line/polyline annotations would expand in all directions - and 'remove interior' had no effect (since the line had no thickness):; ![Rounded](https://user-images.githubusercontent.com/4690904/62520803-38a33980-b826-11e9-946a-c3365e251bd2.jpg). Now, there is an option to set the 'line cap' to be round (as before), flat or square. Also, 'Remove interior' will remove an approximately 1-pixel thick line if requested.; ![Flat](https://user-images.githubusercontent.com/4690904/62521003-a9e2ec80-b826-11e9-81b8-a16db61769af.jpg). This is enough to make a separation. You can then use _Objects &rarr; Annotations &rarr; Split annotations_...; ![Split](https://user-images.githubusercontent.com/4690904/62521123-f1697880-b826-11e9-965e-12510c734579.jpg). ...which allows you to separate the inner/outer expansion regions.; ![After split](https://user-images.githubusercontent.com/4690904/62521078-d72f9a80-b826-11e9-8a1b-cc1293b44d60.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-518552859:56,release,releases,56,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518552859,2,"['release', 'update']","['releases', 'updated']"
Deployability,Ok. Attempted resolution in this commit https://github.com/petebankhead/qupath/commit/c7b07e5919aa76de19a81a71286dd8b434284017; Look out for changes in the next milestone release.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-479832407:171,release,release,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-479832407,1,['release'],['release']
Deployability,"Okay, I think I describe what I want to do. And I would like to do that as automatically as possible, so in qupath in a .groovy script, I guess:. 1) I have a folder with IHC-fluorescence images (DAPI + antibody staining) of tumors with stroma. In Qupath:; For every image of the folder:; 2) In QuPath - perform cell detection; 3) In Qupath - object classification with a pretrained classifier (tumor vs. stroma); 4) Export detections with annotation into .roi file. In Fiji:; For every image of the folder:; 5) open .roi file; 6) --> discriminate tumor and stroma; 7) perform DNA-damage focus analysis in tumor and stroma separately (algorithm potentially uses other Plugins); 8) Finished. So, I want to use quPath for what it does very, very good and fast, cell identification, segmentation and classification, and not for anything else. Scripting in FIJI is more or less easy for me, so once I have the .roi files, I can do almost anything with them there. Just, for the ""QuPath part"", I dont even know how to script those simple steps, because there is not much documentation, no Qupath API, so its hard for me to even get started. I am not a professional programmer, but a biologist with some (Python, Java, ImageJ) programming background,. So, do you think, something like this is possible?. Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. Best regards and thank you; Philipp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401542503:1481,integrat,integrated,1481,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401542503,2,['integrat'],['integrated']
Deployability,On the thought of not passing the parameters: you could indeed do this by saying:; ```java; fullRequest = fullRequest.updateT(t); fullRequest = fullRequest.updateZ(z); ```; in the loop in `getTiledRegionRequests` and then reinstating these two lines in `splitRegionRequests`:; ```java; t = request.getT(); z = request.getZ(); ```; So it's a balance between four extra lines of code on the one hand and two extra parameters on the other.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-740816876:118,update,updateT,118,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740816876,2,['update'],"['updateT', 'updateZ']"
Deployability,"One more substantial change: JSON is now stored in the `.qpdata` file, rather than a server path. Storing the server path was sufficient in v0.1.2, since this was all that was used to determine which image should be loaded. However, increasingly `ImageServer` implementations require more information / arguments or even wrap other servers, which means necessitated a switch to use JSON. However, in v0.2 this JSON was only stored in the project, not the `.qpdata` file. The result was that such images could *only* be opened from the project; the `.qpdata` alone wasn't sufficient. This change updates `.qpdata` to store JSON in the place where previously only a path was used. This should allow more complex images to be re-opened successfully, even if separated from their project. However, since it's a data file change this requires careful testing...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/725#issuecomment-836523049:595,update,updates,595,https://qupath.github.io,https://github.com/qupath/qupath/pull/725#issuecomment-836523049,1,['update'],['updates']
Deployability,"One problem I have occasionally seen with CZI is that a request for the *entire* image is made whenever only a small part is needed. This inevitably causes memory problems, but I have not yet been able to investigate when and why this might happen only for specific images. In the meantime I'd rather avoid suggesting that a huge amount of memory is required to use QuPath; it shouldn't be. Certainly with less memory available there may be problems if running something especially intensive (e.g. cell detection, even subcellular detection) across very large regions, but in that case the easiest solution is simply to restrict the analysis to smaller regions. But yes, if you can spare a few more GB it would be very good to increase what is available to QuPath. For what it's worth, my laptop has 16 GB RAM and I give about 8 GB to QuPath, although I've also used 4 GB for analysis (or less for just browsing and annotation). There are also some more memory-related tips at https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits. It would be good to confirm whether the trouble only occurs when working with cell detection on large regions (at least hundreds of thousands of cells). My suspicion is that this isn't the case, and it is more likely to be related to the current patchy support for CZI - which is something I hope can be improved within the next few months. But I could be wrong on this if the behavior is fine whenever only small regions are considered.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343393030:1300,patch,patchy,1300,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343393030,2,['patch'],['patchy']
Deployability,"Organizations who would like to use your tool might want to verify the binaries you distribute are not being tampered with in transet. One easy way to make that easy (as opposed to have such organizations build your tool from scratch) would be to publish the binaries with MD5/SHA1 hashes on the releases page. You would make the life of IT employees in such organizations a whole lot easier!. Thanks,. Kris",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027:296,release,releases,296,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027,1,['release'],['releases']
Deployability,"Perhaps this is related to the bounding box?. man. 2. sep. 2019, 22:46 skrev Tuatini Godard <notifications@github.com>:. > Yep, somehow the libpixman used is the one from my system:; >; > $ cat /proc/30668/maps | grep pixman; > 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; > 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; >; > On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works; > fine while 0.2.0 doesn't... that doesn't make sense...; > Ideally it would be great if it could ship with a QuPath release with the; > fix.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/355?email_source=notifications&email_token=AH7WSL7NBM4OQKNC45FLTKTQHV3THA5CNFSM4IS736B2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5WQ2XY#issuecomment-527240543>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AH7WSL5AXNFIGZVZNNQDLOTQHV3THANCNFSM4IS736BQ>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527253897:874,release,release,874,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527253897,1,['release'],['release']
Deployability,"Please help!. I have been away on holiday and whilst away the university computer I use was upgraded from windows 7 to windows 10. I am now unable to open any images from my project. These were saved on a external hard drive. The project opens with the thumbnails but when I try to open an image it says 'sorry can't open file'. I copied a single image to my desktop and tried to open that but still got the error. I tried making a new project but it says unable to import file. The file types are NDPI. I need to get this work complete for my thesis which is due in a month, so please help!!!. INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; WARN: Strange 'bits per sample' of 0; WARN: Error opening D:\Rivka\nanozoomer\Scans RL 2\Exp 5 (LI)\A3 LI 03.ndpi with ImageJ: Could not open D:\Rivka\nanozoomer\Scans RL 2\Exp 5 (LI)\A3 LI 03.ndpi with ImageJ; ERROR: Could not load OpenSlide native library; at java.lang.ClassLoader$NativeLibrary.load(Native Method); at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); at java.lang.Runtime.loadLibrary0(Runtime.java:870); at java.lang.System.loadLibrary(System.java:1122); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:51); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351:92,upgrade,upgraded,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/351,2,"['update', 'upgrade']","['update', 'upgraded']"
Deployability,"Polyline could be troublesome, as it still hasn't got an icon & I think for many people (possibly including me) it's going to prove a gateway to wanting a multi-polyline tool... which then introduces questions around whether 'Areas' should really be multi-polygons, and the whole ROI system being revised more in line with Java Topology Suite - with all kinds of backwards compatibility complications : ). But yeah, some form of polyline is planned for the next (big, Java 11) release, which will include this fix also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-438964450:477,release,release,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-438964450,1,['release'],['release']
Deployability,"Possibly controversial, possibly very welcome... Usually, the annotation line thickness remains constant at all zoom levels - whereas the detection line thickness increases and decreases when zooming in and out. This is partly to avoid having thick detection lines when zoomed out, and partly for performance reasons: we cache detections rendered at different resolutions. *However*, detections *are* painted 'live' (like annotations) when zooming in beyond full resolution. I find this can be annoying at times, because the default detection line thickness of 2 can be too much - and obscures details. I need to toggle detections on and off to see the pixels that overlap with the border, or else go to the preferences to reduce the line for some images... then go back to increase the line for the next images. So this PR causes detections to be painted more like annotations when upsampling. The result is that lines narrow to become subpixel when zooming in, and that it is possible to more accurately judge where the detection boundary really lies. Screenshots below, but they aren't the best examples - and it's better to play around with the behavior using different images to form an opinion as to whether this is better, worse, or pretty neutral. ## Previous. ![older-rendering](https://github.com/user-attachments/assets/4e637414-6e6a-46c3-9044-bb51db67fa6d). ## With this PR. ![new-rendering](https://github.com/user-attachments/assets/0fd890bc-76d2-4aff-885b-5d25580d0114)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1623:613,toggle,toggle,613,https://qupath.github.io,https://github.com/qupath/qupath/pull/1623,1,['toggle'],['toggle']
Deployability,"Possibly... Java should take care of any requests exceeding the ```Integer.MAX_VALUE```, but the maximum memory should probably be involved in the calculation somewhere. I faintly recall adding a limit because I kept accidentally crashing/hanging by requesting regions that were much too large, and the macro runner doesn't do any kind of smart breaking-a-large-region-into-tiles. So I wanted to protect me from myself. It's complicated by the fact that large continuous regions of memory need to be found for the arrays and QuPath has no idea how much memory the macro is going to require (i.e. how many image duplicates it will make). And maybe sometimes the macro will be run in parallel. I still tend towards having a fixed limit, just a much bigger one. And preferably one implemented as a static field somewhere. Then it could be modified by a script in an emergency - or possibly even within the macro runner dialog itself. I definitely would agree that hard-coding a relatively small limit in the middle of a method wasn't the optimal way...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68#issuecomment-300088603:460,continuous,continuous,460,https://qupath.github.io,https://github.com/qupath/qupath/issues/68#issuecomment-300088603,1,['continuous'],['continuous']
Deployability,Potential v0.4.4 release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1307:17,release,release,17,https://qupath.github.io,https://github.com/qupath/qupath/pull/1307,1,['release'],['release']
Deployability,"Preview & QuPath both look ok to me:. ![Screenshot 2020-10-23 at 20 49 48](https://user-images.githubusercontent.com/4690904/97047805-6bdc0080-1571-11eb-8a78-f2ec9652945c.png). I do have a homebrew install as well:. ![Screenshot 2020-10-23 at 20 52 12](https://user-images.githubusercontent.com/4690904/97048049-ba899a80-1571-11eb-8751-6dc0394469e5.png). ----. Thanks very much for the link, I'll check your build scripts - I think it is already safe to say they are a lot more sophisticated than anything used for QuPath! I'm afraid I'm one of the people who has spent too long with Java and Python... Do you think there would be any sense in trying to include libvips with QuPath? We could put some work into that from our side - especially if it would help us incorporate OpenSlide more reliably into QuPath while also giving access to some of libvips' other functionality (like faster image pyramid-writing?) - but I'm not sure if there are reasons that's a bad idea.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715571233:198,install,install,198,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715571233,1,['install'],['install']
Deployability,"Previously, we just assumed qupath extension releases would follow the convention `qupath-extension-[name]-[version].jar` (or similar, I can't really remember). This version uses the github API to poll for the latest release. If there's only one release, it goes with that. If there's more than one, it presents them as options in a table. Once the user has selected one, it then asks the github API about the assets of that release, and downloads the first matching one, assuming it's not a javadoc or sources jar. If there's more than one, it presents them as options to the user.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1486:45,release,releases,45,https://qupath.github.io,https://github.com/qupath/qupath/pull/1486,4,['release'],"['release', 'releases']"
Deployability,Problem installing qupath v0.1.3,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270:8,install,installing,8,https://qupath.github.io,https://github.com/qupath/qupath/issues/270,1,['install'],['installing']
Deployability,"Probs makes sense to allow co-development around releases, so snapshot makes sense to me",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1509#issuecomment-2087551832:49,release,releases,49,https://qupath.github.io,https://github.com/qupath/qupath/pull/1509#issuecomment-2087551832,1,['release'],['releases']
Deployability,Projects in v0.2.0-m8 are quite different from in v0.1.2. The above instructions won't work and the awkward workarounds should no longer be necessary. I've written a bit about how to update paths since v0.2.0-m4 [here](https://petebankhead.github.io/qupath/2019/08/20/fourth-milestone.html#repair-projects-by-finding-missingmoved-images).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-579362758:183,update,update,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-579362758,1,['update'],['update']
Deployability,"Putting this here for future reference. ""Note: CellProfiler has limited capability with handling large, high-resolution images. We recommend using a field of view limited to a maximum number of two gigapixels in (x,y) to count cells and punctate dots present within cell boundaries. To perform whole slide image (WSI) analysis using your CellProfiler pipeline, Glencoe sells a plugin to allow you to interface CellProfiler with the open source platform QuPath. The plugin works through the OMERO + platform. Information on this plugin can be found by contacting Glencoe through their webpage: https://www.glencoesoftware.com/contact/. Other open source options to perform whole slide image (WSI) analysis include QuPath, Orbit, and SlideToolkit.""; https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=2ahUKEwjqguGA7IboAhXPtp4KHbgJBp0QFjAAegQIARAC&url=https%3A%2F%2Facdbio.com%2Fsystem%2Ffiles_force%2FTechNote_CellProfiler_20190920.pdf%3Fdownload%3D1&usg=AOvVaw2e7VjKojkOHZMrtc4Ibedg",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123#issuecomment-595983646:351,pipeline,pipeline,351,https://qupath.github.io,https://github.com/qupath/qupath/issues/123#issuecomment-595983646,1,['pipeline'],['pipeline']
Deployability,QuPath 0.3.0 unreadable text after installation,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866:35,install,installation,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/866,1,['install'],['installation']
Deployability,"QuPath can handle TIFF files much bigger than 1.49 GB. But it is important that they are stored in a pyramidal format, with the image data stored at different resolutions - as it typical if the images are from a whole slide scanner. Is that the case for your image? Or can you say more about how it was created?. If your image is pyramidal, and you haven't already installed the QuPath Bio-Formats extension, you could try this to see if it helps by increasing the range of supported images: https://github.com/qupath/qupath-bioformats-extension. > Note the installation instructions at the bottom of the page; if it does not work immediately, consider adding `.tif` to the *Always use Bio-Formats for the specified image extensions* preference option, to make sure that no other image reader tries to handle the TIFF instead. But if you do this and encounter problems with other TIFFs, remember to reset this option to let QuPath decide which reader is most appropriate - which is the default behavior. Otherwise, this link may help: https://github.com/openslide/openslide/wiki/CreatingPyramidalTIFFs",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371739798:365,install,installed,365,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371739798,2,['install'],"['installation', 'installed']"
Deployability,"QuPath does not include any code that directly relates to the GPU - everything happens through OpenCV/JavaCPP (and sometimes also PyTorch/TensorFlow/DJL). If you search for `the provided PTX was compiled with an unsupported toolchain` you should find lots of discussions separately from QuPath; it seems that the issue is normally related to the driver. I tried to replicate the issue with the only Windows computer I have access to (including a GeForce 1060) and could not - it runs without errors, and `DnnTools.isCudaAvailable()` returns true. > Given that issue https://github.com/qupath/qupath/issues/841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?. I don't think that can be relevant here. I'm not sure that there is any bug here that can be fixed within QuPath. I have seen such error messages before, but the solution was always to update my graphics card driver. Have you tried this?. Note that QuPath v0.4.0 gives a range of options for deep learning, but CUDA incompatibilities will mean that probably not all can work at once (e.g. I could get PyTorch with GPU acceleration today by installing CUDA 11.7, but TensorFlow seems to require 11.3... I'm not sure there's a combination that gets both working together). I don't see that there's really anything much more we can do apart from simply removing the option of GPU acceleration altogether and not documenting it as an option - but that seems a shame when often it does work. > I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Because QuPath doesn't directly access the GPU, please check the .jar files within each installation. I don't know what the problem could be, unless it is somehow related to the inclusion of some Deep Java Library dependencies - or if you have other extensions installed that are",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127:965,update,update,965,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127,2,['update'],['update']
Deployability,QuPath installation fails on Mac OS X,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832:7,install,installation,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/832,1,['install'],['installation']
Deployability,"QuPath is a Java application, and the memory behavior is complicated and implementation-dependent: https://www.baeldung.com/gc-release-memory. The memory monitor uses the `Runtime` class, and makes calls to `System.gc()` for garbage collection.; The [javadocs](https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Runtime.html#freeMemory()) contain statements like `""Calling the gc method may result in increasing the value returned by freeMemory`""... where that 'may' is interesting. In some cases (such as the tile cache), QuPath retains a (soft or weak) reference to objects for 'as long as it can' to help performance, but will release them before any out-of-memory error is produced. In short, this doesn't sound like a bug to me. Unless there can be shown to be a memory leak within QuPath itself, there are too many other possible reasons beyond our control why memory use reported by the JVM might increase.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105:127,release,release-memory,127,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105,2,['release'],"['release', 'release-memory']"
Deployability,"QuPath shouldn't be limited by the file size, however it is very possible that an .svs file from a Huron scanner differs in some way from an .svs file from another source. In general, .svs is based on .tif, and .tif images can have all kinds of internal differences in terms of data representation and compression. Have you tried opening the image with Bio-Formats?; See https://github.com/qupath/qupath-bioformats-extension - in particular note the installation instructions at the bottom of the page, and how you can force QuPath to use Bio-Formats rather than OpenSlide to open files with a specific extension.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436165047:450,install,installation,450,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436165047,1,['install'],['installation']
Deployability,"QuPath supports reading whole slide images using two open source libraries: [Bio-Formats](https://www.openmicroscopy.org/bio-formats/) and [OpenSlide](http://openslide.org). Of these, Bio-Formats is much more extensive and actively-maintained; OpenSlide only really supports single-plane, 8-bit RGB images and has not been meaningfully updated for a couple of years. Nevertheless, OpenSlide remains important to QuPath users because; * A few common file formats (e.g. .mrxs) are *only* supported by OpenSlide; * Where a format is supported by both Bio-Formats and OpenSlide, OpenSlide is generally much faster at reading image tiles (although may provide less metadata); * OpenSlide offers alpha information that is relevant if regions are unscanned. The trouble is that OpenSlide is a C library, and getting it to work properly with QuPath is a challenge we haven't managed to solve... thanks to the complexities of how native dependencies - and, more importantly, their sub-dependencies - are handled on different platforms. Bug reports such as; * https://github.com/qupath/qupath/issues/355; * https://github.com/qupath/qupath/issues/628; * https://github.com/qupath/qupath/issues/627. along with breakages caused by `jpackage` updates (https://github.com/qupath/qupath/issues/615) show that the (largely manual) process initially used to try to package up the dependencies hasn't worked. For these reasons, **we need a new and maintainable approach to include OpenSlide in QuPath in the future, or else drop support entirely**. Alas, I'm sadly one of those developers who is quite helpless when attempting to build any native libraries with even moderate complexity... spoiled by Java and Python, I haven't been able to figure out a solution. Hence this issue and cry for help. The biggest problem is getting a truly portable way to build OpenSlide on each platform. If we have that, we can potentially use JNI directly or JavaCPP (https://github.com/bytedeco/javacpp) / Gradle JavaCPP (https://gi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629:336,update,updated,336,https://qupath.github.io,https://github.com/qupath/qupath/issues/629,1,['update'],['updated']
Deployability,"QuPath][1] from source on CentOS 7. I get the following error:. [jalal@goku qupath]$ ./gradlew clean jpackage; ; FAILURE: Build failed with an exception.; ; * What went wrong:; Failed to apply plugin class 'org.gradle.api.plugins.JavaPlugin'.; > java.io.FileNotFoundException: /scratch3/downloads/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar (No such file or directory); ; * Try:; > Run with --stacktrace option to get the stack trace.; > Run with --info or --debug option to get more log output.; > Run with --scan to get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1071,release,release,1071,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['release'],['release']
Deployability,"Quick answer to 2: you can show/hide multiple channels by selecting them, and then right-clicking on the channel list before choosing 'Show channels', 'Hide channels' or 'Toggle channels'. Ctrl+A should also work to quickly select all channels before right-clicking. I'll look into the limited resizing later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201#issuecomment-1366618917:171,Toggle,Toggle,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201#issuecomment-1366618917,1,['Toggle'],['Toggle']
Deployability,"Quick update, I started suffering this problem too with Ubuntu 20.04 LTS. As a workaround, I create a `launch_qupath.bsh` script inside the QuPath directory with the following contents:. ```; #!/bin/bash. DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" >/dev/null 2>&1 && pwd )""; echo $DIR; export LD_PRELOAD=$DIR/lib/app/libpixman-1.so.0; $DIR/bin/QuPath-0.2.3; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-762152617:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-762152617,1,['update'],['update']
Deployability,"Quick update: there are no longer any plans to make QuPath OpenJDK 15-compatible. The next release is intended to be >= March 2021, by which time OpenJDK 16 should be available and there is a risk things will have changed again. However, jpackage is an intended feature for 16 so should be more stable... and worth updating for. In the meantime, QuPath v0.2.* is only intended to be built with OpenJDK 14. QuPath's code should be compatible with Java 11; OpenJDK 14 is required only for jpackage. From an IDE, it should run with other Java versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-757141337:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-757141337,2,"['release', 'update']","['release', 'update']"
Deployability,"ROI; import qupath.lib.roi.RoiTools. // Adjust THIS (n : Number of Tiles); int n = 10; def trimToROI = true; //parentClass = ""IL-left""; childClass = ""Tiles"". // Get the QuPath viewer and check if an object is currently selected; QuPathViewer viewer = QuPathGUI.getInstance().getViewer(); def objSelected = viewer.getSelectedObject(); parentClass = objSelected.getPathClass(). // Calculate the width and height of the ROI; if (objSelected != null && objSelected instanceof PathAnnotationObject){; ROI roi = ((PathAnnotationObject)objSelected).getROI(). int w = roi.getBoundsWidth(); int h = roi.getBoundsHeight(). int tW, tH. // devide tiles based on the width ; tW = Math.floor(w/n)+1; tH = h. // Create a list of ROIs by using the makeTiles method from the RoiTools class, which divides the ROI into tiles based on the specified width and height.; List<ROI> pathROIs = RoiTools.makeTiles(roi, tW, tH, trimToROI). // Create a list of PathObject tiles and assigns a name to each tile; List<PathObject> tiles = new ArrayList<>(pathROIs.size()). Iterator<ROI> iter = pathROIs.iterator(); int idx = 0; while (iter.hasNext()) {; try {; PathObject tile = PathObjects.createAnnotationObject(iter.next(), getPathClass(childClass)) ; if (tile != null) {; idx++; tile.setName(""Tile "" + idx); tiles.add(tile); }; } catch (InterruptedException e) {; lastMessage = ""Tile creation interrupted for "" + objSelected; return; } catch (Exception e) {; iter.remove(); }; }. // Add the tiles to the selected annotation object and update the viewer; ((PathAnnotationObject)objSelected).addPathObjects(tiles);; viewer.getImageData().getHierarchy().fireHierarchyChangedEvent(this, objSelected);; }. parentAnnotation = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(parentClass)}[0]; childAnnotation = getAnnotationObjects().findAll{it.getPathClass() == getPathClass(childClass )}. for (it_Child in childAnnotation) { ; getCurrentHierarchy().addPathObjectBelowParent(parentAnnotation, it_Child, true) }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178:1861,update,update,1861,https://qupath.github.io,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178,1,['update'],['update']
Deployability,Reclaim memory more quickly with TensorFlow; update changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/488:45,update,update,45,https://qupath.github.io,https://github.com/qupath/qupath/pull/488,1,['update'],['update']
Deployability,"Relates to; * https://github.com/qupath/qupath/issues/1444; * https://github.com/qupath/qupath/issues/1591 . and incorporates synchronization from; * https://github.com/qupath/qupath/pull/1466. ---. This substantially updates the `MeasurementList` API, while avoiding any serialization-breaking changes.; It also adds many new tests to help improve the robustness of both the `MeasurementList` directly and any associated `Map` view. Methods that were deprecated since v0.4.0 have now been removed, and there are 2 more deprecations.; The replacement methods have shorter names and should have reliable performance.; `MeasurementList` implementations should also now be threadsafe (if they prove not to be, please report a bug). Several other key changes:; * `getNames()` (previously `getMeasurementNames()`) returns a defensive copy of the measurement. Before, it would sometimes return an unmodifiable list that wrapped a list that could still change - and that was sometimes responsible for #1444 and #1591; * `List<Measurement> getMeasurements()` and `Measurement getByIndex(int)` now provide ways to access a snapshot of one or more measurements. Previously, `getMeasurementName(int)` and `getMeasurementValue(int)` were used - but when requesting these sequentially, there was no way to guarantee that the values were properly in sync.; * `String.intern()` is now used with all `MeasurementList` implementations. Previously, it was only used for the 'general' list used for annotations. It wasn't important if other lists were closed, but if they weren't then we could end up with huge numbers of duplicate strings greatly increasing memory use. In general, the goal of `MeasurementList` is to optimize mostly for memory use and good behavior.; Updating and querying measurements is generally rare enough that small computational costs (e.g. synchronization, defensive copying) shouldn't matter a great deal - but if we are to cope with millions of objects having hundreds of measurements each, ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1592:218,update,updates,218,https://qupath.github.io,https://github.com/qupath/qupath/pull/1592,1,['update'],['updates']
Deployability,"Remembered this a few days ago and tried to get the fix into the new milestone release: https://github.com/qupath/qupath/commit/45820e625872b14197e4f784dbb71a37e96ef17d. Closing this issue as it should now be fixed, but please reopen if you find it is not.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/197#issuecomment-471152442:79,release,release,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/197#issuecomment-471152442,1,['release'],['release']
Deployability,Remove accidental use of Java 16 Stream.toList() and update Action to catch such problems earlier.; Increase available memory for testing to avoid errors on Apple Silicon.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/797:53,update,update,53,https://qupath.github.io,https://github.com/qupath/qupath/pull/797,1,['update'],['update']
Deployability,"Rename `ImagePlusProperties` to `IJProperties` and expand to store relevant object-related things within the properties of a `Roi`. Then use these when converting objects. This also changes the `ImageJScriptRunner` in a few signficant ways:; - it is much faster when run with lots of small objects; - if a Roi is sent to the macro and comes back again, the corresponding object is updated - not replaced. Also more examples added.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1684:381,update,updated,381,https://qupath.github.io,https://github.com/qupath/qupath/pull/1684,1,['update'],['updated']
Deployability,"Request main packages to be built with Java 21, and update several dependencies (DeepJavaLibrary, Guava and Bio-Formats).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1389:52,update,update,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/1389,1,['update'],['update']
Deployability,"Resolve TMA grid limit, update changelog",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/535:24,update,update,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/535,1,['update'],['update']
Deployability,Resolves https://github.com/qupath/qupath/issues/776 (at least partially - fixes the macOS issue I could reproduce).; Improve Linux launch script to accept spaces in the installation path.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/805:170,install,installation,170,https://qupath.github.io,https://github.com/qupath/qupath/pull/805,1,['install'],['installation']
Deployability,Security Concern when installing QuPath using .msi,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:22,install,installing,22,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,1,['install'],['installing']
Deployability,"See also https://github.com/qupath/qupath/issues/1636. > Maybe just use the python version (like BIOP/Cellpose does). In that case you depend on a single python environment!. My understanding is that the BIOP CellPose extension will [write all the tiles to disk, then effectively run CellPose from a command line](https://github.com/BIOP/qupath-extension-cellpose/blob/b97efdad82df59ace5a149ca91f7fb963549bcc5/src/main/java/qupath/ext/biop/cellpose/Cellpose2D.java#L390). That may be easier for configuration, but it will surely reduce the benefits of using the GPU. It can be justified for CellPose because it is infeasible to recreate the required postprocessing in Java, but for InstanSeg we would suggest instead; 1. just using the CPU; 2. use InstanSeg [entirely from Python ](https://github.com/instanseg/instanseg) (generating QuPath-compatible output would be a different question for that repo or the forum, not this one); 3. discussing on the forum; perhaps someone there might figure out instructions that work where our existing ones do not. I will close this because there is no bug in QuPath described here that we can fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001:495,configurat,configuration,495,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001,1,['configurat'],['configuration']
Deployability,See http://www.slf4j.org/log4shell.html and https://docs.gradle.org/7.3.2/release-notes.html for more information,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/868:74,release,release-notes,74,https://qupath.github.io,https://github.com/qupath/qupath/pull/868,1,['release'],['release-notes']
Deployability,"See https://github.com/qupath/qupath/issues/514; This is a bit of a hack to ensure that type adapters are registered for scripts run from the command line, without making any substantial API changes to the point release.; It remains the case that QP must be initialized somewhere.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/520:212,release,release,212,https://qupath.github.io,https://github.com/qupath/qupath/pull/520,1,['release'],['release']
Deployability,"See https://github.com/qupath/qupath/pull/1496 and https://github.com/qupath/qupath/issues/1358. The workaround in v0.5 was to revert to JavaFX 20, but we don't want to be stuck indefinitely on an out-of-date version. There have been many fixes and improvements, e.g. see; * https://gluonhq.com/products/javafx/openjfx-22-release-notes/; * https://gluonhq.com/products/javafx/openjfx-21-release-notes/. So we need to try to figure out a fix - or document the limitation - for v0.6.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1497:322,release,release-notes,322,https://qupath.github.io,https://github.com/qupath/qupath/issues/1497,2,['release'],['release-notes']
Deployability,Seemingly inconsequential updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1159:26,update,updates,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/1159,1,['update'],['updates']
Deployability,Setting the default object color in the preferences doesn't update the toolbar icons in v0.4.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1203:60,update,update,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/1203,1,['update'],['update']
Deployability,"Several improvements to Selection mode:; * Update icon, and switch to dashed lines for drawing tools when selection mode is turned on; * Fix the *Shift + S* shortcut (which wasn't working); * Support line ROIs with selection mode; select objects intersecting with the line. <img width=""411"" alt=""Selection mode"" src=""https://github.com/user-attachments/assets/c20c5456-ed6e-4881-b29f-08508e92e05a"">",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1599:43,Update,Update,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/1599,1,['Update'],['Update']
Deployability,"Several things:; * Make annotation descriptions more visible in the UI; 1. As an extra tab beside the measurements; 2. In a separate window; * Add an icon to the list/hierarchy views to indicate if a description is present; * Support annotations descriptions that contain markdown or html, rendering them in a `WebView`. > **Note:** Screenshots below.; > This is a work in progress, likely to change before the next release - specifically to support descriptions for the 'root' object (relating to the entire image), and possibly to consolidate annotation descriptions & TMA note fields. <img width=""1356"" alt=""Screenshot 2022-07-11 at 16 35 58"" src=""https://user-images.githubusercontent.com/4690904/178302423-15d42432-4af3-40bd-a36c-5f88ac128327.png"">. <img width=""1373"" alt=""Screenshot 2022-07-11 at 16 36 36"" src=""https://user-images.githubusercontent.com/4690904/178302461-a1ab1fb4-b8fa-47a5-94bf-63f89859ced1.png"">",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1004:416,release,release,416,https://qupath.github.io,https://github.com/qupath/qupath/pull/1004,1,['release'],['release']
Deployability,Shape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrumbBarSkin.java:161); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.lambda$new$1(BreadCrumbBarSkin.java:147); > at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at co,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:3085,update,updateBreadCrumbs,3085,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['update'],['updateBreadCrumbs']
Deployability,"Should clarify that m4 isn't released yet, but the change is in the last commit linked to above.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-518553184:29,release,released,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-518553184,1,['release'],['released']
Deployability,"Should definitely mention this in the release notes, because v0.5+ will be newer than v1 (until the ""real"" v1 happens)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1732342967:38,release,release,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1732342967,1,['release'],['release']
Deployability,"Simple text colour update for ""show details"" and icon colour update.; From ; ![image](https://user-images.githubusercontent.com/42358257/191572256-a0b3dbc3-1370-4e6d-b259-0862a3c60120.png). To:; ![image](https://user-images.githubusercontent.com/42358257/192244319-692c4d15-1018-4c3e-945f-0c4d74247a66.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1059:19,update,update,19,https://qupath.github.io,https://github.com/qupath/qupath/pull/1059,2,['update'],['update']
Deployability,"Since I think the trouble started with JavaFX 21.0.1, from the [release notes](https://gluonhq.com/products/javafx/openjfx-21-release-notes/#21.0.1) my guess was the webkit update... but not sure..",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1358#issuecomment-2056313473:64,release,release,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/1358#issuecomment-2056313473,3,"['release', 'update']","['release', 'release-notes', 'update']"
Deployability,Since the release of v0.2.0-m10 the master branch should work with OpenJDK 14 and I've updated the docs accordingly.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427#issuecomment-617995278:10,release,release,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/427#issuecomment-617995278,2,"['release', 'update']","['release', 'updated']"
Deployability,"Since the released of bioformat 5.3.0, we can now open czi axioscan slides, but today I got an error while changing the Scene in image list:. This problem do not occur on other computer with the same installation files. Here is the error logs:. `; INFO: Refreshing extensions in C:\Users\xxxx\QuPath\extensions; INFO: Added extension: C:\Users\xxxx\QuPath\extensions\bioformats_package.jar; INFO: Added extension: C:\Users\xxxx\QuPath\extensions\qupath-extension-bioformats.jar; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Could not load OpenSlide native library; at java.lang.ClassLoader$NativeLibrary.load(Native Method); at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); at java.lang.Runtime.loadLibrary0(Runtime.java:870); at java.lang.System.loadLibrary(System.java:1122); at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2227); at qupath.lib.gui.viewer.DragDropFileImportListener.handleFileDrop(DragDropFileImportListener.java:253); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:115); at qupath.lib.gui.viewer.DragDropFileImportListener.handle(DragDropFileImportListener.java:1); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.Comp",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35:10,release,released,10,https://qupath.github.io,https://github.com/qupath/qupath/issues/35,3,"['install', 'release', 'update']","['installation', 'released', 'update']"
Deployability,Slide label doesn't update as expected when changing the image,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1246:20,update,update,20,https://qupath.github.io,https://github.com/qupath/qupath/issues/1246,1,['update'],['update']
Deployability,"Slightly off QuPath- I don't know what scanner you are using, but if you have access to it, I think most should have a brightfield compensation image adjustment setting (it takes a picture of a blank slide and adjusts). We had some yellowing in ours after some software updates, and that took care of the background.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282609510:270,update,updates,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282609510,1,['update'],['updates']
Deployability,"Slightly updated script showing there is indeed some badness going on (note the counts don't match!). ```groovy; import groovy.transform.CompileStatic; import qupath.lib.common.Timeit. import java.nio.file.Files; import java.nio.file.Path. List<File> files = new File(System.getProperty(""user.home"")).listFiles() as List. for (int i = 0; i < 10; i++); files.add(new File(Math.random() as String)). List<Path> paths = files.collect(f -> f.toPath()) as List. int nIterations = 1000; println(""Same: "" + (countFilesExist(files) == countPathsExist(paths))); println(""Count files: "" + countFilesExist(files)); println(""Count paths: "" + countPathsExist(paths)). println new Timeit(); .checkpointAndRun(""Paths "", () -> countPathsExist(paths, nIterations)); .checkpointAndRun(""Files "", () -> countFilesExist(files, nIterations)); .stop(); .summarizeCheckpoints(). @CompileStatic; int countFilesExist(List<File> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (f.exists()); count++;; }; }; return count;; }. @CompileStatic; int countPathsExist(List<Path> files, int iterations=1) {; int count = 0;; for (int i = 0; i < iterations; i++) {; for (def f : files) {; if (Files.exists(f)); count++;; }; }; return count;; }; ```. Windows:; ```; INFO: Same: false; INFO: Count files: 51; INFO: Count paths: 38; INFO: Paths 	4.273 s; Files 	1.838 s; Total duration	6.111 s; Average per checkpoint: 3.055 s; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125:9,update,updated,9,https://qupath.github.io,https://github.com/qupath/qupath/pull/1298#issuecomment-1691680125,1,['update'],['updated']
Deployability,"Small update on this issue for QuPath v0.4.3. I previously mentioned; > It is unclear if this may cause data corruption or any other negative consequences. after closing QuPath to cancel a running script. However, this action now causes a corruption of the .qpdata file for the project entry that the script is currently running on. This corruption results in QuPath being unable to read the hierarchy data for the project entry. See https://forum.image.sc/t/hierarchy-is-null-cannot-invoke-can-anyone-help/78488/10 for details.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1167#issuecomment-1467865538:6,update,update,6,https://qupath.github.io,https://github.com/qupath/qupath/issues/1167#issuecomment-1467865538,1,['update'],['update']
Deployability,"Some undo support is now available in v0.2.0-m1 (and beyond), and explained [on my blog](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#new-limited-support-for-undo).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-518580699:145,update,updates,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-518580699,2,['update'],['updates']
Deployability,"Something that is a little more complicated that I have done in cases like this (when I did not want to look into sub-classifications) was create a per-cell measurement for positivity in each channel. The additional measurements would look something like:; Ch1 Positive 1; Ch2 Positive 0; Ch3 Positive 0. Then I would use another putMeasurment command to place a summary measurement in the parent annotation for each value. For my purposes I would create a single Percent Positive per channel for the annotation, so ended up with 3 new annotation measurements (that would only update when I ran the script). This way, I could keep re-running the script with different thresholds, though they would only update when the script is run (deleting cells or recreating the cells does not change the annotation measurements until you rerun the script).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/16#issuecomment-391780783:577,update,update,577,https://qupath.github.io,https://github.com/qupath/qupath/issues/16#issuecomment-391780783,2,['update'],['update']
Deployability,"Sorry for commenting on this. But by checking the old versions it seems that this behavior changed from 0.2m9 to 0.2m10. I do not know if this was intentional? . I can confirm that 0.2m9 opens by double clicking in Ubuntu 20.04, while 0.2m10 (and any more recent releases do not).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546#issuecomment-650125578:263,release,releases,263,https://qupath.github.io,https://github.com/qupath/qupath/issues/546#issuecomment-650125578,1,['release'],['releases']
Deployability,"Sorry for the delay, it's a crazy grant-writing time for the next month, and any coding time has been spent trying to get v0.3 ready for release soon - so I'm afraid I haven't had a chance for a proper look. Our main changes are happening on the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch, where we have updated to use JDK 16 and use the newer TensorFlow Java jars. I think this demonstrates that we really need a way to switch between TensorFlow/OpenCV/OpenVINO/something else without changing any of the StarDist code. That should allow the OpenVINO extension to be added separately just by dragging the jars onto QuPath. I'm not sure how best to do this. If we can come up with a quick-but-maintainable solution we may be able to include it in v0.3, but otherwise I should have a bit more time to think about it in a month.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-811252714:137,release,release,137,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-811252714,2,"['release', 'update']","['release', 'updated']"
Deployability,"Sorry this has taken so long, but v0.3.0 has finally been released (within the past few minutes....). It finally has better support for extensions, and so the [QuPath TensorFlow extension](https://github.com/qupath/qupath-extension-tensorflow) can now be in its own repository. We now have a pretty general way to support deep learning via [`DnnModel`](https://github.com/qupath/qupath/blob/4eb74946602d8df605402909c753fca027fa3c26/qupath-core-processing/src/main/java/qupath/opencv/dnn/DnnModel.java). I'm sure the design will need to be improved in the future, but the general idea is to try to require as little as possible to implement a new deep learning extension: basically, implement `DnnModel` and (ideally) also register it with `GsonTools`.; [Here](https://github.com/qupath/qupath-extension-tensorflow/blob/main/src/main/java/qupath/ext/tensorflow/TensorFlowExtension.java#L46) is where that happens for TensorFlow. [StarDist](https://github.com/qupath/qupath-extension-stardist) is now also in its own extension; the builder can take a `DnnModel` as an input as an alternative to a path, so it's relatively easy to add an alternative way or using the model. There's no longer any need to build QuPath from source because [OpenCV can be used instead](https://qupath.readthedocs.io/en/stable/docs/advanced/stardist.html). The main reason for all this is that it will make it much easier to use deep learning models within QuPath in different ways, e.g. for object classification, or for semantic segmentation as a drop-in replacement for a pixel classifier. In fact, as long as DnnModel is JSON-serializable (ideally just requires a URI) then this already works, but the process needs to be cleaned up and documented. In the meantime, there are a few videos showing U-Net as live pixel classifier [here](https://twitter.com/petebankhead/status/1406856875732258821?s=20). @dkurt I completely understand if you've lost interest in this after all this time, but if you ever want to update your",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-912009706:58,release,released,58,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-912009706,2,['release'],['released']
Deployability,"Sorry, I didn't read closely enough.; ```groovy; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal); ```; should be removed entirely. Then you can try this; ```groovy; // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus; def imp = IJTools.convertToImagePlus(serverOriginal, request).getImage(); ```; The previous error was because you were using `server` before it was defined. But actually with the update in v0.2.0 you don't need to define `server` separately from `serverOriginal` at all. Note that v0.2.0 is a work in progress and will change further in various ways. I wouldn't really recommending switching to it and spending much time updating scripts yet.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309#issuecomment-484671442:520,update,update,520,https://qupath.github.io,https://github.com/qupath/qupath/issues/309#issuecomment-484671442,1,['update'],['update']
Deployability,"Sounds good, as long as it doesn't enforce any tag until we *actually* release. Also, if you want to take it on... I think this PR fails because the two mac builds become 'pkg' and only one survives.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460#issuecomment-1935865136:71,release,release,71,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460#issuecomment-1935865136,1,['release'],['release']
Deployability,"Sounds like a healthy & commendable fear :) But there will be no more updates to v0.1.2, so any fix (if not already there) will be through that path.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471605278:70,update,updates,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471605278,1,['update'],['updates']
Deployability,Stain vector updates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/793:13,update,updates,13,https://qupath.github.io,https://github.com/qupath/qupath/pull/793,1,['update'],['updates']
Deployability,"Strange... if you install gradle separately, then you can also use `gradle clean jpackage` (i.e. avoid relying upon gradle wrapper). I'm not sure if that'll help. I have limited experience using Linux, and none using CentOS. I don't know whether JavaFX 18 (used by QuPath now) is compatible with CentOS 7 so even if you overcome the building issue, I don't know if it will run.; * https://github.com/qupath/qupath/issues/825; * https://github.com/qupath/qupath/issues/949",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506:18,install,install,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/950#issuecomment-1096162506,1,['install'],['install']
Deployability,"Strange... it suggests the cause is the one that I expected (not being able to load native libraries), but I'm not sure why it's happening here. You should be able to just delete the directory containing everything downloaded from GitHub; if you want to check where it is, inside GitHub Desktop you can choose _Repository &rarr; Show in Explorer_. . Then you can start again with https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#building-qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411636630:436,update,updates,436,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411636630,1,['update'],['updates']
Deployability,"Summary of changes in this PR (and recent ones):; * Add checkbox to the top of the 'Show' column to show/hide all; * Replace color rectangles with minimal color pickers (that look the same, but respond to clicks); * Automatically bring text field into focus when double-clicking to set a channel name; * Rename columns; * Reorder the lower controls; * Support regular expressions in the channel name filter for advanced filtering (optional). Before (left) and after (right). <img width=""200"" alt=""Brightness:Contrast before changes"" src=""https://github.com/qupath/qupath/assets/4690904/dd6ead11-38f0-44fa-97e3-2c6dd96bdef2"">. <img width=""200"" alt=""Brightness:Contrast dialog updated"" src=""https://github.com/qupath/qupath/assets/4690904/fe8ac8b8-4ec3-46cc-a708-4d7a11c2d864"">",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1270:675,update,updated,675,https://qupath.github.io,https://github.com/qupath/qupath/pull/1270,1,['update'],['updated']
Deployability,"Support for annotation descriptions is improved in #1004 . The screenshots below show the current status. The purpose of this feature request is to discuss further enhancements, in particular:. * Consolidating the idea of an annotation 'description' with a TMA core 'note'. Both use the trick of storing the text in the metadata map, but (inconveniently) use different keys: `ANNOTATION_DESCRIPTION` ([here](https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core/src/main/java/qupath/lib/objects/PathAnnotationObject.java#L74)) and `note` ([here](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMACommands.java#L122)) respectively. Neither key is ideal for a general purpose.; * I propose introducing a general `text` property. However, it's not totally clear if objects written by previous versions should automatically be updated. If they are, then the data files may not open properly in older QuPath versions.; * One reason for a simple, lower-case property name (e.g. `text`) is that it should be GeoJSON-friendly, and work sensibly as a key. But is there a better key? Via markdown/html, it's possible to smuggle in more than just text.; * Should other object types support text/descriptions?; * **Root objects**: I think yes. It provides a way to append arbitrary text to any image.; * **Detection objects**: Maybe... this would enforce a map being created, which could make each detection considerably more heavyweight. But perhaps it should be permitted, and users simply warned that it's not generally a good idea.; * Consider the sensibleness of the the current implementation, which will:; * Render text as if it's markdown (which shouldn't change anything for most plain text); * Render html directly if the text starts with `<html>`; * Load a web page if the text starts with `https://`. Might be of interest to @yli-hallila especially for https://github.com/yli-hall",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1005:944,update,updated,944,https://qupath.github.io,https://github.com/qupath/qupath/issues/1005,1,['update'],['updated']
Deployability,"Temporarily during development, until we make the final releases.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1509:56,release,releases,56,https://qupath.github.io,https://github.com/qupath/qupath/pull/1509,1,['release'],['releases']
Deployability,"Tested on m5 on another machine with ubuntu 18.04. Worked fine. So I guess it may be my local installation of OpenCV, java or some other issue. Will close this for now.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/380#issuecomment-561079092:94,install,installation,94,https://qupath.github.io,https://github.com/qupath/qupath/issues/380#issuecomment-561079092,1,['install'],['installation']
Deployability,"Tested on my fork and seems to work, but definitely one to watch in future releases. Will merge for now",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1694#issuecomment-2459650284:75,release,releases,75,https://qupath.github.io,https://github.com/qupath/qupath/pull/1694#issuecomment-2459650284,1,['release'],['releases']
Deployability,Thank u for developed such convenient tool like this . Is that possible to install this app by use scoop?,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1536:75,install,install,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/1536,1,['install'],['install']
Deployability,"Thank yo for the reply and your re-repeat :) of what you had already told me. I admit that I am really bad at understanding this part. This is what I think I understand:. The approach we used creates an issue with the way `ImageDisplay` is currently implemented because saving display settings to the .qpdata file is not good practice? ; But doing this via scripting is OK because it's less important if scripts break upon QuPath updates?. The risk is that if these are made public, other people could call upon these methods, and that would break something in the GUI whenever changes will be made to the code?. Currently there is no other way than to use `ImageDisplay` to set these properties for the channels (and save and recall them) which is bad because this will be revised in the future?. Let me know what I got wrong there if you have time. I think that in the meantime I will test a script to do what we used to be able to do, and dive into the wonderful world of Reflection for my sake.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632635935:430,update,updates,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632635935,1,['update'],['updates']
Deployability,"Thank you Pete for your fast reply!. I am already looking forward to that update!. . I appreciate your work so much!. . Best,. Marcel. . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 24. Juli 2018 11:13; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . As far as I remember, the fix I made is in a different branch and so not in v0.1.3 yet.; But I can confirm that there is no combination of settings in v0.1.2 to work around this, unfortunately... it will require an update to QuPath itself. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-407442971> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t4lxL8zuwRnSs13DwCom_Y8IfbkSks5uJzl2gaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t9545gipQaUMFkktOfyaa_Ebxhdiks5uJzl2gaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-407444374:74,update,update,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-407444374,2,['update'],['update']
Deployability,"Thank you Pete. Kathy. From: Pete <notifications@github.com>; Reply-To: qupath/qupath <reply@reply.github.com>; Date: Monday, June 8, 2020 at 12:11 PM; To: qupath/qupath <qupath@noreply.github.com>; Cc: ""Kathleen T. Yee"" <KYee@umc.edu>, Author <author@noreply.github.com>; Subject: [EXTERNAL]Re: [qupath/qupath] Zoom In and Zoom Out (#518). This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fqupath%2Fqupath%2Fissues%2F518%23issuecomment-640758278&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716768343&sdata=I6ByW3NeHWrDm7VTBAvpv2MpkhL6TLrhVIKQdriYgAA%3D&reserved=0>, or unsubscribe<https://nam01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAP4MNEYF5JGJNVJRBCHLL3DRVULSZANCNFSM4NYSD4CA&data=02%7C01%7Ckyee%40umc.edu%7Cd4b7b44c44274db73a8308d80bcef036%7C78a0681ef0be47e280498616858818a5%7C0%7C1%7C637272330716773334&sdata=3J8BiWMPaBCV6Q7lr8IOEGiTxaRqEaq2AUvxwH2crGY%3D&reserved=0>. Individuals who have received this information in error or are not authorized to receive it must promptly return or dispose of the information and notify the sender. Those individuals are hereby notified that they are strictly prohibited from reviewing, forwarding, printing, copying, distributing or using this information in any way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640759146:499,release,release,499,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640759146,2,['release'],['release']
Deployability,"Thank you for prompt reply.; I have updated Qupath and tried TMA dearryer again, as same as I mentioned above.; But it still doesn't work. ![new version QuPath TMA dearrayer work flow](https://user-images.githubusercontent.com/51498119/59235646-39fa1200-8ba7-11e9-9c6b-aea5593b341b.PNG); ![new version QuPath TMA dearrayer](https://user-images.githubusercontent.com/51498119/59235653-40888980-8ba7-11e9-9291-27aee29b9e84.PNG)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/329#issuecomment-500643829:36,update,updated,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500643829,1,['update'],['updated']
Deployability,"Thank you for taking your time into understanding our problem and coming up with possible alternative solutions!. I absolutely get your notes on the classifier. I assumed that the ObjectClassifier would _never_ need to read pixels because it currently only uses the detections' measurements. Surely the code must be changed in preparation of the advent of the `FeatureExtractor`. And for this, using `ProjectImageEntry.readHierarchy()` is probably the better option.; > [...] creating a classifier without needing to go through the UI [...]. I am not sure about this, though. You often want to leverage the live-update feature when creating a classifier. That is one of the most handy feature when tweaking a classifier. If that option was removed, it would be unfortunate. -------------------------. However i think you missed a point. The major issue this PR wants to address is the ability to a script in batch as fast as possible (and when it is possible); > an alternative approach [...] that doesn't involve any big API changes - and which can be used when you can know in advance that the image doesn't need to be accessed. Just to be clear, this PR's only API change is adding in [`ProjectImageEntry.java:L195`](https://github.com/qupath/qupath/pull/1488/files#diff-14ed5cabf5566ab4eb5d1ae31a25d75c8dd49e3c50e1cc05ce10ff21936b9a9fR195), where it adds a new public method `readImageData(boolean)` asking whether to read or not the image file. It also provides a default implementation `readImageData()` that always reads it, so that all previous code relied on this assumption don't break.; Furthermore, as you suggested the current approach can be used when _you know in advance_ that the image doesn't need to be accessed:; ![image](https://github.com/qupath/qupath/assets/34198340/3525d599-2609-422b-a5f8-64c1660d505c). Now, I agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the be",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:612,update,update,612,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,2,['update'],['update']
Deployability,Thank you for the tips. I'm using JIdea for the compilation but I will have a look at the Eclipse page above. I will update the thread once I get it working.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-315304305:117,update,update,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-315304305,1,['update'],['update']
Deployability,"Thank you for your prompt response!. When I was searching for resolution of similar bug in previous issues I couldn’t find any. Perhaps because I thought the problem appears only for vsi (Olympus) format. I agree #894 refers to the similar problem as mine although they were launching Hamamatsu slides. Looking forward to the next release of my favourite platform QuPath! 😊. Have a nice weekend,; Malgorzata Szolkowska; ____________; Malgorzata Szolkowska, MD, PhD, DSc, Assoc. Prof.; The Institute of Tuberculosis and Lung Diseases; Department of Pathology; Plocka 26; PL-01138, Warsaw, Poland; Tel.: +48 22 43 12 257. > Wiadomość napisana przez Pete ***@***.***> w dniu 16.07.2022, o godz. 06:07:; > ; > ; > Thanks @MalgorzataSzolkowska <https://github.com/MalgorzataSzolkowska> , this comes from the same underlying bug as these:; > ; > #894 <https://github.com/qupath/qupath/issues/894>; > #904 <https://github.com/qupath/qupath/issues/904>; > #973 <https://github.com/qupath/qupath/issues/973>; > I've already fixed it in the code, so it should work in the next release.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/A2CTSQHEGFTSDUI5NRQGJQLVUIYORANCNFSM53XGOATA>.; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186103119:331,release,release,331,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186103119,2,['release'],['release']
Deployability,"Thank you so much! In the best case I would like to have a downsampling factor of 1, so larger!; Maybe I was too dumb to see it, because I already had this issue open, but this:. ```; import javax.imageio.ImageIO; import qupath.lib.regions.RegionRequest. // Define resolution - 1.0 means full size; double downsample = 1.0. // Create output directory inside the project; def dirOutput = buildFilePath(PROJECT_BASE_DIR, 'cores'); mkdirs(dirOutput). // Write the cores; def server = getCurrentImageData().getServer(); def path = server.getPath(); for (core in getTMACoreList()){; // Stop if Run -> Kill running script is pressed ; if (Thread.currentThread().isInterrupted()); break; // Write the image; img = server.readBufferedImage(RegionRequest.createInstance(path, downsample, core.getROI())); ImageIO.write(img, 'PNG', new File(dirOutput, core.getName() + '.png')); }; print('Done!'); ```. is basically what I am searching for, isn't it (I never programmed Java or Groovy)? This posted Pete in Issue 97. . One further question: To execute this within QuPath's Script editor, do I have to install something before? . Best",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/317#issuecomment-494027815:1091,install,install,1091,https://qupath.github.io,https://github.com/qupath/qupath/issues/317#issuecomment-494027815,1,['install'],['install']
Deployability,"Thank you very much for looking into this problem so quickly!. In the meantime, I was able to open the TMA (multi-scene) file in Fiji - at least partially. . The Bio-Formats import dialog asked ""Please specify the image series you wish to import. Use commas ... There are 690 total series."" I requested all 690 series to be imported. I indeed got the stitched (!) version of all the scenes in the *.czi file. So, finally, the Bio-Formats importer is able to do the stitching!. However, so far I have only imported one channel, because I did not check the ""Open all series"" option. When I do check ""Open all series"", the import dialogue tells me that I don't have enough memory. (I need around 80 GB, have 24). I tried it anyway and it failed. ![image](https://user-images.githubusercontent.com/23238491/60874753-ccd6ac80-a238-11e9-85d0-22e268bfef8b.png). @Svidro Thank you very much! I am aware of the option to split the scenes and I have made extensive use of that possibility in projects with TMA specimens back when QuPath was not able to read multi-scene *.czi at all. I have also tried hard to convince the guys at Zeiss to include a ""merge all scenes"" option in ZEN because for us the scenes offer no benefit. Unfortunately, this does not seem to be a priory for them although I have not checked for ZEN updates in a while. Also, if Bio-Formats can now stitch the scenes and the latest development version of QuPath already works with multi-scene *.czi files, as Pete stated, the request is obsolete anyway. So, thanks again. I'm looking forward to 0.2.0-m3!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/337#issuecomment-509559753:1311,update,updates,1311,https://qupath.github.io,https://github.com/qupath/qupath/issues/337#issuecomment-509559753,1,['update'],['updates']
Deployability,"Thank you very much for your replies. I’m going to try what you have suggested tomorrow and will definitely report back. Apologies for posting in the wrong bit and thanks again for the very fast replies!. > On 8 Aug 2019, at 15:47, Pete <notifications@github.com> wrote:; > ; > For v0.1.2 you might also try installing the Bio-Formats extension: https://github.com/qupath/qupath-bioformats-extension; > This would not 'solve' the problem, but it would add another reader to QuPath that is capable of handling NDPI files - which could be enough at this stage.; > ; > Please do report back if/when this is resolved so that I can close the issue. GitHub issues should really only be used to report QuPath bugs, and this doesn't seem to be one - for other discussions the best place is https://forum.image.sc/tags/qupath; > But I wanted to answer here quickly in empathy for the impending submission deadline...; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/351#issuecomment-519633891:308,install,installing,308,https://qupath.github.io,https://github.com/qupath/qupath/issues/351#issuecomment-519633891,1,['install'],['installing']
Deployability,"Thank you! I managed to get things working as it happens however. I removed and re-installed several times and it seemed to like that! . > On 18 Jan 2018, at 17:35, Pete <notifications@github.com> wrote:; > ; > There's a new Bio-Formats extension now here. It may help with the CZI files.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-359426438:83,install,installed,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-359426438,1,['install'],['installed']
Deployability,"Thank you. Alan. From: Pete <notifications@github.com>; Sent: Tuesday, April 28, 2020 12:38 AM; To: qupath/qupath <qupath@noreply.github.com>; Cc: Alan Jerusalmi <ajerusalmi@bioaihealth.com>; Mention <mention@noreply.github.com>; Subject: Re: [qupath/qupath] Issue staring QuPath 0.2.0 m9 or m10 (#458). @ajerusalmi<https://github.com/ajerusalmi> the error is caused by the old Weka extension being installed. This is compatible with v0.1.2, but not v0.2.0. Two things you can do:. * delete the Weka extension; to find its location, go to Edit → Preferences and check the 'QuPath user directory'; * use Edit → Reset preferences to reset the location of the user directory in QuPath, so the extension will not be found. I will close this issue since it is not a bug, however a change has been made for v0.2.0-m11 to enable QuPath to recover better in cases like this, see #454<https://github.com/qupath/qupath/issues/454>. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/458#issuecomment-620375806>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AO6FMERJ4NRH6754WL7Q6ELROZMSBANCNFSM4MSNUQHQ>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/458#issuecomment-620601601:399,install,installed,399,https://qupath.github.io,https://github.com/qupath/qupath/issues/458#issuecomment-620601601,1,['install'],['installed']
Deployability,"Thanks @Edwinterb yes, we used to provide a dmg but recent macOS releases thwarted that - they were particularly unhappy if this was downloaded, and seemed to work extra hard to make it non-runnable. The pkg has proven the 'least painful' distribution method, and the right-click trick is documented [here](https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos). I do most of my development on a Mac, so suffer the pain directly. `jpackage` integrates well with our build tools, and seems to be the 'official' way to make installers for Java applications. I'm not good enough with XCode, build tools or GitHub Actions to figure out a way to piece together an alternative that gives an opportunity to squeeze in a proper version number. @alanocallaghan would have a better chance of figuring it out than I do, but I don't see how I can possibly mention it to him when he's already [embroiled in other macOS-related woes](https://github.com/qupath/qupath/issues/629#issuecomment-1723504495) - without actually being a Mac user.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329:65,release,releases,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727694329,4,"['install', 'integrat', 'release']","['installation', 'installers', 'integrates', 'releases']"
Deployability,"Thanks @MakarowMax, I haven't seen this error before but I am able to replicate it when I chance to the *Logistic Regression* classifier. I can change to *Artificial Neural Network* without problems. Is this also true for you?. It's curious because I am fairly sure I have used *Logistic Regression* without errors in the past; I'm not sure if it depends upon operating system or if any recent updates might be causing the trouble. In any case, the error occurs deep within OpenCV - and unfortunately there is no possibility to capture the exception within QuPath before the Java Virtual Machine shuts down. In the past, the only solution I could find to OpenCV errors like this has been to avoid calling the crashing code. In this case, that would mean removing the *Logistic Regression* option. I haven't found it to be terribly useful (even when it worked) so I don't think this would be a big loss; I personally prefer *Artificial Neural Network* (and sometimes *Random Trees*). *K Nearest Neighbor* really only makes sense when training using point annotations (when given a large number of samples it is too slow). What do you think? Does it happen to you with other classifier types as well?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-579836335:394,update,updates,394,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-579836335,1,['update'],['updates']
Deployability,"Thanks @MalgorzataSzolkowska , this comes from the same underlying bug as these:; * #894 ; * #904 ; * #973. I've already fixed it in the code, so it should work in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543:173,release,release,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1020#issuecomment-1186083543,1,['release'],['release']
Deployability,"Thanks @NHPatterson and @JoelRV . In both cases, Bio-Formats appears not to see the pyramidal levels and instead tries to open everything - and that is the reason for any attempting to open being very slow and requiring a lot (or too much) memory. It might be worth following up on this with the Bio-Formats team on GitHub or https://forum.image.sc/; Since Bio-Formats writes OME-TIFF, which now supports pyramidal images, you could also use `bfconvert` to create a more Bio-Formats friendly image in the first place. Therefore success only comes if OpenSlide opens the image instead. This was failing because of too harsh a check that the pixel sizes are available and valid, and my recent commit should fix this. I'm now able to open both images - _but without pixel size information_. I'm not sure if it should be there or not, but it's progress. @JoelRV the reason it's still failing for you seems to be because OpenSlide is not being loaded correctly on Ubuntu... which is a problem I've never quite solved, and success seems largely dependent on whether enough other stuff happens to be installed already. Could you try installing OpenSlide through your package manager and see if that helps ensure the dependencies are all available?. Ultimately, QuPath + OpenSlide on Linux has issues.... OpenSlide has some sub-dependencies (e.g. libtiff) and these aren't searched for in the place that I hoped they would be (i.e. the QuPath directory) but rather elsewhere on the system. So either a new, more portable way of packaging up OpenSlide needs to be found, or else is should be installed separately, or else Linux users would have to rely more on Bio-Formats. But that of course requires Bio-Formats to work for your file formats...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472470374:1093,install,installed,1093,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472470374,3,['install'],"['installed', 'installing']"
Deployability,"Thanks @OpenScienceProject I can replicate the problem. The issue comes from how the icon colors are set; ultimately, it's connected to some changes that were made to overcome some awkward JavaFX/ControlsFX behavior that was making the icon colors wrong in dark mode. I'll look into it, but I suspect a new release will be needed to have an effective workaround. > Sidenote: I see that changing the *Default object color* in the preferences doesn't change the icon colors properly; this is probably a related issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202#issuecomment-1375325780:307,release,release,307,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202#issuecomment-1375325780,1,['release'],['release']
Deployability,"Thanks @Rylern and @alanocallaghan - good call making me right the tests, that helped identify and fix some bugs, and address some suboptimal behavior concerning rounding and out-of-range values. > Is there a reason for defining the BufferedImageNormalizer interface, instead of just using [Function<BufferedImage, BufferedImage>](https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html) or [UnaryOperator<BufferedImage>](https://docs.oracle.com/javase/8/docs/api/java/util/function/UnaryOperator.html)?. I've updated this to use [`BufferedImageOp`](https://docs.oracle.com/en/java/javase/21/docs/api/java.desktop/java/awt/image/BufferedImageOp.html), which then; 1. allows the classes to be used directly with [`Graphics2D.drawImage`](https://docs.oracle.com/en/java/javase/21/docs/api/java.desktop/java/awt/Graphics2D.html#drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)).; 2. makes it possible to control whether in-place image conversion is used. Potentially one of the other standard Java interfaces could be used, but I want to avoid giving the impression that it's a good idea to use arbitrary methods or lambda expressions. These can be convenient for testing, but will fail when images are added to a project - because we need the methods to be JSON-serializable. The JSON serialization is taken care of through the `ImageServers` class, and we have to explicitly register every normalization class so that it can be used within a project.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1554#issuecomment-2209250698:529,update,updated,529,https://qupath.github.io,https://github.com/qupath/qupath/pull/1554#issuecomment-2209250698,1,['update'],['updated']
Deployability,Thanks @ayushnoori do you maybe need to install additional versions? I guess the garbled text should be bold and I'm not sure if that requires another file.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/866#issuecomment-996245078:40,install,install,40,https://qupath.github.io,https://github.com/qupath/qupath/issues/866#issuecomment-996245078,1,['install'],['install']
Deployability,"Thanks @carlocastoldi . The change looks a bit scary to me - although it's possible the existing behavior is already a bit scary. I see the [javadocs](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)) state the following regarding `Files.copy` with `REPLACE_EXISTING`; > The check for the existence of the file and the creation of the new file may not be atomic with respect to other file system activities. Nevertheless, I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. Is there any easy way for us to replicate the issue? Or, if not, could you give the full stack trace for what exception you get without these changes?. I wonder whether creating a method for copy/move that attempts the old behavior, and reverts to the new one if that fails for some reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339:814,release,releases,814,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339,1,['release'],['releases']
Deployability,"Thanks @core-code I've attempted a fix at https://github.com/qupath/qupath/pull/1344 by splitting the build into two parts and using `PlistBuddy` in between. It seems to be working on my computer, so hopefully this will be working in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1732323504:243,release,release,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1732323504,1,['release'],['release']
Deployability,"Thanks @crobbins327 could you update the PR (or create a new one) to remove the settings file please?. > I basically set the bounds to be the entire image. Ah, I think that's the key bit - I see the problematic behavior for a full image annotation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1039#issuecomment-1219581620:30,update,update,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/1039#issuecomment-1219581620,1,['update'],['update']
Deployability,"Thanks @jameshball for the PR and thorough description. All looks good to me, but I need to find a bit more time to check in detail (and try to remember if there was any logical reason to ignore annotations in the first place... I suspect there was not and it was just an oversight). The reason I want to check a bit more is that this highlights a bit of weirdness in how [QuPath provides different `MeasurementList` implementations](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core/src/main/java/qupath/lib/measurements/MeasurementListFactory.java#L44), so the annotation isn't guaranteed to have the same type of list after deserialization as it previously had. This was for reasons of efficiency, and because in an early version there was a 'dynamic measurement' feature that only annotations supported (but this isn't now used). That's a good chance that doesn't matter, but keeping this PR open is a handy reminder to think about measurement lists and GeoJSON in more detail before the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/835#issuecomment-957197679:1038,release,release,1038,https://qupath.github.io,https://github.com/qupath/qupath/pull/835#issuecomment-957197679,1,['release'],['release']
Deployability,"Thanks @jcupitt , hmmm it seems to be working for me in Catalina 10.15.7.; I see the same (full) image in Preview and in QuPath v0.2.3, using either OpenSlide or Bio-Formats. It sounds like QuPath must be doing something wrong with linking, but I don't know what. More generally, attempting to include OpenSlide within QuPath has proven troublesome before - I'm a lot happier with Java classpaths than trying to get it to properly handle native libraries (particularly with subdependencies). I have been considering whether to drop OpenSlide support or leave it up to people to install it separate via a package manager in general... but it is still very useful for some file formats. I'd be grateful for any tips or suggestions to resolve the tiling problem, or the inclusion of OpenSlide in general.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715471359:578,install,install,578,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715471359,1,['install'],['install']
Deployability,"Thanks @jesusdpa1 although I either don't understand the issue or couldn't replicate it. I'd also be confused if the .msi and .exe behave differently in this regard, since they are built at exactly the same time from the same code. I created a new account and installed QuPath from the .msi, and it did not have an user/extensions directory set by default - as it shouldn't. The directory is only set whenever the user needs it for some reason (usually they install an extension), and at that point they have the option to set its path to whatever they choose. This is then stored in the user preferences, using Java's default preferences mechanism... which should keep the path restricted to wherever the user requests. Since you mention viewing the extensions directory immediately after installation - but not installing any extensions - I feel like something must be missing somewhere. Note I only have a Windows 10 system to test this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302244800:260,install,installed,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302244800,4,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Thanks @ofrag and @alanocallaghan, I'll close this issue because it's really one for the StartDist extension repo. We already have an open PR for compatibility at https://github.com/qupath/qupath-extension-stardist/pull/36 and plan to ensure it's compatible when v0.6.0 is finalized. We're reluctant to do it too early, because then QuPath v0.5.x users might receive notifications to upgrade their extension... and the new one won't be compatible with v0.5, which would cause a new set of problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2346021169:384,upgrade,upgrade,384,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2346021169,1,['upgrade'],['upgrade']
Deployability,"Thanks @ozen I can replicate the issue with this file. The error message shows that the problem comes as QuPath tries to draw the annotation on screen at a low resolution. If shouldn't affect files without annotations, but I should be able to take steps to make this bit of the code more robust. In the meantime, you can try this script to update the ROIs to the 'new' format. That appears to resolve the problem for me.; ```groovy; def annotations = getAnnotationObjects(); annotations = annotations.each { a ->; if (a.getROI().getClass().getSimpleName().contains('Area')); a.setROI(GeometryTools.geometryToROI(a.getROI().getGeometry(), a.getROI().getImagePlane())); }; fireHierarchyUpdate(); ```. I think (but haven't confirmed) that it should be possible to use _Run &rarr; Run for project_ to apply this across your project (but of course best to do it to a copy, not the original!).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554910235:340,update,update,340,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554910235,1,['update'],['update']
Deployability,Thanks @petebankhead following the upgrade it works like charm 👍,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471611800:35,upgrade,upgrade,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471611800,1,['upgrade'],['upgrade']
Deployability,"Thanks @pyushkevich :) I'm also curious as to whether this was solved. I'm chipping in to mention that the positive pixel count should be quite a bit better if you use the beta version described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html) (involves compiling it, but it's not really a painful process...). You might also see some benefits by [adjusting the stain vectors](https://github.com/qupath/qupath/wiki/Preprocessing) - but the staining you mention is intriguingly new and different to me, and not something I've encountered before. (In the longer term, I plan that there will be much better alternatives to the pixel count - but realistically that is still some months away...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-391770756:258,update,updates,258,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-391770756,1,['update'],['updates']
Deployability,"Thanks @saramcardle! My lack of using TMAs for years means that the documentation for the ID is only for v0.1.2 at https://github.com/qupath/qupath/wiki/TMA-CD3-analysis. > If I have a project with TMAs in 0.3.2, will this change leave me unable to open in in 0.4?. That shouldn't be a problem. It could potentially also update the IDs to use the v0.4.0 key. It's just that if you go back to v0.3.2, the IDs will seem to have been lost and needed added again. > Also, I vote that ID is capitalized in set and get functions. Thanks! Me too I think. Do you feel the same about URI...?. I tried to check what Java itself does and it seems a bit inconsistent with both of those.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114#issuecomment-1304432307:321,update,update,321,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114#issuecomment-1304432307,1,['update'],['update']
Deployability,"Thanks @saudet good point! Alas, I'm currently stuck on macOS Big Sur 11.6.2 on (work's) M1, so can't upgrade to the latest OS - it would be nice (I think) to discover any issue has already been fixed there, and both QuPath and JavaCPP were fine all along. I'll certainly let you know if I discover anything further - thanks for all your help!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024452486:102,upgrade,upgrade,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024452486,1,['upgrade'],['upgrade']
Deployability,"Thanks @saudet that showed me that I forgot about ~/.javacpp/cache and I was still on opencv-4.5.4-1.5.7_SNAPSHOT. I deleted my JavaCPP cache and updated the dependency, but I'm still seeing the error. As far as I can tell, the right libraries are being loaded. If I run a Groovy script in QuPath to print `Loader.getLoadedLibraries()` I see:. ```; opencv_ml@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_ml.405.dylib; gfortran@.5 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; jniopencv_core : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_core.dylib; gfortran@.3 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.dylib; gfortran@.4 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgfortran.4.dylib; gcc_s@.1 : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libgcc_s.1.dylib; jniopencv_ml : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_ml.dylib; opencv_imgproc@.405 : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libopencv_imgproc.405.dylib; jniopencv_dnn : 	/Users/pbankhea/.javacpp/cache/opencv-4.5.5-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/opencv/macosx-x86_64/libjniopencv_dnn.dylib; jnijavacpp : 	/Users/pbankhea/.javacpp/cache/javacpp-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/javacpp/macosx-x86_64/libjnijavacpp.dylib; jniopenblas : 	/Users/pbankhea/.javacpp/cache/openblas-0.3.19-1.5.7-SNAPSHOT-macosx-x86_64.jar/org/bytedeco/openblas/macosx-x86_64/libjniope",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980:146,update,updated,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1023042980,1,['update'],['updated']
Deployability,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/830#issuecomment-957188687:836,release,release,836,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687,1,['release'],['release']
Deployability,"Thanks @zindy! Just a quick update to say I've been discussing how best to support scripting arguments with @melvingelbard, since he has done most of the command line work. I think a combination of the method you use (creating a global `args` variable) and using picocli for parsing would work well. Meanwhile, we have a few other related-ish scripting issues to deal with, including; * supporting the ability to run scripts from other scripts.; * revising the Groovy integration to use an approach other than JSR223: https://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html. The benefit of JSR223 is it potentially enables QuPath to support multiple scripting languages (e.g. Jython), but this comes at the expense of supporting every one of them a bit less than it otherwise could. I'm tempted to commit to Groovy-only and make the support better, rather than attempting to support Jython & more - I'd be very interested to know your thoughts on that. Anyhow, this is the reason why this pull request will take a bit more thought - I think it would be good to add args support at the same time as we make the other changes, hopefully in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647#issuecomment-741703766:28,update,update,28,https://qupath.github.io,https://github.com/qupath/qupath/pull/647#issuecomment-741703766,8,"['integrat', 'release', 'update']","['integrating', 'integration', 'release', 'update']"
Deployability,"Thanks Benjamin! That's really good to know, I had not realised that installing the redistributable was necessary. I have added the link to https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi. On the topic of CZI support, I have recently learned there may be some memory issues connected to reading CZI files that have been 'prestitched' using QuPath + Bio-Formats... is this something you have encountered / solved at all?. In the example I looked at, reading a single tile at the highest resolution would require preallocating an array that is the size of the entire full-resolution image whenever JPEG-XR compression was used... which would lead to out-of-memory errors in most cases. However I am not clear on the exact cause of this, and any insights would be very welcome.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43#issuecomment-272952005:69,install,installing,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/43#issuecomment-272952005,2,['install'],['installing']
Deployability,"Thanks Nick!. For an average DAB value (which [isn't terribly quantitative](http://www.mecourse.com/landinig/software/cdeconv/cdeconv.html)) you could create an annotation, then try _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_. For something area-based (which may be preferable), there is _Analyze &rarr; Region identification &rarr; Positive pixel count (experimental)_ or even _Analyze &rarr; Region identification &rarr; Create cytokeratin annotations (TMA, experimental)_. . As you can tell from the _(experimental)_ in the names, I wasn't entirely convinced either of these was quite as refined as they ought to be. I've done a bit of work to [improve the pixel count](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#more-useful-output-for-positive-pixel-count-experimental), but I plan to incorporate newer, better approaches for this kind of thing over the next few months. Given those caveats and limitations, you might find it better to try [creating your own method with ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ). Finally, most questions & answers are at [Google Groups](https://groups.google.com/forum/#!forum/qupath-users) - you might try posting your question there (ideally with an example image/screenshot).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/220#issuecomment-422573137:766,update,updates,766,https://qupath.github.io,https://github.com/qupath/qupath/issues/220#issuecomment-422573137,1,['update'],['updates']
Deployability,"Thanks Pete 😄! I will try to replicate the error without the extension to see if that might be the issue. . Miniconda should not be bringing any error since that is only use to create the virtual environment to install Cellpose. What is shown in the extensions window is just the path to the location of that python environment that contains the installation of Cellpose. I just used those settings to show how paths set from the first installation were being drag to the second one. . I think the behavior should be like the one observed when using the zip installation where every time that is installed it resets the preferences. . From all of these, I still think it might have been a user privilege difference. What I mean with this is that, if the first user installing QuPath is admin it sets the preferences globally. Then the second user, which doesn't have admin rights, seems to preserve first installation preferences and is able to navigate the first users files. The solution from my end was to proceed and install the zip version and uninstall the .msi version. Sorry for not being able to explain this more straight forward",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161:211,install,install,211,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302519161,8,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Thanks Pete, it works, although it generate a multiple times the following error message:. `; ERROR: QuPath exception; at com.sun.javafx.tk.Toolkit.checkFxUserThread(Toolkit.java:236); at com.sun.javafx.tk.quantum.QuantumToolkit.checkFxUserThread(QuantumToolkit.java:423); at javafx.scene.Parent$2.onProposedChange(Parent.java:367); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:113); at com.sun.javafx.collections.VetoableListDecorator.setAll(VetoableListDecorator.java:108); at com.sun.javafx.scene.control.skin.LabeledSkinBase.updateChildren(LabeledSkinBase.java:575); at com.sun.javafx.scene.control.skin.TreeCellSkin.updateChildren(TreeCellSkin.java:197); at com.sun.javafx.scene.control.skin.LabeledSkinBase.handleControlPropertyChanged(LabeledSkinBase.java:204); at com.sun.javafx.scene.control.skin.TreeCellSkin.handleControlPropertyChanged(TreeCellSkin.java:125); at com.sun.javafx.scene.control.skin.BehaviorSkinBase.lambda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at java",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:570,update,updateChildren,570,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,2,['update'],['updateChildren']
Deployability,"Thanks Pete,. As you can see, I'm not a sophisticated github user, but I love QuPath!. I'll try again. Regan. Regan Fulton, M.D., Ph.D.; CEO and Co-Founder; Array Science, LLC; 475 Gate 5 Road, #100; Sausalito, CA 94965; (415) 577-7360. www.arrayscience.com. On Wed, Jul 19, 2023 at 9:17 AM Pete ***@***.***> wrote:. > Have you tried the troubleshooting instructions here?; > https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos; >; > Right-click + open has always worked for me, across multiple Mac computers; > - but Apple do sometimes change things. Recently, I find I need to; > right-click + open for the installer, and then also right-click + open for; > the app itself the *first* time I use it (but a simple double-click works; > after that).; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/1281#issuecomment-1642383068>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ANU5KKI5I3C4RIZ6WYUK5D3XRACBDANCNFSM6AAAAAA2QFEV3E>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1281#issuecomment-1642387865:424,install,installation,424,https://qupath.github.io,https://github.com/qupath/qupath/issues/1281#issuecomment-1642387865,4,['install'],"['installation', 'installer']"
Deployability,"Thanks Pete.; I removed the `qupath-extension-bioformats.jar`before installing the new version, so having 2 versions at the same time should be reason why I cannot open .scn file with the v0.0.6 and v0.0.7 version. If you have time and can find a solution for that it would be great. At the moment I am doing fine with v0.0.5. Many thanks!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-470479317:68,install,installing,68,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-470479317,1,['install'],['installing']
Deployability,"Thanks Svidro, the getParent() idea seems to be working. I will update this thread with the full script once I have tile export working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/62#issuecomment-293105049:64,update,update,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/62#issuecomment-293105049,1,['update'],['update']
Deployability,"Thanks a lot Pete for you prompt answer and sorry for my late reply!. So, I did as you suggested to fix the not-opening issue: I have installed QuPath v0.1.2 and installed the 2 extension .jar file in it. This solved the problem and allowed me to open v0.1.3. However, I was still not able to open my .scn file properly. So, I decided to remove the qupath-extension-bioformats.jar v0.0.7 and install v0.0.5. This solved the problem. I can properly open my images now with the advantage of not having the pink image and the grey low resolution scan on the image lists. However, if I try to update the qupath-extension-bioformats.jar to v0.0.6 or 0.0.7, I have the same problem as before. Qupath load the images showing me the white macro and another image that does not open in the image list. The error it gives me is about location:. ""Sorry, I can't open /Users/alice/Desktop/Analysis/images/AL_p21ko_edu2color_20x_5_3e68c69d-05c4-4cbc-9fbc-25f745e724a9.scn::"". It is like QuPath is not able to locate my images anymore when I upgrade to the newer version of qupath-extension-bioformats.jar. Any idea why? I can wait a week or more if needed. I can still use QuPath with the v0.0.5 version, so I am not in a super rush. Thanks a lot for your help, I really appreciate. . Alice",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-468670846:134,install,installed,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468670846,5,"['install', 'update', 'upgrade']","['install', 'installed', 'update', 'upgrade']"
Deployability,"Thanks a lot for your answer. So running the following code when opening a new image is relatively painless:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255). // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0). // Ensure the updates are visible; viewer.repaintEntireImage(). // Usually a good idea to print something, so we know it finished; print 'Done!'`. Regarding the pink staining actually it doesn't look like it's the label. It might just be a very low resolution scan, probably brightfield used by the scanner to detect the coverslip and slide.; Do you think it would need a Bio-Formats update for QuPath to access the label image? Or is this something that could be implemented directly in QuPath? The label must be somewhere in the `.scn` as I can see it if I open the image in imageJ, or other softwares (Definiens, Halo, ImageScope...).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409927029:762,update,updates,762,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409927029,2,['update'],"['update', 'updates']"
Deployability,"Thanks a lot for your help! Only one last question: Is it possible to use 3; thresholds for the tumor cells (e.g. by using the classifier first) and; distinguish afterwards only the stroma cells with help of; setcellintensityclassifications into positive/negative cells? If so what do; I have to put in the script?; I'm sorry for my bad skills in programming. 2017-04-13 6:32 GMT+02:00 Pete <notifications@github.com>:. > You would need to run the classifier first to distinguish (for example); > tumor vs. stromal cells.; >; > Once you are happy with that, be sure to turn off the 'Auto-update'; > setting if you were using it... and then run; > setCellIntensityClassifications to further subclassify cells of each type; > according to their intensities.; >; > Note that you can use a single intensity threshold, to distinguish; > positive/negative cells only, e.g.; >; > setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2); >; > or 3 thresholds to get positive/negative, 1+, 2+, 3+ and H-scores; >; > setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); >; > It's true that the sliders that allow you to set intensity classifications; > when you create the classifier at the start will only result in tumor cells; > being classified. At the time I wrote that command, I was only interested; > in classifying tumor cells.... and it was much later that I realized that; > applying intensity classifications to other kinds of cell would be; > important too. There is no button/menu item for that yet, so the; > setCellIntensityClassifications script is the best way to do that; > currently.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/64#issuecomment-293778069>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AaDxo7t3HoNaYO5n-YVuTD1ZdZj5Z1a-ks5rvaVhgaJpZM4M641S>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/64#issuecomment-293894576:588,update,update,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/64#issuecomment-293894576,1,['update'],['update']
Deployability,"Thanks a lot. I downloaded tif from camelyon16 datasets. A single one is over 1GB. I have installed bioformats extension, but it seems cannot help. Should I need some format transformed? Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371740975:90,install,installed,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371740975,1,['install'],['installed']
Deployability,"Thanks again, Pete!. I've tried it now and it updates both um/pixel and magnification, but I can't get it to work with the further script - probably because I'm doing some beginner mistake in the script setup - my programming ""knowledge"" is limited to cut and paste:). I run this and get the following error log (see below):. // Set the magnification & pixel size (be cautious!!!); def metadata = getCurrentImageData().getServer().getOriginalMetadata(); metadata.magnification = 40; metadata.pixelWidthMicrons = 0.25; metadata.pixelHeightMicrons = 0.25. setImageType('BRIGHTFIELD_H_DAB');; Thread.sleep(100); setColorDeconvolutionStains('{""Name"" : ""H-DAB TMA40x"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.82788 0.53885 0.15571 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.15891 0.36799 0.91615 "", ""Background"" : "" 210 208 209 ""}');; Thread.sleep(100); runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 224, ""requestedPixelSizeMicrons"": 20.0, ""minAreaMicrons"": 100000.0, ""maxHoleAreaMicrons"": 1000000.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": true, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; Thread.sleep(100); selectAnnotations();; Thread.sleep(100); runPlugin('qupath.imagej.detect.nuclei.WatershedCellDetection', '{""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 14.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.09, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; Thread.sleep(100). Error log:. INFO: Starting script at Thu Sep 27 09:20:09 CEST 2018; ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.g",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:46,update,updates,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updates']
Deployability,"Thanks again. Tried to rebuild Qupath to get the new changes, but now the build failed. Updated Java, maybe I need a previous version of Java... Anyway, here is the command prompt with the failed build. Don't want to take more of your time, Pete, so just leave it if you feel like it's unimportant:. Microsoft Windows [Version 10.0.18363.836]; (c) 2019 Microsoft Corporation. Med enerett. C:\Users\IT-bruker\Documents\GitHub\qupath>gradlew clean build createPackage -Ptensorflow-cpu=true; Starting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details. > Configure project :; Building QuPath version 0.2.0-m12-SNAPSHOT; Current Java version: 1.8; C:\Program Files (x86)\Java\jre1.8.0_251; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Operating system: Windows 10 10.0 x86; You appear to be using a 32-bit JDK - If I can't find a 32-bit version of JavaFX, this will fail! Probably at the 'test' stage.; Requesting TensorFlow (CPU) subproject; Copying license directories:; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-core-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-bioformats\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-openslide\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-pen\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-processing\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-script-editor\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-extension-svg\src\main\resources\licenses; C:\Users\IT-bruker\Documents\GitHub\qupath\qupath-gui-fx\src\main\resources\licenses. FAILURE: Build failed with an excep",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630948935:88,Update,Updated,88,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630948935,2,"['Update', 'install']","['Updated', 'installed']"
Deployability,"Thanks for logging this after our chat about it, I agree QuPath should provide this option somewhere. I thought the LUT method was cleverer (and more effort to get working...), and it avoids some of the 'my image is all black' bug reports that otherwise ensue when exporting grayscale images that all have low pixel values and previewing them in the operating system's default viewer. But Iit is indeed a bit annoying that it requires setting the `mode` to `L` when using PIL - and also requires getting that option somehow passed through to PIL if using some library on top of it (like `imageio`). I'll try to get an optional alternative for the next QuPath release that can just output grayscale labelled images instead.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/993#issuecomment-1159781538:659,release,release,659,https://qupath.github.io,https://github.com/qupath/qupath/issues/993#issuecomment-1159781538,1,['release'],['release']
Deployability,Thanks for opening the feature request. Your suggestion it is a good starting point to see how cell profiler and QuPath could be integrated together and see for potential computational benefits of doing so. I will post some scripts I'm using with my local installation. I will be glad to help with anyway I can do so.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123#issuecomment-350436680:129,integrat,integrated,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/123#issuecomment-350436680,2,"['install', 'integrat']","['installation', 'integrated']"
Deployability,"Thanks for reporting this. I have not been working with CZI images myself, but I recently received one example image with this problem. Unfortunately, I have not yet been able to identify the exact cause, beyond the fact that too much memory is used. Because the image is not being read by QuPath directly (but rather Bio-Formats) it is a bit harder for me to track down where exactly the problem lies. However, I will continue to investigate, and add an update here when I learn more. In the meantime, I have been told that the Zeiss ZEN software is able to export the different scenes as separate images, which can then be read into a [QuPath project](https://github.com/qupath/qupath/wiki/Projects). Therefore this may be a workaround that enables you to work with the images in QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/45#issuecomment-274611030:455,update,update,455,https://qupath.github.io,https://github.com/qupath/qupath/issues/45#issuecomment-274611030,2,['update'],['update']
Deployability,"Thanks for reporting this.; Am I right to understand that you have tried this on two Windows computers, and one works but the other does not?. I am not at a computer right now to explore more, but my first question is does the computer that fails to work have a 32-bit version of Windows installed?. From the log, there appears to be a problem loading the OpenSlide library (for which I think only 64-bit support is included). This should not prevent Bio-Formats from opening the image, but conceivably it could since QuPath tries out all the possible libraries that it has when opening a new image.... and if it fails badly enough with its OpenSlide attempt, perhaps it does not try Bio-Formats. You can prevent this if you find where QuPath is installed, and delete (or copy to another location) the OpenSlide component - probably called qupath-openslide-0.1.1.jar or similar. You can then restart QuPath and try again. Could you try this and see if it makes a difference? Thanks.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268206675:288,install,installed,288,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268206675,2,['install'],['installed']
Deployability,"Thanks for the dedtail answer.; What I wanted to do was more something similar to what Ilastik or the Trainable Weka segmentation plugin for ImageJ offer, meaning you select manually some areas (in my case, I could define 3 classes of pixels, adipocytes, background and others) and after having applied multiple filters (gaussian, hessian etc...), the classifier is generated from my selection and applied to the rest of the image's pixels. I first thought that the integration of Weka was doing that but I realized then that it is used to classify annotations based on intensity and shape features, which is a bit different. It would be interesting to perform this kind of analysis because sometime that which give the best result in term of segmentation.; The threshold based approach didn't give me similar result, especially because background and inside of adipocyte have similar intensity.; The main advantage to use it in qpath instead of ImageJ will be to run it on the max resolution to get more precise result. ![image](https://cloud.githubusercontent.com/assets/1775952/23906471/53031de0-08ce-11e7-88ce-d89736289278.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-286447290:466,integrat,integration,466,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-286447290,1,['integrat'],['integration']
Deployability,Thanks for the feedback!; I'll close this PR and reopen a simpler one [here](https://github.com/qupath/qupath/pull/670) to facilitate integration.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/666#issuecomment-790729141:134,integrat,integration,134,https://qupath.github.io,https://github.com/qupath/qupath/pull/666#issuecomment-790729141,2,['integrat'],['integration']
Deployability,Thanks for the reply!; I will get to it and update you with the outcome.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/255#issuecomment-454432990:44,update,update,44,https://qupath.github.io,https://github.com/qupath/qupath/issues/255#issuecomment-454432990,1,['update'],['update']
Deployability,"Thanks for the update. I don't think that can be the explanation because (as best I recall, and from rechecking the code briefly) there is no difference in how the dearrayer handles H-DAB or H&E, although there is definitely a difference in how it handles fluorescence vs. everything else - and the initial size estimate for each core is critical. But good that it can be worked out one way or another.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/77#issuecomment-411738253:15,update,update,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/77#issuecomment-411738253,1,['update'],['update']
Deployability,"Thanks for the update. Looks great 👍, I will continue testing dev-0.3 branch. I am closing this.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/669#issuecomment-791936700:15,update,update,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/669#issuecomment-791936700,1,['update'],['update']
Deployability,"Thanks for your answer, no worries.; I have additional questions regarding .scn files:. - Using the following script:; `// Get access to the display info for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411572502:771,update,updates,771,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502,1,['update'],['updates']
Deployability,"Thanks for your fast answer Pete! We started to train people to use QuPath in our institute for a research purpose, so far I've got really go feedback! Thanks again for having release this great software and in opensource!; Could we find somewhere the API like the ImageJ project did ( https://imagej.nih.gov/ij/developer/api/index.html ) ?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332442980:176,release,release,176,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332442980,2,['release'],['release']
Deployability,"Thanks for your help, yes that (QuPath v0.5.0 release candidate) seems to be opening the WSI as one image rather than several separate dcm images. However like you said it still displays the list of dcm files in the Image List which may not be desired. . Not sure what's next in terms of this ticket - the main concern is addressed but the open UX issue may want to be handled separately.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1779286034:46,release,release,46,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1779286034,2,['release'],['release']
Deployability,"Thanks for your quick answer.; I renamed the file `C:\Program Files\QuPath\app\qupathqupath-extension-openslide-0.1.1.jar` to `qupath-extension-openslide-0.1.1.jar.TMP` as suggested and it solved the issue.; The program is installed with windows 10 64 bits on both computer, I don't know why on one openslide is not correctly loaded. Many thanks anyway!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-268235442:223,install,installed,223,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-268235442,1,['install'],['installed']
Deployability,"Thanks for your quick reply. My bad, how could I forget to add jpackage. Yet I tried it, the error seems to be different:; ./gradlew createPackage -Ppackager=/public/home/yangzhzh/tools/jdk-14/bin/jpackage. > Configure project :; I won't try to get the last commit - consider running with '-Prequest-git-tag=true' if you want this next time (assuming Git is installed); Building QuPath version 0.2.0-m4; Current Java version: 12; /public/home/yangzhzh/tools/jdk-12.0.2; Operating system: Linux 3.10.0-862.14.4.el7.x86_64 amd64; Copying license directories: ; /public/home/yangzhzh/tools/qupath-master/qupath-core/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-core-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-bioformats/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-openslide/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-pen/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-processing/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-extension-script-editor/src/main/resources/licenses; /public/home/yangzhzh/tools/qupath-master/qupath-gui-fx/src/main/resources/licenses; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/org/openslide/openslide/3.4.1_2/openslide-3.4.1_2-natives-linux.jar into build/qupath; Extracting native libraries from /public/home/yangzhzh/tools/qupath-master/maven/repo/net/sourceforge/jpen/jpen/2-150301/jpen-2-150301-natives-linux.jar into build/qupath; LICENSE PATH: /public/home/yangzhzh/tools/qupath-master/license-unknown.txt; > Task :createPackage FAILED; Using packager: /public/home/yangzhzh/tools/jdk-14/bin/jpackage; /public/home/yangzhzh/tools/jdk-14/bin/jpackage --input /public/home/yangzhzh/tools/qupath-master/build/qupath --output /public/home/yangzhzh/tools/qupath-master/build/dist ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/363#issuecomment-534115250:358,install,installed,358,https://qupath.github.io,https://github.com/qupath/qupath/issues/363#issuecomment-534115250,1,['install'],['installed']
Deployability,Thanks for your suggestions. I found another computer and installed 16.04. It ran without any issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/51#issuecomment-280864702:58,install,installed,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/51#issuecomment-280864702,1,['install'],['installed']
Deployability,"Thanks for your update!. Please let me know if you ever find any improved solution, or possibly a library/SDK that could be used. In the last few days I've seen there is now an open source C++ library for Zeiss czi images [here](https://github.com/zeiss-microscopy/libCZI). It's something I plan to explore a bit more, but I don't know of anything similar for .mrxs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/106#issuecomment-341029135:16,update,update,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/106#issuecomment-341029135,1,['update'],['update']
Deployability,"Thanks to you both. Off for a long weekend, but will try command line and let you know how that goes. I suspect there's something there from being upgraded so often that's causing issues. Thanks again!!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495922615:147,upgrade,upgraded,147,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495922615,1,['upgrade'],['upgraded']
Deployability,"Thanks! Adding OpenVINO support to QuPath sounds great. It may take some time to review this properly, as I'm currently in the middle of various interrelated changes for the next release that may impact this - including a switch to the new 'official' TensorFlow Java distribution, moving StarDist into the main project, and defining suitable interfaces to support models of different kinds (including for classification as well as for segmentation). To get StarDist in the main project, I intend to use OpenCV's DNN module - see [a preview here](https://github.com/petebankhead/qupath/blob/create-objects/qupath-extension-tensorflow/src/main/java/qupath/tensorflow/stardist/StarDist2D.java#L446), which should work if the `.pb` file is converted to something OpenCV-friendly. OpenCV has the advantage of already being a dependency, but ultimately we want to be able to support alternatives through extensions to broaden the range of supported models - and perhaps offer better performance. So TensorFlow will remain as an option for specialists. If OpenVINO will help too, it would be very good to include it. In the meantime, I'd like to ask a few questions:; * Should the [OpenVINO backend in OpenCV 4.5.1](https://github.com/opencv/opencv/wiki/ChangeLog#version451) offer an equivalent level of support and performance, or are there advantages in using this instead / as well?; * Can/could this work across Windows, Linux & macOS - or is it Linux-only?; * Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. Thanks again!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-776801532:179,release,release,179,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-776801532,1,['release'],['release']
Deployability,"Thanks! The packages I provided should be easier to work with, e.g. to uninstall/upgrade once the ubuntu repositories provides 0.40. Manually replacing libraries can cause a mess when you want to upgrade to the next ubuntu version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-734310793:81,upgrade,upgrade,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-734310793,2,['upgrade'],['upgrade']
Deployability,"Thanks!. > Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing gradlew when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later. Hmmm, that can happen if you've installed the latest JDK and it's now the system default, but you haven't built QuPath in a while. I tend to update gradlew as soon as I see there's a new stable release, although that tends to come a bit after the JDK. If that's the issue that got you, the 'solution' can be to set an older JDK to be the system default (e.g. Java 11) and run gradlew using that... or find some other way to run gradle with a different, older JDK. It's able to download separately the JDK it actually needs to build QuPath, separately from the JDK used to run gradle itself - if that makes any sense. More info about [toolchains here](https://docs.gradle.org/current/userguide/toolchains.html).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161:268,install,installed,268,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183544161,3,"['install', 'release', 'update']","['installed', 'release', 'update']"
Deployability,"Thanks, @petebankhead! I'll definitely try it once new release will be published.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/827#issuecomment-1319890779:55,release,release,55,https://qupath.github.io,https://github.com/qupath/qupath/pull/827#issuecomment-1319890779,1,['release'],['release']
Deployability,"Thanks, I can replicate this whenever I add enough lines. It also happens with my experimental, much updated branch (Java 11, updated dependencies)... so none of the updates have addressed this. The entire script editor needs an overhaul, and it seems the underlying text component that can provide the syntax highlighting (RichTextFX) isn't maintained any longer; JavaFX doesn't have something similar built-in, unfortunately. I'll look to see if I can find a quick fix on the QuPath side. If not, it adds to the urgency of updating the script editor... any suggestions for the best way to get a code editor with syntax highlighting into a JavaFX application welcome!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/241#issuecomment-436907818:101,update,updated,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/241#issuecomment-436907818,3,['update'],"['updated', 'updates']"
Deployability,"Thanks, I can't see any good reason for the old behavior either - I'll merge the change :). Equalizing views would be a bit too big a change for a 0.0.x release... perhaps one day, but the whole brightness/contrast/color code is pretty horrible, and so it probably is a case of rewriting it entirely rather than trying to push it much further. (It was thanks to @melvingelbard that the issue was found so quickly, I was hesitant to delve into the mess myself...). For reference, the logic of the update is:; * retain the settings from the previous image in the current viewer, if it's compatible with the one being opened; * if there wasn't a compatible image already open, find the first viewer that *does* have a compatible image and use the display settings from that",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/601#issuecomment-689625384:153,release,release,153,https://qupath.github.io,https://github.com/qupath/qupath/issues/601#issuecomment-689625384,2,"['release', 'update']","['release', 'update']"
Deployability,"Thanks, I made minor edits to ensure `super.close()` is called as well, and made some variables final. One worry, possibly obscure: it looks like `dedicatedStore` is being set as a side-effect or calling `getStore()`. That's fine if the builder is only used once, but if it is reused and passed a different `store` (or `findViewer()` gives a non-null result) before the second use then I think we could still end up closing a store that is being used elsewhere. Possible workarounds:; 1. Move the `getStore()` logic into `build()` so that `dedicatedStore` doesn't need to be a field of the builder; 2. Reset the value of `dedicatedStore` whenever its value may change (e.g. `findViewer(imageData)` doesn't return `null`, or `store` is updated); 3. Build the store inside the `RenderedImageServer` if the store it is given is `null` - and then set `dedicatedStore` only within `RenderedImageServer` (which knows whether or not it created a store). I tend to think Option 3. might be the easiest to code, and most robust.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612:735,update,updated,735,https://qupath.github.io,https://github.com/qupath/qupath/pull/1577#issuecomment-2273859612,1,['update'],['updated']
Deployability,"Thanks, I remain confused because I can see you're using https://github.com/BIOP/qupath-extension-cellpose - which is developed separately by another group. That's where all the CellPose/Miniconda things arise, since they aren't part of QuPath. Your steps don't mention installing the extension, miniconda or Cellpose though, so I can't tell when or why any problem occurs. Also, if the files are accessible via Windows Explorer / the file chooser then I also don't know see where this would be a QuPath problem... so I remain unclear that there is any bug here, at least in QuPath. @lacan may be able to help from the CellPose extension side, or the community forum may be a better place for the discussion that spreads across different software: https://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108#issuecomment-1302320391:270,install,installing,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108#issuecomment-1302320391,1,['install'],['installing']
Deployability,"Thanks, I should have thought of that. I've just tried the ARM64 build from 2021-11-08 and it works beautifully - I couldn't reproduce the issue, and it runs noticeably faster. I used the old build because it's unfortunately really awkward to build QuPath for M1 - the libraries we use to read whole slide images are stuck on Intel.; * OpenSlide - https://github.com/openslide/openslide / https://github.com/openslide/openslide-java; * Bio-Formats - https://github.com/ome/bioformats (because it uses an older libjpeg-turbo). I hacked together something that works locally with OpenSlide installed via Homebrew so I could test JavaCPP / OpenCV, but I haven't figured out how to make the whole distribution portable (https://github.com/qupath/qupath/issues/629). If it's possible to resolve the memory errors via JavaCPP so that it works via Rosetta that would be excellent, but I understand if not - especially since it seems fine in the ARM64 build, and we'll want to use that as soon as we can figure out how.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282:588,install,installed,588,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018254282,1,['install'],['installed']
Deployability,"Thanks, I understand better now that the bug is connected to deserializing. I see that your JSON uses an 'old' (pre-v0.4) syntax:; ```json; { ""name"": ""Example"", ""parentClass"": {""name"": ""Parent""}, ""colorRGB"": 0}; ```; If I run the following in v0.4.3; ```groovy; def pc = getDerivedPathClass(getPathClass(""First""), ""Second""); println GsonTools.getInstance(true).toJson(pc); ```; I see; ```json; {; ""names"": [; ""First"",; ""Second""; ],; ""color"": [117, 210, 222]; }; ```; which was changed in v0.4 for better readability and easier support in other languages. Also, for deserializing you should use `gson = GsonTools.getInstance()` rather than `new Gson()`, because QuPath installs its own `TypeAdapters` to handle custom classes, including `PathClass`. So I implemented these changes in your script, randomizing the class names to avoid being thwarted by caching:; ```groovy; import qupath.lib.objects.classes.PathClass. for (useLegacyJson in [true, false]) {. String parentName = Math.random() as String; String childName = Math.random() as String; String json; if (useLegacyJson); json = """"""{ ""name"": ""${childName}"", ""parentClass"": {""name"": ""${parentName}""}, ""colorRGB"": 0}""""""; else; json = """"""{ ""names"": [""${parentName}"", ""${childName}""], ""color"": [0, 1, 2]}""""""; ; def gson = GsonTools.getInstance(); PathClass pathClass = gson.fromJson(json, PathClass.class); pathClass = PathClass.getSingleton(pathClass); PathClass parent1 = pathClass.getParentClass(); PathClass parent2 = PathClass.fromString(parentName); ; if (useLegacyJson); println ""With legacy JSON""; else; println ""With v0.4 JSON""; println(""getSingleton: "" + parent1.hashCode() + "" ("" + parent1 + "")""); println(""fromString: "" + parent2.hashCode() + "" ("" + parent2 + "")""); println(""Are equal: "" + (parent1===parent2)) ; println ""----------""; }; ```; From a typical run I see; ```; INFO: With legacy JSON; INFO: getSingleton: 1714766410 (0.07271672325316691); INFO: fromString: 2014375544 (0.07271672325316691); INFO: Are equal: false; INFO: --",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778:668,install,installs,668,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778,1,['install'],['installs']
Deployability,"Thanks, I will attempt to upgrade and report if it helps (I admit I was afraid to upgrade so not to introduce new bugs 😄 )",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/278#issuecomment-471603918:26,upgrade,upgrade,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/278#issuecomment-471603918,2,['upgrade'],['upgrade']
Deployability,"Thanks, I'll close this now because v0.3.0 is finally released - and the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) has now been separated out to its own repository. This should make it much easier to create forks and/or develop it at a faster pace, without needing to fit it in with QuPath's (currently rather slow) release cycle.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/714#issuecomment-912011086:54,release,released,54,https://qupath.github.io,https://github.com/qupath/qupath/pull/714#issuecomment-912011086,2,['release'],"['release', 'released']"
Deployability,"Thanks, I've updated the javadoc to; ```java; /**; 	 * Create ROIs from labels in an image.; 	 *; 	 * @param ipLabels the labeled image; generally this should be a ByteProcessor or ShortProcessor; 	 * @param n the total number of labels; often this is equal to the maximum value in the image; 	 * @return an array of length n; output[i] is the ROI for label i+1, or null if no Roi is found; 	 * with that label.; 	 */; ```; The class generally remains awkward to use and could benefit from some less ambiguous methods, but they aren't really used much for any new QuPath commands.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1354#issuecomment-1741726252:13,update,updated,13,https://qupath.github.io,https://github.com/qupath/qupath/issues/1354#issuecomment-1741726252,1,['update'],['updated']
Deployability,"Thanks, can you try the QuPath v0.5.0 release candidate - https://github.com/qupath/qupath/releases/tag/v0.5.0-rc1 ?. This behaves different from v0.4.4, using OpenSlide to read the image. To me, it appears to behave properly - although has the limitation that if you add more than one of the dicom files, then the same image is effectively duplicated in the project. I'm not sure if that's expected or acceptable, but addressing it is probably not straightforward. Dicom is the only format I know that behaves in this way, and QuPath tries to avoid having to treat formats as a special case (relying upon OpenSlide or Bio-Formats to untangle the meaning of the image file paths provided).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1397#issuecomment-1773053854:38,release,release,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1397#issuecomment-1773053854,2,['release'],"['release', 'releases']"
Deployability,"Thanks, makes sense. I'm still unable to get things working reliably in QuPath, including after a restart and when keeping the process alive after testing, but I'm not sure what else to try. For QuPath itself, the problem remains pretty obscure (I don't think any users have complained yet). I wouldn't want this to delay any 1.5.7 release, and I can't be certain any lingering problems aren't on our side anyway - I'm looking forward to the non-SNAPSHOT aarch64 builds being available.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119:332,release,release,332,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024245119,1,['release'],['release']
Deployability,"Thanks, that sounds good! In that case I prefer the minimal implementation for now - it *might* require a compatibility-breaking change in the future (and therefore an update on your side), but I strongly suspect we will be the only people using it for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/699#issuecomment-815558343:168,update,update,168,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815558343,1,['update'],['update']
Deployability,"Thanks, that's quite strange... I've just downloaded it again, and it is working here on two different Macs. Are you running macOS Sierra, or some other version?. If QuPath can't load OpenSlide, then I expect it can't load any other whole slide formats (unless you have the Bio-Formats extension installed). In that case, I would expect it to fall back to using ImageJ for MRXS images to read only the low-resolution data. If you right-click on QuPath.app and select 'Show package contents', you should be able to see something like what is shown below:. ![libopenslide](https://cloud.githubusercontent.com/assets/4690904/20973479/a23ad306-bc90-11e6-9863-e9281c2c9110.jpg). I suspect the issue may be connected to differences in the many ```lib*``` files. One way to test this is to copy all the ```lib.*``` files from a QuPath version that works (i.e. anything before v0.1.1?) and paste it into the QuPath that doesn't. This may cause v0.1.1 to function. If these instructions make any sense, could you try this?. Thanks,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/32#issuecomment-265486923:296,install,installed,296,https://qupath.github.io,https://github.com/qupath/qupath/issues/32#issuecomment-265486923,1,['install'],['installed']
Deployability,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-479346732:402,update,updated,402,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732,1,['update'],['updated']
Deployability,"Thanks, this should be fixed in the next release (code linked above).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/819#issuecomment-922814352:41,release,release,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/819#issuecomment-922814352,1,['release'],['release']
Deployability,"Thanks, this should now be fixed. To update older scripts, you can convert the list of names to a String array by adding `[` at the start and `] as String[]` at the end. It should look something like this; ```groovy; removeMeasurements(qupath.lib.objects.PathCellObject, [""Name 1"", ""Name 2"", ..., ""Name X""] as String[]); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/915#issuecomment-1087825570:37,update,update,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/915#issuecomment-1087825570,1,['update'],['update']
Deployability,"That is usually Gatekeeper (since the app is not signed and notarized). You can either turn off Gatekeeper or right-click on the program and choose Open (only needs to be done once). Sent from my iPhone. On Jul 19, 2023, at 12:10 PM, ReganFulton ***@***.***> wrote:. ﻿. I recently updated to MacOS 13.5 (Ventura), on my desktop mini (M1 processor).; Now my QuPath program doesn't work at all.; I get a message saying ""This file is corrupted and should be moved to the trash""; I've tried re-downloading QuPath, as well as re-downloading the OS, to no avail.; Any advice?. —; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/1280#issuecomment-1642372686>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABMJCNSIL52UXHDWZGSRNS3XRABFXANCNFSM6AAAAAA2QBRGYY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536:281,update,updated,281,https://qupath.github.io,https://github.com/qupath/qupath/issues/1280#issuecomment-1642380536,1,['update'],['updated']
Deployability,"That sounds much easier, once integrated, than my method of downsampling the whole image to a size where I could submit it to ImageJ, greyscaling a merged image of the channels, and then sending back the annotation region! I haven't tested it yet, but can it work on multiple channels at once?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/93#issuecomment-323493294:30,integrat,integrated,30,https://qupath.github.io,https://github.com/qupath/qupath/pull/93#issuecomment-323493294,1,['integrat'],['integrated']
Deployability,"That's @SoerenXD QuPath makes such minimal use of commons-text (and doesn't use `StringLookup`) that it's tempting to just remove it, but for now I've updated the dependency for the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1141#issuecomment-1318327873:151,update,updated,151,https://qupath.github.io,https://github.com/qupath/qupath/issues/1141#issuecomment-1318327873,2,"['release', 'update']","['release', 'updated']"
Deployability,"That's perfect Pete.; No need to include a new menu command if I can create it myself :-). Here is my final startup script:. ```; getQuPath().installGroovyCommand(""Objects>Select...>Select children"", ; """"""; def selectedObjects = getSelectedObjects(); if (!selectedObjects); return; def children = []; for(obj in selectedObjects) {; if (obj.isAnnotation()){; //println obj; def tmpchilds = obj.getChildObjects(); children += tmpchilds; }; }; selectObjects(children); """"""; ); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1438#issuecomment-1852099160:142,install,installGroovyCommand,142,https://qupath.github.io,https://github.com/qupath/qupath/issues/1438#issuecomment-1852099160,1,['install'],['installGroovyCommand']
Deployability,"That's really great. I will give it a spin and let you know if I come up; against any problems. On Mon, Nov 28, 2016 at 12:04 AM, Pete <notifications@github.com> wrote:. > While not directly related to the Python problem, v0.0.7; > <https://github.com/qupath/qupath/releases/tag/v0.0.7> will hopefully do; > away with the exceptions you were seeing related to OpenSlide and OpenCV; > (some info here <https://github.com/qupath/qupath/issues/2>).; >; > At least, I was able to run the this release on a clean installation of; > Fedora (25) through VirtualBox without major trouble... albeit it still not; > quite as smoothly as under macOS, Windows or Ubuntu.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/27#issuecomment-263157993>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APkEar0xe5TkOXBQe4CzEpPWcbxH0v5Nks5rChqhgaJpZM4K7UrB>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-263166949:266,release,releases,266,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-263166949,3,"['install', 'release']","['installation', 'release', 'releases']"
Deployability,The TMA core grid view doesn't update when the TMA grid is deleted / re-created / modified. Is that intended?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1478#issuecomment-1976286327:31,update,update,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/1478#issuecomment-1976286327,1,['update'],['update']
Deployability,"The _Add Delaunay cluster features_ command has the potential to be very useful, but is currently incomplete. The most obvious issue is that it creates an overlay that can have a considerable negative impact on repainting speed. Furthermore, this overlay cannot be removed from the GUI - the only way to get rid of it is to run the command again with _Show overlay_ unchecked. ![delaunay_overlay](https://cloud.githubusercontent.com/assets/4690904/19434507/b4b85914-945d-11e6-8a6d-f2de2129e7e3.jpg). The issue remains because solving it properly is likely to require a few different things:; - Providing access to all overlays within the GUI, allowing them to be turned on/off/deleted; - Deciding on the most important Delaunay features to use; - Designing an appropriate data structure to store Delaunay information (possibly in a way that can be serialized?). It is also important to remove the overlay from the plugin itself, since this introduces a very unhealthy GUI dependency. Rather, a data structure to represent the Delaunay information ought to be defined in a core module, and then the overlay code kept separate within the GUI module. Consideration also needs to be given to whether the calculations should be updated as objects are added/removed, or (more likely) not.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/7:1223,update,updated,1223,https://qupath.github.io,https://github.com/qupath/qupath/issues/7,1,['update'],['updated']
Deployability,"The `.pkg` wraps up the `.app` in an installer. I think `jpackage` will create the `.app` first, then the `.pkg` if required - but I don't think it gives space in between to do anything useful. I've never used `defaults` (didn't know it existed...) so don't know if it requires the `.app`. We use `package=installer` to get the `.pkg` because otherwise I think the `.app` has all sorts of scary quarantine flags set that mean it can't be launched without recursively removing them all (at least that's my vague memory of what happened, I may well be misremembering). The flags only occurred when downloading - so on my local build I thought all was fine...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157:37,install,installer,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1727775157,2,['install'],['installer']
Deployability,"The behavior has been unchanged in v0.2.0 milestones for many months (without previous complaint) and it is now too late to make any substantial change before v0.2.0. QuPath v0.1.2 handled projects in a much simpler way, but this is insufficient for many recent and planned features for which a single local file path isn't enough to identify an image. v0.2.0 therefore stores both the absolute and relative paths. If the relative path to the project file is maintained, QuPath will show a dialog and prepopulate the necessary changes to the absolute paths to update the project. The user only has to accept these changes and the project will be updated. This should allow everything to be 'corrected' immediately when the project is opened. If the absolute paths were *not* updated, then resolving relative paths every time they are required would be rather a lot more complex, and could result in projects being silently updated in unexpected ways (e.g. when changing an image name, trigging the project file to be rewritten). The current behavior aims to strike a compromise between being easy to use and not causing unexpected problems. To avoid the 'update URIs' dialog in am multi-user setting, each user can duplicate the *project.qpproj* file and use the duplicate as their own view on it, i.e. they open and update the project file to contain the absolute paths relevant to them. To facilitate this, when dragging a project directory on top of QuPath one can choose the precise file to open from a drop-down list. There is also a *Recent Projects* option to reopen the last project. > **Please respect the request to use image.sc for questions and discussions, not GitHub.**; > ![bug report](https://user-images.githubusercontent.com/4690904/80976463-68b25400-8e1b-11ea-8c19-739a35dd4942.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/468#issuecomment-623497951:560,update,update,560,https://qupath.github.io,https://github.com/qupath/qupath/issues/468#issuecomment-623497951,12,['update'],"['update', 'updated']"
Deployability,"The code has been fixed, so this should work again in the next QuPath release (v0.4.0). Until then, the workaround is to **open the image through a project**. I'm leaving this issue open because the question understandably comes up quite often, and I want to make the solution easier to find. Duplicates:. * #904 ; * #973; * #1020 ; * #1023",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/894#issuecomment-1186392664:70,release,release,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/894#issuecomment-1186392664,1,['release'],['release']
Deployability,"The contents of TIFF images can be quite variable, some compatible and some not. QuPath doesn't handle the file formats itself, but rather uses OpenSlide, Bio-Formats or ImageJ. Because all three libraries 'think' they can handle TIFF files, and a decision is made based on a basic parsing of the metadata, I'm not sure which one will actually be trying (and failing) in your case. If you have the Bio-Formats extension installed, then you can customize whether or not it is used (or ignored) preferentially using the preferences described at the bottom of this page: https://github.com/qupath/qupath-bioformats-extension. By either always using Bio-Formats or never using Bio-Formats for .tif, you might have more success in reading this specific TIFF in QuPath. Regarding _'a way to calculate the intensity for fluorescence above a threshold'_ do you want the mean fluorescence intensity, or something else? I would expect that the mean is quite dependent on the threshold value chosen. In any case, there's currently no built-in command to get exactly this in QuPath directly, and you may need to rely on ImageJ. Four ways you might approach this are:; * Using _Send region to ImageJ_ interactively; * Via an ImageJ macro run through QuPath; * Using a Groovy script, somewhat like [this one](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html); * Using a script, macro or _Simple tissue detection_ to generate the QuPath annotation first, then within QuPath calling _Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)_",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407034348:420,install,installed,420,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407034348,1,['install'],['installed']
Deployability,"The counting within the annotation seems to be positive in some squares, while other squares are not counted at all. It only happens with a few files.; I also tried to count the same annotation again and the bad count happens always in the same squares.; ![Capture](https://user-images.githubusercontent.com/50907268/58162476-888c4e80-7c82-11e9-850e-7e7b75cc65db.JPG). Here I attached a snapshot of a count. **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/318:460,release,release,460,https://qupath.github.io,https://github.com/qupath/qupath/issues/318,1,['release'],['release']
Deployability,"The crashes on Mojave sound a lot like this: https://twitter.com/petebankhead/status/1080743299454025728; So if you upgrade your JDK and rebuild QuPath using Gradle then that might be enough. The inability to handle the .scn files would be because, if the preferences are reset, then the extensions directory gets reset also. Reinstalling Bio-Formats has the side-effect of also setting the extensions directory. For the not-opening issue, if you're able to start QuPath from the command line then you should get a more meaningful error message. It might be trouble in the extensions directory or some corrupting preference. Opening v0.1.2 and using it to reset the preferences again might help resolve the not-opening problem. Finally, if all else fails but you can wait a week, then I should have a bit more info to share then...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-467853740:116,upgrade,upgrade,116,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-467853740,1,['upgrade'],['upgrade']
Deployability,"The expectation is that this may be handy when training a patch-based classifier outside of QuPath. The API might need improved in the future if `TileExporter` is now trying to do too many things.; Also fix a `DnnTools` bug related to patch extraction.; In the future, the patch extraction code should really be moved to the same location, but here it is spread across two places (one working primarily with `BufferedImage`, one primarily with `Mat`).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/814:58,patch,patch-based,58,https://qupath.github.io,https://github.com/qupath/qupath/pull/814,3,['patch'],"['patch', 'patch-based']"
Deployability,"The extension update is now [here](https://github.com/qupath/qupath-bioformats-extension/releases/tag/v0.0.4). If it doesn't solve the problem, try going to *Edit &rarr; Preferences...* and find the entry called *Never use Bio-Formats for image extensions*. Type `.scn` there and QuPath should default to using OpenSlide... which may possibly help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358716701:14,update,update,14,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358716701,2,"['release', 'update']","['releases', 'update']"
Deployability,"The fix seems straightforward, just to remove the `getPath()` method from; https://github.com/qupath/qupath/blob/v0.4.2/qupath-gui-fx/src/main/java/qupath/lib/gui/images/servers/PathHierarchyImageServer.java#L151. I'll submit a PR, the main question is whether there will be a v0.4.3 or if the next release will be v0.5.0 (further in the future).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1217#issuecomment-1403554482:299,release,release,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/1217#issuecomment-1403554482,1,['release'],['release']
Deployability,"The following library is under active development, but has been proven to be handy. No complex installation such as openslide. @jcupitt @petebankhead ; https://github.com/bayer-science-for-a-better-life/tiffslide",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-932810687:95,install,installation,95,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932810687,1,['install'],['installation']
Deployability,The import issue should be fixed [on my fork](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/95#issuecomment-395945892:102,update,updates,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/95#issuecomment-395945892,1,['update'],['updates']
Deployability,"The issue looks to be the same as https://github.com/qupath/qupath/issues/336, in which case the switch to use OpenJFX 13 in the next release of QuPath will hopefully resolve it. If you want to try building it from the `dev-m5` branch (some guidance [here](https://petebankhead.github.io/qupath/2019/10/01/building-qupath.html)) please do let me know if it does work or not. Otherwise I hope v0.2.0-m5 will be available within the next week.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/369#issuecomment-541389834:134,release,release,134,https://qupath.github.io,https://github.com/qupath/qupath/issues/369#issuecomment-541389834,2,['release'],['release']
Deployability,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409052439:763,update,updates,763,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439,1,['update'],['updates']
Deployability,"The main part of the error message is from OpenSlide, saying; ```; Slides with dissimilar main images are not supported; ```. You could try installing the [Bio-Formats extension](https://github.com/qupath/qupath-bioformats-extension) to see if that works for your images. There is more information on the [Supported image formats](https://github.com/qupath/qupath/wiki/Supported-image-formats) page of the wiki.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/184#issuecomment-403369967:140,install,installing,140,https://qupath.github.io,https://github.com/qupath/qupath/issues/184#issuecomment-403369967,1,['install'],['installing']
Deployability,"The method of opening the project doesn't matter. I just tested drag&drop, open dialog and recent dialog. All have the same problem. Regarding your other question, only if I add enough buttons to the source to cause the problem. For example, if I add; ```java; nodes.add(ActionTools.createToggleButton(ActionTools.createAction(() -> {; 	}, ""something"", IconFactory.createNode(QuPathGUI.TOOLBAR_ICON_SIZE, QuPathGUI.TOOLBAR_ICON_SIZE,; 	PathIcons.BRUSH_TOOL), null), true, true));; nodes.add(new Separator(Orientation.VERTICAL));; nodes.add(ActionTools.createButton(ActionTools.createAction(() -> {}, ""Convert""), false));; ```; (sorry for the formatting) to qupath-gui-fx/src/main/java/qupath/lib/gui/ToolBarComponent.java line 170 (just before `toolbar.getItems().setAll(nodes);`) it demonstrates the issue. This is simply adding one toggle button, one separator and one text button to the end (sorry, I'd forgotten about the toggle button). I have no actions on these buttons which would interfere, nor any accelerator etc.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352389017:834,toggle,toggle,834,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352389017,4,['toggle'],['toggle']
Deployability,"The next release of QuPath (v0.1.2, planned before the end of the year) will contain an option to show the label in a floating window under *View &rarr; Show slide label*. This is automatically updated any time a new image is opened, and the option should remain selected (or unselected) whenever QuPath is restarted. I also created a [FAQs section in the Wiki](https://github.com/qupath/qupath/wiki/FAQs) to link to this answer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/36#issuecomment-268792433:9,release,release,9,https://qupath.github.io,https://github.com/qupath/qupath/issues/36#issuecomment-268792433,2,"['release', 'update']","['release', 'updated']"
Deployability,"The problem may be that the file format you are using results in a large black region that is probably confusing the dearrayer threshold. If you try in v0.2.0-m2 you may find that this background not included and the problem is resolved. If so, it should work in the next release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/329#issuecomment-500507167:272,release,release,272,https://qupath.github.io,https://github.com/qupath/qupath/issues/329#issuecomment-500507167,1,['release'],['release']
Deployability,"The reason I chose the more general 'Object classification' is thinking about the future. Even though the existing commends mostly focus on object classification for detections only, future commands might not be. And extensions might add commands to classify in a different way. For example, here's a script that adds a basic command to classify annotations based on the shape of the ROI:; ```groovy; import javafx.application.Platform; import javafx.scene.control.MenuItem; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.dialogs.Dialogs; import qupath.lib.objects.PathObject; import qupath.lib.objects.classes.PathClass. commandName = ""Classify annotations"". Platform.runLater {; installCommand(); Dialogs.showInfoNotification(commandName, ""Command installed!""); }. def installCommand() {; def menu = QuPathGUI.getInstance().getMenu(""Classify > Object classification"", false); def mi = menu.getItems(); .stream(); .filter(m -> commandName.equals(m.getText())); .findAny().orElse(null); if (mi == null) {; mi = new MenuItem(commandName); menu.getItems().add(mi); }; mi.setOnAction {e -> classifyAnnotations()}; }. def classifyAnnotations() {; def imageData = QuPathGUI.getInstance().getImageData(); def annotations = imageData == null ? [] : imageData.getHierarchy().getAnnotationObjects(); if (annotations.isEmpty()) {; Dialogs.showWarningNotification(""Classify annotations"", ""No annotations found!""); return; }; for (def annotation in annotations); classifySingleAnnotation(annotation); imageData.getHierarchy().fireObjectClassificationsChangedEvent(this, annotations); }. def classifySingleAnnotation(PathObject pathObject) {; def roiName = pathObject.getROI()?.getRoiName(); pathObject.setPathClass(PathClass.getInstance(roiName)); }; ```. I think it makes sense for such classifiers to be added to a single *Object classification* submenu, rather than split between *Detection* and *Annotation* (also, there might one day be a need to classify *TMA cores*, which don't fit into either cat",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2075386110:689,install,installCommand,689,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2075386110,6,['install'],"['installCommand', 'installed']"
Deployability,"The safest way is probably to use Docker or something similiar. ons. 22. sep. 2021, 17:38 skrev Pete ***@***.***>:. > Ah ok, then I'm afraid I have no idea and no way to reproduce the problem.; > It is working for me on all my test systems (but I haven't got CentOS; > installed anywhere).; >; > I can't see any obvious clues to a problem within QuPath's code from the; > error. The versions of Java, JavaFX and jpackage have been updated for; > v0.3.0, not sure if that is related.; >; > One option would be to try building from source; > <https://qupath.readthedocs.io/en/stable/docs/reference/building.html>; > using a different JDK, or launch using ./gradlew run (which would skip; > the jpackage part).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/825#issuecomment-925047351>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AH7WSL62XZNUGJTSADEHNB3UDHZ6HANCNFSM5ERSPAHA>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825#issuecomment-925051403:269,install,installed,269,https://qupath.github.io,https://github.com/qupath/qupath/issues/825#issuecomment-925051403,2,"['install', 'update']","['installed', 'updated']"
Deployability,"The setting doesn't exist in v0.1.2, and this version will not be updated further. Even if you do not wish to switch to v0.2.0 yet (while it is still unstable/regularly changing, and not backwards compatible with v0.1.2) I would be interested to know if the issue remains there or if it has already been resolved by one of the changes in the new version.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/393#issuecomment-576193690:66,update,updated,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576193690,1,['update'],['updated']
Deployability,"The stardist extension hasn't been updated for QuPath 0.6 yet. I'd suggest one of these three options:. 1. Test stardist using QuPath 0.5.1; 2. Build the latest stardist extension from source, ideally this branch: https://github.com/qupath/qupath-extension-stardist/pull/36; 3. Use the Jar file attached below in QuPath 0.6.0-rc1. [qupath-extension-stardist-0.6.0-SNAPSHOT.zip](https://github.com/user-attachments/files/16977870/qupath-extension-stardist-0.6.0-SNAPSHOT.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635#issuecomment-2345968313:35,update,updated,35,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635#issuecomment-2345968313,1,['update'],['updated']
Deployability,"The test isn't perfect, it might fail sometimes because the JVM may not be able to release the memory in time for whatever reason. The fact that it passes most of the time is OK. So that works. However, the base load for ""internal"" memory seems to be around 640 MB, which sounds big to me, it's typically less than 100 MB, but maybe that's normal for Rosetta, not sure...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066:83,release,release,83,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1024146066,1,['release'],['release']
Deployability,"The third option listed above is now integrated, and locale information is added to `.qpdata` files. This has been done in a way that should not break compatibility with any existing saved files. Testing involved varying the locale using commands such as those below (one at a time):. ``` groovy; Locale.setDefault(Locale.UK);; Locale.setDefault(Locale.GERMAN);; Locale.setDefault(Locale.JAPAN);; Locale.setDefault(Locale.CHINA);; ```. ...and then testing whether files written with one locale could then be read using another. This appears to be working, but further insights and bug-reports relating to location-specific issues would be welcome. The fix will be included in `v0.0.5`. (Note: I could conceive of trouble with `ClassNotFoundExceptions` in the event of attempting to deserialize a `.qpdata` file where the saved `Locale` is not available... however it's not clear to me whether this could or would ever actually happen. In the even that it does, QuPath should default to not changing the locale at all - and so would still have a reasonable chance of succeeding.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/18#issuecomment-258824636:37,integrat,integrated,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/18#issuecomment-258824636,2,['integrat'],['integrated']
Deployability,"The updates required for Java 16 were more substantial than I'd hoped... this is my first attempt. It relates to:; * https://github.com/qupath/qupath/issues/615; * https://github.com/qupath/qupath/pull/639; * https://github.com/qupath/qupath/pull/640. I'm not entirely satisfied with the outcome, particularly in dropping the version number and whether this will cause Windows installation pains for any update, but I don't have more time to grapple with it at the moment. And continuing to rely on Java 14 for the next release seems worse. Feedback / suggestions welcome :). @EgorBushmelev @yli-hallila @anotherBunchOfAtoms @ertugrulcetin @juliangilbey @ajay1685 @melvingelbard",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685#issuecomment-803035454:4,update,updates,4,https://qupath.github.io,https://github.com/qupath/qupath/pull/685#issuecomment-803035454,4,"['install', 'release', 'update']","['installation', 'release', 'update', 'updates']"
Deployability,"There appears to be a problem reading some images (at least ```.mrxs``` images) on macOS. This appears to trace back to the version of ```gdk-pixbuf``` currently included with the QuPath binaries on Mac. If I link to a more recent version (```gdk-pixbuf 2.36```) on my local machine the same images can be opened fine. Therefore there is a need to update the OpenSlide binaries (including dependencies) that are distributed with QuPath. Doing this in a transferable ways seems a fairly involved process, so it may take some time.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/23:348,update,update,348,https://qupath.github.io,https://github.com/qupath/qupath/issues/23,1,['update'],['update']
Deployability,"There is indeed a need to install the redistributables on Windows, as far as I know - it's mentioned [here](https://github.com/qupath/qupath/wiki/Supported-image-formats#zeiss-czi). But the Mac trouble suggests it's something else. I know that the support for CZI in QuPath using the Bio-Formats is pretty varied. Sometimes it works, but I've learned of cases recently where it doesn't. I think TMAs (with lots of scenes?) are especially troublesome. I have spotted a few ways to fix the QuPath Bio-Formats extension that I believe will help, and I hope to have these changes made by the middle/end of next week, and I'll write another update here. Hopefully they will fix the issue with your files, but if not then I will investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-357022776:26,install,install,26,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-357022776,4,"['install', 'update']","['install', 'update']"
Deployability,"There is no issue with QuPath-0.2.3 from the GitHub releases. When I build from dev-0.3.0 branch using jdk-15.0.0.36-hotspot, it does not correctly set the memory from the help menu. The config file for 0.2.3 looks like this:; Before setting memory; ```; [JavaOptions]; -XX:MaxRAMPercentage=50; ```; After setting memory to 50gb, and it works fine.; ```; [JavaOptions]; -Xmx51200M; ```. With the dev-0.3.0 and jdk-15.0.0.36-hotspot; Before setting memory:; ```; [JavaOptions]; java-options=-XX:MaxRAMPercentage=50; ```; After setting memory to 45gb; ```; [JavaOptions]; -Xmx46080M; ```; ""java-options="" is missing after setting the memory and QuPath fails to set the correct memory (and defaults to 16gb on my system)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/640#issuecomment-727047100:52,release,releases,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/640#issuecomment-727047100,1,['release'],['releases']
Deployability,"There is some information [here](https://github.com/qupath/qupath/blob/076fb69112b22a299e70819b5af31bd469e47e8a/src/main/resources/eclipse/README.md) about how to set things up in eclipse. You should be able to run in debug mode then. You will probably need to set ```-Xmx``` in your debug configuration, since the maximum memory settings chosen in the GUI won't take effect when run from within eclipse.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65#issuecomment-297603658:290,configurat,configuration,290,https://qupath.github.io,https://github.com/qupath/qupath/issues/65#issuecomment-297603658,1,['configurat'],['configuration']
Deployability,"There should be a variety of ways to do this in a script. One would be selecting each annotation in turn using getAnnotationObjects() and looping through them. For each annotation you generate your detections, output detections, then clear detections.; Another way could be to use a loop to a classification for each annotation (Class1, Class2, etc) and then you will end up with one data file, but the detection entries would be easily separable based on the classification column.; In version 1.3, there is a column that names the parent annotation for each detection, which could also be used to select certain detections without creating a classification.; Version 1.3 installation instructions (it is a test version!) can be found here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/225#issuecomment-427051030:673,install,installation,673,https://qupath.github.io,https://github.com/qupath/qupath/issues/225#issuecomment-427051030,4,"['install', 'update']","['installation', 'updates']"
Deployability,"There shouldn't be any need to pass `z` and `t` as separate parameters to `splitRegionRequests` - rather `fullRequest` can be updated to include these, which would be good to reduce the number of necessary `int` parameters. Sorry, I don't really have the bandwidth to look at this in detail or handle pull requests in the near future, so this is likely to linger for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-740743550:126,update,updated,126,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740743550,1,['update'],['updated']
Deployability,There's a new Bio-Formats extension now [here](https://github.com/qupath/qupath-bioformats-extension/releases/tag/v0.0.4). It may help with the CZI files.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/135#issuecomment-358722518:101,release,releases,101,https://qupath.github.io,https://github.com/qupath/qupath/issues/135#issuecomment-358722518,1,['release'],['releases']
Deployability,"These changes from @melvingelbard update the way the points are saved/loaded, which makes them more portable and can retain the classification: https://github.com/petebankhead/qupath/pull/42",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/410#issuecomment-600574775:34,update,update,34,https://qupath.github.io,https://github.com/qupath/qupath/issues/410#issuecomment-600574775,1,['update'],['update']
Deployability,"These didn't work; ________________________________; From: MicroscopyRA ***@***.***>; Sent: Monday, November 1, 2021 8:16 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. It was never stated, but I assume the basics were tried? Redownload the program, and try installing some other open source software to make sure it is not a general installer issue?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956184479&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=SQhV_0ba6-7CvI8ayoIH4C76t0aAhahDS5S6wo8_DVs&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4BQLF57LQWGJAMJIODUJ2AJTANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=-ILDS4gaU5QrQMsdAA9GOM2cBaKGlpT-Np_xIm64a8U&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=01Hiwb5cDlsaeZ2DtiU2NgPOzL5Jk9Nw-SGVwQDHzHE&e=> or Android<https://urldefense.proofpoint.com/v2/url?u=https-3A__play.google.com_store_apps_details-3Fid-3Dcom.github.android-26referrer-3Dutm-5Fcampaign-253Dnotification-2Demail-2526utm-5Fmedium-253Demail-2526utm-5Fsource-253Dgithub&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=HXeuH-KUjar7qGp_w-mGBuRDn_saVOZdgqhjExQSLxI&s=mJkWY6TXlFplGt0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956212704:246,install,installation,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956212704,3,['install'],"['installation', 'installer', 'installing']"
Deployability,"These will likely cause some problems:; * Any JavaFX from 20.0.1 onwards breaks (javascript) search links within javadocs - at least when accessing javadocs from within a .jar; * Deep Java Library has probably broken the approach previously used to test if an `Engine` is available before attempting to download it. Nevertheless, we don't want to be stuck on old dependencies - so merging early in the path towards v0.6.0 will hopefully give us time to find fixes/workarounds. This commit also updates the pref name to have the correct QuPath version.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1496:494,update,updates,494,https://qupath.github.io,https://github.com/qupath/qupath/pull/1496,1,['update'],['updates']
Deployability,"They use the standard Java Preferences API so for Windows that is (I believe) the registry.; In the future (and on my build-able fork), classifications will also be maintained in .qpproj files to make it easier to switch between different lists: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-454705287:302,update,updates,302,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-454705287,1,['update'],['updates']
Deployability,"This PR attempts to fix #1459. I **replicated** the issue by:; * Creating and opening a project containing `LuCa-7color_[13860,52919]_1x1component_data.tif` (refered as `A`) and `LuCa-7color_[17572,60173]_3x3component_data.tif` (refered as `B`), two different images but with the same channels.; * Opening `A`.; * Opening the brightness & contrast dialog. The histogram of `A` is displayed.; * Opening `B` while keeping the brightness & contrast dialog open. The histogram of `A` is still displayed. **The issue** comes from the fact that in [ImageDisplay](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java), the function [setImageData()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L202) is called when an image is open in QuPath. This function calls the `updateChannelOptions()` function and then the `updateHistogramMap()` function (see [here](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L228C4-L228C24)):; * `updateChannelOptions()` updates the [channelOptions](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L504) variable. It's an ObservableValue and, because of listeners, the [BrightnessContrastHistogramPane.updateHistogram()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.java#L162C17-L162C32) function is called. This is the function responsible for displaying the histogram.; * `updateHistogramMap()` updates the `histogramManager` variable. This variable is responsible for providing the histogram values. So the problem is that the function displaying the histogram can be called before the function updatin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1462:915,update,updateChannelOptions,915,https://qupath.github.io,https://github.com/qupath/qupath/pull/1462,2,['update'],"['updateChannelOptions', 'updateHistogramMap']"
Deployability,"This adds support to add custom styles by adding .css files to the a css subdirectory inside the user directory (which is where extensions go, usually at ~/QuPath/v0.4/ or similar). If the custom css directory exists, a `WatchService` is created to check for changes. This means that users can add/remove/modify .css files in the directory, and see live updates (albeit with some seconds of delay, at least on macOS). To make this work, the PreferencePane needed to be updated to directly use any ObservableList with combo boxes. A new `PathPrefs.getCssStylesPath()` was also added. Additionally, `IconFactory.DuplicableGlyph` was improved to allow glyphs to respond to the `-fx-text-fill` property, and this in turn means that the toolbar icons can now be styled by css (rather than being fixed to a neutral gray). Finally, main.css was introduced to enable more QuPath-specific styling, even when using the default modena.css with JavaFX. This is particularly relevant for defining several colors reused by the script editor. ----. Examples of some minimal (not necessarily pleasing) css files and their impact:. ### Blue. ```css; .root {; -fx-base: rgb(30, 28, 75);; -fx-light-text-color: rgb(200, 200, 255);; -fx-background: derive(-fx-base, -10%);; -fx-control-inner-background: derive(-fx-base, 10%);; }; ```. ![blue](https://user-images.githubusercontent.com/4690904/192768467-440d75fc-2611-415d-b1ba-7009d7399c13.png). ### Red. ```css; .root {; -fx-base: rgb(130, 28, 25);; -fx-light-text-color: white;; -fx-background: derive(-fx-base, -10%);; -fx-control-inner-background: derive(-fx-base, -10%);; }; ```. ![red](https://user-images.githubusercontent.com/4690904/192768409-c2d38a7b-c1b0-49bd-9324-38b971833707.png)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1063:354,update,updates,354,https://qupath.github.io,https://github.com/qupath/qupath/pull/1063,2,['update'],"['updated', 'updates']"
Deployability,"This appears to be working perfectly, thank you! I haven't done much testing yet either, and I will update if something goes awry.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/256#issuecomment-455695541:100,update,update,100,https://qupath.github.io,https://github.com/qupath/qupath/issues/256#issuecomment-455695541,1,['update'],['update']
Deployability,"This avoids the need to create a custom launch script as described at https://github.com/qupath/qupath/issues/628. While still not ideal, it gives an alternative way to avoid using system shared libraries with OpenSlide - which is known to be problematic because of pixman issues on Ubuntu LTS releases (including 20.04). This works by including a bash script in the jpackage image generated for Linux by default. It also works with; `./gradlew run -Pld-path=true`; and with; `./gradlew installDist -Pld-path=true`",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/783:294,release,releases,294,https://qupath.github.io,https://github.com/qupath/qupath/pull/783,2,"['install', 'release']","['installDist', 'releases']"
Deployability,"This enable `ObjectMerger` and `OverlapFixer` to implement the same interface, and means they can easily be applied sequentially. Then the `PixelProcessor` class was updated to support an `ObjectProcessor` to handle detections made across tiles, rather than an `ObjectMerger` - since that gives more flexibility in dealing with the output.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1621:166,update,updated,166,https://qupath.github.io,https://github.com/qupath/qupath/pull/1621,1,['update'],['updated']
Deployability,"This enables users to sort objects in the annotation/TMA core grid view by their classification. Previously it was only possible to sort by numeric measurements. Additionally, add a dropdown menu enabling users to toggle which classes of object are displayed in the grid view. ![A TMA core grid view showing only Tumor and Stroma cores, ignoring Unclassified cores, sorted by core name.](https://github.com/user-attachments/assets/7cd9b934-1235-47e8-b0b2-411f50ea376f); ![A TMA core grid view showing only Tumor and Stroma cores, ignoring Unclassified cores, sorted by classification.](https://github.com/user-attachments/assets/01789a52-a5ca-41ef-8f01-a354ac4beff3); ![A TMA core grid view showing only Tumor cores, ignoring Unclassified and Stroma cores.](https://github.com/user-attachments/assets/85fb40e9-807e-451b-b087-6de2ef8c7081)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1588:214,toggle,toggle,214,https://qupath.github.io,https://github.com/qupath/qupath/pull/1588,1,['toggle'],['toggle']
Deployability,"This has been much improved in [v0.0.4](https://github.com/qupath/qupath/releases/tag/v0.0.4), with the addition of [connection groups](https://github.com/qupath/qupath/tree/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-core-processing/src/main/java/qupath/lib/objects) - which enable Delaunay computations to be separated from [display](https://github.com/qupath/qupath/blob/61a382e1e345e671b3fde32da08e03f08f4f7bcf/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/PathHierarchyPaintingHelper.java#L716). Nevertheless, the design will continue to be refined and shouldn't be relied upon yet...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/7#issuecomment-256326873:73,release,releases,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/7#issuecomment-256326873,1,['release'],['releases']
Deployability,"This includes Bio-Formats 6.9.0 for further testing. It still has an issue with some svs files, but adds dicom support - both should be documented if this remains in the next release. It also includes JavaFX 18, which fixes a bug that meant selecting all entries in a large table (e.g. a detection measurement table) was unusably slow.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/946:175,release,release,175,https://qupath.github.io,https://github.com/qupath/qupath/pull/946,1,['release'],['release']
Deployability,"This involves several changes:; - Use toolchain rather than target version.; - This is required because Gradle can't currently be run using Java 16, and so the build script needs to be called using a different Java version than the one used to build QuPath. If Java 16 isn't available, Gradle will download it.; - Strip the version number from the application name.; - This is required to avoid package failures due to the .cfg file name being different. *Unfortunately, this may cause problems for users wanting multiple versions installed simultaneously.* The workaround is to rename/use the .zip installations on Windows.; - Explicitly specify the java.library.path to be $APPDIR; - This is required to load OpenSlide/JPen. The library path was previously set automatically by jpackage in Java 14 (but not 15).; - Explicitly use java-options in the cfg file when changing the memory settings; - Avoid setting the version on macOS; - Sadly, we cannot start a version number with 0. These changes should also address the issues that arose when building QuPath v0.2 with Java 14: https://github.com/qupath/qupath/issues/615. Several other changes were made:; - Update gradlew; - JavaCPP now uses platform plugin for better dependency management; - Guava version updated; - License report plugin updated; - include jdk.jsobject",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685:531,install,installed,531,https://qupath.github.io,https://github.com/qupath/qupath/pull/685,5,"['Update', 'install', 'update']","['Update', 'installations', 'installed', 'updated']"
Deployability,"This is a fairly major change to incorporate IDs for objects. The purpose is to make it much easier to match up objects whenever some further analysis is done elsewhere (e.g. classification or clustering in Python). I've attempted to ensure both forwards and backwards compatibility by storing the ID in the metadata map. This is somewhat inefficient, but means that data files can be reopened in earlier QuPath versions. A future QuPath release might change this to a more efficient representation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/959:438,release,release,438,https://qupath.github.io,https://github.com/qupath/qupath/pull/959,1,['release'],['release']
Deployability,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495874974:209,install,installation,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974,1,['install'],['installation']
Deployability,"This is intended, even if it's not optimal. And because it could be better, it will change in the next version:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#classification-lists-are-stored-in-projects. ### Current situation (v0.1.2) & planned changes; Currently, the class list is saved in the preferences - and not any individual project or data file. In the next release, I plan that the class list will be saved in the preferences as _also_ in the project. Furthermore, it will be possible to import class lists from different projects. I hadn't realised when I was writing it at first how long or complex the class lists would become... and I understand that losing a long list can be very frustrating. ### The class list & object classes in the image; The classes actually applied in the image _don't_ need to correspond to the class list. The purpose of the class list is only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/243#issuecomment-437784159:169,update,updates,169,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159,4,"['release', 'update']","['release', 'updates']"
Deployability,"This is not really an existing issue since I solve it but I faced the problem. In addition to drag and drop `bioformats_package.jar` and `qupath-extension-bioformats.jar`, opening the CZI files will also require to install **Visual C++ Redistributable for Visual Studio 2015** (you can find it here [https://www.microsoft.com/en-us/download/details.aspx?id=48145](https://www.microsoft.com/en-us/download/details.aspx?id=48145) ) for Microsoft Windows.; It's something I missed and made the usage of bioformat to open CZI hectic (works on some computer where Visual C++ was installed but not where it was not installed.; See https://www.openmicroscopy.org/site/support/bio-formats5.3/formats/zeiss-czi.html for the bioformat documentation. It would be useful to add this information to the documentation. Thanks again for this very nice software!; Benjamin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/43:215,install,install,215,https://qupath.github.io,https://github.com/qupath/qupath/issues/43,3,['install'],"['install', 'installed']"
Deployability,"This is the approach I use now. And it works great. I guess that if you want the line or polyline to do the same then you would need to define the start and end of the line and say that (-) is always to the right and (+) is always to the left from the perspective of the line itself. However, you will loose the expansion in both direction unless a third option expand from line is added (might be useful anyway for cases when you want a ring around the outer border of an object). Perhaps I will try to approach this at some point in time. If I am able to upgrade my poor java skills....",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430146028:557,upgrade,upgrade,557,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430146028,1,['upgrade'],['upgrade']
Deployability,"This isn't actually a bug... showing/hiding the names is an `overlay option`. These are not global, and none are persistent. They are like showing/hiding detections or annotations, which are also not persistent. There is probably an argument for making them persistent, but this gets tricky because multiple non-identical instances of [OverlayOptions](https://github.com/qupath/qupath/blob/42cedef3d9252f974f77d2af6d3d3445081406c9/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/OverlayOptions.java) can exist - in which case QuPath would need to distinguish between which options are persistent and which aren't. This would be doable, but would take a bit of thought. I don't really want to introduce several more persistent preferences at this stage, immediately before the stable release, when the current behavior is not actually buggy.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/499#issuecomment-632624472:785,release,release,785,https://qupath.github.io,https://github.com/qupath/qupath/issues/499#issuecomment-632624472,1,['release'],['release']
Deployability,"This isn't really a bug, and is already covered in the documentation: https://qupath.readthedocs.io/en/0.4/docs/intro/installation.html#macos",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1228#issuecomment-1420795098:118,install,installation,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/1228#issuecomment-1420795098,1,['install'],['installation']
Deployability,This issue is hopefully now resolved in [v0.0.6](https://github.com/qupath/qupath-bioformats-extension/releases).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/164#issuecomment-383477860:103,release,releases,103,https://qupath.github.io,https://github.com/qupath/qupath/issues/164#issuecomment-383477860,1,['release'],['releases']
Deployability,"This issue is not yet resolved (i.e. script recording of annotation export still needs to be implemented), but there is one relevant update in [v0.1.1](https://github.com/qupath/qupath/releases/tag/v0.1.1). It's now possible to request, and then fire, a [JavaFX MenuItem](http://docs.oracle.com/javase/8/javafx/api/javafx/scene/control/MenuItem.html) from the main QuPath GUI if required. This [gist](https://gist.github.com/petebankhead/c19186a30707b5c51aa5a8a9c0d2c6b1) shows the (not entirely obvious) steps involved - maybe it's useful as a workaround for now, for anyone in need of the ability to do run arbitrary commands from the menus.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/25#issuecomment-265210130:133,update,update,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/25#issuecomment-265210130,2,"['release', 'update']","['releases', 'update']"
Deployability,"This issue represents a feature request to somehow get QuPath and CellProfiler to talk to one another (arising from #122). One idea for the potential workflow is this:; * Open an image or project in QuPath; * Chop up either entire images or annotated regions into CellProfiler-friendly image tiles; * Launch CellProfiler analysis from a command line, passing a CP pipeline and the image tiles; * Bring the results back into QuPath for visualization (?). The first parts should be possible to handle on the QuPath side with the addition of a (relatively) straightforward Groovy script*. The last bit is trickier. I am not sure if it is needed in general or, if it is, what kind of data needs to be brought back... and how standardized would it be?. Ideas and comments would be welcome. _*- To begin with. The script could become a built-in extension later, to achieve better user-friendliness._",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/123:364,pipeline,pipeline,364,https://qupath.github.io,https://github.com/qupath/qupath/issues/123,1,['pipeline'],['pipeline']
Deployability,"This looks like a simple bug, albeit one that has existed for some months at least - weirdly without being reported before. Should be fixed in the next minor release, but I first need to check it in more detail.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/518#issuecomment-640758278:158,release,release,158,https://qupath.github.io,https://github.com/qupath/qupath/issues/518#issuecomment-640758278,2,['release'],['release']
Deployability,"This looks like a small typo in the original code (calling `getInteger` instead of `parseInt`), which should be easily fixed in the next QuPath release. The relevant bit of the code is [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core-processing/src/main/java/qupath/lib/io/PointIO.java#L207). If you need a temporary workaround, that bit could be extracted into a separate Groovy script with the fix. If you just save the `.qpdata` file (the standard file format with QuPath, also used within projects), then all the points should be retained with the appropriate color/name/classification... so the problem should only affect points that have been manually exported/imported. I've never had much call to reimport exported points (and so didn't notice the bug)... is there a particular workflow where this is important?. An alternative workaround might be to use the 'name' for the points, and then write a script to assign all your reimported points a color or classification based upon their name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/218#issuecomment-420276787:144,release,release,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/218#issuecomment-420276787,1,['release'],['release']
Deployability,"This looks magnificent! It should make new releases so much less painful. Can't think of any other requests, unless you want to see a better way to handle javadocs: https://github.com/qupath/javadoc. But I've tended to just update javadocs for v0.x.0 releases, since the API shouldn't change substantially and so it's rather less important.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464#issuecomment-1943720304:43,release,releases,43,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464#issuecomment-1943720304,3,"['release', 'update']","['releases', 'update']"
Deployability,"This looks really good, thanks. I've added one small commit to handle ARGB conversion. Initially, when I converted `CMU-1.svs` to `ome.zarr` I was unable to read it again. This was because `BioFormatsImageServer` recognized that the image should be RGB, and therefore created an `ARGB` `ColorModel` (compatible with a packed int representation). But `OMEPixelParser` created an incompatible `BufferedImage` because it received byte arrays, and didn't previously convert to packed int. The reason that QuPath converts *all* (A)RGB images to a packed int representation is somewhat historical, and because I believe this is more optimized in Java's rendering pipeline. It's possible that this belief is out-of-date though, and we should profile one day to check: perhaps ARGB conversion is no longer required.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1641#issuecomment-2353587248:657,pipeline,pipeline,657,https://qupath.github.io,https://github.com/qupath/qupath/pull/1641#issuecomment-2353587248,1,['pipeline'],['pipeline']
Deployability,"This makes it possible to have more informative messages during processing, so that the user knows what is happening along the way (e.g. 'Detecting', 'Processing', 'Measuring'). PixelProcessor updated to use this to record the number of tiles being processed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1650:193,update,updated,193,https://qupath.github.io,https://github.com/qupath/qupath/pull/1650,1,['update'],['updated']
Deployability,"This may well be because of the image format, or QuPath might be having trouble for some other reason (not enough memory?). If you choose *View &rarr; Show log* does anything informative appear?. It may also be beneficial to update your version of Bio-Formats, if you have not already done so. I see on the [changelog for version 5.4.0](http://www.openmicroscopy.org/site/support/bio-formats5.4/about/whats-new.html) there is a mention of improved performance of large, uncompressed CZI files. Is exporting as CZI an option?. Currently, QuPath works best for images that are small enough to handle directly, or large whole slide images stored in a tiled, pyramidal format of some kind.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/69#issuecomment-298743270:225,update,update,225,https://qupath.github.io,https://github.com/qupath/qupath/issues/69#issuecomment-298743270,1,['update'],['update']
Deployability,"This problem should be fixed in the next release, alongside a few other changes to help give more control over performance-related options.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145#issuecomment-363923313:41,release,release,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/145#issuecomment-363923313,1,['release'],['release']
Deployability,"This pull request lets a user pass not only a Groovy script name via the qupath-console command line arguments, but also the script's arguments via a `-a` or `--args` option followed by quoted string. This string is then split on whitespace into a list of strings (unless a block is surrounded by \\"" \\"" escaped quotes) and passed to the Groovy interpreter as the global variable args. When no arguments are passed to a script, the global variable args is an empty list. With this change, the integrated script editor / interpreter also gets an empty, global args variable. I explained in https://forum.image.sc/t/using-command-line-parameters-with-a-groovy-script-in-qupath/45949/4 why this is desirable. Feel free to merge this pull request, or to adapt the idea, *any way you wish*.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647:494,integrat,integrated,494,https://qupath.github.io,https://github.com/qupath/qupath/pull/647,1,['integrat'],['integrated']
Deployability,"This relates to https://github.com/qupath/qupath/issues/1634. Because CUDA detection and PyTorch downloading is all performed by DeepJavaLibrary, we are very limited in what we can do on the QuPath side. Then there is the issue of how Java loads native library dependencies - and especially the platform-specific fun of how *sub*-dependencies are handled. And the potential interference of environment variables or other things that could be installed. It is, in short, hard. The page on the docs is currently our best 'general' approach to help with this, based on many hours trying to find something workable across computers: https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#gpu-support. We will continue to try to improve this, but I'll close the issue because I don't think there is any clearly-defined QuPath bug here that we can address. To try to avoid fragmenting the discussion in multiple places, I suggest posting on the forum. There are more users active on the forum who might potentially be able to help from their own experience, and there are already some related discussions, e.g. https://forum.image.sc/search?q=qupath%20gpu%20order%3Alatest",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057:442,install,installed,442,https://qupath.github.io,https://github.com/qupath/qupath/issues/1636#issuecomment-2346013057,2,['install'],['installed']
Deployability,"This script may be useful as a workaround, but I haven't checked if it has any unwelcome side-effects. The bug will need fixed in a later release.; ```groovy; def hierarchy = getCurrentHierarchy(); hierarchy.clearTMAGrid(); hierarchy.tmaGrid = null; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/646#issuecomment-734918607:138,release,release,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/646#issuecomment-734918607,2,['release'],['release']
Deployability,"This seems likely to be a bug in the image reading library (OpenSlide or Bio-Formats - you can tell which is used under the 'Image' tab by looking at the server type), or perhaps a non-standard representation of the pyramidal levels within the converted TIFF image. In general, it should be possible to work directly from the .ndpi image in QuPath. Because there are all sorts of (supposedly) pyramidal TIFFs in the wild, I really don't know what kind your conversion has produced. In any case, QuPath does not contain its own image readers, and therefore it is unlikely the issue can be resolved within QuPath alone. Also, v0.1.2 will not be further updated - so the first thing to do would be to check if the error persists in the latest milestone release (currently v0.2.0-m8). Depending upon the image reader used, you might want to report it as a Bio-Formats or OpenSlide issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/386#issuecomment-566096742:651,update,updated,651,https://qupath.github.io,https://github.com/qupath/qupath/issues/386#issuecomment-566096742,2,"['release', 'update']","['release', 'updated']"
Deployability,"This set of three patches fixes #648, fixes #649 and fixes #650.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/651:18,patch,patches,18,https://qupath.github.io,https://github.com/qupath/qupath/pull/651,1,['patch'],['patches']
Deployability,This should be address in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) (and earlier milestones).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/110#issuecomment-514596348:71,release,releases,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/110#issuecomment-514596348,1,['release'],['releases']
Deployability,This should be addressed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) (and earlier milestones).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/74#issuecomment-514596506:73,release,releases,73,https://qupath.github.io,https://github.com/qupath/qupath/issues/74#issuecomment-514596506,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it isn't!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/292#issuecomment-514591501:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/292#issuecomment-514591501,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3) - please reopen if it turns out not to be!,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/298#issuecomment-514590532:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/298#issuecomment-514590532,1,['release'],['releases']
Deployability,This should be fixed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3).; Please reopen this issue if problems arise.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/326#issuecomment-514593645:69,release,releases,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/326#issuecomment-514593645,1,['release'],['releases']
Deployability,This should be fixed in the latest milestone release https://github.com/qupath/qupath/commit/6be3e55afa7e36cb3543ee3c06df56209ee913d1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-471151818:45,release,release,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-471151818,1,['release'],['release']
Deployability,"This should be fixed now in the next release, so that the visibility of an object is used to determine whether it is sent to ImageJ or not. This also includes whether cells are shown with their boundaries and/or nuclei. Regarding converting to ImageJ selections, that should already happen. It should already be the case that the objects are sent as ImageJ Rois on top of an ImageJ overlay - so you can either remove the overlay, or send its Rois to the ROI manager. If you do the latter, you should also see that the names of the Rois have also been set according to their names/classifications within QuPath. Also, the 'primary' selected object (i.e. the one that was currently active whenever the _Extract region to ImageJ_ command was run) should automatically be converted to an ImageJ Roi and set as the active selection in ImageJ - _unless_ it was a rectangle. There isn't really so much point in sending rectangles Rois, since they will simply occupy the whole image (and can easily be recreated in ImageJ if necessary with _Edit &rarr; Selection &rarr; Select All_) - but all non-rectangles should be transferred, as shown below. Hopefully that works well enough to be suitably heroic... ![ij_screenshot](https://cloud.githubusercontent.com/assets/4690904/19360208/7cf2f31c-9175-11e6-9a60-b8878b6e7543.jpg)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/5#issuecomment-253588979:37,release,release,37,https://qupath.github.io,https://github.com/qupath/qupath/issues/5#issuecomment-253588979,2,['release'],['release']
Deployability,This should be improved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) but isn't fully resolved... so the issue remains.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/345#issuecomment-549052690:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/345#issuecomment-549052690,1,['release'],['releases']
Deployability,"This should be improved in the next QuPath release (v0.4.0) - and I've marked `isEditable()` as deprecated, with a note that it now just returns the opposite of `isLocked()`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1021#issuecomment-1287130611:43,release,release,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1021#issuecomment-1287130611,1,['release'],['release']
Deployability,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - if not please feel free to reopen the issue.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/358#issuecomment-549052324:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/358#issuecomment-549052324,1,['release'],['releases']
Deployability,This should be resolved in [v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) - please reopen if you find it isn't.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/359#issuecomment-549052239:72,release,releases,72,https://qupath.github.io,https://github.com/qupath/qupath/issues/359#issuecomment-549052239,1,['release'],['releases']
Deployability,"This should have been addressed in [v0.2.0-m3](https://github.com/qupath/qupath/releases/tag/v0.2.0-m3)... but unfortunately it seems it wasn't. There's a 'rotate image' option when importing images, but at some point late fixes appear to have broken this. Targeted again for v0.2.0-m4...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/293#issuecomment-514591068:80,release,releases,80,https://qupath.github.io,https://github.com/qupath/qupath/issues/293#issuecomment-514591068,1,['release'],['releases']
Deployability,This should no longer be the case in the latest milestone releases.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/24#issuecomment-494339173:58,release,releases,58,https://qupath.github.io,https://github.com/qupath/qupath/issues/24#issuecomment-494339173,1,['release'],['releases']
Deployability,This should now be addressed in the latest milestone release: https://github.com/qupath/qupath/releases/tag/v0.2.0-m1,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/244#issuecomment-471152180:53,release,release,53,https://qupath.github.io,https://github.com/qupath/qupath/issues/244#issuecomment-471152180,2,['release'],"['release', 'releases']"
Deployability,"This should now be fixed, and will be included in the upcoming v0.2.2 release.; Please reopen the issue if you find any problem with it.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/549#issuecomment-662331988:70,release,release,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/549#issuecomment-662331988,1,['release'],['release']
Deployability,"This situation is hopefully much improved in v0.0.7. OpenSlide and OpenCV were both recompiled, and I attempted to ensure all non-standard, required dependencies are now included - with an appropriate ```rpath``` setting so that they may find one another. Most of the steps taken are documented under the ['Maven' directory](https://github.com/qupath/qupath/tree/master/maven). The Linux version 0.0.7 was created using Ubuntu 16.04 running through VirtualBox on an iMac. I also tested the compiled QuPath on a clean installation of Fedora 25, also through VirtualBox. Both were able to run QuPath, including commands depending on OpenSlide and OpenCV - although things did run a bit more smoothly on Ubuntu (e.g. the *Brush* tool misbehaved on Fedora). Additionally, the Linux version is created using [OpenJDK](http://openjdk.java.net) and [OpenJFX](http://openjdk.java.net/projects/openjfx/) - as opposed to the [Oracle JDK](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) used for Windows and Mac.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/2#issuecomment-263157251:517,install,installation,517,https://qupath.github.io,https://github.com/qupath/qupath/issues/2#issuecomment-263157251,1,['install'],['installation']
Deployability,"This sounds very interesting! I'm afraid I don't have any immediate insights on the y-offset question... I have not explored .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:655,release,release,655,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['release'],['release']
Deployability,"This update does allow the export to run as expected when saving as ""ome.tif"". It might be useful to have a check/warning prior to attempting to write a file that is too large to a basic .tif. If I attempt the same export to .tif, after a long pause I get:. `WARN: Unable to write image; ERROR: IOException at line 22: Unable to write F:\filepath\Sox2 region_0_annotationLabels.tif! No compatible writer found.`. Oddly enough, I ran into trouble with the new Telerium openjdk not recognizing `gradlew ` when trying to set that up on my new computer, but was able to build and test things out on my old one so... I will look into that later.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515:5,update,update,5,https://qupath.github.io,https://github.com/qupath/qupath/issues/984#issuecomment-1183514515,2,['update'],['update']
Deployability,This was closed automatically when I merged the PR... but I *think* it's fixed. Feel free to reopen if you can replicate it in [v0.5.0-rc2](https://github.com/qupath/qupath/releases/tag/v0.5.0-rc2).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1400#issuecomment-1781795461:173,release,releases,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1400#issuecomment-1781795461,1,['release'],['releases']
Deployability,"This wasn't working for me, but I've updated the PR and also incorporating the architecture into the package name for macOS (since it should then be easier to have x64 and aarch64 installed side-by-side)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1368#issuecomment-1748159654:37,update,updated,37,https://qupath.github.io,https://github.com/qupath/qupath/pull/1368#issuecomment-1748159654,2,"['install', 'update']","['installed', 'updated']"
Deployability,"This would be perfect for our needs!. Integrating it with menu items and other areas of QuPath is perhaps something to think about (is a built-in read-only mode something people want? -- perhaps you want to view a project without making any modifications?). Currently I can disable any (most?) buttons / menu items by using `QuPathGUI.lookupActionByText(...);`, so I personally don't need a more complex implementation.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/699#issuecomment-815541015:38,Integrat,Integrating,38,https://qupath.github.io,https://github.com/qupath/qupath/pull/699#issuecomment-815541015,1,['Integrat'],['Integrating']
Deployability,"To troubleshoot installation issues, including recent Mac issues, see https://qupath.readthedocs.io/en/latest/docs/intro/installation.html. The error you get when building from source is because you need jpackage, as described at https://qupath.readthedocs.io/en/latest/docs/reference/building.html. (Note this won't be necessary for the next release; the build script will change and require JDK 14, which includes jpackage already.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426#issuecomment-606410721:16,install,installation,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/426#issuecomment-606410721,3,"['install', 'release']","['installation', 'release']"
Deployability,"Toolbar, Menu and icon updates",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1315:23,update,updates,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1315,1,['update'],['updates']
Deployability,"Trigger update to location text with any viewer movement, not just a change of downsample factor.; Fixes https://github.com/qupath/qupath/issues/819",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/823:8,update,update,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/823,1,['update'],['update']
Deployability,"True, I will give it some thought and investigate a bit when I return to the tool to update the icon. Left/right would break down for a horizontal line, although that could be resolved. However it's not clear to me what a kind of result a U shape of polyline should produce.... inner/outer is an easier concept there, but returns to closed polygons. But it gets worse when thinking of S shapes... or intersecting polylines. If we can come up with a clear and unambiguous definition for what polyline expansions make sense then we can look at how it might be implemented. Failing that, is there a way that adding extra commands/options could preserve your current approach, but make it more streamlined?. I've also been looking into the ability to transform ROIs to a Java Topology Suite-compatible format, which should give more options for interesting shape transforms and determining spatial relationships... although I don't recall anything in the library directly helpful here.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/228#issuecomment-430150335:85,update,update,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/228#issuecomment-430150335,2,['update'],['update']
Deployability,"True, lambdas are the only incompatibility that has particularly bothered me at times & required adjusting the code, although it's not too tricky: http://groovy-lang.org/differences.html#_lambdas; Other differences (e.g. with `equals` or numbers becoming `BigDecimal` if not explicitly made something else) can be a bit troublesome, but more so when using most Groovy-specific features. Fortunately, it looks like the lambda situation will change with Groovy 3.0: http://groovy-lang.org/releasenotes/groovy-3.0.html. With implementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for di",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:487,release,releasenotes,487,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,2,['release'],['releasenotes']
Deployability,"Trying to run v0.2.0m10 with the Google Cloud Healthcare API extension installed crashes ""silently"" QuPath. This is so because the extension has not been adapted to the new QuPath API, but one needs to look at the logs (or manually run java to get them on the CLI) to figure out. I think we could improve this by:; - Being resilient to extension errors at start time and list problematic ones with suggestions of how to look for help.; - Maybe introducing some sort of protocol for extensions to check if they are compatible with current QuPath (although this likely would add some overhead to extension maintainers). I see this would actually be a ""soft"" restriction asking the user whether to disable an extension or run it at her own risk.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/454:71,install,installed,71,https://qupath.github.io,https://github.com/qupath/qupath/issues/454,1,['install'],['installed']
Deployability,"Turns out it wasn't permissions - thanks for reporting the problem, it should now be fixed in the final release :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/490#issuecomment-631420619:104,release,release,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/490#issuecomment-631420619,1,['release'],['release']
Deployability,"Unable to adjust/set max memory in QuPath, either in 0.1.2 or 0.2.0-m2. Running analysis on cell files fails, does not detect cell direction or anything. This still does work on v 0.1.1 with 0.50GB set... Steps to reproduce the behavior:; 1. Go to Help > Show Setup Options; 2. Change Maximum memory from the default of 1 to any number (computer has 32GB avail); 3. Click Apply; 4. Close QuPath and reopen; 5. Go to Help > Show Setup Options; still shows ""current maximum memory is 0.48GB (v 0.1.2) or 0.50GB (v 0.2.0-m2). **Expected behavior**; Expect Max memory to change to what was set. Installed on a separate computer and Max was set without issue. Verified in 0.2.0-m2 that the .cfg file does change each time, however it still only displays ""0.50GB"". **Screenshots**; ![image](https://user-images.githubusercontent.com/51007080/58358449-cc728580-7e33-11e9-9c66-5ec6cd67bb9a.png). ![image](https://user-images.githubusercontent.com/51007080/58358462-da280b00-7e33-11e9-9897-0bf811ddfa88.png). ![image](https://user-images.githubusercontent.com/51007080/58358468-deecbf00-7e33-11e9-9233-f658233afbcb.png). **Desktop (please complete the following information):**; - OS: Windows 10 Enterprise x64, latest build; - QuPath Version 0.1.2 & 0.2.0-m2. **Additional context**; It's possible this is occurring due to multiple upgrades. This computer looks like it was upgraded from Win 7 to Win 8 to Win 10, or just one of those to Win 10 (inherited support on this one). Also running Leica imaging software. Will most likely try a fresh re-install of the OS at this point to rule that out.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321:591,Install,Installed,591,https://qupath.github.io,https://github.com/qupath/qupath/issues/321,4,"['Install', 'install', 'upgrade']","['Installed', 'install', 'upgraded', 'upgrades']"
Deployability,"Under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? It might be using Bio-Formats or something else. I'm curious as to whether OpenSlide is working for you at all. Also, if you have OpenSlide installed some other way (e.g. with Python), can it read the file?. I know there can also be trouble if there are any non-English characters in the path to the file, but it doesn't look like the case from the log.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371780923:218,install,installed,218,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371780923,1,['install'],['installed']
Deployability,"Unfortunately, I installed the bio-formats extensions and forced QuPath to use Bio-Formats in the preferences, and still got the same behavior (error message rather than opening image file.) If you, or others, have other ideas, I'd love to hear them. . Thanks for the observation about svs files not being all alike. Based on that information, I'll dig more into the format being the problem, and not the size. . Thanks!; Rob",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/240#issuecomment-436386267:17,install,installed,17,https://qupath.github.io,https://github.com/qupath/qupath/issues/240#issuecomment-436386267,1,['install'],['installed']
Deployability,"Unfortunately, though, I don't know how to tell GitHub that this patch should be against dev-0.3 rather than against main. So I'll close this PR and submit a new one.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-795596084:65,patch,patch,65,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-795596084,1,['patch'],['patch']
Deployability,"Uninstalled Java and was able to make a new build from the updated master - and now, (so far) IT WORKS! No seeming memory leakage (system RAM use keeps under 45 GB, not contantly pushing 64 GB like before). Did not add any nThreads() command or anything, so I guess it's your memory trick that did the trick:; ""[...] However I've just made a change that will try to make memory available again sooner: petebankhead@9d2150a; This may or may not help. [...]"". Thanks so much, Pete!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-631299162:59,update,updated,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-631299162,1,['update'],['updated']
Deployability,Update 'Unique ID' to 'Case ID' for TMA cores,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114,1,['Update'],['Update']
Deployability,Update (most of the) UI immediately on locale change,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1230:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1230,1,['Update'],['Update']
Deployability,"Update Bio-Formats, script editor",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/414:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/414,1,['Update'],['Update']
Deployability,Update CHANGELOG.md for v0.5.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1477:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1477,1,['Update'],['Update']
Deployability,Update ConvertCommand,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1630:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1630,1,['Update'],['Update']
Deployability,Update DelaunayTools.java,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1596:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1596,1,['Update'],['Update']
Deployability,Update GitHub actions,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1152:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1152,1,['Update'],['Update']
Deployability,Update Gson and Bio-Formats,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/807:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/807,1,['Update'],['Update']
Deployability,"Update Guava, JTS",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1616:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1616,1,['Update'],['Update']
Deployability,Update IconFactory.java,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1423:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1423,2,['Update'],['Update']
Deployability,Update ImageJ,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1679:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1679,1,['Update'],['Update']
Deployability,Update JavaCPP and OpenCV,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/675:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/675,1,['Update'],['Update']
Deployability,Update JavaCPP dependencies (and more),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/798:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/798,1,['Update'],['Update']
Deployability,Update OpenCV classifiers to use default name,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/760:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/760,1,['Update'],['Update']
Deployability,Update PathObject method names,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1111:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1111,1,['Update'],['Update']
Deployability,Update PixelProcessorUtils.java,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1514:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1514,1,['Update'],['Update']
Deployability,Update PreferencePane.java,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1284:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1284,1,['Update'],['Update']
Deployability,Update README.md,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/672:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/672,2,['Update'],['Update']
Deployability,Update RoiEditor constrain to image,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1534:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1534,1,['Update'],['Update']
Deployability,Update StarDist constrain options,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/539:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/539,1,['Update'],['Update']
Deployability,Update TensorFlow dependency,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/580:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/580,2,['Update'],['Update']
Deployability,Update ViewTrackerControlPane.java,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1316:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1316,1,['Update'],['Update']
Deployability,Update bioformats & readme,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1171:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1171,1,['Update'],['Update']
Deployability,"Update build script, changelog",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1384:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1384,1,['Update'],['Update']
Deployability,Update build.gradle,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1110:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1110,1,['Update'],['Update']
Deployability,Update build.gradle for Java 16,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/685:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/685,1,['Update'],['Update']
Deployability,Update changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/855:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/855,2,['Update'],['Update']
Deployability,"Update changelog, minor OMERO-related fixes",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/703:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/703,1,['Update'],['Update']
Deployability,Update dark mode styling,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1059:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1059,1,['Update'],['Update']
Deployability,Update dark.css,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1056:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1056,2,['Update'],['Update']
Deployability,Update dependencies,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/764:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/764,12,['Update'],['Update']
Deployability,Update dependencies & changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1131:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1131,2,['Update'],['Update']
Deployability,Update dependencies and changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/673:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/673,1,['Update'],['Update']
Deployability,Update dependencies and readme,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1073:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1073,1,['Update'],['Update']
Deployability,"Update dependencies, add DJL model zoo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1529:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1529,1,['Update'],['Update']
Deployability,"Update dependencies, reinstate memoization",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1237:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1237,1,['Update'],['Update']
Deployability,Update djl version,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1168:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1168,1,['Update'],['Update']
Deployability,Update docs paths,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1435:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1435,1,['Update'],['Update']
Deployability,"Update extensions, exclude transitive",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1633:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1633,1,['Update'],['Update']
Deployability,Update for rc1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1632:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1632,1,['Update'],['Update']
Deployability,Update for v0.3.0-rc1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/773:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/773,1,['Update'],['Update']
Deployability,"Update gradle wrapper, JavaFX, build scripts",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/849:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/849,1,['Update'],['Update']
Deployability,"Update gradle wrapper, checksums",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1369:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1369,1,['Update'],['Update']
Deployability,Update gradle-wrapper.properties,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1017:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1017,1,['Update'],['Update']
Deployability,Update image names in both project & server metadata,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/761:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/761,1,['Update'],['Update']
Deployability,Update issue templates,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/575:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/575,2,['Update'],['Update']
Deployability,"Update javadoc links, including in jpackage build",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/813:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/813,1,['Update'],['Update']
Deployability,Update jpackage-mac.yml,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1373:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1373,2,['Update'],['Update']
Deployability,Update jpackage.yml for mac aarch64,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1460:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1460,1,['Update'],['Update']
Deployability,Update jpackage.yml to create all artifacts and draft a release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1464:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1464,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update libs.versions.toml,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1431:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1431,1,['Update'],['Update']
Deployability,Update licenses,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1164:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1164,1,['Update'],['Update']
Deployability,Update location text when navigating with keyboard,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/823:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/823,1,['Update'],['Update']
Deployability,Update log viewer version,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1490:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/1490,1,['Update'],['Update']
Deployability,Update log viewer version to 0.2.0-SNAPSHOT,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1490:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/1490,1,['Update'],['Update']
Deployability,Update logback and gradle wrapper,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/868:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/868,1,['Update'],['Update']
Deployability,"Update logic related to reading/importing images, to try to have fewer errors and more informative messages logged when errors do occur. ## Improve checks for Bio-Formats image support. Throw an exception if unable to read a single pixel from a Bio-Formats image.; Accessing the pixel may introduce some overhead when importing images, but it avoids problems where metadata can be parsed yet the fact the image can't actually be read only becomes apparent later. This was causing trouble with .ndpi on Apple Silicon, because skipping the use of NDPIReader was causing a fallback to a regular TIFF reader... and this didn't recognize the image as pyramidal and couldn't read the pixels. So requesting Bio-Formats for .ndpi was both adding many (~12) images to a project (for the different pyramid levels), and not actually able to open them. Also fix the logic for determining which IFormatReader is used for a specified image. This was previously giving ImageReader rather than the specific reader, and therefore wasn't properly enabling the reader check to be skipped for readers generated in other threads. This also had an extra issue in Apple Silicon, because these checks could cause exceptions regarding unsupported libraries being logged, even if they weren't relevant to the image itself. ## Improve use of json with image servers. Make `JSONImageServerBuilder` genuinely useful by enabling it to read the server.json files stored within projects. This could potentially help in the future if attempting to recover data from a broken project. This involves estimating the ""builderType"" since that wasn't actually serialized within the server.json before. To simplify things in the future, the server.json now serializes the `ImageServer` and not the `ServerBuilder` - so that more information is present.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1402:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1402,1,['Update'],['Update']
Deployability,Update method names in PathObjectHierarchy,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1109:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1109,1,['Update'],['Update']
Deployability,Update multithreading support in BioFormatsImageServer,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/867:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/867,1,['Update'],['Update']
Deployability,Update qupath-fxtras,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1481:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1481,1,['Update'],['Update']
Deployability,Update richtextfx,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1399:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1399,1,['Update'],['Update']
Deployability,Update scripting_styles.css,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1066:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1066,1,['Update'],['Update']
Deployability,Update snapshot version,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1204:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1204,1,['Update'],['Update']
Deployability,"Update to 1: I've removed the dialog height limit in v0.4.2, which has just been released. I'll close this issue now since selecting/deselecting all is possible as in my last answer. We might add buttons/checkboxes with these options in the future, but I think we need to explore the whole topic of UX more first - to try to make QuPath's options easier to find, but without making the user interface too cluttered and confused. I don't know what the solution to that is, but I hope someone can figure it out :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201#issuecomment-1397436014:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201#issuecomment-1397436014,3,"['Update', 'release']","['Update', 'released']"
Deployability,Update to Bio-Formats 6.10.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/977:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/977,1,['Update'],['Update']
Deployability,Update to Bio-Formats 6.5.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/555:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/555,1,['Update'],['Update']
Deployability,Update to Bio-Formats 8.0.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1690:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1690,1,['Update'],['Update']
Deployability,Update to DJL v0.30.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1642:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1642,1,['Update'],['Update']
Deployability,"Update to Gradle 7, fix pixel classifier colormaps being locked",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/710:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/710,1,['Update'],['Update']
Deployability,"Update to JDK 14, performance fixes",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/418:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/418,1,['Update'],['Update']
Deployability,Update to Java 21,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1603:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1603,1,['Update'],['Update']
Deployability,Update to JavaCPP 1.5.8,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1107:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1107,1,['Update'],['Update']
Deployability,Update to handle mac version on Java 21,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1395:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1395,1,['Update'],['Update']
Deployability,Update to latest OpenCV version using JavaCPP Presets.; Note change of OpenCV open source license.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/675:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/675,1,['Update'],['Update']
Deployability,Update to search box prompt text in dark mode as it was previously poorly visible due to styling from JavaFX modena that needed to be overridden. Before: ; ![image](https://user-images.githubusercontent.com/42358257/189848622-aeb1dfd2-4c94-4c03-8dd3-191ede8052f5.png); After:; ![image](https://user-images.githubusercontent.com/42358257/189848474-399cb277-1570-4f52-b033-137f67486b9a.png). Attempts to make the style more specific to override the external style but was unsuccessful so the less preferable !important tag was used. The colour is derived from the current background colour at that time.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1056:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1056,1,['Update'],['Update']
Deployability,"Update to use JTS 1.19.0. Introduce `-Djts.overlay=ng` by default.; Lots of evidence on the forum that this resolves thorny TopologyExceptions.; See https://forum.image.sc/t/stardist-error-message-topologyexception/67708/7 for more info. Avoid calling `geom.intersection(g)` twice in `RoiTools.clipToROI(ROI, Collection)`, which caused problems with OverlayNG.; This should fix https://github.com/qupath/qupath/issues/996",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/998:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/998,1,['Update'],['Update']
Deployability,Update to v0.0.3,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/4:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/4,1,['Update'],['Update']
Deployability,Update to v0.0.6,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/21:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/21,1,['Update'],['Update']
Deployability,Update to v0.0.7,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/28:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/28,1,['Update'],['Update']
Deployability,Update version,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1172:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1172,1,['Update'],['Update']
Deployability,Update version and changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1381:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1381,1,['Update'],['Update']
Deployability,Update version catalog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1158:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1158,1,['Update'],['Update']
Deployability,Update version for rc2,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1393:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1393,1,['Update'],['Update']
Deployability,Update version for v0.4.2,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1216:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1216,1,['Update'],['Update']
Deployability,Update version for v0.5.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1484:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1484,1,['Update'],['Update']
Deployability,Update version number for v0.2.2,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/577:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/577,1,['Update'],['Update']
Deployability,Update version number for v0.3.1 release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/877:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/877,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update version number for v0.3.2 release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/888:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/888,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update version number for v0.4.3,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1238:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1238,1,['Update'],['Update']
Deployability,Update version to v0.3.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/815:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/815,1,['Update'],['Update']
Deployability,Update version to v0.3.1-SNAPSHOT,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/817:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/817,1,['Update'],['Update']
Deployability,Update version to v0.4.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1198:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1198,1,['Update'],['Update']
Deployability,Update versions & changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1380:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1380,1,['Update'],['Update']
Deployability,"Update versions, license year",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1425:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1425,1,['Update'],['Update']
Deployability,"Update. This still exists in 0.2.0m3, and with the additional problem that some multichannel images generate the following error. ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'doMedian'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:336); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); Caused by No boolean parameter with key 'doMedian' at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:379); at qupath.lib.plugins.parameters.ParameterList.getBooleanParameterValue(ParameterList.java:417); at qupath.lib.algorithms.IntensityFeaturesPlugin$MedianFeatureComputer.addMeasurements(IntensityFeaturesPlugin.java:945); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:594); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:429); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unk",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-514482720:0,Update,Update,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-514482720,1,['Update'],['Update']
Deployability,"Updated GeoJSON output, while still attempting to support reading from v0.3.2. Changes include:; * Simplified representation of `PathClass`; * Store either `name` (single name) or `names` (array) field, and `color` (3-element int array); * Flag ellipse ROIs so these can be deserialized as ellipses, not polygons; * A polygon representation is still stored for use in other software, if required; * Store measurements directly as a JSON object / map (rather than an array of name/value elements); * Optionally support child objects in export; * Serializing the root object now involves serializing the whole hierarchy; * Update to GSON 2.10",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1099:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1099,2,['Update'],"['Update', 'Updated']"
Deployability,Updated OpenSlide for macOS,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/33:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/33,1,['Update'],['Updated']
Deployability,Updated PathObject setting/getting colors,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1089:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1089,1,['Update'],['Updated']
Deployability,"Updated SNAPSHOT is live, @finglis could you try to run this branch and see if OpenSlide loads/works on Windows?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1325#issuecomment-1748517478:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1325#issuecomment-1748517478,1,['Update'],['Updated']
Deployability,Updated changelog,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/743:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/743,1,['Update'],['Updated']
Deployability,Updated classifications based on classloaders. ![Screenshot from 2023-10-03 12-09-12](https://github.com/qupath/qupath/assets/10779688/1296295b-28dc-4cd7-9fa4-717c1b2f0842),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1744758115:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1744758115,1,['Update'],['Updated']
Deployability,"Updated dependencies, PointIO",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/415:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/415,1,['Update'],['Updated']
Deployability,Updated pixel classifier,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/368:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/368,1,['Update'],['Updated']
Deployability,"Updated script to try...; ```groovy; import javafx.application.Platform; import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.helpers.DisplayHelpers; import qupath.lib.io.PathIO; import qupath.lib.projects.ProjectIO; import qupath.lib.projects.ProjectImageEntry. import java.awt.image.BufferedImage. // Get the current project; def project = getProject(); if (project == null) {; DisplayHelpers.showErrorMessage(""Project from .qpdata"", ""Create a project first!""); return; }. // Get the base directory; def dirBase = QuPathGUI.getSharedDialogHelper().promptForDirectory(null). // Get all the .qpdata files; def qpdataFiles = new ArrayList<File>(); dirBase.eachFileRecurse {; if (!it.isFile()); return; if (it.getName().endsWith('.qpdata')); qpdataFiles << it; }. // For each .qpdata file, look for the image & copy it to the data folder; def entries = new ArrayList<ProjectImageEntry>(); for (file in qpdataFiles) {; // Look for an image with the same name; def path = PathIO.readSerializedServerPath(file); def name = new File(path).getName(); def tiff = new File(file.getParentFile(), name); if (!tiff.exists()) {; print('Could not find file for ' + name); continue; }; // Create a new image entry & copy the bytes; def imageName = tiff.getParentFile().getName() + ""-"" + name.replace('.tif', ''); def entry = new ProjectImageEntry<BufferedImage>(project, tiff.getAbsolutePath(), imageName, Collections.emptyMap()); def fileData = QuPathGUI.getImageDataFile(project, entry); fileData.bytes = file.bytes; entries << entry; }; project.addAllImages(entries); ProjectIO.writeProject(project). Platform.runLater {; getQuPath().setProject(null); getQuPath().setProject(project); }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461190784:0,Update,Updated,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461190784,1,['Update'],['Updated']
Deployability,Updates & simplifications to the gradle build scripts.; This removes warnings of deprecated features that will be incompatible with Gradle 9.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1424:0,Update,Updates,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1424,1,['Update'],['Updates']
Deployability,Updates for Mac permissions trouble,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1372:0,Update,Updates,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1372,1,['Update'],['Updates']
Deployability,Updates to 0.0.2,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/3:0,Update,Updates,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/3,1,['Update'],['Updates']
Deployability,Updates to the grid viewer to:; 1. ~~Increase default window size~~; 2. Fix [#1473](https://github.com/qupath/qupath/issues/1473) that crashes the viewer when the window width is less than the image tile width and spacing issues related to that.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1475:0,Update,Updates,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1475,1,['Update'],['Updates']
Deployability,Updates towards v0.3,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/706:0,Update,Updates,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/706,1,['Update'],['Updates']
Deployability,"Upgrade gradle, dependences",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1626:0,Upgrade,Upgrade,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1626,1,['Upgrade'],['Upgrade']
Deployability,"Use GitHub Packages to make `qupath-core`, `qupath-core-processing` and `qupath-gui-fx` available via Maven. These are the main three modules that are useful as dependencies. Others may be included in the future, but may also be moved to different repositories. With that in mind, `settings.gradle` has been updated to remove `qupath-extension-pen`, `qupath-extension-omero`, `qupath-extension-experimental` and `qupath-extension-tensorflow` in preparation for these to become extensions with their own repos.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/740:308,update,updated,308,https://qupath.github.io,https://github.com/qupath/qupath/pull/740,1,['update'],['updated']
Deployability,"Use checkstyle, which can be installed as an eclipse plugin or run with; ```; ./gradlew check; ```; Checks are currently fairly limited, focussing on the order of modifiers and naming of test classes (using `Test*.java`).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1046:29,install,installed,29,https://qupath.github.io,https://github.com/qupath/qupath/pull/1046,1,['install'],['installed']
Deployability,Use openslide release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1396:14,release,release,14,https://qupath.github.io,https://github.com/qupath/qupath/pull/1396,1,['release'],['release']
Deployability,ValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); at javafx.scene.control.Labeled.setTextFill(Labeled.java:766); at org.controlsfx.glyphfont.Glyph.setColor(Glyph.java:288); at qupath.lib.gui.tools.IconFactory.createROIIcon(IconFactory.java:275); at qupath.lib.gui.tools.IconFactory.createPathObjectIcon(IconFactory.java:228); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:253); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:126); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:113); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:533); at javafx.scene.control.TreeCell.lambda$new$3(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:348); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.scene.control.TreeView.setRoot(TreeView.java:479); at qupath.lib.gui.panes.PathObjectHierarchyView.setImageData(PathObjectHierarchyView.java:424); at qupath.lib.gui.panes.PathObjectHierarchyView.changed(PathObjectHierarchyView.java:446); at qupath.lib.gui.panes.PathObjectHierarchyView.changed(PathObjectHierarchyView.java:64); at com.sun.javafx.binding.Expressi,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:3649,update,updateItem,3649,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,2,['update'],['updateItem']
Deployability,"Very good to know about the workaround, thanks. The latest update to the extension should improve CZI support, and hopefully there's no need to split the image any more. There are more details [here](https://groups.google.com/d/msg/qupath-users/78PpZuu2J1s/su6ZjY0mAgAJ).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/47#issuecomment-358750045:59,update,update,59,https://qupath.github.io,https://github.com/qupath/qupath/issues/47#issuecomment-358750045,1,['update'],['update']
Deployability,"We already default to using Java 21, but we were still building artifacts with Java 17. This meant we couldn't actually use any features from after Java 17. Things we can now use (roughly in order of relevance):; - Sequenced collections - https://openjdk.org/jeps/431; - Code snippets in Javadocs - https://openjdk.org/jeps/431; - Pattern matching for switch - https://openjdk.org/jeps/441; - Virtual threads - https://openjdk.org/jeps/444; - Record patterns - https://openjdk.org/jeps/440. Note that this may require updates in any extensions that declare v0.6.0 dependencies, to ensure they also use Java 21 (and have a suitably recent Gradle wrapper).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1603:518,update,updates,518,https://qupath.github.io,https://github.com/qupath/qupath/pull/1603,1,['update'],['updates']
Deployability,"We are happy QuPath early adopters and have annotated many different images during the last year using QuPath v0.2.0m2 and v0.2.0m5. Now we are trying to convert the annotations to v0.2.0m9, wishing to get all the great benefits in later releases, specially everything related to the move to JTS. We can convert the projects to v0.2.0m5 without problems, but when trying to convert to later versions (we have tried with v0.2.0m6 and v0.2.0m9), there are many AreaROIs that seem to carry invalid geometries and so JTS chokes. The error (using v0.2.0m9) is always the same ```Invalid number of points in LinearRing (found 3 - must be 0 or >= 4)'```. ```java; ERROR: QuPath exception: Invalid number of points in LinearRing (found 3 - must be 0 or >= 4); at org.locationtech.jts.geom.LinearRing.validateConstruction(LinearRing.java:94); at org.locationtech.jts.geom.LinearRing.<init>(LinearRing.java:85); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:356); at org.locationtech.jts.geom.GeometryFactory.createLinearRing(GeometryFactory.java:343); at org.locationtech.jts.geom.GeometryFactory.createPolygon(GeometryFactory.java:464); at qupath.lib.roi.GeometryTools$GeometryConverter.convertAreaToGeometry(GeometryTools.java:592); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:492); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:476); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:440); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at ...; ```. This makes it impossible to use anything depending on conversion to JTS geometry: from converting to GeoJSON (our main goal) to simply view the slide. For example, this fails:. ```python; GeometryTools.geometryToROI(roi.getGeometry(), roi.getImagePlane()); ```; I attach a serialized example of one such ROIs, and I would be h",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429:238,release,releases,238,https://qupath.github.io,https://github.com/qupath/qupath/issues/429,1,['release'],['releases']
Deployability,"We did end up getting self-contained binaries for all platforms built and hosted on SciJava Maven for the 4.0.0 OpenSlide release. Hopefully with the release of the Apple M1 GitHub runners in the next few months, we can contribute these changes into the upstream build cycle. The current status of OpenSlide in QuPath is that each platform contains a self-contained OpenSlide binary, which we hook into with JNA. This means the JNI-based OpenSlide-Java is no longer needed for us, which simplifies the build quite a bit. Users can override this by pointing QuPath to their own version of OpenSlide. These changes are available in the current v0.5.0 rc(1/2) and will be in the full 0.5.0 release of QuPath also. Closing this as all of the necessary changes now are in different repos unrelated to QuPath core.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272:122,release,release,122,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1777323272,6,['release'],['release']
Deployability,"We don't currently officially support installation using package managers, although there have been some community efforts to make it supported for homebrew, see eg: https://forum.image.sc/t/installing-qupath-via-homebrew/92388",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1536#issuecomment-2138938368:38,install,installation,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1536#issuecomment-2138938368,2,['install'],"['installation', 'installing-qupath-via-homebrew']"
Deployability,"We don't have a code signature step... release candidate must be available within the next couple of hours, ahead of a workshop next week, so won't have time to make any more changes ahead of that. The easiest way to explore would be to build for source with gradle: https://qupath.readthedocs.io/en/0.4/docs/reference/building.html. The PR should point towards the parts that needed to be reverted to get things working.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267:39,release,release,39,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1750335267,1,['release'],['release']
Deployability,"We have recently encountered issues installing QuPath on our computers at our academic hospital. According to our IT department, who investigated the matter, the problem is due to QuPath lacking an 'Extended Validation Code Signing Certificate'. Would it be possible to include this certificate in future builds so that we can continue using the software?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1605:36,install,installing,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1605,1,['install'],['installing']
Deployability,"We'd also need to know the version of QuPath you're using, and any other changes that could be relevant (e.g. installing a new version, moving files).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/613#issuecomment-708514862:110,install,installing,110,https://qupath.github.io,https://github.com/qupath/qupath/issues/613#issuecomment-708514862,1,['install'],['installing']
Deployability,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:118,release,release,118,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['release'],['release']
Deployability,"Weirdly I can't get it to open. MacOS says '""QuPath.app"" is damaged and can't be opened. You should move it to the bin'. Even when I go into the package and manually run the QuPath script from the terminal I get the same error. I'll maybe try installing Java JDK 17 x86 and see if I can compile it, unless you have another suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799:243,install,installing,243,https://qupath.github.io,https://github.com/qupath/qupath/issues/1184#issuecomment-1352058799,1,['install'],['installing']
Deployability,"Well, that definitely did something - I managed to crash QuPath. One thing - I am trying to run a 64 bit installation, perhaps that is causing some kind of conflict? I checked just to be sure and my python is 64 bit and the error message below discusses a 64-bit Open-JDK server, so this may not be the issue. I am going to paste the (very long) error message. I can trim this down and get rid of the OpenCV and OpenSlide parts if it's too long. . ```; [bl@QuPath]$ ./QuPath&; [1] 27357; [bl@QuPath]$ 02:39:33.387 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; 02:39:34.264 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 624.00 MB; 02:39:37.713 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/bl/ip/QuPath/extensions; 02:39:37.715 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/bl/ip/QuPath/extensions/jep.jar; OpenJDK 64-Bit Server VM warning: You have loaded library /home/bl/ip/QuPath/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExt",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:105,install,installation,105,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['install'],['installation']
Deployability,"What a curious bug... didn't know about it, but I could replicate it and noticed that the points also increased in size as the rotation got closer to 90 degrees. Anyhow, both phenomena had the same cause and it should be fixed in the next version. You can try it out early, including the fix, if you follow the instructions at the bottom of [this page](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html). (There should be a few other fixes there related to the _Point tool_ - such as when deleting a point with _Alt_ pressed might enthusiastically remove a neighboring point, but not actually the one you were aiming for)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/193#issuecomment-409309963:409,update,updates,409,https://qupath.github.io,https://github.com/qupath/qupath/issues/193#issuecomment-409309963,1,['update'],['updates']
Deployability,"What happens if you try to open the `.scn` file with Fiji (www.fiji.sc)? If this is successful (even to open part of the image - probably not all), then it is likely an issue with the QuPath Bio-Formats extension. But if not, then it is unlikely to be something that can be solved on the QuPath side. QuPath does not handle proprietary file formats, and depends on Bio-Formats and OpenSlide; and OpenSlide is inherently limited to 8-bit RGB images, which really means that Bio-Formats is the only option here. I plan to make some updates to the QuPath Bio-Formats extension soon, and I'll investigate `.scn` specifically with the few sample images I have access to tomorrow. But I don't know if the changes I plan to make will be relevant to the issue you are seeing. If you are able to share an example image that isn't working, I can investigate further.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409025091:530,update,updates,530,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409025091,1,['update'],['updates']
Deployability,"What is really interesting with the interaction with Cellprofiler is that we could use already developed and validated pipelines without starting from scratch. We have delopped a few extra CP python modules to handle specific analytical problems. The new version of CP is entirely python based. They do not support ImageJ anymore (no need to deal with javabridge which was a headache for us for while) and very attractive to deploy on a cluster environment. But what you suggest is a good idea, i.e. add it as a new feature request and see how it goes from there. But to my opinion the really interesting aspect with CP and the underlying python+addition libraries (so far) is the computational one, i.e. memory consumption and parallelisation. It would be very efficient to handle a very granular analysis (down to cell/organelle level) in python. We are running with up to 1*10^6 #objects per slide and you quickly go up to 12GB of RAM consumption for a single process in QuPath. The tiling of the slide before analysis is something I'm exploring with QuPath. The streamlining of QuPath and python is an excellent idea. It would allow interaction with CellProfiler modules and other python packages. . Great work. It's being very helpful to us. The interface is great and the other technical problems you can always find a solutions in one way or another even if it is not optimal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350242806:119,pipeline,pipelines,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350242806,2,"['deploy', 'pipeline']","['deploy', 'pipelines']"
Deployability,"When I run the TMA dearrayer on an H+E image of my TMA slide, it does not pick up any of the cores. Any ideas for how to get it working? I've used qupath on a different computer/install of qupath and it had no problem with this file. . ![capture](https://user-images.githubusercontent.com/41748563/43268852-3dcb26e4-90b7-11e8-892d-890303bb0414.PNG)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/189:178,install,install,178,https://qupath.github.io,https://github.com/qupath/qupath/issues/189,1,['install'],['install']
Deployability,"When trying to run this I get; ```; qupath.fx.dialogs.Dialogs - QuPath exception: Exception in Application start method; java.lang.RuntimeException: Exception in Application start method; 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:893); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:195); 	at java.base/java.lang.Thread.run(Thread.java:833); Caused by: java.lang.NullPointerException: Cannot invoke ""qupath.lib.gui.viewer.QuPathViewer.downsampleFactor()"" because ""this.viewer"" is null; ```. But even if this is fixed, would it have any visible impact? The label text should already be updated. I agree that downsample factor should be exposed as a property, but I think it will require a cautious approach; if it's not a `ReadOnlyDoubleProperty` then the user should be able to assume that they can also *set* the downsample via the property, but I expect that would require a bigger refactoring of `QuPathViewer`. It's old-fashioned and suboptimal, but for now adding a [`QuPathViewerListener`](https://github.com/qupath/qupath/blob/007b18108b9f43954279403cb1f796d7ada4b521/qupath-gui-fx/src/main/java/qupath/lib/gui/viewer/QuPathViewerListener.java) is the expected way to identify any kind of viewer change. Definitely a move towards a more property-based approach would be welcome, but then so would a viewer that uses JavaFX more natively (rather than lots of legacy Graphics2D stuff)... so I think the question is whether to invest time in refactoring the current viewer, or take on the task of writing an entirely new viewer?. I definitely think a new viewer would be nice at some point - would be good to discuss what to do along the way.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283:666,update,updated,666,https://qupath.github.io,https://github.com/qupath/qupath/pull/1279#issuecomment-1638638283,1,['update'],['updated']
Deployability,"When typing in the script editor, the editor crashes when entering the double quote character "" if there are more than ~100 lines of text after the error. I can replicate this error by typing the following into script editor at the beginning of a script with more than 100 lines of code:. String test = "". Using Windows 10 and QuPath version 0.2.0-m2. The error window pops up with ""Java.lang.StackOverflowError"" and the log that appears when the editor crashes is: ; INFO: Bio-Formats version 6.0.1; INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: QuPath exception; at java.base/java.util.regex.Pattern$GroupTail.match(Pattern.java:4850); at java.base/java.util.regex.Pattern$BranchConn.match(Pattern.java:4700); at java.base/java.util.regex.Pattern$CharProperty.match(Pattern.java:3927); at java.base/java.util.regex.Pattern$Branch.match(Pattern.java:4736); at java.base/java.util.regex.Pattern$GroupHead.match(Pattern.java:4791); at java.base/java.util.regex.Pattern$Loop.match(Pattern.java:4928). Those 5 lines are then repeated about 100 times. ERROR: QuPath exception; at org.fxmisc.richtext.ParagraphText.checkWithinParagraph(ParagraphText.java:259); at org.fxmisc.richtext.ParagraphText.getCaretBounds(ParagraphText.java:198); at org.fxmisc.richtext.ParagraphBox.getCaretBounds(ParagraphBox.java:193); at org.fxmisc.richtext.GenericStyledArea.showCaretAtTop(GenericStyledArea.java:1289); at org.fxmisc.richtext.GenericStyledArea.nextPage(GenericStyledArea.java:1119); at org.fxmisc.richtext.GenericStyledAreaBehavior.lambda$static$10(GenericStyledAreaBehavior.java:86); at org.fxmisc.wellbehaved.event.template.InputMapTemplate.lambda$consume$0(InputMapTemplate.java:221); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.lambda$null$1(InputMapTemplate.java:425); at java.base/java.util.Optional.map(Optional.java:265); at org.fxmisc.wellbehaved.event.template.PatternActionTemplate.l",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/314:577,update,update,577,https://qupath.github.io,https://github.com/qupath/qupath/issues/314,1,['update'],['update']
Deployability,"When you save the classifier, QuPath really just saves what it needs to apply the classification - but it doesn't store all the information about where exactly the training information came from. That's why you aren't able to load the classifier again and update it... not enough information has been saved in the ```.qpclassifier``` file to make that possible. The ```.qpclassifier``` file should therefore be considered 'locked-down', since you can't really change that classifier again directly. Fortunately, so long as you've saved the data for each image as you went along (including your annotations), you can work around this. To do so, you start by creating a new detection classifier and starting to train it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:256,update,update,256,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['update']
Deployability,"While not directly related to the Python problem, [v0.0.7](https://github.com/qupath/qupath/releases/tag/v0.0.7) will hopefully do away with the exceptions you were seeing related to OpenSlide and OpenCV (some info [here](https://github.com/qupath/qupath/issues/2)). At least, I was able to run the this release on a clean installation of Fedora (25) through VirtualBox without major trouble... albeit it still not quite as smoothly as under macOS, Windows or Ubuntu.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-263157993:92,release,releases,92,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-263157993,3,"['install', 'release']","['installation', 'release', 'releases']"
Deployability,"While there is still no way to classify easily by intensities through the GUI, starting from [v0.1.2](https://github.com/qupath/qupath/releases/tag/v0.1.2) several new functions make it very easy by scripting, e.g. [this one](https://github.com/qupath/qupath/blob/master/qupath-core-processing/src/main/java/qupath/lib/scripting/QP.java#L1156). For example, to classify all cells as negative, 1+, 2+ or 3+ according to nuclear DAB staining, you may use; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); ```. Or to classify cells as positive or negative after running the new subcellular detection command, you could try; ```groovy; setCellIntensityClassifications(""Subcellular: DAB: Num spots estimated"", 2.5); ```. Finally, a more sophisticated example where the classifications for all cells are first reset, and then a reclassification according to intensity for tumor cells applied:; ```groovy; // Reset all existing intensity classifications; resetIntensityClassifications(). // Select all tumor objects; def tumor = getPathClass(""Tumor""); def tumorObjects = getObjects({p -> tumor.isAncestorOf(p.getPathClass())}). // Apply intensity classification; setIntensityClassifications(tumorObjects, ""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6). // Fire an update event to see the results; fireHierarchyUpdate(); ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/16#issuecomment-269880806:135,release,releases,135,https://qupath.github.io,https://github.com/qupath/qupath/issues/16#issuecomment-269880806,2,"['release', 'update']","['releases', 'update']"
Deployability,"With; ```; ./gradlew clean jpackage; ```. I end up with what I guess is the full list:. ```; ij-1.54k-javadoc.jar; jts-core-1.20.0-javadoc.jar; qupath-app-0.6.0-SNAPSHOT-javadoc.jar; qupath-bioimageio-spec-0.1.0-javadoc.jar; qupath-core-0.6.0-SNAPSHOT-javadoc.jar; qupath-core-processing-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-bioformats-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-openslide-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-processing-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-script-editor-0.6.0-SNAPSHOT-javadoc.jar; qupath-extension-svg-0.6.0-SNAPSHOT-javadoc.jar; qupath-fxtras-0.1.5-javadoc.jar; qupath-gui-fx-0.6.0-SNAPSHOT-javadoc.jar; ```. If I add `-P package=installer` then I do wonder ""Is this the life?"" (by which I mean, I only get the shorter list).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1652#issuecomment-2456992383:692,install,installer,692,https://qupath.github.io,https://github.com/qupath/qupath/issues/1652#issuecomment-2456992383,1,['install'],['installer']
Deployability,"Works great on my Linux box, an Ubuntu 22.04 derivative with GNOME desktop environment:. ```; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. Would probably be worthwhile checking a KDE plasma version, will look into that quickly",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1671#issuecomment-2393474058:126,Release,Release,126,https://qupath.github.io,https://github.com/qupath/qupath/pull/1671#issuecomment-2393474058,1,['Release'],['Release']
Deployability,"Wow, thanks, that replicates the issue for me too. This sounds like a bug / intuitive behavior within the Delaunay triangulation. It's concerning that measurements can be added multiple times to the same objects. It suggests that the results might not be fully deterministic, depending upon the status of the object hierarchy and precisely which annotations are selected. I'm reluctant to fix the underlying issue in a 0.0.x release, but we should try to replace the command entirely. An implementation with [`DelaunayTools`](https://github.com/qupath/qupath/blob/df81345068455f09f42f50e97dc7b69a591e27f7/qupath-core/src/main/java/qupath/lib/analysis/DelaunayTools.java#L77) should be cleaner than the current OpenCV-based one. **As I understand it, this shows that the existing Delaunay command should not be used for nested annotations that contain detections.**. Single annotations, or annotations arranged in a 'flat' way (so that the same detection is not a descendent of more than one selected annotation) should be ok.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1943698902:425,release,release,425,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1943698902,2,['release'],['release']
Deployability,"Wow... I haven't seen this before, but I've only used QuPath with Ubuntu occasionally and not with other Linux distributions. But I'm pretty sure it was working for me in the past... and I didn't _think_ anything had changed from v0.1.2 in this regard. I remain a big fuzzy on the cause and the solution. Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... and an update to this is what has caused the problem? Any time I've delved into the Java library path and sub-dependencies on different platforms I haven't enjoyed the experience or emerged much smarter. Alternatively, now that Bio-Formats is included by default and OpenSlide doesn't appear to be being actively developed, would it be best just to exclude OpenSlide from the Linux distribution - but try to pick it up from a system-wide installation? Or is there another way?. The main trouble I expect with relying on a local installation entirely is that the openslide-jni file will still be needed.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527233194:379,install,installation,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527233194,4,"['install', 'update']","['installation', 'update']"
Deployability,"Yeah, I am using Windows 10 (updated regularly) and it doesn't matter if I have several or no programs running in the background. I am doing complete image annotations on whole slide scans, so I have a lot of rather large and complex annotations. The unresponsiveness happens after I have been doing the annotations. I am also using a stylus to help with getting the finer details right in my annotations.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461525894:29,update,updated,29,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461525894,1,['update'],['updated']
Deployability,"Yep, somehow the libpixman used is the one from my system:; ```; $ cat /proc/30668/maps | grep pixman; 7f0c393d0000-7f0c393db000 r--p 00000000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c393db000-7f0c39461000 r-xp 0000b000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39461000-7f0c39471000 r--p 00091000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39471000-7f0c39479000 r--p 000a0000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; 7f0c39479000-7f0c3947a000 rw-p 000a8000 103:07 42091621 /usr/lib/libpixman-1.so.0.38.4; ```; On both QuPath 0.1.2 and QuPath 0.2.0. Now I have no idea with 0.1.2 works fine while 0.2.0 doesn't... that doesn't make sense...; Ideally it would be great if it could ship with a QuPath release with the fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527240543:736,release,release,736,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527240543,1,['release'],['release']
Deployability,"Yes - as a Mac user, it's annoys me too :). Sadly, it looks like the version number is still enforced by `jpackage`. The relevant part is at:. * https://github.com/openjdk/jdk/blob/master/src/jdk.jpackage/macosx/classes/jdk/jpackage/internal/CFBundleVersion.java. Attempting to build results in the message:. ```; Bundler Mac Application Image skipped because of a configuration problem: The first number in an app-version cannot be zero or negative. ; Advice to fix: Set a compatible 'app-version' value. Valid versions are one to three integers separated by dots.; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1467726628:365,configurat,configuration,365,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1467726628,1,['configurat'],['configuration']
Deployability,"Yes and no... not in any publicly available way, and it remains on my todo list before the next release. This is taking longer than I'd hope as I find more and more to do, but some talks and workshops in March give me a pretty hard deadline.... However, amidst all the changes I'm making for the next release I've introduced an option to 'retain the display settings' when opening a new image. This means that if you have an image open with certain brightness/contrast settings (and color channels turned on/off), then if you open another image in the project it will (optionally) keep the settings constant:; https://github.com/petebankhead/qupath/commit/5750e42574cf34f9c868c9d2b133da3daaecf5e1. My hope is that it reduces the need to apply settings across all images in a project through a script, because the min/max settings (optionally) don't automatically change per image. How does that sounds to you?. Alongside that, I've added the ability to turn on/off multiple channels at once (by selecting them and right-clicking), and given a bit more control on what the 'Auto' button does when adjusting brightness/contrast per channel. I think these changes make the Brightness/Contrast dialog considerably easier to use; at least, I find it less annoying now than it previously was. (I still do need to revisit saving settings though, because it needs to be possible to set channel names if these are wrong or missing. And if it's possible to save channel names, it may as well be possible to save display settings per channel as well...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453637134:96,release,release,96,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453637134,2,['release'],['release']
Deployability,"Yes this method doesn't work.; Are there any dependencies for this installation like Java etc? Can I install through brew? (brew.sh); ________________________________; From: Pete ***@***.***>; Sent: Monday, November 1, 2021 4:23 AM; To: qupath/qupath ***@***.***>; Cc: Magen, Assaf ***@***.***>; Author ***@***.***>; Subject: Re: [qupath/qupath] QuPath installation fails on Mac OS X (Issue #832). USE CAUTION: External Message. I'm afraid I have no idea, I've installed QuPath without problem on Big Sur 11.6 :/; All that should be required is to right-click and select 'open' (see docs<https://urldefense.proofpoint.com/v2/url?u=https-3A__qupath.readthedocs.io_en_stable_docs_intro_installation.html-23macos&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=LQpZPfcWNjnpyAuCn0AUX77UW3OS6YgRTqYTkj4qxu8&e=>). Does that method give the installation failed result for you? Could you find any solution?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_qupath_qupath_issues_832-23issuecomment-2D956030617&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=bhuMPi2-_5ssdSHfMHAer69h6Hjg7GdSNMjxoB5ybkw&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACWGV4HDU7S4VRAOU2I7HBDUJZE7FANCNFSM5GWCQ7PQ&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT94&m=beEo_cpLzME-jyouob9zOAVbDm2fxNC3dXgJ9NFuTRc&s=-UbBn_crqpKeNfYMQmgXYnMsynlZx_lTn7DwWeLsaJI&e=>.; Triage notifications on the go with GitHub Mobile for iOS<https://urldefense.proofpoint.com/v2/url?u=https-3A__apps.apple.com_app_apple-2Dstore_id1477376905-3Fct-3Dnotification-2Demail-26mt-3D8-26pt-3D524675&d=DwMCaQ&c=shNJtf5dKgNcPZ6Yh64b-A&r=SInwANxfOqZV8sfAkxasc63IcQTR_urEPBUbRUaFT",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/832#issuecomment-956131733:67,install,installation,67,https://qupath.github.io,https://github.com/qupath/qupath/issues/832#issuecomment-956131733,5,['install'],"['install', 'installation', 'installed']"
Deployability,"Yes, I have `mirax` file that has dimensions of 105185 X 221772 pixels. By 'true dimensions' I mean the pixel dimensions stored in the raw file. Converted to a tiff image I get:. tiffinfo:; ````; TIFF Directory at offset 0x27e43676 (669267574); Image Width: 105185 Image Length: 221772; Tile Width: 512 Tile Length: 512; Resolution: 10, 10 pixels/cm; Bits/Sample: 8; Sample Format: unsigned integer; Compression Scheme: JPEG; Photometric Interpretation: YCbCr; Orientation: row 0 top, col 0 lhs; Samples/Pixel: 3; Planar Configuration: single image plane; Reference Black/White:; 0: 0 255; 1: 128 255; 2: 128 255; JPEG Tables: (574 bytes); ...; ````. Opening in QuPath (mirax + crop), QuPath (mirax + no crop / tiff), Web Viewer (tiff - IIPImage):; ![image](https://github.com/qupath/qupath/assets/34658867/0e4248ff-add4-469f-a95b-6c5061ad9dbe). Full image annotation rectangle from QuPath (crop):; ```{""type"":""FeatureCollection"",""features"":[{""type"":""Feature"",""id"":""e23c4b41-3966-4e64-af97-665f7edf753d"",""geometry"":{""type"":""Polygon"",""coordinates"":[[[0, 0],[76832, 0],[76832, 190655],[0, 190655],[0, 0]]]},""properties"":{""objectType"":""annotation""}}]}```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631156949:521,Configurat,Configuration,521,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631156949,1,['Configurat'],['Configuration']
Deployability,"Yes, at the time the build scripts were written it seemed to be impossible to have a version number starting with 0.x on macOS - at least when building using `jpackage`. Attempting to do this would result in a ""first number in a CFBundleVersion cannot be zero or negative"" exception, as described at https://forum.image.sc/t/error-building-qupath-with-tensorflow-first-number-in-a-cfbundleversion-cannot-be-zero-or-negative/48713. The build script explicitly sets the wrong version number in an attempt to get builds working at all, see https://github.com/qupath/qupath/blob/v0.4.3/qupath-app/build.gradle#L40. I'll check if the situation has changed with more recent `jpackage` releases. If not, I'm afraid we're probably stuck with it until there's eventually a QuPath 1.x release, unless someone can come up with a solution that doesn't overly complicate the build/release process.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136:679,release,releases,679,https://qupath.github.io,https://github.com/qupath/qupath/issues/1250#issuecomment-1455033136,3,['release'],"['release', 'releases']"
Deployability,"Yes, it's possible to use 3rd party libraries without recompiling, although I'm not sure how easy it will be to set up in this case. Firstly, you need all the (Java) jar files visible to the classloader in QuPath; the easiest way to do that is to put them in the *extensions* folder - normally just by dragging them onto QuPath when it's running. You might need to restart QuPath to make sure they are picked up. Secondly, in this case, you need all the native libraries of dl4j to be visible as well; these might have been distributed in jar files, in which case they need to be extracted (as far as I know - unless dl4j is doing something different here). There is some more information about where to put them to get them on the ```java.library.path``` [here](https://github.com/qupath/qupath/wiki/Paths-&-configuration). That is probably the easiest approach... if it works. Alternatively, if you choose to use Eclipse instead, you don't necessarily need to fork QuPath since you shouldn't need to modify it, you just an Eclipse project to be set up with the source. You can then create an extension and set up everything specific to your project there. You could choose an existing extension as a base and then modify it, using Maven to manage all the dl4j dependencies, and then add it to the build path for the main QuPath project. I haven't tried this exact configuration myself. Since this requires some knowledge of Eclipse, Maven, library paths, QuPath and dl4j, I imagine it isn't the easiest thing to get working... but I think it should be doable.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76#issuecomment-300999633:809,configurat,configuration,809,https://qupath.github.io,https://github.com/qupath/qupath/issues/76#issuecomment-300999633,2,['configurat'],['configuration']
Deployability,"Yes, that may be necessary. Until now it has not been an issue, but I recently updated `build.gradle` on the dev branch to optionally include all modules to make this easier:; ```; ./gradlew clean build test createPackage -PjreModules=all; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-613250191:79,update,updated,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-613250191,1,['update'],['updated']
Deployability,"Yes, the output from my previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/ja",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:327,install,install,327,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,1,['install'],['install']
Deployability,"Yes, this is a known issue and intended behavior... but only because of a bug in OpenCV's Java bindings when QuPath was originally being developed, which meant any attempt to serialize a classifier was doomed to fail badly. Serializing the full training data and parameters required to rebuild the classifier was the only workaround I could find at the time. This is no longer a blocker thanks to updates in OpenCV and the switch to use JavaCPP. I've started to create entirely separate wrappers to support serializing/deserializing classifiers using JSON in the context of pixel classification. My proposed/intended fix is to use these with the detection classifier as well, but of course this will break backwards compatibility and I would therefore like to combine it with more thorough changes to how the detection classification works. Also, since the current approach is not critically broken I didn't want to start the task until everything was aligned to see it through to completion. Making the pixel classifier serializable/deserializable is a higher priority.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/343#issuecomment-515174436:397,update,updates,397,https://qupath.github.io,https://github.com/qupath/qupath/issues/343#issuecomment-515174436,1,['update'],['updates']
Deployability,"Yes, this is important and should be addressed to avoid confusion. (I think _File &rarr; Revert_ can be used to 'update' the data by reading it from the [now changed] data file, but this isn't documented...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/340#issuecomment-513528764:113,update,update,113,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-513528764,1,['update'],['update']
Deployability,"You can set the RAM in the configuration: https://qupath.readthedocs.io/en/latest/docs/reference/faqs.html#why-can-i-not-set-the-maximum-memory; You can also set other command line arguments there, including `-q` to start up in 'quiet' mode. Check out the command line help for more. Imagine the overhead we have dealing with issues raised by users from anywhere.... I will close this because, as before, there is no bug. We may discuss further improvements on the forum for future versions, but really for now my focus is on any remaining issues for v0.2.0. There is no time for further enhancements at this late stage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632633425:27,configurat,configuration,27,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632633425,1,['configurat'],['configuration']
Deployability,"You can try building the v0.2.0-m10 snapshot from the `dev` branch to see if the change helps, or alternatively wait until it is released (should be in the next week or so). To build, you'll need to use JDK 14 (there's no longer any need to add jpackage separately as described [here](https://qupath.readthedocs.io/en/latest/docs/reference/building.html)).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/429#issuecomment-607685002:129,release,released,129,https://qupath.github.io,https://github.com/qupath/qupath/issues/429#issuecomment-607685002,1,['release'],['released']
Deployability,You shouldn't have to do any of that just to run QuPath - download a release by following the links on the homepage at https://qupath.github.io/ or directly from https://github.com/qupath/qupath/releases,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/303#issuecomment-487908711:69,release,release,69,https://qupath.github.io,https://github.com/qupath/qupath/issues/303#issuecomment-487908711,2,['release'],"['release', 'releases']"
Deployability,"You would need to run the classifier first to distinguish (for example) tumor vs. stromal cells. Once you are happy with that, be sure to turn off the 'Auto-update' setting if you were using it... and then run ```setCellIntensityClassifications``` to further subclassify cells of each type according to their intensities. Note that you can use a single intensity threshold, to distinguish positive/negative cells only, e.g.; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2); ```; or 3 thresholds to get positive/negative, 1+, 2+, 3+ and H-scores; ```groovy; setCellIntensityClassifications(""Nucleus: DAB OD mean"", 0.2, 0.4, 0.6); ```. It's true that the sliders that allow you to set intensity classifications when you create the classifier at the start will only result in tumor cells being classified. At the time I wrote that command, I was only interested in classifying tumor cells.... and it was much later that I realized that applying intensity classifications to other kinds of cell would be important too. There is no button/menu item for that yet, so the ```setCellIntensityClassifications``` script is the best way to do that currently.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/64#issuecomment-293778069:157,update,update,157,https://qupath.github.io,https://github.com/qupath/qupath/issues/64#issuecomment-293778069,1,['update'],['update']
Deployability,"[17572,60173]_3x3component_data.tif` (refered as `B`), two different images but with the same channels.; * Opening `A`.; * Opening the brightness & contrast dialog. The histogram of `A` is displayed.; * Opening `B` while keeping the brightness & contrast dialog open. The histogram of `A` is still displayed. **The issue** comes from the fact that in [ImageDisplay](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java), the function [setImageData()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L202) is called when an image is open in QuPath. This function calls the `updateChannelOptions()` function and then the `updateHistogramMap()` function (see [here](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L228C4-L228C24)):; * `updateChannelOptions()` updates the [channelOptions](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L504) variable. It's an ObservableValue and, because of listeners, the [BrightnessContrastHistogramPane.updateHistogram()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.java#L162C17-L162C32) function is called. This is the function responsible for displaying the histogram.; * `updateHistogramMap()` updates the `histogramManager` variable. This variable is responsible for providing the histogram values. So the problem is that the function displaying the histogram can be called before the function updating the histogram values. It is not possible to simply switch the calls of the `updateChannelOptions()` and `updateHistogramMap()` functions. **The solution** I found was to make `histogramMana",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1462:1171,update,updateChannelOptions,1171,https://qupath.github.io,https://github.com/qupath/qupath/pull/1462,2,['update'],"['updateChannelOptions', 'updates']"
Deployability,[v0.2.0-m5](https://github.com/qupath/qupath/releases/tag/v0.2.0-m5) now shows a warning message whenever using _Run for project_ on the current image.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/340#issuecomment-549053056:45,release,releases,45,https://qupath.github.io,https://github.com/qupath/qupath/issues/340#issuecomment-549053056,1,['release'],['releases']
Deployability,"\os\.OS-3.vsi.bfmemo `. The file was ; `D:\QMDownload\5\os\OS-3.vsi.bfmemo ; `. After a successful running, all the output was:; ```; 16:23:06.071 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, D:\\QMDownload\\5\\os\\OS-3.vsi, -script, C:\\Users\\rmd\\AppData\\Local\\Temp\\tpd56d11ce_e4ba_481c_a046_3d19297b763a.groovy ; 16:23:06.151 [main] [WARN ] q.lib.images.servers.FileFormatInfo - Strange 'bits per sample' of 0 ; 16:23:06.211 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1 ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by com.esotericsoftware.kryo.util.UnsafeUtil (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/kryo-2.24.0.jar) to constructor java.nio.DirectByteBuffer(long,int,java.lang.Object) ; WARNING: Please consider reporting this to the maintainers of com.esotericsoftware.kryo.util.UnsafeUtil ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 16:23:07.141 [main] [WARN ] loci.formats.Memoizer - deleting invalid memo file: D:\QMDownload\5\os\.OS-3.vsi.bfmemo ; com.esotericsoftware.kryo.KryoException: Encountered unregistered class ID: 429; Serialization trace:; service (loci.formats.in.OperettaReader); readers (loci.formats.ImageReader); reader (loci.formats.DimensionSwapper); reader (loci.formats.FileStitcher); helper (loci.formats.in.FilePatternReader); readers (loci.formats.ImageReader) ; 	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:119) ; 	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:641) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:375) ; 	at com.esotericsoftware.kryo.serializers.DefaultArraySerializers$ObjectArraySerializer.read(DefaultArraySerializers.java:289) ; 	at com.esotericsoftware.kryo.Kry",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/287:1403,release,release,1403,https://qupath.github.io,https://github.com/qupath/qupath/issues/287,1,['release'],['release']
Deployability,"` returns byte arrays in a format very similar to Bio-Formats, and the logic convert these into a `BufferedImage` (with suitable `ColorModel` etc.) is complex. This should be extracted from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, but doesn't necessarily require reader wrappers and reader pools at all. These seem to be where the main dangers lie, because Bio-Formats is complex to use in a multithreaded context. On the other hand, the parsing doesn't need to know anything about an `IFormatReader` - it just needs the minimal, immutable info required to convert bytes-to-BufferedImage. If you can extract the bytes-to-BufferedImage logic in an entirely threadsafe way, and leave as much as possible of `BioFormatsImageServer` as it is, then that could be the safest way to make a v0.5.0 update and help with the OMERO extension. In general, I am cautious about about extensive refactoring of `BioFormatsImageServer` because I've written so many subtly broken versions of it myself throughout in QuPath's history :) It's really hard to get 'right'; the previous version was messy, but the code seemed to work pretty reliably (well, except for [this...](https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221/19)). ---. I realise it's *incredibly hard* (/ impossible) to write this without failing examples, and most public examples *won't* fail because we get lucky with the different series types. My guess is that .czi is one of the more awkward formats. Based on that, I found another failing example here: https://zenodo.org/record/7149674. Specifically, check out the label and macro images with the PR vs. in QuPath v0.4.4. In this case, the problem is related to the 'interleaved' interpretation: there's no exception thrown, but the image obtained via the PR is incorrect. I",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:4533,update,update,4533,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['update'],['update']
Deployability,"```; [jalal@goku bin]$ chmod 777 QuPath; [jalal@goku bin]$ ./QuPath; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 4:51:53 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 16:51:53.531 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 16:51:53.823 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 16:51:53.824 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:14092): Gdk-WARNING **: 16:51:54.374: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 16:51:54.868 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007effa50f8c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f087c503329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7effa4e62192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7effa4e625e3]; /lib64/libstdc++.so.6(+0x71555)[0x7effa4e63555]; /lib64/libpthread.so.0(+0x620b)[0x7f087be4520b]; /lib64/libstdc++.so.6(+0x715a1)[0x7effa4e635a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7effa4e635e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7effa4e6043c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7efeb6536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f087cd659c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f087cd6a59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f087cd69b8b]; /lib64/libdl.so.2(+0xfab)[0x7f087cb52fab]; /lib64/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:173,release,release,173,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,a$runLater$11(Unknown Source); at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; Still other times I see another error:. ```; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:475); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:200); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:190); at qupath.lib.objects.PathObject.toString(PathObject.java:224); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:66); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:36); at javafx.controls/javafx.scene.control.ListCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.ListCell.lambda$new$2(Unknown Source); at javafx.base/javafx.collections.WeakListChangeListener.onChanged(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.fireChange(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.commit(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.endChange(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.endChange(Unknown Source); at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(Unknown Source); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:382); at qupath.lib.gui.panes.AnnotationPane.lam,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:5823,update,updateItem,5823,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,a:650); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); at javafx.scene.control.Labeled.setTextFill(Labeled.java:766); at org.controlsfx.glyphfont.Glyph.setColor(Glyph.java:288); at qupath.lib.gui.tools.IconFactory.createROIIcon(IconFactory.java:275); at qupath.lib.gui.tools.IconFactory.createPathObjectIcon(IconFactory.java:228); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:253); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:126); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:113); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:533); at javafx.scene.control.TreeCell.lambda$new$3(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:348); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.scene.control.TreeView.setRoot(TreeView.java:479); at qupath.lib.gui.panes.PathObjectHierarchyView.setImageData(PathObjectHierarchyView.java:424); at qupath.lib.gui.panes.PathObjectHierarchyView.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:10347,update,updateItem,10347,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['update'],['updateItem']
Deployability,a:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); at javafx.scene.control.Labeled.setTextFill(Labeled.java:766); at org.controlsfx.glyphfont.Glyph.setColor(Glyph.java:288); at qupath.lib.gui.tools.IconFactory.createROIIcon(IconFactory.java:275); at qupath.lib.gui.tools.IconFactory.createPathObjectIcon(IconFactory.java:228); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:253); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:126); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:113); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:533); at javafx.scene.control.TreeCell.lambda$new$3(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:348); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.scene.control.TreeView.setRoot(TreeView.java:479); at qupath.lib.gui.panes.PathObjectHierarchyView.setImageData(PathObjectHierarchyView.java:424); at qupath.lib.gui.panes.PathObjectHierarchyView.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:3478,update,updateItem,3478,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['update'],['updateItem']
Deployability,"ackup` (works as we are sure the target doesn't exists already). If this fails, you have the `<file.tmp>` as the newest version; 4. `mv <file>.tmp <file>` (same, as the previous operation worked). If this fails, you have the `<file.backup>` as the backup version; 5. `rm <file>.backup`, if desired. > could you give the full stack trace for what exception you get without these changes?. The ""problem"" is that there is no exception thrown. It just fails on step 3 and/or 4 because `source` is identified as the same file as `target`, so it just [does not do anything](https://github.com/openjdk/jdk/blob/cbfddf4e1d3ff8dddb95bcb9242b31c175b768fc/src/java.base/windows/classes/sun/nio/fs/WindowsFileCopy.java#L363). As if the `target` was the `source`.; This means that a project saved on an SFTP server will always end up with three files, `project.qpproj`, `project.qpproj.backup` and `project.qpproj.tmp`, where the latter is the ""real"" project.; But it also means that when a project is saving the image data it does the following if there was a previous backup:; * `mv <pathData> <pathBackup>` -> **FAILS** : `<pathBackup>`now has the older backup saved, while `<pathData>` still exists.; * `write <pathData>` -> dangerous operation: if it fails for whatever reason, the only saved state is the one from an older backup. > Is there any easy way for us to replicate the issue?. Not that I know of. You have to connect to an SFTP server with windows to do this. Finally, i think `DefaultProject.java` could be the only source file that would need to be modified to improve SSH support from windows. The other operations are internal to QuPath, and I doubt people would install the windows version of QuPath in an Linux server and run it with `sshfs-win` 😅. Regarding the `copy` operation, instead, isn't it only ever used when duplicating an Image? In that case how could there be another file in the new data entry's path? I don't think you evern needed the `REPLACE_EXISTING` attribute over there.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1898959824:2077,install,install,2077,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1898959824,1,['install'],['install']
Deployability,"act that in [ImageDisplay](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java), the function [setImageData()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L202) is called when an image is open in QuPath. This function calls the `updateChannelOptions()` function and then the `updateHistogramMap()` function (see [here](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L228C4-L228C24)):; * `updateChannelOptions()` updates the [channelOptions](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L504) variable. It's an ObservableValue and, because of listeners, the [BrightnessContrastHistogramPane.updateHistogram()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.java#L162C17-L162C32) function is called. This is the function responsible for displaying the histogram.; * `updateHistogramMap()` updates the `histogramManager` variable. This variable is responsible for providing the histogram values. So the problem is that the function displaying the histogram can be called before the function updating the histogram values. It is not possible to simply switch the calls of the `updateChannelOptions()` and `updateHistogramMap()` functions. **The solution** I found was to make `histogramManager` an ObservableValue. In this case, `BrightnessContrastHistogramPane.updateHistogram()` can be called each time the `histogramManager` value changes. I don't like this solution as it exposes the `histogramManager` variable (which is an implementation detail). But this was the solution requiring the less amount of refactoring I found.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1462:1771,update,updateHistogramMap,1771,https://qupath.github.io,https://github.com/qupath/qupath/pull/1462,5,['update'],"['updateChannelOptions', 'updateHistogram', 'updateHistogramMap', 'updates']"
Deployability,"after completing the cell detection and classification. I opened one of the qptma file using notepad. I did not see any measurements or survival data in the file content - however the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total); INFO: Parsed 84 from HS-5_Scan1.ome.tif.qptma (420 total); INFO: Parsed 84 from HS-6_Scan1.ome.tif.qptma (504 total); WARN: Unable to find censored column - survival data will be uncensored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: No p-values < 0.05; INFO: Smoothing log-rank test p-values by 1; INFO: Longest stretch of",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:1482,Update,Update,1482,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['Update'],['Update']
Deployability,"ain it by adding annotations and setting their classifications on any image. Then if you open each of the images you previously annotated for training, QuPath will look for any annotated regions and (optionally) add them to the training as well. Using this approach, you end up with a whole new classifier - but it can be based on the old training, plus whatever you want to add. This is ok if you only used one or two images for training in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information from the old slide that you are closing and also the new slide that you are opening) or not (i.e. discard all the training information from the slide that was previously open). Again, the ```More...``` button can be useful. You can use it to find out how many objects have been used for training for each image in the project (*Show training object counts*). You can also use this button to apply the current classifier to all images in the project (*Classify project images*). Probably, you would want to train a classifier that works reasonably across all your TMA cores and all your slides, and then apply this across all your slides at the end - to make sure they all have the same classifier applied the sa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:1730,update,updated,1730,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['updated']
Deployability,ainer.doSelect(ContextMenuContent.java:1380); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer.lambda$createChildren$12(ContextMenuContent.java:1333); at com.sun.javafx.scene.control.ContextMenuContent$MenuItemContainer$$Lambda$1392/0x0000000840654440.handle(Unknown Source); at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: QuPath exception; at qupath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:6781,update,updateSuggestedOverlayColorFromThumbnail,6781,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,"aining in the past, but it could be a bit annoying if you annotated lots of images in a project. In this case, there is a shortcut that you can use. Click on *Advanced options* in the *Create detection classifier* window and select the ```More...``` button on the right. If you choose *Rebuild training from project* QuPath will then loop through *all* the images in the project and use any annotations it finds to train the new classifier. For your other question, the classifier is applied across the entire slide that is currently open - so that means that the classification will be updated for all TMA cores that are on the current slide (but *not* TMA cores that are on a different slide!). When you train the classifier and open a new image, you have the option to retain your training (i.e. continue to build a classifier, using all the information from the old slide that you are closing and also the new slide that you are opening) or not (i.e. discard all the training information from the slide that was previously open). Again, the ```More...``` button can be useful. You can use it to find out how many objects have been used for training for each image in the project (*Show training object counts*). You can also use this button to apply the current classifier to all images in the project (*Classify project images*). Probably, you would want to train a classifier that works reasonably across all your TMA cores and all your slides, and then apply this across all your slides at the end - to make sure they all have the same classifier applied the same way. You can either do this with the *Classify project images* option under ```More...```, by opening each image in turn and loading/running the classifier, or by using a script to automate the process. I hope that helps explain things a bit. I admit that things get a bit more complicated whenever you need to train a classifier across multiple images, and then update it later... but sometimes I also find that it is necessary.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288491139:3077,update,update,3077,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288491139,1,['update'],['update']
Deployability,"ance(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Unknown Source); at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(Unknown Source); at java.base/java.util.ServiceLoader$ProviderImpl.get(Unknown Source); at java.base/java.util.ServiceLoader$3.next(Unknown Source); at qupath.lib.images.servers.ImageServerProvider.getInstalledImageServerBuilders(ImageServerProvider.java:104); at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1601); at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:1059); at qupath.lib.gui.QuPathApp.start(QuPathApp.java:60); at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:846); at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:455); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Unknown Source); 17:02:49.461 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - If you want to use OpenSlide, you'll need to get the native libraries (either building from source or with a packager manager); and add them to your system PATH, including openslide-jni.; 17:02:49.798 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 17:02:49.798 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 17:02:52.272 [qupathgui-1] [INFO ] qupath.lib.gui.QuPathGUI - Current version 0.2.3, latest stable release 0.2.3 - nothing to update; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725509556:2706,update,update,2706,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725509556,3,"['release', 'update']","['release', 'update']"
Deployability,"and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit technical for what this GUI component is. I'd have done core vs non-core, but is there a way of distinguishing between core and non-core extensions? The only distinction I could dig out was those that implement GitHubProject (or ImageServerProvider). I could hard code them, but that seems a bit fragile. What I have gone with in the current version is ""Editable"" vs ""non-editable"", but this is... well just wrong really. Relatedly, that means that some of the user-installed extensions also can't be updated, so those buttons will need to be disabled also.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:3008,install,installed,3008,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,4,"['install', 'update']","['installed', 'updated']"
Deployability,"and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. I'm afraid not any time soon... QuPath is just displaying the images as Bio-Formats provides them, and here they are as distinct 'series' (as presumably the scanner writes them separately as well to the file). Deciphering exactly which series belong together and where to position them in the viewer wouldn't be an easy task, especially as it would need to be solved for different scanners - which may have their own complexities. For example, I think series (scenes) can overlap in .czi files, and indeed there might be different z-slices and time points. It's also a little scary... if a scene is wrongly positioned, and then this is identified and fixed, previous analysis of the same image won't match any more. Therefore it is a big and complex job; I look into it every now and then, but don't plan to take it on any time soon. > regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?). Bio-Formats needs to have read the channel names from the file, and I'm not sure that it does for .scn - it doesn't appear to in the images of yours that I've seen. So this would require a change in Bio-Formats. I added some descriptions of scn-related issues on the Bio-Formats issue tracker on GitHub https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-410024564. There are other ways to contact the Bio-Formats team to discuss more or check if this has been discussed elsewhere, e.g. https://www.openmicroscopy.org/support/. > is it possible to delete scripts within the script editor (such as empty ""untitled"" scripts that get created by default when opening the editor)?. As @Svidro mentions, there's a _File &rarr; Close script_ option - I use the shortcut `Ctrl + W`.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411649825:3507,update,update,3507,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411649825,1,['update'],['update']
Deployability,"ankhead.github.io), is the main person writing scripts to everyone who asks on GitHub and Google Groups, teaches workshops on it when invited and has got time, and wrote detailed instructions for setting it up with IntelliJ to script with auto-completion & access to the full source code (and internal javadocs) [here](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ). At this time, all continued work and support is entirely unfunded and unpaid. I'm also not a professional programmer (nor a biologist). As described in the [Getting help](https://github.com/qupath/qupath/wiki/Getting-help) section of the Wiki, the [Google Group](https://groups.google.com/forum/#!forum/qupath-users) exists to answer questions and cover any gaps in the documentation. Therefore, please do try to be fair in your expectations :). > Overall, its very sad that there is so limited possibilities for scripting and export of those objects. It kind of destroys all that nice classification features, because it cannot be integrated in practical workflows. I think, the project would profit a lot to improve there asap, because, the core functionality itself is very interesting for people. Segmentation is either too slow, too complex or not precise enough with other tools. I hope the above comments explain why this is the case. The possibilities with Groovy are pretty limitless - sometimes all it takes is to ask. But the software is being used by hundreds of groups across the world for very different applications (if you see the [Citing QuPath](https://github.com/qupath/qupath/wiki/Citing-QuPath) page you will observe that others _do_ manage to use it in 'practical workflows'), and from what you describe you aren't working with whole slide images. Adding the functionality you want to the core software would potentially not benefit anyone else using it... which is why the ability to script things is so essential. I wish the software could do everything already, but it's a process. Bu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401546472:3032,integrat,integrated,3032,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401546472,2,['integrat'],['integrated']
Deployability,"ar counterstain in the first channel. This morning I tried to address this, and hopefully you find it functions better in [v0.0.5](https://github.com/qupath/qupath/releases/tag/v0.0.5), which I've just uploaded. An example image from a fluorescence microscope is shown below. ![qupath_fluorescence_cells](https://cloud.githubusercontent.com/assets/4690904/20115597/cf2682ae-a5f0-11e6-88c9-82298e3cd1ea.jpg). A few important points (which will eventually be documented on the Wiki):; - QuPath tries to identify brightfield and fluorescence images when they are opened (although you can ask it not to under _Auto-estimate image type on opening_ option in the _Preferences_); if it gets it wrong, you will need to double-click the `Image type` in the _Image_ tab to set this manually to fluorescence.; - The `Image type` needs to be set before running the _Cell detection_ command, to make sure that the right options are displayed; - The _Threshold_ option under _Intensity parameters_ will be important, and will likely need to be adjusted... the default is simply selected for all images of that type and bit-depth, and not based on the information present in the image; - If you are working with images at a relatively low resolution (such as in the screenshot I showed), it can be helpful to decrease the _Detection line thickness_ parameter in the _Preferences_ so that the cell or nucleus outlines do not obscure your view too much.; - The _Brightness/Contrast_ options currently misbehave somewhat with fluorescence. If you want to show/hide specific channels, it's actually better to simply type the number of the channel you want to hide or show several times (i.e. just the number 1, 2 or 3 etc.). This should toggle it on or off. Actually, this last trick to change visible channels also works for brightfield, except that 1 indicates the RGB image, 2 the first color deconvolved channel, 2 the second... and so on through multiple color transforms. I hope this is useful. Best wishes,. Pete",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-259250203:2143,toggle,toggle,2143,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-259250203,2,['toggle'],['toggle']
Deployability,"ass = annotation.getPathClass(); ; def roi = annotation.getROI(). tw = (int) roi.getBoundsWidth(); th = (int) roi.getBoundsHeight(). if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; //if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500)){; //print result; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");; //IJ.run(imp, ""Median..."", ""radius=5"");; IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; // python code for normalisation and structure convolution; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");; //getHistogram(values, counts, 256); IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");; ; rm = RoiManager;; rm = RoiManager.getInstance(); ; ; if((rm==null) || (rm.getCount()<1)){; print(""No objects found""); }else{; //print rm.getCount(); //RoiManager.roiManager(""count""); //rm.runCommand(imp,""Measure"");; //rm.runCommand(imp,""Update"");; IJ.run(imp, ""Send Overlay to QuPath"", ""choose_object_type=Detection include_measurements"");. // Get a suitable file name; //String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; //File file = new File(dirOutput, name); // Save the image; //IJ.save(imp, file.getAbsolutePath()); // Print progress; //imp.show() ; rm.reset() ; ; }; ; //counter++",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357429324:1714,integrat,integrated,1714,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357429324,2,['integrat'],['integrated']
Deployability,"at might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1241,Install,Install,1241,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['Install'],['Install']
Deployability,"atformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Dark; 02:39:38.757 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 02:39:38.781 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 02:39:38.837 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - QuPath Notice: This is a pre-release version of QuPath; Version: 0.0.6; Build time: 2016-11-16, 15:54; 02:40:13.093 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideServerBuilder - Could not load OpenSlide native library; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopenslide-jni.so: libopenslide.so.0: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at org.openslide.OpenSlideJNI.<clinit>(OpenSlideJNI.java:55); 	at org.openslide.OpenSlide.<clinit>(OpenSlide.java:53); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:91); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:47); 	at qupath.lib.images.servers.ImageServe",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:3425,release,release,3425,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['release'],['release']
Deployability,"ath, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes it easier to use different IDEs. The combination of Java 8, JavaFX, Maven, Ant and native libraries makes it more difficult than a project using Java alone, and there wasn't previously a critical need. Still, the portability is something that I hope will be improved in the future.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2886,install,installation,2886,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['install'],['installation']
Deployability,"athPrefs - Locale FORMAT set to fr_BE; 12:25:42.714 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 12:25:42.742 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 4096,00 MB; 12:25:43.922 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Refreshing extensions in /home/joelrv/QuPath/extensions; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:1505,update,update,1505,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['update'],['update']
Deployability,"ation Thread] [WARN ] qupath.lib.gui.QuPathGUI - No directory set for log files! None will be written.; 12:07:41.225 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.2.0-m1; Build time: 2019-03-08, 17:51; Latest commit tag: v0.0.1-beta-561-gfb062c1. (QuPath-0.2.0-m1:8210): Gdk-WARNING **: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 12:07:42.748 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.0.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/home/joelrv/software/opt/QuPath/qupath_0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will retur",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:1938,release,release,1938,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['release'],['release']
Deployability,"ava.util.NoSuchElementException); WARN: Temp memoization directory created at C:\Users\DanielH\AppData\Local\Temp\qupath-memo-13737650391880953912; WARN: If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; ERROR: *** One or more readers is misbehaving. See the debug output for more information. e.g.:; loci.formats.in.APLReader@578b4451 -> java.lang.NullPointerException('null') ***; WARN: Removing alpha channel; WARN: Removing alpha channel; ERROR: QuPath exception: Java heap space; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(Unknown Source); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:539); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:707); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:902); at qupath.lib.display.ImageDisplay.updateHistogramMap(ImageDisplay.java:573); at qupath.lib.display.ImageDisplay.setImageData(ImageDisplay.java:144); at qupath.lib.gui.viewer.QuPathViewer.setImageData(QuPathViewer.java:1475); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2547); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2425); at qupath.lib.gui.commands.OpenCommand.run(OpenCommand.java:51); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$53(QuPathGUI.java:3528); at qupath.lib.gui.QuPathGUI$$Lambda$155/0x000000080024c040.accept(Unknown Source); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchE",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382:1999,update,updateHistogramMap,1999,https://qupath.github.io,https://github.com/qupath/qupath/issues/382,1,['update'],['updateHistogramMap']
Deployability,bda$registerChangeListener$61(BehaviorSkinBase.java:197); at com.sun.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:526); at javafx.scene.control.TreeCell.lambda$new$256(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TreeView.setRoot(TreeView.java:470); at qupath.lib.gui.panels.ProjectBrowser.setProject(ProjectBrowser.java:271); at qupath.lib.gui.QuPathGUI.setProject(QuPathGUI.java:4186); at qupath.lib.gui.QuPathGUI$setProject$0.call(Unknown Source); at org.codehaus.groovy.runtime.callsite.C,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:1957,update,updateItem,1957,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,1,['update'],['updateItem']
Deployability,beside the library above there was also javax.script that was not installed properly. After adding two entries for the lib above with the last version of github I could run it in debug mode with JIdea and then create a single JAR including all jar files. . Somehow (maybe because of Intelli JIdea) the target version of interpreter and java compiler did not match. I had to change for all the different modules to 1.8. . The ant build did not work but finally the jar file is fine for our needs. Somehow it is also much smaller then the Windows install. It makes about 30MB instead of 300MB for the windows install but maybe there is some lib I didn't include. Anyway If something comes up will update the thread.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-315890621:66,install,installed,66,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-315890621,4,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"blems that need your help, as follows; ------------------------------------------------------------------------------------------------------------; test environment:; **system**: CentOS7、java version ""1.8.0_131""; **work path**:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qu",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1132,deploy,deploy,1132,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"can you help me to fix this problem , i were using flutter in vscode macos10.14, ; the problem happens after i updated the sdk , ; the problem faces even i created new project, ; it affects all of the code in flutter; <img width=""925"" alt=""Screen Shot 2019-12-31 at 10 53 48 AM"" src=""https://user-images.githubusercontent.com/58293521/71614299-e6d7c300-2bbb-11ea-9e1f-30c171196373.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/281#issuecomment-569884029:111,update,updated,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/281#issuecomment-569884029,1,['update'],['updated']
Deployability,"clipse - I'm afraid I don't know how to address the issues when using other IDE's.; (Incidentally, those instructions are a little old now, not all steps may be necessary. For example, from memory I think only the .project file needs updated, not the .classpath file.). However, here are some notes that might be helpful:. * Most of the POM files should descend from the 'base' POM, which specifies that the compiler should be compatible with [Java 8 here](https://github.com/qupath/qupath/blob/v0.1.2/pom.xml#L176). I believe this should then be inherited across the project.; * slf4j-api is a dependency of logback-classic. This is specified in the base POM, and so Maven should still take care of slf4j even if it isn't mentioned directly. I don't know why anything involving javax.script would be troublesome.; * The jar files alone required for QuPath are reasonably small, but the JRE is required for running it. The JavaFX packager can be used to put them all together in one (larger) installer, but if you already have a compatible JRE installed then you shouldn't need this.; * OpenSlide and OpenCV require native libraries... which opens a new area of effort for configuring everything properly. I suspect this final point is critical for the 'opening only thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you w",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:1147,install,installer,1147,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,2,['install'],"['installed', 'installer']"
Deployability,"cs.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then it'd be great to use the same (or at least similar) processes on all platforms. Would appreciate any feedback/advice from @bgilbert and @jcupitt on the best way forward, or if yous have run into some of these issues before.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:6233,release,release,6233,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,8,"['install', 'release']","['installed', 'installs', 'release', 'releases']"
Deployability,"ctoring & simplification of `PathPlugin` and `PluginRunner` was needed. The original problem was that `PluginRunnerFX` proved to be buggy with detached windows, because the `ImageData` being handled was accessed via `PluginRunner.getImageData()`. In most cases that's fine, but `PluginRunnerFX` was always returning the *current* `ImageData` from QuPath, and if this *changed* before the plugin was complete (and had fired any hierarchy updates / logged any workflow steps) then exceptions or unexpected behavior could occur. It might conceivably have happened previously when using multiple viewers, but I don't know of any cases where it did - because QuPath locks the UI when plugins run, and this seemed to be working ok. So this PR also includes a new design greatly simplifies `PluginRunner` to simple run tasks in parallel with progress notification - with some special logic for `PathTask` implementations. Alongside that,; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, String arg); ```; has been updated to; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, ImageData<T> imageData, String arg)`; ```; so that there's no need to request the `ImageData` from the plugin runner - and it's possible to ensure this remains unchanged while all the work of the plugin is completex, no matter what might go on in the UI. Early indications are that the code is just simpler and more robust. However, it's still a core change that *could* potentially have broken lots of things, so most analysis-related commands ought to be checked (e.g. cell detection, or anything else involving `PathPlugin`). ## ImageJ, macOS & menubars. The ImageJ macro runner was an implementation of `PathPlugin`. When exploring how this was affected, I dug into a longstanding bug since QuPath's beginning: basically, ImageJ and QuPath's menus don't play together nicely on macOS: https://github.com/qupath/qupath/issues/6. Shortcuts/accelerators are particularly badly affected: the QuPath ones either don'",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1318:1952,update,updated,1952,https://qupath.github.io,https://github.com/qupath/qupath/pull/1318,1,['update'],['updated']
Deployability,"d actively-maintained; OpenSlide only really supports single-plane, 8-bit RGB images and has not been meaningfully updated for a couple of years. Nevertheless, OpenSlide remains important to QuPath users because; * A few common file formats (e.g. .mrxs) are *only* supported by OpenSlide; * Where a format is supported by both Bio-Formats and OpenSlide, OpenSlide is generally much faster at reading image tiles (although may provide less metadata); * OpenSlide offers alpha information that is relevant if regions are unscanned. The trouble is that OpenSlide is a C library, and getting it to work properly with QuPath is a challenge we haven't managed to solve... thanks to the complexities of how native dependencies - and, more importantly, their sub-dependencies - are handled on different platforms. Bug reports such as; * https://github.com/qupath/qupath/issues/355; * https://github.com/qupath/qupath/issues/628; * https://github.com/qupath/qupath/issues/627. along with breakages caused by `jpackage` updates (https://github.com/qupath/qupath/issues/615) show that the (largely manual) process initially used to try to package up the dependencies hasn't worked. For these reasons, **we need a new and maintainable approach to include OpenSlide in QuPath in the future, or else drop support entirely**. Alas, I'm sadly one of those developers who is quite helpless when attempting to build any native libraries with even moderate complexity... spoiled by Java and Python, I haven't been able to figure out a solution. Hence this issue and cry for help. The biggest problem is getting a truly portable way to build OpenSlide on each platform. If we have that, we can potentially use JNI directly or JavaCPP (https://github.com/bytedeco/javacpp) / Gradle JavaCPP (https://github.com/bytedeco/gradle-javacpp). *Ideally* all dependencies would be packaged into a single .jar file and accessed either with JavaCPP / [native-lib-loader](https://github.com/scijava/native-lib-loader). An alternative ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629:1231,update,updates,1231,https://qupath.github.io,https://github.com/qupath/qupath/issues/629,1,['update'],['updates']
Deployability,"d from within QuPath via Groovy. However, I haven't got that to work with _all_ plugins and functionality of Fiji because of conflicts in dependencies... or perhaps just because I don't know enough about the ImageJ2 API. That might well be solvable if it turns out to be necessary, but it hasn't been something I've needed myself or anyone else has asked for yet (that I recall). Direct export of ROIs only wouldn't help most QuPath applications, for the reasons outlined above (i.e. most are for whole slide images, in which case you'll need to scale the image as well - and then exporting the pixels as well as the ROIs is necessary, which _is_ possible). But I appreciate that it makes sense in your case. Just to be clear: you should be able to run the script unchanged across your entire folder if you just add all the images to a QuPath project, and choose _Run &rarr; Run for project (without save)_ from the QuPath script editor. Because that script doesn't make changes, there's no point saving the (same) results after running the script to update the `.qpdata` files... although it also shouldn't matter if you do. Regarding documentation, at the time of the QuPath's release I was in the process of leaving the university where I wrote it, and lacked the time and resources to document the API and find somewhere to host it; also, I didn't consider it stable enough at that point anyway, and planned to continue working on it. For reasons largely beyond my control this wasn't possible, unfortunately, but you can access a lot of the existing Javadocs through setting up scripting with IntelliJ (and indeed a similar process works to set up IntelliJ for Groovy scripting with Fiji). In a couple of months I will start a new position and be able to manage QuPath as a more active open source project - and be a bit stricter with myself about compiling the Javadocs and finding a home for them. In the meantime, there is some additional documentation and developments described on [my blog](",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401622161:1537,update,update,1537,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401622161,2,['update'],['update']
Deployability,d(Unknown Source); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(Unknown Source); at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; Still other times I see another error:. ```; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:475); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:200); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:190); at qupath.lib.objects.PathObject.toString(PathObject.java:224); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:66); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:36); at javafx.controls/javafx.scene.control.ListCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.ListCell.lambda$new$2(Unknown Source); at javafx.base/javafx.collections.WeakListChangeListener.onChanged(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.fireChange(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.commit(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.endChange(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.endChange(Unknown Source); at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(Unknown Source); at qupath.lib.gui.panes.AnnotationPane.hi,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:5740,update,updateItem,5740,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,"dd the parameter ""-image"". After adding parameters, the program runs normally.; -----------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/depl",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:1042,deploy,deploy,1042,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,"dent native libraries, in a way that potentially makes `qupath-core` *much* heavier that it would otherwise be. ## Usage. There are really only two places where OpenCV is used in `qupath-core`:. * [Image resizing](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/awt/common/BufferedImageTools.java#L416); * [Type adaptors for Gson](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/io/OpenCVTypeAdapters.java). ## Required change. I think (hope) type adaptors can be shifted to `qupath-core-processing` without too much trouble.; Although since the change was introduced in https://github.com/qupath/qupath/commit/0f0229fc1a6de6312bf3a2e914e9da79cf1f4bd9 the commit message hints that there was a reason to including it in `qupath-core` that might resurface in the future. I expect that the main effort would go into reimplementing image resizing. Ideally, we'd do this without introducing any new dependency (including ImageJ) to retain full control over the code and not have it subject to change with dependency updates. I expect that will be a very fiddly task, requiring some very good unit tests. ## Additional context. Resizing is performed whenever tiles are requested, e.g. https://github.com/qupath/qupath/blob/48dfb82400fb8289fa57242b08effe1977749a51/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L436-L442. In this case, it is almost always downsampling. We need to support both a 'smooth' and a 'nearest neighbor' implementation, to handle intensity and labeled/binary images at least - although we **might** want to introduce more interpolation options. See also https://github.com/qupath/2022-qupath-hackathon/discussions/2#discussioncomment-2634192. ## Significance. Having OpenCV as a dependency of `qupath-core` showed up when testing on a M1 Mac: it meant *nothing* would work until OpenCV had compatible binaries. It does now, but that flagged the issue of OpenCV being dragge",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/961:1280,update,updates,1280,https://qupath.github.io,https://github.com/qupath/qupath/issues/961,1,['update'],['updates']
Deployability,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy;,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2744,deploy,deploy,2744,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.j,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3006,deploy,deploy,3006,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launc,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2739,deploy,deploy,2739,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1954,deploy,deploy,1954,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1687,deploy,deploy,1687,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"displayed. **The issue** comes from the fact that in [ImageDisplay](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java), the function [setImageData()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L202) is called when an image is open in QuPath. This function calls the `updateChannelOptions()` function and then the `updateHistogramMap()` function (see [here](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L228C4-L228C24)):; * `updateChannelOptions()` updates the [channelOptions](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/display/ImageDisplay.java#L504) variable. It's an ObservableValue and, because of listeners, the [BrightnessContrastHistogramPane.updateHistogram()](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.java#L162C17-L162C32) function is called. This is the function responsible for displaying the histogram.; * `updateHistogramMap()` updates the `histogramManager` variable. This variable is responsible for providing the histogram values. So the problem is that the function displaying the histogram can be called before the function updating the histogram values. It is not possible to simply switch the calls of the `updateChannelOptions()` and `updateHistogramMap()` functions. **The solution** I found was to make `histogramManager` an ObservableValue. In this case, `BrightnessContrastHistogramPane.updateHistogram()` can be called each time the `histogramManager` value changes. I don't like this solution as it exposes the `histogramManager` variable (which is an implementation detail). But this was the solution requirin",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1462:1472,update,updateHistogram,1472,https://qupath.github.io,https://github.com/qupath/qupath/pull/1462,1,['update'],['updateHistogram']
Deployability,"e checked https://qupath.github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; QuPath projects with several hundred IMC images take a notably longer time to load. Opening the images themselves is comparatively faster, yet are still read into memory. No noticeable change in memory usage is occurring when the QuPath project is being loaded, indicating that these images may not be pre-loaded (i.e. cached) during loading of the project itself. My guess is that the thumbnails are being reconstructed each time the QuPath project is loaded (computer must be restarted to reproduce, closing and relaunching QuPath is not sufficient). Given that thumbnail generation was updated in the changelog of the newest unofficial release, I'll build from source now and close the ticket if I can't reproduce the bug. It's a minor inconvenience at best, especially since it's only a delay of two minutes. But keep in mind, the CPU here is a Ryzen 5950X with among the highest single thread speeds of desktop CPUs, and only 1 of the 32 threads is being used during this period. Depending on the root cause and a user's hardware configuration, load times may scale linearly or exponentially as project sizes move into the range of thousands of images. If this is caused by thumbnail generation, then this may only be affecting multiplexed IHC images such as those acquired through IMC or CODEX. **To Reproduce**; Video demonstration: https://www.youtube.com/watch?v=q4Jn9UTKUMw; 1. Create a QuPath project; 2. Load ~300 IMC images. Example IMC images can be found here: https://drive.google.com/file/d/1UcQmiIcjIfYdBVK1v6Phb32FBjHXciuH/view; 3. Close QuPath and restart system; 4. Launch QuPath and open the aforementioned project. O",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154:1263,update,updated,1263,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154,2,"['release', 'update']","['release', 'updated']"
Deployability,"e checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Building QuPath from source as described below with CUDA GPU support will throw an error, meaning the official 0.4.0 release (built 2022-12-07) cannot run StarDist on GPUs. Tested with RTX 3090 and GTX 1660 Ti GPUs. I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Issue taken from forum post: https://forum.image.sc/t/stardist-gpu-support-unknown-error/74779. **To Reproduce**; Steps to reproduce the behavior:; 1. Build QuPath from source using the following command:; ```; git clone https://github.com/qupath/qupath; cd qupath; ./gradlew clean jpackage -Pcuda-redist; ```; 2. Install either the 0.3.2 or 0.4.0 releases of the StarDist extension: https://github.com/qupath/qupath-extension-stardist/releases; 3. Download pretrained models in .pb format; 4. Draw an annotation on a brightfield image; 5. Download the following script: https://github.com/MarkZaidi/Universal-StarDist-for-QuPath/blob/main/GPU_Multimodal%20StarDist%20Segmentation.groovy; 6. Run the script; 7. Observe the following error message:; ```; INFO: Performing detection on Brightfield image using single-channel trained model; INFO: [Annotation]; ERROR: OpenCV(4.6.0) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64-gpu\opencv-4.6.0\modules\dnn\src\cuda4dnn\csl\memory.hpp:54: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); q",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:1275,release,releases,1275,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,1,['release'],['releases']
Deployability,"e pretty small. You would detach a viewer by right-clicking on it. It's just intended for exploration - I suspect there will be niggly issues. > I think it can be helpful because this feature is already present in several software like ImageJ, and I don't think it will be confusing for new users as I guess it will just require to add a new button to implement this. I think you're right, although in ImageJ there *is* no main window. In QuPath there is, so having a viewer separated from it feels a bit weirder to me - if nothing else is open, there's a big area of empty space. > Is that a request that has already been mentioned on the Image.sc forum? If not, shouldn't we ask the opinions of the QuPath users there? . Not that I remember - I thought here would be good to start the discussion, could move to the forum if it proves controversial / we need a vote :). > > Detaching one viewer (and leaving the rest of the 'viewer grid' intact); > ; > Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. This isn't exactly what I meant, but anyway: it's already the case. You can use *View &rarr; Multi-view... &rarr;* to create a grid of viewers, and the toggles apply across all of them. I agree it's sometimes restrictive, but my feeling is that it would cause more trouble if that didn't happen. What I really meant though was that a single viewer could be extracted into its own window, but the main QuPath window would remain as it always was. That's the approach in the PR. The alternative was that viewers are either all in grid mode or all in 'detached' mode (floating windows), but not a combination of both. > Final thought is, if we implement this, we need to consider what should be the advantage of having one QuPath instance with two viewers over having two QuPath instances open each with one viewer, and we should probably aim our design in that direction.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081:1173,toggle,toggles,1173,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081,2,['toggle'],['toggles']
Deployability,"e.sc/t/feature-suggestion-option-to-revert-to-last-state-on-cancelling-script-run/74486), there could be a quicker way to cancel a running script and regain control of QuPath. Currently, on cancelling a script, QuPath will continue to run the current script until completion for the current image. For complex scripts, this can take a long time, from minutes to hours. I would imagine that for most users, when they cancel a running script, they would expect it to halt immediately and regain control of QuPath. Example scenarios for this would be:; - The user quickly notices some errors or mistakes in the script just after running it and would like to correct it.; - The script is running for an unusually long time and the user would like to investigate why (e.g. too many objects created or manipulating extremely complex ROIs?). At the time of writing, I and other users would just close QuPath or kill its instance and re-open the project to ""cancel"" the script run. It is unclear if this may cause data corruption or any other negative consequences. One small inconvenience for this method is that any unsaved scripts in the Script Editor will be lost, which can be the case when testing or optimising parameters. I have suggested in the image.sc thread if there is a way to revert to the last state just before running the script when trying to cancel the script run. From my naive perspective, it could be like:. For scripts running on the currently open image only, on clicking Run,; 1. Save current state of image before running the script.; 2. Start running the script.; 3. If run is cancelled, load the state saved in step 1. For scripts running in batch, on clicking Run for project,; 1. Start running script as usual.; 2. If run is cancelled, ignore whatever that has been done on the current image being processed and maintain the last saved image data. Any images that had already completed processing the script would have an updated and saved image data (as per normal behaviour).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1167:2002,update,updated,2002,https://qupath.github.io,https://github.com/qupath/qupath/issues/1167,1,['update'],['updated']
Deployability,"e](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1046). In this iteration, if you have time to test it, I've also added the side-to-side wheel clicks (or shift + normal mousewheel scrolling). I've spent some time trying to understand how [Mouse Events](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/input/MouseEvent.html) are handled in JavaFX and I *think* I managed to sort out the issues I was initially having: Behaviour when dragging with middle button pressed, fast clicks, when to consume events or not, debouncing... Incidentally, the debouncing code is not strictly necessary, but it was an interesting exercise in working with a broken mouse. Also, I *think* `MouseEvent.MOUSE_RELEASED` should be added to the [list of ignored events here](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1039) as without, I had to deal with the (middle) button release event multiple times as part of the events generated by JavaFX in the course of pressing a mouse button. Finally, I've also UX tested the behaviours we discussed in the [forum.sc post](https://forum.image.sc/t/tool-selection-via-mousewheel-side-scrolling-button-press/70796/4?u=ep.zindy) and reproduced in the first comment. For now,; * Windows,; * with my ""fancy"" mouse; * with the shift+scrollwheel substitute for side-to-side scrolling; * my Lenovo T460 touchpad; * with scroll touch gestures enabled or disabled; * with inverted mouse enabled or disabled; * with ctrl to modify opacity; ; I couldn't use ""Zoom"" or ""Rotate"" touch gestures, because I don't think my very basic touchpad understands them, so I couldn't see any effects on QuPath. Panning does work as expected (with my very last commit). ~~**todo** I will edit my comment when I test a Linux build on my old powerbook with Mint, which (maybe) will let me use more touch gestures.~~ I haven't been able to use touch gestures with QuPath in my Cinnamon",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123:1108,release,release,1108,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123,2,['release'],['release']
Deployability,"ed .mrxs images too deeply. I haven't needed to, and so far I've just sadly accepted that the creators of the format just don't seem to want it to be very open. I am also not completely sure I understand the exact question here - I don't know how things look in either QuPath or CaseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not enti",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1130,release,release,1130,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['release'],['release']
Deployability,"ed if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.pro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1712,Update,Update,1712,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['Update'],['Update']
Deployability,eeView.java:1334); > at javafx.event.WeakEventHandler.handle(WeakEventHandler.java:79); > at com.sun.javafx.event.CompositeEventHandler$WeakEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:248); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:6526,update,updateChildren,6526,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,37,['update'],['updateChildren']
Deployability,"enCVExtension.java:116). at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1093). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:637). at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:429). at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63). at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863). at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326). at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295). at java.security.AccessController.doPrivileged(Native Method). at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294). at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95). at com.sun.glass.ui.win.WinApplication._runLoop(Native Method). at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177). at java.lang.Thread.run(Thread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths wou",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:1603,update,update,1603,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,2,['update'],['update']
Deployability,"eneral, when something is used internally by QuPath, we have a much better idea of what we might be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things for anyone else. We can even move it up into `QP` so that it works without knowing anything about the viewer at all. I think that as a compromise this is more than fair. It means you get the outcome you want, and we did not have to compromise to do something that I strongly believe will end up wasting a lot of time in the future (be that mine or someone else's). QuPath remains a 0.x.x release and so the API shouldn't be interpreted as stable. I don't encourage writing extensions for that reason. But I do recognise that extensions are important, and so if someone wants to do it (aware of the risks) then it is supported. I hope that more clearly explains my logic. Since it feels like we've discussed this subject many times, I thought I should be thorough in this answer. Now I've no time to shorten it.... I hope it is useful. v0.2.0 has been a rather... intense experience. Pretty much the entire software has been rewritten, while still trying to keep it basically functional and respond to the ever-increasing questions and requests from users. Sometimes it gets exhausting. QuPath is by no means finished, but I do think it is substantially better and more coherent than it previously was. The goal of v0.2.0 was to get decent foundations as quickly as possible - but the task turned out to be huge. The importance of many of the new features will only become clear in future releases. v0.3.0 won't have ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:5611,release,release,5611,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['release'],['release']
Deployability,"eport them on GitHub or image.sc - don’t just stick with an older milestone that seemed to work!. And this one under object hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(Pa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1229,update,update,1229,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['update'],['update']
Deployability,"er the TMA Data Viewer was able to populate all the columns including measurements. Where is the data being pulled from ? what kind of magic is this. I may also have discovered additional bug(s):. 1. I am seeing columnImage is null error in the log at loading - everything seem to work regardless. The same error is thrown everytime I toggle ""Group by ID"" as well.; ```; ERROR: QuPath exception: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; java.lang.NullPointerException: Cannot invoke ""javafx.scene.control.TreeTableColumn.setPrefWidth(double)"" because ""columnImage"" is null; at qupath.lib.gui.tma.TMASummaryViewer.lambda$refreshTableData$66(TMASummaryViewer.java:1463); ```; 2. In the log I also noticed ```WARN: Unable to find censored column - survival data will be uncensored``` - not sure why ? ; ```; INFO: Update check for https://github.com/qupath/qupath; WARN: You need to enable the startup script in the Preferences if you want to run it; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: Predicate set to: null; INFO: Parsed 84 from HS-1_Scan1.ome.tif.qptma (84 total); INFO: Parsed 84 from HS-2_Scan1.ome.tif.qptma (168 total); INFO: Parsed 84 from HS-3_Scan1.ome.tif.qptma (252 total); INFO: Parsed 84 from HS-4_Scan1.ome.tif.qptma (336 total); INFO: Parsed 84 from HS-5_Scan1.ome.tif.qptma (420 total); INFO: Parsed 84 from HS-6_Scan1.ome.tif.qptma (504 total); WARN: Unable to find censored column - survival data will be uncensored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: Survival column: Overall survival, Censored column: OS censored; INFO: No p-values < 0.05; INFO: Smoothing log-rank test p-values by 1; INFO: Longest stretch of p-values < 0.05: 12294.9 - 13980.4 (18 entries, 5 observed); INFO: Smoothing log-rank test p-values by 11; INFO: Longest stretch of p-values < 0.05: 12294.9 - 13980.4 (18 entr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901:1668,Update,Update,1668,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289564901,1,['Update'],['Update']
Deployability,"erably, because the command must also be scriptable and then somehow the units need to incorporated into any script. Additionally, QuPath is moving towards greater generality. It is increasingly used for images where µm is an inappropriate unit, so I'm reluctant to add additional code that assumes µm as the only alternative to pixels. And a properly generic system will take a lot more effort to develop (not helped by the fact that Java has no built-in support for converting units... it's a recurring theme, e.g. [here](https://jcp.org/en/jsr/detail?id=385), but as far as I'm aware there are a multiple implementations and it's not clear which, if any, we should use). This also affects the sparse image server: at the point the dialog is shown, we don't know if the pixel size is available in µm for the regions that will be required to generate the server. Furthermore, the dialog itself is [auto-generated from a `ParameterList`](https://github.com/qupath/qupath/blob/main/qupath-extension-processing/src/main/java/qupath/process/gui/commands/CreateTrainingImageCommand.java#L90), which limits the ability to toggle between units. Added to that, I'm not terribly happy with the generation of 'dynamic' training images generally; the code is really complex (since the images can be quite heterogeneous), and performance can be poor whenever many images need to be accessed to create the final result. Therefore I wonder if creating a new command that defaults to writing the image as a new file would be preferable anyway. I'll leave this open for a while in case there are further comments, but my feeling is that the development-and-maintainence-time-to-benefit ratio isn't favorable enough to work on this in the core QuPath software; there are too many higher priorities, and if I'd rather focus efforts on simplicity, maintainability and generalizability in the code. Anyone else can create a new extension to provide an alternative implementation for any of the commands if they want to.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932:1280,toggle,toggle,1280,https://qupath.github.io,https://github.com/qupath/qupath/issues/1407#issuecomment-1783782932,2,['toggle'],['toggle']
Deployability,"ers"": true}; > ERROR: QuPath exception; > at javafx.scene.Node.access$100(Node.java:398); > at javafx.scene.Node$1.doMarkDirty(Node.java:424); > at com.sun.javafx.scene.NodeHelper.markDirtyImpl(NodeHelper.java:158); > at com.sun.javafx.scene.shape.ShapeHelper.markDirtyImpl(ShapeHelper.java:80); > at com.sun.javafx.scene.NodeHelper.markDirty(NodeHelper.java:98); > at javafx.scene.shape.Shape$2.invalidated(Shape.java:463); > at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); > at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); > at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); > at javafx.css.StyleableObjectProperty.applyStyle(StyleableObjectProperty.java:68); > at javafx.scene.shape.Path.<init>(Path.java:139); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.createButtonShape(BreadCrumbBarSkin.java:324); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton.updateShape(BreadCrumbBarSkin.java:298); > at impl.org.controlsfx.skin.BreadCrumbBarSkin$BreadCrumbButton$1.invalidated(BreadCrumbBarSkin.java:290); > at com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:321); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.add(ModifiableObservableListBase.java:155); > at java.base/java.util.AbstractList.add(AbstractList.java:111); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.createCrumb(BreadCrumbBarSkin.java:219); > at impl.org.controlsfx.skin.BreadCrumbBarSkin.updateBreadCrumbs(BreadCrum",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:2097,update,updateShape,2097,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['update'],['updateShape']
Deployability,"es related to Gatekeeper on macOS. Gatekeeper is a security feature designed to ensure that only trusted software runs on a user's Mac, and the post focuses on helping developers troubleshoot and resolve issues that may arise in this context.; The post identifies four common Gatekeeper problems that developers may encounter:. 1. App blocked by a dangling load command path.; 2. Broken code signature.; 3. Lack of notarization.; 4. Command-line tool blocked by Gatekeeper. For each of these issues, the post provides detailed steps and guidance on how developers can resolve them. The emphasis is on the importance of passing Gatekeeper checks to maintain customer trust and avoid potential loss of customers.; Key points covered in the post include:. • Verification of Code Signature: Developers are advised to use the codesign tool to verify that their code is signed correctly. The post provides examples of command-line usage to check for issues such as missing or invalid sealed resources.; • Notarization Issues: Gatekeeper requires that apps be notarized, and the post guides developers on how to identify and resolve notarization problems. It includes information on checking system logs for specific entries related to notarization issues.; • Hash Mismatch: In cases where there's a hash mismatch, the post provides guidance based on the file type (e.g., zip archive, signed disk image, installer package) and recommends specific actions to address the problem.; • Command-line Tool Blocking Bug: A known bug in macOS is acknowledged, where double-clicking a command-line tool in Finder may lead to it being blocked by Gatekeeper. Workarounds, such as embedding the tool in an application or using an installer package, are suggested. Throughout the post, there are references to Apple's documentation and resources related to code signing and notarization, providing developers with additional information for a deeper understanding. https://forums.developer.apple.com/forums/thread/706379",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1672:3801,install,installer,3801,https://qupath.github.io,https://github.com/qupath/qupath/issues/1672,2,['install'],['installer']
Deployability,extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1891,deploy,deploy,1891,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1624,deploy,deploy,1624,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ X ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ X ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. Installing QuPath under two different users in the same computer allows for the second installation to access the directory of the first user that installed the software. These seems to be a security bug. This doesn't occur when installing the zip version. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the "".msi"" QuPath installation file ; 2. Install in a first user -> admin rights require for installation; 3. Complete installation and start the program; 4. Sign out of the first session ; 5. Sign in into the next user; 6. Download the "".msi"" file ; 7. Install QuPath -> admin rights require for installation.; 8. Here you will notice that the setup steps are skip; 9. If you go to the extensions folder through the extension tab in QuPath you will notice that the paths are associated to the first user. **Expected behavior**; A clear and concise description of what you expected to happen. No access to the file system of other users since that rises a security concern. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...] Windows; - QuPath Version: [e.g. 0.2.2] v0.3.2. **Addition",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:1170,install,installing,1170,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,1,['install'],['installing']
Deployability,"fusing for new users as I guess it will just require to add a new button to implement this. I think you're right, although in ImageJ there *is* no main window. In QuPath there is, so having a viewer separated from it feels a bit weirder to me - if nothing else is open, there's a big area of empty space. > Is that a request that has already been mentioned on the Image.sc forum? If not, shouldn't we ask the opinions of the QuPath users there? . Not that I remember - I thought here would be good to start the discussion, could move to the forum if it proves controversial / we need a vote :). > > Detaching one viewer (and leaving the rest of the 'viewer grid' intact); > ; > Does this mean that you'd have (eg) one button that toggles visible annotations on both images? If so, this seems restrictive, though I don't know if it would be annoyingly so. This isn't exactly what I meant, but anyway: it's already the case. You can use *View &rarr; Multi-view... &rarr;* to create a grid of viewers, and the toggles apply across all of them. I agree it's sometimes restrictive, but my feeling is that it would cause more trouble if that didn't happen. What I really meant though was that a single viewer could be extracted into its own window, but the main QuPath window would remain as it always was. That's the approach in the PR. The alternative was that viewers are either all in grid mode or all in 'detached' mode (floating windows), but not a combination of both. > Final thought is, if we implement this, we need to consider what should be the advantage of having one QuPath instance with two viewers over having two QuPath instances open each with one viewer, and we should probably aim our design in that direction. Otherwise it could both be a lot of work and even end up with ambiguity in user experience (eg ""if I press this button, which image is affected...? or both...?""). We already have the ambiguity - it's 'resolved' by there being a red boundary around the 'active' window, and it'",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081:1450,toggle,toggles,1450,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317#issuecomment-1708778081,2,['toggle'],['toggles']
Deployability,"galAccessException: class qupath.lib.gui.prefs.QuPathStyleManager cannot access class com.sun.javafx.css.StyleManager (in module javafx.graphics) because module javafx.graphics does not export com.sun.javafx.css to unnamed module @6150c3ec; at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:392); at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:674); at java.base/java.lang.reflect.Method.invoke(Method.java:560); at qupath.lib.gui.prefs.QuPathStyleManager.addStyleSheets(QuPathStyleManager.java:576); ```. These could be addressed by adding; ```gradle; application {; // ... other stuff. // Necessary when using ./gradlew run to support style manager to change themes; applicationDefaultJvmArgs << '--add-opens'; applicationDefaultJvmArgs << 'javafx.graphics/com.sun.javafx.css=ALL-UNNAMED'; }; ```; However this doesn't seem to be needed when using the `jpackage` output, since there the module path still is not actually used (verified using the above script again). Problems still persisted with variant-related issues when building `qupath-app` specifically, which I eventually tracked down to the use of https://github.com/jk1/Gradle-License-Report. The workaround is to incorporate `excludeGroups = ['org.openjfx']` into `licenseReport` - which is unfortunate, but the JavaFX licenses should still be bundled in QuPath via other means. ----. The requirement for `--add-opens` made this a slightly scary change to make shortly before release, in case it is also needed in other places - but as far as I can tell its importance is limited to when `./gradlew run` is used and not the final packages. The reason for doing this anyway is that it should resolve a longstanding problem whereby JavaFX dependencies with classifiers relating to the build platform are included in the pom. This can be seen [here](https://maven.scijava.org/content/repositories/releases/io/github/qupath/qupath-gui-fx/0.4.4/qupath-gui-fx-0.4.4.pom).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1364:2628,release,release,2628,https://qupath.github.io,https://github.com/qupath/qupath/pull/1364,2,['release'],"['release', 'releases']"
Deployability,"h-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args: -image, ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg, -script, t6.groovy",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2888,deploy,deploy,2888,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,22,['deploy'],['deploy']
Deployability,"h/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medianCleanup"": true, ""dilateBoundaries"": false, ""smoothCoordinates"": true, ""excludeOnBoundary"": false, ""singleAnnotation"": true}');; ------------------------------------------------------------------------------------------------------------------; **error**:; 21:52:15.344 [ma",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3901,deploy,deploy,3901,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"h/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:346); 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:152); 	... 1 common frames omitted; C",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3634,deploy,deploy,3634,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"h/app/libopencv_java310.so which might have disabled stack guard. The VM will try to fix the stack guard now.; It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.; 02:39:37.931 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /home/bl/ip/QuPath/app/libopencv_java310.so: libavcodec-ffmpeg.so.56: cannot open shared object file: No such file or directory; 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:60); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:73); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:120); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1092); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:633); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:418); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:59); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$106(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$119(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$117(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$118(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:39:38.754 [JavaFX Application Th",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:2008,install,installExtension,2008,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['install'],['installExtension']
Deployability,"having a project opened, with drawn annotations on a few H&E images. The following message popped-up when I clicked on **""Automate""**. It didn't open the regular choices shown when inserting a script; I instantly had:. _ERROR:_; INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (29 ms); INFO: Loaded extension Experimental commands (16 ms); INFO: Loaded extension ImageJ extension (35 ms); INFO: Loaded extension JPen extension (16 ms); INFO: Loaded extension OpenCV extensions (5 ms); INFO: Loaded extension Rich script editor extension (213 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: _Name_; INFO: Image data set to ImageData: Brightfield (H&E), _ImageName_; ERROR: QuPath exception; at qupath.lib.gui.ScriptMenuLoader.addMenuItemsForPath(ScriptMenuLoader.java:149); at qupath.lib.gui.ScriptMenuLoader.updateMenu(ScriptMenuLoader.java:130); at qupath.lib.gui.QuPathGUI.lambda$new$9(QuPathGUI.java:776); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); at javafx.event.Event.fireEvent(Event.java:198); at javafx.scene.control.Menu.setShowing(Menu.java:198); at javafx.scene.control.Menu.show(Menu.java:412); at javafx.scene.control.skin.MenuBarSkin.showMenu(MenuBarSkin.java:472); at javafx.scene.control.skin.MenuBarSkin.showMenu(MenuBarSkin.java:451); a",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/373:1008,update,updateMenu,1008,https://qupath.github.io,https://github.com/qupath/qupath/issues/373,1,['update'],['updateMenu']
Deployability,having problem in installing qupath in my mac,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/426:18,install,installing,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/426,1,['install'],['installing']
Deployability,"hed the QuPath project in 0.4.1, and the load time was nearly instantaneous. Which, while resolving the issue, also means that the issue exists outside of QuPath. So, for some reason, the thumbnail previews are lost after a period of time, and don't seem to coincide with closing the folder or restarting the computer. The first thing I attempted to preserve thumbnails was to ensure ""Always show icons, never thumbnails"" in the folder options was unchecked, however it already was by default:; ![image](https://user-images.githubusercontent.com/52012166/211071879-ac70ef62-925f-4fe5-8ec3-10763d391393.png); Toggling this field didn't seem to have any impact on project loading performance, since in either case, the thumbnails were already generated (just replaced with an icon if the box is checked).; Next, under Windows performance options, I noticed ""save taskbar thumbnail previews"" was unchecked by default. I've checked it, and so far, I don't seem to have trouble loading projects that already have thumbnails generated in explorer. ; ![image](https://user-images.githubusercontent.com/52012166/211072664-c211658b-7aa6-435d-8067-830b4e1620b1.png). I'll continue to test other projects and rebooting my computer, to confirm if this has resolved the issue. TL;DR: **Check ""save taskbar thumbnail previews"" under Windows performance options. Subsequent loads of the project should now be much faster**. EDIT: So far, this fix persists after rebooting the system. EDIT 2: I've opened the project again after a few hours, verifying that the thumbnails exist in Windows Explorer. I'm now getting a long project load time (although anecdotally, it feels a bit faster), which means the above fix might not work as it could be tied to something other than thumbnails generated in Explorer. Currently, the project is located on the OS-installed drive (NVMe SSD), but the images are located on a separate local NVMe SSD. I'll see if moving both the project and images onto the OS drive changes anything",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580:2347,install,installed,2347,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1373971580,1,['install'],['installed']
Deployability,"hello friendly qupath team, i wanted to let you all know that github actions now has an apple m1 runner. this might be useful to package qupath on arm macs -- though i see that qupath already has arm releases for apple. https://github.blog/changelog/2024-01-30-github-actions-introducing-the-new-m1-macos-runner-available-to-open-source/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1458:200,release,releases,200,https://qupath.github.io,https://github.com/qupath/qupath/issues/1458,1,['release'],['releases']
Deployability,hey @petebankhead were you using the defaults command to update the version number? Not sure if you noticed my edit to the original post here:; Edit: you will need to change the permissions of the file after running above command as it will be 600 and should be 664; sudo chmod 664 /Applications/QuPath.app/Contents/Info.plist. Perhaps the plist was seen as damaged after modifying it and the file then had the incorrect permissions?,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1337#issuecomment-1750377772:57,update,update,57,https://qupath.github.io,https://github.com/qupath/qupath/issues/1337#issuecomment-1750377772,1,['update'],['update']
Deployability,"hi,; I can run groovy scripts in qupath, but I will run an exception when running groovy scripts in linux.; ----------------------------------------------------------; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:213,deploy,deploy,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,20,['deploy'],['deploy']
Deployability,"hierarchy section:. > Things that worked before should still work (if they don’t, please report the bug!). To reproduce:. 1. Create a project in m5, import an image; 2. Copy this qpdata to the project entry: [data.zip](https://github.com/qupath/qupath/files/3857086/data.zip); 3. Open project with m6. I don't recall the version that created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelp",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1292,update,updates,1292,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['update'],['updates']
Deployability,"hi！; I used mvn to deploy qupath in Linux and compiled the src/main/java/qupath/QuPath.java file for image detection. But I have encountered some problems that need your help, as follows; ------------------------------------------------------------------------------------------------------------; test environment:; **system**: CentOS7、java version ""1.8.0_131""; **work path**:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:19,deploy,deploy,19,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,8,['deploy'],['deploy']
Deployability,"hread.java:748). INFO: Selected style: Modena Light. INFO: Performing update check... INFO: Starting QuPath with parameters: []. . I deinstalled the other version but there it did work without any problems. Is there any way to deinstall qupath so that I can try to install it again?. . Best,. Marcel. . . Von: Pete [mailto:notifications@github.com] ; Gesendet: Dienstag, 7. August 2018 03:02; An: qupath/qupath; Cc: 2010mars2010; Author; Betreff: Re: [qupath/qupath] touch gestures: zooms when moving up/down (#188). . I only got one problem: QuPath cannot open any *.svs (scanscope virtual slide) images any more. Do you have a solution for that?. I this running on Windows 10, and are there any errors under View → Show log when you try to open an .svs file? Does it work with the other version of QuPath on the same machine (v0.1.2)?. My guess is that OpenSlide isn't loading for you, but it's the same version as in v0.1.2... so it one works, then I'd expect the other to work as well. If you were running QuPath from an IDE (e.g. IntelliJ, eclipse) then paths would also need to be set for OpenSlide to work, and that would be an explanation. But if instead you follow the step by step instructions <https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide> right to the end, it should result in a QuPath.exe file that work if you double-click it without any further effort. The other option is to install the latest QuPath Bio-Formats extension <https://github.com/qupath/qupath-bioformats-extension> ... but it shouldn't be necessary for standard .svs files. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/188#issuecomment-410954902> , or mute the thread <https://github.com/notifications/unsubscribe-auth/Ans9t66btf2pNKUFzGRoCitGUIq4Cyj0ks5uOTtLgaJpZM4VcquC> . <https://github.com/notifications/beacon/Ans9t8H3MmRIa4B_NLD4ME359kClICBNks5uOTtLgaJpZM4VcquC.gif>",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-411621646:2794,update,updates,2794,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-411621646,4,"['install', 'update']","['install', 'updates']"
Deployability,"https://github.com/qupath/qupath/releases/tag/v0.2.0-m9: The link to the changelog in `Much more, as described on the Changelog` doesn't exist. Presumably it should be https://github.com/qupath/qupath/releases/tag/v0.2.0-m9 instead.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/407:33,release,releases,33,https://qupath.github.io,https://github.com/qupath/qupath/issues/407,2,['release'],['releases']
Deployability,i.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:10747,update,updateSuggestedOverlayColorFromThumbnail,10747,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,"in the *Hierarchy* tab. Basically, JavaFX’s ```TreeView``` is forced to do a rather slow check along all expanded nodes to look for objects... and if you have a single expanded node containing >~ 10 000 objects expanded within the ```TreeView``` then this can be *extremely slow*. It likely hasn't actually crashed… but it would take an unrealistically long time to become responsive again. The problem is intermittent because expanded nodes with only a few thousand objects in them (e.g. TMA cores) can be handled quite quickly. Additionally, large numbers of objects can be handled so long as the parent objects within the tree aren't expanded, or the objects are contained within multiple smaller annotations rather than a single, very large region. As such, TMA slides and core biopsies likely work (given that the objects are stored within smaller regions), while some whole face sections may be problematic depending on what processing is performed and how. Since the issue appears to be isolated to the display of large numbers of detections within a ```TreeView```, a straightforward fix in a future QuPath release may be to simply exclude detections from the ```TreeView``` by default, showing instead only TMA cores and annotations. In the meantime, hopefully this description of the issue might help anyone encountering it to know the cause, and look for workarounds for their uses. For example, if it is still required to analyze a single large region containing a large number of detections, then *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Create tiles* has recently received an update to enable the creation of 'annotation tiles'. Using this, the larger annotation can be partitioned into smaller ones, which can then be processed separately. Some additional care is needed to ensure that the correct annotations are selected at the appropriate time using this method, but it can be used to avoid the performance issue before a longer term fix is available.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/41:1859,release,release,1859,https://qupath.github.io,https://github.com/qupath/qupath/issues/41,2,"['release', 'update']","['release', 'update']"
Deployability,"in/java/qupath/QuPath.java file for image detection. But I have encountered some problems that need your help, as follows; ------------------------------------------------------------------------------------------------------------; test environment:; **system**: CentOS7、java version ""1.8.0_131""; **work path**:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/qupath; **command**:; java -cp /oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuP",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1045,deploy,deploy,1045,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"ing you should use `gson = GsonTools.getInstance()` rather than `new Gson()`, because QuPath installs its own `TypeAdapters` to handle custom classes, including `PathClass`. So I implemented these changes in your script, randomizing the class names to avoid being thwarted by caching:; ```groovy; import qupath.lib.objects.classes.PathClass. for (useLegacyJson in [true, false]) {. String parentName = Math.random() as String; String childName = Math.random() as String; String json; if (useLegacyJson); json = """"""{ ""name"": ""${childName}"", ""parentClass"": {""name"": ""${parentName}""}, ""colorRGB"": 0}""""""; else; json = """"""{ ""names"": [""${parentName}"", ""${childName}""], ""color"": [0, 1, 2]}""""""; ; def gson = GsonTools.getInstance(); PathClass pathClass = gson.fromJson(json, PathClass.class); pathClass = PathClass.getSingleton(pathClass); PathClass parent1 = pathClass.getParentClass(); PathClass parent2 = PathClass.fromString(parentName); ; if (useLegacyJson); println ""With legacy JSON""; else; println ""With v0.4 JSON""; println(""getSingleton: "" + parent1.hashCode() + "" ("" + parent1 + "")""); println(""fromString: "" + parent2.hashCode() + "" ("" + parent2 + "")""); println(""Are equal: "" + (parent1===parent2)) ; println ""----------""; }; ```; From a typical run I see; ```; INFO: With legacy JSON; INFO: getSingleton: 1714766410 (0.07271672325316691); INFO: fromString: 2014375544 (0.07271672325316691); INFO: Are equal: false; INFO: ----------; INFO: With v0.4 JSON; INFO: getSingleton: 489320231 (0.016118546223767072); INFO: fromString: 489320231 (0.016118546223767072); INFO: Are equal: true; INFO: ----------; ```. I think this implies that the bug *only* occurs when deserializing a PathClass written using the 'earlier' syntax, and doesn't affect a PathClass that was written by v0.4 itself. Does that sound correct?. I'm on leave at the moment, but will explore the PR in more detail in a couple of weeks, and before the next QuPath release. In the meantime I'm keen to understand when the bug strikes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778:2506,release,release,2506,https://qupath.github.io,https://github.com/qupath/qupath/pull/1286#issuecomment-1670267778,1,['release'],['release']
Deployability,install qupath 0.2.1 on ubuntu 20.04,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/546:0,install,install,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/546,1,['install'],['install']
Deployability,ion-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/o,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2226,deploy,deploy,2226,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,ion-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/o,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1959,deploy,deploy,1959,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"ion.getROI(). tw = (int) roi.getBoundsWidth(); th = (int) roi.getBoundsHeight(). if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; //if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500)){; //print result; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");; //IJ.run(imp, ""Median..."", ""radius=5"");; IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; // python code for normalisation and structure convolution; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");; //getHistogram(values, counts, 256); IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");; ; rm = RoiManager;; rm = RoiManager.getInstance(); ; ; if((rm==null) || (rm.getCount()<1)){; print(""No objects found""); }else{; //print rm.getCount(); //RoiManager.roiManager(""count""); //rm.runCommand(imp,""Measure"");; //rm.runCommand(imp,""Update"");; IJ.run(imp, ""Send Overlay to QuPath"", ""choose_object_type=Detection include_measurements"");. // Get a suitable file name; //String name = String.format(""%s (d=%.2f, x=%d, y=%d, w=%d, h=%d, z=%d).%s"", serverName, downsample, xi, yi, wi, hi, z, ext); // Create an output file; //File file = new File(dirOutput, name); // Save the image; //IJ.save(imp, file.getAbsolutePath()); // Print progress; //imp.show() ; rm.reset() ; ; }; ; //counter++; imp2 = IJ.getImage();; imp2.close();; }; ; }. ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357429324:2261,Update,Update,2261,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357429324,1,['Update'],['Update']
Deployability,ionHelper.java:136); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.css.StyleableObjectProperty.set(StyleableObjectProperty.java:82); at javafx.scene.control.Labeled.setTextFill(Labeled.java:766); at org.controlsfx.glyphfont.Glyph.setColor(Glyph.java:288); at qupath.lib.gui.tools.IconFactory.createROIIcon(IconFactory.java:275); at qupath.lib.gui.tools.IconFactory.createPathObjectIcon(IconFactory.java:228); at qupath.lib.gui.tools.PathObjectLabels$PathObjectMiniPane.setPathObject(PathObjectLabels.java:253); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:126); at qupath.lib.gui.tools.PathObjectLabels$PathObjectTreeCell.updateItem(PathObjectLabels.java:113); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:533); at javafx.scene.control.TreeCell.lambda$new$3(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:348); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); at javafx.scene.control.TreeView.setRoot(TreeView.java:479); at qupath.lib.gui.panes.PathObjectHierarchyView.setImageData(PathObjectHierarchyView.java:424); at qupath.lib.gui.panes.PathObjectHierarchyView.changed(PathObjectHierarchyView.java:446); at qupath.lib.gui.panes.PathObjectHierarchyView.changed(,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:3577,update,updateItem,3577,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,2,['update'],['updateItem']
Deployability,ions.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36); at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:50); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47); at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26); at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.exe,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:9454,Continuous,ContinuousBuildActionExecuter,9454,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['Continuous'],['ContinuousBuildActionExecuter']
Deployability,"ld2 = 0; // Check what base classifications we should be worried about; // It's possible to specify 'All', or select specific classes and exclude others; def doAll = includeClassesWithName.contains(""All""); def includeClasses = [null]; //def Stroma = PathClassFactory.getPathClass(""Stroma""); def Positive = PathClassFactory.getPathClass(""Positive""); def Negative = PathClassFactory.getPathClass(""Negative""); //def DualPos = PathClassFactory.getPathClass(""Dual Positive""); if (!doAll) {; for (String n : includeClassesWithName); includeClasses.add(PathClassFactory.getPathClass(n)); }. // Loop through all detections; for (def pathObject : QP.getDetectionObjects()) {. // Get the base classification; PathClass baseClass = pathObject.getPathClass(); if (baseClass != null); baseClass = baseClass.getBaseClass(); else if (PathClassFactory.isPositiveClass(baseClass) || PathClassFactory.isNegativeClass(baseClass)); // In the event that we have a positive or negative classification that lacks a base class,; // this implies that the base class should be null; baseClass = ""Tumor""; // Apply classification, if required; if (doAll || includeClasses.contains(baseClass)) {. // Check if we have a measurement - if not, assign the base class; double val = pathObject.getMeasurementList().getMeasurementValue(feature); if (Double.isNaN(val)) {; pathObject.setPathClass(baseClass); continue; }; double val2 = pathObject.getMeasurementList().getMeasurementValue(feature2); if (Double.isNaN(val2)) {; pathObject.setPathClass(baseClass); continue; }. // Set positive or negative class; if (val >= threshold ){; pathObject.setPathClass(Positive); }else pathObject.setPathClass(Negative). }. }. // Fire update event; QP.getCurrentHierarchy().fireHierarchyChangedEvent(this). // Make sure we know we're done; println(""Done!""); ```; With as many defined values, thresholds, and if statements as you want, you can basically create your own decision trees. Maybe I should have posted this on the Google group instead :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-289248209:4176,update,update,4176,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-289248209,1,['update'],['update']
Deployability,leImageServer.java:60); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.ensureFeaturesCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatures(PixelClassifierTraining.java:402); at qupath.process.gui.commands.ml.PixelClassifierTraining.updateTrainingData(PixelClassifierTraining.java:189); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingDataForLabelMap(PixelClassifierTraining.java:343); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingData(PixelClassifierTraining.java:332); at qupath.process.gui.commands.ml.PixelClassifierPane.doClassification(PixelClassifierPane.java:923); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:813); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:806); at qupath.process.gui.commands.ml.PixelClassifierPane.updateFeatureCalculator(PixelClassifierPane.java:731); at qupath.process.gui.commands.ml.PixelClassifierPane.lambda$initialize$5(PixelClassifierPane.java:279); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImp,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:5709,update,updateClassifier,5709,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['update'],['updateClassifier']
Deployability,"lementing `QuPathExtension`, the `META-INF/services/qupath.lib.gui.extensions.QuPathExtension` part is crucial (see [here](https://github.com/qupath/qupath/wiki/Creating-extensions), or [this](https://docs.oracle.com/javase/tutorial/ext/basics/spi.html#implement-the-service-provider) may also help - since the general idea isn't QuPath-specific). But if you just want to access the contents of the .jar from the script, then this shouldn't be necessary. It sounds like the problem you are seeing happens inside the imported code, because if I import something that doesn't exist then at least the errors are displayed (and sensible), e.g.:; ```groovy; print 'hello'. import something.that.does.not.exist; ```; gives me; ```; ERROR: Error: startup failed:; Script18.groovy: 4: unable to resolve class something.that.does.not.exist; @ line 4, column 1.; import something.that.does.not.exist; ^. 1 error; ```. When that happens, QuPath doesn't handle such exceptions very well and I've also seen the multiple-logging problem occasionally when things go badly wrong. A recent fix I made on my fork should help address this: https://github.com/petebankhead/qupath/commit/c3f8fd49f8c14dbf7956490d2fa4f79d8e11b057. Finally, there are different ways to integrate Groovy into a Java application: http://docs.groovy-lang.org/latest/html/documentation/guide-integrating.html; Currently, QuPath goes down the _JSR 223 javax.script API_ route to give (potentially at least) support for different scripting languages. I'm tentatively considering a switch to use _GroovyShell_ instead, which looks like it makes it easier to access other classes. I haven't yet explored the implications, but I think that Option 1) having really good Groovy support (only) would be more worthwhile than Option 2) trying to support multiple languages/syntaxes (but none of them quite as well). If you've any thoughts on that please let me know, I'd be interested in other opinions before getting too embroiled in making the changes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-450918869:1771,integrat,integrate,1771,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-450918869,4,['integrat'],"['integrate', 'integrating']"
Deployability,"libvips in QuPath: I'd be very flattered, of course! The difficulty might be in how to integrate it. The simplest way would be to bundle the binary and just shell out to it. As you say, things like deepzoom and TIFF pyramid build might benefit, but of course you'd need a test case and some benchmarks to try to quantify any possible improvement. There are Java bindings for libvips, but I've not been involved with them and I don't how complete they are, or if they are tough enough for a demanding program like QuPath. That would need a chunk of work. I did pyvips and it should be complete and reliable. Do you use much Python inside QuPath? That might be the simplest way to experiment with more integration, such as using openslide via libvips.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/627#issuecomment-715899157:87,integrat,integrate,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/627#issuecomment-715899157,4,['integrat'],"['integrate', 'integration']"
Deployability,"lowing error:. [jalal@goku qupath]$ ./gradlew clean jpackage; ; FAILURE: Build failed with an exception.; ; * What went wrong:; Failed to apply plugin class 'org.gradle.api.plugins.JavaPlugin'.; > java.io.FileNotFoundException: /scratch3/downloads/gradle-7.4.2/lib/plugins/gradle-plugins-7.4.2.jar (No such file or directory); ; * Try:; > Run with --stacktrace option to get the stack trace.; > Run with --info or --debug option to get more log output.; > Run with --scan to get full insights.; ; * Get more help at https://help.gradle.org; ; BUILD FAILED in 721ms. The instructions that I am following are as follows:. $ git clone https://github.com/qupath/qupath; $ cd qupath; $ ./gradlew clean jpackage. I have:; ```; $ uname -a; Linux goku.bu.edu 3.10.0-1160.59.1.el7.x86_64 #1 SMP Wed Feb 23 16:47:03 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux. ```; and; ```; $ lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.9.2009 (Core); Release:	7.9.2009; Codename:	Core; ```. also:; ```; $ java -version; openjdk version ""1.8.0_322""; OpenJDK Runtime Environment (build 1.8.0_322-b06); OpenJDK 64-Bit Server VM (build 25.322-b06, mixed mode); ```. I also don't understand why it is looking elsewhere than where I have zipped it and set the directory to it as in:; ```; [jalal@goku downloads]$ sudo vi /etc/profile.d/gradle.sh; [jalal@goku downloads]$ sudo chmod +x /etc/profile.d/gradle.sh; [jalal@goku downloads]$ source /etc/profile.d/gradle.sh; [jalal@goku downloads]$ gradle -v. ------------------------------------------------------------; Gradle 7.4.2; ------------------------------------------------------------. Build time: 2022-03-31 15:25:29 UTC; Revision: 540473b8118064efcc264694cbcaa4b677f61041. Kotlin: 1.5.31; Groovy: 3.0.9; Ant: Apache Ant(TM) version 1.10.11 compiled on July 10 2021; JVM: 1.8.0_322 (Red Hat, Inc. 25.322-b06); OS: Linux 3.10.0-1160.59.1.el7.x86_64 amd64. [jalal@goku downloads]$ cat /etc/profile.d/gr",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/950:1096,Release,Release,1096,https://qupath.github.io,https://github.com/qupath/qupath/issues/950,1,['Release'],['Release']
Deployability,"lue 256.0 ; 15:23:36.812 [main] [INFO ] q.l.i.s.o.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@2f953efd: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 87 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0) ; 15:23:36.812 [main] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for D:\\QMDownload\\5\\~!@#$%^&( )_+=-0987654321`{}[%23];',\\single_neur~!@#$%^&( )_+=-0987654321`{}[%23];',on_40X_3.mrxs ; WARNING: An illegal reflective access operation has occurred ; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/C:/Program%20Files/QuPath-0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int) ; WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1 ; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations ; WARNING: All illegal access operations will be denied in a future release ; 15:23:37.065 [main] [ERROR] qupath.QuPath - Error running script! ; javax.script.ScriptException: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:158) ; 	at qupath.QuPath.main(QuPath.java:161) ; Caused by: org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed: ; Script1.groovy: 102: expecting '}', found '' @ line 102, column 18. ; PixelWidthMic ; ^ ; ; 1 error ; ; 	at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311) ; 	at org.codehaus.groovy.control.ErrorCollector.addFatalError(ErrorCollector.java:151) ; 	at org.codehaus.groovy.control.ErrorCollector.addError(ErrorCollector.java:121) ; 	at org.codehaus.groovy.control.Err",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/286:2728,release,release,2728,https://qupath.github.io,https://github.com/qupath/qupath/issues/286,1,['release'],['release']
Deployability,m12 - Field of view now updated when selecting annotations,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/502:24,update,updated,24,https://qupath.github.io,https://github.com/qupath/qupath/issues/502,1,['update'],['updated']
Deployability,"macOS is pretty easy: you just build to a prefix and wrap it up with a small script and a plist file. I make a nip2 binary this way, including openslide support. https://github.com/jcupitt/build-osx. It'll work, but users will need to tick various boxes to allow unsigned application to run, which is annoying. A proper dev account and code signing fixes that, though I've never bothered. Linux is very annoying: inkscape (for example) offer flatpak, snap and ppa:. https://inkscape.org/release/0.92.3/gnulinux/. Any one of those would be fine. I've made a snap for nip2 and it was pretty easy:. https://snapcraft.io/vips-nip2. You just make one of these:. https://github.com/libvips/nip2/blob/master/.snapcraft.yaml",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-816852260:487,release,release,487,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-816852260,1,['release'],['release']
Deployability,"mo` files the first time a reader is created, so that subsequent readers can use these for faster initialization. ### Turning on memoization. Because memoization involves writing files to disk, users might not always want it. QuPath provides two preferences to control this:. * **Bio-Formats memoization time (ms)** If less than 0, don't use memoization. If >= 0, create a memoization file only if initialization of a reader takes longer than the specified milliseconds. If initialization is fast anyway, memoization is pretty pointless.; * **Bio-Formats memoization directory** If specified, store memoization files in here. Then they are persistent, and available when QuPath is reopened. *Otherwise*, store any memoization files in a temporary directory and delete the directory when QuPath is shut down. ### Default behavior. The default behavior (at least in v0.3.0 - v0.4.2) was to specify a memoization time of 500 ms, and not to specify a directory (i.e. only use temporary files). Upon inspection, it seems that this still creates temporary directories even if no `.bfmemo` files are ever written. Therefore the proposed default behavior for v0.4.3 onwards is to specify a memoization time of -1 (i.e. it's turned off by default). This errs on the side of not creating temp files, and is further justified by the fact that memoization was already missing in v0.4.0 - v0.4.2 anyway (due to the use of Bio-Formats 6.11 and Java 17). Therefore turning into a feature that explicitly requires opting-in doesn't represent a change of default behavior across the v0.4.x releases. ### Turning memoization off (known issue!). To turn off memoization, you'd ideally enter `-1` in **Bio-Formats memoization time (ms)**. Unfortunately, you can only type digits in this field, so `-` won't work. There are two workarounds:; * Copy the text `-1` from elsewhere, and paste it into the field; * Use *Edit &rarr; Reset preferences* to reset all preferences to their default value, which will also reset this",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1236:2488,release,releases,2488,https://qupath.github.io,https://github.com/qupath/qupath/issues/1236,1,['release'],['releases']
Deployability,"more importantly, their sub-dependencies - are handled on different platforms. Bug reports such as; * https://github.com/qupath/qupath/issues/355; * https://github.com/qupath/qupath/issues/628; * https://github.com/qupath/qupath/issues/627. along with breakages caused by `jpackage` updates (https://github.com/qupath/qupath/issues/615) show that the (largely manual) process initially used to try to package up the dependencies hasn't worked. For these reasons, **we need a new and maintainable approach to include OpenSlide in QuPath in the future, or else drop support entirely**. Alas, I'm sadly one of those developers who is quite helpless when attempting to build any native libraries with even moderate complexity... spoiled by Java and Python, I haven't been able to figure out a solution. Hence this issue and cry for help. The biggest problem is getting a truly portable way to build OpenSlide on each platform. If we have that, we can potentially use JNI directly or JavaCPP (https://github.com/bytedeco/javacpp) / Gradle JavaCPP (https://github.com/bytedeco/gradle-javacpp). *Ideally* all dependencies would be packaged into a single .jar file and accessed either with JavaCPP / [native-lib-loader](https://github.com/scijava/native-lib-loader). An alternative might be to try outsourcing OpenSlide support on macOS and Linux, *requiring* installation with a package manager (?) and only providing the 'official' pre-built binaries on Windows. In considering this, it is worth asking whether we should be linking to OpenSlide only anyway.; **libvips** (https://github.com/libvips/libvips) is a much more extensive library, is actively maintained, and can also be built with OpenSlide support. Among its many features, libvips has the ability to write pyramidal images extremely fast.... which is a feature we would very much like to have, supplementing our ability to write [pyramidal OME-TIFFs using Bio-Formats](https://qupath.readthedocs.io/en/latest/docs/advanced/command_line.html).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629:2300,install,installation,2300,https://qupath.github.io,https://github.com/qupath/qupath/issues/629,1,['install'],['installation']
Deployability,mp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:2636,deploy,deploy,2636,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,mp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2369,deploy,deploy,2369,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,n.javafx.scene.control.MultiplePropertyChangeListenerHandler$1.changed(MultiplePropertyChangeListenerHandler.java:55); at javafx.beans.value.WeakChangeListener.changed(WeakChangeListener.java:89); at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.StringPropertyBase.fireValueChangedEvent(StringPropertyBase.java:103); at javafx.beans.property.StringPropertyBase.markInvalid(StringPropertyBase.java:110); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:144); at javafx.beans.property.StringPropertyBase.set(StringPropertyBase.java:49); at javafx.beans.property.StringProperty.setValue(StringProperty.java:65); at javafx.scene.control.Labeled.setText(Labeled.java:145); at qupath.lib.gui.panels.ProjectBrowser$ImageEntryCell.updateItem(ProjectBrowser.java:813); at javafx.scene.control.TreeCell.updateItem(TreeCell.java:526); at javafx.scene.control.TreeCell.lambda$new$256(TreeCell.java:173); at javafx.beans.WeakInvalidationListener.invalidated(WeakInvalidationListener.java:83); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TreeView.setRoot(TreeView.java:470); at qupath.lib.gui.panels.ProjectBrowser.setProject(ProjectBrowser.java:271); at qupath.lib.gui.QuPathGUI.setProject(QuPathGUI.java:4186); at qupath.lib.gui.QuPathGUI$setProject$0.call(Unknown Source); at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48); at org.codehaus.gr,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/103#issuecomment-332808179:2027,update,updateItem,2027,https://qupath.github.io,https://github.com/qupath/qupath/issues/103#issuecomment-332808179,1,['update'],['updateItem']
Deployability,"n; * Completely rewritten object classifier (currently flagged with 'New'! in the menus); * Support for multi-class classification with composite classifiers; * New command to create single-measurement classifiers ; * New command to apply intensity (sub)classification; * JSON serialization for classifiers; * New 'Centroids only' cell display mode to visualize cells with complex classifications; * Improved Brightness/Contrast support; * Filter box to quickly find specific channels within long lists; * New scripting methods to set display range, e.g. setChannelDisplayRange(channel, min, max). #### Classes & annotations; * Revised 'Annotations' tab; * New options to set the available class list (e.g. from existing objects, image channels); * Change class visibility with spacebar (toggle), s (show) or h (hide); * Select objects with specific classifications more easily; * More consistent annotation menus; * Major changes to annotation ROI manipulation; * 'Duplicate annotations' applies to multiple selections; * 'Merge annotations' and 'Split annotations' work with point ROIs, not only areas; * 'Make inverse' uses ROIs from multiple annotations (within the same plane); * More ROI manipulation commands are scriptable, update selections when complete; * Counting tool improvements. ### Images & projects; * Bio-Formats series selector (enables specific series to be accessed outside projects); * More project options; * Duplicate images, optionally with associated data files; * Fixed issue with 'Add images' pane, where the window could be too large for some screens; * 'Add images' pane now supports Drag & Drop; * 'Add images' pane now supports .qpproj files to import images & data from other projects; * New SVG export options (made possible by JFreeSVG). ### Other things; * File -> Quit menu item added; * Viewer no longer 'resets' location when opening the same image or reloading data; * New preferences; * Select main font; default changed to Sans-Serif for macOS; * Turn on/of",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/400:884,toggle,toggle,884,https://qupath.github.io,https://github.com/qupath/qupath/pull/400,2,"['toggle', 'update']","['toggle', 'update']"
Deployability,nCV(4.5.3) D:\a\javacpp-presets\javacpp-presets\opencv\cppbuild\windows-x86_64\opencv-4.5.3\modules\core\src\channels.cpp:141: error: (-215:Assertion failed) i1 >= 0 && j < ndsts && dst[j].depth() == depth in function 'cv::mixChannels'. at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:226); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:287); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.ensureFeaturesCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatures(PixelClassifierTraining.java:402); at qupath.process.gui.commands.ml.PixelClassifierTraining.updateTrainingData(PixelClassifierTraining.java:189); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingDataForLabelMap(PixelClassifierTraining.java:343); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingData(PixelClassifierTraining.java:332); at qupath.process.gui.commands.ml.PixelClassifierPane.doClassification(PixelClassifierPane.java:923); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:813); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:806); at qupath.process.gui.commands.ml.PixelClassifierPane.updateFeatureCalculator(PixelClassifierPane.java:731); at qupath.process.gui.commands.ml.PixelClassifierPane.lambda$initialize$5(PixelClassifierPane.java:279); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javaf,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:5162,update,updateTrainingData,5162,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['update'],['updateTrainingData']
Deployability,"ned on the binary file found in tar of the QuPath results in this other error:. ```; drwxrwxrwt. 62 root root 20K Apr 11 18:07 ..; -rw-r--r--. 1 jalal cs-grad 152M Apr 11 18:10 gradle-7.4.2-all.zip; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 .; -rw-r--r--. 1 jalal cs-grad 6.4K Apr 11 19:16 EGFR SSM TCGA LUAD.csv; [jalal@goku downloads]$ cd QuPath/; [jalal@goku QuPath]$ ls; total 4.0K; drwxr-xr-x. 4 jalal cs-grad 66 Jan 17 03:51 lib; drwxr-xr-x. 2 jalal cs-grad 49 Jan 17 03:51 bin; drwxr-xr-x. 4 jalal cs-grad 40 Jan 17 03:51 .; drwxr-xr-x. 8 jalal cs-grad 4.0K Apr 11 19:16 ..; [jalal@goku QuPath]$ cd bin/; [jalal@goku bin]$ JAVA_TOOL_OPTIONS=-Dorg.bytedeco.javacpp.nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1133,configurat,configuration,1133,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['configurat'],['configuration']
Deployability,"nerated automatically using GitHub Actions, I have to download and check these run on each platform and then upload again. And write all the release notes, tag the version etc. There can also be some extra renaming required, since `jpackage` (used for the build) has some awkwardness connected to artefact naming and 0.x.x versions that affects some platforms but not others (e.g. I think macOS forbids 0.x.x versions, so this needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting it right, and potentially make several 'accidental' releases along the way... confusing the version numbering. Therefore while I'd like to be able to explore this befo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:1213,release,release,1213,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,1,['release'],['release']
Deployability,"nfo for each channel; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(); // Set the range for the 4 channelsf; channels[0].setMinDisplay(0); channels[0].setMaxDisplay(255); channels[1].setMinDisplay(0); channels[1].setMaxDisplay(255); channels[2].setMinDisplay(0); channels[2].setMaxDisplay(255); channels[3].setMinDisplay(0); channels[3].setMaxDisplay(255); // Set the LUT color for the first channel & repaint; channels[0].setLUTColor(0, 0, 255); channels[1].setLUTColor(255, 255, 255); channels[2].setLUTColor(0, 255, 0); channels[3].setLUTColor(255, 0, 0); // Ensure the updates are visible; viewer.repaintEntireImage(); // Usually a good idea to print something, so we know it finished; print 'Done!'`. I tried ""Run for Project"" to get the settings applied on all the images within the project, it seems to be doing it as the prompt iterates the list of images, but when I open another image of the project, the view settings remain unchanged... Is there a trick?. - If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. - some images have different ""high resolution"" scans because several regions have been selected during the slide scan. When opening chromogenic images, there is no problem and QuPath handles it well within a single image. But with fluorescent images, they appear as individual images in the image list... would it be possible to have them all opened within the same image by any chance?. - regarding your recent blog post, the script to update measurement names does not work with these images (unless there is something to edit in the script?). - is it possible to delete scripts within the script editor (such as empty ""untitled"" scripts that get created by default when opening the editor)?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411572502:1894,update,update,1894,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411572502,1,['update'],['update']
Deployability,"ngle object, but if multiple objects were added then we fired a more general structure change event. I guess this was because, when adding a single object, we knew that it could only affect ancestor and descendent objects in QuPath v0.1.2 and earlier. But if we changed multiple objects, then all the *potential* auto-resolved parent/child relationships between objects would be too complex to decipher. Instead, it was easier and safer to fire an event that basically said: _'something big changed, don't try to figure out exactly what, but just update to handle the hierarchy as it now is'_. I'm reluctant to switch to `addObjects` firing an event that doesn't include all the objects that were added, in case there is any legacy code that might be sensitive to the change. Which leads to... > So, [this condition](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L474) is true, the event is ignored, and the UndoRedoManager doesn't update its state. It looks like I failed to recognize that ; ```java; event.getChangedObjects().stream().allMatch(p -> p instanceof ParallelTileObject); ```; would return true when `getChangedObjects().isEmpty()`. What it be sufficient to change the problematic condition to this?. ```java; // Try to avoid calling too often; 		if (undoingOrRedoing || event.isChanging() || maxUndoHierarchySize.get() <= 0); 			return;. 		// During processing, we have ParallelTileObjects changing to show which part of the image is being handled; 		// - but we don't want to record these; 		if (!event.getChangedObjects().isEmpty() && event.getChangedObjects().stream().allMatch(p -> p instanceof ParallelTileObject)); 			return;; ```. From a quick try, I think that's enough to fix #1487 but you're deeper into the code than me. The `ParallelTileObjects` are the squares that appear during certain commands, like cell detection, to indicate what is happening. I expect that we could *dra",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306:1788,update,update,1788,https://qupath.github.io,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306,2,['update'],['update']
Deployability,"nsive about merging quickly because it would be quite a significant change, and add complexity when we're trying to reduce it. So it will take some thought and I'd like to understand the problem better. > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. > Additionally, allowed to modify `ObjectClassifierCommand` too so that it can read all detections' measurements in the training set without uselessly reading the image files. The [`ObjectClassifier`](https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html) takes an `ImageData` by design because an object classifier *could* require pixel access... and this is very likely to be important in the future. This is because, when I rewrote object classifiers some years ago, I was thinking of future classifiers that will use deep learning models to classify based upon image patches - and not only measurements. That's why there is also a general [`FeatureExtractor`](https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html) class. This all basically works, we just haven't yet had time to wrap it up for wider use. > You can now pass a `openImage` boolean to `ProjectImageEntry.readImageData()` that, when false, just avoids getting the default image server, but just uses an instance of `ImageServerStub`. While not identical, the current `ProjectImageEntry.readHierarchy()` is intended for when you need objects but not everything else. This already lets you access all measurements etc. without touching the image. You can then create a new `ImageData` with a dummy `ImageServer` if you need to. So an alternative approach might be to try to script creating a classifier without needing to go through the UI, in a way that doesn't involve any big API changes - and wh",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2021998811:1172,patch,patches,1172,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2021998811,2,['patch'],['patches']
Deployability,oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oam,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1754,deploy,deploy,1754,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oam,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1487,deploy,deploy,1487,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Deployability,"om/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically concatenate the multiple channels of a TIFF, assuming that they are stored in the same directory with a standard naming scheme (e.g. `name_ch1.tif`, `name_ch2.tif` etc.). That way you wouldn't need to convert to RGB or create a single merged image. Would that be useful? If so, then if you were able to send me an example set of monochrome tiffs that have been exported and",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:1374,update,update,1374,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,1,['update'],['update']
Deployability,"ombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueChangedEvent(ExpressionHelper.java:136); at com.sun.javafx.binding",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1646,release,release,1646,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['release'],['release']
Deployability,"omplex classifications; * Improved Brightness/Contrast support; * Filter box to quickly find specific channels within long lists; * New scripting methods to set display range, e.g. setChannelDisplayRange(channel, min, max). #### Classes & annotations; * Revised 'Annotations' tab; * New options to set the available class list (e.g. from existing objects, image channels); * Change class visibility with spacebar (toggle), s (show) or h (hide); * Select objects with specific classifications more easily; * More consistent annotation menus; * Major changes to annotation ROI manipulation; * 'Duplicate annotations' applies to multiple selections; * 'Merge annotations' and 'Split annotations' work with point ROIs, not only areas; * 'Make inverse' uses ROIs from multiple annotations (within the same plane); * More ROI manipulation commands are scriptable, update selections when complete; * Counting tool improvements. ### Images & projects; * Bio-Formats series selector (enables specific series to be accessed outside projects); * More project options; * Duplicate images, optionally with associated data files; * Fixed issue with 'Add images' pane, where the window could be too large for some screens; * 'Add images' pane now supports Drag & Drop; * 'Add images' pane now supports .qpproj files to import images & data from other projects; * New SVG export options (made possible by JFreeSVG). ### Other things; * File -> Quit menu item added; * Viewer no longer 'resets' location when opening the same image or reloading data; * New preferences; * Select main font; default changed to Sans-Serif for macOS; * Turn on/off system menubar; * Show accelerator within 'Command list' table; * Improved attempt to parse channel names from slice labels in ImageJServer; * More useful static methods, e.g. PathObjectTools.removeOverlaps(); * Fixed bug in Jar classpath that prevented QuPath running from a command line; * Update dependencies (Bio-Formats, ControlsFX, ImageJ, Guava, Groovy, RichTextFX)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/400:2390,Update,Update,2390,https://qupath.github.io,https://github.com/qupath/qupath/pull/400,1,['Update'],['Update']
Deployability,"on is **only** for bug reports, which **must** follow the template below. Please post any other questions to the official QuPath forum at https://forum.image.sc/tags/qupath. If in doubt, use [image.sc](https://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ X ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ X ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. Installing QuPath under two different users in the same computer allows for the second installation to access the directory of the first user that installed the software. These seems to be a security bug. This doesn't occur when installing the zip version. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the "".msi"" QuPath installation file ; 2. Install in a first user -> admin rights require for installation; 3. Complete installation and start the program; 4. Sign out of the first session ; 5. Sign in into the next user; 6. Download the "".msi"" file ; 7. Install QuPath -> admin rights require for installation.; 8. Here you will notice that the setup steps are skip; 9. If you go to the extensions folder through the extension tab in QuPath you will notice that the paths are associated to the first user. **Expected behavior**; A clear and concise description of what you expected to happen. No access to the file system of other users since that rises a security concern. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:941,Install,Installing,941,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,3,"['Install', 'install']","['Installing', 'installation', 'installed']"
Deployability,"on: Path/to/QuPath/extensions/extensions/qupath-extension-imagecombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); at com.sun.javafx.binding.ExpressionHelper$SingleInvalidation.fireValueC",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1561,Update,Update,1561,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['Update'],['Update']
Deployability,"ong with a description here<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html>. I hope it helps, but if you see a way to improve it just let me know. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/198#issuecomment-411427127>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AoNwyOpnbOnOW9rFnT_2pqry0gg-jCySks5uOvZygaJpZM4VxsNx>.; {""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/qupath/qupath"",""title"":""qupath/qupath"",""subtitle"":""GitHub repository"",""main_image_url"":""https://assets-cdn.github.com/images/email/message_cards/header.png"",""avatar_image_url"":""https://assets-cdn.github.com/images/email/message_cards/avatar.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/qupath/qupath""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@petebankhead in #198: I suspect this will be a frequent enough need to deserve its own command in the future... in the meantime I've written a script that I hope will help.\r\n\r\nYou can find it along with a description [here](https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html).\r\n\r\nI<https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html)./r/n/r/nI> hope it helps, but if you see a way to improve it just let me know.""}],""action"":{""name"":""View Issue"",""url"":""https://github.com/qupath/qupath/issues/198#issuecomment-411427127""}}} [ { ""@context"": ""http://schema.org"", ""@type"": ""EmailMessage"", ""potentialAction"": { ""@type"": ""ViewAction"", ""target"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""url"": ""https://github.com/qupath/qupath/issues/198#issuecomment-411427127"", ""name"": ""View Issue"" }, ""description"": ""View this Issue on GitHub"", ""publisher"": { ""@type"": ""Organization"", ""name"": ""GitHub"", ""url"": ""https://github.com"" } }, { ""@type"": ""Me",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411662693:1485,update,updates,1485,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411662693,1,['update'],['updates']
Deployability,"ons/extensions/qupath-extension-cellpose-0.6.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-imagecombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGenericBidirectionalBinding.invalidated(BidirectionalBinding.java:677); a",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1507,release,release,1507,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['release'],['release']
Deployability,"opup menu (accessed by right-click on a viewer) now contain commands to set a fixed grid size of viewers: 1x1, 1x2, 2x1, 2x2, 3x3.; * This makes it much easier to create a viewer grid for common sizes, without needing multiple steps to add rows/columns.; * Text and icons show the expected grid shapes so they should be easy to interpret; * New commands are added to *Detach viewer from the grid* and subsequently to *Attach viewer to the grid*, so that viewers can be moved to their own floating windows and back again. ## PathPlugin & PluginRunner. When making the above changes, it became clear that a major refactoring & simplification of `PathPlugin` and `PluginRunner` was needed. The original problem was that `PluginRunnerFX` proved to be buggy with detached windows, because the `ImageData` being handled was accessed via `PluginRunner.getImageData()`. In most cases that's fine, but `PluginRunnerFX` was always returning the *current* `ImageData` from QuPath, and if this *changed* before the plugin was complete (and had fired any hierarchy updates / logged any workflow steps) then exceptions or unexpected behavior could occur. It might conceivably have happened previously when using multiple viewers, but I don't know of any cases where it did - because QuPath locks the UI when plugins run, and this seemed to be working ok. So this PR also includes a new design greatly simplifies `PluginRunner` to simple run tasks in parallel with progress notification - with some special logic for `PathTask` implementations. Alongside that,; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, String arg); ```; has been updated to; ```java; PathPlugin.runPlugin(PluginRunner pluginRunner, ImageData<T> imageData, String arg)`; ```; so that there's no need to request the `ImageData` from the plugin runner - and it's possible to ensure this remains unchanged while all the work of the plugin is completex, no matter what might go on in the UI. Early indications are that the code is just si",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1318:1373,update,updates,1373,https://qupath.github.io,https://github.com/qupath/qupath/pull/1318,1,['update'],['updates']
Deployability,"ot breaking everything else... like parts of paquo or warpy, and all existing scripts that need pixels. The approach I've taken here is to mark `readBufferedImage` as deprecated (and planned for removal), while also providing a default implementation that calls `readRegion`. These means that new classes won't need to implement the deprecated method. Then - and here it gets awkward - I've tried to allow older `ImageServer` implementations to still work by *also* providing a default implementation of `readRegion`. It will throw an `UnsupportedOperationException` *unless* it is called from a subclass that overrides the `readBufferedImage` method... in which case it will fall back to using that. The first time that happens, a warning will be logged. You can see the code at https://github.com/petebankhead/qupath/blob/server/qupath-core/src/main/java/qupath/lib/images/servers/ImageServer.java#L213. The outcome is that, with the current PR, *all* of these should work in a Groovy script:; ```groovy; def server = getCurrentServer(); double downsample = 100.0; def request = RegionRequest.createInstance(server, downsample); println server.readBufferedImage(request); println server.readRegion(request); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight()); println server.readRegion(downsample, 0, 0, server.getWidth(), server.getHeight(), 0, 0); ```; where the `readBufferedImage` call logs a warning *once* (for each `ImageServer` class) and the rest don't. My tentative plan would be to; * include this in QuPath v0.4.0 (hopefully later this month); * remove the default implementation of `readRegion` in v0.5.0, forcing any subclass of `ImageServer` to be updated to work... but still allowing scripts to use `readBufferedImage`, with the deprecation message logged; * remove `readBufferedImage` later, e.g. in v0.6.0. As far as I can tell, everything still works in QuPath itself - but I don't know how your projects might be affected. What do you all think?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072:3597,update,updated,3597,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072,1,['update'],['updated']
Deployability,"ou could annotate regions of interest and detect cells only inside your annotations - no need for a classifier at all. This would mean you need to draw an awful lot of annotations (one or more for every core), but at least you are in full control of what is annotated. 2. You could train up a classifier for all the ‘similar-enough-looking’ cores on one slide, and save that classifier. For all the cores that aren’t handled well enough, you could go through and set them as ‘Missing’. When you export your results, you need to be careful to ignore all the ‘Missing’ cores.; Then, you can duplicate your project, and delete all your annotations. You can go through and set all the ‘Missing’ cores to be available, and all the available cores to be ‘Missing’. Then train up a new classifier, and export the results again.; This way you can use multiple classifiers. It’s not very elegant at all, and I’m not sure that I would recommend it… but it is an option.; > If you try this, you could toggle the ‘Missing’ status in a script or manually. If you do it manually, I’d suggest opening the ‘Hierarchy’ tab on the left of the screen, and selecting the first core. Make sure you have clicked somewhere inside the main viewer to activate it, then use the arrow keys to move around the TMA grid, and press ‘backspace’ to toggle the ‘Missing’ status. Because the default settings mean that selected cores are shown as yellow, rather than dark/light blue, having the ‘Hierarchy’ tab open is useful to show you whether the selected core is missing or not. 3. You could do something similar to the above, but set the ‘missing’ status before cell detection… so you end up without any cells in the cores that shouldn’t be included. This helps avoid generating a lot of badly-classified data that you then need to remember to ignore later. However, it does then require being able to estimate in advance which cores should be classified together. 4. If you want to use a separate classifier for every core, you c",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:1755,toggle,toggle,1755,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,2,['toggle'],['toggle']
Deployability,"oud.githubusercontent.com/assets/4690904/20858862/a6a5f5e4-b946-11e6-823c-82dccca3a0ba.png"">. This doesn't force any particular choice... along it at least raises the issue. ### What *should* QuPath do?; This remains an open question - with feedback and ideas welcome. My current suspicion is that QuPath *should* enforce the use of one Locale consistently throughout the application. If so, this would likely have to be ```Locale.US``` - because this is [guaranteed to exist](https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getAvailableLocales()). This will enforce an internal consistency, which is less likely to be troubled by whether or not the programmer of some component or extension parses their numbers in a different way. It *may* still be helpful to optionally export data for a specific Locale - but this would need to be explicitly selected (every time?), for ease of importing results into other software. However, providing this option would require some more thought and planning for at least two reasons:. * Some exported data should also be reimported into QuPath, e.g. exported TMA data might be imported to use the *TMA data viewer* - in this case the correct Locale needs to be used for importing as well.; * There are different ways to export, both in terms of saving or copying values to the clipboard. Any 'smart' behavior in one place risks lulling a user into a false sense of security that the Locale they unthinkingly expect will always be used. In short, it's a thorny issue. For now, the best approach is to use a Locale that formats uses dots rather than commas as the decimal mark... and then pay close attention whenever the exported results are imported elsewhere. ### Immediate plans. I am considering making the first half the change suggested above in the next update, i.e. to force the use of the US Locale. There is too much that is unclear or untested whenever different Locales may be used. However comments are welcome on the wisdom of this.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/29:7639,update,update,7639,https://qupath.github.io,https://github.com/qupath/qupath/issues/29,1,['update'],['update']
Deployability,"ounds); <img width=""941"" alt=""SCN-OpenSlide"" src=""https://github.com/qupath/qupath/assets/4690904/771af2d0-2dcb-44ee-95e6-31ff62f0f7e2"">. ## OpenSlide (with `--no-crop` arg); <img width=""941"" alt=""SCN-OpenSlide-no-crop"" src=""https://github.com/qupath/qupath/assets/4690904/3cf52a48-ca91-4dff-8eb4-7e299d851b3e"">. The size is identical when read using QuPath v0.4.3 when using either OpenSlide or Bio-Formats by default (no extra arguments passed to either). Explicitly passing the `--no-crop` arg causes QuPath to ignore what OpenSlide considers to be bounds, and generate a much larger image with extreme padding that causes both much higher memory use and can thwart processing tasks like thresholding or pixel classification. What's more, if I call `tiffinfo Leica-1.scn` I see; ```; === TIFF directory 3 ===; TIFF Directory at offset 0xfe4f444 (266662980); Image Width: 36832 Image Length: 38432; Tile Width: 512 Tile Length: 512; Resolution: 20000, 20000 pixels/cm; Bits/Sample: 8; Compression Scheme: JPEG; Photometric Interpretation: YCbCr; YCbCr Subsampling: 2, 2; Samples/Pixel: 3; Planar Configuration: single image plane; Reference Black/White:; 0: 0 255; 1: 128 255; 2: 128 255; ```; and also; ```xml; <?xml version=""1.0""?>; <scn xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" uuid=""urn:uuid:2b930baa-4b05-4936-a937-ccf5a0b3276d"" xmlns=""http://www.leica-microsystems.com/scn/2010/10/01"">; <collection name=""ImageCollection_0000000128"" uuid=""urn:uuid:d0fa25ee-baa8-48cd-944d-5598a36b3f7b"" sizeX=""26564529"" sizeY=""76734666"">; <barcode>MDQwNTA2MjlD</barcode>; <image name=""image_0000001819"" uuid=""urn:uuid:4a9c1d8d-1f66-4df6-98e7-9d3efe746932"">; <creationDate>2011-05-31T09:33:14.31Z</creationDate>; <device model=""Leica SCN400;Leica SCN"" version=""1.4.0.9691 2011/03/30 10:30:59;1.4.0.9708"" />; <pixels sizeX=""1616"" sizeY=""4668"">; <dimension sizeX=""1616"" sizeY=""4668"" r=""0"" ifd=""0"" />; <dimension sizeX=""404"" sizeY=""1167"" r=""1"" ifd=""1"" />; ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660:2599,Configurat,Configuration,2599,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631106660,1,['Configurat'],['Configuration']
Deployability,"oy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Background"" : "" 255 255 255 ""}');; runPlugin('qupath.imagej.detect.tissue.SimpleTissueDetection2', '{""threshold"": 162, ""requestedDownsample"": 1.0, ""minAreaPixels"": 100000.0, ""maxHoleAreaPixels"": 500.0, ""darkBackground"": false, ""smoothImage"": true, ""medi",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3630,deploy,deploy,3630,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"oy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerException: Cannot invoke method getServer() on null object; 	at org.codehaus.groovy.jsr223.GroovyScriptEngineImpl.eval(GroovyScriptEngineImpl.java:155); 	at QuPath.main(QuPath.java:162); Caused by: javax.script.ScriptException: java.lang.NullPointerExc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3363,deploy,deploy,3363,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"path-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26917 0.56824 0.77759 "", ""Ba",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3378,deploy,deploy,3378,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"path-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script.ScriptException: javax.script.ScriptException: java.lang.NullPointerE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3111,deploy,deploy,3111,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"penSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1319.0.0); 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1953.255.0); 	/opt/homebrew/opt/xz/lib/liblzma.5.dylib (compatibility version 10.0.0, current version 10.4.0); 	/usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0); 	/opt/homebrew/opt/pcre2/lib/libpcre2-8.0.dylib (compatibility version 12.0.0, current ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:1356,pipeline,pipelines,1356,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['pipeline'],['pipelines']
Deployability,"ple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting it right, and potentially make several 'accidental' releases along the way... confusing the version numbering. Therefore while I'd like to be able to explore this before the next release, but there's a very strong chance I won't have time to set up or debug the whole pipeline. If anyone else wants to work on improving the workflow, and contending with its messiness by checking the proposed solution really does work properly on all platforms, suggestions or PR's welcome!. > Sidenote: A related concern is that I've been asked several times for signed distributions. Much as I like the idea, I don't really like the associated admin (the cost doesn't help either)...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:1710,release,release,1710,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,5,"['pipeline', 'release']","['pipeline', 'release', 'releases']"
Deployability,"possibility they were saved with a different version of the software, or someone else might have changed some obscure setting?. Your description and the screenshots are very helpful to rule out some of my other guesses; because the images are both described as 14-bit and read using Bio-Formats, I don't see any clear reason why there would be a problem - although I see there is a small difference in the width & height, which makes me wonder if there was at least some small change at the time of acquisition... but I don't know what. I'd suggest trying to open the images in [Fiji](http://fiji.sc) and checking under *Image &rarr; Properties...* to see if the pixel size information is there. If it is, the first thing I'd do is make sure you have the latest [QuPath Bio-Formats extension & bioformats_package.jar](https://github.com/qupath/qupath-bioformats-extension), and try again. Alternatively, you can manually enter the pixel width & height values in Fiji (if you know them - is it safe to assume they are the same as in your other images?). Then you can save the image with pixel sizes as a TIFF in Fiji, and read the TIFF rather than ND2 file into QuPath. However, I should warn you: if you use the save-as-TIFF-in-Fiji trick, then ImageJ will be used to read the image and there is an unfortunate bug in QuPath v0.1.2 that means for this application you should probably also change the preferences to only use 1 parallel thread (described [here](https://github.com/qupath/qupath/issues/74)). Alternatively, you could try the latest-not-quite-released QuPath changes described [here](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html), which should include a fix for the bug. (In case that sounds alarming: the bug shouldn't cause any trouble if you see *Server type: Bio-Formats* or *Server type: OpenSlide*, only *Server type: ImageJ* is affected - and even then not always. It should be fairly clear if it causes trouble, in that spots appear where they shouldn't.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/163#issuecomment-379493712:1693,release,released,1693,https://qupath.github.io,https://github.com/qupath/qupath/issues/163#issuecomment-379493712,4,"['release', 'update']","['released', 'updates']"
Deployability,"previous post was already taken from the command line, no more info/error was available.; Unfortunately, today I can't seem to be able to reproduce this issue on MacOS, it just miraculously works as expected (??), and so do the pixel classifiers. Launching it again, resetting settings, getting a fresh install, etc.., nothing will get me the original density map exceptions. If someone else experienced the original issue, it would be great to have more details about it. Worth noticing though is that I sometimes get an Exception when moving the density radius slider left and right (in quite an unpredictable way, therefore not sure how to exactly reproduce this):; ```; [ERROR] qupath.lib.gui.dialogs.Dialogs - QuPath exception: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; java.lang.NullPointerException: Cannot invoke ""java.util.List.get(int)"" because ""minMax"" is null; 	at qupath.process.gui.commands.density.DensityMapDialog$ObservableColorModelBuilder.updateDisplayRanges(DensityMapDialog.java:589); 	at qupath.process.gui.commands.density.DensityMapDialog.lambda$new$3(DensityMapDialog.java:201); 	at com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:181); 	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:80); 	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:106); 	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:113); 	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:147); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.updateDensityServer(DensityMapDialog.java:884); 	at qupath.process.gui.commands.density.DensityMapDialog$HierarchyClassifierOverlayManager.lambda$updateDensityServer$6(DensityMapDialog.java:863); 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); 	at java.base/java.util.concurrent.Futur",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776#issuecomment-874035644:1006,update,updateDisplayRanges,1006,https://qupath.github.io,https://github.com/qupath/qupath/issues/776#issuecomment-874035644,1,['update'],['updateDisplayRanges']
Deployability,"ps to reproduce the behavior:; ```bash; cd qupath-0.4.3; gradle clean jpackage -Porg.gradle.java.home=/usr/lib/jvm/default; ```. **Expected behavior**; success to build qupath 0.4.3. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: ArchLinux; - QuPath Version: 0.4.3; - java: jdk-openjdk 20.0.1.u9-3; - gradle: 8.1.1. **Additional context**; logs:; ```text; > Configure project :qupath-app; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; Unable to determine Java version from toolchain: No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}. FAILURE: Build failed with an exception. * Where:; Build file '/build/qupath/src/qupath-0.4.3/qupath-app/build.gradle' line: 540. * What went wrong:; A problem occurred configuring project ':qupath-app'.; > Failed to calculate the value of task ':qupath-app:compileJava' property 'javaCompiler'.; > No matching toolchains found for requested specification: {languageVersion=17, vendor=any, implementation=vendor-specific}.; > No locally installed toolchains match (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sec:auto_detection) and toolchain download repositories have not been configured (see https://docs.gradle.org/8.1.1/userguide/toolchains.html#sub:download_repositories).; ```; It seems related to how we specify the toolchain, https://github.com/qupath/qupath/blob/1368912885c1a191beaea32c28d85a3707f657f8/qupath-app/build.gradle#L535-L548; Maybe, we could follow this: https://github.com/Project-MONAI/MONAILabel/blob/0332f42643015046055a3410b770d1e8a0e1bd57/plugins/qupath/build.gradle#L39-L51; Just add a project property `toolchain` with a default value, so user could specify it with `-Ptoolchain=20` or simply use the default one (eg. 17).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1262:1374,install,installed,1374,https://qupath.github.io,https://github.com/qupath/qupath/issues/1262,1,['install'],['installed']
Deployability,"ps://forum.image.sc/tags/qupath). This helps us keep things organized. ## Before we begin... Before submitting your bug report, please check the following:. * [ X ] I've definitely found a bug (it you're not sure, please use [image.sc](https://forum.image.sc/tags/qupath) instead); * [ X ] I've checked https://qupath.github.io for a new release that might already have fixed the issue; * [ X ] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [ X ] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. Installing QuPath under two different users in the same computer allows for the second installation to access the directory of the first user that installed the software. These seems to be a security bug. This doesn't occur when installing the zip version. **To Reproduce**; Steps to reproduce the behavior:; 1. Download the "".msi"" QuPath installation file ; 2. Install in a first user -> admin rights require for installation; 3. Complete installation and start the program; 4. Sign out of the first session ; 5. Sign in into the next user; 6. Download the "".msi"" file ; 7. Install QuPath -> admin rights require for installation.; 8. Here you will notice that the setup steps are skip; 9. If you go to the extensions folder through the extension tab in QuPath you will notice that the paths are associated to the first user. **Expected behavior**; A clear and concise description of what you expected to happen. No access to the file system of other users since that rises a security concern. . **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...] Windows; - QuPath Version: [e.g. 0.2.2] v0.3.2. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1108:1280,install,installation,1280,https://qupath.github.io,https://github.com/qupath/qupath/issues/1108,6,"['Install', 'install']","['Install', 'installation']"
Deployability,"pt(DefaultScriptEditor.java:766); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:696); at qupath.lib.gui.scripting.DefaultScriptEditor.executeScript(DefaultScriptEditor.java:676); at qupath.lib.gui.scripting.DefaultScriptEditor$2.run(DefaultScriptEditor.java:1033); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); Caused by No double parameter with key 'haralickMin' at qupath.lib.plugins.parameters.ParameterList.getDoubleParameterValue(ParameterList.java:386); at qupath.lib.plugins.parameters.ParameterList.getDoubleParameterValue(ParameterList.java:427); at qupath.lib.algorithms.IntensityFeaturesPlugin$HaralickFeaturesComp.updateFeatures(IntensityFeaturesPlugin.java:1056); at qupath.lib.algorithms.IntensityFeaturesPlugin.processObject(IntensityFeaturesPlugin.java:628); at qupath.lib.algorithms.IntensityFeaturesPlugin$IntensityFeatureRunnable.run(IntensityFeaturesPlugin.java:454); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); INFO: Processing complete in 0.01 seconds; INFO: ; qupath.lib.algorithms.IntensityFeaturesPlugin {""pixelSizeMicrons"": 2.0, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": true, ""colorStain3"": false, ""col",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/358:2689,update,updateFeatures,2689,https://qupath.github.io,https://github.com/qupath/qupath/issues/358,1,['update'],['updateFeatures']
Deployability,"quPath 0.2.0-m7 fail to open some pyramid tif files that could be open with 0.1.2.; Unfortunately, I am not allowed to share the files. I dont think the problem is out of memory, since I have tif images that are twice as big that can be opened without problem. . I have tested both on Windows 10 and Ubuntu 18. Here is the log from a Windows machine:; INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (22 ms); INFO: Loaded extension Experimental commands (18 ms); INFO: Loaded extension ImageJ extension (58 ms); INFO: Loaded extension JPen extension (22 ms); INFO: Loaded extension OpenCV extensions (3 ms); INFO: Loaded extension Rich script editor extension (373 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; WARN: Unable to obtain full image format info for file:/D:/pDST/eHE-PDS18-015016-leica.tif (class java.util.NoSuchElementException); WARN: Temp memoization directory created at C:\Users\DanielH\AppData\Local\Temp\qupath-memo-13737650391880953912; WARN: If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; ERROR: *** One or more readers is misbehaving. See the debug output for more information. e.g.:; loci.formats.in.APLReader@578b4451 -> java.lang.NullPointerException('null') ***; WARN: Removing alpha channel; WARN: Removing alpha channel; ERROR: QuPath exception: Java heap space; at java.desktop/sun.awt.image.IntegerInterleavedRaster.getDataElements(Unknown Source); at qupath.lib.display.ChannelDisplayInfo$RGBDirectChannelInfo.getRGBIntBuffer(ChannelDisplayInfo.java:539); at qupath.lib.display.ChannelDisplayInfo$RBGColorTransformInfo.getValues(ChannelDisplayInfo.java:707); at qupath.lib.display.ImageDisplay$HistogramManager.ensureChannels(ImageDisplay.java:902); at qupath.lib.display.ImageDisplay.up",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382:801,update,update,801,https://qupath.github.io,https://github.com/qupath/qupath/issues/382,2,['update'],"['update', 'updates']"
Deployability,qupath version 0.0.2-alpha; After I install OpenSlide native libraries. `09:47:53.189 [main] [ERROR] q.lib.images.servers.FileFormatInfo - Checking Big TIFF images currently not supported!!!; 09:47:53.200 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.0; 09:47:53.640 [main] [ERROR] q.l.i.s.b.BioFormatsServerBuilder - Unable to open file:/app/101.0.img.tif: {}; java.lang.NullPointerException: null; at loci.formats.in.APLReader.isThisType(APLReader.java:98); at loci.formats.ImageReader.getReader(ImageReader.java:188); at loci.formats.ImageReader.setId(ImageReader.java:839); at loci.formats.ReaderWrapper.setId(ReaderWrapper.java:650); at loci.formats.Memoizer.setId(Memoizer.java:690); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1148); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.createReader(BioFormatsImageServer.java:1082); at qupath.lib.images.servers.bioformats.BioFormatsImageServer$BioFormatsReaderManager.getPrimaryReader(BioFormatsImageServer.java:996); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:215); at qupath.lib.images.servers.bioformats.BioFormatsImageServer.<init>(BioFormatsImageServer.java:179); at qupath.lib.images.servers.bioformats.BioFormatsServerBuilder.buildServer(BioFormatsServerBuilder.java:53); at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); at qupath.lib.GenowisAPI.cellSegmentation(GenowisAPI.java:69)`,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/389#issuecomment-567863564:36,install,install,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/389#issuecomment-567863564,1,['install'],['install']
Deployability,r.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.graphics/javafx.css.StyleableObjectProperty.set(Unknown Source); at javafx.base/javafx.beans.property.ObjectProperty.setValue(Unknown Source); at javafx.controls/javafx.scene.control.Labeled.setGraphic(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:423); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:413); at javafx.controls/javafx.scene.control.TreeCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.TreeCell.lambda$new$3(Unknown Source); at javafx.base/javafx.beans.WeakInvalidationListener.invalidated(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.controls/javafx.scene.control.TreeView.setRoot(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView.hierarchyChanged(PathObjectHierarchyView.java:563); at qupath.lib.gui.panes.PathObjectHierarchyView.lambda$hierarchyChanged$11(PathObjectHierarchyView.java:559); at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(Unknown Source),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:3679,update,updateItem,3679,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,r.java:287); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:60); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.ensureFeaturesCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatures(PixelClassifierTraining.java:402); at qupath.process.gui.commands.ml.PixelClassifierTraining.updateTrainingData(PixelClassifierTraining.java:189); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingDataForLabelMap(PixelClassifierTraining.java:343); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingData(PixelClassifierTraining.java:332); at qupath.process.gui.commands.ml.PixelClassifierPane.doClassification(PixelClassifierPane.java:923); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:813); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:806); at qupath.process.gui.commands.ml.PixelClassifierPane.updateFeatureCalculator(PixelClassifierPane.java:731); at qupath.process.gui.commands.ml.PixelClassifierPane.lambda$initialize$5(PixelClassifierPane.java:279); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventD,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:5607,update,updateClassifier,5607,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['update'],['updateClassifier']
Deployability,re.run(Unknown Source); at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```; Still other times I see another error:. ```; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(Unknown Source); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(Unknown Source); at qupath.lib.objects.PathObject.nDescendants(PathObject.java:475); at qupath.lib.objects.PathObjectTools.countDescendants(PathObjectTools.java:200); at qupath.lib.objects.PathObject.objectCountPostfix(PathObject.java:190); at qupath.lib.objects.PathObject.toString(PathObject.java:224); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:66); at qupath.lib.gui.panes.PathObjectListCell.updateItem(PathObjectListCell.java:36); at javafx.controls/javafx.scene.control.ListCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.ListCell.lambda$new$2(Unknown Source); at javafx.base/javafx.collections.WeakListChangeListener.onChanged(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.fireChange(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.commit(Unknown Source); at javafx.base/javafx.collections.ListChangeBuilder.endChange(Unknown Source); at javafx.base/javafx.collections.ObservableListBase.endChange(Unknown Source); at javafx.base/javafx.collections.ModifiableObservableListBase.setAll(Unknown Source); at qupath.lib.gui.panes.AnnotationPane.hierarchyChanged(AnnotationPane.java:382); at qupath.lib.gui.panes.AnnotationPane.lambda$hierarchyChanged$7(AnnotationPane.java:352); at javafx.graphics/com.sun.javafx.applicatio,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:5912,update,updateItem,5912,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,"read] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 13:20:06.396 [JavaFX Application Thread] [INFO ] qupath.lib.gui.prefs.PathPrefs - Tile cache size: 3568,00 MB; 13:20:07.893 [JavaFX Application Thread] [ERROR] qupath.opencv.OpenCVExtension - Unable to load OpenCV libraries!; java.lang.UnsatisfiedLinkError: /soft/c7/qupath/0.1.3/app/libopencv_java310.so: /lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by /soft/c7/qupath/0.1.3/app/libopencv_java310.so); 	at java.lang.ClassLoader$NativeLibrary.load(Native Method); 	at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1941); 	at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1857); 	at java.lang.Runtime.loadLibrary0(Runtime.java:870); 	at java.lang.System.loadLibrary(System.java:1122); 	at qupath.opencv.OpenCVExtension.loadNativeLibrary(OpenCVExtension.java:59); 	at qupath.opencv.OpenCVExtension.addQuPathCommands(OpenCVExtension.java:72); 	at qupath.opencv.OpenCVExtension.installExtension(OpenCVExtension.java:116); 	at qupath.lib.gui.QuPathGUI.refreshExtensions(QuPathGUI.java:1099); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:645); 	at qupath.lib.gui.QuPathGUI.<init>(QuPathGUI.java:437); 	at qupath.lib.gui.QuPathApp.start(QuPathApp.java:63); 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$161(LauncherImpl.java:863); 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$174(PlatformImpl.java:326); 	at com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295); 	at java.security.AccessController.doPrivileged(Native Method); 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294); 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:748); 13:20:08.246 [JavaFX Application Thr",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/150#issuecomment-368857650:1397,install,installExtension,1397,https://qupath.github.io,https://github.com/qupath/qupath/issues/150#issuecomment-368857650,1,['install'],['installExtension']
Deployability,resCalculated(PixelClassifierTraining.java:440); at qupath.process.gui.commands.ml.PixelClassifierTraining$TileFeatures.<init>(PixelClassifierTraining.java:429); at qupath.process.gui.commands.ml.PixelClassifierTraining.getTileFeatures(PixelClassifierTraining.java:402); at qupath.process.gui.commands.ml.PixelClassifierTraining.updateTrainingData(PixelClassifierTraining.java:189); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingDataForLabelMap(PixelClassifierTraining.java:343); at qupath.process.gui.commands.ml.PixelClassifierTraining.createTrainingData(PixelClassifierTraining.java:332); at qupath.process.gui.commands.ml.PixelClassifierPane.doClassification(PixelClassifierPane.java:923); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:813); at qupath.process.gui.commands.ml.PixelClassifierPane.updateClassifier(PixelClassifierPane.java:806); at qupath.process.gui.commands.ml.PixelClassifierPane.updateFeatureCalculator(PixelClassifierPane.java:731); at qupath.process.gui.commands.ml.PixelClassifierPane.lambda$initialize$5(PixelClassifierPane.java:279); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); at,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:5811,update,updateFeatureCalculator,5811,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['update'],['updateFeatureCalculator']
Deployability,"rly save (```Ctrl + S```) and then use *File &rarr; Revert* to go back (```Ctrl + R```). The last one is probably the approach I use most. > 2. A select tool by drawing a square like many other editing tools. This will make select multiple objects easy. I've also wanted this occasionally, but not often enough to do anything about it yet. However, there are a few options for selecting:. * Click on each object in either the *Annotations* or *Hierarchy* tab (with ```Ctrl``` or ```Shift``` pressed if needed); * If you have one object selected, and the *Move* tool is active, you can select other objects by clicking them in the image with the ```Alt``` key pressed; * You can use a script, such as the one below. ```groovy; guiscript=true; // Get the current selected object & hierarchy; selected = getSelectedObject(); hierarchy = getCurrentHierarchy(); // Get all the objects inside the current selection; objectsToSelect = hierarchy.getDescendantObjects(selected, null, null); if (objectsToSelect != null) {; // Remove the current selected object; hierarchy.removeObject(selected, true); // Update the selection; hierarchy.getSelectionModel().selectObjects(objectsToSelect); }; ```. This should enable you to draw around objects using any of the drawing tools, and then run the script to select everything inside. As it is written, the annotation that you draw will then be deleted. This has the advantage of making it possible to select objects by drawing any arbitrary shape, without needing to add an extra tool to the toolbar. If this were to become a standard command, with a shortcut, would it address the need? Or do you think a separate selection tool would still be preferable?. > 3. A point tool allow using points to mark an object. Some times, we would like just mark the key point of an object. It is possible to use a polygon but a point tool will be nice. There is indeed a *Point tool*, described [here](https://github.com/qupath/qupath/wiki/Counting-cells#manual-cell-counting).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-300294512:2438,Update,Update,2438,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-300294512,1,['Update'],['Update']
Deployability,"s a continual fight to avoid very expensive processing every time an object changed - because `resolveHierarchy()` was effectively being called automatically, and lots of things needed to update. I thinks this shows event system is *very* overdue a major revision. > I'm sure there is reason behind it, but here a hierarchy changed event is emitted, instead of an object added event. From your post and my failing memory, I suspect that the idea was that the 'object added' event would just handle a single object, but if multiple objects were added then we fired a more general structure change event. I guess this was because, when adding a single object, we knew that it could only affect ancestor and descendent objects in QuPath v0.1.2 and earlier. But if we changed multiple objects, then all the *potential* auto-resolved parent/child relationships between objects would be too complex to decipher. Instead, it was easier and safer to fire an event that basically said: _'something big changed, don't try to figure out exactly what, but just update to handle the hierarchy as it now is'_. I'm reluctant to switch to `addObjects` firing an event that doesn't include all the objects that were added, in case there is any legacy code that might be sensitive to the change. Which leads to... > So, [this condition](https://github.com/qupath/qupath/blob/3544e613b40fd123236936d76e2cb5ee08d855f7/qupath-gui-fx/src/main/java/qupath/lib/gui/UndoRedoManager.java#L474) is true, the event is ignored, and the UndoRedoManager doesn't update its state. It looks like I failed to recognize that ; ```java; event.getChangedObjects().stream().allMatch(p -> p instanceof ParallelTileObject); ```; would return true when `getChangedObjects().isEmpty()`. What it be sufficient to change the problematic condition to this?. ```java; // Try to avoid calling too often; 		if (undoingOrRedoing || event.isChanging() || maxUndoHierarchySize.get() <= 0); 			return;. 		// During processing, we have ParallelTileObjec",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306:1306,update,update,1306,https://qupath.github.io,https://github.com/qupath/qupath/pull/1578#issuecomment-2276091306,2,['update'],['update']
Deployability,"s are being applied through the viewer, but in _Run for Project_ the image isn't actually open in the viewer. There's always a way. For example, a script could potentially be written that loops through the images and opens in them in the viewer first... but it would take a bit of work and wouldn't be very elegant. It's hard to generalize because the script ought to handle cases where the number of channels for an image might differ. > If I open a batch of images as a project, QuPath opens all images, including the pink one and the low res scan. I then delete these low-res images one by one as I am not able to press ctrl+click to select several at the same time and then deleting them all. Would there be a quicker way?. Sort of... Firstly, you can open the .qpproj file in a text editor (I use [Atom](https://atom.io)) and remove entries manually. Alternatively, if you're using v0.1.3 you can set metadata for each image and then sort by that:; https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#better-tools-to-manage-projects--metadata. Then if you right-click on the header for one of the metadata flags (under which there are multiple images), you can delete that and it results in all the images under it being removed. This does require somehow setting the metadata in the first place. If you have to do it manually, it probably doesn't help much. So again with a script (as usual)...; ```groovy; def server = getCurrentImageData().getServer(); if (server.getWidth() < 6000) {; getProjectEntry().putMetadataValue('Small', 'True'); }; ```; This will set a flag for all the images with a width < 6000 pixels. Then you can right-click on the list of images in the project, choose _Sort by... &rarr; Small_ and then right-click on _True_ and choose _Remove image_. You'll be asked if you want to delete whatever number of images are below _True_. You can then _Sort by... &rarr; None_ to go back to where you were. > some images have different ""high resolution"" scans bec",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-411649825:1302,update,updates,1302,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-411649825,1,['update'],['updates']
Deployability,"s in context; * Added 'Advanced' features, including optional PCA and selecting a 'Boundary' classification; * Ability to save & reload classifiers (format may change!); * New 'Create threshold classifier' command (replaces old simple threshold command); * Improved 'Dark' theme (available in the preferences); * Scripting Improvements; * Changed syntax highlighting - for better behavior with the 'Dark' theme; * Core classes can now be auto-imported (use Ctrl-Shift to cycle through code-completions); * More helpful error messages for common errors; * New setPixelSizeMicrons(double, double) scripting method; * New replaceClassification(String, String) scripting method; * Warning when applying 'Run for project' to an image currently open; * Major ROI revisions; * Area ROIs 'snap' to pixel coordinates by default (can be changed in the preferences); * New GeometryROI replaces AWTAreaROI; * 'Distance to annotations 2D' now supports line and point ROIs; * Increased use of Java Topology Suite for Geometry calculations; * Removed older interfaces (PathShape, PathPoints, PathArea, PathLine and TranslatableROI), moved more methods into ROI directly; * Zoom in further for more accurate pixel-wise annotations; * Revised cell detection & other detection commands that use tiling; * Bigger tile overlap & improved contour smoothing in cell detection (note: this will impact results!); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing; * New 'Memory monitor' and 'Show input display' commands in 'View' menu; * Summary measurements are displayed for the full image when no objects are selected; * Added 'saveImageMeasurement' scripting command; * Revised how images are written; * Moved 'ImageWriterTools' to core module, updated 'ImageWriter' interface; * Changed 'File -> Export regions.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:2289,update,updated,2289,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,1,['update'],['updated']
Deployability,"s needs worked around; also, it needs to be possible for people to have multiple versions installed for reproducibility). It's already a real pain to do, and I don't want to add any more manual steps if I can avoid it. It would be strongly preferable to automate the whole process a bit more, using [Upload to Release](https://github.com/marketplace/actions/upload-to-release) to avoid the download/upload requirement, and somehow include hashes (e.g. using the links from @KrisJanssen's last post) at that point. This seems to me at least a bit awkward to set up though, since the upload action is only triggered when a release is made. The [build workflow](https://github.com/qupath/qupath/blob/v0.3.2/.github/workflows/jpackage.yml) would have to be quite a bit more complex (e.g. to handle cross-platform filenames/content types for the builds, as well as different artefact compression methods). I'd also still need to retain the ability to check the release manually on each platform *before* the release itself is created, because creating the release is what triggers any update notifications... and after the release has been tagged is a bad time to identify some platform-specific breakage. These tend to happen with every release, e.g. because some dialog ends up misbehaving on Ubuntu but looks fine everywhere else. I strongly suspect I'd mess it up quite a few times before (hopefully) getting it right, and potentially make several 'accidental' releases along the way... confusing the version numbering. Therefore while I'd like to be able to explore this before the next release, but there's a very strong chance I won't have time to set up or debug the whole pipeline. If anyone else wants to work on improving the workflow, and contending with its messiness by checking the proposed solution really does work properly on all platforms, suggestions or PR's welcome!. > Sidenote: A related concern is that I've been asked several times for signed distributions. Much as I like the idea",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371:1548,release,release,1548,https://qupath.github.io,https://github.com/qupath/qupath/issues/1027#issuecomment-1208071371,4,"['release', 'update']","['release', 'update']"
Deployability,"s only to provide a way to assign classes to annotations manually. It's very possible to have objects with other classes in the image; this happens often (e.g. with 'Positive cell detection' you can get cells with 'Positive' and 'Negative' classes - but these don't need to appear in the class list for it to work). ### The uniqueness of classes; If you create a new class in the class list and it has _exactly_ the same name as a previous one, then it should refer to _exactly_ the same class. If the class doesn't exist, it will be created. But if it exists anywhere in the image, then the existing class with that name will be used. This is important for how QuPath does things. Unfortunately, the rule is _very_ strict. Any difference in class name (e.g. different capitalization, spaces) results in a different class. So it is necessary to be very careful when doing this. > I _think_ the color for the class is random. I may have changed that for the next version to make the color pseudo-random, but consistently the same if the same name is typed (making it easier to identify discrepancies). I'll have to check the code to make sure if I made this change or only thought about it... ### What to do in the short term; There are three main options in the short term:; * Add the classes you need manually (and looking out for any problems/tiny discrepancies) if/when they are lost; * Create a script to set the contents of the class list more easily (this is possible, but needs caution as well... if the class list is corrupt in v0.1.2, QuPath won't start); * [Follow the instructions to build my test version](https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html#step-by-step-guide) that already has some of these changes available, ahead of them being actually packed up into a full QuPath release. If a script to set the class list would save you a lot of time, let me know I can help create one; otherwise, I hope one of the other two options and this explanation can help.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/243#issuecomment-437784159:2575,update,updates,2575,https://qupath.github.io,https://github.com/qupath/qupath/issues/243#issuecomment-437784159,4,"['release', 'update']","['release', 'updates']"
Deployability,"s/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3227,deploy,deploy,3227,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"s/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2960,deploy,deploy,2960,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,sBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:50); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47); at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26); at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43); at org.gradle.tooling.internal.provider.ParallelismConfigur,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:9572,Continuous,ContinuousBuildActionExecuter,9572,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['Continuous'],['ContinuousBuildActionExecuter']
Deployability,"se a convenient Groovy syntax, e.g.; ```groovy; getProject().metadata['key'] = 'value'; getProjectEntry().metadata['key'] = 'value'; getSelectedObject().metadata['key'] = 'value'; ```. ## Don't use metadata too much!; For `PathObject`, the metadata is generated lazily on demand - so imposes no overhead if it isn't needed. This means that *it's generally a bad idea to start adding metadata to detections* - especially if we may have a huge number.; It introduces considerable overhead to store a `Map` for each object.; This is typically find for other kinds of `PathObject`, but we don't want to store millions of additional maps if they are not needed. ## Use `""_key""` format for internal use; A documented convention for `MinimalMetadataStore` is to use `""_""` as the first character for metadata values that are used internally. The practical implication is that values starting with `""_""` aren't typically shown to the user, e.g. within measurement tables. ## Thread safety; The maps returned by `DefaultProject` and its image entries are synchronized. The map returned by `PathObject.getMetadata()` is currently *not* thread-safe. This can be confirmed with the following script:; ```groovy; def pathObject = PathObjects.createAnnotationObject(ROIs.createEmptyROI()). // Control synchronization; boolean doSynchronize = true. // Make sure we have no metadata at the start; pathObject.metadata.clear(); int before = pathObject.metadata.size(). java.util.stream.IntStream.range(0, 1000); .parallel(); .forEach(i -> {; def map = pathObject.metadata; if (doSynchronize) {; synchronized (map) {; map[UUID.randomUUID().toString()] = ""Yes""; }; } else {; map[UUID.randomUUID().toString()] = ""Yes""; }. }); ; int after = pathObject.metadata.size(); print ""Metadata added: ${after - before}""; ```; If using `synchronized (map)` for the updates, then 1000 values should be added. But otherwise, you will likely see fewer values at the end. > It is probably worth synchronizing the map in a future version.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1587:2151,update,updates,2151,https://qupath.github.io,https://github.com/qupath/qupath/pull/1587,1,['update'],['updates']
Deployability,se.lambda$new$5(Unknown Source); at javafx.controls/com.sun.javafx.scene.control.LambdaMultiplePropertyChangeListenerHandler.lambda$new$1(Unknown Source); at javafx.base/javafx.beans.value.WeakChangeListener.changed(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.graphics/javafx.css.StyleableObjectProperty.set(Unknown Source); at javafx.base/javafx.beans.property.ObjectProperty.setValue(Unknown Source); at javafx.controls/javafx.scene.control.Labeled.setGraphic(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:423); at qupath.lib.gui.panes.PathObjectHierarchyView$PathObjectCell.updateItem(PathObjectHierarchyView.java:413); at javafx.controls/javafx.scene.control.TreeCell.updateItem(Unknown Source); at javafx.controls/javafx.scene.control.TreeCell.lambda$new$3(Unknown Source); at javafx.base/javafx.beans.WeakInvalidationListener.invalidated(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(Unknown Source); at javafx.base/com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.markInvalid(Unknown Source); at javafx.base/javafx.beans.property.ObjectPropertyBase.set(Unknown Source); at javafx.controls/javafx.scene.control.TreeView.setRoot(Unknown Source); at qupath.lib.gui.panes.PathObjectHierarchyView.hierarchyChanged(PathObjectHierarchyView.java:563),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/744:3475,update,updateItem,3475,https://qupath.github.io,https://github.com/qupath/qupath/issues/744,1,['update'],['updateItem']
Deployability,"sion-stardist-0.4.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-cellpose-0.6.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-imagecombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.qpproj; INFO: Project set to Project: QupathProject_donneur1-project; INFO: Setting max Bio-Formats readers to 20; WARN: Removing alpha channel; ... (a lot of warnings); WARN: Removing alpha channel; ERROR: QuPath exception: Bidirectional binding failed, setting to the previous value; java.lang.RuntimeException: Bidirectional binding failed, setting to the previous value; at com.sun.javafx.binding.BidirectionalBinding$TypedGen",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:1441,Update,Update,1441,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['Update'],['Update']
Deployability,"st intuitive thing that should happen, and is not a bug. If this didn’t happen, then you if ran the cell detection command twice with the same parent selected, you would end up having every cell counted twice - not to mention the strange things that might happen with overlapping objects if you were to run other tiling/superpixel commands. It's not clear to me what was the purpose of doing manual counts followed by automated counts within the exact same region, but (as you've found) it is something that is not supported. You *could* do it the opposite way (i.e. automated counts followed by manual counts). However, if it was my goal to compare manual and automated cell counting then I would do the automatic counts in duplicate project and keep the data separated. Furthermore, you can do automated counts and then select 'Convert detections to points' within the 'Points tool' to initialize the (manually-editable) points that can subsequently be modified to generate 'semi-automated counts'. With regard to being unable to reopen a data file, this is something that has been reported some months ago (e.g. #58), but I'm not aware of it being an ongoing problem - or at least not one I have ever been able to reproduce. If QuPath fails to write a complete data file, then you should find that a '.qpdata.backup' file exits somewhere inside your project/data folder. If you strip the '.backup' data part from the file name, then it should be possible to recover the last saved version. > *-Information about the object hierarchy is at https://github.com/qupath/qupath/wiki/Object-hierarchies But from a quick look it seems that 'point' objects do not behave in the way you might expect, in that it appears that a point object is the child of a region if the *first* point is inside that region - and adding subsequent points (inside or outside the region) doesn't change this relationship. This is potentially a bug... or at least unintuitive behavior that may well change in a future release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-342941759:2426,release,release,2426,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-342941759,2,['release'],['release']
Deployability,stable release 0.2.3 linux installation path,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614:7,release,release,7,https://qupath.github.io,https://github.com/qupath/qupath/issues/614,2,"['install', 'release']","['installation', 'release']"
Deployability,"t include any code that directly relates to the GPU - everything happens through OpenCV/JavaCPP (and sometimes also PyTorch/TensorFlow/DJL). If you search for `the provided PTX was compiled with an unsupported toolchain` you should find lots of discussions separately from QuPath; it seems that the issue is normally related to the driver. I tried to replicate the issue with the only Windows computer I have access to (including a GeForce 1060) and could not - it runs without errors, and `DnnTools.isCudaAvailable()` returns true. > Given that issue https://github.com/qupath/qupath/issues/841 was marked as resolved 5 days ago, it could be linked to that. Perhaps there were some changes to the API such that closing of the model should be scripted differently?. I don't think that can be relevant here. I'm not sure that there is any bug here that can be fixed within QuPath. I have seen such error messages before, but the solution was always to update my graphics card driver. Have you tried this?. Note that QuPath v0.4.0 gives a range of options for deep learning, but CUDA incompatibilities will mean that probably not all can work at once (e.g. I could get PyTorch with GPU acceleration today by installing CUDA 11.7, but TensorFlow seems to require 11.3... I'm not sure there's a combination that gets both working together). I don't see that there's really anything much more we can do apart from simply removing the option of GPU acceleration altogether and not documenting it as an option - but that seems a shame when often it does work. > I have a version of QuPath built on 2022-11-21 which has no problem running StarDist on the GPU, so it's likely tied to any commits between this period. Because QuPath doesn't directly access the GPU, please check the .jar files within each installation. I don't know what the problem could be, unless it is somehow related to the inclusion of some Deep Java Library dependencies - or if you have other extensions installed that are conflicting.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127:1220,install,installing,1220,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180#issuecomment-1341628127,6,['install'],"['installation', 'installed', 'installing']"
Deployability,"t is annotated. 2. You could train up a classifier for all the ‘similar-enough-looking’ cores on one slide, and save that classifier. For all the cores that aren’t handled well enough, you could go through and set them as ‘Missing’. When you export your results, you need to be careful to ignore all the ‘Missing’ cores.; Then, you can duplicate your project, and delete all your annotations. You can go through and set all the ‘Missing’ cores to be available, and all the available cores to be ‘Missing’. Then train up a new classifier, and export the results again.; This way you can use multiple classifiers. It’s not very elegant at all, and I’m not sure that I would recommend it… but it is an option.; > If you try this, you could toggle the ‘Missing’ status in a script or manually. If you do it manually, I’d suggest opening the ‘Hierarchy’ tab on the left of the screen, and selecting the first core. Make sure you have clicked somewhere inside the main viewer to activate it, then use the arrow keys to move around the TMA grid, and press ‘backspace’ to toggle the ‘Missing’ status. Because the default settings mean that selected cores are shown as yellow, rather than dark/light blue, having the ‘Hierarchy’ tab open is useful to show you whether the selected core is missing or not. 3. You could do something similar to the above, but set the ‘missing’ status before cell detection… so you end up without any cells in the cores that shouldn’t be included. This helps avoid generating a lot of badly-classified data that you then need to remember to ignore later. However, it does then require being able to estimate in advance which cores should be classified together. 4. If you want to use a separate classifier for every core, you could try a more drastic approach of exporting every core as a separate image. To do this, first dearray your slide. Then, you can use [Extension &rarr; ImageJ &rarr; ImageJ macro runner](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#running-",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/57#issuecomment-288818401:2082,toggle,toggle,2082,https://qupath.github.io,https://github.com/qupath/qupath/issues/57#issuecomment-288818401,2,['toggle'],['toggle']
Deployability,"t that multiple cores could (and often should) have the same unique ID. Which meant a curious interpretation of 'unique'. It's useful because it makes it possible to group cores with the same ID, e.g. to compute summary measurements. I used this a lot in the original QuPath *Scientific Reports* paper, but haven't really used it myself much since then. Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I'd like to change it as soon as possible. Doing so now fits with recent work to rename key methods to improve consistency and reduce ambiguity, e.g.; * https://github.com/qupath/qupath/pull/1109; * https://github.com/qupath/qupath/pull/1111. My proposal is to change **Unique ID** to become **Case ID**. I know others use the TMA functionality more often than me (e.g. https://github.com/qupath/qupath/issues/1083) so I want to leave this issue here for a day or two to a) give a reference explaining the change, and b) ask for feedback as to whether it's a good/bad idea, or there's a better name than than *Case ID*. I'd like to stay away from *Patient ID* because it feels quite human-specific to me, and I have some concerns that it encourages the use of identifiers that might be sensitive - and really any identifier used in QuPath ought to be anonymised. Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it, but it means that IDs saved in QuPath v0.4.0 won't be recognized in older versions. @ajay1685 @Svidro @saramcardle @zmikulski (not sure who is using the TMA functionality...). *-**Note to self!** @petebankhead Need to decide on `getID()` or `getId()` and ensure this is consistent...",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114:1928,update,update,1928,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114,1,['update'],['update']
Deployability,t.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ERROR: QuPath exception; at com.sun.glass.ui.Application.checkEventThread(Application.java:443); at com.sun.glass.ui.View.getNativeView(View.java:449); at com.sun.glass.ui.win.WinAccessible.get_HostRawElementProvider(WinAccessible.java:672); at com.sun.glass.ui.win.WinAccessible.UiaRaiseAutomationEvent(Native Method); at com.sun.glass.ui.win.WinAccessible.sendNotification(WinAccessible.java:287); at javafx.scene.Node.notifyAccessibleAttributeChanged(Node.java:9604); at javafx.scene.control.TableView$TableViewSelectionModel.focus(TableView.java:2003); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateDefaultSelection(TableView.java:2930); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.updateItemsObserver(TableView.java:2907); at javafx.scene.control.TableView$TableViewArrayListSelectionModel.access$2000(TableView.java:2028); at javafx.scene.control.TableView$TableViewArrayListSelectionModel$1.invalidated(TableView.java:2052); at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:349); at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81); at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105); at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112); at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146); at javafx.scene.control.TableView.setItems(TableView.java:843); at qupath.lib.gui.panels.PathImageDetailsPanel.setImageData(PathImageDetailsPanel.java:451); at qupath.lib.gui.panels.PathImageDetailsPanel.propertyChange(PathImageDetailsPanel.java:539); at java.beans.PropertyChangeSupport.fire(PropertyChangeSupport.j,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/223#issuecomment-424986075:6198,update,updateItemsObserver,6198,https://qupath.github.io,https://github.com/qupath/qupath/issues/223#issuecomment-424986075,2,['update'],['updateItemsObserver']
Deployability,"t.getPathClass().getBaseClass() == getPathClass('Tumor')}; ```; This is because `==` really calls the `PathClass.compareTo(pathClass)` method, and this identifies the classes as the same. It is only the 'same object comparison' with `===` that fails. However if the same code was written in Java, `==` would fail because this is the Java version of the same object comparison. Knowing all this, it is possible to construct workflows where the results shown in QuPath are *not* correct. Taking the example above, if I then artificially select half my cells and assign the classification `Tumor` (with nothing else derived from it) then the count for the `Tumor (base)` measurement is wrong - it is too low (24006). This is because it only counts cells classified as `Tumor: Positive` and `Tumor: Negative` - but not `Tumor` only. <img width=""1192"" alt=""Tumor-v0 4 3 wrong"" src=""https://github.com/qupath/qupath/assets/4690904/fd610dcf-18a6-4ed8-bf54-443eddb8e91c"">. This can be seen by comparing the results with the same data opened in v0.3.2, where the `Tumor (base)` value is 102603. <img width=""1074"" alt=""Tumor-v0 3 2 correct"" src=""https://github.com/qupath/qupath/assets/4690904/97e9d2da-72bc-43a0-868c-cabe790bee9d"">. The good news is that all the other results still agree. Therefore it seems that; * Most analysis is unlikely to be affected - it required some effort here to devise a workflow that fails; * Even when the bug *does* strike, it doesn't necessarily affect the measurements that are relevant outputs of the analysis (which here would be the Positive %). **Next steps**; We plan to fix the bug in the next QuPath release, and include new tests to help prevent it ever reoccurring. In the meantime, if you are concerned that it might affect your work, reopening your data files in QuPath v0.3.2 can help to confirm whether the same results are produced. If not, the best place to discuss workarounds and fixes for specific cases is on the forum at https://forum.image.sc/tag/qupath",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1306:5751,release,release,5751,https://qupath.github.io,https://github.com/qupath/qupath/issues/1306,1,['release'],['release']
Deployability,"t> Collection<T> filterByROIIntersectsNucleus(ROI roi, Collection<T> pathObjects); public static <T extends PathObject> Collection<T> filterByROIContainsNucleusCentroid(ROI roi, Collection<T> pathObjects); ```. In case you just want to check if objects are present quickly - but don't necessarily need the objects themselves - you can use:. ```java; // Old method, deprecated; public boolean hasObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region). // New methods; public boolean hasObjectsForRegion(ImageRegion region); public boolean hasAnnotationsForRegion(ImageRegion region); public boolean hasDetectionsForRegion(ImageRegion region); ```. These should effectively report whether `getXXXForRegion` would return an empty collection or not, without needing to generate that collection. ### Accessing objects with point ROIs; This simply accesses objects then filters by ROI type. ```java; // Old method, deprecated; public synchronized Collection<PathObject> getPointObjects(Class<? extends PathObject> cls). // New methods; public Collection<PathObject> getAllPointObjects(); public Collection<PathObject> getAllPointAnnotations() ; ```; This should be sufficiently obscure that there is no need to have separate methods to request point objects of more classes. If you *really* need point detections, for example. filtering the resulting collection should be straightforward, e.g.; ```java; var pointAnnotations = hierarchy.getAllPointObjects().stream().filter(PathObject::isDetection).toList();; ```. ---. To support these changes, `GeometryROI.contains(x, y)` was also updated to make use of an [`IndexedPointInAreaLocator`](https://locationtech.github.io/jts/javadoc/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.html) for complex geometries - enabling centroid tests to benefit from performance improvements with no special logic required outside the `ROI` class itself. Also, some deprecated methods - and deprecated classes that used them - were removed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1563:6435,update,updated,6435,https://qupath.github.io,https://github.com/qupath/qupath/pull/1563,1,['update'],['updated']
Deployability,th-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath -image ../9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script t6.groovy; 03:18:04.245 [main] [INFO ] QuPath - Launching QuPath with args:,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420540074:2809,deploy,deploy,2809,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420540074,2,['deploy'],['deploy']
Deployability,th-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; --------------------------------------------,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3071,deploy,deploy,3071,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"th-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:2804,deploy,deploy,2804,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,"thanks again @petebankhead. That was the issue. I'm posting the code in case somebody else is interested. . ```; if( (tw>400) && (tw>400) && (roi.getScaledArea(pixelWidth, pixelHeight)>9500) && (counter<10)){; RegionRequest request = RegionRequest.createInstance(path, 4, (int) roi.getBoundsX(), (int) roi.getBoundsY(),(int) roi.getBoundsWidth(), (int) roi.getBoundsHeight(), 0, 0); ; ; // Read the image region; ImagePlus imp = serverIJ.readImagePlusRegion(request).getImage(true); IJ.run(imp, ""8-bit"", """");; IJ.run(imp, ""Median..."", ""radius=3"");. IJ.run(imp, ""Statistical Region Merging"", ""q=10 showaverages"");; IJ.run(imp, ""Invert"", """");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Set Measurements..."", ""area mean standard modal min centroid center bounding fit shape feret's integrated median skewness kurtosis add redirect=None decimal=3"");; IJ.run(imp, ""Make Binary"", """");; IJ.run(imp, ""Erode"", """");; IJ.run(imp, ""Erode"", """");. // code for normalisation and preprocessing prior to segmentation. IJ.run(imp, ""Analyze Particles..."", ""size=20-Infinity circularity=0.40-1.00 display clear summarize add in_situ"");. RoiManager manager = RoiManager.getInstance();; if (manager == null); manager = new RoiManager(). if((manager==null) || (manager.getCount()<1)){; print(""No object detected""); }else{; ; // call IJ roi to qupath roi conversion; def ijROIs = QUPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(imp,; manager.getRoisAsArray(),; serverOriginal,; (double) 4,; true,true,0,0,0). for (annotationIJ in ijROIs) {; def roiIter = annotationIJ.getROI(); def pathObject3 = new PathDetectionObject(roiIter); addObject(pathObject3); }. manager.reset(); ; }; ; //print QP.detectionObjects.lastIndexOf(); ; counter++; imp2 = IJ.getImage();; imp2.close(); ; }; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/136#issuecomment-357668235:783,integrat,integrated,783,https://qupath.github.io,https://github.com/qupath/qupath/issues/136#issuecomment-357668235,2,['integrat'],['integrated']
Deployability,"thanks for link and idea. ; I personally do not have access to this computer. Pity :); But what I remember is, that for example the person who installed QuPath deleted the QuPath folder in the user folder. ; As far as I understood the text in the linked page, that seems not to be the reason. But maybe he changed also something else that I did not find. . In case I find the reason, I will post it here. . For now, the person in charge seems to prefer just to reinstall and see what happens.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-391974886:143,install,installed,143,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-391974886,1,['install'],['installed']
Deployability,"thanks for the reply. ; I do not think that there is a naming issue... Or I am missing something and am slow to get it :) ; For us Extensions are not per user, however users can of course have their own personal directory, which is great. . In the case of extensions, it feels that it is like the 'ImageJ plugins directory'. Is that one per-user or is it configured for the whole of QuPath?. So there would be:; * User directory (scripts, logs, custom classifiers they want to reuse [just spitballing], ...); * ImageJ plugins directory (global for the QuPath installation); * QuPath Extensions directory (global as well). What is the logic to saying the Extensions directory should be configured individually for each user? Perhaps if I had a use-case I would understand it better.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/500#issuecomment-632618684:559,install,installation,559,https://qupath.github.io,https://github.com/qupath/qupath/issues/500#issuecomment-632618684,1,['install'],['installation']
Deployability,"the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I don't think ""Server"" vs ""extension"" is useful yeah, it seems a bit ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1516,update,updates,1516,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,2,['update'],['updates']
Deployability,"thing can be selected. If I click on the list, the top item can take the focus, but nothing else.; - [x] I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start; I think centred vertical alignment for the version and buttons would look bette; - [x] The description text would ideally be lighter in color (e.g. using opacity); - [x] The purpose of the 'remove' and 'update' buttons is unclear - especially for built-in extension that can't be changed. ; - [x] Does update 'Check for updates' or actually update?; - [x] I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. > I'm not sure if the version needs some indication of what it is, either by using a table (and column heading) or adding a v at the start;. I'd be more inclined to even do ""version: 0.1.0"" rather than having column headers that would be largely redundant. > Does update 'Check for updates' or actually update?. It checks for updates; if one is available, it asks if you'd like to download it. If not, it pops up a notification saying it's up-to-date. > I'm not sure that 'Cancel' and 'Accept' are the right terms; I assume 'Accept' basically means 'Download & install'?. Yes, similarly it asks if you want to download before going ahead. ![Screenshot from 2023-10-02 22-37-08](https://github.com/qupath/qupath/assets/10779688/b0404e3f-320d-4fbf-b990-3cad161dee24). Note that here the top list is focusable, the bottom isn't. The titles are obviously WIP (see below). Same with the extensions dir button not being full-width (although I don't truly love that personally, it's up to you). > Finally, I think splitting the lists at the top into different sections would make sense, if they have different purposes. Rather than 'servers' and 'extensions', they could be split between 'Built-in extensions' and 'Optional extensions'. That might help explain the differences in behavior. I",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490:1454,update,update,1454,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1743806490,6,['update'],"['update', 'updates']"
Deployability,thod); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializing /home/joelrv/Downloads/test_pyramid.tif; INFO: Reading IFDs; INFO: Populating metadata; INFO: Checking comment style; INFO: Populating OME metadata; INFO: No memoization file generated for /home/joelrv/Downloads/test_pyramid.tif; INFO: Returning server: Bio-Formats for /home/joelrv/Downloads/test_pyramid.tif; ERROR: QuPath exception; ERROR: java.lang.OutOfMemoryError: Java heap space; WARN: Fallback to requesting thumbnail directly...; ERROR: QuPath exception; WARN: Tile request exception; ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.updateSuggestedOverlayColorFromThumbnail(QuPathViewer.java:996); at qupath.lib.gui.viewer.QuPathViewer.getSuggestedOverlayColor(QuPathViewer.java:1005); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1665); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277); at java.base/java.lang.Thread.run(Thread.java:834); INFO: TiffDelegateReader initializi,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472375699:9424,update,updateSuggestedOverlayColorFromThumbnail,9424,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472375699,1,['update'],['updateSuggestedOverlayColorFromThumbnail']
Deployability,"thumbnails' issue. When opening a new image from a given path, QuPath will test all potential file readers it has access to and check if they can handle the path. If you are only getting the thumbnails, then this implies that the OpenSlide check doesn't pass - which, because OpenSlide *can* certainly handle .svs, suggests that the OpenSlide native libraries are not properly accessible to QuPath, even if the jar is there. When QuPath shows 'ImageJ' as the reader, it does mean just this; ImageJ1 is being used, which can handle a range of small (non-whole-slide) images only, with a combination of its own TIFF reader and Java's ImageIO. It can also sometimes extract the thumbnail from a whole slide image, but only that. If you want to use Bio-Formats you can, but need to download and add it separately - see https://github.com/qupath/qupath-bioformats-extension. If you do install the Bio-Formats extension, then that postpones the immediate need to solve the problem of accessing native libraries; at least, you should be able to open the formats supported by Bio-Formats so long as QuPath can find the Bio-Formats jar file. Still, you won't be able to use OpenSlide or any commands reliant on OpenCV (including the Wand tool). The easiest way to get the native libraries to work is generally to copy them to the directory from which you run the application in the first place. You should be able to find the libraries by looking within an existing QuPath installation, or downloading the binaries for Windows from the OpenSlide/OpenCV websites. But for running from within an IDE, I have only set this up with Eclipse to date and don't know the specifics of getting it to work elsewhere. Finally, I've no doubt that the project could be structured in a way that makes it easier to use different IDEs. The combination of Java 8, JavaFX, Maven, Ant and native libraries makes it more difficult than a project using Java alone, and there wasn't previously a critical need. Still, the portability",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/84#issuecomment-317351735:2302,install,install,2302,https://qupath.github.io,https://github.com/qupath/qupath/issues/84#issuecomment-317351735,1,['install'],['install']
Deployability,"time to load. Opening the images themselves is comparatively faster, yet are still read into memory. No noticeable change in memory usage is occurring when the QuPath project is being loaded, indicating that these images may not be pre-loaded (i.e. cached) during loading of the project itself. My guess is that the thumbnails are being reconstructed each time the QuPath project is loaded (computer must be restarted to reproduce, closing and relaunching QuPath is not sufficient). Given that thumbnail generation was updated in the changelog of the newest unofficial release, I'll build from source now and close the ticket if I can't reproduce the bug. It's a minor inconvenience at best, especially since it's only a delay of two minutes. But keep in mind, the CPU here is a Ryzen 5950X with among the highest single thread speeds of desktop CPUs, and only 1 of the 32 threads is being used during this period. Depending on the root cause and a user's hardware configuration, load times may scale linearly or exponentially as project sizes move into the range of thousands of images. If this is caused by thumbnail generation, then this may only be affecting multiplexed IHC images such as those acquired through IMC or CODEX. **To Reproduce**; Video demonstration: https://www.youtube.com/watch?v=q4Jn9UTKUMw; 1. Create a QuPath project; 2. Load ~300 IMC images. Example IMC images can be found here: https://drive.google.com/file/d/1UcQmiIcjIfYdBVK1v6Phb32FBjHXciuH/view; 3. Close QuPath and restart system; 4. Launch QuPath and open the aforementioned project. Observe relatively long project load times. **Expected behavior**; Loading of a QuPath project should take a few seconds, especially if no measurements are present. **Screenshots**; See video demonstration above. Note, memory usage doesn't change substantially when project is being loaded, however one thread is maxed at 100%, indicating that some kind of non-parallelized process is acting as the rate limiting step. **Desktop (ple",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154:1709,configurat,configuration,1709,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154,1,['configurat'],['configuration']
Deployability,tor.call(DelegatingBuildOperationExecutor.java:36); at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:50); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47); at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26); at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuild,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:9492,Continuous,ContinuousBuildActionExecuter,9492,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['Continuous'],['ContinuousBuildActionExecuter']
Deployability,un(RunAsBuildOperationBuildActionRunner.java:45); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:50); at org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47); at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:47); at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42); at org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78); at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59); at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68); at org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37); at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26); at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43); at org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(P,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/427:9610,Continuous,ContinuousBuildActionExecuter,9610,https://qupath.github.io,https://github.com/qupath/qupath/issues/427,1,['Continuous'],['ContinuousBuildActionExecuter']
Deployability,"ushed. Don't do that.; 12:07:42.748 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFormatsOptionsExtension - Bio-Formats version 6.0.0; WARNING: An illegal reflective access operation has occurred; WARNING: Illegal reflective access by org.codehaus.groovy.vmplugin.v7.Java7$1 (file:/home/joelrv/software/opt/QuPath/qupath_0.2.0-m1/app/groovy-2.5.6.jar) to constructor java.lang.invoke.MethodHandles$Lookup(java.lang.Class,int); WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.vmplugin.v7.Java7$1; WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will return default value NaN; 12:08:18.677 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideServerBuilder - Unable to open file:/media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif with OpenSlide: Pixel width must be a finite number > 0, not NaN; 12:08:19.076 [JavaFX Application Thread] [INFO ] loci.formats.ImageReader - Tif",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:2241,update,update,2241,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['update'],['update']
Deployability,"using MSYS2 building openslide is simply calling ./configure && make &&; make install avoiding winbuild.sh/cross compilation. Did you rebuild pixman; or other openslide dependencies from source on Linux?. Am So., 17. Jan. 2021 um 18:52 Uhr schrieb Pete <notifications@github.com>:. > @kwiechen <https://github.com/kwiechen> thanks for the suggestion, I; > haven't looked into this - what would it involve and what would it solve?; > Currently, 'official' Windows builds are available for OpenSlide and seem; > to work fine. It is portability on Mac/Linux that poses the biggest problem; > (especially since pixman included in the last LTS Ubuntu release causes; > trouble).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/629#issuecomment-761851656>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AEG6ZGYDJUF6JH7JKL7LHRDS2MPVPANCNFSM4S6NHNUA>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-761857622:78,install,install,78,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-761857622,4,"['install', 'release']","['install', 'release']"
Deployability,"v0.0.6 had (accidentally!) a different name, `qupath-bioformats-extension.jar` rather than `qupath-extension-bioformats.jar`. Having both installed may be the cause of the trouble. It's not possible to install multiple copies of any other version of the extension (without renaming them). A couple of related .scn problems came up recently:; * https://github.com/qupath/qupath/issues/271; * https://github.com/qupath/qupath-bioformats-extension/issues/10. More info to come when I have time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/270#issuecomment-468673689:138,install,installed,138,https://qupath.github.io,https://github.com/qupath/qupath/issues/270#issuecomment-468673689,2,['install'],"['install', 'installed']"
Deployability,v0.1.0 - first release,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/30:15,release,release,15,https://qupath.github.io,https://github.com/qupath/qupath/pull/30,1,['release'],['release']
Deployability,"v0.2.0-m10 is now available, which contains an updated version of OpenCV that I think/hope should have fixed the issue. But since I couldn't reproduce it in the first place, I'm not certain. I'll close this issue, but if you find the problem remains - or you can confirm it's resolved in m10 - please do let me know.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-617734172:47,update,updated,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-617734172,1,['update'],['updated']
Deployability,ventHandler.java:218); > at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); > at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56); > at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114); > at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74); > at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49); > at javafx.event.Event.fireEvent(Event.java:198); > at javafx.scene.control.TreeItem.fireEvent(TreeItem.java:764); > at javafx.scene.control.TreeItem.updateChildren(TreeItem.java:943); > at javafx.scene.control.TreeItem.lambda$new$0(TreeItem.java:425); > at com.sun.javafx.collections.ListListenerHelper$SingleChange.fireValueChangedEvent(ListListenerHelper.java:164); > at com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73); > at javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:233); > at javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482); > at javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541); > at javafx.collections.ObservableListBase.endChange(ObservableListBase.java:205); > at javafx.collections.ModifiableObservableListBase.setAll(ModifiableObservableListBase.java:90); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.getChildren(PathObjectHierarchyView.java:479); > at qupath.lib.gui.panels.PathObjectHierarchyView$3.isLeaf(PathObjectHierarchyView.java:486); > at javafx.scene.control.TreeUtil.getExpandedDescendantCount(TreeUtil.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484622516:4313,update,updateChildren,4313,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484622516,1,['update'],['updateChildren']
Deployability,"when i try to open a qdata ; ![图片1](https://user-images.githubusercontent.com/25858179/74319399-d4a39400-4db9-11ea-8989-d610f792d22a.png). ## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps to reproduce the behavior:; 1. Go to '...'; 2. Click on '....'; 3. Scroll down to '....'; 4. See error. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Windows, macOS, Ubuntu...]; - QuPath Version [e.g. 0.1.2]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/399:373,release,release,373,https://qupath.github.io,https://github.com/qupath/qupath/issues/399,1,['release'],['release']
Deployability,"will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; INFO: ZeissCZIReader initializing W:\Images\David\HW_5plex test\2018_02_02__4525.czi; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; WARN: Unknown IlluminationType value 'Fluorescence' will be stored as ""Other""; ERROR: QuPath exception; at qupath.lib.display.ImageDisplay.setChannelSelected(ImageDisplay.java:313); at qupath.lib.gui.commands.BrightnessContrastCommand.updateDisplay(BrightnessContrastCommand.java:541); at qupath.lib.gui.commands.BrightnessContrastCommand.createDialog(BrightnessContrastCommand.java:446); at qupath.lib.gui.commands.BrightnessContrastCommand.run(BrightnessContrastCommand.java:586); at qupath.lib.gui.QuPathGUI.lambda$createCommandAction$46(QuPathGUI.java:3122); at org.controlsfx.control.action.Action.handle(Action.java:419); at org.controlsfx.control.action.Action.handle(Action.java:64); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59); at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58); at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatc",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/145:2900,update,updateDisplay,2900,https://qupath.github.io,https://github.com/qupath/qupath/issues/145,1,['update'],['updateDisplay']
Deployability,"y/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath /oamp/bio/QuPath/0.1.2/command/9624CE91-1DA8-40AE-89AC-41412BE756DB.jpg -script 2.groovy; ----------------------------------------------------------------------------------------------------------------; **2.groovy**:; setImageType('BRIGHTFIELD_H_DAB');; setColorDeconvolutionStains('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:3308,deploy,deploy,3308,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,"y/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jutils-1.0.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-classic-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/logback-core-1.1.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/opencv-3.1.0-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/openslide-3.4.1_2-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/reactfx-2.0-M4u1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/richtextfx-0.6.10.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/slf4j-api-1.7.20.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/undofx-1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/wellbehavedfx-0.1.1.jar:./ QuPath 358.JPG -script t6.groovy. 21:54:22.653 [main] [INFO ] QuPath - Launching QuPath with args: 358.JPG, -script, t6.groovy; 21:54:23.003 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale FORMAT set to en_US; 21:54:23.005 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Locale DISPLAY set to en_US; 21:54:23.022 [main] [ERROR] QuPath - Error running script!; javax.script",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:3041,deploy,deploy,3041,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,2,['deploy'],['deploy']
Deployability,y/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/d,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/213:1544,deploy,deploy,1544,https://qupath.github.io,https://github.com/qupath/qupath/issues/213,1,['deploy'],['deploy']
Deployability,y/qupath/qupath-core-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-core-processing-awt-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-input-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-openslide-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-pen-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-extension-script-editor-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-gui-fx-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-ij-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/qupath/qupath-processing-opencv-0.1.2.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/commons-math3-3.6.1.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/controlsfx-8.40.12.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/flowless-0.4.5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/groovy-jsr223-2.4.7.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/gson-2.8.0.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/ij-1.51g.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-common-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jfxtras-menu-8.0-r5.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-2.0.6.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-linux.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-osx.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jinput-platform-2.0.6-natives-windows.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/deploy/jars/jpen-2-150301.jar:/oamp/bio/QuPath/0.1.2/qupath-0.1.2/d,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/216#issuecomment-420486003:1277,deploy,deploy,1277,https://qupath.github.io,https://github.com/qupath/qupath/issues/216#issuecomment-420486003,4,['deploy'],['deploy']
Energy Efficiency, 2; 20:39:43.272 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.274 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; 20:39:43.275 [main] [ERROR] loci.formats.tiff.TiffParser - Error reading IFD type at: 14; ...; 20:39:43.604 [main] [ERROR] q.l.i.writers.ome.ConvertCommand - Unable to open file:broken_image.tif; java.io.IOException: Unable to open file:broken_image.tif; at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:306); at qupath.lib.images.writers.ome.ConvertCommand.run(ConvertCommand.java:147); at picocli.CommandLine.executeUserObject(CommandLine.java:2026); at picocli.CommandLine.access$1500(CommandLine.java:148); at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2461); at picocli.CommandLine$RunLast.handle(CommandLine.java:2453); at picocli.CommandLine$RunLast.handle(CommandLine.java:2415); at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2273); at picocli.CommandLine$RunLast.execute(CommandLine.java:2417); at picocli.CommandLine.execute(CommandLine.java:2170); at qupath.QuPath.main(QuPath.java:202); Suppressed: java.io.IOException: Unable to build ImageServer for file:/scratch/a56/jr9959/tmp/xenium-images/unassigned/230629_Xenium_ID4369_Primary_3962_LA-Spots/230629_Xenium_ID4369_Primary_3962_LA-Spot000001.tif with requested provider qupath.imagej.images.servers.ImageJServerBuilder; at qupath.lib.images.servers.ImageServerBuilder$DefaultImageServerBuilder.buildOriginal(ImageServerBuilder.java:369); at qupath.lib.images.servers.ImageServerBuilder$AbstractServerBuilder.build(ImageServerBuilder.java:174); at qupath.lib.images.servers.ImageServers.buildServer(ImageServers.java:299); ... 10 common frames omitted; ```; Checkout exit code:; ```; echo $?; 0; ```. **Expected behavior**; Expected a non-zero return code. **Desktop (HPC):**; - OS: Rocky Linux release 8.8 (Green Obsidian); - QuPath Version: 0.5.0,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1451:3289,Green,Green,3289,https://qupath.github.io,https://github.com/qupath/qupath/issues/1451,1,['Green'],['Green']
Energy Efficiency," access operations; WARNING: All illegal access operations will be denied in a future release; 12:07:43.276 [JavaFX Application Thread] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: null; 12:07:43.360 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:07:43.365 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:08:18.669 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; 12:08:18.670 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.objective-power' not available, will return default value NaN; 12:08:18.677 [JavaFX Application Thread] [WARN ] q.l.i.s.o.OpenslideServerBuilder - Unable to open file:/media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif with OpenSlide: Pixel width must be a finite number > 0, not NaN; 12:08:19.076 [JavaFX Application Thread] [INFO ] loci.formats.ImageReader - TiffDelegateReader initializing /media/joelrv/SDB/Dropbox/PhD/ST_Thyroid/r_plotting/input_data/new_sample/ndpi_and_tifs/st1_d1_HE_final.tif; 12:08:19.078 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Reading IFDs; 12:08:19.172 [JavaFX Application Thread] [INFO ] loci.formats.in.MinimalTiffReader - Populating metadata; 12:08:19.182 [JavaFX Application Thread] [INFO ] loci.formats.in.TiffReader - Checking comment style; 12:08:19.182 [JavaFX Application Thread] [INFO ] loci.formats.in.BaseTiffReader - Populating OME metadata; 12:08:19.194 [JavaFX Application Thread] [INFO ] q.l.i.s.b.BioFo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279:2826,power,power,2826,https://qupath.github.io,https://github.com/qupath/qupath/issues/279,1,['power'],['power']
Energy Efficiency," be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things for anyone else. We can even move it up into `QP` so that it works without knowing anything about the viewer at all. I think that as a compromise this is more than fair. It means you get the outcome you want, and we did not have to compromise to do something that I strongly believe will end up wasting a lot of time in the future (be that mine or someone else's). QuPath remains a 0.x.x release and so the API shouldn't be interpreted as stable. I don't encourage writing extensions for that reason. But I do recognise that extensions are important, and so if someone wants to do it (aware of the risks) then it is supported. I hope that more clearly explains my logic. Since it feels like we've discussed this subject many times, I thought I should be thorough in this answer. Now I've no time to shorten it.... I hope it is useful. v0.2.0 has been a rather... intense experience. Pretty much the entire software has been rewritten, while still trying to keep it basically functional and respond to the ever-increasing questions and requests from users. Sometimes it gets exhausting. QuPath is by no means finished, but I do think it is substantially better and more coherent than it previously was. The goal of v0.2.0 was to get decent foundations as quickly as possible - but the task turned out to be huge. The importance of many of the new features will only become clear in future releases. v0.3.0 won't have so many milestones, and I hope will mark the start of a more sustainable development approach...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:6700,sustainab,sustainable,6700,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['sustainab'],['sustainable']
Energy Efficiency," in the future. Of course, `ImageData` exists in a core module. Currently, these means that if serializing the `ImageDisplay` inside the `ImageData`, the `ImageData` ends up storing a JSON version of something that it cannot possibly de-json-ify. This is tolerable, but not ideal. More critically, it also means that nothing in core modules can really work with the current display or channel settings. Perhaps they would like to, e.g. to export RGB image regions. Ideally this would not be restricted to modules that have JavaFX access. It also complicates things like the ImageJ macro runner... currently, this can either be free from JavaFX or capable of incorporating color transforms/channel info - but not both. There are good reasons to want both https://github.com/qupath/qupath/issues/68. Also, it means that changing the brightness and contrast ultimately requires deserializing/serializing the whole data file - which might be large. There are likely far better/more efficient/faster ways to store these settings in a project, not the data file. This would not only be arguably a a better design, but it would also make updating this information for 10,000 images almost instantaneous. I have made some progress in parts of this, because I needed a way to have JSON-serializable color transforms separate from the GUI in order to support stain separation in the pixel classifier and thresholder.... which was needed [to make the sluggish and limited 'Positive pixel counter' unnecessary](https://qupath.readthedocs.io/en/latest/docs/tutorials/measuring_areas.html)... which was needed for my sanity so I'd have to stop answering questions about such a poorly-implemented command (that I had originally implemented). Doing this involved writing a completely separate way of representing the transforms than the one used by `ImageDisplay`. Eventually I think this kind of color transform approach should completely replace the (currently GUI-only) color transforms for better consistency and",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:1867,efficient,efficient,1867,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['efficient'],['efficient']
Energy Efficiency," positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411026150:1142,green,green,1142,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150,1,['green'],['green']
Energy Efficiency," to https://github.com/openmicroscopy/bioformats/issues/2811. I don't see any way to resolve it within QuPath, and it requires a fix on the Bio-Formats side. If you just need to check what the label shows, you could try the script I posted at https://github.com/qupath/qupath/issues/141#issuecomment-358951720 - but it really is a terrible hack, which at best shows an image that looks a bit more plausible. As @rleigh-codelibre points out at https://github.com/openmicroscopy/bioformats/issues/2811#issuecomment-359474813 it doesn't restore the _right_ pixels, merely ones that are less obviously wrong. At best, it might be enough to see more or less what the image should contain without needing to open a new application... but it isn't a proper solution. When I look at the images you posted above with `tiffinfo`, it's clear that the _Photometric Interpretation_ stored in the file really is _YCbCr_ and my hack-y script overrides this. ---. For setting the color, you could try this:; ```groovy; // Set the LUT color for the first channel & repaint; def viewer = getCurrentViewer(); def channels = viewer.getImageDisplay().getAvailableChannels(). channels[0].setLUTColor(50, 200, 250). viewer.repaintEntireImage(); ```; where the three numbers are red, green & blue values (0-255). On a related note, `tiffinfo` also shows the file contains this for the main image:; ```; <channelSettings>; <channel index=""0"" name=""DAPI"" rgb=""#0000ff"" counterstain=""true"" spacingZ=""1000"" />; <channel index=""1"" name=""DsRED"" rgb=""#ffffff"" spacingZ=""1000"" />; <channel index=""2"" name=""Spectrum Green"" rgb=""#00ff00"" spacingZ=""1000"" />; <channel index=""3"" name=""Spectrum Far Red"" rgb=""#ff0000"" spacingZ=""1000"" />; </channelSettings>; ```; I can't see anywhere that Bio-Formats has parsed the channel names and colors, and this isn't currently accessible to QuPath. If the `LeicaSCNReader` were to be updated, and it was possible to get that information included, it could be handy in improving the default colors.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409882684:1304,green,green,1304,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409882684,3,"['Green', 'green']","['Green', 'green']"
Energy Efficiency,"![17032701](https://cloud.githubusercontent.com/assets/15114623/26643056/f94028f8-45fd-11e7-9c55-953359b2a21b.png). I apologize if this issue has already been posted. Sometimes, when running the cell detection algorithm, certain tiles demonstrate variability in detection (as pictured). . How can I reduce or remove this variability between tiles?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/80:299,reduce,reduce,299,https://qupath.github.io,https://github.com/qupath/qupath/issues/80,1,['reduce'],['reduce']
Energy Efficiency,"## Background; A goal of this PR is to further reduce the requirement to refer to specific Java subclasses of `PathObject`, e.g. `PathDetectionObject`, `PathAnnotationObject`. This process started several releases back, e.g.; * `pathObject.isAnnotation()` should be used in preference of `pathObject instanceof PathAnnotationObject`; * `PathObjects.createAnnotationObject(ROI)` should be used instead of `new PathAnnotationObject(ROI)`. Eventually the specific subclasses may be removed entirely, in favor of using a single `PathObject` class. Along the way, the API should become easier to understand and to use. ## What has changed. One of the main times when the specific Java class remains relevant is when querying objects from `PathObjectHierarchy` using one of the following methods:; ```java; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls, ROI roi). public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region, Collection<PathObject> pathObjects). public boolean hasObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region). public synchronized Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); ```. This PR deprecates these methods, and provides alternatives that do not require Java classes to be specified. ### Accessing objects for a `ROI`; This provides a way to access objects within (in some sense!) a specified ROI:; ```java; // Old method, discouraged (but not yet deprecated); public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls, ROI roi). // New methods; public Collection<PathObject> getAllObjectsForROI(ROI roi); public Collection<PathObject> getAnnotationsForROI(ROI roi); public Collection<PathObject> getTilesForROI(ROI roi); public Collection<PathObject> getCellsForROI(ROI roi); public Collection<PathObject> getAllDetectionsForROI(ROI roi); ```. **There is an important (and possibly-unexpected) subtlety here!**. The new methods follow ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1563:47,reduce,reduce,47,https://qupath.github.io,https://github.com/qupath/qupath/pull/1563,1,['reduce'],['reduce']
Energy Efficiency,"## Bug report. **Describe the bug**. The following code in `FileResourceManager` leaves an open connection to the directory:; ```java; return Files.list(path); 	.filter(p -> Files.isRegularFile(p) && p.toString().endsWith(ext)); 	.collect(Collectors.toMap(p -> nameWithoutExtension(p, ext), p -> p));; ```. It was expected that the `collect` terminal operation would close the connection... it it [seems it does not](https://stackoverflow.com/questions/27381329/do-terminal-operations-on-streams-close-the-source). This causes real-world problems when running scripts for many images, e.g. see https://forum.image.sc/t/error-too-many-open-files/41628. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a pixel or object classifier; 2. Run a script using `loadPixelClassifier('Anything')`; 3. Check for open files... on macOS this can be through `Activity monitor` or `lsof`. Each time the script is called, the directory containing the pixel classifiers is left open. **Expected behavior**; Directories aren't left open unnecessarily. **Desktop (please complete the following information):**; - QuPath v0.2 -- most problematic on Linux, where the number of open files is limited. **Additional context**; The error can be easily fixed by using the following code instead:; ```java; try (var stream = Files.list(path)) {; 	return stream.filter(p -> Files.isRegularFile(p) && p.toString().endsWith(ext)); 		.collect(Collectors.toMap(p -> nameWithoutExtension(p, ext), p -> p));; }; ```; However, the code should be checked for other instances of this pattern. Also, `DefaultProject` should perhaps cache resource managers rather than creating them anew on each request.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/594:867,monitor,monitor,867,https://qupath.github.io,https://github.com/qupath/qupath/issues/594,1,['monitor'],['monitor']
Energy Efficiency,"## Bug report. **Describe the bug**; Add intensity measurements fails with error below when run on a JPG image (set to image type fluorescence). It seems likely that this is due to the normalized OD colors channel showing up second in the list, which inserts it into the channel list prior to the Red Green and Blue channels.; ![image](https://user-images.githubusercontent.com/23145209/65450506-1b382800-ddf2-11e9-82ba-681885b1897b.png); ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'colorOD'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:355); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); **To Reproduce**; Steps to reproduce the behavior:; Load a 3 color fluorescent image that has been converted into a JPG (Wince. Yes.) Generate cells, try to run Add Intensity Features. Adding fails with a message that is only reported in the log. In multichannel images there is no Normalized OD colors channel that expects or generates OD measurements. In previous versions 1.2/1.3 this also did not occur. I haven't exhaustively checked which M# versions are affected. **Desktop (please complete the following information):**; - OS: Win10; - QuPath Version 0.2.0m4. **Additional context**; Referencing: https://forum.image.sc/t/saving-cell-detection-locations-and-loading-them-in-another-image/29746/12",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/365:301,Green,Green,301,https://qupath.github.io,https://github.com/qupath/qupath/issues/365,1,['Green'],['Green']
Energy Efficiency,"## Bug report. **Describe the bug**; Complex ROIs generated from JTS Geometry objects may not necessarily be valid. If they are not valid, this can cause numerous problems, including:; * Weird visual behavior; * Inability to modify the geometry; * Wrong results (e.g. area or length). Most, if not all, geometries created through normal use in v0.2.0 should be valid - since invalidity is typically caught earlier in the process, before ROIs are created. However, it remains possible that geometries are created by a more obscure process/via scripting. The user should be protected from this as far as possible. **Expected behavior**; Invalid geometries either cannot be converted to ROIs, or at least provide an indication of their invalidity (e.g. by not showing measurements). **Additional context**; Some improvements introduced in v0.2.0-m9 greatly reduce the changes of generating an invalid geometry with the brush/wand tool (the most recent invalid geometry I have seen was generated in m8). There is already a mechanism to perform a validity check when creating a `GeometryROI`, but it is not currently used: https://github.com/qupath/qupath/blob/a03756328188999c0b7f12c290cda0589c50bd4b/qupath-core/src/main/java/qupath/lib/roi/GeometryROI.java#L90. The reason for this is that checking `isValid` can be *very* slow for large or complex geometries - which can problematic in some cases (e.g. when using the brush/wand). The validity check *only* impacts the display of measurements; the geometry is otherwise permitted. Proposed change is to perform validity checks whenever GeometryROIs are created in most circumstances, except for:; * When interactively drawing with the brush or wand; * When performing a simple operation (e.g. translation) that ought not to have any validity implications. Other cases that need consideration are:; * When deserializing an existing geometry (which ought to have been checked upon creation); * When attempting to create a ROI from a heterogeneous `Geomet",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/527:854,reduce,reduce,854,https://qupath.github.io,https://github.com/qupath/qupath/issues/527,1,['reduce'],['reduce']
Energy Efficiency,"## Bug report. **Describe the bug**; Currently (at least on Windows) the script editor window is quasi-modal which means it does not show up as a separate window in the task bar and minimizing the window is not possible. It's either opened and on top of the main window or completely closed. I think this is a bit of a workflow hindrance. Personally, I can work around by moving the script editor window to a second monitor but let's assume, someone is working on a script using only one screen and wants to add an annotation to the current image manually: They would have to either close the script editor completely or grab the window and move it out of the way. However, I think the more common UI workflow would be either quickly minimizing the script editor or ALT-TAB-ing between the windows. . **Expected behavior**; Minimizable and non-modal script editor window. **Desktop (please complete the following information):**; - OS: Windows 10 64bit; - QuPath Version 0.2.0-m12",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/494:416,monitor,monitor,416,https://qupath.github.io,https://github.com/qupath/qupath/issues/494,1,['monitor'],['monitor']
Energy Efficiency,"## Bug report. **Describe the bug**; I compiled QuPath with Stardist as described in the docs. The detection of nuclei on the blue channel works fine (although the cell expansion value is ignored). The Measurements are however not correct! I get only values for the red channel of a RGB image (see attachment) and they are incorrect (negative values, see screenshot). There are no values for the green channel. **To Reproduce**; The script (I have it in a subfolder of the QuPath executable 'ScriptStardist', it finds the model then automatically.; [ScriptStardist.zip](https://github.com/qupath/qupath/files/6183384/ScriptStardist.zip). The image (ImageJ Tiff file); [CTRL-01.zip](https://github.com/qupath/qupath/files/6183389/CTRL-01.zip). **Expected behavior**; Measurements like the 'Cell Detection' command. **Screenshots**; Screenshot of the negative values.; ![ss-negative-values](https://user-images.githubusercontent.com/46439648/112015678-5244e200-8b2c-11eb-9654-41fcd2c50c4f.png). **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version 0.2.3 and 0.3.0 Snapshot 22/3/2021",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/686:396,green,green,396,https://qupath.github.io,https://github.com/qupath/qupath/issues/686,1,['green'],['green']
Energy Efficiency,"## Bug report. **Describe the bug**; If a block comment contains more than a certain number of characters, QuPath throws an error (see below) when I open that script (no other scripts were open before). It is then not possible to run the script because all `Run` buttons are disabled. If I try to change the language to `None` and then to `Groovy`, it throws again the same error and the `Run` buttons are still disabled. If I open another script, then it enables the Run buttons for both scripts (but the issue is still there if we open again the first script). **Temporary Fix**; One fix is to reduce the number of characters in the block comment and then, no more error is thrown. For example, splitting a large block comment to smaller ones. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a script; 2. Add the following block comment ; ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, ; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; ; * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ; * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ; * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; ```; 3. Save the script.; 5. Close the script (Ctrl+w); 6. Open the same script ==> no error; 7. Add the following block comment. ```; /**; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, ; * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176:596,reduce,reduce,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176,1,['reduce'],['reduce']
Energy Efficiency,"## Bug report. **Describe the bug**; Pressing `Enter` with a TMA core selected is an efficient way to input a quick text note. However, the text input dialog is blank - regardless of whether there's a note present or not. **Expected behavior**; If a note has already been set, initialize the input dialog with the text. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.1 (and likely before). **Additional context**; First mentioned at https://forum.image.sc/t/groovy-script-for-tma-running-very-sluggishly-now-in-qupath-0-4-1-any-thoughts-how-to-fix/75746/9",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1206:85,efficient,efficient,85,https://qupath.github.io,https://github.com/qupath/qupath/issues/1206,1,['efficient'],['efficient']
Energy Efficiency,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/distances-between-objects-and-annotations/77933. **To Reproduce**; Steps to reproduce the behavior:; 1. Open an image; 2. Detect and classify cells (e.g. with *Positive cell detection*); 3. Run *Analyse &rarr; Spatial analysis &rarr; Detect centroid distances 2D*; 4. Check the distance for several objects between themselves and objects with the same class. This is *usually* 0, but can be greater than 0. **Expected behavior**; The distance between an object and itself should always be 0. The underlying issue seems to be a rounding error due to the way the calculation is performed:; https://github.com/qupath/qupath/blob/1368912885c1a191beaea32c28d85a3707f657f8/qupath-core/src/main/java/qupath/lib/analysis/DistanceTools.java#L358. This involved converting objects to points, and the geometries will likely have precision models applied. **Desktop (please complete the following information):**; - OS: Likely all; - QuPath Version: 0.4.3 (but no known relevant changes made recently, so probably earlier versions too). **Additional context**; When fixing this, it may also be possible to make the calculation more efficient by checking for object matches in the source and target list.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1249:1186,efficient,efficient,1186,https://qupath.github.io,https://github.com/qupath/qupath/issues/1249,1,['efficient'],['efficient']
Energy Efficiency,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/minor-qol-request-change-from-v0-4-3/79159. This is an unintentional regression, probably reduced when fixing previous bugs related to caret positioning. **To Reproduce**; Steps to reproduce the behavior:; 1. Open QuPath; 2. Drag a Groovy file (ideally a long one) onto the UI to open it. **Expected behavior**; When a file is opened for the first time, the caret is at the first position. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.x",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1258:156,reduce,reduced,156,https://qupath.github.io,https://github.com/qupath/qupath/issues/1258,1,['reduce'],['reduced']
Energy Efficiency,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/subcellular-spot-detection-problem/69403/12. **To Reproduce**; Steps to reproduce the behavior:; 1. Open any RGB image; 2. Set the image type to *Fluorescence*; 3. Try toggling channels with `1`, `2` or `3`; 4. Observe that channels don't toggle as expected; 6. Check the *Brightness/Contrast* dialog to see what's going on. **Expected behavior**; Pressing `1` should toggle red, `2` should toggle green and `3` should toggle blue. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3 (and probably before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006:464,green,green,464,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006,1,['green'],['green']
Energy Efficiency,"## Bug report. **Describe the bug**; The script editor in v0.4.0 can automatically close quotes, to help ensure strings are valid. This is mostly helpful, but can sometimes be inconvenient if the closing quote is added when it isn't needed. **To Reproduce**; Steps to reproduce the behavior:; 1. Open a script editor and type `forgot to start""`; 2. Move the caret to the start of the text; 3. Type `""` and note that you get `""""forgot to start""`. **Expected behavior**; Reduce the enthusiasm of the smart quotes to make them smarter. One simple strategy that I think should help is to only add a closing quote if the preceding and following characters are either whitespace or the end of the text itself. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1188:469,Reduce,Reduce,469,https://qupath.github.io,https://github.com/qupath/qupath/issues/1188,1,['Reduce'],['Reduce']
Energy Efficiency,"## Bug report. **Describe the bug**; `BioFormatsImageServer` lazily creates a new reader for each thread as required. This is ok if the readers are fast to initialize, but can be a major bottleneck if they are not. This was noticed when working with large CZI images (>30 GB). Initializing a reader took ~3-5s. However, because the method was synchronized and 32 threads were wanting to get pixels for the viewer, many other threads were blocked. This meant that even viewing the image properly was not possible for well over a minute. Once the readers were created, performance was fine. **To Reproduce**; Unfortunately, I'm not aware of any public images images that can be used to test this. It might be evident with any large Axioscan images (I'm not entirely sure). Once the image is open, zoom in and wait for tiles to appear. If experiencing the problem, this will take an unreasonable amount of time. VisualVM indicates that the bottleneck is initializing readers. **Expected behavior**; No major delay in requesting tiles once the image has been opened. **Desktop (please complete the following information):**; - OS: macOS (but likely to be all); - QuPath Version 0.3.0. **Screenshots**; Compare the 'total time' (>100s) with the actual time spent using the CPU (3.6s) for a thread requesting image tiles. ![Screenshot 2021-12-15 at 12 49 12](https://user-images.githubusercontent.com/4690904/146189714-d4197439-8b67-4b79-bf64-f400de9b7b72.png). **Additional context**; A few things could help:; * Reduce the maximum number of tile request threads; * Reduce synchronization when creating readers; * Limit the number of readers Bio-Formats can create, independently of the number of threads making tile requests; * Reduce the calls to `isThisType()` when creating a reader (when the class of the reader can be known)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/865:1508,Reduce,Reduce,1508,https://qupath.github.io,https://github.com/qupath/qupath/issues/865,3,['Reduce'],['Reduce']
Energy Efficiency,"## Bug report; The pan tool has a high initial latency when working with large images with many detections. It takes a few seconds until the image starts to follow the mouse pointer after the initial click.; After overcoming this lag, the panning itself is sufficiently smooth, though.; The phenomenon is not influenced by zoom level or the display status of annotations or detections.; I don't think this is related to hardware ressources, CPU/GPU utilization bareley changes during this - and the computer should be sufficiently powerful. **To Reproduce**; Steps to reproduce the behavior:; Load NDPI (approx. 30x30 MP in size); Draw ROIs (in this case generated from pixel classifications and smoothed); Use positive cell detection, resulting in about 152,000 detected nuclei; Try using the pan tool. **Expected behavior**; More or less immediate pan action. **Desktop (please complete the following information):**; - OS: Windows 10 64-bit. HP Z840 dual Xeon E5-2667v3, 128 GB RAM, Nvidia Quadro K6000; - QuPath Version 0.2.0-m9 (set to use 64 GB of RAM). Thank you for this great piece of software! :-)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440:531,power,powerful,531,https://qupath.github.io,https://github.com/qupath/qupath/issues/440,1,['power'],['powerful']
Energy Efficiency,"## Design issue. **Describe the bug**; `qupath-core` doesn't - and shouldn't have many dependencies. However, it *does* currently have a dependency on OpenCV. This brings in JavaCPP and platform-dependent native libraries, in a way that potentially makes `qupath-core` *much* heavier that it would otherwise be. ## Usage. There are really only two places where OpenCV is used in `qupath-core`:. * [Image resizing](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/awt/common/BufferedImageTools.java#L416); * [Type adaptors for Gson](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/io/OpenCVTypeAdapters.java). ## Required change. I think (hope) type adaptors can be shifted to `qupath-core-processing` without too much trouble.; Although since the change was introduced in https://github.com/qupath/qupath/commit/0f0229fc1a6de6312bf3a2e914e9da79cf1f4bd9 the commit message hints that there was a reason to including it in `qupath-core` that might resurface in the future. I expect that the main effort would go into reimplementing image resizing. Ideally, we'd do this without introducing any new dependency (including ImageJ) to retain full control over the code and not have it subject to change with dependency updates. I expect that will be a very fiddly task, requiring some very good unit tests. ## Additional context. Resizing is performed whenever tiles are requested, e.g. https://github.com/qupath/qupath/blob/48dfb82400fb8289fa57242b08effe1977749a51/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L436-L442. In this case, it is almost always downsampling. We need to support both a 'smooth' and a 'nearest neighbor' implementation, to handle intensity and labeled/binary images at least - although we **might** want to introduce more interpolation options. See also https://github.com/qupath/2022-qupath-hackathon/discussions/2#discussioncomment-2634192. ## Significance. Having OpenCV ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/961:546,adapt,adaptors,546,https://qupath.github.io,https://github.com/qupath/qupath/issues/961,2,['adapt'],['adaptors']
Energy Efficiency,"## Feature request. ### Is your feature request related to a problem? Please describe. It's possible to set colors for instances of a `PathObject` and `PathClass`, but inconvenient and inconsistent. The main reason is that both represent the color using an `Integer`, in packed ARGB form. The thinking was that this would be a) efficient, b) portable, and c) avoid creating *yet another* `Color` class (since this exists for Java AWT, JavaFX, OME...). The main problem is that both classes use different method signatures, and both require the color to be packed into an integer before being set. So we end up with code like this:; ```java; pathObject.setColorRGB(ColorTools.packRGB(255, 0, 0));; pathClass.setColor(ColorTools.packRGB(255, 0, 0));; ```. There are similar getter methods, which return the packed integer (or sometimes null, if the color isn't set). This then may need to be unpacked, e.g.; ```java; var rgb = pathObject.getColorRGB();; int red = ColorTools.red(rgb);; int green = ColorTools.green(rgb);; int blue = ColorTools.blue(rgb);; ```. A secondary problem is that it isn't clear whether alpha will be used or not. This is possible:; ```java; pathObject.setColorRGB(ColorTools.packARGB(127, 255, 0, 0));; pathClass.setColor(ColorTools.packARGB(127, 255, 0, 0));; ```; but it's not obvious whether the alpha will do anything. ### Describe the solution you'd like. It would be preferable to have something standardized, including the option to provide separate RGB values, e.g.; ```java; pathObject.setColor(red, green, blue); pathClass.setColor(red, green, blue); ```. This could be implemented quickly, deprecating the `PathObject.setColorRGB(Integer)` method. The main decision is whether to take 8-bit RGB values or floats/doubles as input. For now, I propose keeping `public Integer getColor()` - although `getRed()`, `getGreen()` and `getBlue()` methods could potentially be added. ### Describe alternatives you've considered. One way to enforce standardization would be thro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1086:328,efficient,efficient,328,https://qupath.github.io,https://github.com/qupath/qupath/issues/1086,2,"['efficient', 'green']","['efficient', 'green']"
Energy Efficiency,"## Feature request. ### Is your feature request related to a problem? Please describe. Most measurements for a `PathObject` are managed in a `MeasurementList`. This effectively maps between `String` keys and primitive `double` values, and can work in a reasonably efficient way by:. * Supporting both `double[]` as `float[]` as backing arrays; * Sharing the list of `String` measurement names between many objects; * Storing a map between `String` names and array indexes. The last two optimisations only come into effect whenever `MeasurementList.close()` is called, but all together can help considerably when working with millions of objects. A less efficient alternative implementation can be used with smaller numbers of objects. However, there are a few problems:. * Originally envisaged as a list, it's possible to have duplicates... but then what happens when requesting a measurement by name is undefined; * To overcome the above issue, it's advised to use `putMeasurement(String, double)` rather than `addMeasurement(String, double)`... but this isn't enforced; * Consumers need to remember to close the list at the end... but can often forget; * The lists now implement `AutoCloseable` so can be used with try-with-resources... but it looks weird; * If a measurement is unavailable, `Double.NaN` is returned... but is indistinguishable from that being the *correct* value; * It's a whole non-standard API to learn when scripting. It's all pretty cumbersome, as can be seen in a Groovy script:. ```groovy; def allCells = getCellObjects(). // Get an individual measurement for the first cell; def cell = allCells[0]; println cell.getMeasurementList().getMeasurementValue('Nucleus: Area'). // Get all the measurement names and values; println cell.getMeasurementList().getMeasurementNames(); def values = []; for (int i = 0; i < cell.getMeasurementList().size(); i++) {; values << cell.getMeasurementList().getMeasurementValue(i); }; println values; ```. ### Describe the solution you'd like. ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1085:264,efficient,efficient,264,https://qupath.github.io,https://github.com/qupath/qupath/issues/1085,2,['efficient'],['efficient']
Energy Efficiency,"## Feature request. ### Is your feature request related to a problem? Please describe.; QuPath was designed to have one main window. If there are to be multiple viewers, these are embedded in a grid. The original thinking was that we couldn't handle too many images simultaneously, since they tend to be big. But QuPath is now used for lots of different things, including with images of different sizes... and often with multiple monitors. The 'single window' could become very limiting. . ### Describe the solution you'd like; Not so much the 'solution I'd like' as the one I'm proposing: adding support for detaching viewers. Here's a **very rough** example of it in action, hacked together with minimal code changes:. <img width=""1188"" alt=""Detachable viewer demo"" src=""https://github.com/qupath/qupath/assets/4690904/933e5528-4bf9-461b-855d-04eeb6fe8ad2"">. ### Additional context; This isn't so much a feature request as an invitation for feedback. My feeling is that it's worth exploring, but I'm not sure if it helps or just creates confusion. My main questions are:; * Is this a feature anyone really wants?; * Is it likely to be more helpful or confusing for new users?; * If implemented, should it work by; * Detaching one viewer (and leaving the rest of the 'viewer grid' intact), or; * Breaking up the UI entirely, so that there is no longer a grid and instead we have separate windows (including for the toolbar and analysis pane, more like ImageJ); * Is there a need to have the *same* image open in multiple viewers?; * Note that this wouldn't permit having different objects or display modes (e.g. different kinds of overlays), but rather it would just allow different image regions to be visualized at the same time. That is already kind of possible with *View &rarr; Show mini viewer* - except the mini viewer doesn't support all the kinds of interaction that are possible with a full viewer.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1317:430,monitor,monitors,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/1317,1,['monitor'],['monitors']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; At the moment, SVG exports [1] behave differently from their bitmap counterparts [2], in the sense that the bitmap exports include whichever overlays are currently displayed, but the SVG exports only include the original image. [1] File -> Export images -> Rendered SVG and File -> Export snapshot -> Current viewer content (SVG); [2] File -> Export images -> Rendered RGB (with overlays), File -> Export snapshot -> Main window content and File -> Export snapshot -> Current viewer content. **Describe the solution you'd like**; I would *both* types of exports to include overlays if the user so wishes. See the discussion on https://forum.image.sc/t/export-snapshot-current-view-content-svg-does-not-include-the-density-map/82740. **Describe alternatives you've considered**; I have a two-step workaround in the meantime:; 1. Export images -> Rendered SVG (Linked raster); 2. Hide the annotations and detections, then Export images -> Rendered RGB to overwrite the linked raster image, using PNG and the same downsample as used in step 1. **Additional context**; SVG is a great format. The files can be edited in [Inkscape](https://inkscape.org/) and also be used as-is in (recent versions of) Microsoft Office Word and Powerpoint. And they look great when printed, which is why I think it's important for QuPath to have the best possible SVG export functions.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272:1310,Power,Powerpoint,1310,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272,1,['Power'],['Powerpoint']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; Currently setting stain vectors or adjusting pre-set ones (like H&E) requires scripting and being run for each image open (or project) to ensure they are all the same. This can get complicated particularly when dealing with multiple different brightfield (other) stain types in one project.; Additionally the ability to share these stain vectors would be useful, other than sharing the script. . **Describe the solution you'd like**; This request is for a way to create these custom stain vectors and retain them within QuPath either as a setting or within the project. ; Additionally, being able to share them with others and allow for them to be imported into QuPath via drag and drop would be very beneficial. . **Describe alternatives you've considered**; Scripting is currently the best option for doing this, but this makes it less accessible to users that are not familiar with scripting. Additionally, the scripting method would require additional processing steps that could be reduced. . **Additional context**; May of missed key design points from discussion, feel free to edit/add!; Spoke about the same sharing functionality being used for fluorescent images but would only really be useful for those with many channels (which also currently uses scripting to set).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1247:1075,reduce,reduced,1075,https://qupath.github.io,https://github.com/qupath/qupath/issues/1247,1,['reduce'],['reduced']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; Currently, the only way to know when Run for project completes is by actively watching the progress bar. For analyses that take many hours to complete, this is not feasible as most users would be working on something else, leaving QuPath in the background. Knowing when the analysis is complete will be helpful to be time-efficient with work. **Describe the solution you'd like**; A ""Notify when complete"" checkbox that when checked, will result in an audible notification and maybe cause QuPath to flash in the taskbar after ""Run for project"" is complete.; ![image](https://user-images.githubusercontent.com/57093006/181712393-8dfdd384-43a7-4645-b4ee-e7732005ec18.png). **Describe alternatives you've considered**; Currently, adding the following lines to the end of the script will result in a double ping, which is decently audible at least on Windows. One issue with this is that the last image needs to be explicitly specified, which may vary as the user works on the project.; ```; def name = GeneralTools.getNameWithoutExtension(getCurrentImageData().getServer().getMetadata().getName()); if(name.contains(""last_imageName"")){; java.awt.Toolkit.defaultToolkit.beep(); Thread.sleep(1000); java.awt.Toolkit.defaultToolkit.beep(); }; ```. **Additional context**; @petebankhead has mentioned that the sound is underwhelming on Mac OS, but I think that `beep()` uses the default notification sound from the OS. If necessary, QuPath could potentially come with a small custom sound file for notifications to be consistent across different OS.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1029:410,efficient,efficient,410,https://qupath.github.io,https://github.com/qupath/qupath/issues/1029,1,['efficient'],['efficient']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; QuPath is commonly used for annotation, and the annotations need to be shared with others. My approach is generally to zip up a project folder. The trouble with this is that it's necessary to then:; * Send the zipped project; * Send the original images; * Unzip the project; * Open the unzipped project in QuPath; * Match the URIs to the new image locations. **Describe the solution you'd like**; It would be nice to have a command to *Export project for sharing* that can do the zipping itself. This could include options:; * Include thumbnails; * Since thumbnails can be regenerated automatically by QuPath, removing them can reduce the zipped file size; * Include original images; * This would involve copying the image files directly into a subdirectory of the project, and updating the URIs to make the project fully self-contained. **Describe alternatives you've considered**; The main alternative is to stick with the current method: document the zipping/unzipping process, but don't add anything to QuPath to help. **Additional context**; Some considerations:; * If there are many images, or they are huge, then including them in the zip file might become problematic; * We need to take care with zipping/unzipping (e.g. ensuring we don't allow names with `..` for security reasons, or use an established and secure library implementation); * This approach only really works with the current, filesystem-based project approach. Any command might not be relevant if projects are stored some other way.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1248:716,reduce,reduce,716,https://qupath.github.io,https://github.com/qupath/qupath/issues/1248,1,['reduce'],['reduce']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; QuPath's built-in cell detection makes measurements at the same time and at the same resolution as detection. This isn't sustainable as we support a wider range of cell detection methods. That's why the [`ObjectMeasurements`](https://github.com/qupath/qupath/blob/a5c02a0d8e8e2a010824a2a0dc0fb0c45602fd76/qupath-core-processing/src/main/java/qupath/lib/analysis/features/ObjectMeasurements.java#L74) class exists. This is used internally [by the QuPath StarDist extension](https://github.com/qupath/qupath-extension-stardist/blob/c9424b488a356a3af26ef7bc58eb9bce2592a108/src/main/java/qupath/ext/stardist/StarDist2D.java#L1014) - but it still has the basic form of 'make measurements at the same time as detection'. I think we need to decouple these two things, or at least ensure that it's possible to add cell measurements *after* detection. **Describe the solution you'd like**; A new, scriptable command to add cell measurements. **Describe alternatives you've considered**; Build upon the existing *'Add intensity features'* command. I can think of a few relevant considerations:. * We want shape measurements as well, not just intensity measurements (although perhaps the command could be generalized to include shapes too); * *'Add intensity features'* can simultaneously give too many and too few measurements. We probably don't need the Haralick features generally, but do need the possibility of membrane measurements (possibly with control over thickness?).; * *'Add intensity features'* tries to handle the tricky problem of arbitrarily large ROIs, by tiling. It is easier to code more imaginative feature measurements if we can assume that all pixels and binary mask can fit easily into RAM.; * *'Add intensity features'* does *not* handle the different cell compartments currently (i.e. nucleus, cytoplasm, cell, membrane). **Additional context**; In writing this, it's not clear to me if we should ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1551:209,sustainab,sustainable,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/1551,1,['sustainab'],['sustainable']
Energy Efficiency,"## Feature request. **Is your feature request related to a problem? Please describe.**; When training a pixel classifier, various settings can be customized (including features). These automatically return to their defaults when the dialog is closed. See original discussion at https://forum.image.sc/t/change-default-settings-on-pixel-classifier/70371. **Describe the solution you'd like**; A more efficient way to set these values than through clicking in the UI. **Additional context**; This could be through a saved parameter file, or recovering the settings from an existing saved classifier (reloading a saved classifier is also a frequent request). Neither is entirely straightforward, given that the available settings change based upon image properties and not all settings are currently serialised in the JSON for a classifier. Potentially, this request could be relevant for object classifiers and density maps.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1055:399,efficient,efficient,399,https://qupath.github.io,https://github.com/qupath/qupath/issues/1055,1,['efficient'],['efficient']
Energy Efficiency,"## Version 0.2.0-m6; This is a *milestone* (i.e. still in development) version made available to try out new features early.; ### Important bug fix!; * Positive per mm^2 measurement fixed; this could be wrong in v0.2.0-m5 (other versions not affected); ### Important behavior change!; * Parent-child relationships are no longer automatically calculated between objects!; For an explanation of the reasons behind this change & what it means, see the blog.; ### Other changes:; * Pixel classifier shows live area measurements with 'Classification' output (in m5 this worked only with 'Probability' output); * New 'Detection centroid distances 2D' command (e.g. to find distances to cells with different classifications); * Smoother drawing, faster viewer repainting; * Point annotation improvements; * Faster repainting; * Converting detections to points now uses nucleus ROIs when applied to cells, no longer requires deleting the detections; * More shortcuts, e.g. Ctrl+Alt+A to select annotations, Ctrl+Alt+D to select detections; * GeometryROI now replaces AreaROI and AWTAreaROI for improved performance and consistency; * Fixed bug when converting ROIs with nested holes to JTS Geometries; * Undo/Redo and tile cache size information added to Memory Monitor; * Added support for ImageWriters to write to output streams; * Updated build script to Gradle 6.0; * Use bioformats_package.jar rather than separate dependences (easier to upgrade/downgrade if needed)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/375:1254,Monitor,Monitor,1254,https://qupath.github.io,https://github.com/qupath/qupath/pull/375,1,['Monitor'],['Monitor']
Energy Efficiency,"* Add fill/unfill annotations toolbar button; * Reduce update check fail to a warning (rather than an error); * Show a more informative message is (probably) unable to connect to the internet; * Add 'Training data' title to object/pixel classifier training pie charts; * Remove confusion about whether the pie charts refer to the training or predictions; * Support log histograms with 'single measurement classifier' and 'set cell intensity classification' commands; * Fix the extensions directory path (use 'extensions' subdirectory, not the user path)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1391:48,Reduce,Reduce,48,https://qupath.github.io,https://github.com/qupath/qupath/pull/1391,1,['Reduce'],['Reduce']
Energy Efficiency,"* Fix https://github.com/qupath/qupath/issues/1263; * Fix https://github.com/qupath/qupath/issues/1309 (by using AWT instead of JavaFX for screenshot); * Address https://github.com/qupath/qupath/issues/1246. Reduced duplication in the code used to display slide labels. This is now rewritten, and adds an option to specify the saturation percentage for non-8-bit images. This can help with making label content visible in awkward cases (e.g. many .czi images).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1328:208,Reduce,Reduced,208,https://qupath.github.io,https://github.com/qupath/qupath/pull/1328,1,['Reduce'],['Reduced']
Energy Efficiency,"* Further reduce memory use with ImageOps / ImageDataOp; * Fix multithreading ImageOps color deconvolution bug; * Allow the number of live prediction threads to be adjusted with pixel classifiers; * Reduce the length of the server path used with pixel classifiers (could cause performance issues for some classifiers, e.g. Trees, with long JSON representations); * Add extra checks in DelaunayTools to reduce risk of trying to access a coordinate that isn't there",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/808:10,reduce,reduce,10,https://qupath.github.io,https://github.com/qupath/qupath/pull/808,3,"['Reduce', 'reduce']","['Reduce', 'reduce']"
Energy Efficiency,* Include PyTorch/TensorFlow DJL engines by default in builds; * Fix out-of-date javadoc links; * Update changelog; * Reduce caching of `ServiceLoader`; * Improve logic when trying to create a `DnnModel` in `BioimageIoTools`; * Search for weights that are more likely to be supported first,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1165:118,Reduce,Reduce,118,https://qupath.github.io,https://github.com/qupath/qupath/pull/1165,1,['Reduce'],['Reduce']
Energy Efficiency,"* Make more PathObjectClassifier-related classes as deprecated.; * Reduce the use of Java serialization, and introduce serialization filters",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1014:67,Reduce,Reduce,67,https://qupath.github.io,https://github.com/qupath/qupath/pull/1014,1,['Reduce'],['Reduce']
Energy Efficiency,"* Use 'classification' rather then 'class' (to improve consistency, and reduce confusion with Java classes); * Add a new 'Object type' measurement to tables, giving a readable string ('Annotation', 'Detection', 'Cell' etc.); * No longer show a default 'Name' if no name has been set; * i.e. don't show 'PathAnnotationObject' or the classification as a placeholder, since this causes confusion for people writing scripts and requesting the name; * Renaming 'counting dialog' to 'points dialog'. Two bug fixes:; * Restore the classification colors in icons for points ROIs (regression in v0.5.0-rc1); * Fix bug that causes the pixel classifier training dialog to increase its width when some combo boxes were clicked on",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1392:72,reduce,reduce,72,https://qupath.github.io,https://github.com/qupath/qupath/pull/1392,1,['reduce'],['reduce']
Energy Efficiency,"**Describe the bug**; I erroneously set requestedPixelSize = 0 instead of downsample = 0 in my exporting script that I adapted from [the docs](https://qupath.readthedocs.io/en/0.2/docs/advanced/exporting_annotations.html), the script didn't error but instead, after about a day running and my RAM filling up to about 20GB I realized my mistake. I suspect requestedPixelSize = 0 causes an infinite loop somewhere or the divide by zero on lines 378 and 379 of TileExporter are handled strangely. **To Reproduce**; In the script from [the docs](https://qupath.readthedocs.io/en/0.2/docs/advanced/exporting_annotations.html) set equestedPixelSize = 0 . **Expected behavior**; It would be nice to have some input validation or a way to raise an exception for this use case. . **Desktop (please complete the following information):**; OS: Windows 7; QuPath Version 0.2.3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/777:119,adapt,adapted,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/777,1,['adapt'],['adapted']
Energy Efficiency,"**Describe the bug**; On QuPath 0.4.1, when I try to create points, at the moment I right click to set a Class, the bug appears, and a log window indicates:. `INFO: QuPath build: Version: 0.4.1; Build time: 2023-01-07, 12:00; INFO: Setting tile cache size to 3972.00 MB (25.0% max memory); INFO: Refreshing extensions in Path/to/QuPath/extensions/extensions; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-stardist-0.4.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-cellpose-0.6.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-imagecombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:679,adapt,adapters,679,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['adapt'],['adapters']
Energy Efficiency,"**Describe the bug**; While zooming into a pyramidal ome.tiff image, the resolution does not change and the image remains pixelated. This may be due to the number of cached tiles not increasing (tiles not being cached). This bug only exists in v0.3.2. . For v0.3.0, the image resolution loads properly when zooming in. **To Reproduce**; 1. Open an ome.tiff file with QuPath v.0.3.2; 2. Under the ""View"" option, choose ""Show memory monitor""; 3. Zoom into your image while monitoring the number beside ""num cached files"" in the memory monitor; (For a comparison, repeat steps 1 to 3 with QuPath v0.3.0). **Expected behavior**; For v0.3.2, the value for num cached files remains the same.; For v0.3.0, the value for num cached files increases. **Desktop:**; - OS: 64-bit Windows 10",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/904:431,monitor,monitor,431,https://qupath.github.io,https://github.com/qupath/qupath/issues/904,3,['monitor'],"['monitor', 'monitoring']"
Energy Efficiency,- Reduce instances of TopologyException (currently in StarDist) by fixing geometries produced by estimateCellBoundary if needed.; - Improve detectionsToCells to avoid losing all cells if one throws an exception.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/992:2,Reduce,Reduce,2,https://qupath.github.io,https://github.com/qupath/qupath/pull/992,1,['Reduce'],['Reduce']
Energy Efficiency,"- Update training extension (rename tour, remove from toolbar); - Ensure ImageJ sample macros appear before Groovy scripts; - Reduce max image size for ImageJ script runner; - Adjust default options in script runner; - Add a Groovy script example; - Link docs to the 'latest' (not v0.5)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1687:126,Reduce,Reduce,126,https://qupath.github.io,https://github.com/qupath/qupath/pull/1687,1,['Reduce'],['Reduce']
Energy Efficiency,". Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; 09:32:08.264 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; TIFFFetchNormalTag: Warning, ASCII value for tag ""JPEGTables"" does not end in null byte. Forcing it to be null.; java.io.IOException: Premature end of JPEG file; 	at org.openslide.OpenSlide.checkError(OpenSlide.java:178); 	at org.openslide.OpenSlide.paintRegionARGB(OpenSlide.java:245); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:203); 	at qupath.lib.images.servers.OpenslideImageServer.readBufferedImage(OpenslideImageServer.java:1); 	at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); 	at qupath.lib.images.servers.OpenslideImageServer.<init>(OpenslideImageServer.java:147); 	at qupath.lib.images.servers.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:51); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:115); 	at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2228); 	at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152); 	at qupath.lib.gui.commands.OpenCommand.run(O",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/65:2097,power,power,2097,https://qupath.github.io,https://github.com/qupath/qupath/issues/65,1,['power'],['power']
Energy Efficiency,".StarDist2D.lambda$detectObjects$1(Lqupath/lib/images/ImageData;Ljava/util/Collection;Lorg/locationtech/jts/geom/Geometry;Lqupath/lib/images/servers/TileRequest;)Ljava/util/stream/Stream; (36 bytes) @ 0x00000295ed75f334 [0x00000295ed75f160+0x00000000000001d4]; J 15743 c1 qupath.tensorflow.stardist.StarDist2D$$Lambda$2526.apply(Ljava/lang/Object;)Ljava/lang/Object; (24 bytes) @ 0x00000295ee0909ac [0x00000295ee090840+0x000000000000016c]; J 15156 c1 java.util.stream.ReferencePipeline$7$1.accept(Ljava/lang/Object;)V java.base@14.0.1 (127 bytes) @ 0x00000295edec35a4 [0x00000295edec34a0+0x0000000000000104]; J 15667 c2 java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Ljava/util/function/Consumer;)V java.base@14.0.1 (127 bytes) @ 0x00000295f51c2d44 [0x00000295f51c2c00+0x0000000000000144]; J 11772 c2 java.util.stream.AbstractPipeline.wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink; java.base@14.0.1 (18 bytes) @ 0x00000295f4ba1aa8 [0x00000295f4ba19a0+0x0000000000000108]; j java.util.stream.ReduceOps$ReduceTask.doLeaf()Ljava/util/stream/ReduceOps$AccumulatingSink;+15 java.base@14.0.1; j java.util.stream.ReduceOps$ReduceTask.doLeaf()Ljava/lang/Object;+1 java.base@14.0.1; j java.util.stream.AbstractTask.compute()V+129 java.base@14.0.1; j java.util.concurrent.CountedCompleter.exec()Z+1 java.base@14.0.1; j java.util.concurrent.ForkJoinTask.doExec()I+10 java.base@14.0.1; j java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)V+11 java.base@14.0.1; j java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Z+185 java.base@14.0.1; j java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+25 java.base@14.0.1; j java.util.concurrent.ForkJoinWorkerThread.run()V+24 java.base@14.0.1; v ~StubRoutines::call_stub. siginfo: EXCEPTION_ACCESS_VIOLATION (0xc0000005), reading address 0xffffffffffffffff",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481:5521,Reduce,ReduceOps,5521,https://qupath.github.io,https://github.com/qupath/qupath/issues/481,5,['Reduce'],"['ReduceOps', 'ReduceTask']"
Energy Efficiency,".github.io for a new release that might already have fixed the issue; * [X] I've checked the [Changelog](https://github.com/qupath/qupath/blob/master/CHANGELOG.md) to see if the bug has already been fixed in the next release; * [X] I've checked for existing GitHub issues describing the same problem. ## Bug report. **Describe the bug**; Unable to turn off Input Display. Selecting it a second time adds a second version to the screen. Both versions show keypresses. Selecting again adds a third one...and so on. **To Reproduce**; Turn on Input Display (View > Show Input Display); Notice it shows in lower left of screen.; Try to turn it off by going back to View > Show Input Display. Note: There is no checkmark showing that it is already active.; Selecting it again adds another one to the screen.; Each additional Input Display can be moved from the lower left corner, and all will show the last key pressed (as long as QuPath was the active application). **Expected behavior**; The View menu should show a checkmark when the Input Display has been turned on.; Once the Input Display is active, selecting ""Show Input Display"" will turn off the Input Display and clear the checkmark. **Screenshots**; ![image](https://user-images.githubusercontent.com/27331078/128438550-e734058a-d040-403f-9f5c-507419f24822.png). I realize these are created as ""new"" QuPath windows which can be closed from the task bar. However this fix still seems useful, as the Input Display windows do not have a close box on them. It took me quite awhile to understand how to close them. Note that while other windows such as the Memory Monitor act the same way, they have standard title bars with a close box, so it is obvious they can be moved and closed. It's the special format of the Input Display that confused me. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version 0.3.0 SNAPSHOT. Also verified in 0.2.3. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/799:2159,Monitor,Monitor,2159,https://qupath.github.io,https://github.com/qupath/qupath/issues/799,1,['Monitor'],['Monitor']
Energy Efficiency,"4: error: (-217:Gpu API call) the provided PTX was compiled with an unsupported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.AbstractTask.compute(Unknown Source); java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source). ```. **Expected behavior**; The script should run without any error, yielding cell detections within the annotation. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0, built from source on 2022-12-07; - StarDist Extension Version: 0.4.0 (reproducible with 0.3.2 as well). **Additional context**; The changelog of 0.4.0 points to two separate issue",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:2922,Reduce,ReduceOps,2922,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,2,['Reduce'],"['ReduceOps', 'ReduceTask']"
Energy Efficiency,"::mixChannels'`. OpenCV's mixChannels: https://docs.opencv.org/3.4/d2/de8/group__core__array.html#ga51d768c270a1cdd3497255017c4504be. For now, I've been reducing the number of channels passed, which gives me a training accuracy of ~88%. But it would be great to train on all available data, and see what the variable importance is of each feature and channel. **To Reproduce**; Steps to reproduce the behavior:; 1. Create a project with ~143 IMC images; 2. Annotate structures within ~38 images with 5 different classifications of annotations; 3. Open a non-annotated image; 4. Attempt to train a pixel classifier using all channels, scales, and features, loading training from other annotated images in the project.; 5. Click ""Live Preview"", note the error at the end of the post. **Expected behavior**; A pixel classifier should be trained, and a preview should be applied to the currently loaded image. **Desktop (please complete the following information):**; - OS: Windows 10, 32-thread processor, 127/128 Gb RAM allocated for QuPath, ~500 Gb SSD storage for tile cache; - QuPath Version 0.3.2. **Additional context**; Error log:; ```; 12:10:44.040 [JavaFX Application Thread] [INFO ] q.p.g.c.ml.PixelClassifierPane - Creating training data from 38 images; 12:10:44.953 [JavaFX Application Thread] [ERROR] q.p.g.c.ml.PixelClassifierTraining - Error requesting features for ImageOp server: ImageData: Other, xxxx___ROI8_ROI_008.ome.tiff - ROI8_ROI_008.ome {""colorTransforms"":[{""channelName"":""Pr(141)_141-SMA""},{""channelName"":""Nd(142)_142Nd-CD19""},{""channelName"":""Nd(143)_143Nd-Vimentin""},{""channelName"":""Nd(144)_144Nd-cd14""},{""channelName"":""Nd(146)_146NdCD16""},{""channelName"":""Nd(148)_148-Pan-Ker""},{""channelName"":""Sm(149)_149Sm-CD11b""},{""channelName"":""Sm(152)_152Sm-CD45""},{""channelName"":""Sm(154)_154Sm-CD11c""},{""channelName"":""Gd(155)_155Gd-FoxP3""},{""channelName"":""Gd(156)_156Gd-CD4""},{""channelName"":""Gd(158)_158Gd-E_Cadherin""},{""channelName"":""Tb(159)_159Tb-CD68""},{""channelName"":""Gd(160)_160Gd-",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947:1888,allocate,allocated,1888,https://qupath.github.io,https://github.com/qupath/qupath/issues/947,1,['allocate'],['allocated']
Energy Efficiency,> @petebankhead is there any way to work around this so that I can use saved training points on the same image that they were created in. You could try adapting the script linked to above to merge the maps. Note that you'll need to handle duplicate keys. Or try importing the training points to the same image instead. > It is my understanding and experience that these large project are much slower than smaller ones and frequently crash. This could be because the way your images are converted as described in https://github.com/qupath/qupath/issues/356 is very much _not_ the right way for QuPath.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/360#issuecomment-530547422:152,adapt,adapting,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/360#issuecomment-530547422,1,['adapt'],['adapting']
Energy Efficiency,"> And as in @biovoxxel's video (thanks for the resource!), our users sometimes struggle with the ""DPI/PPI"" calculations. If this was a set parameter in preferences (e.g. 300PPI by default), then you could write next to downsample what would be the maximum figure size for that PPI (e.g. downsample 2, 300PPI -> up to 1200cm x 800cm figure).; > ; > The user would then be able to choose an appropriate downsample for their figure that's say, up to 20cm wide at the requested PPI. Side note:; I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. Boils down to: Less need for thinking and calculating with a better result image!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185:523,adapt,adapting,523,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604299185,2,['adapt'],"['adapt', 'adapting']"
Energy Efficiency,"> I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. I agree, this feels a bit aggressive to me. If the existing copy may not be atomic, I'd rather try to implement an atomic version than to switch to a ""definitely not atomic"" version. > If atomicity of the operation is what worries you, i could implement a method that does it safely, very similarly to what you do with .qpproj files. This sounds good to me, it's important for obvious reasons that user data operations are done as safely as possible.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126:259,reduce,reduced,259,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1908172126,1,['reduce'],['reduced']
Energy Efficiency,"> When importing images to a QuPath project, there is a space to input arguments. Inserting --no-crop there will avoid using the OpenSlide bounds. Thanks, very helpful. > Potentially all objects would need to store that info, or else they would need to be export as a FeatureCollection with an additional custom property. The second sounds preferably but would remain very QuPath-specific. Already `properties` values are very QuPath specific (`isEllipse`...), so I don't see much of a problem here. > As it currently stands, I think QuPath is more internally consistent by cropping - and this reduces rather than increases the dependency on OpenSlide, by making its use interchangeable with Bio-Formats. If there are cases where QuPath crops* and Bio-Formats or other popular libraries don't, then we might need to look at it again, but I don't know of any. I did not know about the Bio-Formats approach. Since DICOM is slowly opening up to the open-source WSI world, I think the problem will arise sooner or later. For now, for performance reasons, we go with TIFF files that do not have this metadata stored, and all software (including quPath) fails to read cropped data, thus having inconsistencies everywhere. Thanks for the insight.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630799401:594,reduce,reduces,594,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630799401,1,['reduce'],['reduces']
Energy Efficiency,"> is there anything conventional about where the project/images are stored?. The project is stored on the C drive, same physical SSD as the OS. The images are stored on the E drive, a separate 2TB SSD. Both have at least 300Gb of free space. The update check is printed in the log and occurs prior to loading any project, so I don't suspect it's affecting project loading. Will check out VisualVM and see if I can use it to monitor the initial project creation step.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212:424,monitor,monitor,424,https://qupath.github.io,https://github.com/qupath/qupath/issues/1154#issuecomment-1325606212,1,['monitor'],['monitor']
Energy Efficiency,"> was running a script but it never finishes. I don't understand exactly what steps you are taking?; * Are you using *Run &rarr; Run* from the script editor, or *Run &rarr; Run for project*? *Run for project* enables you to [run the same script sequentially across multiple images](https://qupath.readthedocs.io/en/stable/docs/scripting/workflows_to_scripts.html#running-a-script-for-multiple-images), but I don't know if you're using this.; * Do you have multiple images open simultaneously in QuPath, or only a single image at a time?. Please see also my question above:. >> I still have 15GB free; > ; > Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with View → Show memory monitor (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). The memory monitor also provides ways to reclaim memory at any time. Although problem **the most important thing** is that I can see in your script (and screenshot) that you are running the cell detection after; ```groovy; createSelectAllObject(true);; ```; This is likely to be **extremely** inefficient, because it will process all the empty white space as well. Processing should be much faster, and memory use much lower, if you restrict cell detection to only the tissue regions.; See [Detecting tissue](https://qupath.readthedocs.io/en/stable/docs/tutorials/thresholding.html) for details; [Pixel classification](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html) is another option.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-939704186:727,monitor,monitor,727,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-939704186,2,['monitor'],['monitor']
Energy Efficiency,"@petebankhead sorry for the late answer, but I finally had time to continue with this project. No I never experienced any errors when I used default parameters. Simpler models with lower resolution greatly reduce the error rate! So I guess you are right, that my classifiers were too complex and that this is part of the problem. I tried my approach on four different computers and I've had the same errors every time, when I started the pixel classifier on full resolution. . I've added one of my JSON files below. [2020-02-21 Pixel Model.zip](https://github.com/qupath/qupath/files/4235332/2020-02-21.Pixel.Model.zip)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394#issuecomment-589578173:206,reduce,reduce,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/394#issuecomment-589578173,1,['reduce'],['reduce']
Energy Efficiency,"@zindy what do you think?. <img width=""389"" alt=""Reduced middle button"" src=""https://user-images.githubusercontent.com/4690904/202754611-57f8fa51-717a-4baa-a819-a5d8f10b0400.png"">. Possibly it's just middle button envy from a Mac user, but I was uncomfortable with giving it equal prominence in the input display (although I think it's a good idea to have it represented).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1147:49,Reduce,Reduced,49,https://qupath.github.io,https://github.com/qupath/qupath/pull/1147,1,['Reduce'],['Reduced']
Energy Efficiency,"A lot of refactoring, with the aims:; * clear out a lot of legacy code; * improve the way commands are added/documented; * reduce the public API (so internal parts can be cleaned up later); * improve the javadocs. Two main noticeable changes:; * The command list now gives help text (currently as a tooltip) for most commands; * It is now possible to install new tools in the toolbar",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/441:123,reduce,reduce,123,https://qupath.github.io,https://github.com/qupath/qupath/pull/441,1,['reduce'],['reduce']
Energy Efficiency,"Actually... the efficient way to do the clustering would perhaps be to add the number to the measurement list, and then include the 'key' in the text field of the image (the root object of the hierarchy... if support for this is added). The memory requires to add an extra number to a measurement list is very small compared to the memory required to add a new metadata string. And the important thing for the key is that it's human-readable (although it could be stored in an script-readable way instead, if needed).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1005#issuecomment-1180666508:16,efficient,efficient,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/1005#issuecomment-1180666508,1,['efficient'],['efficient']
Energy Efficiency,"Adding simple text fields to objects would certainly be nice for cluster/neighborhood/external to QuPath analyses where users may prefer to add non-class labels like ""immune dense cluster"" rather than ""1"" and look up what 1 was. Especially in cases involving many clusters. ; Possibly make it locked behind a default ""Off"" setting. I am guessing it might result in data file sizes getting somewhat out of hand in the cases of millions of cells?. I am less certain that detection objects should have descriptions, but maybe making a ""toAnnotation"" or ""toDetection"" function to make object type swapping simpler when scripting would reduce the need to place complex labels on detections.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1005#issuecomment-1180616120:631,reduce,reduce,631,https://qupath.github.io,https://github.com/qupath/qupath/issues/1005#issuecomment-1180616120,2,['reduce'],['reduce']
Energy Efficiency,"Addition upon further reflection... > However, it does this less efficiently than the old classifiers - and so will require _some_ more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). The difference in required memory is probably more than this suggests: v0.2.0 will store *all* objects for each training image, not only the ones that fall within annotations (and are therefore used for training). Therefore adding up the size of the various .qpdata files is a decent starting point to estimate the amount of memory required. It should certainly be possible to improve the efficiency of this in a future version. In the meantime, it would be possible to duplicate images & data that you will use for training, and remove extraneous objects manually.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-641790413:65,efficient,efficiently,65,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-641790413,1,['efficient'],['efficiently']
Energy Efficiency,"Ah ok, if you're loading from multiple images then I'd expect a lot more lag. I think that was always the case. As far as I can remember, the solution is to use *File &rarr; TMA data... &rarr; Export TMA data* first. That should save the measurements and thumbnail images so they can be read and browsed much more efficiently. Please let me know if that helps.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1083#issuecomment-1289210565:314,efficient,efficiently,314,https://qupath.github.io,https://github.com/qupath/qupath/issues/1083#issuecomment-1289210565,1,['efficient'],['efficiently']
Energy Efficiency,Aims to reduce confusion with options being unavailable (thanks @melvingelbard :) ),MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/925:8,reduce,reduce,8,https://qupath.github.io,https://github.com/qupath/qupath/pull/925,1,['reduce'],['reduce']
Energy Efficiency,"Always scary to reduce synchronization, but have been unable to identify any ill effects. This aims to fix https://github.com/qupath/qupath/issues/1400",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1404:16,reduce,reduce,16,https://qupath.github.io,https://github.com/qupath/qupath/pull/1404,1,['reduce'],['reduce']
Energy Efficiency,And this is the memory monitor and system monitor right before it crashes. ![Skjermbilde (199)](https://user-images.githubusercontent.com/43611111/82342768-524af180-99f2-11ea-9d24-27af3ab82c7f.png),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630879107:23,monitor,monitor,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630879107,2,['monitor'],['monitor']
Energy Efficiency,"Attempt to; 1. improve performance with higher thread counts, and; 2. block the UI for PathPlugin implementations that have a long startup time.; Specifically, this should prevent a user running cell detection interactively in complex, slow-to-tile annotations from modifying the object hierarchy in the time between pressing 'Run' and the modal progress dialog appearing. It also aims to reduce repaint frequency when the detection is running, so that less effort is 'wasted' updating the display.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/785:389,reduce,reduce,389,https://qupath.github.io,https://github.com/qupath/qupath/pull/785,1,['reduce'],['reduce']
Energy Efficiency,"Attempting to swap image servers from BioFormats to ImageJ, or to use Green/Blue/Hue (or even just Green/Blue in an effort to circumvent the Normalized OD channel) were not successful as work arounds.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/365#issuecomment-534219812:70,Green,Green,70,https://qupath.github.io,https://github.com/qupath/qupath/issues/365#issuecomment-534219812,2,['Green'],['Green']
Energy Efficiency,"Changelog:; ------------; * Positive cell detection supports different stainings (including multiplexed images); * Cell detection & the intensity measurement command use channel names rather than numbers; * (Note that channel order is still important when scripting the intensity measurement command); * Big changes to memory management; * Improved tile caching (using Guava) & more control; * Specify the proportion of available memory for tile caching in the preferences; * New options when importing images to a project; * 'Pyramidalize' large, single-resolution images; * Rotate images on import (90 degree increments); * Specify the image reading library (e.g. Bio-Formats, OpenSlide); * Improved resolution of paths to missing or moved images within projects; * New 'Search' button allows recursive search for missing images; * Improved 'Measurement map' behavior and colormap support; * Specify line cap when expanding line annotations; * For why this matters, see https://github.com/qupath/qupath/issues/228#issuecomment-518552859; * 'Send region to ImageJ' improvements; * Only send objects within the field of view as an overlay; * Set lookup tables where possible; * Support arbitrary small regions (can now send a 1x1 pixel image); * New preferences to specify viewer font size (scalebar, location text); * Code formatting is asynchronous (causes small delay, but reduces errors); * Project scripts are back... accessible from the 'Automate' menu; * More bugs fixed and others improvements, including; * Exceptions when generating some viewer/window snapshots; * Resolving relative URIs on Mac/Linux - https://github.com/qupath/qupath/issues/346; * SLIC bug - https://github.com/qupath/qupath/issues/344",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/353:1376,reduce,reduces,1376,https://qupath.github.io,https://github.com/qupath/qupath/pull/353,1,['reduce'],['reduces']
Energy Efficiency,"Dear all, dear Pete, . in the meanwhile it happened quite some times that the color deconvolution display in channel 2, 3 and 4 behaves stranges. I can not exactly say whan it starts and if it once started, the only chance to come back to nomality is to close the whole QuPath Software and restart. ; Even reset of image type and all color vectors does by a script does not help to repair the phenomen. . It starts, when I read out the color vectors directly from a rectangle. . Here an example: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652666-a8449302-f3e1-11e7-83b0-8a4255cd7612.png). These are the color vectores that worked very well before I started to use the function ""Set stain vector from ROI?""; ![grafik](https://user-images.githubusercontent.com/16352785/34652670-c4ba3226-f3e1-11e7-8e4c-f4f2ad859c54.png). Afterwards the channels look like that: . ![grafik](https://user-images.githubusercontent.com/16352785/34652674-d6bb919a-f3e1-11e7-88b5-ad94312ffa60.png); for red; and for brown-yellowish: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652677-e22da1bc-f3e1-11e7-8cdf-5f5f7d30f151.png); and for green: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652684-f75ddeee-f3e1-11e7-97a5-64b56b184c4c.png). Normally the display can become better by manual adujstion in the ""Brightness Contrast"" Settings: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652696-0fa3d620-f3e2-11e7-8182-33f2998c4cb1.png). But once the ""bug"" appeared, that is not possible anymore. . Does somebody have an assumption what might cause this problem?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/131:1154,green,green,1154,https://qupath.github.io,https://github.com/qupath/qupath/issues/131,1,['green'],['green']
Energy Efficiency,"Dear all,. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407029411:544,power,powerful,544,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411,1,['power'],['powerful']
Energy Efficiency,Discussion now at https://forum.image.sc/t/reduce-annotations/24305,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/274#issuecomment-477971675:43,reduce,reduce-annotations,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/274#issuecomment-477971675,1,['reduce'],['reduce-annotations']
Energy Efficiency,"Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageRead",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:9100,allocate,allocate,9100,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['allocate'],['allocate']
Energy Efficiency,"Fair enough, this was also an issue with Definiens back when they were porting their platform from their geospatial analysis predecessor [eCognition](https://geospatial.trimble.com/en/products/software/trimble-ecognition). Much of the backend had hardcoded units of km, which broke a lot when transitioning to a um default. I imagine this would also be an issue if QuPath was applied for the analysis of macroscopic data such as geospatial analysis. > Therefore I wonder if creating a new command that defaults to writing the image as a new file would be preferable anyway. That would be useful, as I've noticed a substantially increased image load time when opening a sparse image consisting of images hosted on a NAS. One idea would be to write an ome.tiff of the sparse image inside the QuPath project on the first instance that the sparse image is loaded, and each subsequent time it's opened, it'll read that image. If the image is removed, it'll be regenerated the next time it's corresponding project entry is opened (i.e. if you want to reduce file size when sending it to a collaborator). Tangentially related, but many scripts will break when running it on a sparse image with an empty region:; ![image](https://github.com/qupath/qupath/assets/52012166/e8f61447-87a5-4e31-8c9d-377c6182ccdf); (0.5.0-rc2)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1407#issuecomment-1783927932:1045,reduce,reduce,1045,https://qupath.github.io,https://github.com/qupath/qupath/issues/1407#issuecomment-1783927932,1,['reduce'],['reduce']
Energy Efficiency,"First thanks for this great application. I stumbled on QuPath several days ago and tried out. It is really useful for editing the boundary of the cells. I like the brush tool a lot. The scripting function is easy to learn and powerful. There are several enhancements that will even make this work better for me. 1. Undo function. Sometimes I deleted an object by mistake, and it will be great if I can get it back.; 2. A select tool by drawing a square like many other editing tools. This will make select multiple objects easy.; 3. A point tool allow using points to mark an object. Some times, we would like just mark the key point of an object. It is possible to use a polygon but a point tool will be nice. Thanks again for this nice piece of work.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75:226,power,powerful,226,https://qupath.github.io,https://github.com/qupath/qupath/issues/75,1,['power'],['powerful']
Energy Efficiency,"Generating the tissue annotation can be a little tricky, for fluorescent images I started sending a downsampled image to ImageJ and using blur+thresholding tools there to generate the initial annotation. It worked well as long as the staining/nuclear density was great enough. For the rest, QuPath should be easy as long as you have a multichannel image. What format are you using?; Depending on the sensitivity you need, QuPath automatically includes your red and green channel mean intensities, so as long as you expand the cytoplasm out far enough, you will get a measure of how much stain is within that space. For the kind of staining I see in your image, I would also recommend the _Analyze->Cell analysis->Subcellular detection_ command, as it can generate a much more exact value for the ""amount of stain above a threshold"" within a given cell, without being diluted by empty space. This command will only work, though, if your image has Pixel width and height included in the metadata. Once you have the data you need on a cell to cell basis, it's as simple as creating a classifier, either with a training set and the classifier command, or creating your own, exact value, classifier. The slower way of doing this is creating your own classifier through the menu system, which Pete shows:; https://github.com/qupath/qupath/wiki/Object-classifications; about half way down the page. Using that setup, you can generate positive cells for each channel and a set of dual positive cells. My preferred method is using a script to classify. The following script is a toned down version of one Pete has posted elsewhere, but it generally gets the job done. Plus you can expand it out as much as you want using the code that is currently there. Want to classify based on two features? Add a ""def myNewFeature"" and a new ""double val2"" line inside the for loop. You can make the if statments as convoluted as you have the time or desire for, and it is much easier than changing things through the menu ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126#issuecomment-351212559:465,green,green,465,https://qupath.github.io,https://github.com/qupath/qupath/issues/126#issuecomment-351212559,2,['green'],['green']
Energy Efficiency,"Great, thanks!. The API documentation would be good... although I'm not entirely sure where/how to arrange to get it hosted. I guess you may already have things set up with IntelliJ as described on the Wiki (if not, you probably should!), and through that there may be a way to generate javadocs... or at least browse the code directly. In moments of desperation when I'm relying only on QuPath's editor, I use Java reflection to get a list of methods. Here, for example, is a script to generate a list of all the methods in QPEx, with a little bit of cleanup to reduce redundancy:. ```groovy; import qupath.lib.scripting.QPEx. def objectMethods = Object.getMethods() as Set. def replacements = [; 'qupath.lib.scripting.QPEx.' : '',; 'qupath.lib.scripting.QP.' : '',; 'public static ' : '',; 'java.lang.': '',; 'java.io.File': 'File',; 'java.util.List': 'List',; ',': ', '; ]. def sb = new StringBuilder('Methods:\n'); for (m in QPEx.getMethods()) {; if (m in objectMethods); continue; def method = m.toString(); for (entry in replacements.entrySet()); method = method.replaceAll(entry.getKey(), entry.getValue()); sb << method; sb << '\n'; }; ; print sb; ```. One day I hope to get this documented better and available on the Wiki (like ImageJ's macro reference)...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/102#issuecomment-332629803:563,reduce,reduce,563,https://qupath.github.io,https://github.com/qupath/qupath/issues/102#issuecomment-332629803,1,['reduce'],['reduce']
Energy Efficiency,"HI,. Thanks for you help!. File format: .tif . This is all the info of the image. I didn’t try with another version. Will do now. . Info under show log:. INFO: Initializing type adapters; INFO: Bio-Formats version 6.7.0; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.7.0) (18 ms); INFO: Loaded extension ImageJ extension (69 ms); INFO: Loaded extension Processing extension (30 ms); INFO: Loaded extension Rich script editor extension (81 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Update check for https://github.com/qupath/qupath; INFO: Starting QuPath with parameters: []; INFO: Setting max Bio-Formats readers to 4; WARN: Temp memoization directory created at /var/folders/_v/1nq60v556l5cbwcdv47wq76w0000gn/T/qupath-memo-4532483650866269942; WARN: If you want to avoid this warning, either specify a memoization directory in the preferences or turn off memoization by setting the time to < 0; INFO: Image data set to ImageData: Not set, 16.tif - Series 0. Again, thank you very much for your incredible help!. Manuel. > El 30 may. 2022, a las 13:52, Pete ***@***.***> escribió:; > ; > ; > Hi, some questions:; > ; > What is the file format?; > Under the 'Image' tab, what is shown at the entry 'Server type'?; > Have you been able to view the whole slide image with any other version of QuPath (e.g. on Windows)?; > Is there any relevant information under View → Show log?; > If you have an mrxs image, this may be relevant: https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917 <https://forum.image.sc/t/potential-fix-for-problem-low-resolution-mrxs-3dhistech-scans/32917>; > If you have an mrxs or vsi image, you might be missing the folder the should exist alongside the main image file (the folder contains the high-resolution data).; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/qupath/qupath/issues/973#issuecomment-1141062643>, or unsubscribe <https://gi",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758:178,adapt,adapters,178,https://qupath.github.io,https://github.com/qupath/qupath/issues/973#issuecomment-1141124758,1,['adapt'],['adapters']
Energy Efficiency,"Handler.handleMouseEvent(GlassViewEventHandler.java:387); 	at com.sun.glass.ui.View.handleMouseEvent(View.java:555); 	at com.sun.glass.ui.View.notifyMouse(View.java:937); 	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method); 	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$450(GtkApplication.java:139); 	at java.lang.Thread.run(Thread.java:745); 02:40:13.846 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: ImageJ server for /home/bl/Documents/IMG_5_11_sq.png; 02:40:14.153 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Fluorescence, IMG_5_11_sq; 02:40:22.852 [JavaFX Application Thread] [INFO ] q.lib.scripting.DefaultScriptEditor - Loading script file /home/bl/ip/QuPath/app/TestJep.groovy; 02:40:28.109 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean red (from Java): 86.81525; 02:40:28.121 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean green (from Java): 72.492275; 02:40:28.124 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Mean blue (from Java): 68.141675; 02:40:28.624 [richscripteditor-1] [INFO ] q.lib.scripting.DefaultScriptEditor - Started JEP: jep.Jep@6bc4b2e2; ImportError: numpy.core.multiarray failed to import; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007f930536d03f, pid=27357, tid=0x00007f932091e700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C [jep.so+0x1a03f] convert_jndarray_pyndarray+0x5bf; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/bl/ip/QuPath/app/hs_err_pid27357.log; #; # If you wo",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262870405:9091,green,green,9091,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262870405,1,['green'],['green']
Energy Efficiency,"Have you set qupath to use the available ram?. Den lør. 20. okt. 2018, 13:09 skrev simonesteffens <notifications@github.com; >:. > Hey Guys,; >; > could an image or annotation be to large for any analysis/computation?; > Because I tried to calculate my images on different computers but all of; > them stopped around 80% of the calculation.; >; > I talked to some IT-experts but they told me that these computer power; > (RAM, Processor unit etc.) should able to handle that.; >; > Anyone had that problem before?; >; > Greetings and thanks a lot.; > Simone; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qupath/qupath/issues/232>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/Af9pL5LW98a8f0kSlN7mcHQxVGhUybwrks5umwRigaJpZM4Xx3eP>; > .; >",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/232#issuecomment-431572591:412,power,power,412,https://qupath.github.io,https://github.com/qupath/qupath/issues/232#issuecomment-431572591,1,['power'],['power']
Energy Efficiency,"Hello,. this is to follow on the Google groups thread about [importing NDPA annotation files into QuPath](https://groups.google.com/forum/#!topic/qupath-users/xhCx_nhbWQQ). I adapted the groovy script written by John Pan to; * work with 0.2.0-m8; * be able to import a few more shapes besides polygons (rectangles, circles, polylines, pins, lines). The script isn't super clean (sorry if I butchered John's code, I'm very new to groovy) but works for us (Hamamatsu NanoZoomer NDPI files / NDPA generated with NDP.view 2.6.8). Once launched, it will look for an NDPA file which has the same name as the NDPI file selected in QuPath and load all the annotations. Then for each annotation:; * *The title* becomes the QuPath annotation's class; * *The details* are transferred to the QuPath annotation's description. Cheers,; Egor. **Attached:** [NDPA.zip](https://github.com/qupath/qupath/files/4165181/NDPA.zip)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/398:175,adapt,adapted,175,https://qupath.github.io,https://github.com/qupath/qupath/issues/398,1,['adapt'],['adapted']
Energy Efficiency,"Hey @biovoxxel . > I would fully avoid scaling and adapting to DPI, since this is not very helpful regarding the figure quality. Problem is, the original images in QuPath are whole slide images, and rather large. [OS-2.ndpi for example](https://cytomine.com/collection/os-2/os-2-ndpi) is 126976 pixels wide. So first thing QuPath asks when doing an SVG export (with the image + overlay as background) is what downsampling factor should be applied to the original image. It's a necessary step, but what is not clear, is which factor would actually match some publication guidelines (for example, 300PPI + width of 170 mm for full page width figure [as defined here](https://cancerandmetabolism.biomedcentral.com/submission-guidelines/preparing-your-manuscript)). > Once you have the SVG you can adapt it to the document size without the need of changing any resolution etc. I agree with you, but the background bitmap embedded in the SVG document only needs to be as big as the physical size it will be printed at. Some reviews also impose a maximum file size for the SVG documents (e.g. < 20MB), so we can't just use a downsample of 1 or 2 and hope for the best. Then yes, anything vectoriel on top of the background image (lines, polygons, text...) just needs to be readable at the printed size and could easily be modified in Inkscape if not (fond size, linewidths...). Maybe I'm missing something (wouldn't be the first time), so let me know how you see this work. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665:51,adapt,adapting,51,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604775665,4,['adapt'],"['adapt', 'adapting']"
Energy Efficiency,"Hey Guys,. could an image or annotation be to large for any analysis/computation? Because I tried to calculate my images on different computers but all of them stopped around 80% of the calculation. I talked to some IT-experts but they told me that these computer power (RAM, Processor unit etc.) should able to handle that. Anyone had that problem before?. Greetings and thanks a lot.; Simone",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/232:264,power,power,264,https://qupath.github.io,https://github.com/qupath/qupath/issues/232,1,['power'],['power']
Energy Efficiency,"Hi @miyakorogers . Although I agree that QuPath should really handle this more elegantly, I'd recommend posting a question on the forum instead: https://forum.image.sc/tag/qupath. There's no bug report template here for me to act on, so this seems more an issue of how QuPath is being used rather than a clear bug with steps to reproduce. The images sound huge, which is probably the real problem. Any solution is likely to require converting to a [pyramidal OME-TIFF](https://qupath.readthedocs.io/en/stable/docs/intro/formats.html) to reduce memory requirements. You can do this using the QuPath [`convert-ome` command on the command line](https://qupath.readthedocs.io/en/stable/docs/advanced/command_line.html) - you may find some tips via https://forum.image.sc/search?q=qupath%20convert-ome or post a new question.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/968#issuecomment-1128920092:537,reduce,reduce,537,https://qupath.github.io,https://github.com/qupath/qupath/issues/968#issuecomment-1128920092,2,['reduce'],['reduce']
Energy Efficiency,Hi @mmfalco Does this forum discussion answer your question? https://forum.image.sc/t/qupath-app-adapts-to-4k-screen/54077. (The forum is better for all questions - GitHub issues should just be for bugs; I'm not sure that this describes a bug that we could replicate and fix),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/833#issuecomment-952868251:97,adapt,adapts-to-,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/833#issuecomment-952868251,1,['adapt'],['adapts-to-']
Energy Efficiency,"Hi @petebankhead , you're absolutely right. I don't think there's any chance of having histograms with different bin widths with the current implementation. I'll change the visibility of the non-efficient method to package-private.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/719#issuecomment-830022022:195,efficient,efficient,195,https://qupath.github.io,https://github.com/qupath/qupath/pull/719#issuecomment-830022022,1,['efficient'],['efficient']
Energy Efficiency,"Hi @saudet thanks very much for checking this. Yes, it is still a problem with JavaCPP 1.5.6 (although less often, with the larger limit). I have just confirmed it following the steps to reproduce above and the [OS-1.ndpi](https://openslide.cs.cmu.edu/download/openslide-testdata/Hamamatsu/OS-1.ndpi) image from openslide.org. ![Screenshot 2022-01-21 at 05 53 09](https://user-images.githubusercontent.com/4690904/150473986-f94358f8-f834-46d6-b502-d80d040829a6.png). ![Screenshot 2022-01-21 at 05 50 03](https://user-images.githubusercontent.com/4690904/150474005-3aae13a4-6bed-44f9-af05-fb0b677abf0b.png). QuPath's *Memory Monitor* above is based upon whatever `Runtime` provides. I followed the exact same steps on a 2013 iMac without any problems, so there does seem to be something different on the M1. Our use may be a little obscure. QuPath's pixel classifier ([docs](https://qupath.readthedocs.io/en/stable/docs/tutorials/pixel_classification.html)) is designed to support interactively training a machine learning classifier. It should support many image types, but is typically used with very large, tiled, multiresolution biomedical images (usually 10-50 GB per 2D image). The pixel classification uses OpenCV's ML module via JavaCPP, but in principle also supports semantic segmentation using a pretrained deep learning model with OpenCV's DNN module or TensorFlow - JavaCPP is central to it all (thanks!). In all cases, each required image tile is read on demand and cached as a Java `BufferedImage`. It is converted to an OpenCV `Mat` temporarily for whatever calculations are required, then the end result converted back to a `BufferedImage`. Therefore quite a lot of fairly large `Mat` objects can be generated for the pixels, features and predictions, but closed after use and using `PointerScope` extensively since QuPath v0.3. This seems to be working very well everywhere except on M1.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470:624,Monitor,Monitor,624,https://qupath.github.io,https://github.com/qupath/qupath/issues/856#issuecomment-1018215470,1,['Monitor'],['Monitor']
Energy Efficiency,"Hi @yau-lim as discussed, I agree this should be added - it would be an easy addition to `RoiTools`, and requiring `CombineOp` is awkward (not least because it's not obvious that it exists...). I suppose the difference with `union` and `intersection` is that they make sense with any number of ROIs (and so take a collection/list as input), but subtraction only really makes sense with two.... or at least that could have been what I was thinking originally. With that in mind, one option is to add; ```java; public static ROI subtract(ROI roi1, ROI roi2) {; return combineROIs(roi1, roi2, CombineOp.SUBTRACT);; }; ```; as a convenience method. But I wonder if it might be even more useful to add; ```java; public static ROI subtract(ROI baseROI, ROI... roisToSubtract) {; // Loop through one or more roisToSubtract, and remove then from baseROI; }; ```; What do you think? Would this output match your expectation for 'subtraction that supports multiple arguments'?. The 'optional array' syntax proposed above would support all the following:; ```groovy; def roiOutput1 = RoiTools.subtract(roi1) // Returns roi1 unchanged; def roiOutput2 = RoiTools.subtract(roi1, roi2) // Returns roi1 with pixels in roi2 removed; def roiOutput3 = RoiTools.subtract(roi1, roi2, roi3, roi4) // Returns roi1 with pixels in the union of roi2, roi3 and roi4 removed; ```. Alternatively, we could stick with just two arguments and then require; ```groovy; def roiOutput3 = RoiTools.subtract(roi1, RoiTools.union(roi2, roi3, roi4)); ```; to get the third output above (albeit perhaps less efficiently).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/995#issuecomment-1167420838:1568,efficient,efficiently,1568,https://qupath.github.io,https://github.com/qupath/qupath/issues/995#issuecomment-1167420838,1,['efficient'],['efficiently']
Energy Efficiency,"Hi All, I am using code from v1.02 and having trouble switching from the ImagePlusServer that I was using. I am not sure how to change the following code to adapt to v2. The function is to export .tif files of various sizes into the project folder. . The code is here: ; ```groovy; //Exporting Image as .tif files; import ij.IJ; import ij.ImagePlus; import qupath.lib.gui.ImageWriterTools; import qupath.imagej.helpers.IJTools. def imp = IJTools.convertToImagePlus(server, request).getImage(). import qupath.lib.images.servers.ImageServer; import qupath.lib.regions.RegionRequest; import qupath.lib.scripting.QP. import java.awt.image.BufferedImage. /*; * Adjustable parameters; */; int tileWidthPixels =1500 // Width of (final) output tile in pixels; int tileHeightPixels = tileWidthPixels // Width of (final) output tile in pixels; double downsample = 70 // Downsampling used when extracting tiles; String format = ""tif"" // Format of the output image - TIFF or ZIP is best for ImageJ to preserve pixel sizes; String dirOutput =('D:/QUPATH 2 - AT8/Exported Images' ) // BE SURE TO ADD AN OUTPUT DIRECTORY HERE!!!. int maxErrors = 20 // Maximum number of errors... to avoid trying something doomed forever; int minImageDimension = 16 // If a tile will have a width or height < minImageDimension, it will be skipped; // This is needed to avoid trying to read/write images that are too tiny to be useful (and may even cause errors). //-------------------------------------------------------. /*; * Processing; */. // Check we have an output directory; if (dirOutput == null) {; println(""Be sure to set the 'dirOutput' variable!""); return; }. // Initialize error counter; int nErrors = 0. // Get the image server; ImageServer<BufferedImage> serverOriginal = QP.getCurrentImageData().getServer(). // Get an ImagePlus server; ImagePlusServer server = ImagePlusServerBuilder.ensureImagePlusWholeSlideServer(serverOriginal). // Ensure convert the format to a file extension; String ext; if (format.startsWith",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/309:157,adapt,adapt,157,https://qupath.github.io,https://github.com/qupath/qupath/issues/309,1,['adapt'],['adapt']
Energy Efficiency,"Hi Colin,. Thanks very much for your reply and positive comments. With regard to resources, I’m afraid the only ones I know of are the ones that I have written myself. These are mostly on the Wiki, however three other sources of scripts are:. * the Supplementary Material for the recent [bioRxiv preprint](http://biorxiv.org/content/early/2017/01/12/099796) - this also includes descriptions of how the scripts are used; * my own [Gists on GitHub](https://gist.github.com/petebankhead); * the built-in examples under *Automate &rarr; Open sample scripts*. Beyond that, I find [using IntelliJ](https://github.com/qupath/qupath/wiki/Advanced-scripting-with-IntelliJ) to be really essential. Its Groovy support is excellent, and it is full of tricks that help with finding the parts of code that are needed. I hadn’t used IntelliJ previously, so I am only gradually learning what it can do*. Scripting is something that I would like to revisit in the future to make both simpler and more powerful - depending upon what is needed most. Currently, I use scripting for working with projects, working with objects/classifications, working with pixels, and working with GUI components… but the classes and techniques involves are quite different, and some are easier than others. I’m not sure which of my uses are of general interest... or just useful to me. Therefore in the absence of more complete documentation, it’s probably best to ask specific questions here and I’ll try to answer. In the short term, I plan to add links to the most generally-useful questions in the [FAQ section](https://github.com/qupath/qupath/wiki/FAQs) to make them a bit easier to find. Pete. *-Just now I learned that ```Ctrl + h``` with the cursor on a relevant class or interface name (e.g. ```PathObject``` or ```ImageServer```) opens up a class hierarchy to help see related classes.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/44#issuecomment-274013607:985,power,powerful,985,https://qupath.github.io,https://github.com/qupath/qupath/issues/44#issuecomment-274013607,2,['power'],['powerful']
Energy Efficiency,"Hi Egor, I was meaning to get to this - but ended up swamped by so many huge things to sort before the next release, and this one requires switching to an old computer with a small screen and no battery life... which I never quite found time to do. I've just merged in the >200 commits since this. If it builds ok I'll try to have a look in the next day or two.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298:195,battery,battery,195,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312788298,1,['battery'],['battery']
Energy Efficiency,"Hi Erexhepa. thanks for your hint. I didnt know the simple tissue detection uses the color deconvolution vectors. I do not have a H-DAB image. I adapted the vectors via the stain estimator but it did not have an effect. . The I tried all kind of combinations of requestend pixel sizes and Threshold. ; Indeed, it reduced the artefact in the corners - they did not dissapear, but became this small that i would not care. ; Transfer to other pictures failed because of different required thresholds. . The exclue on boundary option would make my whole ROI disappear. It covers nearly the whole slide. . Thus i gonna use a superpixel approach for the tissue detection on the glass slide. It will be slower, but more accurate. . Thanks for your ideas!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/124#issuecomment-350561039:145,adapt,adapted,145,https://qupath.github.io,https://github.com/qupath/qupath/issues/124#issuecomment-350561039,4,"['adapt', 'reduce']","['adapted', 'reduced']"
Energy Efficiency,"Hi Pete! For my research, I had to upgrade my memory from 32 Gbyte to 64 Gbyte. It has worked with more memory ;) But what the hell is QuPath loading to the memory? The original data is 20 Gbyte great. QuPath allocated 48 Gbyte memory to calculate the classifier. Does OpenCV need that much memory? . Btw. QuPath seems to not release the memory. I checked ObjectClassifierCommand.java ; On line 438 you closed the imageserver for the current image, but not for the other entries?. ![grafik](https://user-images.githubusercontent.com/44176896/83126297-eabf3100-a0d8-11ea-8d55-aae4bb20bc5d.png)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635237844:209,allocate,allocated,209,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635237844,1,['allocate'],['allocated']
Energy Efficiency,"Hi Pete, thanks for your reply. I agree that every abnormal termination will cause data to be lost, but I do have the strong feeling it should not brake the file ;) I hope you can agree on that. . I tried your approach and that indeed made the sample available again! Thanks! . To answer your questions:. 1. what errors do you see under View -> Show log?. INFO: Bio-Formats version 6.5.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.5.0) (13 ms); INFO: Loaded extension Experimental commands (1 ms); INFO: Loaded extension Experimental commands (35 ms); INFO: Loaded extension ImageJ extension (41 ms); INFO: Loaded extension JPen extension (14 ms); INFO: Loaded extension Rich script editor extension (244 ms); INFO: Loaded extension SVG export commands (0 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: CD3 analysis-project; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; ERROR: Reached end of file...; ERROR: Load ImageData: QuPath has encountered a problem, sorry.; If you can replicate it, please report it with 'Help -> Report bug (web)'. java.lang.NullPointerException; ERROR: Load ImageData; at qupath.lib.objects.hierarchy.PathObjectHierarchy.setHierarchy(PathObjectHierarchy.java:731); at qupath.lib.io.PathIO.readImageDataSerialized(PathIO.java:203); at qupath.lib.io.PathIO.readImageData(PathIO.java:278); at qupath.lib.projects.DefaultProject$DefaultProjectImageEntry.readImageData(DefaultProject.java:716); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2634); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:190); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234); at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191); at com.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/512#issuecomment-640534382:957,power,power,957,https://qupath.github.io,https://github.com/qupath/qupath/issues/512#issuecomment-640534382,2,['power'],['power']
Energy Efficiency,"Hi Pete,. - We want the number of positive and negative cells and also the percentage of positive cells in the different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue). - In this case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the b",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411026150:230,green,green,230,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150,6,['green'],['green']
Energy Efficiency,"Hi, . I am using the classifier to detect positive and negative cells in a tumor, I am measuring them in three different areas: 500µm outside of the tumor (green), the whole tumor (blue) and tumor centre (black). When I substract the black one from the green one I get an idea of how many cells there are located in the invasive front of the tumor.; ; I do this by running the classifier on the biggest area (green) and expanding this annotation with -500µm to get the blue one and expanding this one with -500µm to get the black one. It gives me nice results; But because some of my slides only have a part of the tumor (cut), I want the black annotation to be merged with the yellow annotation (to get a correct estimation of the cells located in the invasive front).; When I do this, I get very low cell counts, while I see a lot more cells in that yellow area that should be counted as well. Is there a way to get the correct number of cells when merging two annotations after using the classifier?. Thanks!; Lieze. ![qupath classifier](https://user-images.githubusercontent.com/42168520/43763207-771611c6-9a2a-11e8-812a-5765bc54cdac.jpg)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198:156,green,green,156,https://qupath.github.io,https://github.com/qupath/qupath/issues/198,3,['green'],['green']
Energy Efficiency,"Hi, ; QuPath looks like it could be an extremely useful tool for a standard analysis I do. Basically, I want to:; - Identify cells in spinal cord tissue sections, either automatically or by manually.; - I'm willing to draw ROIs by hand or some combination of auto-detect plus clean-up by hand. That's not horrible. But counting and finding overlaps, that is the part that I need to automate. ; - Identify the cellular staining: Usually, cells have (DAPI) and then one or more IHC signals (antibody) or ISH signal (RNAscope, which usually show as puncta); - Count the overlapping events: I want to see which cells have combinations of fluorescent signals: red alone, red+green, green alone, etc. Sometimes this will be binary (yes/no) but it'd be nice to make more bins like absent, low, medium and high. ; - Optional for ISH: Count puncta inside of cells. This is such a core analysis for a lot of neuroscience. I've tried to use Fiji and I still don't know how to do this in a straight forward way. I've resorted to just using Photoshop and manually counting, but that's a huge pain. CellProfiler looks like it might have some cool features, and I presented the problem there too:; http://forum.cellprofiler.org/t/rnascope-in-spinal-cord-neurons-quantitation-of-overlap-between-different-in-situ-probes/5355/3. But could some combination of QuPath + Cell Profiler (or QuPath alone) get the job done? I feel like it can. . Here is an example image:; ![composite](https://user-images.githubusercontent.com/7445362/33910649-7b71bcc6-df5d-11e7-92e8-468649392c9d.jpg). PS @petebankhead thank you so much for all your efforts. I've been enjoying the book you made on fluorescent image analysis as well.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/126:670,green,green,670,https://qupath.github.io,https://github.com/qupath/qupath/issues/126,2,['green'],['green']
Energy Efficiency,"Hi, I can't replicate the problem on my Mac - at least, the exported image displays fine (in Preview, PowerPoint, PixelMator...). Also, the thumbnail generated with `vipsthumbnail` looks ok to me. Is there any chance you can check if it's Ubuntu-specific?. Also, can you try converting with Bio-Formats alone? The easiest way is likely with `bfconvert`: https://bio-formats.readthedocs.io/en/stable/users/comlinetools/conversion.html. It would be good to confirm if this is a bug that can be addressed in QuPath, or it requires any change in Bio-Formats. For example, this might be relevant:; * https://github.com/ome/bioformats/issues/3856",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1254#issuecomment-1481434738:102,Power,PowerPoint,102,https://qupath.github.io,https://github.com/qupath/qupath/issues/1254#issuecomment-1481434738,1,['Power'],['PowerPoint']
Energy Efficiency,"Hi, I don't think this is a new bug - although maybe its impact is different through the script editor changes. The actual syntax highlighting hasn't changed, and there are lots of reports of `StackOverflowErrors` associated with Java regex. * https://github.com/qupath/qupath/issues/241; * https://github.com/qupath/qupath/issues/314. Here, QuPath is using the same regex as from the RichTextFX project and I guess that's a limitation.; The code is in [`GroovyStyler`](https://github.com/qupath/qupath/blob/v0.4.0/qupath-extension-script-editor/src/main/java/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.java). I'm not much of a regex specialist (improvements welcome!) so don't have a quick solution. An alternative option (which I *think* I prefer) is to abandon regex altogether and compute the styling some other way. It feels like this might be more efficient and less exception-prone, but also feels like something I'll almost certainly get wrong for a few iterations so that it doesn't apply the highlighting properly. Might become a hopefully-small holiday project if I feel inspired.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1176#issuecomment-1354327647:868,efficient,efficient,868,https://qupath.github.io,https://github.com/qupath/qupath/issues/1176#issuecomment-1354327647,1,['efficient'],['efficient']
Energy Efficiency,"Hi, I have used the following method (https://petebankhead.github.io/qupath/scripts/2018/08/08/three-regions.html) to score postively stained lymphocytes in the different regions. (Many thanks for providing me with the script! It worked very well) . I am wondering if I can reduce the annotation tumor center border (black) with 500µm whereby my tumor will consist out of several bands of 500µm in width without having to repeat the cell dedetection/classification steps? Thus further subdividing the tumor center in 500 µm bands, and assess the numer of positive and negative cells in eacht band. Hereby I can check if there is a gradient in the positivity of the cells in each band. . Thanks in advance!; Kind regards,; Lieze",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/274:274,reduce,reduce,274,https://qupath.github.io,https://github.com/qupath/qupath/issues/274,1,['reduce'],['reduce']
Energy Efficiency,"Hi, ah, silly error on my part. Thanks. . Ok, so now the imports seem to work, but something isn't connecting right for the jep section of the script. ```. INFO: Mean red (from Java): 86.81525; INFO: Mean green (from Java): 72.492275; INFO: Mean blue (from Java): 68.141675; INFO: java.lang.UnsatisfiedLinkError: no jep in java.library.path. ```. I tried the script you sent and received:; ```. INFO: Current image data: ImageData: Fluorescence, IMG_5_11_sq; INFO: Current image server: ImageJ server: /home/bl/Documents/IMG_5_11_sq.png (IMG_5_11_sq.png). ```. I should say that I think jep is installed ok, though I have only played with for a second this morning. But I can start jep, and do the basic test on the jep git Getting Started page (the python to java one).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/27#issuecomment-262781834:205,green,green,205,https://qupath.github.io,https://github.com/qupath/qupath/issues/27#issuecomment-262781834,1,['green'],['green']
Energy Efficiency,"Hi, yes I'm afraid the error is related to memory and unfortunately 4GB is probably not enough to do much analysis with QuPath. For browsing and annotating images it should be ok. Nevertheless, you might be able to get further if you adjust the memory settings and then restart QuPath for them to take effect - there is some information [here](https://github.com/qupath/qupath/wiki/Troubleshooting#setting-memory-limits). The above link also contains instructions for how to reduce the number of things QuPath does in parallel, which can reduce the amount of memory needed for processing (at the cost of things taking longer to run). In this situation, it would be best to run QuPath with as few other applications as possible open on your computer at the same time. For the specific example of getting the *Estimate stain vectors* command to work, you can also try selecting a smaller rectangle in your image, as described [here](https://github.com/qupath/qupath/wiki/Preprocessing#find-a-representative-region).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/55#issuecomment-285868226:475,reduce,reduce,475,https://qupath.github.io,https://github.com/qupath/qupath/issues/55#issuecomment-285868226,2,['reduce'],['reduce']
Energy Efficiency,"Hi,. I would like to know if it is possible to detect not only the percentage of positive cells but also the area that they occupy. ; What I tried to do was: 1. Use positive cells selection. 2. Create a classifier to differentiate between tumour and stroma and 3. send detections to ImageJ (in an intend to merge all the detections into a ROI and calculate the area occupied by positive tumour cells). My problem is that when I send the region to ImageJ i get all (tumour and stroma) detections and I cannot differentiate them anymore (in ImageJ all objects are treated as the same overlay).; Is there any way in QuPath to calcuate the area that occupy all positive tumour cells? and if not, is it possible to send only the detection of tumour cells to ImageJ already as a single selection? (because if I have thousands of detections and I want to merge them as a single ROI it has an extremely high cost in terms of processing power for the computer). Thanks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/159:928,power,power,928,https://qupath.github.io,https://github.com/qupath/qupath/issues/159,1,['power'],['power']
Energy Efficiency,"Hi,. I'm using QuPath for analysis of highly multiplexed data (40+ channels), and I would like to ask for the following:. 1. The height of the brightness and contrast panel window is limited , and it would be much more convenient if I can make it higher to reduce scrolling down using the slider when I want to turn channels on and off. 2. Can you please add an option to turn On/Off all the channels at once, eg with ""Select All"" / ""Unselect All"" button or checkbox. Thanks; Ofra",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1201:257,reduce,reduce,257,https://qupath.github.io,https://github.com/qupath/qupath/issues/1201,1,['reduce'],['reduce']
Energy Efficiency,"Hi,. Thanks for this new exciting version.; I was trying to compare InstaSeg results to StarDist results. InstaSeg is working nicely but the StarDist scripts (from Extensions>StarDist) fail with the following error.; I tried both H&E and Fluorescence scripts. (I set the model path). ```; ERROR: 'org.locationtech.jts.geom.Geometry qupath.lib.roi.GeometryTools.createRectangle(double, double, double, double)'; java.lang.NoSuchMethodError: 'org.locationtech.jts.geom.Geometry qupath.lib.roi.GeometryTools.createRectangle(double, double, double, double)'; at qupath.ext.stardist.StarDist2D.lambda$detectObjects$10(StarDist2D.java:940); at java.base/java.util.stream.ReferencePipeline$2$1.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source); at java.base/java.util.stream.AbstractPipeline.evaluate(Unknown Source); at java.base/java.util.stream.ReferencePipeline.collect(Unknown Source); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:941); at qupath.ext.stardist.StarDist2D.detectObjectsImpl(StarDist2D.java:886); at qupath.ext.stardist.StarDist2D.lambda$detectObjects$6(StarDist2D.java:823); at qupath.ext.stardist.StarDist2D.runInPool(StarDist2D.java:849); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:823); at qupath.ext.stardist.StarDist2D.detectObjectsImpl(StarDist2D.java:859); at qupath.ext.stardist.StarDist2D.lambda$detectObjects$5(StarDist2D.java:812); at qupath.ext.stardist.StarDist2D.runInPool(StarDist2D.java:849); at qupath.ext.stardist.StarDist2D.detectObjects(StarDist2D.java:812); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at QuPathScript.run(QuPathScript:48); at org.codehaus.groovy.jsr223.GroovyScriptEngine",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1635:982,Reduce,ReduceOps,982,https://qupath.github.io,https://github.com/qupath/qupath/issues/1635,2,['Reduce'],"['ReduceOp', 'ReduceOps']"
Energy Efficiency,"Hi. ; Main issue:. - Version QuPath 0.2.0-m4 (OS Windows) doesn't open olympus VSI files correctly anymore. See attached image: ; ![VSI_m2_vs_m4](https://user-images.githubusercontent.com/55238250/64780209-0fca3e80-d560-11e9-817d-c90eeee4865c.PNG). Left hand side is the 0.2.0-m2, right hand side is 0.2.0-m4.; m4 only opens the label and the Image list is lost. Hope this will be fixed soon :). Another two issues: . - The 0.2... version in general; it doesn't any longer recognize the image type when opening VSI-files. This worked fine in 0.1...versions with the Bio-Format extension. . - In all versions (0.1... included) the color of the different fluorescent channels are mixed up, for example the FITC channel is displayed in red and TRITC channel in green . This must be manually corrected under brightness and contrast, and it would of course be convenient if it was recognized automatically.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/361:758,green,green,758,https://qupath.github.io,https://github.com/qupath/qupath/issues/361,1,['green'],['green']
Energy Efficiency,Hi; First I will take the opportunity to salute the maker of such a formidable piece of software. It hits its audience right on the mark. Easy enough for those puking of computers and powerful enough for those willing to go the extra miles and code some themselves. I was working on a TMA project with 11 TMAs and about 600 patients with 4 cores each. I can open each individual TMA in TMA data viewer and play around with the summary statistics. But when I try to import from current project my computer slows down to a crawl. After increasing the amount of memory available to qupath to 5GiB import from current project will eventually work. . I guess it is the TMA core images that makes this process so memory hungry. Is it possible to turn of this feature?,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/117:184,power,powerful,184,https://qupath.github.io,https://github.com/qupath/qupath/issues/117,1,['power'],['powerful']
Energy Efficiency,Hi; From your picture it seems to me that you:; - have detected cells in an elipse; - started making a classifier (the small red and green circles); - are satisfied with the classifier (the cells are classfied correctly). It seems that you already got some measurements registered in the oval like total number of stromal and tumor cells and probably also number of cells per mm^2. What additional measurements are you after? . - Cell measurements?; - Measurements specific to certain classified cells?; - Measurements specific to certain areas?. Much is possible. You probably have to do some scripting if you want something tailored to your specific needs. I think you might find more answers in the [qupath google group](https://groups.google.com/forum/#!forum/qupath-users),MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/229#issuecomment-430237196:133,green,green,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/229#issuecomment-430237196,1,['green'],['green']
Energy Efficiency,"Hmmm, I can't replicate any problem on my Mac but it will be a while before I can try it for any really long-running process. I've worked with large regions before and not seen problems like this. I have just submitted a small commit that introduces a `nThreads(n)` option to the builder to control the parallelisation. You can also use the `doLog()` option to get a little bit more information being printed.; https://github.com/petebankhead/qupath/commit/cb9b0a7473d084f37a1482bf8426a5d8030a1dc4. You can also use the *Memory monitor* to track memory use, and occasionally force the garbage collector with the *Reclaim memory* button. It would be interesting to know if the issue coincides with garbage collection, or if the memory steadily increases with time -- regardless of garbage collection. Please do add any further information that may be relevant (e.g. the type of the image [RGB, fluorescence], approximate size/number of nuclei, anything else that happens in your script...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630671434:528,monitor,monitor,528,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630671434,1,['monitor'],['monitor']
Energy Efficiency,"Hmmm... I've never tried this kind of setup, and have no idea if it can work. It would be very interesting if you can find a way... Those dramatic errors tend to involve native libraries (rather that code within Java). From the log, it appears to go wrong at the the earliest stage - so I'd try to launch it from ```QuPathApp.jar``` directly. There might be some clues in [Issue 27](https://github.com/qupath/qupath/issues/27#issuecomment-264693922). Otherwise, would it be of any benefit if you could run scripts on the server - having developed the scripts locally, on the less powerful machine? There are some links regarding that at #94 . Even if this isn't what you want to do, it might be worth trying to run such a script from the command line just to see if it works, or if the same error occurs.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/109#issuecomment-336031954:580,power,powerful,580,https://qupath.github.io,https://github.com/qupath/qupath/issues/109#issuecomment-336031954,1,['power'],['powerful']
Energy Efficiency,"I am getting the same problem using SLICs and classifiers to yield area; annotations for whole tissue slides. Detections are handled without a; problem, but the program freezes when I try to create margins for the; annotations. I do not run out of memory, but using the memory monitor I; notice a sawtooth pattern whe is the freezes happen. Perhaps it will run better if run from the command line since it no longer; will have to compete with the application thread?. I will set up a more powerful computer tomorrow. Perhaps that will handle; the problem. 7. feb. 2019 20:46 skrev ""Pete"" <notifications@github.com>:. It's hard to tell much here without a clearer idea of what 'a lot of rather; large and complex annotations' means, but it may very well be that there; are too many vertices that that slows down the rendering too much (on the; JavaFX application thread, same as the menus and rest of the GUI). If so it; isn't really a bug, but more pushing QuPath with a different application; than that for which it was previously designed/optimized... See https://github.com/qupath/qupath/wiki/Types-of-object for differences; in object types, and why it's not really intended to have very large; numbers of annotations. You might try having fewer vertices somehow, perhaps with *Objects →; Simplify annotation shape* or splitting larger annotations into smaller; ones (since annotations outside the field of view do not need to be; rendered). Or write a script that periodically converts annotations you; won't need to change any more into detections. Or try to leave parts of the; image that are particularly complex *unannotated*, and then interpret the; unannotated region appropriately later. (I was actually looking into this today for completely different reasons,; and may be able to improve the annotation handling somewhat... but it; doesn't help you now). —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub; <https://gith",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/267#issuecomment-461575920:277,monitor,monitor,277,https://qupath.github.io,https://github.com/qupath/qupath/issues/267#issuecomment-461575920,4,"['monitor', 'power']","['monitor', 'powerful']"
Energy Efficiency,"I am using the portable version QuPath-v0.5.0-Windows, on a 64bit Windows machine. In a project with several images (each between 1.5 and 2GB), when I open one image then open a new image, the RAM used from 1st image stays and is not ""freed"". When looking at the Memory monitor of QUpath, if I press ""clear tile cache"", it will decrease the ""Used memory"", but the ""total memory"" stays the same. So basically, even when clearing tile cache, the RAM is taken up is growing little by little at a point where I have to close Qupath and restart. I don't think that this is an expected behavior. ; Also if just going back and forth between the same 2 images, loading is faster if tiled are created (normal) but it will increases the number of cached tiles and increases total RAM (but at some point not anymore, which is even more strange). . Reclaim memory also does not completely free the RAM.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646:270,monitor,monitor,270,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646,1,['monitor'],['monitor']
Energy Efficiency,"I can replicate the problem with the measurements. Basically, RGB images are a special case. QuPath + StarDist should measure them properly if they are brightfield (after color deconvolution), but if a fluorescence image is RGB then it just uses the packed RGB value as a single channel - rather than splitting out the red, green and blue components. This is a bug that we can fix. I don't see a problem with the cell expansion, but note that; * you're constraining the cell expansion with the ` .cellConstrainScale(1.5)` option; * the pixel size of your image is 0.5, but based upon the scalebar it should be closer to 0.161 µm. In the short term, you can open your images in ImageJ/Fiji and run *Image &rarr; Color &rarr; Make Composite*. While you're there, you can call *Analyze &rarr; Set Scale...* with a line drawn over the scalebar and input the true length to fix the pixel size. I've attached an example of the image after conversion; this should work in QuPath properly.; [CTRL-01-composite.tif.zip](https://github.com/qupath/qupath/files/6183862/CTRL-01-composite.tif.zip). Finally, my guess is that your RGB image isn't the raw data - since it has a scalebar burned in to it. So the pixel values might be changed and analysis might not make sense anyway. I've written a bit about this topic in my image analysis handbook, e.g. [here](https://petebankhead.gitbooks.io/imagej-intro/content/chapters/files/files.html) (and some other chapters about RGB conversion).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/686#issuecomment-804221932:324,green,green,324,https://qupath.github.io,https://github.com/qupath/qupath/issues/686#issuecomment-804221932,1,['green'],['green']
Energy Efficiency,"I couldn't replicate this on my Mac - however that may be because the bit you linked to is hard-coded to use `Ctrl` rather than adapting to use `Cmd`... which might also be an issue, I guess. I need to use `Cmd + Backspace` to delete the full word. Either way, sounds like a bug that needs fixed for Windows & Linux.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/916#issuecomment-1046935325:128,adapt,adapting,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/916#issuecomment-1046935325,1,['adapt'],['adapting']
Energy Efficiency,"I disovered that the redout of the absolute pixel vallues experiences a very unrealistic value far beyond the theoretically maximum of 255: . ![grafik](https://user-images.githubusercontent.com/16352785/34652724-629261ee-f3e2-11e7-8503-88f92f71fd82.png). Probably the problem is connected with that?. Next screenshot shows green channel after restart of QuPath: ; ![grafik](https://user-images.githubusercontent.com/16352785/34652762-f5caea94-f3e2-11e7-9422-c233b31d08b4.png). Instead of a max pix value above 400, you see something above 4. Factor 100 changed!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/131#issuecomment-355842721:323,green,green,323,https://qupath.github.io,https://github.com/qupath/qupath/issues/131#issuecomment-355842721,1,['green'],['green']
Energy Efficiency,"I feel that is likely to cause more confusing and maintenance headaches as the software develops, mostly for the reasons I outlined above. Commands will change and improve. The same command (e.g. *Load object classifier*) might meaningfully only work for detections now, but handle other object types in the future (I think that, in principle, it already *does* support other object types, if you can somehow create and save a classifier that applies to annotations). There had been a *Train detection classifier* in earlier versions, so the renaming in that case was to reduce confusion because there was a transition period during which both commands were maintained in parallel. If we move things, we need to update the documentation - and some of the docs are in the form of videos, so that's not straightforward. And if we push the term 'detection classifier' it will likely confuse *someone* who thinks it isn't relevant to them because they have cells, not detections. I don't think the current arrangement is ideal, but we are always trying to balance the current software with the past, the future, the docs, and a large number of users with very different needs and expectations... and a very small number of developers. Added to that are the people who write extensions, for whom changing menu structures can cause trouble. It is not an easy project to manage.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506:571,reduce,reduce,571,https://qupath.github.io,https://github.com/qupath/qupath/issues/1501#issuecomment-2079524506,1,['reduce'],['reduce']
Energy Efficiency,"I set up an experiment to check for memory leaks - I'll leave qupath on with my ROIs and check the memory monitor (took a screenshot at the start), let's see what happens tomorrow. :-). I have built qupath dev branch versions before but only on Linux, not on Windows. I'll have at look at it. :-); Thanks for your support!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-615278338:106,monitor,monitor,106,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615278338,1,['monitor'],['monitor']
Energy Efficiency,"I suspect the difficulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially eit",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411011755:744,green,green,744,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755,6,['green'],['green']
Energy Efficiency,"I think the main problem is that your TIFF file was saved with incorrect pixel size information. Without that information it is very difficult to find settings that will work, though it is possible. Note that each one of your pixels is expected to be 163 um in size. Your entire image is about 0.2 meters in size. If you are using the ImageJ server, everything needs to be in pixels instead, though since you have a requestedPixelSize entry, I am guessing that is not the case here. If you are using a BioFormats server (see Image tab), you can get started with these settings, though I have not optimized them at all. ```; setImageType('BRIGHTFIELD_H_DAB');; createSelectAllObject(true);; setColorDeconvolutionStains('{""Name"" : ""H-DAB"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.81041 0.56974 0.13652 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.26524 0.50132 0.8236 "", ""Background"" : "" 254 190 154 ""}');; selectAnnotations();; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 300.0, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 600.0, ""minAreaMicrons"": 10000.0, ""maxAreaMicrons"": 8.0E7, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 1000.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}');; ```. Note the extremely large values in most measurements. It would be better to fix the pixel sizes in ImageJ, though.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/305#issuecomment-483056585:298,meter,meters,298,https://qupath.github.io,https://github.com/qupath/qupath/issues/305#issuecomment-483056585,1,['meter'],['meters']
Energy Efficiency,"I think the short answer is yes, but actually doing it might be a little more complicated. I will need to dig through some code to see if there is an easy way to do this, but the following can be used to export the entire image as TIFF files. I assume it can be adapted to just target TMA cores.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/85#issuecomment-315148256:262,adapt,adapted,262,https://qupath.github.io,https://github.com/qupath/qupath/issues/85#issuecomment-315148256,1,['adapt'],['adapted']
Energy Efficiency,"I tried the script and below is the part of the result where I recognize the channels. The wavelength matches the naming, but no colors are mentioned. I also searched the whole script result for blue and green, but nothing were found. EmissionWavelength=""455.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:0"" Name=""DAPI"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""518.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:1"" Name=""FITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel EmissionWavelength=""565.0"" EmissionWavelengthUnit=""nm"" ID=""Channel:7:2"" Name=""TRITC"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1"" ID=""Detector:0:7""/><LightPath/></Channel><Channel ID=""Channel:7:3"" Name=""CY5"" SamplesPerPixel=""1""><DetectorSettings Binning=""1x1""",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/361#issuecomment-531192852:204,green,green,204,https://qupath.github.io,https://github.com/qupath/qupath/issues/361#issuecomment-531192852,1,['green'],['green']
Energy Efficiency,I would be interested in two classes but the whole project is released under GPL. The program I have been developing will be free of charge but I am not very interested in disclosing the complete source code that I have written for six month. Maybe LGPL would have been a better choice for linking some library functions only.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/263:133,charge,charge,133,https://qupath.github.io,https://github.com/qupath/qupath/issues/263,1,['charge'],['charge']
Energy Efficiency,"I'd need more information from you to be able to answer that... what exactly are the steps that you have applied, what features calculated, how many objects per image etc. Note also that the memory reported in Windows might not be the best guide. Use *View &rarr; Show memory monitor* within QuPath instead, and press *Reclaim memory* to find out what is *really* needed. And you can also clear the tile cache/reset undo/redo to really squeeze it down to the essentials of what QuPath currently needs at that moment. VisualVM is the technical way to find out what *exactly* is being loaded: https://visualvm.github.io",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-635240041:276,monitor,monitor,276,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-635240041,2,['monitor'],['monitor']
Energy Efficiency,"I'd say 3.3 GB is a perfectly respectable amount of RAM for QuPath (I assume your computer has 8 GB or 12 GB...?). Personally, I have never had a powerful enough computer to be able to give anywhere close to 64 GB when either developing or using QuPath... and I don't think I ever needed 16 GB either. Maybe my needs have been modest than @Svidro's but I think that it's not typical to need such huge amounts of memory for most people :). However, I note that you are using a CZI image. There are still some lingering issues around QuPath's ability to handle CZI images; depending on the type of image (e.g. TMA/non-TMA, stitched...), I've heard that sometimes it works very well and sometimes there are problems. It's on my to-do list to investigate why this happens... currently it is a little mysterious for me, and it's not clear if it's something I can resolve within QuPath or which requires more outside help. Anyway, I don't know if that is the source of your memory woes, but it could be. Out of curiosity,; * is your image brightfield or fluorescence? (the error suggests brightfield); * is it a 2D whole slide scan, or an image from a microscope?; * is it a TMA image, large tissue section, or something else?; * does QuPath operate reasonably smoothly, or horribly slowly before the crash? If you need a comparison, there are some [links on the wiki](https://github.com/qupath/qupath/wiki/Counting-cells) to test data that you might use for comparison.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343309138:146,power,powerful,146,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343309138,2,['power'],['powerful']
Energy Efficiency,"I'll close amidst my issue-closing spree ahead of the v0.2.0 release because it traced back to an invalid geometry. Each new milestone in recent months has tried to reduce the occurrence of these issues, but since they are rather intermittent it is difficult to be sure when they have been fixed or not. Please reopen (or create a new issue) if you are provide a troublesome example that fails in the latest release.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/456#issuecomment-632239499:165,reduce,reduce,165,https://qupath.github.io,https://github.com/qupath/qupath/issues/456#issuecomment-632239499,1,['reduce'],['reduce']
Energy Efficiency,"I'll have a look at restoring the link. There's currently a power outage due to grid work (affecting my server phromo.se), expected to have it working again in roughly 2 hours after writing this post. Update: the link is now working again. Although, dunno if this is the best workaround anymore :)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434:60,power,power,60,https://qupath.github.io,https://github.com/qupath/qupath/issues/628#issuecomment-1231398434,1,['power'],['power']
Energy Efficiency,"I'm afraid not. QuPath give access to a range of classifiers from OpenCV and (optionally, with the extension installed) Weka - any parallelization would need to happen in those libraries, and depending on the algorithm might not help much. QuPath is also designed to make it possible to add new classifiers, so potentially newer, faster ones might be added one day... if someone makes them. I'd suggest trying to reduce your number of training objects and/or features. In the case of cells (for example), neighboring cells often have very similar features and including many similar cells probably doesn't help much... and it may even cause harm, by requiring even more training objects to learn something else. There are discussions about training classifiers [here](https://groups.google.com/d/msg/qupath-users/MpsK44RCZcE/xE3nX4aJCAAJ) and [here](https://groups.google.com/d/msg/qupath-users/qM_JtrEW1dI/Jeb5iMRnAQAJ). I also discuss a bit about improving the results when using the same training objects but fewer features [here](https://youtu.be/uj28wJSmntU?list=PL4ta8RxZklWk_O_Z7K0bZlhmHtaH73vlh). I do plan to make some changes that should improve how quickly an existing classifier is reloaded (even if it does not change the training time), described [here](https://groups.google.com/d/msg/qupath-users/EkQNKOqUBVE/UqB0tcL8AQAJ). But it's a fairly substantial change and a matter of finding enough time...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/206#issuecomment-416021080:413,reduce,reduce,413,https://qupath.github.io,https://github.com/qupath/qupath/issues/206#issuecomment-416021080,2,['reduce'],['reduce']
Energy Efficiency,"I'm afraid that would be tricky... you'll definitely need access to the raw pixels. To achieve this after detection, it's best _not_ to choose _Smooth boundaries_ in the cell detection parameters, to keep the contours as close as possible to their original shapes... then you could potentially loop through every cell, extract the pixels for the cell, create a binary mask for the nucleus and another for the cell, and work from there. Or alternatively you could write an entirely new cell detection (e.g. with ImageJ or OpenCV). Another option would be to look at exporting the pixels, and the cell ROIs as labelled images (with unique integer labels for each cell). Then you can potentially tackle the task in Python or R. Whichever way you choose it's not entirely straightforward, and calculating the values efficiently for large numbers of cells would be a further challenge. So... it's technically possible, but would require quite a lot of effort.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/236#issuecomment-433483920:812,efficient,efficiently,812,https://qupath.github.io,https://github.com/qupath/qupath/issues/236#issuecomment-433483920,1,['efficient'],['efficiently']
Energy Efficiency,"I'm not sure about this. It has been a long time, but I think the reason I excluded sum from non-nucleus measurements is because it is common for people to train classifiers using all features. Because cell expansion is only distance-based, I felt that sum measurements outside the nucleus could be extremely unreliable. Also, the sum depends upon the resolution at which the measurement is calculated; for the default cell detection, this is the detection resolution, but that might not be what the user expects. The need for a nucleus sum, however, seemed sufficiently common that it should be included - and the nucleus ROI is likely to be more reliable, which reduces the problems slightly. I realise it's a judgement call and people may disagree. I'm reluctant to change the built-in cell detection, since the current behavior hasn't changed across releases and any modifications can impact classifiers. I'd rather we focus on moving away to alternative cell detection methods, and decouple measurement from detection to improve flexibility.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883:664,reduce,reduces,664,https://qupath.github.io,https://github.com/qupath/qupath/issues/1454#issuecomment-1909779883,1,['reduce'],['reduces']
Energy Efficiency,"I'm not sure that there are (many/any?) other developers maintaining maven-based extensions for QuPath, and gradle is the recommended approach. I'm reluctant to add something like this to the main build script when it isn't actually needed to build QuPath itself, and many people (including me) may prefer not to install the jars to their local maven repository. In any case, I understand there are other ways to install the jars locally, e.g. https://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html. Currently I am refactoring and aiming to reduce as much of complexity as possible to make the software more maintainable. It may be worth revisiting the use of Maven when this is complete.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497588046:555,reduce,reduce,555,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497588046,2,['reduce'],['reduce']
Energy Efficiency,"I'm trying to run QuPath on my linux server and use X forwarding to view on my local system. Basically, the server is much more powerful, which is why I want to do it this way, but it doesn't work. Would really appreciate your advice. Here's the error message I get:. ```; 18:26:55.603 [main] [INFO ] qupath.QuPath - Launching QuPath with args: ; Prism ES2 Error - nInitialize: glXChooseFBConfig failed; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000000000ad66, pid=159313, tid=0x00007ff2286f0700; #; # JRE version: OpenJDK Runtime Environment (8.0_111-b14) (build 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14); # Java VM: OpenJDK 64-Bit Server VM (25.111-b14 mixed mode linux-amd64 compressed oops); # Problematic frame:; # C 0x000000000000ad66; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/rrawat/QuPath/app/hs_err_pid159313.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; #; Aborted; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/109:128,power,powerful,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/109,1,['power'],['powerful']
Energy Efficiency,"I'm waiting for the extension to be adapted to the new APIs (see https://github.com/GoogleCloudPlatform/qupath-chcapi-extension/issues/35). I will close once I confirm that works. Otherwise, I think allowing to ship all JRE modules is already a great step solving these issues, and just wonder if it would be worth releasing also these ""fat versions"".",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436#issuecomment-618204880:36,adapt,adapted,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/436#issuecomment-618204880,1,['adapt'],['adapted']
Energy Efficiency,"I'm working with some multiplex (brightfield) immunohistochemistry whole slide images that are stained with five colors (brown, purple, teal, red, black). Here's an example:. ![penta qupath 1](https://user-images.githubusercontent.com/3537118/37111528-c6c69b68-21f4-11e8-8543-f9e54bcaa5f0.png). Analyze -> Cell analysis -> Cell detection does an acceptable job of identifying cells:. ![penta qupath 2](https://user-images.githubusercontent.com/3537118/37111535-c9b80622-21f4-11e8-9cb9-a5eca67f3a4e.png). I would like to classify them by color, ideally with a script. I'm aware that QuPath doesn't have built-in support for multiple colors at this time. Also aware that Estimate stain vectors can be used to change what colors QuPath considers to be, for example, DAB. However, I don't think this would work for 5 colors. I can loop through the detected cells no problem. Is it possible to extract mean pixel intensity separately for the red, green, and blue channels? Something like:. ```; for (def cell: getCellObjects()) {. 	double r = cell.getMeasurementList().getMeasurementValue(""Cell: Mean Red Intensity""); 	double g = cell.getMeasurementList().getMeasurementValue(""Cell: Mean Green Intensity""); 	double b = cell.getMeasurementList().getMeasurementValue(""Cell: Mean Blue Intensity""); 	; 	if (isBrown(r,g,b)) {; 		cell.setPathClass(Brown); 	}; 	...; }; ```. From `getAvailableFeatures(getCellObjects())` it doesn't seem like it. Any other suggestions are much appreciated!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/155:942,green,green,942,https://qupath.github.io,https://github.com/qupath/qupath/issues/155,2,"['Green', 'green']","['Green', 'green']"
Energy Efficiency,"I've looked into this a little bit. I've never really needed or wanted this feature myself, but can see it would certainly help in some contexts. My worry is that power users running long scripts will tend to want different ways of being notified that the script is finished. Ideas that come to mind are:; * Something audible, e.g. the beep; * Email/telegram; * 'Requesting attention', e.g. forcing the app to the front; * A small, unobtrusive progress bar that can be 'always on top' (even if QuPath isn't). I'm not sure adding one option to the batch script dialog will be enough to solve the problem, and adding many becomes a lot more clutter and effort to maintain. To overcome that, my initial idea was to provide the option of adding a 'batch script listener' to the script editor. . So you could add a listener using something like this (in Groovy):; ```groovy; def scriptEditor = getQuPath().getScriptEditor(); scriptEditor.addBatchScriptListener(e -> {; if (e.isLastScript()) {; // Do something... beep, email, whatever; java.awt.Toolkit.defaultToolkit.beep(); }; }); ```. The thing is that the listeners would be cumulative, so you'd likely want to just add one on startup and leave it (rather than add multiple listeners and then have them all firing when scripts are run). But then it becomes harder to turn it on/off the listener's behavior. Nevertheless, this approach would make it possible to add small extensions that offer different kinds of behavior, controlled via preferences or something else. So you could have a preference allowing the user to choose the audio file they want played on completion, for example.... but still, remembering to turn the option on and off could be a pain, since it wouldn't be easy to incorporate it as a checkbox in the batch processing dialog itself. While writing this, another option I've thought of is to make more info about the current script accessible within the script itself. So it might look like this:. ```groovy; if (getScriptInfo().i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1029#issuecomment-1200084804:163,power,power,163,https://qupath.github.io,https://github.com/qupath/qupath/issues/1029#issuecomment-1200084804,2,['power'],['power']
Energy Efficiency,"I've made some progress. After cell detection, I did _Analyze → Calculate features → Add intensity features (experimental)._, with a pixel size of 1 um. I chose Red, Green, and Blue, and Mean. Then the following code:. ```; import qupath.lib.objects.classes.PathClass; import qupath.lib.objects.classes.PathClassFactory. def Brown = PathClassFactory.getPathClass(""Brown""); def Red = PathClassFactory.getPathClass(""Red""); def Purple = PathClassFactory.getPathClass(""Purple""); def Teal = PathClassFactory.getPathClass(""Teal""). def rmean = ""ROI: 1.00 µm per pixel: Red: Mean""; def gmean = ""ROI: 1.00 µm per pixel: Green: Mean""; def bmean = ""ROI: 1.00 µm per pixel: Blue: Mean"". for (def cell :getCellObjects()) {; ; double r = cell.getMeasurementList().getMeasurementValue(rmean); double g = cell.getMeasurementList().getMeasurementValue(gmean); double b = cell.getMeasurementList().getMeasurementValue(bmean); ; if (isBrown(r,g,b)); cell.setPathClass(Brown). else if (isPurple(r,g,b)) ; cell.setPathClass(Purple). else if (isTeal(r,g,b)); cell.setPathClass(Teal). else if (isRed(r,g,b)) ; cell.setPathClass(Red). }; ```. the `isBrown()`, etc. functions just do some simple thresholding of the r,g,b values to decide what color a cell is stained. I'm still tweaking those functions, but it's working pretty well (white outlines are unclassified cells, the rest are outlined in the appropriate color):. ![5-plex snapshot](https://user-images.githubusercontent.com/3537118/37124548-9755fc06-221d-11e8-93c5-dc4f02dd68ac.png). I think this will work well enough for my application (we'll be presenting this data as a platform presentation at USCAP in Vancouver in a couple weeks, if anyone is interested in multiplex IHC).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/155#issuecomment-371327542:166,Green,Green,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/155#issuecomment-371327542,2,['Green'],['Green']
Energy Efficiency,"If you don't have a huge number of cores, and could tolerate just manually annotating and deleting certain regions, that might be the easiest way... draw around the region you don't want (*after* detecting cells/superpixels or whatever your previous step was) and press *Backspace* to delete the annotation - and then choose *No* when asked about keeping descendent objects. Based on the description, my guess is you're using *Positive cell detection*. You might also try to create a classifier (as described [here](https://github.com/qupath/qupath/wiki/Classifying-objects)) and leave it up to the classifier to find the areas of carbon based on whatever features have been calculated; for example, you could assign classifications for *Carbon* and *Valid* (or whatever other category names you want to use). Then delete the carbon areas and reapply the positive/negative classifications using something like the following script:. ```groovy; carbon = getDetectionObjects().findAll {it.getPathClass() == getPathClass('Carbon')}; removeObjects(carbon, true); setCellIntensityClassifications('Nucleus: DAB OD mean', 0.2); ```. If this doesn't work well enough, then you can tell QuPath to calculate new features for each cell using *Analyze &rarr; Calculate features &rarr; Add intensity features (experimental)*; I'd suggest adding the mean values for red, green and blue as a starting point and see if that's enough. Otherwise, if you're able to provide an example image and say a bit more about what steps are involved in your analysis then maybe we can think of other ways.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/172#issuecomment-388539146:1357,green,green,1357,https://qupath.github.io,https://github.com/qupath/qupath/issues/172#issuecomment-388539146,1,['green'],['green']
Energy Efficiency,"If you search for this error you should find many discussions about it and Java Topology Suite. It is a frequent source of problems since QuPath started using JTS routinely for ROIs, although I still think that on balance there are many more advantages of using JTS overall. I had tried to put in additional steps to reduce the frequency of occurrence in m9, but it seems from this issue that is can still happen. I can see from the screenshot roughly where this occurs, but without steps to reproduce it I am not sure I can do much in the near future. Two questions: are you using pixel snapping to round ROI coordinates to integers here? And how did you generate all the annotations (ie by hand or automatically)? These are likely to be more relevant than the many cells.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/401#issuecomment-587001656:317,reduce,reduce,317,https://qupath.github.io,https://github.com/qupath/qupath/issues/401#issuecomment-587001656,1,['reduce'],['reduce']
Energy Efficiency,ImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:238); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.lambda$requestTile$5(PixelClassificationOverlay.java:547); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); Caused by Physical memory usage is too high: physicalBytes (16451M) > maxPhysicalBytes (16384M) at org.bytedeco.javacpp.Pointer.deallocator(Pointer.java:712); at org.bytedeco.javacpp.Pointer.init(Pointer.java:126); at org.bytedeco.opencv.opencv_core.Mat.allocate(Native Method); at org.bytedeco.opencv.opencv_core.Mat.<init>(Mat.java:241); at qupath.opencv.ml.OpenCVClassifiers$AbstractOpenCVClassifierML.predictWithLock(OpenCVClassifiers.java:468); at qupath.opencv.ml.OpenCVClassifiers$ANNClassifierCV.predictWithLock(OpenCVClassifiers.java:1425); at qupath.opencv.ml.OpenCVClassifiers$AbstractOpenCVClassifierML.predict(OpenCVClassifiers.java:442); at qupath.opencv.ops.ImageOps$ML$StatModelOp.apply(ImageOps.java:2812); at qupath.opencv.ops.ImageOps$Core$SequentialMultiOp.apply(ImageOps.java:2294); at qupath.opencv.ops.ImageOps$ChannelImageDataOp.apply(ImageOps.java:424); at qupath.opencv.ml.pixel.OpenCVPixelClassifier.applyClassification(OpenCVPixelClassifier.java:104); at qupath.lib.classifiers.pixel.PixelClassificationImageServer.readTile(PixelClassificationImageServer.java:299); at qupath.lib.images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedIma,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856:1757,allocate,allocate,1757,https://qupath.github.io,https://github.com/qupath/qupath/issues/856,1,['allocate'],['allocate']
Energy Efficiency,Improve registration of type adapters,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/520:29,adapt,adapters,29,https://qupath.github.io,https://github.com/qupath/qupath/pull/520,1,['adapt'],['adapters']
Energy Efficiency,"In an effort to reduce our pending 'GitHub issues', and because this has been mostly addressed, I'll close this :). It is now possible to add descriptions to annotations (in v0.2.0-m12... and soon the stable v0.2.0). It's also possible to view the 'name' of the annotation superimposed on top of the image (press `N` to show/hide it).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/144#issuecomment-632216712:16,reduce,reduce,16,https://qupath.github.io,https://github.com/qupath/qupath/issues/144#issuecomment-632216712,1,['reduce'],['reduce']
Energy Efficiency,"Initial refactoring of the bio-format image server to extract code that could be reused in the OMERO extension.; Basically, the bio-format image server uses a pool of readers to retrieve pixel values in parallel. This pull request extracted this behavior from the bio-format image server. 4 classes were created:; * `ReaderPool`: abstract class that can read pixel values of an image using several readers in parallel. A class extending this class must define how to fetch pixel values, but the rest is handled by `ReaderPool`.; * `BioFormatReaderPool`: implementation of `ReaderPool` with specific code to open bio-format images.; * `ReaderWrapper`: interface which is a wrapper around an image reader. It is suited for readers that return arrays of bytes when reading pixel values.; * `BioFormatReaderWrapper`: implementation of `ReaderWrapper` with specific code to open bio-format images. The `BioFormatImageServer` and `BioFormatServerBuilder` were slightly changed to adapt to the new classes. The unit tests passed with these changes. This pull request should not be merged now because I still have to address a few things:; * Where should we place the `ReaderPool` and `ReaderWrapper` classes? Currently there are in the `servers.bioformats` package, but they are not specific to bio-format.; * Should I refactor the BioFormatImageServer to use the best practises we have been discussing? I see this file has a few warnings and the constructor takes 500 lines.; * I will now try to use `ReaderPool` and `ReaderWrapper` in the OMERO extension, so I may have to change a few things if I realize that theses classes are not completely generic. I also have a question:; * When does the `getAssociatedImage(String)` function of `qupath.lib.images.servers.ImageServer` is used? I don't think I was able to test it",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287:974,adapt,adapt,974,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287,1,['adapt'],['adapt']
Energy Efficiency,"Is your feature request related to a problem? Please describe. It's possible to set colors for instances of a `PathObject` and `PathClass`, but inconvenient and inconsistent. The main reason is that both represent the color using an `Integer`, in packed ARGB form. The thinking was that this would be a) efficient, b) portable, and c) avoid creating *yet another* `Color` class (since this exists for Java AWT, JavaFX, OME...). The main problem is that both classes use different method signatures, and both require the color to be packed into an integer before being set. So we end up with code like this:; ```java; pathObject.setColorRGB(ColorTools.packRGB(255, 0, 0));; pathClass.setColor(ColorTools.packRGB(255, 0, 0));; ```. There are similar getter methods, which return the packed integer (or sometimes null, if the color isn't set). This then may need to be unpacked, e.g.; ```java; var rgb = pathObject.getColorRGB();; int red = ColorTools.red(rgb);; int green = ColorTools.green(rgb);; int blue = ColorTools.blue(rgb);; ```. A secondary problem is that it isn't clear whether alpha will be used or not. This is possible:; ```java; pathObject.setColorRGB(ColorTools.packARGB(127, 255, 0, 0));; pathClass.setColor(ColorTools.packARGB(127, 255, 0, 0));; ```; but it's not obvious whether the alpha will do anything. ### Describe the solution you'd like. It would be preferable to have something standardized, including the option to provide separate RGB values, e.g.; ```java; pathObject.setColor(red, green, blue); pathClass.setColor(red, green, blue); ```. This could be implemented quickly, deprecating the `PathObject.setColorRGB(Integer)` method. The main decision is whether to take 8-bit RGB values or floats/doubles as input. For now, I propose keeping `public Integer getColor()` - although `getRed()`, `getGreen()` and `getBlue()` methods could potentially be added. ### Describe alternatives you've considered. One way to enforce standardization would be through a `Colorable` interf",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1086:1007,green,green,1007,https://qupath.github.io,https://github.com/qupath/qupath/issues/1086,1,['green'],['green']
Energy Efficiency,"It could be done, but it would be fiddly to try to get the location of the bar and font size to exactly match what is displayed in QuPath's viewer (since this adapts dynamically based upon the zoom level and background color). And if it doesn't match what's in the viewer anyway, then I think a proper UI component that allows the user to specify the location, size, color etc. of the scalebar would be more useful. The overview image (top right) and pixel coordinate & value control (bottom right) have the same issues - a proper viewer 'snapshot' should really include all of them, if they are present, so the task starts to grow bigger. I'll think about it some more, but I currently think the only workarounds would involve duplicating code from existing JavaFX components and rewriting them in a Java2D-friendly way just for SVG export, which sounds be a bit painful to maintain. Since QuPath's minimally-customizable, auto-adjusting scalebar isn't exactly what everyone wants for creating figures anyway, I like the idea of designing something more specific for the task.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1272#issuecomment-1604129108:159,adapt,adapts,159,https://qupath.github.io,https://github.com/qupath/qupath/issues/1272#issuecomment-1604129108,1,['adapt'],['adapts']
Energy Efficiency,"It definitely seems to be entirely a result of the length of the variables vector/string/etc. Even reducing the Training Data - Maximum samples to 5, I still get the same error at the same number of variables. ; In the case of the provided data set, that occurs between two and three ""Scales"" being selected, and it does not matter which scales are selected. . Attempting to use the PCA option does not change the result, probably because it needs to _start_ with the complete set of different measurements, and fails _there_ rather than after PCA when using the reduced set. Loading data from a single image also results in the error. The final message is somewhat odd, and probably a result of the string passed to OpenCV failing? ; `WARN: No training data found - if you have training annotations, check the features are compatible with the current image.; `",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822:563,reduce,reduced,563,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092108822,1,['reduce'],['reduced']
Energy Efficiency,It may work if you open the image within a project and specify that OpenSlide should be the image server. This could have been the default in v0.1.2 and the underlying issue is that Bio-Formats does not support this particular sort of tiff fully. Parts of the error message also bring back memories. You may also reduce problems using Bio-Formats by putting the image inside another (sub)folder: https://github.com/ome/bioformats/issues/3343,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/382#issuecomment-561707434:313,reduce,reduce,313,https://qupath.github.io,https://github.com/qupath/qupath/issues/382#issuecomment-561707434,1,['reduce'],['reduce']
Energy Efficiency,"It shouldn't be file size. Under *Help &rarr; Show setup options* I can restrict the RAM available to QUPath to 1GB and can still open the image without problems. You can also try the memory monitor from https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. The log says `Not a file that OpenSlide can recognize`. It's not clear to me if *any* images are working for you using OpenSlide. I asked above: under the *Image* tab does it say *OpenSlide* beside the entry *Server type*? If you see that for any images, then we can conclude that OpenSlide is (at least partially) working. But if you always see *ImageJ server* or *Bio-Formats server*, then it probably isn't and that's the problem that needs to be solved. In that case, it would help to know if a separate installation of OpenSlide on your machine can read the image at all through any means.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371850256:191,monitor,monitor,191,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371850256,4,['monitor'],['monitor']
Energy Efficiency,"It won't load the pixel data if it doesn't need it, only the objects. However, it does this less efficiently than the old classifiers - and so will require *some* more memory. For example, I believe the old classifiers stripped away the ROIs from training objects, and therefore this saved some memory... so in practice it needed less than 200 MB per image. QuPath now probably does need the full 200 MB per image (but not 20 GB). I don't know how much RAM you have, and how much of it is given to pixels (rather than objects), so I can't estimate when this limit is reached in your case. Ultimately the new design will enable more powerful and flexible classifiers in future versions (because more information is available). We will also look to improve the efficiency in the future, and track the memory use better so that we can give more informative warnings before a crash. But all of this will take some time to write, and will not appear in v0.2.0. If there is a clear memory leak (and QuPath crashes with a small number of objects, or an exact error log can help us find a problem) then we'll try to fix it. But at this point, I don't know if that's the case.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-633901008:97,efficient,efficiently,97,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-633901008,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"It's not so much that QuPath is my baby - it is more the other aspect you allude to, i.e. that there are certain tasks that (realistically) only I can do at this time because they are entwined with QuPath itself, whereas others could work on things like ImageJ integration if they wanted. I'm not personally very interested in maximizing QuPath use or replicating what other software already does well, I'd prefer people use the right software for the job - and for QuPath to fill an unmet need. I personally still use and recommend Fiji a lot, and when I teach general bioimage analysis courses I use Fiji, not QuPath. I've considered a few times creating a QuPath-related update site for Fiji, but haven't found a compelling reason to do so. I've also learned that everything costs not only the time to create it, but also to support it; additionally, something like this can place constraints on how QuPath can be further developed if backwards compatibility needs to be maintained. This effort might distract from other efforts that are more likely to lead to a more compelling argument in favor of funding continued work, so I haven't done it. The main way that anyone can help is to make sure to [cite the _Scientific Reports_ paper](https://github.com/qupath/qupath/wiki/Citing-QuPath) whenever QuPath is used in any publication. I'm also very interested in any particularly exciting academic collaborations that may lead both to new functionality of general applicability being created, and also to joint publications that might help maximize the potential to obtain funding for continued development. But again I need to be selective; there are lots of things I am already working on and many more I would like to do, and in recent times my decisions are guided a lot by what I believe is best for ensuring the sustainability and (more importantly) usefulness of the project in the longer term.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-402686585:1820,sustainab,sustainability,1820,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-402686585,2,['sustainab'],['sustainability']
Energy Efficiency,"Just linked this in the forums as well, but if you can define how you want to draw the annotation within a text file (groovy script) you might be able to use:; https://groups.google.com/forum/#!searchin/qupath-users/command$20line$20|sort:date/qupath-users/lE5AJDcxA28/JR0UouPLAAAJ; to get started. The following positions the viewer (although you need to create the viewer first, see the whole file in the link below):; ```; viewer.setDownsampleFactor(downsample); viewer.setCenterPixelLocation(xCoordinate, yCoordinate);; ```; from: https://gist.github.com/Svidro/86fb224d69484ae5955631ce68d27054#file-slide-explore-groovy; which was modified from who knows where... I think Pete's memory monitor. Exporting simple annotations as coordinate arrays is fairly straightforward (and definitely on the forums somewhere), but I am not as sure about XML formatting...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/173#issuecomment-389972084:691,monitor,monitor,691,https://qupath.github.io,https://github.com/qupath/qupath/issues/173#issuecomment-389972084,2,['monitor'],['monitor']
Energy Efficiency,"Last commit avoids showing all the extra color transforms if the `ImageType` is `FLUORESCENCE`. This makes the behaviour of RGB and non-RGB fluorescence images consistent *except* with the limitation that channel colors cannot be adjusted for RGB images: they remain fixed to red, green & blue. However, the same transforms are displayed in the Brightness/Contrast dialog and channel names can be changed. Hopefully this is an improvement on the situation in v0.5.x and before, where channel names were fixed and many (usually irrelevant) 'channels' were displayed in the dialog. Screenshots below show the color is unavailable, while the name can be set. If the transforms are desirable, but the images aren't brightfield, then the `ImageType` can be set to `OTHER`. ### With `ImageType.FLUORESCENCE`; <img width=""330"" alt=""Renaming 'FLUORESCENCE' image"" src=""https://github.com/user-attachments/assets/eda6e7c6-c508-4364-9211-3c41f034d47d"">. ### With `ImageType.OTHER`; <img width=""330"" alt=""Renaming 'OTHER' image"" src=""https://github.com/user-attachments/assets/8014d5e8-9e11-481b-b69d-c74baa4fe309"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1659#issuecomment-2382998283:281,green,green,281,https://qupath.github.io,https://github.com/qupath/qupath/pull/1659#issuecomment-2382998283,1,['green'],['green']
Energy Efficiency,"Latest commit adds more options to restrict where live pixel classifier prediction is calculated. Previously, it could be restricted to annotations - but using their full bounding box. This could sometimes still result in very large regions being processed. ![annotations_bounds](https://user-images.githubusercontent.com/4690904/195979231-ee656727-83dd-4569-80d7-318beb8c4c6f.png). Now it's also possible to restrict using the annotation ROI directly (i.e. the ROI shape intersects the tiled region that may be processed). This can reduce the amount of processing required substantially in some cases. ![annotations_only](https://user-images.githubusercontent.com/4690904/195979232-ef0c6862-d715-47b9-a022-0f4267f1c47c.png). Both options still exist, since the more complex calculations to restrict the predicted regions could *potentially* slow things down in some cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970:533,reduce,reduce,533,https://qupath.github.io,https://github.com/qupath/qupath/pull/1076#issuecomment-1279704970,1,['reduce'],['reduce']
Energy Efficiency,"Many things are possible with scripting! The original classifier script is around somewhere, but here is a simplified version I have on my gist. I edited it a bit so that you can see how it would be used in your case. https://gist.github.com/Svidro/5b016e192a33c883c0bd20de18eb7764#file-classifier-sample-groovy; Note that in this case it was looking for Channel 2 spots, but you can adapt this to any channel or stain, or multiple channels of spots at the same time (Dual positive 1-3, etc)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/146#issuecomment-364010607:384,adapt,adapt,384,https://qupath.github.io,https://github.com/qupath/qupath/issues/146#issuecomment-364010607,2,['adapt'],['adapt']
Energy Efficiency,Maximum Memory (GB) in QuPath Setup can not be adapted,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175:47,adapt,adapted,47,https://qupath.github.io,https://github.com/qupath/qupath/issues/175,1,['adapt'],['adapted']
Energy Efficiency,"Minor changes:; * Use 'crop' rather than 'trim' with Tiler; * Turn this setting off by default with `PixelProcessor`. Major change:; * Convert `PluginRunner` to `TaskRunner`; * Provide `QPEx.createTaskRunner()` and `QPEx.createTaskRunner(int nThreads)` methods. The reasoning is that `PluginRunner` no longer really makes sense as a name: the class rather represents a simple and generic way to run tasks in parallel. It's also more general than in previous QuPath releases. The following script shows it in action:. ```groovy; def tasks = []; for (int i in 1..50) {; int n = i; tasks << () -> sleepyTask(n); }. def runner = createTaskRunner(); runner.runTasks(tasks). def sleepyTask(int n) {; Thread.sleep(250L); println ""I'm awake! And I'm task $n""; }; ```. When run interactively, this should show a progress dialog (after a short delay). But when using *Run for project* it will switch to using a command line task runner, and not generate a new dialog of its own. The number of threads can also be specified. For example, for single-threaded tasks we can use; ```groovy; def runner = createTaskRunner(1); ```. This is an easy way to provide a progress monitor for multiple tasks.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1360:1157,monitor,monitor,1157,https://qupath.github.io,https://github.com/qupath/qupath/pull/1360,1,['monitor'],['monitor']
Energy Efficiency,"Numerous changes aiming to reduce memory use, including:; * Preventing objects (and object hierarchies) from being retained for a time after an image has been closed; * Improving the efficiency of `ImageOps` with padding; * Parallelising pixel classification measurements. The last two of these should improve pixel classification generally, and making measurements in particular. It is the proposed fix for https://github.com/qupath/qupath/issues/1322. I obtained some rough timings using *Run for project* with 3 images and an extreme pixel classifier with 250 output channels:. ```groovy; setImageType('BRIGHTFIELD_H_E');; setColorDeconvolutionStains('{""Name"" : ""H&E default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.65111 0.70119 0.29049"", ""Stain 2"" : ""Eosin"", ""Values 2"" : ""0.2159 0.8012 0.5581"", ""Background"" : "" 255 255 255""}');; clearAllObjects();; resetSelection();; //createAnnotationsFromPixelClassifier(""My threshold"", 0.0, 0.0, ""INCLUDE_IGNORED"", ""SPLIT"") // Alternative option; createAnnotationsFromPixelClassifier(""My threshold"", 0.0, 0.0, ""INCLUDE_IGNORED""); selectAnnotations();; addPixelClassifierMeasurements(""Busy classifier"", ""Busy classifier""); println getAnnotationObjects().measurements; ```. With larger images / ROIs, the changes can result in huge speed improvements (tested using M1 Max, macOS 13.5.2):. ### v0.5.0-SNAPSHOT. ```; INFO: Starting script at Fri Sep 15 13:54:32 BST 2023; INFO: [[Busy classifier: Stroma %:57.11750411987305, Busy classifier: Stroma area µm^2:3.7282948E7, Busy classifier: Tumor %:42.88249588012695, Busy classifier: Tumor area µm^2:2.799117E7]]; INFO: Total run time: 14.97 seconds; INFO: Starting script at Fri Sep 15 13:54:47 BST 2023; INFO: [[Busy classifier: Stroma %:24.72903823852539, Busy classifier: Stroma area µm^2:122532.3984375, Busy classifier: Tumor %:75.27095794677734, Busy classifier: Tumor area µm^2:372967.65625]]; INFO: Total run time: 0.42 seconds; INFO: Starting script at Fri Sep 15 13:54:48 BST 2023; INFO: [[Busy cl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1332:27,reduce,reduce,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/1332,1,['reduce'],['reduce']
Energy Efficiency,"Ofcourse!; I see from the log now that all the objects were unclassified.; So I understand why I don't see any colours. But as the structures are quiet different I would think that it should be able to come up whit a classifier right?; ![image](https://user-images.githubusercontent.com/36917491/45081418-75871d80-b0f7-11e8-9ed9-373228da976e.png). Log-file:; INFO: Selected style: Modena Light; INFO: Performing update check...; INFO: Starting QuPath with parameters: []; ERROR: Openslide: Property not available: openslide.objective-power; INFO: Test reading thumbnail with openslide: passed (BufferedImage@77accd0e: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 200 height = 193 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); INFO: Returning server: OpenSlide for L:\basic\divg\CEMM-Lexor\SannetH\1. SANNE\Project 2. IHC Validation PICCOLO and COIN\Qupath PICCOLO\R-PICCOLO-16_CDX2-88_20x.tiff; INFO: Estimating H-DAB staining; INFO: Image data set to ImageData: Brightfield (H-DAB), R-PICCOLO-16_CDX2-88_20x; INFO: Will (re)compute TMA grid...; INFO: Processing complete in 1.26 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.dearray.TMADearrayerPluginIJ {""coreDiameterMM"": 0.7, ""labelsHorizontal"": ""1-16"", ""labelsVertical"": ""A-J"", ""labelOrder"": ""Row first"", ""densityThreshold"": 5, ""boundsScale"": 105}; INFO: Adding Rectangle to hierarchy; INFO: Requesting region for stain vector editing: ; INFO: 1932 nuclei detected (processing time: 3.82 seconds); INFO: Processing complete in 3.92 seconds; INFO: Completed!; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 0.0, ""includeNuclei"": true, ""smoot",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/210#issuecomment-418647572:534,power,power,534,https://qupath.github.io,https://github.com/qupath/qupath/issues/210#issuecomment-418647572,1,['power'],['power']
Energy Efficiency,"Path/extensions/qupath-extension-bioformats.jar; 12:25:43.923 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Added extension: /home/joelrv/QuPath/extensions/bioformats_package.jar; 12:25:43.943 [JavaFX Application Thread] [INFO ] q.l.i.s.BioFormatsOptionsExtension - Bio-Formats version 5.9.2; 12:25:44.261 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Selected style: Modena Light; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Performing update check...; 12:25:44.262 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathApp - Starting QuPath with parameters: []; 12:25:55.878 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-x; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.mpp-y; 12:25:55.879 [JavaFX Application Thread] [ERROR] q.l.i.servers.OpenslideImageServer - Openslide: Property not available: openslide.objective-power; 12:25:55.895 [JavaFX Application Thread] [INFO ] q.l.i.servers.OpenslideImageServer - Test reading thumbnail with openslide: passed (BufferedImage@58da6639: type = 1 DirectColorModel: rmask=ff0000 gmask=ff00 bmask=ff amask=0 IntegerInterleavedRaster: width = 194 height = 200 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0); 12:25:55.896 [JavaFX Application Thread] [INFO ] q.l.i.servers.ImageServerProvider - Returning server: OpenSlide for /home/joelrv/Downloads/bftools/test_pyramid_fullsize.tif; 12:25:56.155 [JavaFX Application Thread] [INFO ] q.lib.gui.helpers.DisplayHelpers - Estimating H-DAB staining; 12:25:56.537 [JavaFX Application Thread] [INFO ] qupath.lib.gui.viewer.QuPathViewer - Image data set to ImageData: Brightfield (H-DAB), test_pyramid_fullsize; ```; I not familiar enough with the code to understand what's happening, it's just so strange that it used to work before... In any case thanks for trying to adress the issue!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/279#issuecomment-472813709:2052,power,power,2052,https://qupath.github.io,https://github.com/qupath/qupath/issues/279#issuecomment-472813709,1,['power'],['power']
Energy Efficiency,"Pete,; Sorry, I am still learning how to post my queries in the forum, This was my; message. Can you advise please? Thank you very much, suba; Hello, I am able to load the images from the Qupath project, however, when; I double-click on the whole slide, I am getting an error message : **Unable; to build Image server: (view log below) for all the images but one that was; added recently to the project. Can anyone please suggest how to restore my; data please? Thank you, Suba; INFO: Initializing type adapters; INFO: Bio-Formats version 6.5.1; INFO: Loaded extension Bio-Formats options (Bio-Formats 6.5.1) (17 ms); INFO: Loaded extension Experimental extension (1 ms); INFO: Loaded extension ImageJ extension (44 ms); INFO: Loaded extension JPen extension (19 ms); INFO: Loaded extension Processing extension (28 ms); INFO: Loaded extension Rich script editor extension (235 ms); INFO: Loaded extension SVG export extension (1 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Trying to load project Z:\Kotb Lab\General\ALL INFECT and INFECT; images\INF 69 DR3 DR4 repeat for Ganesh manuscript Qupath data\dr3 gfap new; 042121\project.qpproj; INFO: Project set to Project: dr3 gfap new 042121-project; INFO: Image data set to ImageData: Brightfield (H-DAB), PR301S1 2021-04-23; 07.49.55.ndpi; WARN: Unable to open file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; with OpenSlide: URI has an authority component; ERROR: Load ImageData: Unable to build ImageServer for file://; undmed-files.med.und.edu/Basic%20Sciences/Kotb%20Lab/General/ALL%20INFECT%20and%20INFECT%20images/INF%2069%20DR3%20DR4%20repeat%20for%20Ganesh%20manuscript%20Qupath%20data/dr3%20gfap%20new%20042121/PR287S8%20-%202021-04-12%2009.52.58.ndpi; (args=[]) with requested provider; qupath.lib.im",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-827610434:503,adapt,adapters,503,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-827610434,2,['adapt'],['adapters']
Energy Efficiency,"Possibly controversial, possibly very welcome... Usually, the annotation line thickness remains constant at all zoom levels - whereas the detection line thickness increases and decreases when zooming in and out. This is partly to avoid having thick detection lines when zoomed out, and partly for performance reasons: we cache detections rendered at different resolutions. *However*, detections *are* painted 'live' (like annotations) when zooming in beyond full resolution. I find this can be annoying at times, because the default detection line thickness of 2 can be too much - and obscures details. I need to toggle detections on and off to see the pixels that overlap with the border, or else go to the preferences to reduce the line for some images... then go back to increase the line for the next images. So this PR causes detections to be painted more like annotations when upsampling. The result is that lines narrow to become subpixel when zooming in, and that it is possible to more accurately judge where the detection boundary really lies. Screenshots below, but they aren't the best examples - and it's better to play around with the behavior using different images to form an opinion as to whether this is better, worse, or pretty neutral. ## Previous. ![older-rendering](https://github.com/user-attachments/assets/4e637414-6e6a-46c3-9044-bb51db67fa6d). ## With this PR. ![new-rendering](https://github.com/user-attachments/assets/0fd890bc-76d2-4aff-885b-5d25580d0114)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1623:723,reduce,reduce,723,https://qupath.github.io,https://github.com/qupath/qupath/pull/1623,1,['reduce'],['reduce']
Energy Efficiency,"Potentially, but since ImageJ couldn't read any corresponding whole slide image (at least not at full resolution, in one go) then in general the ROIs would need to be scaled/translated to be useful. If that happens, then you would most likely either require the pixels as well (similarly scaled/cropped), or at least the information regarding scaling/translation so that they could be requested in the future. This all happens for you when send the region to ImageJ. Once there, you can save the image as a TIFF from within ImageJ (which will preserve any active ROIs/Overlays). You can also save an active ROI as a .roi file (_File &rarr; Save as &rarr; Selection..._), and use _Image &rarr; Overlay &rarr; To ROI Manager_ to send an overlay to the ImageJ ROI Manager - from which you can save individual ROIs, or all ROIs in a single zip file. Furthermore, the image that QuPath sends to ImageJ has everything set under _Image &rarr; Properties..._ that is required to determine its original origin in the whole slide image - therefore it gives the pixels if you want them. Therefore I think the functionality you need is already there (e.g. save the image QuPath sends as a TIFF, open it in any ImageJ/Fiji externally). Potentially if you have a very well-defined export need that could be scripted to reduce the manual steps. [My blog](https://petebankhead.github.io/qupath/scripting/2018/03/08/script-imagej-to-qupath.html) has some information about linking QuPath and ImageJ by scripting. Does that answer your question, or do you have something else in mind? If so, can you describe in more detail your preferred workflow?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/182#issuecomment-401535786:1305,reduce,reduce,1305,https://qupath.github.io,https://github.com/qupath/qupath/issues/182#issuecomment-401535786,1,['reduce'],['reduce']
Energy Efficiency,"Proposed support changing channel names for RGB images. Changing colors is still not allowed, because a packed (A)RGB representation is used. This aims to reduce the inconvenience of QuPath sometimes creating an RGB representation for fluorescence images where it would be desirable to use different channel names. See https://github.com/qupath/qupath-extension-omero/issues/25",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1659:155,reduce,reduce,155,https://qupath.github.io,https://github.com/qupath/qupath/pull/1659,1,['reduce'],['reduce']
Energy Efficiency,"QuPath has mostly been used with brightfield images stained with H&E or hematoxylin and DAB. Setting a third stain, or adapting to different stains, is not exactly as easy or intuitive as it could/should be (e.g. see [this discussion on Google Groups](https://groups.google.com/forum/#!topic/qupath-users/xfocO2S2kSQ)). Annoyances include:; * After setting a stain (e.g. hematoxylin) with one image type selected, switching the image type causes the values of that stain vector to be lost; * When setting a stain manually based on a small region of interest, double-clicking on the stain name gives the option to either set the stain from the vector or change its name... but not both; * The *Normalize OD colors* visualization option under *Brightness/Contrast* is particularly useful for the *Brightfield Other* image type, since it helps find areas where stain vectors could be set - but it doesn't appear for this image type; * It is possible in a script to set the image type to be (for example) *Brightfield H-DAB*, but give 3 different stain vectors; this image type should probably force the third vector to be the residual stain vector; * Commands such as *Create cytokeratin annotations* assume DAB will be used... this command could be considerably more general and useful than its name (and current implementation) suggests; * *Fast cell counts* has an option to detect on the sum of *Hematoxylin + DAB*... this can be quite useful, and may be worth adding to the general *Cell detection* command as another option; * There is no way to select previously-used stains... having a persistent list (similar to the classification list) would be nice",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/73:119,adapt,adapting,119,https://qupath.github.io,https://github.com/qupath/qupath/issues/73,1,['adapt'],['adapting']
Energy Efficiency,"QuPath is a Java application, and the memory behavior is complicated and implementation-dependent: https://www.baeldung.com/gc-release-memory. The memory monitor uses the `Runtime` class, and makes calls to `System.gc()` for garbage collection.; The [javadocs](https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Runtime.html#freeMemory()) contain statements like `""Calling the gc method may result in increasing the value returned by freeMemory`""... where that 'may' is interesting. In some cases (such as the tile cache), QuPath retains a (soft or weak) reference to objects for 'as long as it can' to help performance, but will release them before any out-of-memory error is produced. In short, this doesn't sound like a bug to me. Unless there can be shown to be a memory leak within QuPath itself, there are too many other possible reasons beyond our control why memory use reported by the JVM might increase.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105:154,monitor,monitor,154,https://qupath.github.io,https://github.com/qupath/qupath/issues/1646#issuecomment-2358859105,1,['monitor'],['monitor']
Energy Efficiency,Reduce annotations,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/274:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/issues/274,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce impact of tiling errors when processing large regions,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/767:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/767,1,['Reduce'],['Reduce']
Energy Efficiency,"Reduce memory use, improve pixel classification measurement performance",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1332:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1332,1,['Reduce'],['Reduce']
Energy Efficiency,"Reduce support to single-input, single-output models for now, to avoid a strict requirement for input names to be correct.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/809:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/809,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce synchronization in AbstractImageRegionStore,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1404:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/1404,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce unnecessary tile reads in AbstractImageServer,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/862:0,Reduce,Reduce,0,https://qupath.github.io,https://github.com/qupath/qupath/pull/862,1,['Reduce'],['Reduce']
Energy Efficiency,"Reformat code for consistency & readability, and include source with gradle wrapper.; Resolve (hopefully) some issues with task ordering and output directories to reduce errors and issues that occur with parallel builds.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/970:163,reduce,reduce,163,https://qupath.github.io,https://github.com/qupath/qupath/pull/970,1,['reduce'],['reduce']
Energy Efficiency,"See also https://github.com/openslide/openslide/issues/353 and the quote. > You can get the bounding box of the actual pixel data from the `openslide.bounds-{x,y,width,height}` properties. This is what the VIPS `autocrop` option uses to trim the slide to the available pixels. While OpenSlide's approach is internally consistent and may be justifiable, it doesn't seem to me that it is more 'correct' than using the 'bounding box of the actual pixel data'... and failing to crop by default to the actual pixel data seems at least as likely to make the problem you describe *worse* rather than better:. > Any change to the OpenSlide, the library, failure to derive these coordinates etc. breaks everything. As it currently stands, I think QuPath is more internally consistent by cropping - and this reduces rather than increases the dependency on OpenSlide, by making its use interchangeable with Bio-Formats. If there are cases where QuPath crops* and Bio-Formats or other popular libraries don't, then we might need to look at it again, but I don't know of any. *-From the description above, it sounds more like QuPath/Bio-Formats *don't pad* than that they crop...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200:798,reduce,reduces,798,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630779200,1,['reduce'],['reduces']
Energy Efficiency,"See also https://github.com/qupath/qupath/issues/1636. > Maybe just use the python version (like BIOP/Cellpose does). In that case you depend on a single python environment!. My understanding is that the BIOP CellPose extension will [write all the tiles to disk, then effectively run CellPose from a command line](https://github.com/BIOP/qupath-extension-cellpose/blob/b97efdad82df59ace5a149ca91f7fb963549bcc5/src/main/java/qupath/ext/biop/cellpose/Cellpose2D.java#L390). That may be easier for configuration, but it will surely reduce the benefits of using the GPU. It can be justified for CellPose because it is infeasible to recreate the required postprocessing in Java, but for InstanSeg we would suggest instead; 1. just using the CPU; 2. use InstanSeg [entirely from Python ](https://github.com/instanseg/instanseg) (generating QuPath-compatible output would be a different question for that repo or the forum, not this one); 3. discussing on the forum; perhaps someone there might figure out instructions that work where our existing ones do not. I will close this because there is no bug in QuPath described here that we can fix.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001:529,reduce,reduce,529,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352826001,1,['reduce'],['reduce']
Energy Efficiency,"See https://github.com/qupath/qupath/issues/1086; - Improve consistency between `PathClass` and `PathObject`, and reduce requirement to always set packed int values.; - Add `ColorTools.unpackRGB` method; - Add LogTools to facilitate printing log messages once",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1089:114,reduce,reduce,114,https://qupath.github.io,https://github.com/qupath/qupath/pull/1089,1,['reduce'],['reduce']
Energy Efficiency,"See https://github.com/qupath/qupath/issues/514; This is a bit of a hack to ensure that type adapters are registered for scripts run from the command line, without making any substantial API changes to the point release.; It remains the case that QP must be initialized somewhere.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/520:93,adapt,adapters,93,https://qupath.github.io,https://github.com/qupath/qupath/pull/520,1,['adapt'],['adapters']
Energy Efficiency,"Sounds like a potential memory leak, but I'm not aware of any that would cause this. > I still have 15GB free. Is this available to QuPath, or only to the operating system? You can track QuPath's memory use with *View &rarr; Show memory monitor* (although this won't include anything JavaCPP does... which mostly means things connected with pixel/object classifiers). There are some instructions for making more memory available to QuPath [here](https://qupath.readthedocs.io/en/stable/docs/reference/faqs.html#set-max-memory). If you're comfortable digging deeper, [VisualVM](https://visualvm.github.io) is extremely helpful for tracking memory in any running Java application (and is what I'd use if I could replicate the issue). Apart from that, how are you running positive cell detection - interactively, or from a script? How do you define the regions within which cells are detected?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/828#issuecomment-932368906:237,monitor,monitor,237,https://qupath.github.io,https://github.com/qupath/qupath/issues/828#issuecomment-932368906,1,['monitor'],['monitor']
Energy Efficiency,"Thank you for the reply.; Currently my aim is to cut identical areas in the same TMA slide but with different antigen captured.; All IHC are DAB-based, so all antigens are expressed in brown; (we are not using multicolored multiplex IHC). . We scan a TMA slide after IHC, bleach it clean, and then repeat IHC and scanning with the next antigen. ; So technically all our scanned slides are from one identical slide, but after the scanning process ; the slides are misaligned and aligning the whole slide (or even a TMA core) ; without sacrificing image quality was impossible; (at least with a normal desktop with i7 cpu and 32gb of ram). . For now, we manually cut parts of TMA image (about 4K x 4K pixels), align images, and overlap perfectly align images with cellprofiler.; ; I thought it would be much easier to cut the images from identical regions if tiles provided from; qupath could be moved and rotated (as a sequence of rough alignment before perfect alignment with; cellprofiler) since we are using literally putting rulers on monitors to get a similar region from different scans.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377162445:1038,monitor,monitors,1038,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377162445,1,['monitor'],['monitors']
Energy Efficiency,Thank you for your quick response! I followed the instruction in the link you gave and successfully converted the TIF to a pyramidal format using this command:; `convert before_converting.tif -compress jpeg -quality 75 -define tiff:tile-geometry=256x256 ptif:after_converting.tif `; But it can't be opened either. Here is the log:; ```; ERROR: Openslide: Property not available: openslide.mpp-x; ERROR: Openslide: Property not available: openslide.mpp-y; ERROR: Openslide: Property not available: openslide.objective-power; ERROR: QuPath exception; ```,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221#issuecomment-423805036:517,power,power,517,https://qupath.github.io,https://github.com/qupath/qupath/issues/221#issuecomment-423805036,1,['power'],['power']
Energy Efficiency,"Thank you so much for answering. Is that information that you asked about my memory?. -------------- S Y S T E M ---------------. OS:; Windows 10 , 64 bit Build 19041 (10.0.19041.3570); OS uptime: 5 days 10:23 hours. CPU: total 6 (initial active 6) (6 cores per cpu, 1 threads per core) family 6 model 158 stepping 10 microcode 0xea, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, erms, clmul, bmi1, bmi2, rtm, adx, fma, vzeroupper, clflush, clflushopt; Processor Information for all 6 processors :; Max Mhz: 3000, Current Mhz: 3000, Mhz Limit: 3000. Memory: 4k page, system-wide physical 7966M (772M free); TotalPageFile size 23838M (AvailPageFile size 7045M); current process WorkingSet (physical memory assigned to process): 3284M, peak: 3876M; current process commit charge (""private bytes""): 6219M, peak: 6444M. vm_info: OpenJDK 64-Bit Server VM (17.0.8+7) for windows-amd64 JRE (17.0.8+7), built on Jul 18 2023 21:02:32 by ""admin"" with MS VC++ 16.7 (VS2019). END. From: Pete ***@***.***>; Sent: Thursday, November 2, 2023 2:08 PM; To: qupath/qupath ***@***.***>; Cc: Farias Da Guarda, Suzete Nascimento ***@***.***>; Mention ***@***.***>; Subject: Re: [qupath/qupath] Load training in object classifier -> QuPath crashes (#493). External Email - Use Caution. @suzeteguarda<https://secure-web.cisco.com/15zJZ1AC2HfUFv9L0mLItqMCfEQMcq1aVBJmggNtWQuQ1aMdkxQL4M8DQsziZIjbQclRsiUgnd4btBVr7WmNM9GAmb5IdGegWqzsNoLW7i0t8ZduDtcd418DQ9BIIDpRAJC02UjlE2keamNPfGPyTA13hxoJ6aI6fRjs8P6PPD3ag1gjsZJuHqXh28XIp9ClIy6uiD9WiE2a29pnEogefoBAUSjm8iBfMR0HcxqAtG_TdnAk0f4Y8BA4E5sVwzFhbDhm_alns-l7jx4c65825lN1brlaamgEFYOcr-bx0yB5-ONuFLKVRdD6nCGWcI1iPAsoohE7nnVhyPIYtURWpKQ/https%3A%2F%2Fgithub.com%2Fsuzeteguarda> you could try posting your question on the forum at https://forum.image.sc/tag/qupath<https://secure-web.cisco.com/13_E9lRMQxY8xtZmKYPnw2mmwaiElPiHzTIMUOwQH_-6FzgRz4LkCsf_cFjrfUWLwo9750a0MmRr_eXTVN0eusQkomn-qYLuoCcVIKhtD0lyGLisH8Fxc-WF",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738:844,charge,charge,844,https://qupath.github.io,https://github.com/qupath/qupath/issues/493#issuecomment-1791396738,1,['charge'],['charge']
Energy Efficiency,"Thanks @carlocastoldi . The change looks a bit scary to me - although it's possible the existing behavior is already a bit scary. I see the [javadocs](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)) state the following regarding `Files.copy` with `REPLACE_EXISTING`; > The check for the existence of the file and the creation of the new file may not be atomic with respect to other file system activities. Nevertheless, I still feel uneasy about explicitly deleting before attempting any copy or move.... since 'may not be atomic' still gives me some hope that we won't end up in some unfortunate state. Corrupt data files was previously a somewhat common complaint, which has reduced a lot over recent releases. Is there any easy way for us to replicate the issue? Or, if not, could you give the full stack trace for what exception you get without these changes?. I wonder whether creating a method for copy/move that attempts the old behavior, and reverts to the new one if that fails for some reason.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339:788,reduce,reduced,788,https://qupath.github.io,https://github.com/qupath/qupath/pull/1449#issuecomment-1898792339,1,['reduce'],['reduced']
Energy Efficiency,"Thanks @tp81! It might take me a bit of time to look at this in detail, because I've switched focus temporarily to finish some papers. First thoughts: I've also had the issue of having to click on the viewer to activate it for backspace to work, I agree it would be best to avoid this. Minor concerns are; * it introduces public methods, and I'd rather reduce this as much as possible; * if it basically duplicates some code elsewhere, perhaps some refactoring elsewhere could promote reuse. There is also a bit of JavaFX/macOS weirdness when it comes to single-key accelerators (i.e. not requiring Cmd+Something to run a menu item). I'm not sure if it's relevant here but anything accelerator-related takes some extra cross-platform testing. I've assigned it to a v0.4.0 milestone to remind us to try to get this functionality in that release (tentatively planned for early next year).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/830#issuecomment-957188687:353,reduce,reduce,353,https://qupath.github.io,https://github.com/qupath/qupath/pull/830#issuecomment-957188687,1,['reduce'],['reduce']
Energy Efficiency,"Thanks for the tip. ; ![Skjermbilde (205)](https://user-images.githubusercontent.com/43611111/82345329-6e9c5d80-99f5-11ea-9534-a5303ee739bf.png); Seems like the 64 GB system memory fills up quite quickly, while the Qupath program itself in the windows systems monitor actually reads out as using much less memory (down below 1 GB at times) after a while (while 99 percent of the system memory still used).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481#issuecomment-630894744:260,monitor,monitor,260,https://qupath.github.io,https://github.com/qupath/qupath/issues/481#issuecomment-630894744,1,['monitor'],['monitor']
Energy Efficiency,"Thanks to @crobbins327 for pointing out the problem and solution. Slightly modified from proposed code at https://github.com/qupath/qupath/pull/1039. Testing is somewhat convoluted. I originally (wrongly thought) that the *Create tiles* command used this method, but it doesn't. However it's used internally for plugin commands (like cell detection) - so is potentially quite important. Testing is difficult, but a script like this can help:; ```groovy; def annotation = getSelectedObject(); int s = 64; def size = qupath.lib.geom.ImmutableDimension.getInstance(s, s); def rois = RoiTools.computeTiledROIs(annotation.getROI(), size, size, true, 0); def newAnnotations = rois.collect {r -> PathObjects.createAnnotationObject(r)}; annotation.clearPathObjects(); annotation.addPathObjects(newAnnotations); fireHierarchyUpdate(); ```. Using a rather convoluted example, and reducing the `geometry.getNumPoints() > 1000` threshold in `RoiTools` to trigger the code, tiles were previously missing:. ![wrong](https://user-images.githubusercontent.com/4690904/185470614-92ab1d77-e1d4-47da-b53a-af569900469b.png). With the adapted code they are included:. ![right](https://user-images.githubusercontent.com/4690904/185470631-3f9a4c95-cb18-49b0-ae3b-f0250cc03cfd.png). The problem hadn't surfaced before, probably because (as @crobbins327 pointed out) the wrong key was used with the map, and so the 'optimization' of handling row/column geometries didn't do anything. With that in mind, if this turns out to cause problems then the whole method could just be simplified and the unnecessary attempt at optimization from https://github.com/qupath/qupath/commit/a3366633851740e0d675b118b48133ce61211101 removed. @crobbins327 could you check if the fix looks ok to you as well?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1043:1114,adapt,adapted,1114,https://qupath.github.io,https://github.com/qupath/qupath/pull/1043,1,['adapt'],['adapted']
Energy Efficiency,"Thanks, I *only* tested it on Windows so far (which isn't much fun with a 13"" screen, no battery life, and continually pressing the keys that would correspond to the Mac shortcuts).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1419#issuecomment-1803804365:89,battery,battery,89,https://qupath.github.io,https://github.com/qupath/qupath/pull/1419#issuecomment-1803804365,1,['battery'],['battery']
Energy Efficiency,"Thanks, I see the image with the smallest file size is 44304 x 25156. Uncompressed, this would require at least 44304 * 25156 * 3 bytes of memory (assuming three, 8-bit channels) - or just over 3 GB. In practice, more memory would be required as the image is being read and uncompressed. I find that I cannot open it in QuPath or ImageJ, and Bio-Formats also fails with an error ; ```; java.io.IOException: Restart interval and markers invalid; 	at loci.formats.services.JPEGTurboServiceImpl.initialize(JPEGTurboServiceImpl.java:222); 	at loci.formats.in.TileJPEGReader.reopenFile(TileJPEGReader.java:144); 	at loci.formats.in.TileJPEGReader.initFile(TileJPEGReader.java:121); 	at loci.formats.FormatReader.setId(FormatReader.java:1421); 	at loci.formats.DelegateReader.setId(DelegateReader.java:300); 	at loci.formats.in.JPEGReader.setId(JPEGReader.java:87); 	at loci.plugins.in.ImportProcess.initializeFile(ImportProcess.java:499); 	at loci.plugins.in.ImportProcess.execute(ImportProcess.java:142); 	at loci.plugins.in.Importer.showDialogs(Importer.java:140); 	at loci.plugins.in.Importer.run(Importer.java:76); 	at loci.plugins.LociImporter.run(LociImporter.java:78); ```. JPEG is just not the right file format to use for images of this size. Even if the file *could* be opened, performance would be really bad because of the memory requirements. QuPath *could* handle a pyramidal TIFF that is much bigger very efficiently. The file names include the words 'cropped region', therefore I would suggest requesting the original files. QuPath might be able to handle them already. I will close this issue because it doesn't seem to be a bug in QuPath (comparable software also can't open the image). If you'd like to discuss formats / suggestions, the forum would be the best place: http://forum.image.sc/tag/qupath",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/834#issuecomment-955743430:1415,efficient,efficiently,1415,https://qupath.github.io,https://github.com/qupath/qupath/issues/834#issuecomment-955743430,1,['efficient'],['efficiently']
Energy Efficiency,"Thanks, nice idea to provide a way to get the rendering settings!. Happy to merge the rendering change; could you resubmit the pull request targeting it at the [`dev-0.3`](https://github.com/qupath/qupath/tree/dev-0.3) branch please?. There is a small issue with the JPEG export: it can quietly fail and produce an image with all zeros if the user specifies to use >3 interleaved channels. I realise this takes some effort on the user's part, but I think we need to protect them from this by logging a warning and switching to a valid export option, since in some cases requesting interleaved output may be much more efficient (because of the way in which QuPath requests channels all at once during writing, and planes must be written sequentially). Here is a script to replicate it:. ```groovy; // Can use an 8-bit version of ImageJ's 'Neuron' sample image to test this (5 channels). import qupath.lib.images.writers.ome.*. def path = buildFilePath(PROJECT_BASE_DIR, ""my_export.ome.tif""); new OMEPyramidWriter.Builder(getCurrentServer()); .channelsInterleaved() // Fails, gives image of zeros - channelsPlanar() would work; .compression(OMEPyramidWriter.CompressionType.JPEG); .build(); .writePyramid(path); ```. PS. How should `::dip` be interpreted in the comments?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/688#issuecomment-811660490:617,efficient,efficient,617,https://qupath.github.io,https://github.com/qupath/qupath/pull/688#issuecomment-811660490,1,['efficient'],['efficient']
Energy Efficiency,"Thanks, this definitely needs changed. My guess is it happened while I was trying to lift the limit of measured channels (previously it was fixed at 8). Now that channel names can be stored, do you think this should be used in the measurements, e.g. 'DAPI (C1)' rather than the number alone? If so, I'd say this should be consistent between intensity measurements & cell detection and both ought to be updated. Any classifiers that use older names would break, but that may not be so bad... inasmuch as it's not a good idea to reuse classifiers across versions (at least where there has been major changes in between). It _does_ mean that channel names must be correct from the start. So they should be more easily fix-able than they currently are. One concern I had about doing this was that channel names could be weird, or wrong, or duplicated, or empty... but perhaps appending 'C1', 'C2' etc. is enough to mitigate this potential issue. Or 'Channel 1' etc. but the names risk becoming even more long and unwieldy. > Additionally, I am not sure if this feature could be parallelized?. It already is... should should see a difference if you reduce the number of parallel threads to 1. Or is there something I've missed?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/301#issuecomment-479346732:1144,reduce,reduce,1144,https://qupath.github.io,https://github.com/qupath/qupath/issues/301#issuecomment-479346732,1,['reduce'],['reduce']
Energy Efficiency,"Thanks, this is an interesting idea and certainly seems to help in the scenario you describe. I'm apprehensive about merging quickly because it would be quite a significant change, and add complexity when we're trying to reduce it. So it will take some thought and I'd like to understand the problem better. > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. > Additionally, allowed to modify `ObjectClassifierCommand` too so that it can read all detections' measurements in the training set without uselessly reading the image files. The [`ObjectClassifier`](https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html) takes an `ImageData` by design because an object classifier *could* require pixel access... and this is very likely to be important in the future. This is because, when I rewrote object classifiers some years ago, I was thinking of future classifiers that will use deep learning models to classify based upon image patches - and not only measurements. That's why there is also a general [`FeatureExtractor`](https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html) class. This all basically works, we just haven't yet had time to wrap it up for wider use. > You can now pass a `openImage` boolean to `ProjectImageEntry.readImageData()` that, when false, just avoids getting the default image server, but just uses an instance of `ImageServerStub`. While not identical, the current `ProjectImageEntry.readHierarchy()` is intended for when you need objects but not everything else. This already lets you access all measurements etc. without touching the image. You can then create a new `ImageData` with a dummy `ImageServer` if you need to. So an alternative approach might be to try to script creating a cl",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2021998811:221,reduce,reduce,221,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2021998811,2,['reduce'],['reduce']
Energy Efficiency,"The core images are loaded in a background thread, and there is a 5 second timeout associated with this - see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L254). One possibility is that the timeout isn't generous enough in your case, and the cores are not being loaded fast enough. I don't know why that would be the case... it might be to do with the computer specifications, where the image is located (a network share?), or the access time required for the specific file format. Another option is that there are just too many cores. That is my best guess, since the scrollbar thumb on the right in your screenshot looks very small. There is a limit to the size of the cache used to store the TMA cores to reduce the risk of memory errors, see [here](https://github.com/qupath/qupath/blob/v0.1.2/qupath-gui-fx/src/main/java/qupath/lib/gui/commands/TMAGridView.java#L133) for the location in the code. Currently there is no way to increase the size of the cache through the user interface to support more cores in the grid view. Although, as is often the case, there is a way through a script. You could try running this to double the cache size to see if it helps.; ```groovy; qupath.lib.gui.commands.TMAGridView.MAX_CACHE_SIZE = 500; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/96#issuecomment-326105429:784,reduce,reduce,784,https://qupath.github.io,https://github.com/qupath/qupath/issues/96#issuecomment-326105429,1,['reduce'],['reduce']
Energy Efficiency,"The larger one opens fine for me with Bioformats, although I see three separate images. One is 4 channel fluorescence (red, green, blue, yellow), one is grayscale, and one is what I assume is a solid pink thumbnail overview.; Edit: Looking at it, the mono image seems to be a whole slide version of the image, but possibly the red or green channel only. I am guessing it was the low res ""targeting"" scan to find the tissue. ![image](https://user-images.githubusercontent.com/23145209/43429972-71551b16-941b-11e8-8d4d-70e1b4d6d027.png). This is with Version 0.1.3 (a couple of months old, so not up to date) however, and a fairly recent version of Bioformats. Win7 64bit. You can find more about 0.1.3 here: https://petebankhead.github.io/qupath/2018/03/19/qupath-updates.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/191#issuecomment-409052439:124,green,green,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/191#issuecomment-409052439,2,['green'],['green']
Energy Efficiency,"The primary cell detection command under *Analyze &rarr; Cell analysis &rarr; Cell detection* is primarily intended for brightfield images. However, it ought also to work for fluorescence. Under some conditions it does, namely when:. * the *first* fluorescence channel contains a nuclear staining (e.g. DAPI); * the *Max background intensity* parameter is either set negative or very high, or *Background radius* is negative; * the *Threshold* value is set appropriately high. This is because, in the case of fluorescence data, the command only looks for the first available channel within which to detect nuclei. Furthermore, the *Max background intensity* and *Threshold* parameters, by default, are selected for optical density units... which can be far away from being sensible values for fluorescence. The command should be adapted to use more sensible defaults in the case of fluorescence images, and to permit the selection of alternative channels.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/14:829,adapt,adapted,829,https://qupath.github.io,https://github.com/qupath/qupath/issues/14,1,['adapt'],['adapted']
Energy Efficiency,"There are now 2 versions of the same method:; - `getBinIndexForValue(double, double)`, which makes the assumption that all bins are of equal width (efficient).; - `getBinIndexForValue(double)`, which does not make assumptions regarding bin width and performs further checks (not efficient). Histograms now use the former method, as the latter one proved dramatically slower for opening some images (e.g. `CMU-1.svs`).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/719:148,efficient,efficient,148,https://qupath.github.io,https://github.com/qupath/qupath/pull/719,2,['efficient'],['efficient']
Energy Efficiency,"There shouldn't be any need to pass `z` and `t` as separate parameters to `splitRegionRequests` - rather `fullRequest` can be updated to include these, which would be good to reduce the number of necessary `int` parameters. Sorry, I don't really have the bandwidth to look at this in detail or handle pull requests in the near future, so this is likely to linger for a while.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/652#issuecomment-740743550:175,reduce,reduce,175,https://qupath.github.io,https://github.com/qupath/qupath/pull/652#issuecomment-740743550,1,['reduce'],['reduce']
Energy Efficiency,"Thinking a bit more, a compromise option could be:; * keep the primary selected object if it's still selected in the new group, and; * set the primary selected object if there is only one object in the selection group, but not if there is more than one. Might be safer than selecting an object at random, and reduce the instances where the primary selected object is null slightly. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869219402:309,reduce,reduce,309,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219402,1,['reduce'],['reduce']
Energy Efficiency,"This exists alongside `ObjectMerger` to provide more post-processing that is relevant when resolving the processing tiles. `OverlapFixer` prioritizes objects according to a `Comparator` (e.g. to prefer larger areas), then can do two main things when objects overlap:; * Drop the lower priority objects; * Clip the lower priority objects. The aim of this class is to do those tasks flexibly and efficiently.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1619:394,efficient,efficiently,394,https://qupath.github.io,https://github.com/qupath/qupath/pull/1619,1,['efficient'],['efficiently']
Energy Efficiency,"This is a continuation from #429. After the fix in there, we have seen the number of AreaROIs we cannot convert to JTS Geometry reduced from 187 to 24. Over thousands of ""naturally occurring"" ROIs, so I believe conversion is becoming really robust. On a typical error we still get, first we receive a warning ""Unable to fix geometry, (area before x, **area after 0.0**)"" and then a NullPointerException with a stacktrace like this (note, line numbers correspond to current 0.2.0m10 ""dev"" branch):. ```java; WARN: Unable to fix geometry (area before: 63.93478012084961, area after: 0.0); ERROR: QuPath exception; at org.locationtech.jts.geom.Envelope.intersects(Envelope.java:576); at org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator.locate(SimplePointInAreaLocator.java:71); at org.locationtech.jts.algorithm.locate.SimplePointInAreaLocator.isContained(SimplePointInAreaLocator.java:90); at qupath.lib.roi.GeometryTools$GeometryConverter.convertAreaToGeometry(GeometryTools.java:742); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:509); at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:493); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:457); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at qupath.lib.gui.viewer.tools.AbstractPathTool.setConstrainedAreaParent(AbstractPathTool.java:231); at qupath.lib.gui.viewer.tools.MoveTool.mousePressed(MoveTool.java:138); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$7(AbstractPathTool.java:441); ...; ```. [This is an example serialized ROI](https://github.com/qupath/qupath/files/4442109/broken_area_roi_Liver_Necroses_mf_hp_01_0.ser.tar.gz) that corresponds to this image (this kind of complex geometries happen often in our dataset, blame nature and our super-careful pathologists). ![Screenshot 2020-04-07 at 06 57 48](http",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434:128,reduce,reduced,128,https://qupath.github.io,https://github.com/qupath/qupath/issues/434,1,['reduce'],['reduced']
Energy Efficiency,"This is a fairly major change to incorporate IDs for objects. The purpose is to make it much easier to match up objects whenever some further analysis is done elsewhere (e.g. classification or clustering in Python). I've attempted to ensure both forwards and backwards compatibility by storing the ID in the metadata map. This is somewhat inefficient, but means that data files can be reopened in earlier QuPath versions. A future QuPath release might change this to a more efficient representation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/959:474,efficient,efficient,474,https://qupath.github.io,https://github.com/qupath/qupath/pull/959,1,['efficient'],['efficient']
Energy Efficiency,"This is a mystery to me.... You could try launching it from the command line. To help ensure OpenSlide can be loaded successfully, it is best to do this from within the 'app' directory found within the QuPath installation. So on Windows for v0.2.0-m2 you'd use something like this at the command prompt:; ```; cd path\to\qupath\app; ..\runtime\bin\java -Xmx4G -jar qupath-0.2.0-m2.jar; ```; This should attempt to start QuPath with a maximum of 4GB RAM... which of course you can adjust to whatever you need. The value show appear under 'Show setup options', and you can also visualize memory use with https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html. Does starting the software this way make any difference to the memory available?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/321#issuecomment-495874974:675,monitor,monitor,675,https://qupath.github.io,https://github.com/qupath/qupath/issues/321#issuecomment-495874974,1,['monitor'],['monitor']
Energy Efficiency,"This is the macro shown above, included as an example:; ```java; /*; * ImageJ macro to apply an automated threshold to detect a single region.; * You will need to return the active Roi to see the results in QuPath.; */. // Define method (e.g. ""Triangle"", ""Otsu""...); method = ""Otsu"";. // Check if the image has a property specifying a dark background; // Override this by setting the value to true or false; if (Property.get(""qupath.image.background"")==""dark""); darkBackground = true;; else; darkBackground = false;. // Ensure 8-bit grayscale; resetMinAndMax();; run(""8-bit"");. // Create Roi from threshold; if (darkBackground); setAutoThreshold(method + "" dark"");; else; setAutoThreshold(method);; run(""Create Selection"");; ```; This effectively makes it possible to apply any of ImageJ's auto thresholding methods to any region of an image (or the entire image) - adapting for brightfield or fluorescence based on the image type. The resolution and channel can be specified from within QuPath's UI when the region is being sent.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1682#issuecomment-2425148249:866,adapt,adapting,866,https://qupath.github.io,https://github.com/qupath/qupath/pull/1682#issuecomment-2425148249,1,['adapt'],['adapting']
Energy Efficiency,This isn't a bug - by default annotations created this way are 'locked' to reduce the risk of editing them accidentally. There is some more information about locking [here](https://github.com/qupath/qupath/wiki/Working-with-objects#editing--locking-objects). You can right-click on the image and choose *Annotations &rarr; Unlock* if you need to be able to edit a locked annotation.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/82#issuecomment-314169636:75,reduce,reduce,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/82#issuecomment-314169636,1,['reduce'],['reduce']
Energy Efficiency,"This pull request lets a user pass not only a Groovy script name via the qupath-console command line arguments, but also the script's arguments via a `-a` or `--args` option followed by quoted string. This string is then split on whitespace into a list of strings (unless a block is surrounded by \\"" \\"" escaped quotes) and passed to the Groovy interpreter as the global variable args. When no arguments are passed to a script, the global variable args is an empty list. With this change, the integrated script editor / interpreter also gets an empty, global args variable. I explained in https://forum.image.sc/t/using-command-line-parameters-with-a-groovy-script-in-qupath/45949/4 why this is desirable. Feel free to merge this pull request, or to adapt the idea, *any way you wish*.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/647:751,adapt,adapt,751,https://qupath.github.io,https://github.com/qupath/qupath/pull/647,1,['adapt'],['adapt']
Energy Efficiency,"This revises the approach in https://github.com/qupath/qupath/pull/1659 in the latest attempt to fix https://github.com/qupath/qupath-extension-omero/issues/25. ## Purpose. With this PR, RGB images that are set to have the type 'Fluorescence' now behave much more similarly to non-RGB images, and it is possible to set both channel names and colors. However all the other image type options remain, e.g. Brightfield H&E. If one of these is selected, then all channel name/color customisations are ignored - and the image behaves as a regular RGB. ## Risks & assumptions; * Querying channel names & colors for an RGB `ImageServer` is no longer guaranteed to return `Red`, `Green` or `Blue`; * Custom channel names for an RGB `ImageServer` are also not guaranteed to be represented in the viewer; rather, this only occurs if the image type is `Fluorescence`; * This does *not* provide a way to convert a BGR image to RGB from the perspective of any analysis. `ImageServer.readRegion()` requests should still return the same packed int (A)RGB image as before - the main difference is how things are rendered in the viewer.; * A pixel classifier that is trained on an image with custom RGB channel names will only work on an image with the same custom channel names*. > *-Caveat: this can give unexpected results if a pixel classifier is applied to two RGB images exist in a project, and one has different channel names. Then, if the classifier is applied successfully to one image, it can *appear* to work on the second image because cached tiles are used - so the mismatched channel names are not identified. ## Example. Example using the ImageJ 'Fluorescent Cells' image, flattened to RGB. ### Image type set to 'Fluorescence', channels adjusted; ![RGB-fluorescence](https://github.com/user-attachments/assets/d1118dc8-a661-4129-a0ec-9fab28550a31). ### Same image with type set to 'Other'; ![RGB-Other](https://github.com/user-attachments/assets/8e44ada9-33e5-4b54-8f0b-695c5849edfb)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1669:672,Green,Green,672,https://qupath.github.io,https://github.com/qupath/qupath/pull/1669,1,['Green'],['Green']
Energy Efficiency,"This should always find a point on the ROI and connect the name to that. This should make it easier to see which object is named, especially if the object has disconnected parts and holes. The last commit uses the selected object color to further reduce ambiguity.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1532#issuecomment-2129632815:247,reduce,reduce,247,https://qupath.github.io,https://github.com/qupath/qupath/pull/1532#issuecomment-2129632815,1,['reduce'],['reduce']
Energy Efficiency,"Trying to run v0.2.0m10 with the Google Cloud Healthcare API extension installed crashes ""silently"" QuPath. This is so because the extension has not been adapted to the new QuPath API, but one needs to look at the logs (or manually run java to get them on the CLI) to figure out. I think we could improve this by:; - Being resilient to extension errors at start time and list problematic ones with suggestions of how to look for help.; - Maybe introducing some sort of protocol for extensions to check if they are compatible with current QuPath (although this likely would add some overhead to extension maintainers). I see this would actually be a ""soft"" restriction asking the user whether to disable an extension or run it at her own risk.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/454:154,adapt,adapted,154,https://qupath.github.io,https://github.com/qupath/qupath/issues/454,1,['adapt'],['adapted']
Energy Efficiency,"Upon further exploration, removing 'Original RGB' as the 'first' available channel could be more problematic/confusing whenever image types are changed. However, I think there's no justification for `Normalized OD colors` being available. Therefore proposed 'fix' is just to remove that as an option when using RGB fluorescence images. Channel toggling is still possible, it just involves adding one (i.e. 2 for red, 3 for green, 4 for blue). This doesn't feel optimal, but does feel less scary in the short term at least. ### Before; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 32 08"" src=""https://user-images.githubusercontent.com/4690904/178557437-e19f71c1-f733-4483-9fbb-3ef04943bfb4.png"">. ### After; <img width=""1732"" alt=""Screenshot 2022-07-12 at 18 31 48"" src=""https://user-images.githubusercontent.com/4690904/178557465-7937107a-bc8c-43c2-a658-cc5572536ddd.png"">",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909:423,green,green,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/1006#issuecomment-1182093909,1,['green'],['green']
Energy Efficiency,"Upon further investigation, memoization can greatly reduce the severity of the problem - which is probably why it hasn't generated more complaints.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/865#issuecomment-996635041:52,reduce,reduce,52,https://qupath.github.io,https://github.com/qupath/qupath/issues/865#issuecomment-996635041,1,['reduce'],['reduce']
Energy Efficiency,"Using OS-2.ndpi with ~150k cells, the following script requires **12-15 seconds** on a Mac Studio:; ```groovy; import qupath.lib.gui.tools.MeasurementExporter; import qupath.lib.objects.PathCellObject. def project = getProject(); def imagesToExport = [getProjectEntry()]; def separator = ""\t"". def columnsToInclude = new String[]{""Name"", ""Class"", ""Nucleus: Area""}; def exportType = PathCellObject.class; def outputPath = buildFilePath(PROJECT_BASE_DIR, getProjectEntry().getImageName() + "".tsv""); def outputFile = new File(outputPath). def exporter = new MeasurementExporter(); .imageList(imagesToExport) // Images from which measurements will be exported; .separator(separator) // Character that separates values; .includeOnlyColumns(columnsToInclude) // Columns are case-sensitive; .exportType(exportType) // Type of objects to export; .exportMeasurements(outputFile) // Start the export process. print ""Done!""; ```. By contrast, the following exports something similar but takes **0.6-0.7 seconds**:. ```groovy; // Some kind of file path for the current image; def name = getProjectEntry().getImageName(); name = GeneralTools.getNameWithoutExtension(name); def path = buildFilePath(PROJECT_BASE_DIR, name + '.tsv'). def cells = getCellObjects(); def measurements = ['Nucleus: Area']. try (def writer = new PrintWriter(path)) {. // Write header; def sb = new StringBuilder(); sb.append('Class'); for (def measurementName in measurements) {; sb.append('\t'); sb.append(measurementName); }; writer.println(sb.toString()); ; // Write measurements; for (def cell in cells) {; sb.setLength(0); sb.append(cell.getPathClass()); for (def measurementName in measurements) {; sb.append('\t'); sb.append(cell.getMeasurementList().getMeasurementValue(measurementName)); }; writer.println(sb.toString()); }; ; }; println ""Written to $path""; ```. Some overhead is expected when using `MeasurementExporter`, but it should be reduced.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1045#issuecomment-1230162351:1912,reduce,reduced,1912,https://qupath.github.io,https://github.com/qupath/qupath/issues/1045#issuecomment-1230162351,1,['reduce'],['reduced']
Energy Efficiency,"Using existing channel names (e.g. 'Red', 'Green', 'Blue') for color deconvolution can confuse brightness/contrast settings",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1245:43,Green,Green,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/1245,1,['Green'],['Green']
Energy Efficiency,"We are using the following script - adapted from a script on image.sc : . ```groovy; // File: tileAnnotation2.groovy. import qupath.lib.gui.QuPathGUI; import qupath.lib.gui.viewer.QuPathViewer; import qupath.lib.objects.PathAnnotationObject; import qupath.lib.objects.PathObject; import qupath.lib.objects.PathObjects; import qupath.lib.roi.interfaces.ROI; import qupath.lib.roi.RoiTools. // Adjust THIS (n : Number of Tiles); int n = 10; def trimToROI = true; //parentClass = ""IL-left""; childClass = ""Tiles"". // Get the QuPath viewer and check if an object is currently selected; QuPathViewer viewer = QuPathGUI.getInstance().getViewer(); def objSelected = viewer.getSelectedObject(); parentClass = objSelected.getPathClass(). // Calculate the width and height of the ROI; if (objSelected != null && objSelected instanceof PathAnnotationObject){; ROI roi = ((PathAnnotationObject)objSelected).getROI(). int w = roi.getBoundsWidth(); int h = roi.getBoundsHeight(). int tW, tH. // devide tiles based on the width ; tW = Math.floor(w/n)+1; tH = h. // Create a list of ROIs by using the makeTiles method from the RoiTools class, which divides the ROI into tiles based on the specified width and height.; List<ROI> pathROIs = RoiTools.makeTiles(roi, tW, tH, trimToROI). // Create a list of PathObject tiles and assigns a name to each tile; List<PathObject> tiles = new ArrayList<>(pathROIs.size()). Iterator<ROI> iter = pathROIs.iterator(); int idx = 0; while (iter.hasNext()) {; try {; PathObject tile = PathObjects.createAnnotationObject(iter.next(), getPathClass(childClass)) ; if (tile != null) {; idx++; tile.setName(""Tile "" + idx); tiles.add(tile); }; } catch (InterruptedException e) {; lastMessage = ""Tile creation interrupted for "" + objSelected; return; } catch (Exception e) {; iter.remove(); }; }. // Add the tiles to the selected annotation object and update the viewer; ((PathAnnotationObject)objSelected).addPathObjects(tiles);; viewer.getImageData().getHierarchy().fireHierarchyChangedEven",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178:36,adapt,adapted,36,https://qupath.github.io,https://github.com/qupath/qupath/issues/1277#issuecomment-1621818178,1,['adapt'],['adapted']
Energy Efficiency,"We've made some progress on improving OpenSlide support, but there are a few issues that will need sorting out before release. I'll try to summarise what I've been working on in a semi-lucid way... ## Java-C interface. We plan to switch from JNI to JNA to wrap OpenSlide. This seems to reduce the complexity of loading openslide, and has minimal overhead for us, as well as probably making it easier to access new OpenSlide features. ## Build process. I have forked and modified `openslide-winbuild` to try to make binaries with fewer dynamically-linked subdependencies for Mac and Linux. I've moved some of this code to a [non-forked repo](https://github.com/alanocallaghan/openslide-crossplatform-builds), as most of it is unlikely to be useful upstream (though I'm of course happy to contribute it if so). ## Windows. The self-contained builds provided by OpenSlide work well here, as do binaries from my forked repo, with the proviso that we need to load them from a path rather than a JAR, as the JNA library loading code will not find `winpthreads` or `ssp` if we try to load from a jar on the classpath. ## Mac. x86 and M1 builds using the same meson wrap system as Windows seem to work fairly well at first glance (see [x86](https://github.com/alanocallaghan/openslide-jna/actions/runs/6175143420/job/16761349958) and [m1](https://app.circleci.com/pipelines/github/alanocallaghan/openslide-jna/26/workflows/aafe7473-6e23-4897-91bd-b66d8456e2ce/jobs/26) build test runs). However, as Pete has pointed out, they have a number of weird dependencies, some of which are homebrew directories:. ```; otool -L /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib; /Users/petebankhead/Downloads/openslide-natives/openslide-natives-darwin-aarch64/darwin-aarch64/libopenslide.dylib:; 	/lib/libopenslide.0.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 131",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:286,reduce,reduce,286,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['reduce'],['reduce']
Energy Efficiency,"What is really interesting with the interaction with Cellprofiler is that we could use already developed and validated pipelines without starting from scratch. We have delopped a few extra CP python modules to handle specific analytical problems. The new version of CP is entirely python based. They do not support ImageJ anymore (no need to deal with javabridge which was a headache for us for while) and very attractive to deploy on a cluster environment. But what you suggest is a good idea, i.e. add it as a new feature request and see how it goes from there. But to my opinion the really interesting aspect with CP and the underlying python+addition libraries (so far) is the computational one, i.e. memory consumption and parallelisation. It would be very efficient to handle a very granular analysis (down to cell/organelle level) in python. We are running with up to 1*10^6 #objects per slide and you quickly go up to 12GB of RAM consumption for a single process in QuPath. The tiling of the slide before analysis is something I'm exploring with QuPath. The streamlining of QuPath and python is an excellent idea. It would allow interaction with CellProfiler modules and other python packages. . Great work. It's being very helpful to us. The interface is great and the other technical problems you can always find a solutions in one way or another even if it is not optimal.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350242806:712,consumption,consumption,712,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350242806,3,"['consumption', 'efficient']","['consumption', 'efficient']"
Energy Efficiency,"Which version of QuPath are you using? In recent milestones there is a [memory monitor command that can be used to clear the cache directly](https://petebankhead.github.io/qupath/2019/11/02/fifth-milestone.html#memory-monitor--show-input). In general, QuPath retains image tiles cached in memory until that cache is full, after which they are deleted. It does *not* empty the cache when an image is closed, because it's quite possible the same image might be reopened later - and in general it isn't needed to do so. This behavior is intentional. In v0.2.0-m8 you can adjust the proportion of memory given to this tile cache under *Edit &rarr; Preferences...*. One potential explanation is that QuPath generally stores some pieces of information (e.g. a thumbnail) about previously-opened files outside the normal tile cache, and these might not be cleared - but usually they are very small and so don't cause a problem. But I have seen rare instances were .czi files read by Bio-Formats have huge memory requirements. To check this, can you look to see the file size for one of the `.bfmemo` files created by Bio-Formats? There are paths shown in the log message you give. Usually each file should be just a few MB in size.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/393#issuecomment-576002136:79,monitor,monitor,79,https://qupath.github.io,https://github.com/qupath/qupath/issues/393#issuecomment-576002136,4,['monitor'],"['monitor', 'monitor--show-input']"
Energy Efficiency,"With the latest commit I also added an option in the CLI interface to run the script for the whole project without accessing the image files.; ```bash; ./gradlew run --args=""script -p '/home/castoldi/426FC/project.qpproj' -n -c 'import qupath.imagej.tools.IJTools; println IJTools.convertToImagePlus(getCurrentServer(), RegionRequest.createInstance(getCurrentServer(), 16))'""; ````; output:; ```; > Task :qupath-app:run; 14:08:12.506 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting default Locale to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for FORMAT to en_US; 14:08:12.507 [main] [INFO ] qupath.lib.gui.prefs.PathPrefs - Setting Locale for DISPLAY to en_US; 14:08:12.513 [main] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 31; 14:08:12.513 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8000.00 MB (25.0% max memory); 14:08:12.525 [main] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:opencv:4.6.0-1.5.8 do not match.; Warning: Versions of org.bytedeco:javacpp:1.5.9 and org.bytedeco:openblas:0.3.21-1.5.8 do not match.; 14:08:12.860 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.1 FC.czi - Scene #1 (0/48); 14:08:13.205 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files.; [...]; 14:08:24.832 [main] [INFO ] qupath.ScriptCommand - Running script for SILVA_426.6 FC.czi - Scene #8 (48/48); 14:08:25.124 [main] [ERROR] qupath.ScriptCommand - The script tried to read pixels off an image while also requiring to run the script without accessing the image files. BUILD SUCCESSFUL in 18s; 34 actionable tasks: 10 executed, 24 up-to-date. ~/Projects/qupath light-script-runner* 19s; ❯ ; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385:978,adapt,adapters,978,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022842385,1,['adapt'],['adapters']
Energy Efficiency,"Yeah, I don't think it's possible without boxing - and better to avoid that. Although since they aren't identical, could you add a corresponding test for the doubles function?. It would also be good to extend the test to handle different channels... One a good way to do that is to create an RGB `BufferedImage` and then draw onto it with `Graphics2D`, after setting the foreground color to be `Color.GREEN` (for example). Similar code is at https://github.com/qupath/qupath/blob/67a1ed7ead8e28c54d120b21d08b7d41562eb8c3/qupath-core/src/test/java/qupath/lib/awt/common/TestBufferedImageTools.java#L176 but the type should be `BufferedImage.TYPE_INT_ARGB`. Sorry to keep adding more, but I think the code is looking good - and it'll be nice to have it more well-tested than many other methods.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1319#issuecomment-1711869385:401,GREEN,GREEN,401,https://qupath.github.io,https://github.com/qupath/qupath/pull/1319#issuecomment-1711869385,1,['GREEN'],['GREEN']
Energy Efficiency,Yes Svidro. Thanks. Positive Pixel count needs at least one hematoxylin pixel to work within a ROI. ; I reduced the threshold for H - now each ROI has a result. ; Acutally I did not need H. But it does not matter. . Thank you.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/111#issuecomment-342661285:104,reduce,reduced,104,https://qupath.github.io,https://github.com/qupath/qupath/issues/111#issuecomment-342661285,1,['reduce'],['reduced']
Energy Efficiency,"Yes and no... not in any publicly available way, and it remains on my todo list before the next release. This is taking longer than I'd hope as I find more and more to do, but some talks and workshops in March give me a pretty hard deadline.... However, amidst all the changes I'm making for the next release I've introduced an option to 'retain the display settings' when opening a new image. This means that if you have an image open with certain brightness/contrast settings (and color channels turned on/off), then if you open another image in the project it will (optionally) keep the settings constant:; https://github.com/petebankhead/qupath/commit/5750e42574cf34f9c868c9d2b133da3daaecf5e1. My hope is that it reduces the need to apply settings across all images in a project through a script, because the min/max settings (optionally) don't automatically change per image. How does that sounds to you?. Alongside that, I've added the ability to turn on/off multiple channels at once (by selecting them and right-clicking), and given a bit more control on what the 'Auto' button does when adjusting brightness/contrast per channel. I think these changes make the Brightness/Contrast dialog considerably easier to use; at least, I find it less annoying now than it previously was. (I still do need to revisit saving settings though, because it needs to be possible to set channel names if these are wrong or missing. And if it's possible to save channel names, it may as well be possible to save display settings per channel as well...)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-453637134:717,reduce,reduces,717,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-453637134,1,['reduce'],['reduces']
Energy Efficiency,"Yes, I have been seeing the same thing with about the same frequency in .m2, but haven't found a way to make it happen consistently. It seems to happen more frequently with more objects but other than that... If this is the same error I am thinking about, the whole Viewer window becomes non-interactable (exceptions pop up constantly if you try to click in the window) after it happens, and only restarting QuPath resolves it. ** Nix that, this is a different error, though I did just run into the same thing.; `qupath.lib.plugins.objects.ShapeFeaturesPlugin {""area"": true, ""perimeter"": true, ""circularity"": true, ""useMicrons"": true}; INFO: Possible regularization value: 7.890585871004013; INFO: 490 tiles created (processing time: 3.07 seconds); INFO: Processing complete in 3.11 seconds; INFO: Completed!; INFO: ; qupath.imagej.superpixels.SLICSuperpixelsPlugin {""sigmaMicrons"": 1.0, ""spacingMicrons"": 5.0, ""maxIterations"": 20, ""regularization"": 0.9, ""adaptRegularization"": true}; INFO: Processing complete in 4.87 seconds; INFO: Completed!; ERROR: QuPath exception; at java.base/java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719); at java.base/java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:741); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1045); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:161); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:219); at qupath.lib.gui.viewer.QuPathViewer.paintViewer(QuPathViewer.java:1670); at qupath.lib.gui.viewer.QuPathViewer.paintCanvas(QuPathViewer.java:413); at qupath.lib.gui.viewer.QuPathViewerPlus.paintCanvas(QuPathViewerPlus.java:249); at qupath.lib.gui.viewer.QuPathViewer.lambda$repaint$4(QuPathViewer.java:501); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Native ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/307#issuecomment-484610786:956,adapt,adaptRegularization,956,https://qupath.github.io,https://github.com/qupath/qupath/issues/307#issuecomment-484610786,1,['adapt'],['adaptRegularization']
Energy Efficiency,"Yes, the cached tiles will be generated only when needed - but at different magnifications (so different tiles may be required based upon the field of view and zoom level). But assuming that when the circle appears in the GIF that means your mouse is pressed, I haven't seen this behavior before and I haven't been able to replicate it on my (much less powerful) computer.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-614158136:353,power,powerful,353,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-614158136,1,['power'],['powerful']
Energy Efficiency,"Yes, there may be an extra memory leak in there causing trouble... I've also seen some Bio-Formats readers be rather more 'heavyweight' than others, meaning that if the image reading is parallelized this can be much more memory-hungry (since a separate reader is required per thread). In one case, the size of a .bfmemo file for a Zeiss .czi image revealed each reader was taking 1GB... and multichannel fluorescence images also need potentially much more memory to cache tiles suitably. But whatever the cause, it shouldn't fail as badly as it does. How much memory is available to QuPath?. This may also be of some use: https://petebankhead.github.io/qupath/scripting/2018/03/06/script-memory-monitor.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493950996:695,monitor,monitor,695,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493950996,1,['monitor'],['monitor']
Energy Efficiency,"You can use the built-in memory monitor to investigate this (and also to reclaim memory), although best would be to build m10-SNAPSHOT from the `dev` branch and see if the issue remains there. With m10 you'll also be able to use [VisualVM](https://visualvm.github.io) for profiling.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-615275446:32,monitor,monitor,32,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615275446,1,['monitor'],['monitor']
Energy Efficiency,"You could try this script as a starting point: https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d. Or the first script here: https://petebankhead.github.io/qupath/scripting/2018/03/13/script-export-import-binary-masks.html. Both are written in Groovy, but I guess could be adapted for Jython. If these don't do what you need, the answer will depend on the details of what you want to export and for what purpose, e.g.; * a downsampled version of the whole image, a selected annotation, or all annotations in the image?; * an RGB or multichannel fluorescence image; if fluorescence, then just a snapshot (appearance) or the original pixel values?; * how should the image files for each region be named?; * do you need the overlay (objects) painted on top or not?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/200#issuecomment-411333092:292,adapt,adapted,292,https://qupath.github.io,https://github.com/qupath/qupath/issues/200#issuecomment-411333092,1,['adapt'],['adapted']
Energy Efficiency,"[`TMACoreObject`](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/objects/TMACoreObject.java) has a 'Unique ID' property, which was always confusingly named. Its original purpose was to uniquely identify cores belonging to the same patient - which meant that multiple cores could (and often should) have the same unique ID. Which meant a curious interpretation of 'unique'. It's useful because it makes it possible to group cores with the same ID, e.g. to compute summary measurements. I used this a lot in the original QuPath *Scientific Reports* paper, but haven't really used it myself much since then. Since all `PathObject` instances now have an ID property, which should be unique, the use of 'Unique ID' as a property for a TMA core becomes even more confusing. I'd like to change it as soon as possible. Doing so now fits with recent work to rename key methods to improve consistency and reduce ambiguity, e.g.; * https://github.com/qupath/qupath/pull/1109; * https://github.com/qupath/qupath/pull/1111. My proposal is to change **Unique ID** to become **Case ID**. I know others use the TMA functionality more often than me (e.g. https://github.com/qupath/qupath/issues/1083) so I want to leave this issue here for a day or two to a) give a reference explaining the change, and b) ask for feedback as to whether it's a good/bad idea, or there's a better name than than *Case ID*. I'd like to stay away from *Patient ID* because it feels quite human-specific to me, and I have some concerns that it encourages the use of identifiers that might be sensitive - and really any identifier used in QuPath ought to be anonymised. Making the change involves an extra decision. The easy bit is to create methods for `TMACoreObject.setCaseID(id)` and `TMACoreObject.getCaseID()` - the old methods can remain temporarily, but emit a warning if they are called*. The trickier choice is whether to update the name used internally to store the value; I'd like to change it",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1114:930,reduce,reduce,930,https://qupath.github.io,https://github.com/qupath/qupath/issues/1114,1,['reduce'],['reduce']
Energy Efficiency,\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. java.lang.RuntimeException: OpenCV(4.5.1) modules\core\src\persistence.cpp:1737: error: (-215:Assertion failed) nameofs < str_hash_data.size() in function 'cv::FileStorage::Impl::getName'. at org.bytedeco.opencv.opencv_core.Algorithm.read(Native Method); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:258); at qupath.lib.io.OpenCVTypeAdapters$StatModelTypeAdapter.read(OpenCVTypeAdapters.java:188); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:270); at qupath.opencv.ml.OpenCVClassifiers$OpenCVClassifierTypeAdapter.read(OpenCVClassifiers.java:261); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131); at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222); at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285); at qupath.lib.io.GsonTools$SubTypeAdapterFactory$SubTypeAdapter.read(GsonTools.java:243); at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199); at com.google.gson.Gson.fromJson(Gson.java:932); at com.google.gson.Gson.fromJson(Gson.java:870); at qupath.lib.projects.ResourceManager$JsonFileResourceManager.readFromFile(ResourceManager.java:338); at qupath.lib.projects.ResourceManager$FileResourceManager.get(ResourceManager.java:197); at qupath.process.gui.commands.ObjectClassifierLoadCommand.getClassifier(ObjectClassifierLoadCommand.java:392); at qupath.process.gui.commands.ObjectClassifierLoadCommand.runClassifier(ObjectClassifierLoadCommand.java:329); at qupath.process.gui.commands.ObjectClassifierLoadCommand.lambda$run$6(ObjectClassifierLoadCommand.java:202); at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.jav,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/752#issuecomment-866148194:1155,Adapt,Adapter,1155,https://qupath.github.io,https://github.com/qupath/qupath/issues/752#issuecomment-866148194,1,['Adapt'],['Adapter']
Energy Efficiency,"```; [jalal@goku bin]$ chmod 777 QuPath; [jalal@goku bin]$ ./QuPath; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 4:51:53 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 16:51:53.531 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 16:51:53.823 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 16:51:53.824 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:14092): Gdk-WARNING **: 16:51:54.374: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 16:51:54.868 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007effa50f8c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f087c503329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7effa4e62192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7effa4e625e3]; /lib64/libstdc++.so.6(+0x71555)[0x7effa4e63555]; /lib64/libpthread.so.0(+0x620b)[0x7f087be4520b]; /lib64/libstdc++.so.6(+0x715a1)[0x7effa4e635a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7effa4e635e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7effa4e6043c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7efeb6536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f087cd659c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f087cd6a59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f087cd657d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f087cd69b8b]; /lib64/libdl.so.2(+0xfab)[0x7f087cb52fab]; /lib64/",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949:972,adapt,adapters,972,https://qupath.github.io,https://github.com/qupath/qupath/issues/949,1,['adapt'],['adapters']
Energy Efficiency,"and another thing: ; Is it possible to dynamicly create the target folder for the results?; If QuPath loads an old script into a new project, the pathway for the ""Save results"" part in the script need to be manually adapted to the place/folder of the new project. . It would be nice, the script creates automatically a new folder ""results"" and saves the annotations results inside the new results folder in the new project. . To create a new folder works like that: ; import qupath.lib.scripting.QPEx; // Create the output directory, if required; def path = QPEx.buildFilePath(QPEx.PROJECT_BASE_DIR, ""meise""); QPEx.mkdirs(path). But I dont know enought code yet to direct the new annotation results into the new folder.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/125#issuecomment-350847426:216,adapt,adapted,216,https://qupath.github.io,https://github.com/qupath/qupath/issues/125#issuecomment-350847426,1,['adapt'],['adapted']
Energy Efficiency,"aseViewer, nor how exactly you've got it to display in QuPath, i.e. is it just the plane that OpenSlide can provide, or have you already got your tiles into QuPath some other way?. Nevertheless, two pieces of information that may be of use:; * The next release of Bio-Formats (already available as a milestone build) will have support for reading and writing image pyramids as OME-TIFF, which is also capable of handling z-stacks (and time series). Since Bio-Formats is compatible with QuPath, has exceptional metadata support, and can be used with MATLAB, it could be would trying to get your extracted tiles into OME-TIFF format: http://blog.openmicroscopy.org/file-formats/community/2018/11/29/ometiffpyramid/; * In the next release of QuPath (I very much hope later this month... at least in early form) I have revised the `ImageServer` interface considerably, which will impact how new file readers work. Specifically, it will reduce the effort involved in creating a reader to three main things:; * Parse metadata; * Declare what tiles are available; * Have the ability to read a tile. The hard work of merging, rescaling and caching tiles is abstracted away. This has been done partly to help make it possible to create `ImageServers` that wrap other `ImageServers`... for example if you have sparse tissue regions represented in multiple files that ought to be displayed as a single image, this combining can be performed automatically - allowing you to specify where the separate pieces ought to be position. In the case of overlaps there is no special blending performed (by default anyway), but it should at least be possible to specify the order to ensure one tile is always 'on top' of another. I'm not entirely sure if this helps, but in summary, building on the work you've done, it should be possible to get your z-stack into QuPath one way or another. I suspect it would be best to keep going with MATLAB and introduce Bio-Formats, but if you do need to get into the QuPath API direc",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/265#issuecomment-459976203:1334,reduce,reduce,1334,https://qupath.github.io,https://github.com/qupath/qupath/issues/265#issuecomment-459976203,1,['reduce'],['reduce']
Energy Efficiency,"e diameter depending upon how widely you want QuPath to look around each tile for calculating textures. Press *Run* and then choose *Process all: Detections*.; * Train a classifier as described [in the Wiki](https://github.com/qupath/qupath/wiki/Classifying-objects). Check out [this issue](https://github.com/qupath/qupath/issues/50) if you find the *Brush tool* isn't working for you.; * Optionally run *Analyze &rarr; Region identification &rarr; Tiles & superpixels &rarr; Tile classifications to annotations*.... if you find it helpful. It's always best to save your data before doing this, since all the options have some kind of logic behind them... but it's often not entirely clear which are the options you want on a first go. There is no *Undo*, but if you save before running the command, *File &rarr; Revert* can get you back to where you were. The end result is a rather 'blocky' classification, where the size of the blocks depends upon how large the tiles are that you created. But if you need to downsample your image 8 times to get good enough performance with the Weka plugin, then using tiles that are 8x8 pixels gives you just as good a resolution in the end. Furthermore, with QuPath you can add some other kinds of features, particularly Haralick texture features on color-deconvolved images, which can be a better fit for pathology applications compared to some of the Weka features (which may be better for other applications). And you can do other things in QuPath to help with efficiency, such as create a script to find all pixels with high intensity values (background?) and remove them - thereby allowing you to avoid the memory and computational requirements of storing and classifying them. Therefore while there is some overhead involved in QuPath using objects rather than pixels in the way that *ilastik* and *Trainable Weka segmentation* do, QuPath's use of objects is sufficiently efficient and optimized that I think it offers a viable alternative in many cases.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/56#issuecomment-288506877:3926,efficient,efficient,3926,https://qupath.github.io,https://github.com/qupath/qupath/issues/56#issuecomment-288506877,2,['efficient'],['efficient']
Energy Efficiency,"e the color to be packed into an integer before being set. So we end up with code like this:; ```java; pathObject.setColorRGB(ColorTools.packRGB(255, 0, 0));; pathClass.setColor(ColorTools.packRGB(255, 0, 0));; ```. There are similar getter methods, which return the packed integer (or sometimes null, if the color isn't set). This then may need to be unpacked, e.g.; ```java; var rgb = pathObject.getColorRGB();; int red = ColorTools.red(rgb);; int green = ColorTools.green(rgb);; int blue = ColorTools.blue(rgb);; ```. A secondary problem is that it isn't clear whether alpha will be used or not. This is possible:; ```java; pathObject.setColorRGB(ColorTools.packARGB(127, 255, 0, 0));; pathClass.setColor(ColorTools.packARGB(127, 255, 0, 0));; ```; but it's not obvious whether the alpha will do anything. ### Describe the solution you'd like. It would be preferable to have something standardized, including the option to provide separate RGB values, e.g.; ```java; pathObject.setColor(red, green, blue); pathClass.setColor(red, green, blue); ```. This could be implemented quickly, deprecating the `PathObject.setColorRGB(Integer)` method. The main decision is whether to take 8-bit RGB values or floats/doubles as input. For now, I propose keeping `public Integer getColor()` - although `getRed()`, `getGreen()` and `getBlue()` methods could potentially be added. ### Describe alternatives you've considered. One way to enforce standardization would be through a `Colorable` interface, which could offer a variant of options as default methods, e.g. ```java. // Main setter; public void setColor(Integer);. // Main getter; public Integer getColor();. // All others default; public default void setColor(int r, int g, int b);. public default void setColor(double r, double g, double b);. public default void setColor(String hex);. public default String getColorHex();. public default int getRed(); // Return Integer? Otherwise can't cope with null... public default int getGreen();. public defau",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1086:1533,green,green,1533,https://qupath.github.io,https://github.com/qupath/qupath/issues/1086,1,['green'],['green']
Energy Efficiency,"eTask.java:264); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515); at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); at java.base/java.lang.Thread.run(Thread.java:834); ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.Read",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:9015,allocate,allocateDirect,9015,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['allocate'],['allocateDirect']
Energy Efficiency,"er to have two computers (perhaps one Windows and one Mac) that are set up to have different Locales, but not to have noticed. ### Importing/exporting. Finally, it's important to consider what happens *after* running QuPath's analysis. Commonly, it's necessary to put the results into another application - such as an Excel Spreadsheet. Excel isn't immune from these issues, and will also parse numbers according to some system setting. **Therefore the spreadsheet application is not guaranteed to interpret the numbers written by QuPath in the way that is intended - it's absolutely essential to check.**. ## How does QuPath handle this?. ### What QuPath does now; QuPath gives some consideration to Locales in two ways, although neither is a complete solution. Firstly, the Locale information used when saving a ```.qpdata``` file is saved with the file. This way, it can be temporarily applied when reloading the file. This at least helps reduce the possibility that a later change in Locale means that a previously-written data file cannot be read again - or is read wrongly. Secondly, QuPath gives the user a choice of Locale on first startup (or under *Help &rarr; Show setup options* - along with a warning:; <img width=""608"" alt=""qupath_setup"" src=""https://cloud.githubusercontent.com/assets/4690904/20858862/a6a5f5e4-b946-11e6-823c-82dccca3a0ba.png"">. This doesn't force any particular choice... along it at least raises the issue. ### What *should* QuPath do?; This remains an open question - with feedback and ideas welcome. My current suspicion is that QuPath *should* enforce the use of one Locale consistently throughout the application. If so, this would likely have to be ```Locale.US``` - because this is [guaranteed to exist](https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html#getAvailableLocales()). This will enforce an internal consistency, which is less likely to be troubled by whether or not the programmer of some component or extension parses their numbers in a",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/29:5499,reduce,reduce,5499,https://qupath.github.io,https://github.com/qupath/qupath/issues/29,1,['reduce'],['reduce']
Energy Efficiency,"esult in substantial lag. Ideally it shouldn't, but if it does I wouldn't say it's necessarily a bug... since QuPath is already needing to do a *lot* of stuff to get acceptable performance across a wide range of scenarios. Specifically here:; * For a downsample >= 1, repainting detections caches tiles and multiple resolution levels for performance - this is why QuPath can handle millions of objects.; * For downsample < 1, repainting happens for all detections in the field of view (like for annotations) for improved appearance without nasty bitmap-upsampling artefacts. This is inevitably laggier than using cached tiles, but caching itself has considerable overhead in terms of memory and worse appearance. I think this tradeoff makes sense, since details really matter when viewing the image at high magnification but the number of objects visible should be limited (possibly thousands, but not millions). However it does mean that if you have a large enough monitor, many detections, and a downsample value slightly less than 1, performance there certainly can be a noticeable lag... and object connections make this worse by meaning that thousands more lines need to be rendered. However, investigating this revealed that QuPath was painting all the connections twice, which certainly wasn't helping things :). So the PR fixes the double-painting bug. Along the way, it adds a spatial cache that enables QuPath to be a bit smarter about which connections it paints. The main reason for this change is to overcome an issue with long connections sometimes being broken at some resolutions:. ### Old behavior:; ![connection_bug-1](https://user-images.githubusercontent.com/4690904/194024037-795fceaa-e542-4c67-8fa2-84e6a8aca691.png). ### New behavior:; ![connection_fix-1](https://user-images.githubusercontent.com/4690904/194024122-00080b78-b59b-4b8f-bf0d-aa990683268c.png). Together, I'm not certain whether or not you'll see a substantial improvement in performance - but these changes addres",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189:1167,monitor,monitor,1167,https://qupath.github.io,https://github.com/qupath/qupath/issues/1069#issuecomment-1268167189,1,['monitor'],['monitor']
Energy Efficiency,"gs that you might do with QuPath - especially if you include scripting - that are not easily 'undo-able' without badly impacting performance and increasing the potential for bugs. For example, there are lots of ways you might change the [object hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) and keeping track of them would require a lot of additional overhead. So for now... I'm afraid there's no undo. Nevertheless, there are a few things that can help:. * If you draw something by accident, press *backspace* to delete it; * If you delete something by accident, as @Svidro says, press ```Shift+E```. This corresponds to the *Restore Selection* command in ImageJ, and has the same shortcut, so as to help if you happen to know ImageJ already. (However, it only ever remembers the most recent object that it saw... so if you select any other object in the meantime, then it cannot restore the one that was deleted.); * If you want to reduce the chances of accidentally editing an annotation, right-click and choose *Annotations &rarr; Lock*. Note that the annotation can still be deleted - but not moved or otherwise edited.; * Regularly save (```Ctrl + S```) and then use *File &rarr; Revert* to go back (```Ctrl + R```). The last one is probably the approach I use most. > 2. A select tool by drawing a square like many other editing tools. This will make select multiple objects easy. I've also wanted this occasionally, but not often enough to do anything about it yet. However, there are a few options for selecting:. * Click on each object in either the *Annotations* or *Hierarchy* tab (with ```Ctrl``` or ```Shift``` pressed if needed); * If you have one object selected, and the *Move* tool is active, you can select other objects by clicking them in the image with the ```Alt``` key pressed; * You can use a script, such as the one below. ```groovy; guiscript=true; // Get the current selected object & hierarchy; selected = getSelectedObject(); hierarchy = getCurrent",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/75#issuecomment-300294512:1142,reduce,reduce,1142,https://qupath.github.io,https://github.com/qupath/qupath/issues/75#issuecomment-300294512,2,['reduce'],['reduce']
Energy Efficiency,"hey are not using the right approach. Often, there are lots of considerations that I haven't articulated anywhere (there just isn't time), but which are impacted by the choices. For example: finding a better approach to handle brightness/contrast perhaps could/should also support serializing the image histograms (since `ImageDisplay` uses them). Storing these histograms would make opening images a great deal faster as well. But then, having histograms separated from the GUI (and JavaFX) would also make intensity distribution information instantly available in general. This might open up new and faster processing and analysis options - including the use of automated thresholds based on such histograms. If something is not public, it can be freely changed without breaking other extensions (and also well-behaved scripts). If it is public, other extensions and scripts that use it will definitely break. Each breaking change costs a) user annoyance, and b) developer time. Making fewer things public reduces that. Time is incredibly precious... there are now (finally) two of us working on it, but there are quite some demands on us. And in academia, a lot of what we are judged on isn't software anyway. So I think it is important we follow our beliefs about what will protect our time and be better in the long run - trying to be helpful, but not caving to pressure :). So why the scripting approach?. In general, when something is used internally by QuPath, we have a much better idea of what we might be breaking... and when a path needs to be found through the pain (e.g. the ability to import images from v0.1.2 projects to v0.2.0). When it's in the public API, we have no idea how it is used or the implications of our changes. Because the scripting approach I proposed only uses `ImageDisplay` internally, so long as any improved approach is capable of supporting a method that does the same thing then we're free to change the method in `QPEx` without worrying about breaking things f",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632668731:4231,reduce,reduces,4231,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632668731,2,['reduce'],['reduces']
Energy Efficiency,"hing: it makes `pathObject.setPathClass(null)` ambiguous - and liable to throw an exception. This could be slightly mitigated in several ways, e.g. 1. adding a constant field to `QP`; ```java; PathClass UNCLASSIFIED; ```; 2. adding a `resetPathClass()` method as an alternative to setting null; 3. taking an empty string as an alternative way to set the classification to null; 4. using different names, e.g. `setPathClass(PathClass)` and `setClassification(String)` - but both ultimately causing the same `PathClass` to be set. The final option has the problem of potential confusion by seeming to have two variables, but in reality only having one. However there might be an intriguing opportunity in this... although it will take a bit more thought. One criticism of QuPath's classification model is that it is [restricted to a single `PathClass`, even if further subclassifications can be derived](https://qupath.readthedocs.io/en/stable/docs/concepts/classifications.html). The API could be adapted to something like:. ```java; public void setPathClass(PathClass);. public PathClass getPathClass();. public void setClassifications(Collection<String>);. public Set<String> getClassifications();; ```. Internally, `get/setClassifications()` would be working with the `PathClass`, but from a user perspective they seem only to have an ordered set. This would mean they could switch between using either the `PathClass` or string-based classification model easily, depending upon which makes most sense for the application. For example:. * `PathClass` may be helpful in dealing with single classifications, possibly with intensity-subclasses (e.g. scoring a single IHC marker). Working with more than one subclassification is probably uncommon.; * `Set<String>` makes sense for multiplexed analysis, where each 'classification' could be seen as being like a tag that a cell is positive for a particular marker. The second case might be handled by setting arbitrary metadata properties or measurements",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1087:1948,adapt,adapted,1948,https://qupath.github.io,https://github.com/qupath/qupath/issues/1087,1,['adapt'],['adapted']
Energy Efficiency,"his case it was not problematic that the green region extended outside of the tissue since there were no cells of interest in this “white space”. But ideally it would also fallow the “cut”. - I always start with lining the tumor border (blue) and then I extend it 500µm to get the green one. After this I perform the cell detection in the green one (but the blue one always disappears) after this I run the classifier and when this is completed I ‘expand’ my green annotation with -500µm to get the blue one again and after this I ‘expand the blue one with -500µm to get the black one. I think it may be better that the green and blue would be hollow rings around the outside of the black one. Since we want to measure cells in three different regions: in the tumor center (500 µm from the tumor border) (black), in the invasive front (area between the green and black annotation) and in the tumor (blue).But as of now I don’t know if it is possible to establish this?. - We want to count every immune cell in the tumor (+ and -) but not the tumor cells. In the beginning I tried “Positive cell detection” but when using this command, the software also counted a lot of cells that weren’t immune cells. That is why I switched to the classifier, I am very pleased with the results the classifier is giving me. We are scoring 7 different staining’s (70 samples per staining) and I would like to train the classifier for each staining but within a staining I would like to apply the same classifier for each sample. - In total it will be around 500 images. - I am just starting and trying some things out. I will try to create the annotations before cell detection, but as I have mentioned above: I start with the blue annotation and then I extend it 500µm to get the green one. But when I want to perform the cell detection the first annotation (blue) disappears. So I thought it was nog possible to perform a cell detection in overlapping annotation, or is there a way I can overcome this?. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411026150:2054,green,green,2054,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411026150,1,['green'],['green']
Energy Efficiency,"i initially started with the detection measurements and manually summarized what i wanted to take from that on excel, but i have ~900 cores to analyze and thought their must be a more efficient way. Can this step be automated?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/16#issuecomment-391780670:184,efficient,efficient,184,https://qupath.github.io,https://github.com/qupath/qupath/issues/16#issuecomment-391780670,1,['efficient'],['efficient']
Energy Efficiency,"icult to fill the image buffer. On the larger image I could quite easily cap out the image buffer around 5GB and then sometimes ran into errors. Although sometimes the program would simply go over the 5GB limit and everything would be fine. I am afraid I wasn't able to find anything usefully consistent. . Anyway, the error, whenever I ran into it looks familiar:. > ERROR: Error running plugin: java.lang.OutOfMemoryError: Java heap space; at java.util.concurrent.FutureTask.report(FutureTask.java:122); at java.util.concurrent.FutureTask.get(FutureTask.java:192); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:242); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:204); at qupath.lib.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:134); at qupath.lib.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:163); at java.lang.Thread.run(Thread.java:745); Caused by Java heap space at java.util.ArrayDeque.allocateElements(ArrayDeque.java:142); at java.util.ArrayDeque.<init>(ArrayDeque.java:198). Edit:; Actually this part might be more useful:. > INFO: Processing complete in 55.47 seconds; INFO: Completed with error java.lang.OutOfMemoryError: Java heap space; INFO: ; qupath.imagej.detect.nuclei.WatershedCellDetection {""detectionImageBrightfield"": ""Hematoxylin OD"", ""requestedPixelSizeMicrons"": 0.5, ""backgroundRadiusMicrons"": 8.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 10.0, ""maxAreaMicrons"": 400.0, ""threshold"": 0.05, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true}; ERROR: Error reading image region; at loci.formats.tiff.IFD.getIFDLongArray(IFD.java:411); at loci.formats.tiff.IFD.getStripByteCounts(IFD.java:805); at loci.formats.tiff.TiffParser.getTile(TiffParser.java:682)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/112#issuecomment-343336690:2015,allocate,allocateElements,2015,https://qupath.github.io,https://github.com/qupath/qupath/issues/112#issuecomment-343336690,2,['allocate'],['allocateElements']
Energy Efficiency,"images.servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:275); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.images.servers.ServerTools.getPaddedRequest(ServerTools.java:231); at qupath.opencv.ops.ImageOps$DefaultImageDataOp.apply(ImageOps.java:256); at qupath.tensorflow.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:807); at qupath.tensorflow.stardist.StarDist2D.lambda$detectObjects$5(StarDist2D.java:687); at java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); at java.base/java.util.stream.AbstractTask.compute(Unknown Source); at java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); at java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); at java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source); WARN: file deletion failed C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; ```. **To Reproduce**; Steps to reproduce the behavior:; 1. On Windows, create a new Project and add an Image that will use BioFormats; 2. Display the",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717:5901,Reduce,ReduceOps,5901,https://qupath.github.io,https://github.com/qupath/qupath/issues/717,2,['Reduce'],"['ReduceOps', 'ReduceTask']"
Energy Efficiency,"ition=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.Read",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5745,allocate,allocateDirect,5745,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['allocate'],['allocateDirect']
Energy Efficiency,"ll trigger a lot of costly checks and events. Calling `addObjects` and passing a list should do much better. So the loop above could become; ```groovy; def pathObjects = []; for (i = 0; i <num_rois; i++) {; // The rest of the stuff, as above; pathObjects << new PathDetectionObject(roi); }; addObjects(pathObjects); ```; If this still doesn't perform well enough, and you don't mind deleting anything that might already exist on the hierarchy, using the following instead of `addObjects()` should perform better still:; ```groovy; clearAllObjects(); getCurrentHierarchy().getRootObject().addPathObjects(pathObjects); fireHierarchyUpdate(); ```. Anyhow, the reason I think that it should work one way or another is that you can generate similar numbers of vertices running the cell detection in QuPath itself. In that case, various tricks are used to help, e.g.; * Contours are smoothed after detection, and then simplified to reduce the numbers of vertices that need to be drawn; * Image tiles representing the objects are drawn on demand and cached - similar to having a pyramidal image, but one where the tiles are quickly created only when needed; * When viewing the image at a sufficiently low resolution, QuPath will check if a detection is well represented by a single pixel or rectangle and just draw that instead (to avoid the effort of handling all the vertices). You could do the polygon simplification on the OpenCV side, perhaps with `approxPolyDP`, or else on the QuPath side after already generating the polygon, using [`ShapeSimplifier.simplifyPolygon(PolygonROI polygon, final double altitudeThreshold)`](https://github.com/qupath/qupath/blob/v0.1.2/qupath-core/src/main/java/qupath/lib/roi/experimental/ShapeSimplifier.java#L145). Despite all that, I haven't tried doing this exact conversion before and my guess is that you might have a problem with having really really huge text files. If that's the case then it could be the bottleneck... but that can be solved too if necessary.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/81#issuecomment-357045269:1438,reduce,reduce,1438,https://qupath.github.io,https://github.com/qupath/qupath/issues/81#issuecomment-357045269,2,['reduce'],['reduce']
Energy Efficiency,"nopointergc=true ./QuPath; Picked up JAVA_TOOL_OPTIONS: -Dorg.bytedeco.javacpp.nopointergc=true; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Apr 11, 2022 8:47:07 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @60975100'; 20:47:08.384 [JavaFX Application Thread] [INFO ] qupath.lib.common.ThreadTools - Setting parallelism to 11; 20:47:08.673 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - QuPath build: Version: 0.3.2; Build time: 2022-01-17, 08:49; Latest commit tag: '71884c6'; 20:47:08.674 [JavaFX Application Thread] [INFO ] qupath.lib.gui.QuPathGUI - Setting tile cache size to 8024.00 MB (25.0% max memory). (QuPath:8487): Gdk-WARNING **: 20:47:09.200: XSetErrorHandler() called with a GDK error trap pushed. Don't do that.; 20:47:09.626 [JavaFX Application Thread] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; *** Error in `./QuPath': free(): invalid pointer: 0x00007f79411f0c80 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81329)[0x7f82287f5329]; /lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7940f5a192]; /lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7940f5a5e3]; /lib64/libstdc++.so.6(+0x71555)[0x7f7940f5b555]; /lib64/libpthread.so.0(+0x620b)[0x7f822813720b]; /lib64/libstdc++.so.6(+0x715a1)[0x7f7940f5b5a1]; /lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7940f5b5e3]; /lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f7940f5843c]; /home/grad3/jalal/.javacpp/cache/opencv-4.5.3-1.5.6-linux-x86_64.jar/org/bytedeco/opencv/linux-x86_64/libopencv_core.so.4.5(+0x64ddd)[0x7f7866536ddd]; /lib64/ld-linux-x86-64.so.2(+0xf9c3)[0x7f82290579c3]; /lib64/ld-linux-x86-64.so.2(+0x1459e)[0x7f822905c59e]; /lib64/ld-linux-x86-64.so.2(+0xf7d4)[0x7f82290577d4]; /lib64/ld-linux-x86-64.so.2(+0x13b8b)[0x7f822905bb8b]; /lib64/libdl.so.2(+0xf",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018:1820,adapt,adapters,1820,https://qupath.github.io,https://github.com/qupath/qupath/issues/949#issuecomment-1095746018,1,['adapt'],['adapters']
Energy Efficiency,"nt some time trying to understand how [Mouse Events](https://docs.oracle.com/javase/8/javafx/api/javafx/scene/input/MouseEvent.html) are handled in JavaFX and I *think* I managed to sort out the issues I was initially having: Behaviour when dragging with middle button pressed, fast clicks, when to consume events or not, debouncing... Incidentally, the debouncing code is not strictly necessary, but it was an interesting exercise in working with a broken mouse. Also, I *think* `MouseEvent.MOUSE_RELEASED` should be added to the [list of ignored events here](https://github.com/qupath/qupath/blob/main/qupath-gui-fx/src/main/java/qupath/lib/gui/QuPathGUI.java#L1039) as without, I had to deal with the (middle) button release event multiple times as part of the events generated by JavaFX in the course of pressing a mouse button. Finally, I've also UX tested the behaviours we discussed in the [forum.sc post](https://forum.image.sc/t/tool-selection-via-mousewheel-side-scrolling-button-press/70796/4?u=ep.zindy) and reproduced in the first comment. For now,; * Windows,; * with my ""fancy"" mouse; * with the shift+scrollwheel substitute for side-to-side scrolling; * my Lenovo T460 touchpad; * with scroll touch gestures enabled or disabled; * with inverted mouse enabled or disabled; * with ctrl to modify opacity; ; I couldn't use ""Zoom"" or ""Rotate"" touch gestures, because I don't think my very basic touchpad understands them, so I couldn't see any effects on QuPath. Panning does work as expected (with my very last commit). ~~**todo** I will edit my comment when I test a Linux build on my old powerbook with Mint, which (maybe) will let me use more touch gestures.~~ I haven't been able to use touch gestures with QuPath in my Cinnamon desktop environment so far, but with a mouse, my code behaves in Mint/Ubuntu the way it does on Windows. For now, my code is quite verbose, both in terms of comments and in debug messages. I will clean this up if/when you're happy with this pull request.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123:1991,power,powerbook,1991,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1243226123,2,['power'],['powerbook']
Energy Efficiency,"ood to give some protection from these (or a more informative error if they occur), and aim for a more substantial fix. Two changes could help:; * Choose a pixel count threshold based upon both the maximum pixel count that ImageJ could conceivably support, i.e. 2<sup>31</sup>-1 (or a little more than 1) *and* also a memory threshold based on estimating the image size and memory available; * Add a scaling factor as a static field to control what proportion of the available memory is permitted for use. It could be something like this:; ```java; static double MEMORY_THRESHOLD = 0.5;; ...; long remainingMemory = ... // With the help of Runtime.getRuntime(), after request for garbage collection; long approxMemory = ... // Calculation based on pixel count, bit-depth & number of channels; if (approxPixelCount > 2147480000L || approxMemory > remainingMemory * MEMORY_THRESHOLD) {; // Show the size error; } else {; // Have a go at extracting the region; }; ```; By making the scaling factor a static field, there is at least the option of overriding it in a Groovy script if absolutely necessary. The details around the pixel count get a bit fiddly, considering that ImageJ1 will use a packed int array in a `ColorProcessor` for RGB images, while in other cases a new array will be allocated for every channel. Furthermore, it might be prudent to take parallelization into account, and the result returned by `PathPrefs.getNumCommandThreads()`. I'm dubious about sending the whole image if no selection exists, because it's really easy to accidentally run the command without an area selected... and then everything can grind to a halt while QuPath tries (and possibly fails) to extract a massive region. Currently you can use *Objects &rarr; Create full image annotation*, its shortcut `Ctrl + Shift + A` or the scripting command `createSelectAllObject(true);` to create an annotation representing the full image, where the `true` indicates that this annotation should be selected automatically.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/134#issuecomment-356714438:1420,allocate,allocated,1420,https://qupath.github.io,https://github.com/qupath/qupath/pull/134#issuecomment-356714438,1,['allocate'],['allocated']
Energy Efficiency,ormats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:683); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.stores.AbstractImageRegionStore$DefaultTileWorker$1.call(AbstractImageRegionStore.java:656); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by Array size too large: 23422 x 30978 x 3 x 1 at loci.common.DataTools.safeMultiply32(DataTools.java:1274); at loci.common.DataTools.allocate(DataTools.java:1247); at loci.formats.FormatReader.openBytes(FormatReader.java:877); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:683); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.stores.AbstractImageRegionStore$DefaultTileWorker$1.call(AbstractImageRegionStore.java:656); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). ```. After that I tried another tif sized 91.5MB and it c,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:20681,allocate,allocate,20681,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,1,['allocate'],['allocate']
Energy Efficiency,"ory requirements for 2D images because the original has not yet been closed. When investigating this, three other issues were noticed:. 1. The performance impact of using virtual stacks is *much* worse than I had expected, particularly for large 2D images that will frequently be cropped/duplicated. Extracting a region - even for a 2D plane - causes the data to be read from disk again.; 2. [`readBufferedImage(request)`](https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core-processing/src/main/java/qupath/imagej/images/servers/ImageJServer.java#L298) is synchronized - but the entire method does not need to be. This prevents calls to resize the extracted image being parallelized, even though this should be safe.; 3. Resizing is called once per channel, including for RGB images. However, in ImageJ's world the RGB image is treated as a single channel - and so any resizing is actually performed 3x rather than 1x. The last two operations seem to be entirely unnecessary. **To Reproduce**; The problem should occur when trying to open any large TIFF that has been written by ImageJ. If it is at the bounds of the available memory, this is likely to fail. If enough memory is available, it should succeed but perform badly. **Expected behavior**; `ImageJServer` should fully read 2D images - since using a virtual stack brings no benefits - and most multidimensional images, as long as they are small enough to fit comfortably in memory. Synchronization should be reduced, and resizing limited. It will sometimes still not be possible to open a non-pyramidal image via ImageJ directly. In this case, running `convert-ome` should be able to efficiently generate an OME-TIFF image. **Desktop (please complete the following information):**; - OS: All; - QuPath Version 0.3.0 (and earlier). **Additional context**; It may be preferable to extend `AbstractTileableImageServer` rather than `AbstractImageServer` to take advantage of the tile caching in the former.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/860:2275,reduce,reduced,2275,https://qupath.github.io,https://github.com/qupath/qupath/issues/860,2,"['efficient', 'reduce']","['efficiently', 'reduced']"
Energy Efficiency,"pported toolchain. in function 'cv::dnn::cuda4dnn::csl::ManagedPtr<float>::ManagedPtr'; in GPU_Multimodal StarDist Segmentation.groovy at line number -2. ERROR: org.bytedeco.opencv.opencv_dnn.Net.forward(Native Method); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:718); qupath.opencv.dnn.OpenCVDnn$OpenCVNetFunction.predict(OpenCVDnn.java:732); qupath.opencv.dnn.DnnModel.convertAndPredict(DnnModel.java:100); qupath.ext.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:1249); qupath.ext.stardist.StarDist2D.lambda$detectObjects$7(StarDist2D.java:934); java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); java.base/java.util.stream.AbstractTask.compute(Unknown Source); java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source). ```. **Expected behavior**; The script should run without any error, yielding cell detections within the annotation. **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version: 0.4.0, built from source on 2022-12-07; - StarDist Extension Version: 0.4.0 (reproducible with 0.3.2 as well). **Additional context**; The changelog of 0.4.0 points to two separate issues that were marked as resolved, which could be linked to this issue:; ht",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1180:2994,Reduce,ReduceOps,2994,https://qupath.github.io,https://github.com/qupath/qupath/issues/1180,2,['Reduce'],"['ReduceOps', 'ReduceTask']"
Energy Efficiency,"r and smaller training annotations. The actual `RTrees` classifiers are implemented in C++ (by OpenCV). After QuPath has generated the training data, the training itself is performed inside OpenCV and in accessible to QuPath. As far as I am aware, this is single-threaded in OpenCV and cannot be changed in QuPath. Similarly, JSON generation and parsing is performed with the help of the Gson library, so performance depends somewhat on Gson. GeoJSON is a standard for representing geometries; I think it solves a different problem from Parquet. In QuPath, it is primarily intended to facilitate exchanging annotations, where choosing an existing open format is strongly desirable for interoperability (rather than trying to define a new standard others have to follow). Performance should not be an issue with several hundred/thousand objects (the common scenario), but it will inevitably be slow to export to export millions of cells as GeoJSON. If you don't need geometry information, you could export much more efficiently features/classifications/centroids only (e.g. through [a measurement table](https://qupath.readthedocs.io/en/stable/docs/tutorials/exporting_measurements.html)). Alternatively, if you need a highly optimized solution or a custom format then you can implement one using a QuPath script or extension. I'd like to close this issue because I think there is no bug in QuPath. The best place for discussing the use of the software or suggested improvements is http://forum.image.sc/tag/qupath. >If you'd like to add a separate GitHub issue for the minimized windows, please fill in the bug report template. I have seen some issues on Ubuntu with Windows not being in the correct place, but not on Windows or macOS. I cannot tell if it is a problem that QuPath can solve, or if it is an issue in JavaFX. But the issue I have seen does not make the dialogs unusable. We don't have the bandwidth to test other linux distributions, so rely on fixes from others if there are problems.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/831#issuecomment-950106875:1154,efficient,efficiently,1154,https://qupath.github.io,https://github.com/qupath/qupath/issues/831#issuecomment-950106875,1,['efficient'],['efficiently']
Energy Efficiency,"reader should support accessing only one `series`. Possibly - it is one option to overcome the issue. Currently, the implementation of `BioFormatsReaderWrapper` in this PR has two `getPixelValues()` methods. One of them sets the series and then resets it back to its original value, the other sets it but doesn't reset it. Without the reset, then the reader has changed into a different state - and the values returned by any call that requests metadata from the reader are subject to giving different results *(example at the end of this post)*. Additionally, both methods are potentially broken in a multithreading context because there is no synchronization done on the reader. . Excessive synchronization could harm performance. Forbidding the series and ID to be changed anywhere inside the class - *and* forbidding the reader from being accessed outside (i.e. not providing a `getReader()` option) - would reduce the need for synchronization, but probably not eliminate it because I am not sure that Bio-Formats guarantees that pixels can be accessed simultaneously from different threads even if the series and ID aren't changed. The alternative is to synchronize everything that uses the reader, and then taking care to design the class in such a way that it's not possible to get around the synchronization. To do that, the `getReader()` option should again be removed. A third option is to make the class *really* minimal and keep the `getReader()` option - but document that it is entirely up to the caller what they do with the reader, and they must take care of synchronization etc. The third option puts much more responsibility on the caller, but has the advantage of allowing the same reader to be reused for different images / series. This might have some small improvements in performance (especially if initializing a reader is slow), but could be brittle and easy to get wrong. > * The `T getImage(int series);` function should be removed, and the `T getImage(TileRequest tileReque",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:1623,reduce,reduce,1623,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['reduce'],['reduce']
Energy Efficiency,"riety; * of different image representations, and also to run these in parallel.; * </p>; * <p>; * There are four main components:; * <ul>; * <li>An {@link ImageSupplier} that provides the image data</li>; * <li>A {@link MaskSupplier} that can generate binary masks that correspond to the image</li>; * <li>A {@link Processor} that processes the image data</li>; * <li>An {@link OutputHandler} that handles the output of the {@link Processor}</li>; * </ul>; * The idea is that the {@link Processor} is the only component that needs to be written for a specific task...; * and it is usually the fun bit to work on.; * <p>; * The other components are often very tedious to write and hard to get working correctly; also, there is much; * overlap in the functionality required for different tasks.; * For these reasons, we provide several default implementations here, written to support different image; * representations.; * </p>; ```. In addition to handling lots of thorny issues around tiling and merging, it also simplifies parallel processing with a progress monitor. In general, you would; * Choose how you want your images represented (e.g. `BufferedImage`, `ImagePlus`, `Mat`); * Write a custom function to do whatever processing you want *or* use a built-in option; * Use an appropriate 'output-handler' to handle whatever output your function gives (e.g. new objects, measurements, classifications). ## Examples. The following examples show the idea - albeit not necessarily with very meaningful processing. ### Image processing with ImageJ. Applied to an image with some detections, this does some custom detections *inside* those detections, and classifies them according to a mean pixel value. ```groovy; import qupath.lib.experimental.pixels.*; import ij.*; import ij.process.*; import ij.plugin.filter.*. def runner = new qupath.lib.gui.PluginRunnerFX(getQuPath()); def imageData = getCurrentImageData(). def pathObjects = getSelectedObjects(); if (!pathObjects); pathObjects = getDetectio",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1355:1503,monitor,monitor,1503,https://qupath.github.io,https://github.com/qupath/qupath/pull/1355,1,['monitor'],['monitor']
Energy Efficiency,"s in context; * Added 'Advanced' features, including optional PCA and selecting a 'Boundary' classification; * Ability to save & reload classifiers (format may change!); * New 'Create threshold classifier' command (replaces old simple threshold command); * Improved 'Dark' theme (available in the preferences); * Scripting Improvements; * Changed syntax highlighting - for better behavior with the 'Dark' theme; * Core classes can now be auto-imported (use Ctrl-Shift to cycle through code-completions); * More helpful error messages for common errors; * New setPixelSizeMicrons(double, double) scripting method; * New replaceClassification(String, String) scripting method; * Warning when applying 'Run for project' to an image currently open; * Major ROI revisions; * Area ROIs 'snap' to pixel coordinates by default (can be changed in the preferences); * New GeometryROI replaces AWTAreaROI; * 'Distance to annotations 2D' now supports line and point ROIs; * Increased use of Java Topology Suite for Geometry calculations; * Removed older interfaces (PathShape, PathPoints, PathArea, PathLine and TranslatableROI), moved more methods into ROI directly; * Zoom in further for more accurate pixel-wise annotations; * Revised cell detection & other detection commands that use tiling; * Bigger tile overlap & improved contour smoothing in cell detection (note: this will impact results!); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing; * New 'Memory monitor' and 'Show input display' commands in 'View' menu; * Summary measurements are displayed for the full image when no objects are selected; * Added 'saveImageMeasurement' scripting command; * Revised how images are written; * Moved 'ImageWriterTools' to core module, updated 'ImageWriter' interface; * Changed 'File -> Export regions.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:2017,monitor,monitor,2017,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,1,['monitor'],['monitor']
Energy Efficiency,"s('{""Name"" : ""H-DAB default"", ""Stain 1"" : ""Hematoxylin"", ""Values 1"" : ""0.69602 0.66056 0.28145 "", ""Stain 2"" : ""DAB"", ""Values 2"" : ""0.47625 0.62539 0.61811 "", ""Background"" : "" 224 224 224 ""}');; ```. Next I drew a square that had some DAB and non DAB stained areas and tested the following **with the annotation selected**:; ```; runPlugin('qupath.imagej.detect.tissue.PositivePixelCounterIJ', '{""downsampleFactor"": 1, ""gaussianSigmaMicrons"": 0.5, ""thresholdStain1"": 0.1, ""thresholdStain2"": 0.2, ""addSummaryMeasurements"": true}');; ```. Alternatively you could try superpixels, which I like, but would also require a classification step. For now you can use the Measure->Show measurment maps command to look at what values you could use for a classifier. Again **with the annotation selected**:; ```; runPlugin('qupath.imagej.superpixels.SLICSuperpixelsPlugin', '{""sigmaMicrons"": 1.0, ""spacingMicrons"": 10.0, ""maxIterations"": 10, ""regularization"": 0.25, ""adaptRegularization"": false, ""useDeconvolved"": false}');; selectDetections();; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 0.25, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": true, ""colorStain3"": false, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": true, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickDistance"": 1, ""haralickBins"": 32}');; ```. You can also choose a larger size for your SLICs if you want to do more of a tissue structure analysis. Smaller is usually better if you are looking for color differences though. Another options is just using the cell detection mentioned above:; ```; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.25, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372875465:1177,adapt,adaptRegularization,1177,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372875465,1,['adapt'],['adaptRegularization']
Energy Efficiency,"sed in that example - in particular, note that the default 'Requested pixel size' is large (20) in the first screenshot showing tissue detection, and the boundary is very coarse and inaccurate for the TMA core. In the second screenshot, this value is low (4), and the boundary is much better. The description is:. > For detecting large areas of tissue, e.g. a whole face section, you probably want a large value, e.g. 20 µm. For small regions of tissue, e.g. a TMA core, you probably want a smaller value, e.g. 2-5 µm. These values depend upon the pixel size information being stored in the image; if you are working with an image where that information is missing (e.g. a JPEG, a PNG) or incorrect then that would cause trouble. Apart from that, if you could provide any screenshots showing your results then this would help identify what is wrong. If the background is particularly dark and yellow then it *could* be the problem, because *Simple tissue detection* works by converting your image to grayscale first, and then applies a threshold to find darker or lighter pixels (this is why it's 'simple'... it doesn't use color information in any smarter way than that). If the background is dark enough, maybe this grayscale image doesn't have good enough contrast for the detection to work. But usually this isn't the case. If that does turn out that something more sophisticated is needed, then there would be other ways to detect the tissue that can be adapted to your particular images (e.g. with an ImageJ macro). But since these would require considerably more effort, it would be worth it to try to find *Simple tissue detection* settings that work well enough first. Finally, depending upon what you want to do you might not need to detect the tissue at all - I often don't. For example, you could simply detect cells within the TMA core directly. This can give you some measurements (e.g. percentages of positive cells, H-scores), but not others (e.g. tissue area, positive cell density).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282469327:1682,adapt,adapted,1682,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282469327,2,['adapt'],['adapted']
Energy Efficiency,"servers.AbstractTileableImageServer.getTile(AbstractTileableImageServer.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:238); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.lambda$requestTile$5(PixelClassificationOverlay.java:547); at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source); at java.base/java.util.concurrent.FutureTask.run(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source); at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source); at java.base/java.lang.Thread.run(Unknown Source); ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Open OS-1.ndpi on an M1 Mac, set to have a maximum of 4GB RAM for QuPath; 2. Start training a pixel classifier (default resolution and settings); 3. Zoom out to force preview classification across the full image; 4. Open the log & await the error; * If no error appears, adjust training annotations if needed to create a new classifier (it usually doesn't take long); 5. Check Activity Monitor to confirm that QuPath does not seem to be using a particularly large amount of memory. **Expected behavior**; Pixel classification continues without error for as long as its real memory use remains reasonable. **Desktop (please complete the following information):**; - OS: macOS, ARM; - QuPath Version 0.3.0. **Additional context**; Following the suggestion in https://github.com/bytedeco/javacpp/issues/516 a workaround is to add the line ; ```; java-options=-Dorg.bytedeco.javacpp.maxPhysicalBytes=0; ```; at the end of the *QuPath.app/Contents/app/QuPath.cfg* file. This turns off the check that reports the error, but could be risky to introduce as a default - so this Issue was created to document the problem for now, and a workaround where needed.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/856:3854,Monitor,Monitor,3854,https://qupath.github.io,https://github.com/qupath/qupath/issues/856,1,['Monitor'],['Monitor']
Energy Efficiency,"t created this qpdata file, but it works with m5. It contains some non-hierarchical annotations. Stack trace:. > INFO: Bio-Formats version 6.3.0; INFO: Loaded extension Bio-Formats server options (Bio-Formats 6.3.0) (27 ms); INFO: Loaded extension Experimental commands (26 ms); INFO: Loaded extension ImageJ extension (90 ms); INFO: Loaded extension JPen extension (34 ms); INFO: Loaded extension OpenCV extensions (4 ms); INFO: Loaded extension Rich script editor extension (562 ms); INFO: OpenSlide version 3.4.1; INFO: Selected style: null; INFO: Performing update check...; WARN: No changelog found - will not check for updates; INFO: Starting QuPath with parameters: []; INFO: Project set to Project: deneme-project; WARN: Openslide: Property 'openslide.mpp-x' not available, will return default value NaN; WARN: Openslide: Property 'openslide.mpp-y' not available, will return default value NaN; WARN: Openslide: Property 'openslide.objective-power' not available, will return default value NaN; INFO: Image data set to ImageData: Not set, B-11285-15_2.tif; ERROR: QuPath exception: missing initial moveto in path definition; at java.desktop/java.awt.geom.Path2D$Float.needRoom(Unknown Source); at java.desktop/java.awt.geom.Path2D.closePath(Unknown Source); at qupath.lib.roi.ShapeSimplifier.simplifyPath(ShapeSimplifier.java:310); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.simplifyByDownsample(PathHierarchyPaintingHelper.java:542); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper$ShapeProvider.getShape(PathHierarchyPaintingHelper.java:584); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintROI(PathHierarchyPaintingHelper.java:434); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintObject(PathHierarchyPaintingHelper.java:400); at qupath.lib.gui.viewer.PathHierarchyPaintingHelper.paintSpecifiedObjects(PathHierarchyPaintingHelper.java:160); at qupath.lib.gui.viewer.overlays.HierarchyOverlay.paintOverlay(HierarchyOverlay.java:231); at qupa",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/376#issuecomment-554873027:1617,power,power,1617,https://qupath.github.io,https://github.com/qupath/qupath/issues/376#issuecomment-554873027,2,['power'],['power']
Energy Efficiency,"t part of the classification, but *not* the color; this is intended for cases when you'd really like to have *multiple* classifications, and what to treat the 'derived' parts of a classification as if they are basically separate classifications (e.g. `CD3: CD8`). In Groovy, checking if a cell has the derived classification ""Tumor: Positive"", and setting it to ""Tumor: Negative"" if not, would look like this:; ```groovy; // Original Java way (used in QuPath for all of the early years); if (pathObject.getPathClass() != getPathClass(""Tumor: Positive"")) {; pathObject.setPathClass(getPathClass(""Tumor: Negative"")); }. // Using Groovy's way to avoid get/set; if (pathObject.pathClass != getPathClass(""Tumor: Positive"")) {; pathObject.pathClass = getPathClass(""Tumor: Negative""); }. // With strings; if (pathObject.classification != ""Tumor: Positive"") {; pathObject.classification = ""Tumor: Negative""; }. // With classifications; if (pathObject.classifications != [""Tumor: Positive""] as Set) {; pathObject.classifications = [""Tumor"", ""Negative""]; }; ```; I think the working with string is a bit less cumbersome and confusing than needing to add lots of `getPathClass()` lines. But it is more powerful with tricks like this. ```groovy; // Set all cells to be classified as 'Tumor'; getCellObjects().each {it.classification = 'Tumor'}. // And 'Negative' as a (sub?) classification to all cells; getCellObjects().each {it.classifications += 'Negative'}. // Remove 'Negative' as a (sub?) classification from all cells; getCellObjects().each {it.classifications -= 'Negative'}. // Select all the objects classification *exactly* as tumor; selectObjects {it.classification == 'Tumor'}. // Select all the objects with 'Tumor' *somewhere* in their classification; selectObjects {'Tumor' in it.classifications}; ```. The fact that `classification` and `classifications` differ by only a letter might be a bit confusing, but getting it wrong should throw an exception.... so hopefully the benefits are worth it.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1593:2252,power,powerful,2252,https://qupath.github.io,https://github.com/qupath/qupath/pull/1593,1,['power'],['powerful']
Energy Efficiency,"t's not possible to get around the synchronization. To do that, the `getReader()` option should again be removed. A third option is to make the class *really* minimal and keep the `getReader()` option - but document that it is entirely up to the caller what they do with the reader, and they must take care of synchronization etc. The third option puts much more responsibility on the caller, but has the advantage of allowing the same reader to be reused for different images / series. This might have some small improvements in performance (especially if initializing a reader is slow), but could be brittle and easy to get wrong. > * The `T getImage(int series);` function should be removed, and the `T getImage(TileRequest tileRequest, int[] channels, boolean isRGB, ColorModel colorModel, int series)` function should be used instead. Ideally yes. As the `HnE_3_1x1component_data.tif` example, shows, we don't know what kind of image will be returned by `getImage(int series)`, and so having a separate API that assumes a single-resolution, non-pyramidal, 2D image seems to add (rather than reduce) complexity. > However I didn't understand where the `OMEPixelParser` class would be in all of this. As seen with the `HnE_3_1x1component_data.tif` example, we don't know for sure what. I think we should go back to thinking about the *ideal* design here, based upon what needs to be reusable - and also what are the simplest and safest changes that can be made before the v0.5.0 release. My understanding of the original requirements is. 1. **Essential** The OMERO `Gateway` returns byte arrays in a format very similar to Bio-Formats, and the logic convert these into a `BufferedImage` (with suitable `ColorModel` etc.) is complex. This should be extracted from `BioFormatsImageServer` for reuse.; 2. **Nice to have** The `BioFormatsImageServer` also has a reader pool concept, which *might* be beneficial for the OMERO image server as well.; ; Achieving 1. requires a class to do the parsing, bu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:3072,reduce,reduce,3072,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['reduce'],['reduce']
Energy Efficiency,"teger before being set. So we end up with code like this:; ```java; pathObject.setColorRGB(ColorTools.packRGB(255, 0, 0));; pathClass.setColor(ColorTools.packRGB(255, 0, 0));; ```. There are similar getter methods, which return the packed integer (or sometimes null, if the color isn't set). This then may need to be unpacked, e.g.; ```java; var rgb = pathObject.getColorRGB();; int red = ColorTools.red(rgb);; int green = ColorTools.green(rgb);; int blue = ColorTools.blue(rgb);; ```. A secondary problem is that it isn't clear whether alpha will be used or not. This is possible:; ```java; pathObject.setColorRGB(ColorTools.packARGB(127, 255, 0, 0));; pathClass.setColor(ColorTools.packARGB(127, 255, 0, 0));; ```; but it's not obvious whether the alpha will do anything. ### Describe the solution you'd like. It would be preferable to have something standardized, including the option to provide separate RGB values, e.g.; ```java; pathObject.setColor(red, green, blue); pathClass.setColor(red, green, blue); ```. This could be implemented quickly, deprecating the `PathObject.setColorRGB(Integer)` method. The main decision is whether to take 8-bit RGB values or floats/doubles as input. For now, I propose keeping `public Integer getColor()` - although `getRed()`, `getGreen()` and `getBlue()` methods could potentially be added. ### Describe alternatives you've considered. One way to enforce standardization would be through a `Colorable` interface, which could offer a variant of options as default methods, e.g. ```java. // Main setter; public void setColor(Integer);. // Main getter; public Integer getColor();. // All others default; public default void setColor(int r, int g, int b);. public default void setColor(double r, double g, double b);. public default void setColor(String hex);. public default String getColorHex();. public default int getRed(); // Return Integer? Otherwise can't cope with null... public default int getGreen();. public default int getBlue();. ```. A potential",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1086:1571,green,green,1571,https://qupath.github.io,https://github.com/qupath/qupath/issues/1086,1,['green'],['green']
Energy Efficiency,"thanks for link and idea. ; I personally do not have access to this computer. Pity :); But what I remember is, that for example the person who installed QuPath deleted the QuPath folder in the user folder. ; As far as I understood the text in the linked page, that seems not to be the reason. But maybe he changed also something else that I did not find. . In case I find the reason, I will post it here. . For now, the person in charge seems to prefer just to reinstall and see what happens.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/175#issuecomment-391974886:430,charge,charge,430,https://qupath.github.io,https://github.com/qupath/qupath/issues/175#issuecomment-391974886,1,['charge'],['charge']
Energy Efficiency,"tor[ownerAddress=0x60800080d2a0,deallocatorAddress=0x13aaec9c0]]; INFO: RTrees classifier termination criteria: org.bytedeco.javacpp.opencv_core$TermCriteria[address=0x608000816130,position=0,limit=1,capacity=1,deallocator=org.bytedeco.javacpp.Pointer$NativeDeallocator[ownerAddress=0x608000816130,deallocatorAddress=0x13aae1520]]; ERROR: IOException exception reading file:/Volumes/Storage/Work/SLIDESCANS/190512_OLYMPUS_YKA_Batch/CRUK_YKA_16.1D_tam_2_20190513.vsi#1: x=9728, y=34816, w=512, h=512, z=0, t=0, downsample=1; at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199); at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162); at java.base/sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:816); at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:796); at loci.common.NIOByteBufferProvider.allocateDirect(NIOByteBufferProvider.java:127); at loci.common.NIOByteBufferProvider.allocate(NIOByteBufferProvider.java:112); at loci.common.NIOFileHandle.buffer(NIOFileHandle.java:647); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:133); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:151); at loci.common.NIOFileHandle.<init>(NIOFileHandle.java:165); at loci.common.Location.getHandle(Location.java:522); at loci.common.Location.getHandle(Location.java:462); at loci.common.Location.getHandle(Location.java:443); at loci.common.Location.getHandle(Location.java:426); at loci.common.RandomAccessInputStream.<init>(RandomAccessInputStream.java:125); at loci.formats.in.CellSensReader.decodeTile(CellSensReader.java:1042); at loci.formats.in.CellSensReader.openBytes(CellSensReader.java:549); at loci.formats.FormatReader.openBytes(FormatReader.java:884); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageRead",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316#issuecomment-493938867:5830,allocate,allocate,5830,https://qupath.github.io,https://github.com/qupath/qupath/issues/316#issuecomment-493938867,1,['allocate'],['allocate']
Energy Efficiency,"ulty is with how the [hierarchy](https://github.com/qupath/qupath/wiki/Object-hierarchies) handles annotations that overlap... that can make knowing that's inside what a bit awkward, and not always very intuitive. There may be a manual way to do want you want through the user interface, but I suspect it could be quite laborious. Since this looks like it could be generally useful for others as well, my mind always turns to whether it would be cleaner to write a script or add a new command to the software instead... I have a few questions to check if I understand correctly what you need:; * What are the final outputs you want? Is it the number of immune cells per mm^2 or something else?; * Is it problematic that the green region extends outside the tissue?; * Do you have a strong opinion on having the outer areas (here, green and blue) containing _everything_ (i.e. black nested inside blue, then blue inside green), or would it be acceptable/preferable if each area was independent and non-overlapping (i.e. the black area would be one polygon, but the green and blue would be more like 'hollow rings' around the outside)?; * Does the _Positive cell detection_ work directly (e.g. if you've got hematoxylin and DAB staining, and you just need a count based on cells where DAB is evident), or do you really need a classifier?; * If you _do_ need a classifier, do you need to train it new for every image - or do you plan to train it once, and then apply the same classifier for every image?; * Roughly how many images do you need to analyze in this way? (e.g. tens, hundreds, thousands... to get a rough idea of how automated the approach ultimately needs to be); * Have you already got a lot of existing annotations / cells that you need to reuse, or are you just starting? Usually adding new annotations when there are already a lot of cells can be _very_ slow, and it might be easier to create the annotations first before doing the cell detection. But potentially either way could work.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/198#issuecomment-411011755:1084,green,green,1084,https://qupath.github.io,https://github.com/qupath/qupath/issues/198#issuecomment-411011755,2,['green'],['green']
Energy Efficiency,"ver(uri). // Get the current image and image name; def imageData = new ImageData(server); def name = server.getMetadata().getName(). def save_path = ""thumbnail_dir/"" + name + "".png"". def scale_factor = 8.0. // Save the entire image downsampled by a factor of scale_factor; def requestFull = RegionRequest.createInstance(server, scale_factor); writeImageRegion(server, requestFull, save_path); ```. I run it using the command line: . ```; qupath script -i ""31629 HE.bif"" image_thumbnail.groovy; ```. and the output is as follows:. ```; 11:36:08.817 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8030.00 MB (25.0% max memory); 11:36:09.171 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /tmp/qupath-memo-14642445523855977691; 11:36:09.172 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 11:36:09.363 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; TIFFReadDirectory: Warning, Unknown field with tag 34677 (0x8775) encountered.; 11:36:09.429 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-width' not available, will return default value 256.0; 11:36:09.429 [main] [WARN ] q.l.i.s.o.OpenslideImageServer - Openslide: Property 'openslide.level[0].tile-height' not available, will return default value 256.0; 11:36:09.999 [main] [INFO ] qupath.lib.scripting.QP - Initializing type adapters; ```. Note the `TIFFReadDirectory` warning message in the middle of this. This strongly suggests that the OpenslideServer is actually being used rather than the BioFormats server, despite the explicit commands in the script to use BioFormats. **Expected behavior**; The BioFormats server should be used to open and read the image, as instructed. **Desktop (please complete the following information):**; - OS: Debian GNU/Linux; - QuPath Version 0.2.3. Thanks!",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/658:2384,adapt,adapters,2384,https://qupath.github.io,https://github.com/qupath/qupath/issues/658,1,['adapt'],['adapters']
Energy Efficiency,"ver.java:184); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:275); at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:56); at qupath.lib.images.servers.ServerTools.getPaddedRequest(ServerTools.java:231); at qupath.opencv.ops.ImageOps$DefaultImageDataOp.apply(ImageOps.java:256); at qupath.tensorflow.stardist.StarDist2D.detectObjectsForTile(StarDist2D.java:807); at qupath.tensorflow.stardist.StarDist2D.lambda$detectObjects$5(StarDist2D.java:687); at java.base/java.util.stream.ReferencePipeline$7$1.accept(Unknown Source); at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source); at java.base/java.util.stream.AbstractPipeline.copyInto(Unknown Source); at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); at java.base/java.util.stream.ReduceOps$ReduceTask.doLeaf(Unknown Source); at java.base/java.util.stream.AbstractTask.compute(Unknown Source); at java.base/java.util.concurrent.CountedCompleter.exec(Unknown Source); at java.base/java.util.concurrent.ForkJoinTask.doExec(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool.scan(Unknown Source); at java.base/java.util.concurrent.ForkJoinPool.runWorker(Unknown Source); at java.base/java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source); WARN: file deletion failed C:\Users\oburri\AppData\Local\Temp\qupath-memo-15327719930616011555\biop\Image_Processing\User_Projects\Olivier\USERNAME_REDACTED\Sample images - metadata\.MCF7_hPR_OVX_3rd_M6-10_Ki67.vsi.bfmemo; ```. **To Reproduce**; Steps to reproduce the behavior:; 1. On Windows, create a new Project and add an Image that will use BioFormats; 2. Display the image in the Viewer at least once; 3. Close QuPath and restart; 4. Reopen ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/717:5976,Reduce,ReduceOps,5976,https://qupath.github.io,https://github.com/qupath/qupath/issues/717,2,['Reduce'],"['ReduceOps', 'ReduceTask']"
Energy Efficiency,wEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380); at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294); at java.security.AccessController.doPrivileged(Native Method); at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416); at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389); at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415); at com.sun.glass.ui.View.handleMouseEvent(View.java:555); at com.sun.glass.ui.View.notifyMouse(View.java:937); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191); at java.lang.Thread.run(Thread.java:745); Caused by Array size too large: 23422 x 30978 x 3 x 1 at loci.common.DataTools.safeMultiply32(DataTools.java:1274); at loci.common.DataTools.allocate(DataTools.java:1247); at loci.formats.FormatReader.openBytes(FormatReader.java:877); at loci.formats.ImageReader.openBytes(ImageReader.java:444); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.ReaderWrapper.openBytes(ReaderWrapper.java:334); at loci.formats.gui.BufferedImageReader.openImage(BufferedImageReader.java:86); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:683); at qupath.lib.images.servers.BioFormatsImageServer.readBufferedImage(BioFormatsImageServer.java:95); at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:70); at qupath.lib.gui.helpers.DisplayHelpers.estimateImageType(DisplayHelpers.java:117); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2269); at qupath.lib.gui.QuPathGUI.createNewImageData(QuPathGUI.java:2258); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2236); at qupath.lib.gui.QuPathGUI.openImage(QuPathGUI.java:2152);,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/221:5519,allocate,allocate,5519,https://qupath.github.io,https://github.com/qupath/qupath/issues/221,1,['allocate'],['allocate']
Energy Efficiency,"y and too few measurements. We probably don't need the Haralick features generally, but do need the possibility of membrane measurements (possibly with control over thickness?).; * *'Add intensity features'* tries to handle the tricky problem of arbitrarily large ROIs, by tiling. It is easier to code more imaginative feature measurements if we can assume that all pixels and binary mask can fit easily into RAM.; * *'Add intensity features'* does *not* handle the different cell compartments currently (i.e. nucleus, cytoplasm, cell, membrane). **Additional context**; In writing this, it's not clear to me if we should replace *'Add intensity features'* and *'Add shape features'* with a single, better command at the same time as trying to solve this issue. A few extra considerations and complexities:; * We need to be able to handle color transforms (e.g. color deconvolution); * We need to consider the resolution at which the measurements are calculated; * We need to think a lot about the measurement names; specifically, these need to be unique (since they are effectively stored in a map), and efficiently encode the key info (e.g. compartment, resolution, measurement type). An occasional complaint is that QuPath's cell detection and the StarDist extension use different naming conventions. This was a conscious decision, because the measurements weren't expected to be directly comparable - and so shouldn't be used interchangeably (e.g. when training a cell classifier). But I don't think it was necessarily a *good* decision. With default cell detection, you'd get; ```; Nucleus: Hematoxylin OD mean; ```; but with StarDist (i.e. `ObjectMeasurements`) you woul dhave; ```; Hematoxylin: Nucleus: Mean; ```. Both share the idea of splitting parts with colons... but inconsistently in most respects. If we had a better convention, then this might also be useful to show measurements in a *grouped* way. I suspect grouping first by compartment would be more sensible than by stain. The clo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1551:2484,efficient,efficiently,2484,https://qupath.github.io,https://github.com/qupath/qupath/issues/1551,1,['efficient'],['efficiently']
Integrability," ""spacingMicrons"": 10.0, ""maxIterations"": 10, ""regularization"": 0.25, ""adaptRegularization"": false, ""useDeconvolved"": false}');; selectDetections();; runPlugin('qupath.lib.algorithms.IntensityFeaturesPlugin', '{""pixelSizeMicrons"": 0.25, ""region"": ""ROI"", ""tileSizeMicrons"": 25.0, ""colorOD"": true, ""colorStain1"": true, ""colorStain2"": true, ""colorStain3"": false, ""colorRed"": false, ""colorGreen"": false, ""colorBlue"": false, ""colorHue"": false, ""colorSaturation"": false, ""colorBrightness"": false, ""doMean"": true, ""doStdDev"": true, ""doMinMax"": false, ""doMedian"": false, ""doHaralick"": false, ""haralickDistance"": 1, ""haralickBins"": 32}');; ```. You can also choose a larger size for your SLICs if you want to do more of a tissue structure analysis. Smaller is usually better if you are looking for color differences though. Another options is just using the cell detection mentioned above:; ```; selectAnnotations();; runPlugin('qupath.imagej.detect.nuclei.PositiveCellDetection', '{""detectionImageBrightfield"": ""Optical density sum"", ""requestedPixelSizeMicrons"": 0.25, ""backgroundRadiusMicrons"": 0.0, ""medianRadiusMicrons"": 0.0, ""sigmaMicrons"": 1.5, ""minAreaMicrons"": 15.0, ""maxAreaMicrons"": 60.0, ""threshold"": 0.1, ""maxBackground"": 2.0, ""watershedPostProcess"": true, ""excludeDAB"": false, ""cellExpansionMicrons"": 5.0, ""includeNuclei"": true, ""smoothBoundaries"": true, ""makeMeasurements"": true, ""thresholdCompartment"": ""Nucleus: DAB OD mean"", ""thresholdPositive1"": 0.2690789473684211, ""thresholdPositive2"": 0.4, ""thresholdPositive3"": 0.6, ""singleThreshold"": true}');; ```. Which yielded the following for my square. You may want to tweak the DAB threshold value, and you can always create your own classifier as well based on more data than just the Nucleus DAB OD mean (https://github.com/qupath/qupath/wiki/Classifying-objects):; ![image](https://user-images.githubusercontent.com/23145209/37378645-52636d20-26ed-11e8-88ac-5401852cb5bc.png). It really depends on what exactly you are interested in measuring.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-372875465:3050,depend,depends,3050,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-372875465,1,['depend'],['depends']
Integrability," Zoom from MicroDimensions is Windows-only, I suspect it may be using the Windows-only software libraries provided by [Zeiss](http://www.zeiss.com/microscopy/int/products/microscope-software/zen/czi.html) and [3D Histech](http://www.3dhistech.com/downloads). Since these are not open source (as far as I am aware), they [wouldn't be compatible with QuPath's GPL license](https://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins). Therefore including them would require a change to QuPath's license, and result in extra functionality being available on Windows but not on other platforms... and for these reasons it would really be a last resort. Nevertheless, if you or anyone at your place of work would like to give it a try, creating such an extension may be a [reasonable solution for internal use](https://www.gnu.org/licenses/gpl-faq.html#GPLRequireSourcePostedPublic). The biggest effort required is likely to be in being able to access the pixels from the native libraries within Java, but if that problem is solved then I could certainly help with the relatively small final step of integrating the result with QuPath. Still, hopefully Bio-Formats will be able to provide a solution for `*.czi` files in the near future - I'll post an update here and [Google Groups](https://groups.google.com/d/forum/qupath-users) whenever I see it. If so, that only leaves non-RGB `*.mrxs`. There may be a way to merge separated monochrome TIFFs into a single multi-channel TIFF using [Bio-Formats](http://www.openmicroscopy.org/site/support/bio-formats5.2/supported-formats.html)... although I'm not sure. Alternatively, [Pannoramic Viewer](http://www.3dhistech.com/pannoramic_viewer) may have alternative export options not present in CaseViewer. If neither of these approaches are suitable, I can imagine a new custom image reader within QuPath that is able to automatically concatenate the multiple channels of a TIFF, assuming that they are stored in the same directory with a standard naming scheme (e",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/12#issuecomment-258467053:1222,integrat,integrating,1222,https://qupath.github.io,https://github.com/qupath/qupath/issues/12#issuecomment-258467053,1,['integrat'],['integrating']
Integrability," agree this interface may not be the best one as it could easily just be a checkbox option in the ScriptEditor. For now, though, i think it is enough to enjoy the benefits that this PR brings. > > This last change alone allowed, on my projects, to improve the time when creating an object classifier from ~10/15minutes to ~5seconds. > Can you explain why it takes so long? Huge numbers of images? Slow file format, or is it where the images are stored?. Basically All you the above. It accesses ~50 `.czi` images, weighting ~10GiB each. Leaving the the big size aside, it's also known that BioFormats themselves (required by `.czi`) are slow to work with.; Adding up to this scenario, images are often stored on a remote server (be it OMERO or just a sftp/samba server). This is due to the fact that it is hard for every member of a laboratory to have them stored on their own computer, as they all need to collaborate and, even if they wanted, they would soon fill up their local storage. in this scenario, the fact that QuPath offer an highly-scriptable interface is many laboratories' luck. It means that a pipeline of scripts can be applied one after the other, resulting in a full analysis of the whole project. Sometimes, you may even want to tweak some parameters, and for this you have to re-run the whole pipeline in batch again. In the end, I really get you are wary of quickly merging this. I'm sure reducing code is a top priority in order to offer the best bug-free experience to QuPath's wide user-base. A base experience that can be extended by plug-ins and scripts _outside_ of QuPath's code/responsibility. However, I feel like the ability to run scripts in QuPath is at the **core** of its streghts. It allows to offer an extensible basis on which downstream developers can then build upon.; For this reason I ask you to please also consider future scenarios that this small PR opens up in batch script execution, and not only its implications with the object classifier. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076:2892,interface,interface,2892,https://qupath.github.io,https://github.com/qupath/qupath/pull/1488#issuecomment-2022463076,2,['interface'],['interface']
Integrability," contains a 32-bit float image, along with an 8-bit thumbnail. If I try to open the thumbnail with this PR it fails, I believe because it is using a mixture of metadata (i.e. assuming that it has enough bytes for 32-bit data, and failing with an `ArrayIndexOutOfBoundsException`. > * One tile reader should support accessing only one `series`. Possibly - it is one option to overcome the issue. Currently, the implementation of `BioFormatsReaderWrapper` in this PR has two `getPixelValues()` methods. One of them sets the series and then resets it back to its original value, the other sets it but doesn't reset it. Without the reset, then the reader has changed into a different state - and the values returned by any call that requests metadata from the reader are subject to giving different results *(example at the end of this post)*. Additionally, both methods are potentially broken in a multithreading context because there is no synchronization done on the reader. . Excessive synchronization could harm performance. Forbidding the series and ID to be changed anywhere inside the class - *and* forbidding the reader from being accessed outside (i.e. not providing a `getReader()` option) - would reduce the need for synchronization, but probably not eliminate it because I am not sure that Bio-Formats guarantees that pixels can be accessed simultaneously from different threads even if the series and ID aren't changed. The alternative is to synchronize everything that uses the reader, and then taking care to design the class in such a way that it's not possible to get around the synchronization. To do that, the `getReader()` option should again be removed. A third option is to make the class *really* minimal and keep the `getReader()` option - but document that it is entirely up to the caller what they do with the reader, and they must take care of synchronization etc. The third option puts much more responsibility on the caller, but has the advantage of allowing the same reader",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547:1404,synchroniz,synchronization,1404,https://qupath.github.io,https://github.com/qupath/qupath/pull/1287#issuecomment-1714232547,2,['synchroniz'],['synchronization']
Integrability," not. There is an enigmatic statement [here](https://github.com/qupath/qupath/blob/master/qupath-extension-ij/src/main/java/qupath/imagej/plugins/ImageJMacroRunner.java#L368) that color transforms are ```// Not supported in batch mode, so disable option to avoid confusion``` although I don't recall why... There's also a [hard-coded limit](https://github.com/qupath/qupath/blob/master/qupath-extension-ij/src/main/java/qupath/imagej/plugins/ImageJMacroRunner.java#L229) whereby the macro runner rejects an image with more than 5000x5000 pixels... although the wisdom of this specific limit may also be questionable. I'll look into it, but at the minute it looks like both issues represent 'intended behavior, albeit not desired behavior (by the developer or anyone else)'. Not sure what the right word for that is. In the meantime, depending upon how happy you are with Groovy/Java/the ImageJ API, it would be possible to create a Groovy script to run in QuPath that grabs regions from the image, converts them into ```ImagePlus``` objects for ImageJ, performs whatever processing is required using ImageJ (or even OpenCV or other dependencies if you prefer), and optionally sends back results as the ```PathObjects``` that QuPath requires. There is considerably more effort involved in setting this up for the first time and learning the main methods required (IntelliJ is more or less essential to get auto-complete and link up to the source code), but has the reward of giving you far more ability to customize the analysis and how the results are returned. I have used this approach a lot. If you would like to try this out, the code within [```ImageJMacroRunner.java```](https://github.com/qupath/qupath/blob/master/qupath-extension-ij/src/main/java/qupath/imagej/plugins/ImageJMacroRunner.java) may help to get started, or see the ```Estimate_background_values.groovy``` script included as supplementary material with the [bioRxiv preprint](http://biorxiv.org/content/early/2017/03/06/099796).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/68#issuecomment-297931966:1014,depend,depending,1014,https://qupath.github.io,https://github.com/qupath/qupath/issues/68#issuecomment-297931966,4,['depend'],"['dependencies', 'depending']"
Integrability," personal info to install so I don't want to use it. There are some [links here](https://qupath.readthedocs.io/en/0.4/docs/intro/formats.html#mrxs-3d-histech) that may help give some idea what it's not exactly my favorite file format for whole slide scans. I have seen examples of mrxs images where failing to crop results in very excessive padding (and the associated computational problems), so I still thing cropping / avoiding padding is the more appropriate choice for QuPath to make as a default... and the .scn example demonstrates that it's the right choice there. In conclusion, it sounds like:; * QuPath isn't doing anything weird or buggy - it's behaving as it should here; * You can use QuPath with your pyramidal tiffs, no matter how they are generated (as long as they can be opened by either OpenSlide and Bio-Formats); * You can use QuPath with the mrxs images used to generate tiffs if you do **one** of the following; * generate the tiffs to give the cropped/unpadded region, e.g.; * using [`libvips` and `autocrop`](https://github.com/openslide/openslide/wiki/OpenSlideAndVIPS#slide-bounds); * using QuPath itself (to write an ome-tiff); * import into QuPath with the `--no-crop` option; * correct the coordinates as required when switching between software depending upon whether it adds padding or not; * You *may* be able to use QuPath with other software as long as it doesn't use OpenSlide to read the .mrxs files... but this is untested since very little software seems to support .mrxs directly, and the format is so complex that it doesn't seem at all clear what the 'true' size of an .mrxs file is. Finally (again), OpenSlide Python itself supports conversion to .dzi, which has a [`limit_bounds` option](https://openslide.org/api/python/). All in all, I don't think QuPath is the thing that's making this complicated... it's just unfortunately complicated because of the use of proprietary formats at a lack of standardization around how exactly they *should* be handled.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136:2257,depend,depending,2257,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1631272136,2,['depend'],['depending']
Integrability," the tools to do all kinds of things, but some are easier than others. Distinct commands (e.g. cell detection) can be combined with others (e.g. classifying cells as positive or negative, interactive machine learning) for particular applications (e.g. scoring Ki-67). But these or other commands could be combined in different ways for different applications. QuPath doesn't have a 'Ki-67 scoring' algorithm in particular, but it has the pieces that can be used to create and customize one. _However_... there are a lot of things that I _wouldn't_ try with QuPath's built in commands only, and mitosis detection in H&E is one of them. I'd say the detection task is too difficult and specialized for QuPath's generic cell detection currently. Solving that is a substantial research project in itself (and the subject of some [grand challenges](https://mitos-atypia-14.grand-challenge.org)). That's one of the reasons why QuPath supports scripts and extensions: it's possible to create highly specialist algorithms elsewhere, and either integrate them into QuPath or at least visualize the results through QuPath. Therefore some of the ways in which QuPath can help are:; * for manual counting; * for exporting manual counts as 'ground truth' into a format that can be used to help create a new algorithm, using whatever image processing / machine learning / deep learning libraries and tools you like; * for visualizing the results of an algorithm directly in the context of a whole slide image (using QuPath's objects, classifications & visualization tools to help); * as the platform for running and sharing any algorithm you might create (if it's implemented as a QuPath script or extension). The first of these is pretty laborious, while the last three will take some effort and knowledge on the image analysis side. That's the side I come from... I created QuPath because I needed the tools myself to write new algorithms, and then to share them with pathologists and other researchers. For me, i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/205#issuecomment-414438828:1047,integrat,integrate,1047,https://qupath.github.io,https://github.com/qupath/qupath/issues/205#issuecomment-414438828,2,['integrat'],['integrate']
Integrability," to status (e.g. if an image or project is opened); * Help text available for most commands via the 'Command list'; * Lots more javadocs and a (somewhat) more logical arrangement; * All-new command line interface; * Customize QuPath's launch, call scripts; * Convert images to OME-TIFF; * Scripting improvements; * Updated to Groovy 3 - scripts now support more recent Java syntax (e.g. lambdas, try-with-resources); * Pasting files results in them being converted to absolute paths; * New 'Paste & escape' command to automatically escape characters for Java Strings; * Set logging level with LogManager class; * New 'Measure -> Export measurements' command to export measurements for multiple images within a project; * Scriptable 'Select objects by classification' command; * Optionally show/hide annotation names in the viewer (shortcut key 'N'); * Updated methods to save/load points within the counting tool; * Use TSV files to improve portability; * Support including classifications and other annotation properties; * Optionally sort project entries by URI (e.g. to group images read from the same file); * Improved support for profiling with VisualVM; * Improved support for large, non-pyramidal images; * 'Simplify shape' command can now be applied to all selected annotations; * Bug fixes, including:; * Gap between tiles when calculating superpixels for large regions (https://github.com/qupath/qupath/issues/345); * Cannot create objects when loading simple thresholding classifier (https://github.com/qupath/qupath/issues/403); * Consistency in Measurement Map display (https://github.com/qupath/qupath/issues/295); * Poor performance when working with many annotations (regression in m9); * Freeze when launching ImageJ from Mac under some circumstances; * Use default channel names if Bio-Formats returns an empty String; * Log meaningful warning if pixel classifier uses duplicated channel names; * Update dependencies: JavaFX, OpenCV, Bio-Formats, JFreeSVG, ImageJ, Guava, RichTextFX",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/449:2196,depend,dependencies,2196,https://qupath.github.io,https://github.com/qupath/qupath/pull/449,1,['depend'],['dependencies']
Integrability," value; * It's a whole non-standard API to learn when scripting. It's all pretty cumbersome, as can be seen in a Groovy script:. ```groovy; def allCells = getCellObjects(). // Get an individual measurement for the first cell; def cell = allCells[0]; println cell.getMeasurementList().getMeasurementValue('Nucleus: Area'). // Get all the measurement names and values; println cell.getMeasurementList().getMeasurementNames(); def values = []; for (int i = 0; i < cell.getMeasurementList().size(); i++) {; values << cell.getMeasurementList().getMeasurementValue(i); }; println values; ```. ### Describe the solution you'd like. *Ideally* we'd have a `Map<String, double>` that preserves the efficiency of `MeasurementList`... if only this was permitted by Java. In practice, `Map<String, Double>` is likely to give adequate performance in Groovy - as long as the values are stored as primitives for efficiency in Java. In fact, to maintain compatibility we could initially implement an `AbstractMap` that wraps around an existing `MeasurementList` - with the latter still used internally. We'd need a method added to `PathObject`. ```java; public Map<String, Double> getMeasurements();; ```. This would help by:. * Providing a standard API, which explicitly doesn't permit duplicate keys; * Fitting well with GeoJSON export; * Permitting `MeasurementList` to be deprecated; * Making scripting a lot more intuitive... and almost pythonic. The last one is the biggest motivating factor, since we can then immediate benefit from some extra Groovy goodness. For example, the following script works:. ```groovy; def allCells = getCellObjects(). // Get an individual measurement for the first cell; def cell = allCells[0]; println cell.measurements['Nucleus: Area']. // Get all the measurement names, values or both; println cell.measurements.keySet(); println cell.measurements.values(); println cell.measurements.entrySet(). // Get all the measurements with a specified name for *all* cells; println allCell",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1085:2378,wrap,wraps,2378,https://qupath.github.io,https://github.com/qupath/qupath/issues/1085,1,['wrap'],['wraps']
Integrability,"![image](https://user-images.githubusercontent.com/319932/34761999-668e7b88-f5e6-11e7-90af-a37a66fd6c61.png); This regions is by far not too large, and ironically, this works if I just ask to send a region to imageJ. This message should be disabled I think...",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/133:222,message,message,222,https://qupath.github.io,https://github.com/qupath/qupath/issues/133,1,['message'],['message']
Integrability,"![image](https://user-images.githubusercontent.com/52460788/71204451-24f4ee80-226e-11ea-85e3-745eb9e8fe69.png). When I try to open projects that I have already successfully worked on using the 0.2.0-m2 milestone, the project itself will open but I cannot open any of the images from the project. I figured maybe the milestone version was outdated and so I tried downloading milestone 8 but now my project will not open at all and I get the message shown above. What can I do to access my old projects?",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/388:440,message,message,440,https://qupath.github.io,https://github.com/qupath/qupath/issues/388,1,['message'],['message']
Integrability,"![image](https://user-images.githubusercontent.com/60140243/72807082-40815980-3c5f-11ea-8429-ef7339054b88.png). I have similar error, the drop option doesn't work and when I just try to open image this is message I get. In previous version when bioformats weren't loaded in QuPath I could open vsi files",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/387#issuecomment-576671751:205,message,message,205,https://qupath.github.io,https://github.com/qupath/qupath/issues/387#issuecomment-576671751,1,['message'],['message']
Integrability,"## Bug report. ### Describe the bug; Somewhere between a bug report and enhancement request... The ability to view classifications and names in the grid view is very handy https://github.com/qupath/qupath/pull/1588. The trouble is that, for TMA cores, sorting by name gives `A-1`, `A-10`, `A-11`, `A-2`... which is kinda right, but not what the user likely wants. ### To Reproduce; Steps to reproduce the behavior:; 1. Create a TMA grid with 10 or more columns; 2. Run _Measure → Grid views... → Show TMA core grid view_. ### Expected behavior; Cores are ordered using numbers in a 'smarter' way. ### Desktop (please complete the following information):; - OS: All; - QuPath Version: 0.6.0-SNAPSHOT. ### Additional context; `GeneralTools` has a method that is sort of relevant [here](https://github.com/qupath/qupath/blob/e15df73ff60ef167eac82237586caf1f2e81ceab/qupath-core/src/main/java/qupath/lib/common/GeneralTools.java#L910). It feels like something an existing dependency library might have, but I haven't found it yet. > *Extra thing: when setting the classification of a TMA core *after* the grid is shown, the color doesn't update in the thumbnail image.*",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1657:968,depend,dependency,968,https://qupath.github.io,https://github.com/qupath/qupath/issues/1657,1,['depend'],['dependency']
Integrability,"## Bug report. **Describe the bug**; Add intensity measurements fails with error below when run on a JPG image (set to image type fluorescence). It seems likely that this is due to the normalized OD colors channel showing up second in the list, which inserts it into the channel list prior to the Red Green and Blue channels.; ![image](https://user-images.githubusercontent.com/23145209/65450506-1b382800-ddf2-11e9-82ba-681885b1897b.png); ERROR: Error running plugin: java.lang.IllegalArgumentException: No boolean parameter with key 'colorOD'; at java.base/java.util.concurrent.FutureTask.report(Unknown Source); at java.base/java.util.concurrent.FutureTask.get(Unknown Source); at qupath.lib.plugins.AbstractPluginRunner.awaitCompletion(AbstractPluginRunner.java:193); at qupath.lib.plugins.AbstractPluginRunner.runTasks(AbstractPluginRunner.java:157); at qupath.lib.gui.plugins.PluginRunnerFX.runTasks(PluginRunnerFX.java:94); at qupath.lib.plugins.AbstractPlugin.runPlugin(AbstractPlugin.java:156); at qupath.lib.algorithms.IntensityFeaturesPlugin.runPlugin(IntensityFeaturesPlugin.java:355); at qupath.lib.gui.plugins.ParameterDialogWrapper$1.run(ParameterDialogWrapper.java:185); at java.base/java.lang.Thread.run(Unknown Source); **To Reproduce**; Steps to reproduce the behavior:; Load a 3 color fluorescent image that has been converted into a JPG (Wince. Yes.) Generate cells, try to run Add Intensity Features. Adding fails with a message that is only reported in the log. In multichannel images there is no Normalized OD colors channel that expects or generates OD measurements. In previous versions 1.2/1.3 this also did not occur. I haven't exhaustively checked which M# versions are affected. **Desktop (please complete the following information):**; - OS: Win10; - QuPath Version 0.2.0m4. **Additional context**; Referencing: https://forum.image.sc/t/saving-cell-detection-locations-and-loading-them-in-another-image/29746/12",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/365:1442,message,message,1442,https://qupath.github.io,https://github.com/qupath/qupath/issues/365,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; An example Script does not work in QuPath version 0.2.0-m9 (but in 0.1.2).; The script can be found here: https://github.com/qupath/qupath/wiki/Scripting-examples --> _Tiling a whole slide image_. **To Reproduce**; Use this script in v.0.1.2 and v.0.2.0-m9. **Expected behavior**; works in v.0.1.2 but not in v.0.2.0-m9. **Desktop (please complete the following information):**; - Ubuntu 18.04 LTS; - QuPath Version v.0.1.2 and v.0.2.0-m9. **Additional context**; Error massage is:. ```; > ERROR: It looks like you have tried to import a class 'qupath.imagej.images.servers.ImagePlusServerBuilder' that doesn't exist!; > You should probably remove the broken import statement in your script (around line 17).; > Then you may want to check 'Run -> Include default imports' is selected, or alternatively add ; > import qupath.imagej.tools.IJTools; > at the start of the script. Full error message below.; > ; > ERROR: MultipleCompilationErrorsException at line 16: startup failed:; > Script1.groovy: 17: unable to resolve class qupath.imagej.images.servers.ImagePlusServerBuilder; > @ line 17, column 1.; > import qupath.imagej.images.servers.ImagePlusServerBuilder; > ^; > ; > Script1.groovy: 16: unable to resolve class qupath.imagej.images.servers.ImagePlusServer; > @ line 16, column 1.; > import qupath.imagej.images.servers.ImagePlusServer; > ^; > ; > 2 errors; > ; > ; > ERROR: Script error (MultipleCompilationErrorsException); > at org.codehaus.groovy.control.ErrorCollector.failIfErrors(ErrorCollector.java:311); > at org.codehaus.groovy.control.CompilationUnit.applyToSourceUnits(CompilationUnit.java:975); > at org.codehaus.groovy.control.CompilationUnit.doPhaseOperation(CompilationUnit.java:637); > at org.codehaus.groovy.control.CompilationUnit.compile(CompilationUnit.java:586); > at groovy.lang.GroovyClassLoader.doParseClass(GroovyClassLoader.java:401); > at groovy.lang.GroovyClassLoader.access$300(GroovyClassLoader.java:89); > at groovy.lang.Gro",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/404:924,message,message,924,https://qupath.github.io,https://github.com/qupath/qupath/issues/404,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; Cell expansion (including nucleus size constraint) can fail due to a TopologyException. See:; * https://forum.image.sc/t/stardist-in-qupath-error-message/41242; * https://forum.image.sc/t/topologyexception-found-non-noded-intersection-between-linestring/38549. **To Reproduce**; Hard to reproduce... but depends upon running StarDist cell detection in QuPath v0.2.2 with cell expansion set. Fails intermittently. **Expected behavior**; A single cell failure doesn't cause everything to break down. **Additional context**; Adding in validity checks along the way risks having a substantial performance impact in the majority of cases that *do* work fine, so a more graceful recovery from errors may be sufficient.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/587:183,message,message,183,https://qupath.github.io,https://github.com/qupath/qupath/issues/587,2,"['depend', 'message']","['depends', 'message']"
Integrability,"## Bug report. **Describe the bug**; Error message with 'Locked status cannot be set!' when trying to add pixel classifier measurements to a full image (rather than annotations or detections). **To Reproduce**; Steps to reproduce the behavior:; 1. Create and save pixel classifier or thresholder; 2. Request adding measurements everywhere. **Expected behavior**; No attempt is made to lock the 'Image' (root) object, and no error is shown. **Desktop (please complete the following information):**; - QuPath v.0.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/595:43,message,message,43,https://qupath.github.io,https://github.com/qupath/qupath/issues/595,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; Extensions are loaded after reading image data in the CLI. ; E.g. if reading the image depends on an extension, QuPath will throw an Exception. **To Reproduce**; Steps to reproduce the behavior:; 1. Run a `script` command through the CLI on an image that depends on an extension (e.g. OMERO).; 2. See error happening before the script is even running. **Expected behavior**; Extensions are loaded prior running the script. **Desktop:**; - OS: All; - QuPath Version: v0.3.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/852:124,depend,depends,124,https://qupath.github.io,https://github.com/qupath/qupath/issues/852,2,['depend'],['depends']
Integrability,"## Bug report. **Describe the bug**; If attempting to remove over 255 measurements at once through the measurement manager, the corresponding workflow entry for that action will throw an error. This is due to the maximum number of supported arguments for a groovy function being 255. **To Reproduce**; Steps to reproduce the behavior:; 1. Create >255 different measurements for a project entry containing detection objects.; 2. Remove >255 measurements through the measurement manager GUI in one action.; 3. Create a script from the workflow tab consisting of all of the above actions. Note the error message:; `ERROR: MultipleCompilationErrorsException: startup failed:; General error during instruction selection: The max number of supported arguments is 255, but found 1191`. **Expected behavior**; The script generated from the workflow tab should be able to reproduce most of the plugin-based actions, including the act of removing measurements. A quick fix is to modify the generated script and distribute the list of measurements to remove over multiple `removeMeasurement()` operations. **Screenshots**; ![image](https://user-images.githubusercontent.com/52012166/154319405-e0b09a53-0f29-4feb-a77f-43640053b828.png). **Desktop (please complete the following information):**; - OS: Windows 10; - QuPath Version 0.4.0-SNAPSHOT. **Additional context**; Minor issue, easy enough to manually distribute the list of measurements to remove over multiple `removeMeasurement()` statements",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/915:601,message,message,601,https://qupath.github.io,https://github.com/qupath/qupath/issues/915,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; If the stable release folder *QuPath-0.2.3/* is placed behind a *bin* folder, QuPath will not run. **To Reproduce**; Steps to reproduce the behavior:; 1. `wget https://github.com/qupath/qupath/releases/download/v0.2.3/QuPath-0.2.3-Linux.tar.xz`; 2. `tar -xvf QuPath-0.2.3-Linux.tar.xz`; 3. `cd QuPath-0.2.3/bin/`; 4. `./QuPath-0.2.3`. **Behavior**. If QuPath runs, is dependent under which path it is installed. + `/home/elmar/QuPath-0.2.3/bin` this works; + `/home/elmar/abc/QuPath-0.2.3/bin` this works; + `/home/elmar/bin/QuPath-0.2.3/bin` this will **not** work!. This is the error I receive: ; ```; elmar@computer ~/bin/QuPath-0.2.3/bin $ ./QuPath-0.2.3; Error: could not find libjava.so; Error: Could not find Java SE Runtime Environment.; ``` . **Desktop (please complete the following information):**; - OS: Ubuntu; - QuPath Version 0.2.3 stable release",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/614:405,depend,dependent,405,https://qupath.github.io,https://github.com/qupath/qupath/issues/614,1,['depend'],['dependent']
Integrability,"## Bug report. **Describe the bug**; In some circumstances, a `ConcurrentModificationException` can be thrown when working with measurement lists in parallel threads. A related issue is reported at https://github.com/qupath/qupath/pull/1466 but the proposed fix does not solve the problem here. **To Reproduce**; Try running the script below:; ```groovy; // A growing list of objects; def pathObjects = Collections.synchronizedList([]). // Number of iterations; int n = 1000. // Create a thread to continually request all measurement names; def t = new Thread( {; while (pathObjects.size() < n) {; def list = PathObjectTools.getAvailableFeatures(new ArrayList<>(pathObjects)); }; }); t.start(). // Create a parallel stream to add new objects; java.util.stream.IntStream.range(0, n); .parallel(); .forEach(i -> {; // This happens only with detections!; def pathObject = PathObjects.createDetectionObject(ROIs.createEmptyROI()); pathObjects << pathObject; for (int k = 0; k <= i; k++); pathObject.measurementList.put(""M_$k"", i); }); t.join(); ; println ""Done!""; ```. I see an exception; ```; ERROR: null; java.util.ConcurrentModificationException: null; at java.base/java.util.ArrayList$Itr.checkForComodification(Unknown Source); at java.base/java.util.ArrayList$Itr.next(Unknown Source); at java.base/java.util.Collections$UnmodifiableCollection$1.next(Unknown Source); at java.base/java.util.AbstractCollection.addAll(Unknown Source); at qupath.lib.objects.PathObjectTools.getAvailableFeatures(PathObjectTools.java:2026); at org.codehaus.groovy.vmplugin.v8.IndyInterface.fromCache(IndyInterface.java:321); at QuPathScript$_run_closure1.doCall(QuPathScript:11); at QuPathScript$_run_closure1.doCall(QuPathScript); at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source); at java.base/java.lang.reflect.Method.invoke(Unknown Source); at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343); at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328);",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1591:415,synchroniz,synchronizedList,415,https://qupath.github.io,https://github.com/qupath/qupath/issues/1591,1,['synchroniz'],['synchronizedList']
Integrability,"## Bug report. **Describe the bug**; It's possible to synchronize multiple viewers, so that panning and zooming are related. Unfortunately, for z-stacks or time-series the z-slice and timepoint aren't synchronized. See https://forum.image.sc/t/qupath-synchronize-viewers-z-t-lut-and-b-c/76462. **Expected behavior**; z-position and timepoint are considered when synchronizing viewers. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.4.2 (and probably all earlier versions). **Additional context**; One complexity: should the synchronization handle *offsets* in z and t, or use absolute values?. By this I mean that panning works with 'delta x' and 'delta y', rather than centering the viewers around the same x and y coordinate. This means that if the images don't fully align, some extra steps can be applied to roughly align the viewports before synchronization starts. And all the movement is relative to the viewport when synchronization is turned on. In z and t that could be more difficult, especially since there tend to be few z-slices and timepoints... and it's not possible to navigate beyond these.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1220:54,synchroniz,synchronize,54,https://qupath.github.io,https://github.com/qupath/qupath/issues/1220,7,['synchroniz'],"['synchronization', 'synchronize', 'synchronize-viewers-z-t-lut-and-b-c', 'synchronized', 'synchronizing']"
Integrability,"## Bug report. **Describe the bug**; Memoization in Bio-Formats previously resulted in warnings, but these have become errors in Java 17. See https://github.com/ome/bioformats/issues/3659 for details. Because memoization can be used each time a reader is created, and the error is swallowed up before being propagated to QuPath, this can result in many long stack traces being printed in the log - with no straightforward way to control this on the QuPath side. **To Reproduce**; Try to open any whole slide image using Bio-Formats with memoization enabled.; Browse the image (to ensure multiple readers are requested) and check the log for errors as described in the linked issue. **Expected behavior**; Memoization works. Or, if it doesn't work, it at least fails more quietly. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version v0.4.0-SNAPSHOT (really depending upon whether Java 17+ is used). **Additional context**; This is a significant problem that needs fixed before QuPath v0.4.0.; The easiest approach would be to turn off memoization altogether, but sometimes it is really beneficial.; So we need a way to turn it off only when really necessary.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/957:903,depend,depending,903,https://qupath.github.io,https://github.com/qupath/qupath/issues/957,1,['depend'],['depending']
Integrability,"## Bug report. **Describe the bug**; QuPath crashes very frequently when I try to use the pixel classifier tool. The program just closes without any further warning or error message. Sometimes an error report is generated an saved. . **To Reproduce**. Steps to reproduce the behavior:; 1. Go to 'Classify'; 2. Click on 'Train pixel classifier (experimental)'; 3. Settings: . - Classifier: Random trees, Parameters: Maximum tree depth: 20, Minimum sample count: 10, ; - Resolution: Full (0.3 µm/px), ; - Features: Scales: 0.5, 1.0, 2.0, 4.0, 8.0, Features: Gaussian, Gradient magnitude, ; - Advanced options: Feature normalization: Mean & variance, Boundary strategy: Classify as Stroma, Boundary thickness: 2 pixels. The crash happens when I try to change the settings above, while 'Live prediction' runs. 4. See error; ```; # A fatal error has been detected by the Java Runtime Environment:; #; # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000000cb5b26, pid=9416, tid=7376; #; # JRE version: OpenJDK Runtime Environment (13.0.1+9) (build 13.0.1+9); # Java VM: OpenJDK 64-Bit Server VM (13.0.1+9, mixed mode, tiered, compressed oops, g1 gc, windows-amd64); # Problematic frame:; # C 0x0000000000cb5b26; #; # No core dump will be written. Minidumps are not enabled by default on client versions of Windows; #; # If you would like to submit a bug report, please visit:; # https://github.com/AdoptOpenJDK/openjdk-build/issues; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #. --------------- S U M M A R Y ------------. Command Line: -Djava.library.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8\app;C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Djava.launcher.path=C:\Users\ag5-35\Downloads\QuPath-0.2.0-m8-Windows\QuPath-0.2.0-m8 -Xmx8192M -XX:MaxRAMPercentage=50 qupath.QuPath. Host: Intel(R) Core(TM) i5-9400 CPU @ 2.90GHz, 6 cores, 15G, Windows 10 , 64 bit Build 183",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/394:174,message,message,174,https://qupath.github.io,https://github.com/qupath/qupath/issues/394,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/stardist-error-message-topologyexception/67708/15. I haven't yet replicated it, but it's important to check it out before the next release. **Desktop (please complete the following information):**; - OS: All (presumably); - QuPath Version: Possibly none yet... but if `org.locationtech.jts.geom.GeometryOverlay.isOverlayNG = true` is added by default then it may appear. **Additional context**; This is the first report I've seen of new problems being introduced after adding `isOverlayNG=true` - so definitely needs investigated before making the change.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/996:81,message,message-topologyexception,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/996,1,['message'],['message-topologyexception']
Integrability,"## Bug report. **Describe the bug**; See https://forum.image.sc/t/unexpected-behavior-difference-in-imagej-macro-runner-vs-send-region-to-imagej/96089. **Expected behavior**; It's possible to transfer the cell nucleus and cell boundary to ImageJ for use with the macro runner. *Possibly* this should also pay attention to the `OverlayOptions` in the viewer by default... but this is questionable as it introduces a dependency on the viewer settings. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.5.1 (and earlier). **Additional context**; The issue relates to `OverlayOptions` not being passed through, as shown at https://github.com/qupath/qupath/blob/5066159c6e4fa197c28d003662798dbf08804f08/qupath-extension-processing/src/main/java/qupath/imagej/gui/ImageJMacroRunner.java#L238",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1522:415,depend,dependency,415,https://qupath.github.io,https://github.com/qupath/qupath/issues/1522,1,['depend'],['dependency']
Integrability,"## Bug report. **Describe the bug**; Sometimes processing using a Bio-Formats image fails with; ```java; Reader is null - was the image already closed?; ```; Alas, the image is not closed - or at least shouldn't be. **To Reproduce**; So far I can't... but see https://forum.image.sc/t/qupath-stardist-extension-error-with-large-images/80221. **Expected behavior**; Not this. But depends upon the underlying problem - which might still be a corrupt file. **Desktop (please complete the following information):**; - OS: Windows (probably all); - QuPath Version: v0.4.3; ; **Additional context**; This line is probably at least partially responsible:. https://github.com/qupath/qupath/blob/v0.4.3/qupath-extension-bioformats/src/main/java/qupath/lib/images/servers/bioformats/BioFormatsImageServer.java#L1280. I suspect when I wrote it I believe an `InterruptedException` would be thrown after 60 seconds, but really it just returns null. So we should resort to the logic from the `catch` in that case. Nevertheless, 60 seconds without any reader becoming available is still an unexpectedly long time - which suggests perhaps something somewhere has got stuck.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1265:379,depend,depends,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/1265,1,['depend'],['depends']
Integrability,"## Bug report. **Describe the bug**; The little-known `QuPathGUI.launchQuPath()` method implicitly assumes that it is being launched from an AWT/Swing application. In some other cases, its behavior can be rather suboptimal, including:; * blocking the calling thread (particularly on macOS); * launching a version of QuPath that can be closed once... and never reopened. **To Reproduce**; Rather varied depending upon how QuPath is launched, but see https://forum.image.sc/t/paquo-read-write-qupath-projects-from-python/41892/14. Consider also the following Groovy script from Fiji (with JDK 11+):; ```groovy; def cl = getClass().getClassLoader() as GroovyClassLoader; def path = '/path/to/qupath-0.2.2.jar'; cl.addClasspath(path); Class.forName('qupath.lib.gui.QuPathGUI').getMethod('launchQuPath').invoke(null, (Object[])null); ```. **Expected behavior**; It should be possible to launch QuPath in as many different environments as possible... **Desktop (please complete the following information):**; - QuPath v0.2.0-v0.2.2. **Additional context**; There are a few related issues:; * There are some peculiar macOS-specific issues with threading and event loops: https://forum.image.sc/t/displaying-imagej-and-napari-ui-simultaneously/32187; * Sometimes, checking is using the EDT can cause everything to hang; * Calling `Platform.setImplicitExit(false)` can be required if a JavaFX application needs to be restarted later; * System menubars aren't always possible when launching in a non-standard way",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/603:402,depend,depending,402,https://qupath.github.io,https://github.com/qupath/qupath/issues/603,1,['depend'],['depending']
Integrability,"## Bug report. **Describe the bug**; The manifest in `qupath-app` is missing a main class. When running; ```bash; java -jar ./qupath-app-0.3.0.jar ; ```; the following message is displayed; ```; no main manifest attribute, in ./qupath-app-0.3.0.jar; ```. **Expected behavior**; QuPath can be launched successfully with; ```bash; java -jar ./qupath-app-0.3.0.jar ; ```. **Desktop (please complete the following information):**; - QuPath Version 0.3.0. **Additional context**; Launching from the current directory is still possible with; ```bash; java -cp ""./*"" qupath.QuPath ; ```",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/818:168,message,message,168,https://qupath.github.io,https://github.com/qupath/qupath/issues/818,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; There have been reports of excessive memory use during pixel classification, most recently https://forum.image.sc/t/qupath-not-adhering-to-maxium-memory-use/54265. These can be hard to reproduce, since they tend to occur when pushing QuPath to its limits - but problems certainly seem to be more frequent than they should be. My guess is that at least part of the issue lies in [OpenCVPixelClassifier.java](https://github.com/qupath/qupath/blob/88c7cc45648c1d5b09a840bd1e497ea9a46453aa/qupath-core-processing/src/main/java/qupath/opencv/ml/pixel/OpenCVPixelClassifier.java#L93). Specifically, the classification should be wrapped in a `try (var scope = PointerScope) {...}` block to ensure cleanup. Furthermore, it looks like `mat.close()` should be called rather than `mat.release()`. There may well be other examples of this in the code that should be checked. **To Reproduce**; Steps to reproduce the behavior:; 1. Set `-Xmx2G` and `-Xms2G` when starting QuPath; 2. Open OS-2.ndpi and create several training annotations; 3. Train a pixel classifier at a high resolution (I used a pixel size of ~1.8µm). When I did this, QuPath would fail to complete the classification. A thread dump suggested it was stuck in `Pointer.deallocate()` when trying to initialize a new `Mat`. If I switched to use `PointerScope` the problem went away. (Note that I had some cells on the image too that might have been pushing my memory requirements harder; other memory settings/resolutions could be needed to reproduce the problem). **Expected behavior**; Pixel classification succeeds (or fails) consistently. **Desktop (please complete the following information):**; - OS: testing on macOS, user reports for Windows; - QuPath v0.2.3 (probably all v0.2). **Additional context**; Memory use seems to go beyond `-Xmx` by design with JavaCPP. The following startup options warrant some exploration:; ```; -Dorg.bytedeco.javacpp.maxbytes=5G; -Dorg.bytedeco.javacpp.maxphysicalbytes=5",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/753:659,wrap,wrapped,659,https://qupath.github.io,https://github.com/qupath/qupath/issues/753,1,['wrap'],['wrapped']
Integrability,"## Bug report. **Describe the bug**; There's no way accelerator for *Selection mode*... which isn't itself a bug, until you look at the code and see that there *should* be, it is just the same was the one used to synchronize viewers. See https://forum.image.sc/t/feature-request-keyboard-shortcut-for-selection-mode/45154/3. **Expected behavior**; Accelerator for *Selection mode* works as intended. **Desktop (please complete the following information):**; - QuPath v0.2. **Additional context**. A few things should probably be done:; * Set *Shift + S* as an accelerator (need to check this isn't used elsewhere...); * Make *Selection mode* available in a menu (so its accelerator is displayed); * Log a warning if an accelerator is defined multiple times (within `QuPathGUI.registerAccelerator`); * Optional: Make it easier to define custom accelerators for actions through `QuPathGUI` (see workaround script posted on the forum)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/638:213,synchroniz,synchronize,213,https://qupath.github.io,https://github.com/qupath/qupath/issues/638,1,['synchroniz'],['synchronize']
Integrability,"## Bug report. **Describe the bug**; When I open one of my scripts located in the script directory (directly from the menu) I get the following error messages:. ```; INFO: Loading script file C:\***script.groovy; ERROR: QuPath exception; at javafx.scene.control.skin.MenuButtonSkinBase.lambda$new$7(MenuButtonSkinBase.java:188); at com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428); at java.base/java.security.AccessController.doPrivileged(Unknown Source); at com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427); at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96); at com.sun.glass.ui.win.WinApplication._runLoop(Native Method); at com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:174); at java.base/java.lang.Thread.run(Unknown Source); ```; I can still use the script editor, just need to close the warning.; I've tried changing directory or resaving the scripts but it didn't change anything... **Desktop (please complete the following information):**; - OS: Windows; - QuPath Version 0.2.0-m3",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/349:150,message,messages,150,https://qupath.github.io,https://github.com/qupath/qupath/issues/349,1,['message'],['messages']
Integrability,"## Bug report. **Describe the bug**; When QuPath is first launched, a few key options are presented to the user - which are currently the memory settings, locale and whether to check for updates. Except that these are no longer really key. The memory setting was important in early releases, when memory was specified in absolute terms (e.g. 4GB). Most users would want to increase it depending upon what is available. However, now memory defaults to 50% of the available system memory, which means it's less likely to require adjustment. What's more, the memory can't even be adjusted on macOS anyway due to permissions limitations. Changing the locale is also strongly discouraged, since it can cause confusion - especially when inputting numbers (using a comma or decimal separator). Therefore space is give to a dialog that is no longer fully functional on all platforms, and isn't really needed. **To Reproduce**; Check the current display via *Help &rarr; Show setup options*. **Expected behavior**; Three main things:; * Show a more informative and useful startup dialog, e.g. to introduce the user interface, forum or documentation.; * Relegate non-essential options to the preferences.; * Retain a checkbox to specify whether to check for updates or not. **Screenshots**. Current dialog, as it appears on a Mac.; ![Screenshot 2022-06-02 at 09 37 51](https://user-images.githubusercontent.com/4690904/171590676-2b69b837-681f-4838-9d9e-1fcf6ed5ab5d.png). **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.2. **Additional context**; The locale settings have already been moved to the preferences in https://github.com/qupath/qupath/pull/971; This issue really exists to track the progress of the other required changes for v0.4.0.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/986:385,depend,depending,385,https://qupath.github.io,https://github.com/qupath/qupath/issues/986,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"## Bug report. **Describe the bug**; When converting an image from the command line, progress may be logged - but no message is given when the conversion is complete. This is often ok when running from a terminal, but is awkward if running in eclipse - where it is less clear that the process is complete. **To Reproduce**; Run a command such as; ```; QuPath convert-ome /path/to/CMU-1-Small-Region.svs /path/to/CMU-1-Small-Region2.ome.tif ; ```. Based only on what is printed, it looks like conversion hangs at 97% - when in fact it did terminate properly.; ```; 07:48:16.170 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Writing resolution 1 of 1 (downsample=1.0, 30 tiles); 07:48:16.173 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Writing plane 1/1; 07:48:16.394 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 10% tiles; 07:48:16.492 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 20% tiles; 07:48:16.597 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 30% tiles; 07:48:16.660 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 40% tiles; 07:48:16.744 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 50% tiles; 07:48:16.800 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 60% tiles; 07:48:16.864 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 70% tiles; 07:48:16.935 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 80% tiles; 07:48:17.036 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 90% tiles; 07:48:17.091 [main] [INFO ] q.l.i.writers.ome.OMEPyramidWriter - Written 97% tiles; ```; **Expected behavior**; A clear message printed when conversion is successful, ideally also with timing information. **Desktop (please complete the following information):**; - OS: All; - QuPath Version 0.3.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/859:117,message,message,117,https://qupath.github.io,https://github.com/qupath/qupath/issues/859,2,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; When trying to open a brightfield image with extremely faint staining/no tissue at all, attempts to auto-estimate the stain vectors fail with an extremely uninformative message:. <img width=""419"" alt=""/ by zero error"" src=""https://user-images.githubusercontent.com/4690904/147403042-90adf701-d11d-4581-b8e7-fb830b3a57b0.png"">. The stack trace contains something like; ```; ERROR: Load ImageData; java.lang.ArithmeticException: / by zero; at qupath.lib.gui.tools.GuiTools.estimateImageType(GuiTools.java:353); at qupath.lib.gui.QuPathGUI.openImageEntry(QuPathGUI.java:2843); at qupath.lib.gui.panes.ProjectBrowser.lambda$new$3(ProjectBrowser.java:187); ```. **To Reproduce**; Steps to reproduce the behavior:; 1. Create an entirely white RGB image; 2. Try to open the image in QuPath, with auto-estimate stain vectors selected; 3. See the error. **Expected behavior**; A more informative error should be displayed or logged. I first noticed the problem at https://forum.image.sc/t/problem-about-opening-some-svs-slides-in-qupath-v0-3-1-bio-formats-6-8-0/61404/15 - and the confusing error message masked the underlying file format issue. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.1 (and before)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/880:206,message,message,206,https://qupath.github.io,https://github.com/qupath/qupath/issues/880,2,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; When using *Create composite classifier* to create a composite object classifier, a user would expect pressing 'Save & apply' to store the classifier in the workflow history, making it scriptable. Sadly, it doesn't. **To Reproduce**; Steps to reproduce the behavior:; 1. Create multiple object classifiers, e.g. following https://qupath.readthedocs.io/en/0.3/docs/tutorials/multiplex_analysis.html; 2. Run *Create composite classifier* and select several classifiers; 3. Enter a name for the classifier, and choose *Save & Apply*; 4. Check the workflow history - the composite classifier is not included. Checking the log, there is a message; ```; WARN: Object classifier isn't currently written to the workflow history, sorry...; ```. **Expected behavior**; QuPath should be helpful rather than apologetic. A `runObjectClassifier(""name"")` command should be included. **Desktop (please complete the following information):**; - OS: All; - QuPath v0.3.0. **Additional context**; *Load object classifier* and *Apply classifiers sequentially* can be used instead.; Alternatively, the composite classifier can be saved and then later run via *Load object classifier*.; But these required workarounds are not very intuitive.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/874:671,message,message,671,https://qupath.github.io,https://github.com/qupath/qupath/issues/874,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; When using QuPath v0.3.0-rc1 at the EMBO Advanced Methods in Bioimage Analysis course, density maps worked for most people - but not for all. Even a restart didn't help. Curiously, setting the density radius to 0 shows *something*. This suggests the problems arise during image filtering, which uses the JavaCPP presets for OpenCV. **To Reproduce**; I wish I knew. It might be hardware-dependent (or some other system conflict), but at this point I don't see the issue on any computer I have access to. **Expected behavior**; Consistency across computers where QuPath runs. **Desktop (please complete the following information):**; - OS: Windows 8, Windows 10 (so far); - QuPath Version 0.3.0-rc1. **Additional context**; My guess is that it is may be related to OpenCV, since QuPath is using OpenCV to apply filters and thereby calculate local densities. However, classifiers still seem to work - so not everything is broken, adding to the mystery. **Any more insights from anyone experiencing the bug would be very welcome!**",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/776:423,depend,dependent,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/776,1,['depend'],['dependent']
Integrability,"## Bug report. **Describe the bug**; When using the `script` command in the CLI, the `-i` parameter is used to match an [entry's name](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/src/main/java/qupath/QuPath.java#L290), when the `--help` message indicates that the user must specified a path (`-i, --image=image: Path to an image file.`). **To Reproduce**; Steps to reproduce the behavior:; 1. Run the `script` command from the CLI with path (e.g. `QuPath.exe script -p path/to/project.qpproj -i path/to/image.tif path/to/script.groovy`) -> won't run the script on the specified image; 2. Run the `script` command from the CLI with image name(e.g. `QuPath.exe script -p path/to/project.qpproj -i image-name path/to/script.groovy`) -> runs the script on the specified image. **Expected behavior**; Matching description and behaviour. **Additional context**; The description ([here](https://github.com/qupath/qupath/blob/43aad4ecda893a7eb03c30774e64da5b9547bc86/src/main/java/qupath/QuPath.java#L257)) needs to change.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/609:272,message,message,272,https://qupath.github.io,https://github.com/qupath/qupath/issues/609,1,['message'],['message']
Integrability,"## Bug report. **Describe the bug**; When using the annotation list (under the 'Annotations' tab), pressing backspace or delete doesn't do anything. If *feels* like it should. To actually delete any objects, a user needs to either press the 'Delete' button below the list, or click on the viewer to activate it. This feels cumbersome, and can result in accidentally changing the selection or drawing something in a viewer, depending upon what tool may be selected at the time. **To Reproduce**; Steps to reproduce the behavior:; 1. Draw some annotations; 2. Click inside the annotations list to activate it (and select something); 3. Press backspace; 4. Observe... nothing really. **Expected behavior**; Backspace or delete should work for the list. **Desktop (please complete the following information):**; - QuPath v0.3.0 (and earlier). **Additional context**; Issue highlighted by @tp81 at https://github.com/qupath/qupath/pull/830",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/847:423,depend,depending,423,https://qupath.github.io,https://github.com/qupath/qupath/issues/847,1,['depend'],['depending']
Integrability,"## Bug report. **Describe the bug**; `BioFormatsImageServer` lazily creates a new reader for each thread as required. This is ok if the readers are fast to initialize, but can be a major bottleneck if they are not. This was noticed when working with large CZI images (>30 GB). Initializing a reader took ~3-5s. However, because the method was synchronized and 32 threads were wanting to get pixels for the viewer, many other threads were blocked. This meant that even viewing the image properly was not possible for well over a minute. Once the readers were created, performance was fine. **To Reproduce**; Unfortunately, I'm not aware of any public images images that can be used to test this. It might be evident with any large Axioscan images (I'm not entirely sure). Once the image is open, zoom in and wait for tiles to appear. If experiencing the problem, this will take an unreasonable amount of time. VisualVM indicates that the bottleneck is initializing readers. **Expected behavior**; No major delay in requesting tiles once the image has been opened. **Desktop (please complete the following information):**; - OS: macOS (but likely to be all); - QuPath Version 0.3.0. **Screenshots**; Compare the 'total time' (>100s) with the actual time spent using the CPU (3.6s) for a thread requesting image tiles. ![Screenshot 2021-12-15 at 12 49 12](https://user-images.githubusercontent.com/4690904/146189714-d4197439-8b67-4b79-bf64-f400de9b7b72.png). **Additional context**; A few things could help:; * Reduce the maximum number of tile request threads; * Reduce synchronization when creating readers; * Limit the number of readers Bio-Formats can create, independently of the number of threads making tile requests; * Reduce the calls to `isThisType()` when creating a reader (when the class of the reader can be known)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/865:343,synchroniz,synchronized,343,https://qupath.github.io,https://github.com/qupath/qupath/issues/865,2,['synchroniz'],"['synchronization', 'synchronized']"
Integrability,## Bug report. **Describe the bug**; `WrappedBufferedImageServer` does a dubious RGB check that can result in images wrongly being converted to 8-bit. This can be troublesome when using the `TileExporter` and selecting .ome.tif as the output file format. **To Reproduce**; Use the export script at https://forum.image.sc/t/tilesorter-saving-as-8bit-instead-of-16bit/94848/3 with a non-32-bit image (e.g. LuCa-7color) and .ome.tif as output. The export will likely be 8-bit. **Expected behavior**; The bit-depth of the original image is preserved. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.5.1,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1494:38,Wrap,WrappedBufferedImageServer,38,https://qupath.github.io,https://github.com/qupath/qupath/issues/1494,1,['Wrap'],['WrappedBufferedImageServer']
Integrability,"## Bug report. *Describe the bug*; At some downsample levels, images can display a 1 pixel-width black column on the right edge. *To Reproduce*; 1. Open the [GTEX-12584-1526 image](https://brd.nci.nih.gov/brd/imagedownload/GTEX-12584-1526; ). This image has levels with downsamples 1, 4, and 16.; 2. Check the right edge of the image. No black column, everything is normal.; 3. Click on File, Export images..., Original pixels, JPEG (or PNG) and downsample of 32.; 4. Check the right edge of the produced image. There is a black column of width 1. *Expected behavior*; No black column on any downsample. *Desktop:*; - OS: macOS and Linux, so probably not OS dependant.; - QuPath Version: 0.6.0-SNAPSHOT. *Additional context*; The problem occurs in the [AbstractTileableImageServer.readRegion()](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L266) function. When requesting an image with downsample 32:; * A black image of width 1432 (=`round(imageWidth/32)`) is created ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L302C4-L302C17)).; * All tiles with downsample 16 (because it's the lowest resolution) are retrieved ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L275C3-L275C13)).; * Images corresponding to the above tiles are drawn to the above black image ([here](https://github.com/qupath/qupath/blob/76415104d0653c674716d69a1ecb51e59dae0e83/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L328)). The problem is that the resulting image of downsample 32 is of width 1432, which corresponds to pixels 0 to **45824** (=`1432*32`) of the full resolution image on the x-axis, while the width o",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1527:658,depend,dependant,658,https://qupath.github.io,https://github.com/qupath/qupath/issues/1527,1,['depend'],['dependant']
Integrability,"## Bug report. Sometimes when running cell detection (`qupath.imagej.detect.cells.WatershedCellDetection`) in the parallel tiled mode it will fail saying `ERROR: Exception during post-processing`. It appears the final QuPath method call before calling into a library is `qupath.lib.plugins.ParallelTileObject.resolveOverlaps`, and the error is from [line 280](https://github.com/qupath/qupath/blob/cf618cb91a7e43716c3a4bc7b431de6a88ee98be/qupath-core/src/main/java/qupath/lib/plugins/ParallelTileObject.java#L280), the offending call being `firstGeometry.intersection(secondGeometry)`. The error message from this is `Caused by found non-noded intersection between LINESTRING ( 6336.81 3918.04, 6335.4 3918.39 ) and LINESTRING ( 6335.39013671875 3918.389892578125, 6335.41 3918.39 ) [ (6335.400213222254, 3918.38994707249, NaN) ] at org.locationtech.jts.noding.FastNodingValidator.checkValid(FastNodingValidator.java:140)`. **To Reproduce**; [This script](https://gist.github.com/reynoldscem/4d5f5bf0428057769da6bfd54037e02e) should reproduce the issue. One such image for which this happens is `breast_2/scale-20pc/HE.jpg` from the [ANHIR](https://anhir.grand-challenge.org/Data/) dataset. To reproduce manually we can:. Load an image, and make a rectangular selection around it all. Go to Analyze, Cell Detection, choose the appropriate settings and run. **Expected behavior**; I expect the cell detection to work. As it is, the cells are only detected for some subset of the tiles. **Screenshots**; As we can see only some of the tiles here finish. ![image](https://user-images.githubusercontent.com/5931862/80495409-c9471a00-895f-11ea-942d-cd3b98446c0d.png). **Desktop (please complete the following information):**; - OS: Ubuntu 19.10; - QuPath Version 0.2.0-m10, but I have seen the same issue in m9. Please let me know anything I can try to work around this, or any info on potentially fixing this problem.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/459:596,message,message,596,https://qupath.github.io,https://github.com/qupath/qupath/issues/459,1,['message'],['message']
Integrability,"## Bug report; QuPath 0.3 will not open on a CentOS 7 machine. Qupath 0.2.3 works fine in the same machine. I attach the full log. Steps to reproduce the behavior:; Execute the .sh file from the terminal. **Expected behavior**; To open the graphical interface. **Log**; OpenJDK 64-Bit Server VM warning: Option --illegal-access is deprecated and will be removed in a future release.; Sep 22, 2021 2:59:18 PM com.sun.javafx.application.PlatformImpl startup; WARNING: Unsupported JavaFX configuration: classes were loaded from 'unnamed module @37052337'; *** Error in `/home/xxx/QuPath-0.3/bin/QuPath': free(): invalid pointer: 0x00007f726889bbc0 ***; ======= Backtrace: =========; /lib64/libc.so.6(+0x81679)[0x7fa4aa191679]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f7268605ed2]; /usr/lib64/libstdc++.so.6(_ZNSt6locale5_ImplC1Em+0x1e3)[0x7f7268606323]; /usr/lib64/libstdc++.so.6(+0x71295)[0x7f7268607295]; /lib64/libpthread.so.0(+0x61cb)[0x7fa4a9ad31cb]; /usr/lib64/libstdc++.so.6(+0x712e1)[0x7f72686072e1]; /usr/lib64/libstdc++.so.6(_ZNSt6localeC2Ev+0x13)[0x7f7268607323]; /usr/lib64/libstdc++.so.6(_ZNSt8ios_base4InitC2Ev+0xbc)[0x7f726860417c]; /usr/lib64/dri/swrast_dri.so(+0x85930)[0x7f726bbe8930]; /lib64/ld-linux-x86-64.so.2(+0xf973)[0x7fa4aa9f3973]; /lib64/ld-linux-x86-64.so.2(+0x1454e)[0x7fa4aa9f854e]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/ld-linux-x86-64.so.2(+0x13b3b)[0x7fa4aa9f7b3b]; /lib64/libdl.so.2(+0xeeb)[0x7fa4aa7e0eeb]; /lib64/ld-linux-x86-64.so.2(+0xf784)[0x7fa4aa9f3784]; /lib64/libdl.so.2(+0x14ed)[0x7fa4aa7e14ed]; /lib64/libdl.so.2(dlopen+0x31)[0x7fa4aa7e0f81]; /lib64/libGLX_system.so.0(+0x4444c)[0x7f726ecdd44c]; /lib64/libGLX_system.so.0(+0x4374a)[0x7f726ecdc74a]; /lib64/libGLX_system.so.0(+0x1f138)[0x7f726ecb8138]; /lib64/libGLX_system.so.0(+0x1a9d2)[0x7f726ecb39d2]; /lib64/libGLX_system.so.0(+0x1b7c6)[0x7f726ecb47c6]; /lib64/libGLX.so.0(glXChooseFBConfig+0x31)[0x7f726f5df6b1]; /home/xxx/.op",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/825:250,interface,interface,250,https://qupath.github.io,https://github.com/qupath/qupath/issues/825,1,['interface'],['interface']
Integrability,"## Design issue. **Describe the bug**; `qupath-core` doesn't - and shouldn't have many dependencies. However, it *does* currently have a dependency on OpenCV. This brings in JavaCPP and platform-dependent native libraries, in a way that potentially makes `qupath-core` *much* heavier that it would otherwise be. ## Usage. There are really only two places where OpenCV is used in `qupath-core`:. * [Image resizing](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/awt/common/BufferedImageTools.java#L416); * [Type adaptors for Gson](https://github.com/qupath/qupath/blob/v0.3.2/qupath-core/src/main/java/qupath/lib/io/OpenCVTypeAdapters.java). ## Required change. I think (hope) type adaptors can be shifted to `qupath-core-processing` without too much trouble.; Although since the change was introduced in https://github.com/qupath/qupath/commit/0f0229fc1a6de6312bf3a2e914e9da79cf1f4bd9 the commit message hints that there was a reason to including it in `qupath-core` that might resurface in the future. I expect that the main effort would go into reimplementing image resizing. Ideally, we'd do this without introducing any new dependency (including ImageJ) to retain full control over the code and not have it subject to change with dependency updates. I expect that will be a very fiddly task, requiring some very good unit tests. ## Additional context. Resizing is performed whenever tiles are requested, e.g. https://github.com/qupath/qupath/blob/48dfb82400fb8289fa57242b08effe1977749a51/qupath-core/src/main/java/qupath/lib/images/servers/AbstractTileableImageServer.java#L436-L442. In this case, it is almost always downsampling. We need to support both a 'smooth' and a 'nearest neighbor' implementation, to handle intensity and labeled/binary images at least - although we **might** want to introduce more interpolation options. See also https://github.com/qupath/2022-qupath-hackathon/discussions/2#discussioncomment-2634192. ## Significance. Having OpenCV ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/961:87,depend,dependencies,87,https://qupath.github.io,https://github.com/qupath/qupath/issues/961,4,"['depend', 'message']","['dependencies', 'dependency', 'dependent', 'message']"
Integrability,"## Enhancement request. The Java Topology Suite option `isOverlayNG` is reported to help overcome some exceptions when manipulating complex geometries. I had intended to turn it on by default in v0.4.0, but it seems not to have happened. The workarounds described here are still required:; https://forum.image.sc/t/stardist-error-message-topologyexception/67708/6. The next QuPath release should ensure that it's really turned on. See https://forum.image.sc/t/error-when-merging-annotations/76738/6",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1244:330,message,message-topologyexception,330,https://qupath.github.io,https://github.com/qupath/qupath/issues/1244,1,['message'],['message-topologyexception']
Integrability,"## Feature request. **Is your feature request related to a problem? Please describe.**; OpenSlide supports `bounds` which are [used to crop the image](https://forum.image.sc/t/roi-annotation-to-openslide-coordinates/44475/3). Annotation exports (and possibly other exports) then have basically invalid coordinates to the image data, unless one's using OpenSlide's bounds. . **Describe the solution you'd like**; Exports should be wrt. the original image dimensions, so that other SW can work with the data without OpenSlide dependency.; Export should by default use absolute coordinates, and offer relative ones only as an option. Or, the offset information should be exported along with annotations. **Describe alternatives you've considered**; Manual management of metadata for each slide. Clumsy, chaotic and inflexible. **Additional context**; IMHO this is more a bug report than a feature request. We are dependent on some software (or worse, its version) to be able to work with the data. Any change to the OpenSlide, the library, failure to derive these coordinates etc. breaks everything.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278:524,depend,dependency,524,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278,2,['depend'],"['dependency', 'dependent']"
Integrability,"## Feature request. **Is your feature request related to a problem? Please describe.**; ROIs are immutable and associated with a specific `ImagePlane` (generally z and t index).; This means that transferring a ROI to a different plane is tricky. **Describe the solution you'd like**; Add a `public ROI updatePlane(ImagePlane plane)` method to the `ROI` interface, and ensure it is implemented in all relevant ROI classes. **Describe alternatives you've considered**; Currently, a hack like this needs to be used:; ```groovy; def roi = GeometryTools.geometryToROI(pathObject.getROI().getGeometry(), ImagePlane.getPlane(z, t)); ```; for example [here](https://gist.github.com/petebankhead/6116f921cf8c3223c74b0346c54f532d#file-qupath-copy-annotations-across-stacks-groovy-L54). This is awkward, and can lose information - particularly with ellipses, which would be polygonized. **Additional context**; There are already `ROI.translate(x, y)` and `ROI.scale(x, y)` methods. This will simplify copying ROIs to other planes of a z-stack, which could be useful for annotation.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1052:353,interface,interface,353,https://qupath.github.io,https://github.com/qupath/qupath/issues/1052,1,['interface'],['interface']
Integrability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; A clear and concise description of what the bug is:; TMA tif files of magnification 0.25, 0.625, 1.25, 2.5, and 5x all load with a bright pink background. I don't know how to remove the pink color and the TMA dearrayer doesn't work properly. TMA tiff files larger than 5x will not load at all. 10, 20, and 40x fail to be added to the project. Error message, ""Failed to load one image."" is shown when trying to add one file at a time. **To Reproduce**; Steps to reproduce the behavior:; 1. Click on 'Create project' (make a new folder and name it); 2. Click on 'Add images'; 3. Click on 'choose files'; 4. Navigate to file and select it. ; 5. Click on 'Open'; 6. Click on 'Import'; 7. The result is either a pink thumbnail and pink image or an error message and no image added. **Expected behavior**; A clear and concise description of what you expected to happen:; All tif files should be added to the project and names and thumbnails should be visible on the left hand side of QuPath. Slide backgrounds should be white and not pink. (I know the background isn't actually pink because the files open correctly in ImageScope.). **Screenshots**; Pink background for TMA tiff files; ![2019-11-07_1304](https://user-images.githubusercontent.com/6699385/68389277-db8b8c80-0162-11ea-9a67-38f297589135.png). Failure to upload error message with the attempted upload file highlighted in the Windows window; ![2019-11-07_133",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/374:935,message,message,935,https://qupath.github.io,https://github.com/qupath/qupath/issues/374,1,['message'],['message']
Integrability,"## IMPORTANT!. **This is only for bug reports - for questions or discussions, please use the forum at [image.sc](https://forum.image.sc/tags/qupath) instead**. ## Before we begin... **You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. If not, please do these things first. Otherwise, please fill in the template below with as much information as possible to help us reproduce the bug & fix it. ## Bug report. **Describe the bug**; Black/White squares are appearing in the WSIs when viewed under QuPath 0.2.0-m4 Linux (also happen on older versions). QuPath 0.1.2 does not have this issue, I think it started with QuPath 0.2.0+. See below for a resolution. **To Reproduce**; Steps to reproduce the behavior:; 1. Select a WSI of any type (Mirax, SVS, Tiff...); 2. Notice the display bug. **Expected behavior**; No display bug. **Screenshots**; ![2019-09-02_09-24](https://user-images.githubusercontent.com/4030626/64131323-864a8d80-cd63-11e9-8e66-e4a9201d409c.png). **Desktop (please complete the following information):**; - OS: Linux; - QuPath Version 0.2.0-m4. **Additional context**; This issue is caused by the Pixman library used as a dependency of Openslide. As QuPath ships with a bunch of precompiled shared libraries on Linux (and not using those from the system), it also carries with it this bug. Have a look at [this thread](https://github.com/libvips/libvips/issues/1401) for more information.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355:1294,depend,dependency,1294,https://qupath.github.io,https://github.com/qupath/qupath/issues/355,1,['depend'],['dependency']
Integrability,"## Possible bug report. **Describe the bug**. Serialization to geoJSON following protocol described in docs does not add annotation names, but only annotation class. Re-importing this geoJSON, the annotation name is lost. This may be intended behavior or a geoJSON limitation. **To Reproduce**; create annotation of arbitrary class, and add a custom name like in image below:; ![image](https://user-images.githubusercontent.com/17855764/86157253-1f0d7f00-bad5-11ea-9e65-152499d0b98e.png). Export with this script (not a java/groovy expert here..); ```groovy; import qupath.lib.gui.dialogs.Dialogs;. // Get current image data; def imageData = getCurrentImageData();; def server = imageData.getServer();. // output dir will be prompted; String out_dir = Dialogs.promptForDirectory(null). // get image name as file path; String fp = server.getURIs();; fp = fp.replace(""[file:"",""""); fp = fp[fp.lastIndexOf('/')+1..-1];; fp = fp.take(fp.lastIndexOf('.'));. fp = out_dir + '\\' + fp +'_annotations.json';. // grab annotations; def annotations = getAnnotationObjects();; boolean prettyPrint = true;. // prepare json writer; def gson = GsonTools.getInstance(prettyPrint);; String json = gson.toJson(annotations);; FileWriter writer = new FileWriter(fp);. // write to file; writer.write(json);; writer.close();; ```; produces a json like this, where proprties only contains ""Classification -> Name : test"".; ```json; [; {; ""type"": ""Feature"",; ""id"": ""PathAnnotationObject"",; ""geometry"": {; ""type"": ""Polygon"",; ""coordinates"": [; [; [1254, 4069],; [1239, 4075],; [1239, 4078],; [1236, 4078],; [1006, 4536],; [1009, 4542],; [1470, 5144],; [1473, 5138],; [1966, 5198],; [2047, 4770],; [1892, 4270],; [1889, 4267],; [1883, 4261],; [1880, 4258],; [1272, 4069],; [1254, 4069]; ]; ]; },; ""properties"": {; ""classification"": {; ""name"": ""test"",; ""colorRGB"": -8245601; },; ""isLocked"": false,; ""measurements"": []; }; }; ]; ```. Re-import annotation using like so:; ```groovy; // import libraries; import qupath.lib.io.GsonTo",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/549:81,protocol,protocol,81,https://qupath.github.io,https://github.com/qupath/qupath/issues/549,1,['protocol'],['protocol']
Integrability,"## Version 0.2.0-m10. This is a *milestone* (i.e. still in development) version made available to try out new features early. * Updated to use Java 14; * Easier to build from source; * Code *extensively* revised and cleaned up; * Commands are activated/deactivated according to status (e.g. if an image or project is opened); * Help text available for most commands via the 'Command list'; * Lots more javadocs and a (somewhat) more logical arrangement; * All-new command line interface; * Customize QuPath's launch, call scripts; * Convert images to OME-TIFF; * Scripting improvements; * Updated to Groovy 3 - scripts now support more recent Java syntax (e.g. lambdas, try-with-resources); * Pasting files results in them being converted to absolute paths; * New 'Paste & escape' command to automatically escape characters for Java Strings; * Set logging level with LogManager class; * New 'Measure -> Export measurements' command to export measurements for multiple images within a project; * Scriptable 'Select objects by classification' command; * Optionally show/hide annotation names in the viewer (shortcut key 'N'); * Updated methods to save/load points within the counting tool; * Use TSV files to improve portability; * Support including classifications and other annotation properties; * Optionally sort project entries by URI (e.g. to group images read from the same file); * Improved support for profiling with VisualVM; * Improved support for large, non-pyramidal images; * 'Simplify shape' command can now be applied to all selected annotations; * Bug fixes, including:; * Gap between tiles when calculating superpixels for large regions (https://github.com/qupath/qupath/issues/345); * Cannot create objects when loading simple thresholding classifier (https://github.com/qupath/qupath/issues/403); * Consistency in Measurement Map display (https://github.com/qupath/qupath/issues/295); * Poor performance when working with many annotations (regression in m9); * Freeze when launching ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/449:477,interface,interface,477,https://qupath.github.io,https://github.com/qupath/qupath/pull/449,1,['interface'],['interface']
Integrability,"## Version 0.2.0-m6; This is a *milestone* (i.e. still in development) version made available to try out new features early.; ### Important bug fix!; * Positive per mm^2 measurement fixed; this could be wrong in v0.2.0-m5 (other versions not affected); ### Important behavior change!; * Parent-child relationships are no longer automatically calculated between objects!; For an explanation of the reasons behind this change & what it means, see the blog.; ### Other changes:; * Pixel classifier shows live area measurements with 'Classification' output (in m5 this worked only with 'Probability' output); * New 'Detection centroid distances 2D' command (e.g. to find distances to cells with different classifications); * Smoother drawing, faster viewer repainting; * Point annotation improvements; * Faster repainting; * Converting detections to points now uses nucleus ROIs when applied to cells, no longer requires deleting the detections; * More shortcuts, e.g. Ctrl+Alt+A to select annotations, Ctrl+Alt+D to select detections; * GeometryROI now replaces AreaROI and AWTAreaROI for improved performance and consistency; * Fixed bug when converting ROIs with nested holes to JTS Geometries; * Undo/Redo and tile cache size information added to Memory Monitor; * Added support for ImageWriters to write to output streams; * Updated build script to Gradle 6.0; * Use bioformats_package.jar rather than separate dependences (easier to upgrade/downgrade if needed)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/375:1412,depend,dependences,1412,https://qupath.github.io,https://github.com/qupath/qupath/pull/375,1,['depend'],['dependences']
Integrability,"### Refactored the Script Editor package:; - Separated classes into different files; - Fixed little inconsistencies in the DefaultScriptEditor; - Created 'ScriptHighlighting' Interface -> to be used by ScriptEditors that wants to display different types of highlightings.; - Created `ScriptAutoCompletor` Interface -> to be used by ScriptEditors that implements auto-complete features.; - Created `ScriptSyntax` Interface -> to be used by ScriptEditors that implements syntax formatting features (e.g. brace block handling, smart parentheses, etc..).; - Implemented `Plain` and `Groovy` highlighting/auto-completor/syntaxing.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/917:175,Interface,Interface,175,https://qupath.github.io,https://github.com/qupath/qupath/pull/917,3,['Interface'],['Interface']
Integrability,'Interface can't be instantiated!' errors when running from the command line,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/514:1,Interface,Interface,1,https://qupath.github.io,https://github.com/qupath/qupath/issues/514,1,['Interface'],['Interface']
Integrability,'Synchronize viewers' ignores z and t positions,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1220:1,Synchroniz,Synchronize,1,https://qupath.github.io,https://github.com/qupath/qupath/issues/1220,1,['Synchroniz'],['Synchronize']
Integrability,"); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing; * New 'Memory monitor' and 'Show input display' commands in 'View' menu; * Summary measurements are displayed for the full image when no objects are selected; * Added 'saveImageMeasurement' scripting command; * Revised how images are written; * Moved 'ImageWriterTools' to core module, updated 'ImageWriter' interface; * Changed 'File -> Export regions...' commands to separate between raw pixels & rendered RGB images; * Export multidimensional images as OME-TIFF when no region is selected; * Support labelled/indexed color images with OME-TIFF and PNG; * Improved image type support; * Show under the 'Image' tab; * Include support for uint8, uint16, int16, int32, float32 and float64 types; * Pixel & object classifiers now better separated in the 'Classify' menu; * Added Svidro2 colormap to better highlight extreme values; * More informative PathObject.toString() and ROI.toString() methods; * Improved Brightness/Contrast dialog; * Toggle channels on/off by pressing the 'spacebar' or 'Enter'; * Toggle channels on or off by clicking anywhere in 'selected' column (not only the checkbox); * Dependency updates; * AdoptOpenJDK 13, JavaFX, Groovy, Guava, Bio-Formats, RichTextFX, ImageJ, jpackage; * Bug fixes:; * Fixed size estimate for large images (previously caused some images not to open); * Fixed bug that meant the file chooser forgot the last directory; * Fixed DoG superpixel tiling bug (https://github.com/qupath/qupath/issues/345); * Converting tile classifications to annotations (https://github.com/qupath/qupath/issues/359); * Calculating intensity features for RGB fluorescence (https://github.com/qupath/qupath/issues/365); * Setting stroke thickness, thanks to @jballanc (https://github.com/qupath/qupath/pull/362)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:3102,Depend,Dependency,3102,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,1,['Depend'],['Dependency']
Integrability,"); public static <T extends PathObject> Collection<T> filterByROIIntersectsNucleus(ROI roi, Collection<T> pathObjects); public static <T extends PathObject> Collection<T> filterByROIContainsNucleusCentroid(ROI roi, Collection<T> pathObjects); ```. In case you just want to check if objects are present quickly - but don't necessarily need the objects themselves - you can use:. ```java; // Old method, deprecated; public boolean hasObjectsForRegion(Class<? extends PathObject> cls, ImageRegion region). // New methods; public boolean hasObjectsForRegion(ImageRegion region); public boolean hasAnnotationsForRegion(ImageRegion region); public boolean hasDetectionsForRegion(ImageRegion region); ```. These should effectively report whether `getXXXForRegion` would return an empty collection or not, without needing to generate that collection. ### Accessing objects with point ROIs; This simply accesses objects then filters by ROI type. ```java; // Old method, deprecated; public synchronized Collection<PathObject> getPointObjects(Class<? extends PathObject> cls). // New methods; public Collection<PathObject> getAllPointObjects(); public Collection<PathObject> getAllPointAnnotations() ; ```; This should be sufficiently obscure that there is no need to have separate methods to request point objects of more classes. If you *really* need point detections, for example. filtering the resulting collection should be straightforward, e.g.; ```java; var pointAnnotations = hierarchy.getAllPointObjects().stream().filter(PathObject::isDetection).toList();; ```. ---. To support these changes, `GeometryROI.contains(x, y)` was also updated to make use of an [`IndexedPointInAreaLocator`](https://locationtech.github.io/jts/javadoc/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.html) for complex geometries - enabling centroid tests to benefit from performance improvements with no special logic required outside the `ROI` class itself. Also, some deprecated methods - and deprecated cl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1563:5785,synchroniz,synchronized,5785,https://qupath.github.io,https://github.com/qupath/qupath/pull/1563,1,['synchroniz'],['synchronized']
Integrability,"* Add Deep Java Library dependencies to the dependency catalog, and enable them to be included in builds (even if they aren't currently used...); * Code cleanup; * Support pref width/height with `Dialogs`; * Improve `OpenCVTools.applyTiled` to use internal padding (rather than non-overlapping tiles)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1159:24,depend,dependencies,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/1159,2,['depend'],"['dependencies', 'dependency']"
Integrability,"* Add `LocaleListener` class to make it possible to update text properties automatically when the locale is changed; * Externalize strings for preference pane; * Introduce annotations to use when adding new preferences; * Update dependencies, including Bio-Formats 6.12.0",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1230:229,depend,dependencies,229,https://qupath.github.io,https://github.com/qupath/qupath/pull/1230,1,['depend'],['dependencies']
Integrability,"* Add fill/unfill annotations toolbar button; * Reduce update check fail to a warning (rather than an error); * Show a more informative message is (probably) unable to connect to the internet; * Add 'Training data' title to object/pixel classifier training pie charts; * Remove confusion about whether the pie charts refer to the training or predictions; * Support log histograms with 'single measurement classifier' and 'set cell intensity classification' commands; * Fix the extensions directory path (use 'extensions' subdirectory, not the user path)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1391:136,message,message,136,https://qupath.github.io,https://github.com/qupath/qupath/pull/1391,1,['message'],['message']
Integrability,* Create command line interface with Picocli; * Add script and convert-ome subcommands (in addition to help subcommand); * Auto-discover subcommands; * Support running command scripts,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/446:22,interface,interface,22,https://qupath.github.io,https://github.com/qupath/qupath/pull/446,1,['interface'],['interface']
Integrability,"* Enable new `DnnModel` implementations to be added via extensions (using a `ServiceLoader`); * Make all DeepJavaLibrary engines available when building via gradle properties; * Handle single-channel probability predictions as if they are multichannel when creating objects; * Without this, the 'softmax' assumption would mean that everything was treated as 'detected' since there was no higher channel available; * Store all actions added with `installActions`, so they can be found again via `QuPathGUI.lookupActionByText(String)`; * Add title to startup message (because otherwise drop shadow missing on Windows)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1160:557,message,message,557,https://qupath.github.io,https://github.com/qupath/qupath/pull/1160,1,['message'],['message']
Integrability,"* Fix bug in autocompleting static methods (where the start text could be duplicated).; * Improve caret positioning after completing a method name, depending upon whether the method takes arguments or not",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/965:148,depend,depending,148,https://qupath.github.io,https://github.com/qupath/qupath/pull/965,1,['depend'],['depending']
Integrability,"* Include missing commons dependency; * Support changing image quality in the args array; * Make sure passwords don't filter through to server args (doesn't seem possible anyway, but add an extra check)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/709:26,depend,dependency,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/709,1,['depend'],['dependency']
Integrability,* Make non-modal (since it doesn't need to be modal); * Reuse the instance; * Add to preference pane; * Include a default message when not hovering over buttons,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1125:122,message,message,122,https://qupath.github.io,https://github.com/qupath/qupath/pull/1125,1,['message'],['message']
Integrability,* Support specifying threads for parallel writing; * Reverse tiles when writing each plane of a multi-channel output. The second of these makes it possible to reuse cached tiles much more effectively. In one test example using LuCa-7color_Scan1.qptiff it decreased export time from 270s to 188s (although differences may vary considerably depending upon available memory and how expensive tile reading is). Inspiration from this discussion: https://forum.image.sc/t/saving-to-ome-tiff-slow-warpy-and-qupath/69153/50,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1008:339,depend,depending,339,https://qupath.github.io,https://github.com/qupath/qupath/pull/1008,1,['depend'],['depending']
Integrability,"* convenience as I don't scroll the image side to side (I use the move tool) and prefer using the mouse wheel for zooming. > I think (but haven't thoroughly checked) that the middle button should be less troublesome, partly because Mac mice don't have middle buttons. Of the two proposed changes (side to side tool selection, middle button to come back to the previously selected tool), the middle button is the one I would say is the more useful one. > But I remain a bit apprehensive about needing a debounce delay, and worry about adding even more complexity to the various event filters and handlers that are active when interacting with the viewer. I agree that debounce should really be part of the OS. QuPath shouldn't be blamed for not working quite right with a broken mouse. > Can you say a bit more about how useful you've found this, and when?. * First the one I found most useful: For me, this feature really shines when I need to draw lots of small regions for a pixel classifier. I draw either rectangles or use the polygon tool and yes, I could just try and remember that ""m"" is for move, ""r"" is for rectangle and ""p"" is for polygon. From my testing, I just find using the middle button more practical.; * Side-to-side selection: That came as an afterthought after implementing the middle button. I then use it because it's there, but honestly, the keyboard shortcuts *do* make sense.; * Debounce: Like I said, it helps with worn out buttons, but this isn't normally something anyone will have issues with. I'll keep it at the back of my mind and let you know if there is a real test case for including it in QuPath. > The option remains to add the functionality through an extension or startup script, to give it a bit more time before possibly integrating it into the core software later. I'm all for this. What I can do now is scale back the PR to ""middle button functionality"" (no side-to-side or debounce), and also remove any logging that isn't strictly necessary. Cheers,; Egor",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565:2664,integrat,integrating,2664,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037#issuecomment-1312815565,1,['integrat'],['integrating']
Integrability,"**Describe the bug**. The use of Java's [`Locale`](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Locale.html) class has [caused some trouble in QuPath from the beginning](https://github.com/qupath/qupath/search?q=locale&type=issues). This is somewhat mitigated by explicitly allowing the user to specify the `Locale` and then requesting the appropriate one for format or display (the two available categories). However, depending upon how the `Locale` is requested it can return different results. For me, the following Groovy script; ```groovy; import java.util.*; println Locale.getDefault(); println Locale.getDefault(Locale.Category.FORMAT); println Locale.getDefault(Locale.Category.DISPLAY); ```; prints; ```; INFO: en_GB; INFO: en_US; INFO: en_US; ```; It is curious that `Locale.getDefault()` returns something different from the others... and different from what QuPath allows to be specified. @iwbh15 noticed this caused a problem with the [QuPath Align extension](https://github.com/qupath/qupath-extension-align) and traced it back to `Locale` in [`GeometryTools`](https://github.com/qupath/qupath/blob/75ec9cebe5e3bc5843fc60b07b455ce1215e1fb9/qupath-core/src/main/java/qupath/lib/roi/GeometryTools.java#L139), used in conjunction with a `NumberFormat`. **To Reproduce**; The script above hints there is a problem. To see it in practice requires using QuPath on a computer that uses a different `Locale` and calling a method that relies upon `Locale.getDefault()` *and* uses decimals.... and being surprised. Basically, it's not *that* easy to reproduce in practice.; But at the risk of messing up QuPath's preferences. ```groovy; import java.util.*; import java.text.*. Locale.setDefault(Locale.GERMANY); Locale.setDefault(Locale.Category.FORMAT, Locale.US); println NumberFormat.getInstance(Locale.getDefault()).parse(""0,1234.56""); println NumberFormat.getInstance(Locale.getDefault(Locale.Category.FORMAT)).parse(""0,1234.56""); ```; prints the following; ```; IN",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/886:445,depend,depending,445,https://qupath.github.io,https://github.com/qupath/qupath/issues/886,1,['depend'],['depending']
Integrability,"**Describe the bug**; *File &rarr; Export images &rarr; OME-TIFF* ignores the 'all z-slices' and 'all timepoints' options (more specifically, it exports them all regardless). **Expected behavior**; If the 'all' checkboxes aren't checked, then only the 'current' z-slice or timepoint should be exported - where 'current' depends upon a) the ROI (if there is one), or b) the viewer position. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: v0.2.0-m10, but probably all of them with this command",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/453:320,depend,depends,320,https://qupath.github.io,https://github.com/qupath/qupath/issues/453,1,['depend'],['depends']
Integrability,"**Describe the bug**; Intermittent freezes when training a pixel classifier. These do not resolve over time. Caused by deadlock connected to `HierarchyOverlay`, which seems to trace back to synchronized methods to reset the buffer & repaint the hierarchy being called from different threads. **To Reproduce**; 1. Start training a pixel classifier.; 2. Add annotations, change selected annotations. Does not happen consistently. **Expected behavior**; No freezes... **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; Windows, v0.2.0-m6 only (expect to impact all operating systems, but no other versions)",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/377:190,synchroniz,synchronized,190,https://qupath.github.io,https://github.com/qupath/qupath/issues/377,1,['synchroniz'],['synchronized']
Integrability,"**Describe the bug**; LabeledImageServers do not pyramidalize by default and so throw an error when a user tries to export a whole slide image as a label. This can be circumvented by pyramidalizing the labelServer, but the user would not necessarily know this from the error message.; See https://forum.image.sc/t/exporting-full-labelled-images-of-arbitrary-large-wsis/66708/11. **To Reproduce**; Create a tissue annotation of a very large whole slide image. Export as a downsample 1 labeled image.; Error: `IllegalArgumentException at line X: Dimensions (width=W height=H) are too large.`; **Expected behavior**; Possibly provide a warning that the labeledImageServer needs to be pyramidalized - alternatively default to using a pyramidalized image server if the image is ""too large"". The image output type would probably need to be overwritten to ome.tif if it was not already that, with yet another warning message.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/984:275,message,message,275,https://qupath.github.io,https://github.com/qupath/qupath/issues/984,2,['message'],['message']
Integrability,"**Describe the bug**; On QuPath 0.4.1, when I try to create points, at the moment I right click to set a Class, the bug appears, and a log window indicates:. `INFO: QuPath build: Version: 0.4.1; Build time: 2023-01-07, 12:00; INFO: Setting tile cache size to 3972.00 MB (25.0% max memory); INFO: Refreshing extensions in Path/to/QuPath/extensions/extensions; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-stardist-0.4.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-cellpose-0.6.0.jar; INFO: Added extension: Path/to/QuPath/extensions/extensions/qupath-extension-imagecombiner-0.2.3.jar; INFO: Initializing type adapters; INFO: CUDA detected and will be used if possible. Use DnnTools.setUseCuda(false) to turn this off.; INFO: Loaded extension BIOP Cellpose extension (3 ms); INFO: Bio-Formats version 6.11.1; INFO: Bio-Formats memoization is turned OFF (based on Java 17.0.5+8, Bio-Formats 6.11.1); INFO: Loaded extension Bio-Formats options (Bio-Formats 6.11.1) (9 ms); INFO: Loaded extension ImageCombiner extension (1 ms); INFO: Loaded extension ImageJ extension (34 ms); INFO: Loaded extension Processing extension (16 ms); INFO: Loaded extension Rich script editor extension (144 ms); INFO: Loaded extension SVG export extension (0 ms); INFO: Loaded extension StarDist extension (2 ms); INFO: OpenSlide version 3.4.1; INFO: Starting QuPath with parameters: []; INFO: Update check for https://github.com/qupath/qupath; INFO: No newer release for QuPath (0.4.1 is newer than 0.4.1); INFO: Update check for https://github.com/qupath/qupath-extension-stardist; INFO: No newer release for StarDist extension (0.4.0 is newer than 0.4.0); INFO: Update check for https://github.com/biop/qupath-extension-cellpose; INFO: No newer release for Cellpose 2D QuPath Extension (0.6.0 is newer than 0.6.0); WARN: Selecting project file /media/image_in/T7 Shield/Recherche/LABO/12.22-Efferocytose_InCuCyte/qupath/QupathProject_donneur1/project.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1202:679,adapter,adapters,679,https://qupath.github.io,https://github.com/qupath/qupath/issues/1202,1,['adapter'],['adapters']
Integrability,"**Describe the bug**; Pressing the space bar with multiple viewers open triggers an error message and the log window opening. Other than that, nothing bad seems to happen.; From v 0.1.3; ""ERROR: QuPath exception; at qupath.lib.gui.viewer.QuPathViewer.setSpaceDown(QuPathViewer.java:772)"". **To Reproduce**; Steps to reproduce the behavior:; Open two viewers (there do not have to be images open in both), select second window press space bar. The primary window does not seem to have the same effect if there is only one image open (primary viewer has image, secondary viewer has none). If you open an image in both viewers, both viewers trigger the space bar error. Simply creating two viewers that are empty does not trigger an error when pressing space bar. **Expected behavior**; No errors ever. At all. **Desktop (please complete the following information):**; Win10, 64 and Win7 64; Affects versions 0.2.0m1, m2 and 0.1.3. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/288:90,message,message,90,https://qupath.github.io,https://github.com/qupath/qupath/issues/288,1,['message'],['message']
Integrability,"**Describe the bug**; Starting with m10, when the new command line was introduced, the ""getCurrentImageData()"" function returns NULL. Prior to 0.2.0-m10 (m4 -> m9 confirmed working) the following command could be used to run a script on the (MacOS) command line ""QuPath-0.2.0-m9 -image myimage.svs -script myscript.groovy"". The arguments ""-image"" identifited the image and ""-script"" identified the script. On execution you would see QuPath output (e.g. qupath.QuPath - Launching QuPath with args), then the script would be executed. In versions after 0.2.0-m10, including the 0.2.0 release, I am trying to use the command ""QuPath-0.2.0 -i=myimage script myscript.groovy"", but this fails with NullPointerException related to a null returned by ""getCurrentImageData()"". The exact same script works just fine using the script editor in all versions. . I am possibly using the new command line interface incorrectly. . **To Reproduce**; Steps to reproduce the behavior:; 1. Create any script that needs to reference the current image, without using a project. The following script ""myscript.groovy"" demonstrates the issue:; ```; import static qupath.lib.gui.scripting.QPEx.*. def imageData = getCurrentImageData(). if(imageData == null) {; println ""imageData == Null""; } else {; println ""imageData != Null""; }. def server = imageData.getServer(); ```; 2. Run the script referencing an image on the command line: ; ```; ./QuPath-0.2.0 -i=myimage.svs script myscript.groovy; ```; 3. See error:; imageData == Null; NullPointerException at line 11: Cannot invoke method getServer() on null object. **Expected behavior**; I would expect that if the command line arguments were changed to the new format the script processing would work the same as 0.2.0-m9 and earlier. The script editor seems to work just fine. Example working output from 0.2.0-m9 is shown below: . 10:23:10.593 [main] [INFO ] qupath.QuPath - Launching QuPath with args: -image, myimage.svs, -script, myscript.groovy; 10:23:11.387 [main] [WA",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/511:890,interface,interface,890,https://qupath.github.io,https://github.com/qupath/qupath/issues/511,1,['interface'],['interface']
Integrability,"**Describe the bug**; The automated update check happens in a background thread, but then tries to update the UI. This can cause an exception when there's something to update. **To Reproduce**; See https://forum.image.sc/t/error-on-launching-qupath-v0-4-0/75116. Depends upon an update to something being available - manually checking for updates probably won't show this problem. > Edit: Manually checking *does* have the same problem... **Expected behavior**; Update check succeeds, or fails quietly. Because it acts on the right thread. **Desktop (please complete the following information):**; - OS: All; - QuPath Version: 0.4.0. **Additional context**; This is potentially horrible, since when QuPath is updated everyone who has it installed will see the exception... so better to fix it before we have even more downloads :(",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1191:263,Depend,Depends,263,https://qupath.github.io,https://github.com/qupath/qupath/issues/1191,1,['Depend'],['Depends']
Integrability,"**Describe the bug**; Unfortunately I am not able to share a lot of details (screenshots/reports) as it happenned a few days ago... but after all I thought it would be a good idea to share it here.; I was working on the analysis of some IF images. I created a project, set the images to fluorescence, applied the viewing settings I wanted, and started annotating the tissue. I have several annotations to draw on each tissue to mark specific areas, and it is relatively time consuming to do for 20 images. I also worked out the best cellular detections, trained a classifier, and got pretty much where I wanted.; I checked all images again, double checked all annotations and everything seemed fine.; I then started a batch analysis... which started normally. Once finished (and I didn't get any error message), I checked my detection and annotations results and >15 slides had no data. When I tried openning the images in the QuPath project, everything was gone: I get ask to set the image type and all annotations had disappear. I tried openning the .backup file but everything was gone there too. ; I'm thinking I must have done something wrong but I have no idea what... and unfortunately the .backup file was not enough to save me from doing everything again. I guess my questions are: do you know what could have caused this to happen? would there be a way of exporting the annotations separately (to save them for easy re-load if needed) ?. **Desktop:**; - OS: macOS Sierra; - QuPath Version 0.2",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/316:802,message,message,802,https://qupath.github.io,https://github.com/qupath/qupath/issues/316,1,['message'],['message']
Integrability,"**Describe the bug**; `Interface can't be instantiated!` exceptions occur when running some scripts from the command line, even though these work fine when run through the script editor. See https://forum.image.sc/t/cli-pixel-classifier/38679. **Expected behavior**; Scripts that run through the GUI also work when run from the command line. **Additional context**; TypeAdapters need to be registered before `GsonTools` is able to deserialize core objects (including any `PixelClassifier`). This usually happens during initialization of the GUI, whenever extensions are created. But when calling from the command line, extensions are not loaded in the same way. Consequently, anything that relies upon timely extension-loading may fail.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/514:23,Interface,Interface,23,https://qupath.github.io,https://github.com/qupath/qupath/issues/514,1,['Interface'],['Interface']
Integrability,"**Describe the bug/To Reproduce**. On some Ventana BIF images, there is a warning message:; `TIFFReadDirectory: Warning, Unknown field with tag 34677 (0x8775) encountered.`. I have specifically instructed QuPath to open the image using the BioFormats library, which knows how to handle this tag. Here is the script:. ```groovy; import qupath.lib.scripting.QP. // We want to specify the image server so that we get replicable results; // https://forum.image.sc/t/specifying-the-imageserver-image-provider-server-type>. // Get the URI of the image under consideration; we need to pass this; // to the new server. The image is specified as a commandline parameter; // in the QuPath call.; def currentServer = getCurrentServer(); def uri = currentServer.getURIs()[0]. def server = new qupath.lib.images.servers.bioformats.BioFormatsServerBuilder().buildServer(uri). // Get the current image and image name; def imageData = new ImageData(server); def name = server.getMetadata().getName(). def save_path = ""thumbnail_dir/"" + name + "".png"". def scale_factor = 8.0. // Save the entire image downsampled by a factor of scale_factor; def requestFull = RegionRequest.createInstance(server, scale_factor); writeImageRegion(server, requestFull, save_path); ```. I run it using the command line: . ```; qupath script -i ""31629 HE.bif"" image_thumbnail.groovy; ```. and the output is as follows:. ```; 11:36:08.817 [main] [INFO ] qupath.ScriptCommand - Setting tile cache size to 8030.00 MB (25.0% max memory); 11:36:09.171 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - Temp memoization directory created at /tmp/qupath-memo-14642445523855977691; 11:36:09.172 [main] [WARN ] q.l.i.s.b.BioFormatsImageServer - If you want to avoid this warning, either disable Bio-Formats memoization in the preferences or specify a directory to use; 11:36:09.363 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; TIFFReadDirectory: Warning, Unknown field with tag 34677 (0x8775) encountered.; 11:36:09.429",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/658:82,message,message,82,https://qupath.github.io,https://github.com/qupath/qupath/issues/658,1,['message'],['message']
Integrability,"**Extra:** CUDA 11.8 suggests to me you were following the instructions for [QuPath v0.5.x here](https://qupath.readthedocs.io/en/stable/docs/deep/gpu.html#pytorch). These need to be updated for v0.6.0.; We will do this when we've time, but my guess is that you'll need a different CUDA version (possibly [12.1](https://publish.djl.ai/pytorch/2.3.1/files.txt)). For reference, QuPath v0.6.0-rc1 uses DJL v0.29.0 - which defaults to PyTorch 2.3.1 according to [this link](http://djl.ai/engines/pytorch/pytorch-engine/). QuPath v0.6.0-rc2 is likely to use DJL v0.30.0, which has only just been released... and may require [CUDA 12.4](https://publish.djl.ai/pytorch/2.4.0/files.txt). We've been incredibly busy trying to make all these releases, and I'd ask for patience as we update the docs and try to stabilize all the final versions. The CUDA question in particular is further complicated by our dependencies updating, and none of us routinely using Windows.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598:897,depend,dependencies,897,https://qupath.github.io,https://github.com/qupath/qupath/issues/1640#issuecomment-2352852598,2,"['depend', 'rout']","['dependencies', 'routinely']"
Integrability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; A clear and concise description of what the bug is.; Zooming in and out with the mousewheel with multiple viewers open results in slight ""zoom lag"" in unselected (non active) windows. Harder to confirm, but I believe there is related XY drift.; **To Reproduce**; Steps to reproduce the behavior:; Open two windows using multiviewer. Open an image in both, it should default to the same zoom. Rapidly zoom in, and the zoom will desync, with the non-selected window . **Expected behavior**; Zoom stays synchronized within all windows.; **Screenshots**; If applicable, add screenshots to help explain your problem. **Desktop (please complete the following information):**; All versions, Win10,7 64 bit. **Additional context**; Add any other context about the problem here.; Testing bug submission",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/284:898,synchroniz,synchronized,898,https://qupath.github.io,https://github.com/qupath/qupath/issues/284,1,['synchroniz'],['synchronized']
Integrability,"**You've checked https://qupath.github.io for a new release that might already have fixed the issue, right?**. **And you've searched for related issues here to see if the issues has already been reported?**. Good, then please fill in the template about the bug... > For general questions about the software (not bugs) use [image.sc](https://forum.image.sc/tags/qupath). ----. **Describe the bug**; Opening a project file by double-clicking in file file explorer [Windows 10 x64] fails if path contains special characters [in my case it was Ø]. QuPath error message: Could not open file. Opening the same project file residing in the same folder by using QuPath menu option ""Open project"" works fine. **To Reproduce**; Steps to reproduce the behavior:; On Windows 10 x64:; 1. create a project in a folder containing a special character (e.g. ø); 2. double click the project file in file explorer to open through MIME-type association; 3. QuPath opens but cannot open the project. **Expected behavior**; QuPath opens the project. **Screenshots**; not needed. **Desktop (please complete the following information):**; - OS: Windows 10 x64; - QuPath Version 0.2.0. **Additional context**; ---",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/320:557,message,message,557,https://qupath.github.io,https://github.com/qupath/qupath/issues/320,1,['message'],['message']
Integrability,", but I wasn't completely sure which I should be doing so I created a quick Python simulation to test what happens: https://gist.github.com/petebankhead/2d4a21cb69f3b68c8f8fa14475723647. Based on this, it seems I need to round in both directions... which was maybe a predictable conclusion for the more mathematically confident, but I wasn't sure of it's what QuPath does internally* and we can't count on users necessarily knowing that. (*However*, note that if the downsample is < 1 then all the methods fail...). I think it would be nice to resolve the ambiguity somehow, although adding an extra method; ```java; public T readLevel(int level, int x, int y, int width, int height, int z, int t);; ```; looks like a horrible explosion of ints. A possibly-simpler alternative might be to support something like this:; ```java; public T readScaledRegion(double downsample, int outputX, int outputY, int outputWidth, int outputHeight, int z, int t);; ```; where the coordinates are defined according to the output image, but the downsample isn't fixed to *have* to be a pyramidal level. Thinking about it, that could potentially be implemented more simply with another default method added to the interface that ultimately just called `readRegion`. The main trouble is that I don't know what to call the method. I'll keep thinking and try to add something to this PR.... *- I think that QuPath is doing the right thing in most places (based on [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142) and [this](https://github.com/qupath/qupath/blob/053efeff6d941e7a73beab5445cf0d6238ed97b7/qupath-core/src/main/java/qupath/lib/images/servers/TileRequest.java#L142)). But I strongly suspect the [`TileExporter`](https://github.com/qupath/qupath/blob/9eaf034e2cd0325d38967bde5ac43900ddc15e3f/qupath-core/src/main/java/qupath/lib/images/writers/TileExporter.java) isn't always doing the right thing.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089:2359,interface,interface,2359,https://qupath.github.io,https://github.com/qupath/qupath/pull/1072#issuecomment-1278540089,2,['interface'],['interface']
Integrability,",. I convert my image in mrxs (tiles in jpeg) channel by channel with panoramic viewer. So now I can open the image with Qupath. Is there a way to calculate the intensity for fluorescence above a threshold with Qupath or do we have to use Image J with the; Function (Extension/Image J/Send region to ImageJ) ?. I also try to export also the image in TIF with panoramic viewer (jpeg). Using Image J to open it is very long ( around 5 minutes), the TIF have several resolution, I load the best resolution (extended), my computer is quite powerful but the image is around 4Gb.; I obtain 3 channels whereas I should have only one. So it seems not easy to work with TIF tiles images (no compression or jpeg compression) with Image J. In QuPath, I cannot load this TIF, is-it normal ?. Thanks very much for your help,. Mathieu. De : Pete <notifications@github.com>; Envoyé : Friday, July 20, 2018 4:50 PM; À : qupath/qupath <qupath@noreply.github.com>; Cc : Mathieu FALLET <fallet@ciml.univ-mrs.fr>; Author <author@noreply.github.com>; Objet : Re: [qupath/qupath] resolution very bad with mrxs format (#187). It may work if it is 8-bit RGB (i.e. three channels), and does not use JPEG-XR compression. However if the original data is 16-bit, or has more channels, then there is the risk of a considerable loss of information on conversion. It would be fantastic if the company behind the format could offer a solution - ideally through Bio-Formats (since QuPath and many other software applications already support Bio-Formats). Otherwise, it is sadly the case that people depending on certain scanners using proprietary file formats may not be able to analyze their data with QuPath, or open source tools. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/qupath/qupath/issues/187#issuecomment-406624163>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AnjxC34M2KOVzGqUYk4mTbNwwg4P8gbDks5uIe4ngaJpZM4VYHCt>.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/187#issuecomment-407029411:1574,depend,depending,1574,https://qupath.github.io,https://github.com/qupath/qupath/issues/187#issuecomment-407029411,1,['depend'],['depending']
Integrability,- Fix QuPath version compatibility logging when extensions can't be installed; - Support `GeneralTools.isAppleSilicon()`; - Update the welcome message,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1624:143,message,message,143,https://qupath.github.io,https://github.com/qupath/qupath/pull/1624,1,['message'],['message']
Integrability,"- Fixed several formatting issues for Windows, including:; - Import of tab-delimited data (e.g. TMA grids); - Escaping of paths when exporting TMA data; - Separation of paths in 'Help -> System info'; - Cached image paths (still experimental); - TMA data export now records directory (rather than name) in script, so that it can be reused across a project without editing; - Added use of OpenSlide's background color - this fixes previously-buggy appearance when scans where part of the image is omitted (e.g. some mrxs images); - Updated TMA dearraying command to support fluorescence TMAs; - Modified TMA dearraying script command to abort if dearraying for the first time by default - this encourages good practice of checking dearrayed result prior to running full analysis (although means that any generated script would need to be run twice - once to dearray, and then again to do everything else); - 'Relabel TMA Grid' now a scriptable command; - Fixed reassigning child objects with 'Make inverse annotation' command; - Fixed bug that prevented plugins cancelling more than once; - Minor improvements to Brightness/Contrast panel; - Set default logging level to INFO; - Added sample script to change logging level; - Improved display of licenses & third-party dependencies; - Updated location of user preferences; - Added menu entry to reset preferences",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/4:1268,depend,dependencies,1268,https://qupath.github.io,https://github.com/qupath/qupath/pull/4,1,['depend'],['dependencies']
Integrability,- Implemented command line interface with picocli.; - Implemented commands:; 1. help; 2. convert; 3. script; 4. 'open QuPath with arguments',MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/439:27,interface,interface,27,https://qupath.github.io,https://github.com/qupath/qupath/pull/439,1,['interface'],['interface']
Integrability,"- Now allows 3 different kinds of OMERO URLs (i.e. ""Webgateway"", ""Webclient"", ""iViewer""); - Handles import of multiple images in a single URL; - Handles whole projects/datasets import; - Safer password handling; - Clearer warning/error messages when Exceptions occur",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/479:236,message,messages,236,https://qupath.github.io,https://github.com/qupath/qupath/pull/479,1,['message'],['messages']
Integrability,- Prompt the user if given output path is not a full path.; - Log message after export with full output path.; - Changed warning displayed to user when exporting a currently opened image.; - Small fix in Dialogs.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/469:66,message,message,66,https://qupath.github.io,https://github.com/qupath/qupath/pull/469,1,['message'],['message']
Integrability,"- QuPath now checks for the validity of OMERO image entries when opening projects/datasets through the OMERO browser (so the user is not stuck getting a lot of error messages when opening a dataset with loads of invalid images).; - Restrict the objects sent back to OMERO through the GUI to annotations only. Sending detections is still possible but only throught scripting.; - Running 'Send selected annotations to OMERO' with no selection will prompt the user with a dialog that asks if the command should be ran with all the annotations present in the current image.; - Removed '(s)'; - Added TMACoreObject serialization. This means that it is technically possible to run 'Send selected annotations to OMERO' for a selected TMA core. It will then behave as expected (N.B. on OMERO, it will still appear as a normal 'OMERO ROI')",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/708:166,message,messages,166,https://qupath.github.io,https://github.com/qupath/qupath/pull/708,1,['message'],['messages']
Integrability,". This is described in more detail in the [Decimal mark](https://en.wikipedia.org/wiki/Decimal_mark) Wikipedia article. This scenario isn't great for software that is intended to be used worldwide for scientific applications, where the format in which numbers are entered and exported really matters. ### Locales & formatting numbers. The good news is that Java can support different [Locales](https://docs.oracle.com/javase/tutorial/i18n/locale/index.html). This makes it possible to write code that takes the region into consideration. The very bad news is that handling this predictably is far from straightforward. This arises partly because there are many ways to format numbers within Java, some more convenient than others, and some more problematic than others. For example, considering the following Groovy script to test out different methods:. ```groovy; import java.text.*;. def count = 1;; def sb = new StringBuffer(""\n"");. def s = NumberFormat.getInstance().format(1.234); // Depends on default Locale; sb.append(count++).append("": "").append(s).append(""\n"");. s = NumberFormat.getInstance(Locale.GERMANY).format(1.234); // 1,234; sb.append(count++).append("": "").append(s).append(""\n"");. s = new DecimalFormat(""#.##"").format(1.234); // Depends on default Locale, 2 decimal places; sb.append(count++).append("": "").append(s).append(""\n"");. s = String.format(""My number is %.3f"", 1.234); // Depends on default Locale; sb.append(count++).append("": "").append(s).append(""\n"");. s = ""My number is "" + 1.234; // 1.234 - always uses the dot; sb.append(count++).append("": "").append(s).append(""\n"");; ```. The output when I run it with my default English UK setting is:; ```; 1: 1.234; 2: 1,234; 3: 1.23; 4: My number is 1.234; 5: My number is 1.234; ```. Alternatively, if I switch to using a German Locale I see:; ```; 1: 1,234; 2: 1,234; 3: 1,23; 4: My number is 1,234; 5: My number is 1.234; ```. In most of these scenarios the Locale is respected (either the default, or one that is explicitly ",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/29:1298,Depend,Depends,1298,https://qupath.github.io,https://github.com/qupath/qupath/issues/29,1,['Depend'],['Depends']
Integrability,".112); 	/usr/lib/libresolv.9.dylib (compatibility version 1.0.0, current version 1.0.0); 	/usr/local/opt/zstd/lib/libzstd.1.dylib (compatibility version 1.0.0, current version 1.5.5); 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics (compatibility version 64.0.0, current version 1690.3.3); 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 1228.0.0); 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText (compatibility version 1.0.0, current version 1.0.0); 	/usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0); ```; and notably `/usr/local/opt/gettext/lib/libintl.8.dylib` stops him from using it on an x86-64 machine, though this doesn't seem to be a problem on CI machines. ## Linux. The below is out dated; when dynamically linking `glib`, our binaries are fine. > While it's easy enough to get a SO of openslide with minimal dependencies (`libpcre2-8` stubbornly remains dynamically > linked), issues arise when trying to load this alongside JavaFX. Specifically, we get a glib warning followed by an error:; > ```; > (java:71634): GLib-GObject-WARNING **: 14:32:40.458: cannot register existing type 'gchar'; > **; > GLib-GObject:ERROR:../../../meson/subprojects/glib-2.72.0/gobject/gvaluetypes.c:454:_g_value_types_init: assertion failed: (type == G_TYPE_CHAR); > ```; > This is less urgent, as we can just distribute QuPath as `deb`/`rpm` packages, and specify `openslide-tools` as a dependency, as we will no longer depend on `openslide-java`. ## Plan for 0.5.0 release. - Windows will use a JAR of the OpenSlide builds, which we can extract to temp files and then load.; - Linux releases will depend on `openslide-tools`; if this is installed, then `libopenslide.so` should be on the search path.; - Mac builds will require homebrew (or similar) installs of `openslide`. However, if we could resolve the issues with the mac and Linux binaries, then i",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495:5592,depend,dependencies,5592,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-1723504495,2,['depend'],['dependencies']
Integrability,.mrxs files do contain annotations created with viewer/management plaftorm from 3DHistech. They are contained in the folder corresponding to the digital slide. You have to parse the .dat files and look the last 3 files (from the numerical index) for an XML formated text at the beginning of the file. There isn't much documentation about their file format to be able to automate the interpretation of the annotations (i.e. which one is the file with the annotations 2nd/3rd as it depends on the version of scanner and software controller). . Sometime you see within the annotations file some annotations that are not displayed in the viewer from 3DHistech (i.e. deleted annotations). What I would recommend is to name the annotations (when you crate them) with labels you define yourself so that you know what to look for when parsing the xlm file. . Let me know if you have more questions.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/165#issuecomment-381391292:480,depend,depends,480,https://qupath.github.io,https://github.com/qupath/qupath/issues/165#issuecomment-381391292,1,['depend'],['depends']
Integrability,"01). With this PR, I get a new `sorting_keys` directory directly within the project. I also got a file `SORT_KEY[IMAGE_NAME].txt` with the only content `true`; I was expecting e.g. a `sort_keys.txt` file with a list of the keys that are used. The purpose of `ResourceManager` (for me at least) is that it supports having several named resources, typically implementations of a specific serializable class. So we might have something like this:. ```java; class SortingKeys {; List<String> keys;. List<String> getKeys() {; return Collections.unmodifiableList(keys);; }. }. var sortingManager = project.getResources(""resources/sorting_keys"", SortingKeys.class, ""json"");; var sortKeys = sortingManager.contains(""sortKeys"") ? sortingManager.getResource(""sortKeys).getKeys() : Collections.emtpyList();; ```; but then it is still 'unconventional' to use a `Manager` when we only have a single resource with a fixed name (here, `""sortKeys""`). ---. What not use the alternative approach of extending the `Project` interface to implement [`MetadataStore`](https://github.com/qupath/qupath/blob/df21dcbaab953837d40aabd856d14b79faca6b7b/qupath-core/src/main/java/qupath/lib/objects/MetadataStore.java#L37) - or adding `String` metadata support similar to how it already works with [`ProjectImageEntry`](https://github.com/qupath/qupath/blob/df21dcbaab953837d40aabd856d14b79faca6b7b/qupath-core/src/main/java/qupath/lib/projects/ProjectImageEntry.java#L49)?. Then the UI can store keys as a list of strings easily, with any key of its choosing and the result serialized within the project. To me, a `Map<String, String>` feels simpler and more intuitive. The advantages I see of a `Manager` are:; 1. It avoids adding to the `project.qpproj` file size (in case someone attempts to add ridiculously-large strings); 2. The sort order wouldn't be lost if a project is saved in an older version of QuPath. But these are only an issue of the `Map` is serialized directly within `project.qpproj`. We *could* potentially ",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1584#issuecomment-2283509470:1809,interface,interface,1809,https://qupath.github.io,https://github.com/qupath/qupath/pull/1584#issuecomment-2283509470,2,['interface'],['interface']
Integrability,"040: 11 DB 07 14 D1 4E 25 8F 7A 7B 76 34 C5 D9 AF 77 .....N%.z.v4...w; 0050: A0 07 CF 41 65 BF 48 66 72 67 87 1B 9C EB E9 E9 ...Ae.Hfrg......; 0060: B8 97 38 09 02 E8 70 93 16 C4 EF 35 5D 83 74 76 ..8...p....5].tv; 00F0: 83 18 85 B2 3D 20 EC 45 98 AB 54 21 0C B7 B0 2F ..t.= .E..T!.../; 0070: 8D 96 F8 01 E0 AD 3C 0F 18 07 0B 00 77 F3 32 E2 ......<.....w.2.; 0080: DC 68 9D F2 67 77 DF 1E 6D 06 82 66 F6 F7 8E 2B .h..gw..m..f...+; 0090: 35 9A 85 F6 09 72 7C 5B 3C CC 87 59 84 CF 96 68 5....r.[<..Y...h; 00A0: 6B D5 81 4C 74 B9 A7 91 98 49 0B 12 3F 8C E1 52 k..Lt....I..?..R; 00B0: E3 B3 53 B9 78 ED 29 56 82 E3 13 31 16 C0 6A A7 ..S.x.)V...1..j.; 00C0: F8 5A 8F FE 94 77 14 0A 22 0D 51 66 A1 55 BD 6B .Z......"".Qf...k; 00D0: D9 2E 4A 4F 9B 78 15 9B 53 1D 03 91 48 A0 92 D2 ..JO.x..S...H...; 00E0: 0A 26 24 32 18 15 C1 2B 1E 00 64 37 CE D4 34 29 .&$2...+..d7..4(; ; }; },; ]; }; ]; }; ); javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.416 NOVT|null:-1|Received alert message (; ""Alert"": {; ""level"" : ""fatal"",; ""description"": ""handshake_failure""; }; ); javax.net.ssl|ERROR|29|Thread-9|2020-04-13 21:28:52.417 NOVT|null:-1|Fatal (HANDSHAKE_FAILURE): Received fatal alert: handshake_failure (; ""throwable"" : {; javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure; 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.fatal(Unknown Source); 	at java.base/sun.security.ssl.Alert$AlertConsumer.consume(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.dispatch(Unknown Source); 	at java.base/sun.security.ssl.SSLTransport.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source); 	at java.base/sun.net.www.protocol.https.HttpsCl",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436:11127,message,message,11127,https://qupath.github.io,https://github.com/qupath/qupath/issues/436,1,['message'],['message']
Integrability,"1/xuelab/software/x86_64/qupath/QuPath-0.2.0-m1/test/t6.groovy; 12:13:23.532 [main] [INFO ] q.l.i.s.o.OpenslideServerBuilder - OpenSlide version 3.4.1; Exception in thread ""main"" java.awt.AWTError: Can't connect to X11 window server using 'localhost:15.0' as the value of the DISPLAY variable.; 	at java.desktop/sun.awt.X11GraphicsEnvironment.initDisplay(Native Method); 	at java.desktop/sun.awt.X11GraphicsEnvironment$1.run(X11GraphicsEnvironment.java:102); 	at java.base/java.security.AccessController.doPrivileged(Native Method); 	at java.desktop/sun.awt.X11GraphicsEnvironment.<clinit>(X11GraphicsEnvironment.java:61); 	at java.base/java.lang.Class.forName0(Native Method); 	at java.base/java.lang.Class.forName(Class.java:315); 	at java.desktop/java.awt.GraphicsEnvironment$LocalGE.createGE(GraphicsEnvironment.java:101); 	at java.desktop/java.awt.GraphicsEnvironment$LocalGE.<clinit>(GraphicsEnvironment.java:83); 	at java.desktop/java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:129); 	at java.desktop/java.awt.image.BufferedImage.createGraphics(BufferedImage.java:1181); 	at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:124); 	at qupath.lib.images.servers.AbstractTileableImageServer.readBufferedImage(AbstractTileableImageServer.java:19); 	at qupath.lib.images.servers.AbstractImageServer.getBufferedThumbnail(AbstractImageServer.java:90); 	at qupath.lib.images.servers.openslide.OpenslideImageServer.<init>(OpenslideImageServer.java:201); 	at qupath.lib.images.servers.openslide.OpenslideServerBuilder.buildServer(OpenslideServerBuilder.java:104); 	at qupath.lib.images.servers.ImageServerProvider.buildServer(ImageServerProvider.java:166); 	at qupath.QuPath.main(QuPath.java:150); QuPath-0.2.0-m1 Failed to launch JVM. ---------------------------------------------. I want to call qupath by command line, without popping up the qupath software interface.; How can I solve this problem?. thank you",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/306:2307,interface,interface,2307,https://qupath.github.io,https://github.com/qupath/qupath/issues/306,1,['interface'],['interface']
Integrability,"234; ```. Alternatively, if I switch to using a German Locale I see:; ```; 1: 1,234; 2: 1,234; 3: 1,23; 4: My number is 1,234; 5: My number is 1.234; ```. In most of these scenarios the Locale is respected (either the default, or one that is explicitly set)... but **not** with the simple ```string + concatenation```. **This is a bit scary, since ```""My number is "" + 1.234;``` is very tempting syntax for a programmer to use.** It is highly likely to exist somewhere within QuPath's code. ### Parsing numbers. Similar issues arise when parsing numbers using one of Java's myriad ways. ```groovy; import java.text.*;. def count = 1;; def sb = new StringBuffer(""\n"");. for (def locale in [Locale.US, Locale.GERMANY]) {. sb.append(""Locale set to "").append(locale).append(""\n"");; Locale.setDefault(locale);; ; def s = NumberFormat.getInstance().parse(""1.234""); // Result depends on Locale; sb.append(count++).append("": "").append(s).append(""\n"");. s = NumberFormat.getInstance().parse(""1,234""); // Result depends on Locale; sb.append(count++).append("": "").append(s).append(""\n"");; ; s = Double.parseDouble(""1.234""); // Always requires a dot; sb.append(count++).append("": "").append(s).append(""\n""); . try {; s = Double.parseDouble(""1,234""); // Does not work!; } catch (Exception e) {; s = ""I cannot parse \""1,234\""!""; }; sb.append(count++).append("": "").append(s).append(""\n"");; ; try {; s = Double.valueOf(""1,234""); // Does not work!; } catch (Exception e) {; s = ""I cannot get the value of \""1,234\""!""; }; sb.append(count++).append("": "").append(s).append(""\n"");; }. print(sb.toString()); ```. The output of the script above is:; ```; Locale set to en_US; 1: 1.234; 2: 1234; 3: 1.234; 4: I cannot parse ""1,234""!; 5: I cannot get the value of ""1,234""!; Locale set to de_DE; 6: 1234; 7: 1.234; 8: 1.234; 9: I cannot parse ""1,234""!; 10: I cannot get the value of ""1,234""!; ```. Again, **this is scary, because ```Double.valueOf(String s)``` and ```Double.parseDouble(String s)``` are quite natural choices f",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/29:3058,depend,depends,3058,https://qupath.github.io,https://github.com/qupath/qupath/issues/29,1,['depend'],['depends']
Integrability,3rd Party Library Dependencies in Scripts,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/76:18,Depend,Dependencies,18,https://qupath.github.io,https://github.com/qupath/qupath/issues/76,1,['Depend'],['Dependencies']
Integrability,"5, 0, 0));; ```. There are similar getter methods, which return the packed integer (or sometimes null, if the color isn't set). This then may need to be unpacked, e.g.; ```java; var rgb = pathObject.getColorRGB();; int red = ColorTools.red(rgb);; int green = ColorTools.green(rgb);; int blue = ColorTools.blue(rgb);; ```. A secondary problem is that it isn't clear whether alpha will be used or not. This is possible:; ```java; pathObject.setColorRGB(ColorTools.packARGB(127, 255, 0, 0));; pathClass.setColor(ColorTools.packARGB(127, 255, 0, 0));; ```; but it's not obvious whether the alpha will do anything. ### Describe the solution you'd like. It would be preferable to have something standardized, including the option to provide separate RGB values, e.g.; ```java; pathObject.setColor(red, green, blue); pathClass.setColor(red, green, blue); ```. This could be implemented quickly, deprecating the `PathObject.setColorRGB(Integer)` method. The main decision is whether to take 8-bit RGB values or floats/doubles as input. For now, I propose keeping `public Integer getColor()` - although `getRed()`, `getGreen()` and `getBlue()` methods could potentially be added. ### Describe alternatives you've considered. One way to enforce standardization would be through a `Colorable` interface, which could offer a variant of options as default methods, e.g. ```java. // Main setter; public void setColor(Integer);. // Main getter; public Integer getColor();. // All others default; public default void setColor(int r, int g, int b);. public default void setColor(double r, double g, double b);. public default void setColor(String hex);. public default String getColorHex();. public default int getRed(); // Return Integer? Otherwise can't cope with null... public default int getGreen();. public default int getBlue();. ```. A potential problem with this is that a substantial part of an object's API could end up being devoted to color - even if it's not a terribly important property of the object.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1086:2019,interface,interface,2019,https://qupath.github.io,https://github.com/qupath/qupath/issues/1086,1,['interface'],['interface']
Integrability,6 bytes) @ 0x00000295f4f057b8 [0x00000295f4f05760+0x0000000000000058]; J 15706 c1 qupath.tensorflow.stardist.StarDist2D.lambda$detectObjects$1(Lqupath/lib/images/ImageData;Ljava/util/Collection;Lorg/locationtech/jts/geom/Geometry;Lqupath/lib/images/servers/TileRequest;)Ljava/util/stream/Stream; (36 bytes) @ 0x00000295ed75f334 [0x00000295ed75f160+0x00000000000001d4]; J 15743 c1 qupath.tensorflow.stardist.StarDist2D$$Lambda$2526.apply(Ljava/lang/Object;)Ljava/lang/Object; (24 bytes) @ 0x00000295ee0909ac [0x00000295ee090840+0x000000000000016c]; J 15156 c1 java.util.stream.ReferencePipeline$7$1.accept(Ljava/lang/Object;)V java.base@14.0.1 (127 bytes) @ 0x00000295edec35a4 [0x00000295edec34a0+0x0000000000000104]; J 15667 c2 java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Ljava/util/function/Consumer;)V java.base@14.0.1 (127 bytes) @ 0x00000295f51c2d44 [0x00000295f51c2c00+0x0000000000000144]; J 11772 c2 java.util.stream.AbstractPipeline.wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink; java.base@14.0.1 (18 bytes) @ 0x00000295f4ba1aa8 [0x00000295f4ba19a0+0x0000000000000108]; j java.util.stream.ReduceOps$ReduceTask.doLeaf()Ljava/util/stream/ReduceOps$AccumulatingSink;+15 java.base@14.0.1; j java.util.stream.ReduceOps$ReduceTask.doLeaf()Ljava/lang/Object;+1 java.base@14.0.1; j java.util.stream.AbstractTask.compute()V+129 java.base@14.0.1; j java.util.concurrent.CountedCompleter.exec()Z+1 java.base@14.0.1; j java.util.concurrent.ForkJoinTask.doExec()I+10 java.base@14.0.1; j java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)V+11 java.base@14.0.1; j java.util.concurrent.ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Z+185 java.base@14.0.1; j java.util.concurrent.ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V+25 java.base@14.0.1; j java.util.concurrent.ForkJoinWorkerThread.run()V+24 java.base@14.0.1; v ~S,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/481:5325,wrap,wrapAndCopyInto,5325,https://qupath.github.io,https://github.com/qupath/qupath/issues/481,1,['wrap'],['wrapAndCopyInto']
Integrability,":28:52.313 NOVT|null:-1|No available application protocols; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.313 NOVT|null:-1|Ignore, context unavailable extension: application_layer_protocol_negotiation; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Stateless resumption not supported; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Ignore, context unavailable extension: session_ticket; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.314 NOVT|null:-1|Ignore, context unavailable extension: cookie; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.339 NOVT|null:-1|Ignore, context unavailable extension: renegotiation_info; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.340 NOVT|null:-1|No session to resume.; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.340 NOVT|null:-1|Ignore, context unavailable extension: pre_shared_key; javax.net.ssl|DEBUG|29|Thread-9|2020-04-13 21:28:52.344 NOVT|null:-1|Produced ClientHello handshake message (; ""ClientHello"": {; ""client version"" : ""TLSv1.2"",; ""random"" : ""4B 4E DC CF 93 2D BE 6E 48 26 E6 67 92 6A 38 69 8A 4C B3 A9 2E 4A D3 A8 D3 38 FF 7D 6D E8 5F F1"",; ""session id"" : ""3C BA 77 B5 81 84 45 01 FV CA 61 54 15 24 DC 65 2B DD 00 37 73 1F D8 9C 83 25 73 BB 10 EF 68 42"",; ""cipher suites"" : ""[TLS_AES_256_GCM_SHA384(0x1302), TLS_AES_128_GCM_SHA256(0x1301), TLS_CHACHA20_POLY1305_SHA256(0x1303), TLS_DHE_RSA_WITH_AES_256_GCM_SHA384(0x009F), TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256(0xCCAA), TLS_DHE_DSS_WITH_AES_256_GCM_SHA384(0x00A3), TLS_DHE_RSA_WITH_AES_128_GCM_SHA256(0x009E), TLS_DHE_DSS_WITH_AES_128_GCM_SHA256(0x00A2), TLS_DHE_RSA_WITH_AES_256_CBC_SHA256(0x006B), TLS_DHE_DSS_WITH_AES_256_CBC_SHA256(0x006A), TLS_DHE_RSA_WITH_AES_128_CBC_SHA256(0x0067), TLS_DHE_DSS_WITH_AES_128_CBC_SHA256(0x0040), TLS_DHE_RSA_WITH_AES_256_CBC_SHA(0x0039), TLS_DHE_DSS_WITH_AES_256_CBC_SHA(0x0038), TLS_DHE_RSA_WITH_AES_128_CBC_SHA(0x0033), TLS_DHE_DSS_WITH_AES_128_CBC_SHA(0x0032), TLS_RSA_WITH_AES_",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436:7081,message,message,7081,https://qupath.github.io,https://github.com/qupath/qupath/issues/436,1,['message'],['message']
Integrability,"; * Better control over which objects are sent for processing; * Better control over resolution, with 3 different methods to control the size of images sent to ImageJ (not just downsample); * Better control over parallelization; * Option to select channels to send; * Built-in examples of potentially-useful macros; * Support for `Roi` groups, which map to QuPath classifications; * Scriptability; macros can be stored in the command history and run later through Groovy scripts; * Ability to run Groovy scripts instead of macros; * These are different from Groovy scripts run through the script editor; they are specifically written to work on an `ImagePlus` obtained from ImageJ via a call to `IJ.getImage()`; * New `IJProcessing` and `IJFilters` classes make it easier to process images obtained this way; * Properties are set in the `ImagePlus` based on the QuPath image type so it's possible to determine a sensible value of `darkBackground` or `lightBackground` in macros or scripts; * Better maintainability through the use of fxml and externalised strings; * Available by the 'ImageJ' toolbar button, not only the menus. This required a *lot* of changes, so there is a reasonable chance things have broken elsewhere... including with the regular script editor (which needed changed to make it possible to generate a script editor control elsewhere). But I think it remains functional... Some limitations:; * It's not possible to control via a script which objects or Rois are sent to ImageJ with an `OverlayOptions` object; * The previous macro runner didn't do this perfectly either - see https://github.com/qupath/qupath/issues/1522 ); * It's not currently possible to send back measurements with objects added to an overlay; * Only 'original' channels can be sent through the user interface, not color deconvolved channels (although scripting gives more options); * The scripting language can't be set explicitly; for Groovy, ensure that `IJ.getImage()` or `import [something]` is included",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1682:2137,interface,interface,2137,https://qupath.github.io,https://github.com/qupath/qupath/pull/1682,1,['interface'],['interface']
Integrability,"; Changes include:; * Many improvements to the pixel classifier; * New 'structure tensor' features; * Currently-training classifier can still operate when images are changed; * Added live feature overlays to view classifier features in context; * Added 'Advanced' features, including optional PCA and selecting a 'Boundary' classification; * Ability to save & reload classifiers (format may change!); * New 'Create threshold classifier' command (replaces old simple threshold command); * Improved 'Dark' theme (available in the preferences); * Scripting Improvements; * Changed syntax highlighting - for better behavior with the 'Dark' theme; * Core classes can now be auto-imported (use Ctrl-Shift to cycle through code-completions); * More helpful error messages for common errors; * New setPixelSizeMicrons(double, double) scripting method; * New replaceClassification(String, String) scripting method; * Warning when applying 'Run for project' to an image currently open; * Major ROI revisions; * Area ROIs 'snap' to pixel coordinates by default (can be changed in the preferences); * New GeometryROI replaces AWTAreaROI; * 'Distance to annotations 2D' now supports line and point ROIs; * Increased use of Java Topology Suite for Geometry calculations; * Removed older interfaces (PathShape, PathPoints, PathArea, PathLine and TranslatableROI), moved more methods into ROI directly; * Zoom in further for more accurate pixel-wise annotations; * Revised cell detection & other detection commands that use tiling; * Bigger tile overlap & improved contour smoothing in cell detection (note: this will impact results!); * Wand tool improvements; * Change wand color modes in Edit -> Preferences; * Press Ctrl (Cmd) while using Wand to select identical pixel values (useful with classification overlays); * Renamed & improved 'Create simple thresholder', support image smoothing",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/370:880,message,messages,880,https://qupath.github.io,https://github.com/qupath/qupath/pull/370,1,['message'],['messages']
Integrability,"; ```; that assumes `String` only. The map is documented to be unmodifiable, but [at least once in QuPath's code it is assumed to be modifiable](https://github.com/qupath/qupath/blob/df21dcbaab953837d40aabd856d14b79faca6b7b/qupath-core/src/main/java/qupath/lib/objects/PathObjectTools.java#L1527). *If* we don't need non-string objects (we'd need to check usages), I am thinking that we could deprecate all other methods in `MetadataStore`, leaving only `getMetadataMap()` to return a *modifiable* `Map<String, String>` - and provide default implementations for the other methods. Then, in this case, you could potentially provide a `Map` implementation that takes care of JSON serialization by subclassing [`AbstractMap`](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#get(java.lang.Object)). Since I was responsible for the original `MetadataStore` mess (and the associated [`MetadataMap`](https://github.com/qupath/qupath/blob/df21dcbaab953837d40aabd856d14b79faca6b7b/qupath-core/src/main/java/qupath/lib/objects/MetadataMap.java#L49)), I can look into how changing the interface might impact `PathObject`, where it is currently used. *If* you think this is a sensible approach, then you could proceed here by adding; ```java; public Map<String, String> getMetadataMap() // Or getMetadata() - see below; ```; and handling its implementation and (JSON) serialization - then any common interface that includes that method can be added later to `Project`, `ProjectImageEntry` and `PathObject`. What do you think?. One benefit of using a standard `Map` implementation is that Groovy scripting is nicer, e.g. see; * https://github.com/qupath/qupath/issues/1085. which is why we can now use `pathObject.measurements['Something'] = 2.0`. In fact, if we simplified the name further to `getMetadata()` the this should work in Groovy:; ```; pathObject.metadata['Something'] = 'A value'; project.metadata['Something'] = 'A value'; entry.metadata['Something'] = 'A value'; ```",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1584#issuecomment-2284505913:1370,interface,interface,1370,https://qupath.github.io,https://github.com/qupath/qupath/pull/1584#issuecomment-2284505913,4,['interface'],['interface']
Integrability,"; at qupath.lib.roi.GeometryTools$GeometryConverter.areaToGeometry(GeometryTools.java:493); at qupath.lib.roi.GeometryTools$GeometryConverter.roiToGeometry(GeometryTools.java:457); at qupath.lib.roi.AbstractPathROI.getGeometry(AbstractPathROI.java:172); at qupath.lib.roi.AreaROI.getGeometry(AreaROI.java:355); at qupath.lib.gui.viewer.tools.AbstractPathTool.setConstrainedAreaParent(AbstractPathTool.java:231); at qupath.lib.gui.viewer.tools.MoveTool.mousePressed(MoveTool.java:138); at qupath.lib.gui.viewer.tools.AbstractPathTool.lambda$registerTool$7(AbstractPathTool.java:441); ...; ```. [This is an example serialized ROI](https://github.com/qupath/qupath/files/4442109/broken_area_roi_Liver_Necroses_mf_hp_01_0.ser.tar.gz) that corresponds to this image (this kind of complex geometries happen often in our dataset, blame nature and our super-careful pathologists). ![Screenshot 2020-04-07 at 06 57 48](https://user-images.githubusercontent.com/642252/78631688-50432e00-789d-11ea-9de4-bfe43035cf3f.png). **Side note**. We are converting this using a small qupath-as-a-python-library wrapper we are putting together (our data scientists are not fluent in java/groovy and all our other data management and ML code is in python, so somewhat this makes sense). As part of it, we have a [simple conda recipe for qupath](https://github.com/sdvillal/qupath-feedstock) capable of both repackaging releases or building qupath from source (for this I went the rabbit whole of also repackaging OpenJDK 14 over the weekend) in a continuous delivery fashion. At the moment I'm publishing these qupath packages to [my personal conda channel](https://anaconda.org/sdvillal/qupath/files). Conda packages are kind of cool in the sense that conda is a nice package manager that allows to quickly swapping qupath versions and, for example, ensuring that native libraries do not have known bugs, like, for example, [this pixman bug that made so many demos look badly](https://github.com/qupath/qupath/issues/355).",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/434:2177,wrap,wrapper,2177,https://qupath.github.io,https://github.com/qupath/qupath/issues/434,1,['wrap'],['wrapper']
Integrability,"> ; > . > I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on _all_ platforms that packages up all dependencies in a self-contained manner. using https://spack.readthedocs.io/en/latest/package_list.html . openslide and all its dependencies can be built with . spack install openslide. tested with WSL/Ubuntu",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-932797893:203,depend,dependencies,203,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-932797893,2,['depend'],['dependencies']
Integrability,"> > Have you tried also building the JavaCpp example project+?; > ; > I tried https://github.com/bytedeco/sample-projects/tree/master/javacpp-android-gradle first but it seems to be a never ending series of issues because of the android stuff, so I gave up. Some other examples didn't support java 14 but this one did work at the end: https://github.com/bytedeco/sample-projects/tree/master/opencv-stitching-jlink; > ; > I just had to set `export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-14-openj9xl-amd64/` before. (Which didn't make a difference for qupath.). Interesting... I found this surprising, but then saw that the OpenCV version is comparatively old: https://github.com/bytedeco/sample-projects/blob/master/opencv-stitching-jlink/pom.xml#L41. That uses `4.0.1-1.5` rather than `4.3.0-1.5.3`. You can find the available versions (there are two in between) via https://search.maven.org/artifact/org.bytedeco/opencv-platform/4.3.0-1.5.3/jar. The next version of OpenCV after that one you find works introduced a dependency on OpenBLAS. I recall this causes me some trouble, mentioned briefly in the build script: https://github.com/qupath/qupath/blob/master/build.gradle#L148. If this is connected, I think the sample should fail for you if you update the version to `4.3.0-1.5.3` (or any in between). QuPath *might* build for your if you downgrade the version in the build script to `4.0.1-1.5`, but this isn't really a solution... JavaCPP is a shared dependency for TensorFlow, and the versions end up rather tied to one another. I suspect other problems may arise if going back more versions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/484#issuecomment-633364724:1014,depend,dependency,1014,https://qupath.github.io,https://github.com/qupath/qupath/issues/484#issuecomment-633364724,2,['depend'],['dependency']
Integrability,"> Although if calling either method in a script, the ambiguity and potential for confusion remains.; I had mostly been thinking about scripting. If there is no primary selected object, and getSelectedObject() is used, the script would simply break and provide an informative error message. The user is trying to do something (get a particular object) while providing insufficient information (which object? multiple are selected). I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. > keep the primary selected object if it's still selected in the new group, and; > set the primary selected object if there is only one object in the selection group, but not if there is more than one. I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869219746:281,message,message,281,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869219746,4,['message'],['message']
Integrability,"> Did I correctly understand that v0.1.2 works on the same Linux machine where v0.2.0 fails?. Yes, that's correct. I'm not sure how I'm supposed to load the dependencies ""backward"" tho. I'll try a few things and come back if I find a solution for this. Thanks a lot!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527622981:157,depend,dependencies,157,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527622981,1,['depend'],['dependencies']
Integrability,"> However, based on the exception, I think the problem is that the [names ArrayList of the AbstractNumericMeasurementList class](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-core/src/main/java/qupath/lib/measurements/NumericMeasurementList.java#L102) is accessed from multiple threads without synchronization. Using a CopyOnWriteArrayList instead of an ArrayList may solve this issue. I think the list shouldn't be directly accessed elsewhere, and the `put` method (which calles `list.add`) is synchronized. Maybe the issue is that the `clear()` method isn't synchronized?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1936207910:334,synchroniz,synchronization,334,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1936207910,6,['synchroniz'],"['synchronization', 'synchronized']"
Integrability,"> I can ask them to share a QuPath project if it's useful to you. That would be useful because I was not able to replicate the issue (on MacOS, I will try on Linux later). However, based on the exception, I think the problem is that the [names ArrayList of the AbstractNumericMeasurementList class](https://github.com/qupath/qupath/blob/13bdeed047b4d05f35f47308b36b48c0f2bb3a24/qupath-core/src/main/java/qupath/lib/measurements/NumericMeasurementList.java#L102) is accessed from multiple threads without synchronization. Using a `CopyOnWriteArrayList` instead of an `ArrayList` may solve this issue.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1936164001:504,synchroniz,synchronization,504,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1936164001,1,['synchroniz'],['synchronization']
Integrability,> I have the same problem with m12. At the beginning I tried to load a SCN file and it worked. After I closed the and opened the m12 version again the message poped out and I cannot run the m12 anymore. UPDATE: After another examination of the debug log I saw that the error message came after QuPath tried to load extensions. I had previously installed the Weka extension which was still in my extentions folder. I removed the weka extention and it opened without problems.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/497#issuecomment-632431978:151,message,message,151,https://qupath.github.io,https://github.com/qupath/qupath/issues/497#issuecomment-632431978,2,['message'],['message']
Integrability,"> I suppose there could be an even worse option where you also encode getASelectedObject() which returns the first, or largest, or some other logic. Hmmm, might need to think about it some more but I think that risks increasing rather than reducing complexity. I'd rather have fewer options with more predictable behavior - in rare cases where something more complex is needed, it's always possible to query all the selected objects and then filter them however you like. But I don't think that should be part of the core API. > I was also just thinking about this - what situations lead to there being no primary object, and could those be addressed instead?. `selectAnnotations()` is a good example. Basically, anything that can select multiple objects without a clear 'main' object. So if you would run another command like `selectObjects(p -> p.getPathClass() == getPathClass('Tumor'))` you'd see the same: possibly multiple objects selected, but no 'main' selection. Or, with my pull request, a 'main' selection plucked more or less randomly - *unless* only one object is available, in which case it's just what you'd expect. > Alternatively, specially code getSelectedObject() to allow for an array, check for an array size of 1, and handle that situation specifically if it arises. Still return null in other situations, along with an informative error message (or warning). Internally there is already a set of selected objects - distinct from the main selected object. However, if there is a main selected object then it should always be included in the set. I think errors/warnings need to be used very sparingly to avoid causing undue alarm. But I'm coming around to the compromise I mentioned above, which I think falls somewhere between my pull request and your original suggestion.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869227006:1360,message,message,1360,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869227006,2,['message'],['message']
Integrability,"> Is the problem that the OpenSlide with QuPath is actually using the local installation of pixman as a sub-dependency... I don't think any library from the system is being used. Here:; ```; $ ldd ./QuPath-0.2.0-m4; linux-vdso.so.1 (0x00007ffe0e363000); libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fe33f2be000); libm.so.6 => /usr/lib/libm.so.6 (0x00007fe33f178000); libc.so.6 => /usr/lib/libc.so.6 (0x00007fe33efb5000); /lib64/ld-linux-x86-64.so.2 => /usr/lib64/ld-linux-x86-64.so.2 (0x00007fe33f309000); ```; And I would ship QuPath with the integrated libraries like you, using the system wide libraries would only cause more trouble as people would probably be complaining about this bug forever if they don't use the right version on their system (even worse if they use 3.4.0 which has its own set of problems). Update: I just tried with an Ubuntu 18.04 vm and it works fine there... So it probably means QuPath is actually looking for the pixman lib somewhere in my system where it's corrupted. I'm on the latest version of Manjaro Linux (arch).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/355#issuecomment-527239383:108,depend,dependency,108,https://qupath.github.io,https://github.com/qupath/qupath/issues/355#issuecomment-527239383,2,"['depend', 'integrat']","['dependency', 'integrated']"
Integrability,"> Ok, so I've learned that OpenCV has a maximum number of channels, defined as `CV_CN_MAX`. That's set as 512, so any attempt to exceed that will fail.; > ; > Without a major rewrite of the pixel classifier, the most QuPath can do is provide a more informative error message. Sounds reasonable, I wouldn't expect most classifiers to benefit from using that many channels, given that they're all derived from a few dozen IHC channels at most.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032:267,message,message,267,https://qupath.github.io,https://github.com/qupath/qupath/issues/947#issuecomment-1092134032,2,['message'],['message']
Integrability,"> Should I do that here, or create another PR?. No, I think this PR should focus on adding `Project.getMetadata()` - anything else can/should be done later. Before going further with the general metadata support, I'd like to make sure that I was never using an `Object` with the `MetadataStore` within `PathObject`, in case that could be an issue. We also discussed having a new repo and module (`qupath-lib` perhaps?) similar to `qupath-fxtras` that contains generally-useful stuff that we can make permissively-licensed (i.e. Apache rather than GPL). I'd like to investigate adding a new, simple `MetadataStore` interface to that module, so that we can deprecate the old interface entirely - but I don't want to rush that, and need to find an hour or two to think about it properly.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1584#issuecomment-2286003202:614,interface,interface,614,https://qupath.github.io,https://github.com/qupath/qupath/pull/1584#issuecomment-2286003202,4,['interface'],['interface']
Integrability,"> So long as 'arbitrarily large' is still small enough to work as a single image (not a pyramidal whole slide image), then it should certainly be possible. Image pyramids can't be written with QuPath currently.; > ; > One way to get a larger image may be via [Send region to ImageJ](https://github.com/qupath/qupath/wiki/Working-with-ImageJ#sending-image-regions-to-imagej) - from memory I think there's still a size limitation, but it should be bigger.; > ; > Otherwise, it is necessary to run a script. The closest matching script I can think of is [this one](https://gist.github.com/petebankhead/66e70e5deaa9c6e6a009ad027b135a0d). By default, it will export the entire image at a very low resolution because of these lines; > ; > ```groovy; > // Aim for an output resolution of approx 20 µm/pixel; > double requestedPixelSize = 20; > ...; > // Calculate downsample factor depending on the requested pixel size; > double downsample = requestedPixelSize / server.getAveragedPixelSizeMicrons(); > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, 0, 0, server.getWidth(), server.getHeight()); > ```; > ; > You can switch it to export only the region corresponding to the selected object, at full resolution, as follows:; > ; > ```groovy; > // Calculate downsample factor depending on the requested pixel size; > double downsample = 1.0; > def request = RegionRequest.createInstance(imageData.getServerPath(), downsample, getSelectedROI()); > ```; > ; > Let me know if that doesn't do what you need, and hopefully some other script change could help. Personally, I'd use the ImageJ method for exporting isolated regions occasionally, and a script if I wanted to export lots of regions in a single batch.; > ; > > Note: I've tagged this as _enhancement_ because I think it would make sense to increase the export size limit through the user interface to make this easier. I had forgotten the existing limit was so small... I have almost the same need as @nathan. I have s",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/127#issuecomment-853621895:875,depend,depending,875,https://qupath.github.io,https://github.com/qupath/qupath/issues/127#issuecomment-853621895,1,['depend'],['depending']
Integrability,"> Synchronizing getNameMap() might fix it?. I think **all** access to `names` should be synchronized. If it's not the case, lines 207 and 241 could be executed at the same time for example. But this may drops the performances of the class. I will read more about concurrency in Java to exactly know what to do in such situations. Switching to `CopyOnWriteArrayList` is not necessary if all access are synchronized.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1936371496:2,Synchroniz,Synchronizing,2,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1936371496,3,"['Synchroniz', 'synchroniz']","['Synchronizing', 'synchronized']"
Integrability,"> Today I was able to reproduce the exception above. Great! How? . > https://github.com/qupath/qupath/pull/1466 solved it. Looks good, is there a way to check if it has any significant performance impact?. I'll check this out as well when I can (I expect it's fine, I've just had synchronization surprise me in the past).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1943548331:280,synchroniz,synchronization,280,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1943548331,1,['synchroniz'],['synchronization']
Integrability,"> When importing images to a QuPath project, there is a space to input arguments. Inserting --no-crop there will avoid using the OpenSlide bounds. Thanks, very helpful. > Potentially all objects would need to store that info, or else they would need to be export as a FeatureCollection with an additional custom property. The second sounds preferably but would remain very QuPath-specific. Already `properties` values are very QuPath specific (`isEllipse`...), so I don't see much of a problem here. > As it currently stands, I think QuPath is more internally consistent by cropping - and this reduces rather than increases the dependency on OpenSlide, by making its use interchangeable with Bio-Formats. If there are cases where QuPath crops* and Bio-Formats or other popular libraries don't, then we might need to look at it again, but I don't know of any. I did not know about the Bio-Formats approach. Since DICOM is slowly opening up to the open-source WSI world, I think the problem will arise sooner or later. For now, for performance reasons, we go with TIFF files that do not have this metadata stored, and all software (including quPath) fails to read cropped data, thus having inconsistencies everywhere. Thanks for the insight.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1278#issuecomment-1630799401:628,depend,dependency,628,https://qupath.github.io,https://github.com/qupath/qupath/issues/1278#issuecomment-1630799401,1,['depend'],['dependency']
Integrability,"> Without knowing the details, my best guess is that the .jar you've added to the extensions directory also has dependencies on other .jars that _aren't_ in the directory. You'll need to make sure that all dependencies and sub-dependencies are either in the extensions directory or a core part of QuPath. Appreciate the reply!.; I look into the Bio-Formats extension. It appears that the package of the classes is ""qupath\lib\images\servers"", which is somehow an existing package in the qupath source code. Is it required that all classes of extensions must be in such existing package?. Besides, under the Meta-Inf/service, there are two files:; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.images.servers.ImageServerBuilder. with strings like; qupath.lib.images.servers.BioFormatsOptionsExtension; qupath.lib.images.servers.BioFormatsServerBuilder. It looks like some class relationship (the source code shows that BioFormatsServerBuilder extends ImageServerBuilder). May I ask what is the reason to include these two files under the META-INF?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/253#issuecomment-463342528:112,depend,dependencies,112,https://qupath.github.io,https://github.com/qupath/qupath/issues/253#issuecomment-463342528,3,['depend'],['dependencies']
Integrability,"> You should find that it prints null for getSelectedObject() selected object, even though clearly annotations are selected. . Correct. > I propose:; > ; > * If a primary selected object is specified, use that. Otherwise; > ; > * If the current primary selected object remains selected (i.e. it's still in the collection passed to the method), just keep it selected. Otherwise; > ; > * Select the first object in the collection passed to the select method to use as the primary; > ; > ; This makes sense, but are there use cases where it would not be appropriate?. > Another idea was to keep the object with the largest ROI, or at the lowest hierarchy level... but those all sounded more involved. Or at least to me, this does _not_ make sense. Not only does it quickly become more complex, but I personally don't believe a larger ROI is any more important than a smaller one. Perhaps it depends on the context.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/758#issuecomment-869211413:888,depend,depends,888,https://qupath.github.io,https://github.com/qupath/qupath/issues/758#issuecomment-869211413,2,['depend'],['depends']
Integrability,"> my Mac automatically offloads them to the cloud if I haven't opened them for a few days. My best guess is that there is a cloud-related factor. Where is the project stored - is it only on your local computer, or is it also in OneDrive/iCloud/similar?. If the project is in a cloud folder, please try copying it to a local directory that doesn't experience any automatic cloud-offloading/downloading. Also, when this happens, please check under *View &rarr; Show log* for any messages or other information that could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614:477,message,messages,477,https://qupath.github.io,https://github.com/qupath/qupath/issues/1313#issuecomment-1705956614,1,['message'],['messages']
Integrability,"@DavidMHaumann Sorry I wasn't clear on the colour deconv subject. I was generally speaking on the color space, RGB, HSV, LUV but I was also thinking about standart HE and immunostains. Your case might be difficult. . I was sure SimpleTissueDetection2 was not using ColourDeconv but after looking at #93 I know a bit more what is using. For me it is working fine but I'm working with very standard stains. . However, I'm working also on some special stains where deconvolution is necessary and of added value, especially with regard to the cell-object segmentation that would follow. The link to ImageJ is very useful because you can send the region to ImageJ , deconvolve, normalize, analyse and return the objects ROI back to qupath interface for further visual inspection/analysis. There is a plugin on the embedded ImageJ installation with QuPath that allows the integration of regions from ImageJ to QuPath.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/124#issuecomment-352399785:734,interface,interface,734,https://qupath.github.io,https://github.com/qupath/qupath/issues/124#issuecomment-352399785,4,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"@XinyeDu1204 as @MichaelSNelson says, questions about QuPath should be posted on the forum at https://forum.image.sc/tag/qupath. You should have seen a message saying this when you tried to create this GitHub issue, and it's also stated on this page (under the 'labels' column). It's important to keep questions and answers in the same place so that others can find them. There are well over 2,000 discussions about QuPath on the forum, with lots involving XML: https://forum.image.sc/search?q=qupath%20xml. For example, see https://forum.image.sc/t/export-pixel-selection-as-image-scope-xml-format/26549/2. I will close this issue now, feel free to start a discussion on the forum if you have further questions.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1035#issuecomment-1213304415:152,message,message,152,https://qupath.github.io,https://github.com/qupath/qupath/issues/1035#issuecomment-1213304415,1,['message'],['message']
Integrability,@andrewjUTSW the right click + open did eventually help for me. I actually installed qupath once more and then I had to do the right click + open twice to get it to open. The first time using right click+open I got the same message about the sw being damaged. The second time I got the same message but it had the option to open the app this time. I am currently running Ventura 13.1 and today I worked with Qupath 0.4.2,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307:224,message,message,224,https://qupath.github.io,https://github.com/qupath/qupath/issues/1199#issuecomment-1416478307,2,['message'],['message']
Integrability,"@bpmed12 can you be more specific regarding what exactly you have tried, what does/does not work and any error messages you see?. Note that the 'image list' (under the 'Image' tab) does not exist in m3. So your issue may be different. Also not that the Bio-Formats extension must *not* be installed with m3 - it is included by default. You may still need to install the visual studio redistributable as specified at https://docs.openmicroscopy.org/bio-formats/6.1.1/formats/zeiss-czi.html",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/35#issuecomment-517719018:111,message,messages,111,https://qupath.github.io,https://github.com/qupath/qupath/issues/35#issuecomment-517719018,1,['message'],['messages']
Integrability,"@erexhepa good that the conversion is working!. Regarding CellProfiler, is interaction between it and QuPath something you'd need/want? If so, it would be good to add a new feature request here to draw attention to it, and maybe try to spark some discussion on how it should look. I personally never managed to get Javabridge set up successfully, and I didn't have any sufficiently important CellProfiler pipelines to work further on the integration myself. But it should be manageable in a few ways. The easiest might be to write out temporary image files (with Groovy) and then launch CellProfiler from the command line, before reading back in the results. However, early next year I plan to work more on streamlining the interaction between QuPath and Python, in which case the use of [CellProfiler as a Python package](https://github.com/CellProfiler/CellProfiler/wiki/CellProfiler-as-a-Python-package) could be helpful.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/122#issuecomment-350202064:438,integrat,integration,438,https://qupath.github.io,https://github.com/qupath/qupath/issues/122#issuecomment-350202064,1,['integrat'],['integration']
Integrability,"@kwiechen As I understand it, MSYS2 is for building software on Windows. It might be handy in the future, but it won't solve the biggest problem that we need to somehow be able to create portable builds on all platforms. Currently, Windows is the least problematic because 'official' builds exist; Mac and Linux rely on package managers. Simply rebuilding from source on Mac/Linux isn't sufficient to solve the problem either, because of the numerous sub-dependencies that must be built, and also the platform-specific way in which these are subsequently loaded on different platforms. I can specify exactly which OpenSlide shared library to load, but then this results in the sub-dependencies also being loaded (e.g. pixman, cairo, libtiff...) and it's here that system-wide versions are often picked up. This is very hard (impossible?) to control from Java alone because the loading of sub-dependencies doesn't use the Java library path. I can get things to work on Windows/Linux/Mac fine, I just can't get things to work in a portable way. Somehow we need a streamlined process of building on *all* platforms that packages up all dependencies in a self-contained manner.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/629#issuecomment-762108942:455,depend,dependencies,455,https://qupath.github.io,https://github.com/qupath/qupath/issues/629#issuecomment-762108942,4,['depend'],['dependencies']
Integrability,"@petebankhead, many thanks for fast feedback! I've marked this PR as draft and going to work further.; As you mentioned, there is also an option to use OpenCV API but OpenVINO API will give better performance (at least once I could fix asynchronous efficiency issue). Briefly answering your questions,. > Should the OpenVINO backend in OpenCV 4.5.1 offer an equivalent level of support and performance, or are there advantages in using this instead / as well?. Yes, it can help to avoid IR conversion, in example. OpenVINO natively can load only IR or ONNX at this moment. However it'll require a separate package with OpenCV linked against OpenVINO. > Can/could this work across Windows, Linux & macOS - or is it Linux-only?. Yes, no problem at all. I just published a test package for Linux only but going to expand it in future. > Am I right in thinking the dependencies are all Apache (or at least GPL-compatible)?. OpenVINO is Apache 2.0: https://github.com/openvinotoolkit/openvino/blob/master/LICENSE",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/665#issuecomment-777016613:861,depend,dependencies,861,https://qupath.github.io,https://github.com/qupath/qupath/pull/665#issuecomment-777016613,2,['depend'],['dependencies']
Integrability,"@pyushkevich . > Curious, do you offer or plan to offer a supervised learning-based object detection tool, sort of like Ilastik?. Yes! That is indeed what I was obscurely referencing I have a working prototype, but it is some way away from being useful (e.g. it shows a live overlay, but this can't readily be converted into any meaningful measurements or objects). I plan to write a bit more about it whenever I get time to work on it again, and have a clearer idea when it'll be ready. I'll send you a message, it would be great to discuss further and perhaps incorporate some of your experience from ITK-SNAP if you're interested. @Svidro ; Thank you, creative as always and nothing I'd ever have come up with :). @mnolan1989 . > In the end it actually worked great - a substantial amount of the paper we are about to submit made use of positive pixel detection (QuPath is referenced!). Great! Thanks for confirming... and for referencing :) Don't know if you saw I mentioned on Twitter recently that just over half the papers using QuPath this year didn't reference the *Sci Reports* publication - would be very good to turn that around!. And thanks also for the extra information on the lab side.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-391979772:504,message,message,504,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-391979772,2,['message'],['message']
Integrability,@subanookala Please post questions on the forum at http://forum.image.sc/tag/qupath and provide more detail (you may find a more complete error message under *View &rarr; Show log*).,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/396#issuecomment-826532977:144,message,message,144,https://qupath.github.io,https://github.com/qupath/qupath/issues/396#issuecomment-826532977,1,['message'],['message']
Integrability,"A few more things:; * If I try to load a pixel classifier, I'm still prevented from opening the dialog if there is no classifier in the current project. In this case, I'd expect the dialog to open and allow me to choose a classifier.; * There's a gap to the right of the options now in the dialog that looks like it shouldn't be there.; ![Screenshot 2021-03-05 at 13 45 30](https://user-images.githubusercontent.com/4690904/110123703-23eba680-7db9-11eb-84f8-1aad3899d4ac.png); * It would be a little nicer to determine whether `(s)` is needed or not and adjust the message displayed to the user accordingly when offering to copy the classifier. I also think the wording is a bit redundant; I'd prefer 'Copy classifier to the current project?' and *Yes*, *No*, *Cancel*. Depending upon how the dialog is constructed you may have space to add some further text to explain what it means (but I'm not sure that's really needed).; ![Screenshot 2021-03-05 at 13 45 38](https://user-images.githubusercontent.com/4690904/110123699-2221e300-7db9-11eb-8204-fd45b13976d2.png); * I couldn't see a way to work drag & drop with the pixel classifier. I *can* drag a classifier onto QuPath's main window, but it appears that QuPath then tries (and fails) to open the classifier as an image. It doesn't display any meaningful error - or at least not for long enough for me to read it.; * There isn't any text in the *Load object classifiers* dialog that indicates you can load a classifier by drag & drop. I think this text should be added; you might also support adding a classifier by double-clicking and providing a file chooser. It doesn't have to part of this pull request, but since this will offer support for loading classifiers from elsewhere, perhaps we should relax the strict requirement that classifiers can only be saved within a project. What do you think?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/642#issuecomment-791435458:565,message,message,565,https://qupath.github.io,https://github.com/qupath/qupath/pull/642#issuecomment-791435458,2,"['Depend', 'message']","['Depending', 'message']"
Integrability,"A little more on this: it is partly a Java issue - see [this StackExchange](https://softwareengineering.stackexchange.com/questions/20573/why-does-java-exit-with-success-after-an-uncaught-exception) post: Java exits with EXIT_SUCCESS on an uncaught exception. I have found the source of this uncaught exception: in `src/main/java/qupath/QuPath.java`, there are three different places where `runScript` is called, only one of which is protected by a `try`/`catch` construct, so if an exception is thrown in one of the other two cases (as happened to me), the exception is not caught but instead causes Java to crash. In particular, I can't then check for the logger message which is produced by this code in the first case:. ```; logger.error(""Error running script for image: "" + entry.getImageName(), e);; ```. So the solution would simply be to `try`/`catch` the other two cases as well. Best wishes, Julian",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/654#issuecomment-743001513:665,message,message,665,https://qupath.github.io,https://github.com/qupath/qupath/issues/654#issuecomment-743001513,2,['message'],['message']
Integrability,"A step towards fixing https://github.com/qupath/qupath/issues/1522. Incomplete, because it behaves inconsistently depending upon whether the macro is being run on a selected object or across all annotations / TMA cores. In the first case, the `ImageDisplay` and `OverlayOptions` may be used, but in the second case they are unavailable.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1523:114,depend,depending,114,https://qupath.github.io,https://github.com/qupath/qupath/pull/1523,1,['depend'],['depending']
Integrability,"Add ""prompt to close"" method to script editor interface",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1524:46,interface,interface,46,https://qupath.github.io,https://github.com/qupath/qupath/pull/1524,1,['interface'],['interface']
Integrability,Add keyboard shortcut info to tool hover message,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1450:41,message,message,41,https://qupath.github.io,https://github.com/qupath/qupath/issues/1450,1,['message'],['message']
Integrability,Added a command to write a Zarr image from the user interface,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1649:52,interface,interface,52,https://qupath.github.io,https://github.com/qupath/qupath/pull/1649,1,['interface'],['interface']
Integrability,Added info to error message for left quotes,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/636:20,message,message,20,https://qupath.github.io,https://github.com/qupath/qupath/pull/636,1,['message'],['message']
Integrability,Added synchronization to NumericMeasurementList,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1466:6,synchroniz,synchronization,6,https://qupath.github.io,https://github.com/qupath/qupath/pull/1466,1,['synchroniz'],['synchronization']
Integrability,"Adding to the above suggestions, I understand by the manual you mean the section on [TMA CD3 analysis](https://github.com/qupath/qupath/wiki/TMA-CD3-analysis). You can see in the screenshots the kind of settings that were used in that example - in particular, note that the default 'Requested pixel size' is large (20) in the first screenshot showing tissue detection, and the boundary is very coarse and inaccurate for the TMA core. In the second screenshot, this value is low (4), and the boundary is much better. The description is:. > For detecting large areas of tissue, e.g. a whole face section, you probably want a large value, e.g. 20 µm. For small regions of tissue, e.g. a TMA core, you probably want a smaller value, e.g. 2-5 µm. These values depend upon the pixel size information being stored in the image; if you are working with an image where that information is missing (e.g. a JPEG, a PNG) or incorrect then that would cause trouble. Apart from that, if you could provide any screenshots showing your results then this would help identify what is wrong. If the background is particularly dark and yellow then it *could* be the problem, because *Simple tissue detection* works by converting your image to grayscale first, and then applies a threshold to find darker or lighter pixels (this is why it's 'simple'... it doesn't use color information in any smarter way than that). If the background is dark enough, maybe this grayscale image doesn't have good enough contrast for the detection to work. But usually this isn't the case. If that does turn out that something more sophisticated is needed, then there would be other ways to detect the tissue that can be adapted to your particular images (e.g. with an ImageJ macro). But since these would require considerably more effort, it would be worth it to try to find *Simple tissue detection* settings that work well enough first. Finally, depending upon what you want to do you might not need to detect the tissue at all - I often",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/53#issuecomment-282469327:755,depend,depend,755,https://qupath.github.io,https://github.com/qupath/qupath/issues/53#issuecomment-282469327,2,['depend'],['depend']
Integrability,"Addresses https://forum.image.sc/t/please-help-us-test-the-qupath-v0-5-0-release-candidate/87976/12. If an extension can't be deleted, inform the user and ask if the directory should be opened for manual deletion. Previously, a 'success' message was shown even if the deletion had failed. I couldn't figure out a way to make the extension 'deletable' - although I vaguely recall @yli-hallila might know more about this.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1419:238,message,message,238,https://qupath.github.io,https://github.com/qupath/qupath/pull/1419,1,['message'],['message']
Integrability,"After installation you get an message ""Qupath"" is damaged and can't be opened. ![Screenshot 2023-02-07 at 11 56 23](https://user-images.githubusercontent.com/10047748/217226474-76131924-91e9-47a4-8478-0b8351d51e2f.png). Fix for now is control-click on QuPath Application and select Open",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1228:30,message,message,30,https://qupath.github.io,https://github.com/qupath/qupath/issues/1228,1,['message'],['message']
Integrability,"After some more testing, I noted that there's something weird going on.; Yesterday, I was using a few ROIs of no particular complexity, put the Computer in standby, started to work on it just now and the latency now depends on zoom level! On 1% zoom, the latency (about 3 seconds) is there on *each* click-drag-operation although the whole slide just occupies a small part of the entire view. At 100% it is working fine. I just closed qupath and recreated the setup and now... the latency is gone at 1% zoom. Could this be a memory leak somewhere that only surfaces after a while? Very very puzzling...; Edit: The computer was running for probably 10 hours between creation and attempted manipulation of the ROIs, of course not counting standby time.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/440#issuecomment-615264945:216,depend,depends,216,https://qupath.github.io,https://github.com/qupath/qupath/issues/440#issuecomment-615264945,1,['depend'],['depends']
Integrability,"Ah ok, it should be a pyramidal TIFF then. Are you running QuPath on Linux, by any chance? Or what platform? Do you see any error message when you try, either popping up or under *View &rarr; Show log*?",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371741529:130,message,message,130,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371741529,1,['message'],['message']
Integrability,"Ah ok, the prompt _should_ appear but it should be pre-populated with the correct URIs. However agreeing to the changes will result in the absolute paths being overwritten. Consequently, one might wish to copy the '.qpproj' file first if it's desirable to have a project file with both sets of absolute URIs - updating one and leaving the other untouched. This does however become more complicated if images are later added or removed for one project. This is the intended behavior, although would be good to discuss if there is a better choice. My concern with depending upon relative paths _only_ is that if the project moves - but images remain in the same place - then the project will also break. It becomes essential to move both together. Also, if the absolute paths are _not_ updated whenever relative paths 'work' then this means that QuPath needs to silently make adjustments to URIs - and _potentially_ could end up selecting a wrong image that happens to have the same name.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/346#issuecomment-518200990:562,depend,depending,562,https://qupath.github.io,https://github.com/qupath/qupath/issues/346#issuecomment-518200990,1,['depend'],['depending']
Integrability,"Ah ok, you might find shifting any native libraries (in the same way as the cfg file) can also do the job. The underlying problem is that the Java library path needs to be set to find `openslide-jni`. Usually this 'just works' because the necessary library is found within the 'current' directory at the time QuPath is launched (through whatever magic jpackage has applied to set the current directory). You can also specify the library path in the `.cfg` file... but that may be more complicated. You might need to install OpenSlide through a package manager too, thanks to a separate Linux-related problem regarding how sub-dependencies are found.... https://github.com/qupath/qupath/issues/629. Not sure how much sense that makes, and I haven't looked into what has changed in Linux - but the summary is that moving things around may well be the solution to get things going with Java 15.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/615#issuecomment-725534079:626,depend,dependencies,626,https://qupath.github.io,https://github.com/qupath/qupath/issues/615#issuecomment-725534079,1,['depend'],['dependencies']
Integrability,"Ah! Bleaching and rescanning changes things; what I'm currently working on *might* be exactly what you need. This is some related discussion on [Google Groups](https://groups.google.com/d/msg/qupath-users/XNdaWK_9Ex4/VKHAbBGDBAAJ). If you'd be interested in collaborating on this, and perhaps sharing some images to help me develop the tool to do what you need, please send me a message. I'm quite find-able on Twitter, ResearchGate or LinkedIn... or if you sign up to the QuPath Google Group I'll get a notification and can write to you directly. Otherwise I'll post a reply back here once I have something worth testing, but I haven't got an expected timeframe yet. . The CellProfiler bit is also interesting. If we can achieve the alignment then maybe this step wouldn't be necessary and everything could be done in QuPath. But if you do need more CellProfiler-specific functionality then it would be good to discuss if there's a way to help streamline that bit of the process too - since better integration with CellProfiler is something that has already come up (e.g. #123).",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/162#issuecomment-377167248:379,message,message,379,https://qupath.github.io,https://github.com/qupath/qupath/issues/162#issuecomment-377167248,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"Ah, I never really tend to change the brightness/contrast settings for brightfield images and I don't recall if this has been requested before... is this something you do routinely?. In the latest milestone version you can at least send multiple regions to ImageJ in one go (just select multiple cores before running the command to extract them).... although it does result in a whole lot of images open in ImageJ, it might help a bit and perhaps the actual adjusting/saving could be done in a macro.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/202#issuecomment-520239588:171,rout,routinely,171,https://qupath.github.io,https://github.com/qupath/qupath/issues/202#issuecomment-520239588,1,['rout'],['routinely']
Integrability,"Ah, I was also using the OpenSlide example to see if it worked. If you can somehow send me an example file with the problem I'd be happy to investigate. Although it sounds like it is outside the domain of QuPath, which depends on either OpenSlide or Bio-Formats to access the pixels. (If it looks ok when opened by Bio-Formats in Fiji (www.fiji.sc) then it might be a QuPath thing again, although not one I've seen before.)",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/141#issuecomment-358746900:219,depend,depends,219,https://qupath.github.io,https://github.com/qupath/qupath/issues/141#issuecomment-358746900,1,['depend'],['depends']
Integrability,"Ah, interesting... yes that looks like a horribly subtle concurrency bug. Synchronizing `getNameMap()` might fix it?. It does seem that the only time `getNameMap()` can be called at the same time as modifying the list is during a call to `close()`. I'd be concerned about any possible inconsistency if we switch to `CopyOnWriteArrayList` (but perhaps just because I'm not familiar enough with its behavior). I tried to replicate the issue with; ```groovy; def pathObject = PathObjects.createDetectionObject(ROIs.createEmptyROI()). java.util.stream.IntStream.range(1, 1000); .parallel(); .each(i -> {; def ml = pathObject.getMeasurementList(); ml.put(""Hello "" + i, Math.random()); ml.close(); }); ```; ...but I failed to get it to throw any exception.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/1444#issuecomment-1936328342:74,Synchroniz,Synchronizing,74,https://qupath.github.io,https://github.com/qupath/qupath/issues/1444#issuecomment-1936328342,1,['Synchroniz'],['Synchronizing']
Integrability,"Ah, my best guess was wrong. But now that I know the image, I have tried it out... and it opens for me on my Mac, also 10.13.3, without problems (using OpenSlide). Do all .tif whole slide images fail for you in QuPath? Do any other formats work (e.g. SVS or NDPI - there are freely available test images on the OpenSlide website)?. A lot of that error message comes from the failed Bio-Formats attempt - you might want to remove or disable it since it didn't solve the problem. But the log shows that OpenSlide was also tried without success.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/156#issuecomment-371778042:352,message,message,352,https://qupath.github.io,https://github.com/qupath/qupath/issues/156#issuecomment-371778042,1,['message'],['message']
Integrability,"Ah, ok - the instructions to add the extension were missing from the image.sc thread. No worries then, I can understand not wanting to inflate the number of external dependencies. Thank you!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/455#issuecomment-618592948:166,depend,dependencies,166,https://qupath.github.io,https://github.com/qupath/qupath/issues/455#issuecomment-618592948,1,['depend'],['dependencies']
Integrability,"Ah, sorry, I probably should have mentioned, it might not be your laptop...; One of the dangers with using Positive Pixel detection is the strain it puts on the program when updating the screen with many very finely defined areas. I would recommend turning OFF all detection visualizations, then moving the screen to the location you want to see, then turning detection visualizations back on (might be the D or H key? I don't have access right now and forget). Turn them off again before you want to move the screen to a new position. It is somewhat cumbersome, but usually prevents my program from crashing. . In fact, the program is not usually crashing, but just very slowly rendering the entire image again. Though depending on your system it might sometimes take an hour or so! If you use Superpixels or Cell detection, this is not usually a problem.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/157#issuecomment-373141585:720,depend,depending,720,https://qupath.github.io,https://github.com/qupath/qupath/issues/157#issuecomment-373141585,1,['depend'],['depending']
Integrability,"Ah, that's a bit of a shame... but thanks for testing - there might be some other [platform preferences](https://openjfx.io/javadoc/23/javafx.graphics/javafx/application/Platform.Preferences.html) that help, although I'd be tempted to just leave is a bug that may magically get fixed by dependency updates. We still have the option to choose light or dark explicitly, so as long as that still works no one should be stuck.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625:287,depend,dependency,287,https://qupath.github.io,https://github.com/qupath/qupath/pull/1671#issuecomment-2393621625,1,['depend'],['dependency']
Integrability,"Aims to fix https://github.com/qupath/qupath/issues/843; Synchronization is performed in QuPathViewer and does not fire a property update (should it?). In the end, may be preferable to separate and simplify this logic.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/844:57,Synchroniz,Synchronization,57,https://qupath.github.io,https://github.com/qupath/qupath/pull/844,1,['Synchroniz'],['Synchronization']
Integrability,Aims to provide a mechanism to address; * https://github.com/qupath/qupath/issues/841; * https://github.com/qupath/qupath-extension-stardist/issues/11; by ensuring that an OpenCV Net wrapped in a DnnModel can be closed without needing a reference to the Net itself.; The StarDist and TensorFlow extensions should be updated to make use of this.,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/871:183,wrap,wrapped,183,https://qupath.github.io,https://github.com/qupath/qupath/pull/871,1,['wrap'],['wrapped']
Integrability,"Alert"": {; ""level"" : ""fatal"",; ""description"": ""handshake_failure""; }; ); javax.net.ssl|ERROR|29|Thread-9|2020-04-13 21:28:52.417 NOVT|null:-1|Fatal (HANDSHAKE_FAILURE): Received fatal alert: handshake_failure (; ""throwable"" : {; javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure; 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.Alert.createSSLException(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.fatal(Unknown Source); 	at java.base/sun.security.ssl.Alert$AlertConsumer.consume(Unknown Source); 	at java.base/sun.security.ssl.TransportContext.dispatch(Unknown Source); 	at java.base/sun.security.ssl.SSLTransport.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.decode(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(Unknown Source); 	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(Unknown Source); 	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(Unknown Source); 	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(Unknown Source); 	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(Unknown Source); 	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream(Unknown Source); 	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(Unknown Source); 	at shaded.com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:77); 	at shaded.com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at shaded.com.google.api.client.auth.oauth2.TokenRequest.executeUnparsed(TokenRequest.java:283); 	at shaded.com.google.api.client.auth.oauth2.TokenRequest.execute(TokenRequest.java:307); 	at shaded.com.google.api.client.auth.oauth2.Credential.executeRefreshToken(Credential.java:576); 	at shaded.com.google.api.client.auth.oauth2.Credential.refreshToken(Credential.java:493); 	at com.quantum",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/436:12135,protocol,protocol,12135,https://qupath.github.io,https://github.com/qupath/qupath/issues/436,1,['protocol'],['protocol']
Integrability,"Also turn off logging to a file by default.; Add debug level message if getSelectedObject() returns null but getSelectedObjects() does not, in reference to https://github.com/qupath/qupath/issues/758",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/768:61,message,message,61,https://qupath.github.io,https://github.com/qupath/qupath/pull/768,1,['message'],['message']
Integrability,"Also, I have an invalid extension installed (the [OMERO one currently isn't compatible](https://github.com/qupath/qupath-extension-omero)). If that could be captured here to easily remove that it would be great; currently, it isn't displayed at all. That might require more refactoring, since it is identified as invalid at the point when there is an attempt to install it... and so isn't added to the extensions list. Finally, could / should there be a way to list additional jars that are in the extensions directory but not actual extensions? Even just a count would be informative. I'm thinking of the scenario when a user deletes an extension, but doesn't have any knowledge of the fact that its dependencies are lingering. I know we don't have proper management of the dependencies, but some indication it's an issue would be good.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250:701,depend,dependencies,701,https://qupath.github.io,https://github.com/qupath/qupath/pull/1342#issuecomment-1748479250,2,['depend'],['dependencies']
Integrability,"Alternatively, I could try to figure out how to do an automated recount and just run all of the .tif files through this and scrap my manual counts. Goal is just counting blood smear slides to determine the ratio of sickled vs. nonsickled RBCs in each frame. Ie. nice round cells in each frame vs. football shaped or shriveled cells. I was attracted to qupath as it seemed like a user-friendly way to get into automated cell counts, though I quickly realized I was over my head in trying to achieve this and just used it's points tool and went the old-school route.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/266#issuecomment-461186493:558,rout,route,558,https://qupath.github.io,https://github.com/qupath/qupath/issues/266#issuecomment-461186493,2,['rout'],['route']
Integrability,"Always scary to reduce synchronization, but have been unable to identify any ill effects. This aims to fix https://github.com/qupath/qupath/issues/1400",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1404:23,synchroniz,synchronization,23,https://qupath.github.io,https://github.com/qupath/qupath/pull/1404,1,['synchroniz'],['synchronization']
Integrability,"Amazing timing! I just ran into this now trying to estimate dermal thickness. Thanks for the find and the fix.; As for the question about adjusting the script, the quickest thing I can think of, depending on how many lines you have... you might be able to change getAnnotationObjects to getSelectedObjects. This is assuming you can easily select out the ones you want to change!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/71#issuecomment-299514248:195,depend,depending,195,https://qupath.github.io,https://github.com/qupath/qupath/issues/71#issuecomment-299514248,1,['depend'],['depending']
Integrability,"An interesting variant of this (brace yourself Pete for more of my crazy), depending on what and how you are measuring things, can be converting your measurement area into a ""pathCellObject"" (whether it is hand drawn, tiles, etc) and then running Subcellular detection on it for a bit more control. The segmentation allows you to do things like add further color measurements to the objects created, which then allows further thresholding (remove objects that are too much of a color you are not looking for to get rid of black junk). Can go more into specifics if it is something that would be of interest.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/67#issuecomment-391773235:75,depend,depending,75,https://qupath.github.io,https://github.com/qupath/qupath/issues/67#issuecomment-391773235,1,['depend'],['depending']
Integrability,"As I mentioned (each time you brought this up :) ) the approach you have taken creates a dependency on `ImageDisplay` that I *really* do not want to be stuck with. It creates an awkward confusion between the GUI and core code that will be a maintenance headache, and would greatly complicate trying to implement a better design later. I added the alternative scripting methods that I linked to before precisely because you asked for it. Running that for a project is the solution I propose. It uses `ImageDisplay` internally (because it has to), but doesn't expose this publicly. Romain's comment wasn't a question, it seemed you had a solution you were satisfied with, and I received no reply to the changes I made for you except for 👍 so it remains very unclear to me what you want...",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/26#issuecomment-632627020:89,depend,dependency,89,https://qupath.github.io,https://github.com/qupath/qupath/issues/26#issuecomment-632627020,1,['depend'],['dependency']
Integrability,"As agreed in the [forum.sc post](https://forum.image.sc/t/tool-selection-via-mousewheel-side-scrolling-button-press/70796/4?u=ep.zindy) the following combinations of key / mouse button presses will need checking to make sure the proposed changes won't affect existing functionality in QuPath:. * For all operating systems (Windows, Linux [or at least Ubuntu], macOS); * For both mouse and trackpad; * For all relevant combinations under View → Multitouch gestures; * ‘Normal’ behavior for zoom/pan etc.; * Behavior with shortcut keys pressed e.g.; * Scroll + Ctrl/Cmd – should adjust opacity; * Scroll + Shift – can switch pan to zoom (depending upon prefs); * Behavior with the ‘Invert scrolling’ option selected",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1037:636,depend,depending,636,https://qupath.github.io,https://github.com/qupath/qupath/pull/1037,1,['depend'],['depending']
Integrability,"Aside from altering the code and recompiling, I don't think there is any easy way to change the tiling size, but you may be able to script merging the correct annotations. Depending on your sample, you might check annotations of the same class with centroids within a certain distance of each other, and select and merge them if they are close enough together. If you are going to merge all of the data later on, you can also just select all ""stroma"" (or whatever class) annotations and merge them with a two line script:; ```; selectObjects { p -> p.getPathClass() == getPathClass(""Stroma"") }; mergeSelectedAnnotations(); ```. Pete might have some better ideas, but that's the best I have got based on the description!",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/89#issuecomment-320290057:172,Depend,Depending,172,https://qupath.github.io,https://github.com/qupath/qupath/issues/89#issuecomment-320290057,1,['Depend'],['Depending']
Integrability,"Aside from the messages in the log, is this causing any problems? As you describe, Bio-Formats tries to delete the file - in which case it isn't really a fixable QuPath bug if this fails. bfmemo files are not expected to be deleted after closing QuPath, but rather retained so that the image can be opened more quickly later. You can turn of the use of memoization in the QuPath preferences. There is further info at https://github.com/qupath/qupath-bioformats-extension - but _don't install this extension with v0.2.0!_ It doesn't work, isn't necessary and can cause conflicts.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/287#issuecomment-473682408:15,message,messages,15,https://qupath.github.io,https://github.com/qupath/qupath/issues/287#issuecomment-473682408,1,['message'],['messages']
Integrability,"Attempt to resolve https://github.com/qupath/qupath/issues/744. The underlying problem is that concurrent modification exceptions occurred whenever nDescendants() was called by the UI thread while another thread was adding/removing objects. Adding *more* synchronization to try to overcome this resulted in deadlocks. This commit tries to resolve the issue in two ways:; - Making the childList a synchronized collection (actually a Set); - Reducing synchronization on the PathObject itself, and synchonizing more sparingly on the childList. This is hopefully sufficient to avoid simply counting objects in one thread interfering with adding/removing objects in another. Since most adding/removing access is via a PathObjectHierarchy, counting is (I think...) the main concurrency risk, and the resulting code should be more robust. Along the way, the childList was also given a better default capacity.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/750:255,synchroniz,synchronization,255,https://qupath.github.io,https://github.com/qupath/qupath/pull/750,3,['synchroniz'],"['synchronization', 'synchronized']"
Integrability,Avoid UnsafeReflectionAccessor message,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/537:31,message,message,31,https://qupath.github.io,https://github.com/qupath/qupath/pull/537,1,['message'],['message']
Integrability,"Avoid setting a 'zoom-to-fit' status that affects all viewers, but instead just adjust the zoom/positioning of the current viewer. This is to avoid the problem where a user might accidentally select the option, and then find themselves unable to zoom/pan in the image until the toggle has been deselected. Also turn off 'synchronize viewers' by default, but also make it a *persistent preference* so that its status is remembered when QuPath is restarted.",MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1398:321,synchroniz,synchronize,321,https://qupath.github.io,https://github.com/qupath/qupath/pull/1398,1,['synchroniz'],['synchronize']
Integrability,Because I have built-in dependencies in pom.xml(in my extension for QuPath) from qupath-gui-fx. For resolving these dependencies I need to install qupath libraries to local maven repository. But last QuPath version built on gradle and I can't do this without maven plugin in build.gradle.,MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/324#issuecomment-497262635:24,depend,dependencies,24,https://qupath.github.io,https://github.com/qupath/qupath/pull/324#issuecomment-497262635,2,['depend'],['dependencies']
Integrability,Bio-Formats Apple Silicon message,MatchSource.ISSUE,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/pull/1417:26,message,message,26,https://qupath.github.io,https://github.com/qupath/qupath/pull/1417,1,['message'],['message']
Integrability,"Both are required - you'll need all the code there. If you follow the instructions towards the end of the linked page (starting with _Step by step guide_) you should end up with a runnable version of QuPath, with all the different components and dependencies.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/188#issuecomment-409255073:246,depend,dependencies,246,https://qupath.github.io,https://github.com/qupath/qupath/issues/188#issuecomment-409255073,1,['depend'],['dependencies']
Integrability,"Both of these issues should now be addressed in `v0.0.5`. Error messages are shown if no objects are selected, or if a region is selected which is particularly large.",MatchSource.ISSUE_COMMENT,qupath,qupath,v0.5.1,https://github.com/qupath/qupath/issues/13#issuecomment-259152982:64,message,messages,64,https://qupath.github.io,https://github.com/qupath/qupath/issues/13#issuecomment-259152982,1,['message'],['messages']
