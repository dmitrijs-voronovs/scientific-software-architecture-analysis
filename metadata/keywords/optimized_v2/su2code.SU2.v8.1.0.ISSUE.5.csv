quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,"@pcarruscag Hi Pedro. ; After a while we think the problem lies in the .dylib shared library file suffix. After manually changing suffix into _pysu2.so one can import/load the python module. We also tried to change meson.build file under SU2_PY/pysu2 to enforce output .so file: ; ``` ; swig_lib = shared_library(; '_pysu2',; cpp_source,; dependencies: [wrapper_deps, common_dep, su2_deps],; objects: [; su2_cfd_lib.extract_all_objects(),; su2_def_lib.extract_objects('drivers/CDeformationDriver.cpp'); ],; install: true,; include_directories : mpi4py_include,; cpp_args : [default_warning_flags,su2_cpp_args],; name_prefix : '',; name_suffix: 'so',; install_dir: 'bin'; ) ; ```; However, bug still remains while running python script that used pysu2/pysu2ad module. There is a MPI related issue after calling Postprocessing in pysu2: . ```; ------------------------- Solver Postprocessing -------------------------; Deleted CNumerics container.; Deleted CIntegration container.; Deleted CSolver container.; Deleted CIteration container.; Deleted CInterface container.; Deleted CGeometry container.; Deleted CFreeFormDefBox class.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted nInst container.; Deleted COutput class.; -------------------------------------------------------------------------; [DN0a22c803:22646] *** Process received signal ***; [DN0a22c803:22646] Signal: Segmentation fault: 11 (11); [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:167,load,load,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['load'],['load']
Performance,"@pcarruscag, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). . For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459952137:163,perform,performance,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459952137,2,['perform'],['performance']
Performance,"@pcarruscag, could you give some more details what kind of dense matrix functionalities you would like to add? There is already an optimized implementation using the Intel MKL library (I know this is not open source, but developers can use it freely) and as Juan mentioned the DG-FEM solver also uses quite a bit of dense matrix functionality. One thing you have to realize though is that the whole enchilada has to work as well for the discrete adjoint solver. This means that no matter what external libraries you choose, you have to come up with your own functionality that works for the types used by CoDiPack. @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459621000:131,optimiz,optimized,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459621000,1,['optimiz'],['optimized']
Performance,"@pcarruscag, my icpc version is 19.0.0.117 20180804....; The speed up is most likely also processor dependent. I ran this case on a Xeon(R) Gold 6140 CPU @ 2.30GHz with 24 Mb cache. Anyway, this is probably as fast as you can get the code to run with the current data structures. Maybe you can squeeze another 10 percent out of it, but that's most likely it. If we really want to speed things up, we need to change the data structures significantly (structure of arrays, a single array per variable, aligned memory allocation, padding arrays to a multiple of 8, no small loops over the number of dimensions, etc.) . As said before, I think we can get at least a factor of 4 in speed compared to the current version if we can use a significant number of SIMD loops, i.e. vectorization. However, I don't know how much support there is for a pretty much complete rewrite of the computational kernel. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524038333:175,cache,cache,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524038333,1,['cache'],['cache']
Performance,"@pcarruscag, your compiler flags perform a lot better. Compared to what I used, it speeds up another 15 percent. Compared to the develop version I get a speed up of 1.5 now on my machine. As far as your earlier question about vectorization is concerned, yes these are all small loops. None of the bigger loops is vectorized.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524805261:33,perform,perform,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524805261,1,['perform'],['perform']
Performance,"@pcarruscag: is this all ready now that the regression is in place? We can merge in if so. Also, you mentioned that ad-hoc scripting is needed to run optimization. Is that script provided anywhere in this PR so that folks can try out your implementation?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-437523508:150,optimiz,optimization,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-437523508,1,['optimiz'],['optimization']
Performance,"@stephansmit Is it possible for you to share what you did? I looked at the code and don't want to mess with the MPI stuff as I don't know about it. Currently, I am limited to 3 cores which is greatly slowing down the optimizations. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-641611543:217,optimiz,optimizations,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-641611543,1,['optimiz'],['optimizations']
Performance,"@vdweide : I have not hit this issues yet, although I have not been paying too close of attention to the file size (although I have used some large ones). We can make a quick test of this with free stream through a very large cube mesh. . This also goes hand in hand with large mesh support, in my mind, since you won't care about the restart files if you can't get your large mesh loaded :). We can add this to the list for the RPSVV group.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500946690:382,load,loaded,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500946690,1,['load'],['loaded']
Performance,"@vdweide, of relevance to performance I used -O3 -march=native -DNDEBUG. That last one disables the assertions the container class performs to detect out of bounds accesses.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524534304:26,perform,performance,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524534304,2,['perform'],"['performance', 'performs']"
Performance,"A question and a comment:. 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?; 2. Both Beckett Zhou and I have performed shape optimization with objective functions computed as a post-processing step. From my (admittedly biased) perspective, I would like to have this sort of capability built into SU2. You can reference one of Beckett's papers ([\[1\]](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3355) or [\[2\]](https://arc.aiaa.org/doi/abs/10.2514/6.2017-3658)) to see the sort of framework I'm talking about.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607605381:110,optimiz,optimization,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607605381,3,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:227,optimiz,optimization,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,1,['optimiz'],['optimization']
Performance,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/297:347,optimiz,optimization,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/297,2,['optimiz'],['optimization']
Performance,"ALE is one of the things missing right now. But this is something we want to target asap, to bring the incompressible solver on the same level as the compressible one. Furthermore we noticed that there is a lot of potential for further optimizations in terms of memory and speed. Conjugate Heat transfer (compressible and incompressible) is also on the way :). PS: I will fix the conflicts soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-259260177:236,optimiz,optimizations,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-259260177,1,['optimiz'],['optimizations']
Performance,"About the output: most, if not all, of the changes affect only structural and FSI problems. They are not yet perfect, but the output is improved respect to the released version of the code. I believe it does not affect anybody else's output. . On the other hand - again, the output needs to be rethought. Together with the input, it's the bottleneck in terms of abstraction, the rest of the code is nice and abstract and the input/output is still full of ifs/else. Working on that at the moment... But it's a much bigger change, so that's why I decided to put this through now, as a minor release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/522#issuecomment-382362207:339,bottleneck,bottleneck,339,https://su2code.github.io,https://github.com/su2code/SU2/pull/522#issuecomment-382362207,1,['bottleneck'],['bottleneck']
Performance,Aerodynamic Shape Optimization: Solution restarting procedure & Exporting the final shape as 3D CAD model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:18,Optimiz,Optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,1,['Optimiz'],['Optimization']
Performance,"After a meeting with @TobiKattmann, I have decided to change NEMO BC_EULER_WALL to match the one in CEulerSolver.cpp, where the velocity vector and gradients are corrected. Euler boundary condition is now called inside the symmetry plane boundary condition, before performing the residual correction; This way, I believe I am assuring for all the vector quantities to be parallel to the symmetry plane and guaranteeing the condition of symmetry according to _Jiri Blazek's - ""Computational fluid dynamics: principles and applications""_ . However, calling Euler function does not appear to substantially change the the solution substantially in the test I have made so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018:265,perform,performing,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018,1,['perform'],['performing']
Performance,"After realizing that SU2_MSH was only able to generate halo cells when the periodic BCs didn't share a common edge, @sravya91 and I went through the code that performs this task and fixed a few things to add this capability back. After fixing this we realized that there was an issue within the SU2_CFD when trying to run periodic BCs that touch each other. The issue was traced to the mpi communication routines, and since @economon was working on a revamp of this part of the code, we decided to wait until this was done. I am not sure what has been done here since, but I thought I should mention what has already been done in case you find it useful and can save you some time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358538787:159,perform,performs,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358538787,1,['perform'],['performs']
Performance,"Agreed that it is a bit different... . I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options. If the CFL must remain low for stability, then perhaps we should look at the quality of the Jacobians we construct to see if we can improve, or even try exact Jacobians with AD if we can afford it. A more advanced CFL ramping strategy could also be helpful here to get us closer to a solution before trying to aggressively converge. Just some options to try - it is an important topic and it would be good to isolate the primary restriction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460811699:776,perform,performant,776,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460811699,1,['perform'],['performant']
Performance,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:249,perform,performance,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['perform'],['performance']
Performance,"Ah! uff glad we agree (I do pay attention to what you think).; I think the first concern is more or less covered, it can always be cut and pasted somewhere else, we have sgs and wall models floating around, maybe we should have a physical_models directory.; Regarding your second point I would just have the stressTensor function deciding what modifications to perform, QCR and UQ, based on input parameters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742663910:361,perform,perform,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742663910,1,['perform'],['perform']
Performance,"Ah, I forgot to mention I do not use our shape optimization framework (should have started with that). The optimizer ""sees"" y = s_f * f(x'), SU2_** takes as input x, say ffd points, and computes f, say drag, (x' = s_x * x) then dy/dx' = s_f / s_x * df/dx, there is perhaps some equivalence with the tuning parameters we have.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616856147:47,optimiz,optimization,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616856147,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"All for improving the abstractions if possible. We did something similar for the scalar upwinding and the viscous schemes already. . My only comments, which you can probably guess already, are to make sure we don't take a large performance hit by adding more layers (for example, one can make an argument to remove the entire set of CNumerics classes and implement the methods more efficiently directly in the solver class with vectorization, etc) and that we maintain the flexibility for folks to quickly add new convective schemes which was the original motivation for the existing structure (and more layers could complicate this). Sounds like you're already considering these things, but it is important to find the right balance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500942445:228,perform,performance,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500942445,1,['perform'],['performance']
Performance,"All,. Following this discussion, why not use something more descriptive for OBJECTIVE_FUNCTION? At the end of the day, it is meant as the functional, derived from the solution of the PDE, that we are solving the adjoint equations for. Then we use that adjoint field to compute gradients. How about ADJOINT_FUNCTIONAL? Or ADJ_FUNCTIONAL?. Best,. Juan. On Feb 22, 2016, at 8:34 AM, Francisco Palacios <notifications@github.com<mailto:notifications@github.com>> wrote:. Sorry for my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187268164:832,optimiz,optimization,832,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187268164,1,['optimiz'],['optimization']
Performance,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:57,perform,performance,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,8,"['perform', 'tune']","['performance', 'tuned']"
Performance,"All,. I would agree that we need to look at an existing library and not re-develop one. The standard for dense linear algebra is LAPACK. It has been around forever, relies on BLAS routines, is currently being used in the SU2 higher-order DG-FEM solver. Various computer vendors (including GPU manufacturers) have spent many years optimizing BLAS and LAPACK calls on their own computer architectures. This means that your code is (a) portable and, by linking to the appropriate vendor-provided version of the library (say like Intel’s MKL), (b) you get highest performance. I am not familiar with Eigen (just looked at the web page), but there is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen…take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Munguía <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:330,optimiz,optimizing,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,2,"['optimiz', 'perform']","['optimizing', 'performance']"
Performance,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:319,perform,perform,319,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['perform'],['perform']
Performance,"All,. Regarding the wall function specification, if we are going to settle on a standard way that could work for both the FV and DG-FEM solvers, it might be good to think about some modifiers that can later allow for a generality of approaches. We can make a distinction between wall functions and wall models, but this is subject to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:365,perform,performing,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,2,['perform'],['performing']
Performance,"All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. . Waiting for comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224563432:640,latency,latency,640,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224563432,1,['latency'],['latency']
Performance,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:29,perform,performance,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,10,['perform'],['performance']
Performance,"All,; If you have a look at ""feature_test_eigen"", I ""ported"" the JST ComputeResidual method.; I only changed the local variables of the method, so some temporaries are required to make things compatible with the outside world and with base class variables. Nevertheless, the performance is not worse (direct and discrete adjoint) and I think it reads better, but that is subjective.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460671586:275,perform,performance,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460671586,1,['perform'],['performance']
Performance,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:434,optimiz,optimization,434,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['optimiz'],['optimization']
Performance,Alternative time-averaging for rectangular window to avoid performance degradation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:59,perform,performance,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['perform'],['performance']
Performance,"Although I am minimizing my objective function, its value appears to rise in some designs while running a shape optimization. I look at my objective function value from the history_project.dat file. It makes sense for it to move in only one direction because that's what the adjoint gradients will ask it to do, however, I don't know if this rule is actually always satisfied in shape optimization.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984:112,optimiz,optimization,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/984,2,['optimiz'],['optimization']
Performance,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-594201448:165,latency,latency,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448,4,"['bottleneck', 'latency', 'scalab']","['bottleneck', 'latency', 'scalability']"
Performance,"And why is your Test repo so large?; Perhaps some data files would be happier living elsewhere?. I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72739420:129,load,load,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72739420,1,['load'],['load']
Performance,"Are you talking about shape optimization with re-meshing?; If yes, people are already working on restart with interpolation (@jayantmukho @bmunguia ); Otherwise, SU2 already restarts when doing shape optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/852#issuecomment-578428526:28,optimiz,optimization,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/852#issuecomment-578428526,2,['optimiz'],['optimization']
Performance,"As I mentioned in my initial post, first-order works fine while restarting from the steady flow solution but when I want to restart FSI from a later time iteration, SU2 diverges. By subcycling, I meant that I would like to use different time step sizes for structure and fluid. For example, if I specify an FSI timestep of 1e-02s then I would like to use smaller timesteps on the fluid side (like 1e-05s) and maybe keep the structure time step to 1e-03s, and when both fluid and solid reach the same time, the deformation and load convergence be monitored and if they have not converged then another outer iteration would begin. Does that make sense?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215:526,load,load,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215,1,['load'],['load']
Performance,"As a second note: we are aware that even the 70 min. time limit is causing problems for new PRs and other branches that are using Travis CI individually. . One option is to ""parallelize"" the builds by decomposing the current regression scripts into more scripts with fewer tests each. However, this only addresses part of the problem, as the compilation step is taking the most time and is currently done within each script. We could consider compiling with lower optimization, etc., to get the cost down, but I am open to ideas on this front too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339748432:464,optimiz,optimization,464,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339748432,1,['optimiz'],['optimization']
Performance,At first glance this looks like a valid solution to me - if you want to open a pull request we can compare the regression test run to see if the performance changes (and of course if any regression tests break).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252#issuecomment-208087862:145,perform,performance,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/252#issuecomment-208087862,1,['perform'],['performance']
Performance,"At some point the marker starts being partitioned, some of it is in one rank, some in other(s).; Your print function truncates the file when it opens it, and so you only get the output from the last rank that opened the file.; You could make the file a member of the class, so that you can guarantee it is only opened once (other ranks would need to open in append mode), but then you still have a race condition when multiple ranks try to write simultaneously to the file (the result might be mixed lines, especially when `endl` is used to terminate lines because it forces a flush, maybe with ""\n"" and some luck it would be ok, but the order of the lines is still unpredictable).; To my knowledge mpi does not have simple ways to guarantee ordered execution of certain code regions. So unless you want to get knee deep in mpi, I recommend you keep this file output as a debug feature (that works on a single core) and use the normal surface output files (paraview, tecplot, etc.) for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/944#issuecomment-616367257:398,race condition,race condition,398,https://su2code.github.io,https://github.com/su2code/SU2/issues/944#issuecomment-616367257,2,['race condition'],['race condition']
Performance,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352:81,optimiz,optimization,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/352,1,['optimiz'],['optimization']
Performance,"Based on paper - . ## Proposed Changes. - AUSM+ -up2 scheme has been implemented. - Likely to perform better for high speed flows (author claims - Robustness against shock anomalies as good as Van leer scheme (less carbuncle prone) while it resolves contact discontinuity/boundary layer sharply/accurately. Smooth representation of heating etc.). - Reference- ""Towards a shock-stable and accurate hypersonic heating computations: A new pressure flux for AUSM scheme, authors- Kitamura, Shima, JCP 245 2013"". ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631:94,perform,perform,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/631,1,['perform'],['perform']
Performance,"Being able to produce a deformed mesh in cgns rather than SU2 format would be useful for:; - transferring geometries resulting from optimization cases to other simulation tools (whether another fluid solver or for multiphysics simulations); - editting meshes when the files used to generate the mesh have been lost or are unavailable (currently there is no way to load an su2 mesh into pointwise, for example). ; - general compatibility with external tools: 3rd party mesh deformation & generation, CAD, etc. . Since we can already read CGNS format hopefully that won't be too burdensome.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/287:132,optimiz,optimization,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/287,2,"['load', 'optimiz']","['load', 'optimization']"
Performance,Bug in unsteady optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296:16,optimiz,optimization,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/296,1,['optimiz'],['optimization']
Performance,Bump actions/cache from 1 to 3,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:13,cache,cache,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,Bump actions/cache from 3 to 4,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:13,cache,cache,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:15,cache,cache,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,6,['cache'],['cache']
Performance,"Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/download-artifact/releases"">actions/download-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/download-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/bflad""><code>@​bflad</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/download-artifact/pull/194"">actions/download-artifact#194</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/download-artifact/compare/v3...v4.0.0"">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.0.2</h2>; <ul>; <li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=""https://redirect.github.com/actions/dow",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:472,perform,performance,472,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['perform'],['performance']
Performance,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>; <p>ℹ️ However, this is a major update that includes breaking changes. Artifacts created with versions v3 and below are not compatible with the v4 actions. Uploads and downloads <em>must</em> use the same major actions versions. There are also key differences from previous versions that may require updates to your workflows.</p>; <p>For more information, please see:</p>; <ol>; <li>The <a href=""https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/"">changelog</a> post.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/README.md"">README</a>.</li>; <li>The <a href=""https://github.com/actions/upload-artifact/blob/main/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vmjoseph""><code>@​vmjoseph</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/upload-artifact/pull/464"">actions/upload-artifact#464</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:464,perform,performance,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['perform'],['performance']
Performance,CSysMatrix cleanup and performance improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:23,perform,performance,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,1,['perform'],['performance']
Performance,"Can't you use gcc? You will get worse performance with any version of the intel compilers prior to 2019 than with even gcc 5.4...; If this is because you need intel MPI you can do:; export CC=gcc; export CXX=g++; export I_MPI_CC=gcc; export I_MPI_CXX=g++; And then follow the normal installation procedure (meson ninja). These problems you are running into with boost also have a ""half baked c++11 compiler support"" smell to them, namely the 03 suffix to that file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620086431:38,perform,performance,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620086431,1,['perform'],['performance']
Performance,"Certain parts of the code use atomic reductions, and dynamic work sharing for load balancing. That's why there is slight (hopefully) non determinism.; There are more operations per iteration when using the NK solver, which makes it more noticeable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259#issuecomment-2034432299:78,load,load,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259#issuecomment-2034432299,1,['load'],['load']
Performance,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593638807:584,perform,performance,584,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807,1,['perform'],['performance']
Performance,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:58,optimiz,optimization,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['optimiz'],['optimization']
Performance,Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimizatio…,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:58,optimiz,optimizatio,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['optimiz'],['optimizatio']
Performance,Changed time-averaging algorithm to reduce performance impact.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:43,perform,performance,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['perform'],['performance']
Performance,Check shape_optimization.py and http://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.optimize.fmin_slsqp.html,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/49:97,optimiz,optimize,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/49,1,['optimiz'],['optimize']
Performance,Check that GEOMETRY EVALUATION PARAMETERS section is in place when running an optimization problem.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/104:78,optimiz,optimization,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/104,1,['optimiz'],['optimization']
Performance,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:473,bottleneck,bottleneck,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644,1,['bottleneck'],['bottleneck']
Performance,Clean LoadRestart for Flow/Turb/Heat,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:6,Load,LoadRestart,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['Load'],['LoadRestart']
Performance,"Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7884,cache,cache,7884,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"Concerning your first question.. that was an old example of using the custom objective option for running shape optimization (it was hard-coded for a particular problem - I do not recommend doing it that way). This is only necessary if you would like to include what is happening at the boundaries as part of the objective function or as a constraint. . If your sweep over the inlet velocity is not part of the objective/constrain definition, then you do not need to do this. For example, if you are minimizing drag by changing the shape of a solid boundary given multiple inlet conditions, you can use the normal drag objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-605275594:112,optimiz,optimization,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-605275594,1,['optimiz'],['optimization']
Performance,Correct the output in the load distribution file.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/106:26,load,load,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/106,1,['load'],['load']
Performance,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:249,load,loads,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['load'],['loads']
Performance,"Currently, we output all CFD evaluations during shape design, which will include calculations as part of line searches. We should tag the subset of candidate designs that represent the major optimization iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108:191,optimiz,optimization,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/108,1,['optimiz'],['optimization']
Performance,"Cus yolo.; I have no idea how much that stuff matters to the repo size, so best not to prematurely optimize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-744782549:99,optimiz,optimize,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-744782549,1,['optimiz'],['optimize']
Performance,"Dear @salvovitale ,. Thanks for your reply. Unfortunately, all my attempts with periodic BCs failed during the Jacobian initialization independent; of the number of processors.... Apparently, SU2_MSH is converting the mesh correctly, visually at least... What is the size of your grid? It is 3D? I tried with grids from 1M to 10M without success.... @BeckettZhou and @talbring are also trying to perform unsteady simulations with periodic BCs. Can you share your experiences about this topic?. Any help is really appreciated. Regards . Eduardo Molina",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/416#issuecomment-317298834:396,perform,perform,396,https://su2code.github.io,https://github.com/su2code/SU2/issues/416#issuecomment-317298834,1,['perform'],['perform']
Performance,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:199,perform,perform,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['perform'],['perform']
Performance,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:111,optimiz,optimization,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,3,['optimiz'],"['optimization', 'optimized']"
Performance,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489#issuecomment-355968201:111,optimiz,optimization,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/489#issuecomment-355968201,3,['optimiz'],"['optimization', 'optimized']"
Performance,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909:44,optimiz,optimize,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/909,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:864,cache,cached,864,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,1,['cache'],['cached']
Performance,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:38,optimiz,optimize,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,1,['optimiz'],['optimize']
Performance,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307:211,throughput,throughput,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307,1,['throughput'],['throughput']
Performance,Divergence optimization NACA0012 inviscid test-cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:11,optimiz,optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimization']
Performance,Do we really need the templates right now ? Or this is just in case ? I think if we make su2double a float we get also problems somewhere else (furthermore using float makes actually no sense on current architectures regarding performance),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-426946593:227,perform,performance,227,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-426946593,1,['perform'],['performance']
Performance,"Doh, of course. Took a while to get some orientation in the code, but before implementing something I'd just like to clarify a few things:. As far as I can see the window size changes each time a new sample is added and the new average is immediatly recomputed and cached in `val`.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/COutput.cpp#L1916-L1928; I didn't find any other references to `WindowedUpdate` or `addValue`. Consequently it doesn't really make sense to cache the sum over n-1 samples, right?. Assuming that the windowing-function cannot change at runtime I'd propose the following changes:. - Add a new constructor to CWindowedAverage which takes the windowID as input parameter and stores it in a const field.; - Initialize the map that stores the CWindowedAverages in the COutput constructor with CWindowedAverage objects constructed with the WindowId specifed.; - Merge the code that updates the average (`WindowedUpdate`) into `addValue`, since both are currently called successively anyway. Delete `WindowedUpdate` function.; - Modify `addValue` to only store history for non-trivial windows. Another option might be to make CWindowedAverage (or `CWindowingTools`) an abstract class with `GetWndWeight` as pure virtual function that needs to be implemented for concrete windows. This would get rid of the duplicate code and switch-statements in CWindowedAverage. The constructor of COutput would then have to initialize the map with the right concrete class. Thoughts?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428:265,cache,cached,265,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041186428,2,['cache'],"['cache', 'cached']"
Performance,Efficiency improvements for sorting + loading of grid information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:38,load,loading,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['load'],['loading']
Performance,Enhancement for multipoint optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:27,optimiz,optimization,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['optimiz'],['optimization']
Performance,Errors when running Shape Optimization Tutorial 1 - NACA0012,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:26,Optimiz,Optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['Optimiz'],['Optimization']
Performance,"Ettore,. Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://githu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:595,load,load,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454,1,['load'],['load']
Performance,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:35,optimiz,optimizer,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:1657,Perform,Performing,1657,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['Perform'],['Performing']
Performance,"FYI - if you look at the full regtest log, there are a couple of tests failing silently - looks like on the SOL step such that when it checks the values it's still getting a match, but there is an error output. I checked, and this same problem occurs on the current develop branch, so it is not this PR causing the problem. . Since this fixes an urgent performance issue as far as I'm concerned we can merge this in despite that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/340#issuecomment-264673401:353,perform,performance,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/340#issuecomment-264673401,1,['perform'],['performance']
Performance,Feature actuator disk with variable load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:36,load,load,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['load'],['load']
Performance,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:58,load,load,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,6,['load'],"['load', 'loading']"
Performance,"Fetched developed branch and ran serial_regression.py. Got case FAILED with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; With INTEL compiler on same platform get passed for ls89_sa, centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are the differences for naca0012_def and most of the brick-tests with intel. They converge in significant fewer steps and are marked FAILED.; Is it worthwhile to investigate the differences between GCC and Intel for the brick-cases?; I'am asking, because I'm gone look to fasten calculations up with optimizations in the existing code for single core and perhaps MPI. Far goal, but really far, may be using GPUs as well. Currently I have a 15% improvement single core for RANS from the Comp&Fluids_129 paper. But of course the calculations should not only be faster but correct as well.; Regards, Josef",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347:565,optimiz,optimizations,565,https://su2code.github.io,https://github.com/su2code/SU2/issues/347,1,['optimiz'],['optimizations']
Performance,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:705,Load,LoadVolumeData,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,1,['Load'],['LoadVolumeData']
Performance,Fix #1667 Potential crash for the OpenMP multi-thread running.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:41,multi-thread,multi-thread,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['multi-thread'],['multi-thread']
Performance,Fix bugs when restarting a shape optimization problem,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:33,optimiz,optimization,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['optimiz'],['optimization']
Performance,Fix inlet profile file loading when not restarting unsteady problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1264:23,load,loading,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264,1,['load'],['loading']
Performance,"Fix to multi-functional optimization, addition of regression test. ; This re-introduces functionality that was previously added in https://github.com/su2code/SU2/pull/385. . (it was accidentally effected by someone else's pull request that appears to have been based on an outdated version of develop - if work you merged ~Feb-July has mysteriously disappeared I can privately point you to the relevant pull request to aid in fixing that)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/494,1,['optimiz'],['optimization']
Performance,Fixes #1568 - Prefer loading zlib and szip libraries dynamically,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:21,load,loading,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['load'],['loading']
Performance,"Folks,. I replaced the matrix multiplication in the DG solver (gemm in terms of BLAS) with the functionality provided by Eigen. It was very easy and it gives a very readable code. . I ran a couple of tests and, unfortunately, the preliminary conclusion is that you only get good performance if you let Eigen use an optimized BLAS implementation. In my case I used MKL. Compared to directly calling the MKL, there is an overhead of around 10 percent, which is still acceptable. However, if you do not use MKL and let Eigen do the matrix multiplication itself, the performance drops a factor of 7 for the test I carried out, which is a representative 3D test case. This factor is observed for both for the Intel and GNU compiler. It is still a factor 2 faster than my naive implementation though. So it looks like, at least for the DG solver, it is an absolute necessity to use an optimized BLAS implementation, unless there are some magic options in Eigen to make the gemm functionality faster. Using an optimized BLAS implementation in combination with Eigen is fine when doubles are used, i.e. when the solver is run in analysis mode. However, for the discrete adjoint solver the situation is a bit more complicated and we may have to come up with something better than just let Eigen handle the matrix multiplications. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462075284:279,perform,performance,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462075284,5,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"Folks,. Perhaps we can split this issue to a separate thread. But it is indeed a critical one. Improving performance of the solver (or trying other preconditioned solvers) would be a significant improvement amortized over a very large number of users. Add it as a topic of discussion for the Annual Meeting in May?. Juan. On Feb 5, 2019, at 6:54 AM, pcarruscag <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @EduardoMolina<https://github.com/EduardoMolina>,. That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. However Eigen is not the tool for that as the sparse linear solvers it has are similar and are not distributed parallel.; When I opened this issue I was thinking exclusively about how we handle small-medium dense matrices that live on a single rank, and associated algorithms (the kind used for RBF interpolation for example).; I think the two issues are fairly orthogonal, so we can open another to discuss large solvers, for which related work has already been started. Cheers,; Pedro. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-460666656>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxClv7-iTk5lFN9sK4fkqM7lk0FZEks5vKZsPgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460714752:105,perform,performance,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460714752,2,['perform'],['performance']
Performance,"Following along here.. will you eventually move the parallel section in CSysSolve up to the full application level (in the main() maybe) when you move to the next steps? In the earlier work, we found that, as you have seen in the linear solver routines, spawning parallel sections kernel-wise carried a large overhead. We found that the best performance was given by spawning right at the start and carry the threads through the entire program, just like the MPI ranks. . My only other comments, which it sounds like you are addressing, are to make the threads as transparent as possible to developers (shouldn't need to touch them unless they want to, like the MPI), and to make the compilation painless (disable/enable). Have you connected it to meson somehow yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566642160:342,perform,performance,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566642160,1,['perform'],['performance']
Performance,"Following this discussion, I want to share certain points related to convergence -. 1- Some good/fast solution initialisation methods will be helpful to start with (commercial solver like Fluent uses Full Multigrid initialisation /FMG - euler initialisation, which provides fast initial guess to start with). 2- Switching from first order to second order gradually will be helpful. 3- Smart/tuned CFL ramping strategy (some commercial codes have tuned way of doing it where CFL range varies from subsonic to hypersonic Mach number). 4- As Dr. Economon mentioned exact Jacobians play important role (In SU2 code, HLLC, JST and Roe have exact/nearly exact Jacobians). I observed that with inconsistent discretization (with some of the problems), solution does not go with higher CFL even in later stages and takes more iterations to converge. 5- It will be desirable to arrive at fewer set/combination of Linear solver+preconditioner which covers broad range of problems. That will help in faster evolution of solution convergence strategies . 6- Handling poor quality cells in some way may be important from practical usage point of view with realistic geometries (I don’t know how much literature is available for such stuff). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460875622:391,tune,tuned,391,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460875622,2,['tune'],['tuned']
Performance,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:382,optimiz,optimization,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678,1,['optimiz'],['optimization']
Performance,"For the first question, yes, the framework assumes that drag should be minimized and lift maximized. You should be able to flip it by using a negative scale factor, or you can directly modify the python framework to change this (just a one-line change). See get_objectiveSign() in SU2/SU2_PY/SU2/io/tools.py. For the second questions, it is difficult to known what SLSQP is doing under the hood. However, we use the scale factors to try to better control the optimization process (step sizes in particular). See more discussion about this in #733",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103#issuecomment-756212832:459,optimiz,optimization,459,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103#issuecomment-756212832,1,['optimiz'],['optimization']
Performance,"From my experience performance will not be better than current MKL, unless the matrices in question are small and their sizes known at compile time.; The selling point is not speed vs MKL, is that you get the same speed (if using a BLAS backend) plus the syntactic sugar, plus compatibility with any data type.; The DG solver is probably one of the most optimized parts of SU2 so I doubt it would gain any performance.; Since there seems to be interest I will try to ""port"" one of the fluid numerics classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459864800:19,perform,performance,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459864800,3,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"Gauss-Elimination with reciprocal values, some optimization in limiter calc. ...; A suspected bug in Line 230 solver_structure.cpp fixed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386:47,optimiz,optimization,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/386,1,['optimiz'],['optimization']
Performance,"Good point! Indeed the solver has a hard time converging and the resudual barely drops below 4E-8 (far away from the limit specified in the tutorial).; ```; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; 1 Free Form Deformation boxes.; 1 Free Form Deformation nested levels.; FFD box tag: BOX. FFD box level: 0. Degrees: 4, 1.; FFD Blending using Bezier Curves.; Number of parent boxes: 0. Number of child boxes: 0.; Corner points: 4. Control points: 20. Surface points: 3404.; Writing a Paraview file of the FFD boxes. ----------------- FFD technique (parametric -> cartesian) ---------------; Checking FFD box dimension.; Checking FFD box intersections with the solid surfaces.; SU2 is fixing user's input planes.; Update cartesian coord | FFD box: BOX. Max Diff: 0.00246933.; Writing a Paraview file of the FFD boxes. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; Computing volumes of the grid elements.; Min. volume: 1.15412e-13, max. volume: 7.81947e-08.; Min. distance: 5e-07, max. distance: 0.0061806. # FGMRES residual history; # Residual tolerance target = 1e-14; # Initial residual norm = 9.32748e+06; 0 1; 10 4.70151e-07; 20 1.0396e-07; 30 9.99835e-08; 40 9.99358e-08; 50 9.94837e-08; 60 9.79571e-08; 70 9.48291e-08; 80 9.26963e-08; 90 9.25628e-08; 100 9.2495e-08; 110 9.13192e-08; 120 8.82461e-08; 130 8.5977e-08; 140 8.55573e-08; 150 8.55348e-08; 160 8.52077e-08; 170 8.32895e-08; 180 8.13964e-08; 190 8.10219e-08; ...; ```. Any suggestions on which settings may help the solver to converge?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879#issuecomment-1377077729:232,Perform,Performing,232,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879#issuecomment-1377077729,2,['Perform'],['Performing']
Performance,Good to see the results. It will really help with schemes having inconsistent discretization for the implicit part. . One of the interesting thing (slide 3) is allowable CFL change with change in number of cores. ; What could be the possible reason behind that?. (edit - could it be the performance of preconditioner with change in number of partitions (size of individual partioned domain). Like LU-SGS alone will do best on single grid and things become poorer and stall with increasing number of partitions with standard parallel implementation. So basically quality of initial solution feeding to krylov solver every iteration is making this difference. ; May be... Just a thought) . Regards; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-502204535:287,perform,performance,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-502204535,1,['perform'],['performance']
Performance,"Got my first glasses half a year into Fortran… and never looked back. From: Pedro Gomes <notifications@github.com>; Sent: 28 January 2021 11:13; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Structural stress penalty function for optimization, fix some CConfig problems (#1176). @pcarruscag commented on this pull request. ________________________________. In Common/src/grid_movement/CSurfaceMovement.cpp<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>:. > - Omega = (config->GetRotation_Rate(3)/config->GetOmega_Ref());. + Omega = config->GetRotation_Rate(2)/config->GetOmega_Ref();. As blind an any programmer, we should have XYZ enums. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1176#discussion_r566010726>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AATH4JKAAEAXKNHHCUGOQT3S4FBB7ANCNFSM4WOZ6DBA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365:301,optimiz,optimization,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176#issuecomment-769213365,1,['optimiz'],['optimization']
Performance,"Great progress, thanks @clarkpede !. As for your notes, some thoughts:; - I think you are already doing this but just in case... manually specifying the info at each node can be made a little easier by automatically generating the files for the first time if they don't exist at runtime. We had code that would do this for the grid motion case, and perhaps you can reuse it to generate inlet profile files with the correct global ID and dummy free-stream state to save the trouble of finding the global IDs by hand (that is what we wanted to avoid as well). Then you can at least use excel or another text editor to swap out the data.; - I wouldn't worry about interpolation to start. This can be added later.; - MG is a little tough, but I think we should be able to do a mapping down to the coarse levels in a similar way that we do the restarts in the volume mesh. Can you please check the code in LoadRestart() in solver_direct_mean.cpp where we restrict the solution down onto the coarse levels?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-342353441:901,Load,LoadRestart,901,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-342353441,1,['Load'],['LoadRestart']
Performance,"HI ~ . Recently, I read a some paper [[DOI:10.1017/aer.2020.93](https://www.proquest.com/intermediateredirectforezproxy)]. The main topic of the above paper is considering the TKE term in the RANS equation for supersonic and hypersonic. ; In the paper, the original RANS equation is: ; ![image](https://user-images.githubusercontent.com/50565314/234077533-a521a533-5230-4fcf-b77e-16fbb909570e.png). The paper said CFL3D and VULCAN codes ignored every TKE term, and ; “Since different authors treated the k terms in different ways, sometimes it is difficult to obtain a uniform evaluation from different papers for the same turbulence models on the performance of supersonic and hypersonic turbulent flow predictions.”; So, the paper classified 3 types of RANS equations (C1, C2, and C3) like below:; ![image](https://user-images.githubusercontent.com/50565314/234077599-1ca42027-ce87-4d7b-b5a0-055453acced8.png). The paper’s result about k-w SST ; Mach 5 flat plate : ; ; ![image](https://user-images.githubusercontent.com/50565314/234078582-ed57291b-0dfb-4c67-be32-e8d44c9a8914.png); ![image](https://user-images.githubusercontent.com/50565314/234078598-6bfee0e1-d4ce-4876-90eb-971e97190a95.png). Mach 2.25 impinging shock :; ; ![image](https://user-images.githubusercontent.com/50565314/234078666-df0f96f7-68b1-4e73-95e3-ce7ddb26c1c4.png). Mach 8.18 impinging shock :; ; ![image](https://user-images.githubusercontent.com/50565314/234078679-b83a1e88-def1-48a3-be79-4400ba415868.png). Mach 2.9 compression corner :; ; ![image](https://user-images.githubusercontent.com/50565314/234078700-c4dd7444-2149-4ad7-997d-869a5bebb1ee.png). Mach 7.05 compression corner :; ; ![image](https://user-images.githubusercontent.com/50565314/234078733-00042db1-28c7-43c2-b4a6-30de08e86f2d.png). It looks like the attached boundary layer region(like a flat plate) is almost the same, while the separation region(impinging shock and compression corner) shows slightly different results. The results indicate that C1 is ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1520613703:648,perform,performance,648,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1520613703,1,['perform'],['performance']
Performance,"Harichand, Giulio, Edwin, and all,. I would definitely prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:588,perform,performance,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,1,['perform'],['performance']
Performance,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:271,optimiz,optimizations,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890,1,['optimiz'],['optimizations']
Performance,Have you tried one of the optimization tutorials?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714#issuecomment-1186758772:26,optimiz,optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714#issuecomment-1186758772,1,['optimiz'],['optimization']
Performance,"Have you tried the suggested python 3.7 on CFD online?; As a side note, your compiler version does not do one specific optimization that the finite volume solvers rely on (icpc 19.0.1 onward does).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042#issuecomment-657121387:119,optimiz,optimization,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042#issuecomment-657121387,1,['optimiz'],['optimization']
Performance,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:191,perform,performance,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,"['bottleneck', 'latency', 'perform']","['bottleneck', 'latency', 'performance']"
Performance,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:100,perform,performing,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541,2,['perform'],['performing']
Performance,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:36,perform,performed,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,2,['perform'],['performed']
Performance,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017:461,perform,performed,461,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017,4,"['optimiz', 'perform']","['optimization', 'perform', 'performed']"
Performance,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:98,optimiz,optimization,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,4,['optimiz'],"['optimization', 'optimizer']"
Performance,"Hello and thanks for doing great work for this software!. I don't know for sure, but it seems the Optimal Shape Design of a Transonic Airfoil tutorial has a typo?:. 2. Execute the shape optimization script by entering `$ python shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line. where it should be(?):. 2. Execute the shape optimization script by entering `$ shape_optimization.py -f inv_NACA0012_basic.cfg' at the command line.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/418:186,optimiz,optimization,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/418,2,['optimiz'],['optimization']
Performance,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:187,perform,performed,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['perform'],['performed']
Performance,"Hello guys,. Currently, I am optimizing an 2D airfoil in an incompressible flow, using a 2D FFD box. First I searched for help at the CFD-online.com website; https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. However, people recommend me to get help from the developers group. In short the optimizer process returns to initial shape after a couple of new designs. The first design is quite deformed, however not as much as expected. However in the line search process the shape is deforming back to the initial shape and the optimizer stops succesfully. For input files/ adjoint files/ deformation files, I would like to refer you to : https://www.cfd-online.com/Forums/su2-shape-design/180783-question-about-constraints-objective-function.html. I would appriciate any help;)!. Thanks in advance,. Floris",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/370:29,optimiz,optimizing,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/370,3,['optimiz'],"['optimizer', 'optimizing']"
Performance,"Hello guys,. I would like to inform you that I was able to run an incompressible optimization case successfully (for drag, lift and efficiency), by changing RESTART_FLOW to ""YES"", reducing the objective scale and increasing the scaling of DEFINITION_DV. For that reason this issue can be closed. I would like to thank you again for helping me and giving me new insights of SU2 and optimization. Kind regards,. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-321828967:81,optimiz,optimization,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-321828967,2,['optimiz'],['optimization']
Performance,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:48,optimiz,optimize,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,4,['optimiz'],"['optimization', 'optimize']"
Performance,"Hello!. I have a simple question about the Riemann type for the boundary condition. I would use the type ""TOTAL_SUPERSONIC_INFLOW"" for the MARKER_RIEMANN but the warning ""Invalid Riemann input!"" comes out. I have controlled in the SU2/Common/include/option_structure.hpp and this option is present. How could I do to use it?. this is the boundary defined:; `; MARKER_RIEMANN= (stage1_inflow, TOTAL_SUPERSONIC_INFLOW , 101325.0, 288.15, 400.0, 0.0, 0.0)`. and this is the error:. ```; ------------------------------ Begin Solver -----------------------------. Simulation Run using the Multizone Driver. Setting translational grid velocities.; Non-dim. translational velocity: (0, 296.633, 0).; WARNING: SU2 was not compiled for an AVX-capable architecture. Performance could be better,; see https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#compiler-optimizations. Error in ""virtual void CEulerSolver::BC_TurboRiemann(CGeometry*, CSolver**, CNumerics*, CNumerics*, CConfig*, short unsigned int)"": ; -------------------------------------------------------------------------; Invalid Riemann input!; ------------------------------ Error Exit -------------------------------; ```. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2305:756,Perform,Performance,756,https://su2code.github.io,https://github.com/su2code/SU2/issues/2305,2,"['Perform', 'optimiz']","['Performance', 'optimizations']"
Performance,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395:26,optimiz,optimizing,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/395,5,['optimiz'],"['optimized', 'optimizer', 'optimizing']"
Performance,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:866,load,load,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,2,['load'],['load']
Performance,"Hello, ; ; I am trying to run SU2 in parallel on a cluster using SLURM. But when I submit my shell script there are two possible errors. ; I used the turb ONERAM6 example from the tutorials. 1. When I run ""srun parallel_computation.py -n 128 -f turb_ONERAM6.cfg"" I get the following error: FileNotFoundError: [Errno 2] No such file or directory: 'config_CFD.cfg_tmp'; I addition to that the file config_CFD.cfg which SU2 creates, appears but is completely empty. . 2. When I run ""parallel_computation.py -n 128 -f turb_ONERAM6.cfg"" SU2 just runs 128 times and I get multiple outputs. . I can't include my whole shell script which I use to execute SU2, but here are the important parts: . #!/bin/bash; #SBATCH --nodes=2; #SBATCH --ntasks-per-node=64; #SBATCH --ntasks-per-core=1; #SBATCH --time=01:00:00 ; #SBATCH --output=[..]/Output-%j.out ; #SBATCH --error=[..]/Error-%j.err. module load su2; module load py-numpy/1.23.4; module load openmpi/4.1.5. export PATH=[...]/bin:$PATH; export SU2_RUN=[...]/bin; export PYTHONPATH=$SU2_RUN:$PYTHONPATH. srun parallel_computation.py -n 128 -f turb_ONERAM6.cfg. I already tried to find a solution to my problem everywhere, but I just don't understand it completely. Thanks in advance; Ole",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2247:885,load,load,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/2247,3,['load'],['load']
Performance,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1459:44,perform,perform,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459,3,['perform'],"['perform', 'performing']"
Performance,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:1739,Load,Loaded,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,2,['Load'],['Loaded']
Performance,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289:245,perform,perform,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289,1,['perform'],['perform']
Performance,"Hello,; I'm using SU2 for DOE sampling right now. My current process is to change the values of the relevant variables in FFD, then use the `SU2_DEF` module to deform the mesh, it will output the mesh. Then I use `SU2_CFD` read mesh to calculate. My question is, is it possible to deform the mesh without exporting the mesh (keep it in the computer memory) and then use `SU2_CFD` directly to perform the calculation, eliminating the need to export and read the mesh. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2254:392,perform,perform,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/2254,1,['perform'],['perform']
Performance,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/163:173,optimiz,optimization,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/163,1,['optimiz'],['optimization']
Performance,"Here are some numbers regarding the performance. I used an unsteady 3D case with 83425 points. I took the extreme case of calling the output routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:36,perform,performance,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,2,"['Perform', 'perform']","['Performance', 'performance']"
Performance,Here it is:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; ```. ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/openblas.pc ; libdir=/usr/lib; includedir=/usr/include; openblas_config= USE_64BITINT= DYNAMIC_ARCH=1 DYNAMIC_OLDER= NO_CBLAS= NO_LAPACK= NO_LAPACKE= NO_AFFINITY=1 USE_OPENMP= HASWELL MAX_THREADS=64; version=0.3.8; extralib=-lm -lpthread -lgfortran -lm -lpthread -lgfortran; Name: openblas; Description: OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version; Version: ${version}; URL: https://github.com/xianyi/OpenBLAS; Libs: -L${libdir} -lopenblas; Libs.private: ${extralib}; Cflags: -I${includedir}; slimshady@arch-linux-hp-probook-g3-450: ~$ ; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631992356:399,optimiz,optimized,399,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631992356,2,['optimiz'],['optimized']
Performance,"Hey Paul! Sorry to hear this is an issue for you. ~180 mio cells is quite large... any chance you can recreate on something much smaller? If you roll back some commits, does it work again? If you can find the exact commit, that would be helpful. On a smaller case, you might check whether the time averaged data is being written as you expect to the restart file by using an ASCII file and viewing it (add RESTART_ASCII to your OUTPUT_FILES). It is just a normal CSV. Might give you some clues. . If the number of columns in the restart is incorrect, or not what you expect, then I am guessing the loading of the restart is to blame and some quantities are not getting initialized correctly. That is done in CEulerSolver::LoadRestart() for the compressible code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620258270:598,load,loading,598,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620258270,2,"['Load', 'load']","['LoadRestart', 'loading']"
Performance,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:196,perform,performance,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,3,['perform'],['performance']
Performance,"Hey everyone,. I have been taking a deep dive into the shape optimization features in SU2 and have resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:61,optimiz,optimization,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['Optimiz', 'optimiz']","['Optimization', 'optimization']"
Performance,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:18,perform,performing,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['perform'],['performing']
Performance,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1212,tune,tune,1212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629,1,['tune'],['tune']
Performance,"Hi @MaxSagebaum,. The two options in your second step sound very interesting and I guess are the only way to get good performance for arithmetic intensive operations, like the ones in the DG solver. If I understand correctly option 1 is something that could be tried already, by applying the external function mechanism to the gemm and gemv functions (akin to what is done now for large linear systems) right? The only downside would be the creation of temporary matrices of passivedouble required to call the blas functions.; With option 2 maybe these temporaries would not be required? As there would be an active matrix class whose internal data structures would be passive matrices that could interface with blas directly?. I guess the important question is: For performance sensitive applications, do you see merit in developing something in house that could better leverage the new AD tool, or will it be able to handle ""any"" object oriented library we might adopt?. Thanks and regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463181396:118,perform,performance,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463181396,2,['perform'],['performance']
Performance,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:237,load,load,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,2,['load'],['load']
Performance,"Hi @aeroamit ; I have encountered that problem before (in previous releases) using the Venkatakrishnan-Wang limiter for high Mach number cases. Had similar experience like yours, where Van Albada performed better. I think theoretically the Venkatakrishnan-Wang limiter should be better and this is why, to my opinion, it is the default option. Van Albada is a good reliable old work horse, also in other codes. Still, we might have some problem in the implementation of the Venkatakrishnan-Wang limiter,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/917#issuecomment-603787485:196,perform,performed,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-603787485,1,['perform'],['performed']
Performance,"Hi @gmandrews: we have been working hard on issues related to the partitioning / memory, and we have a branch that is under testing and nearly complete. Can you please try your case with the branch here, when you have a moment, to see if the performance is any better?. https://github.com/su2code/SU2/tree/fix_partitioning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479#issuecomment-347944502:242,perform,performance,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/479#issuecomment-347944502,1,['perform'],['performance']
Performance,"Hi @jschuele thanks a lot for your contribution to SU2. Would you be so kind to update this branch and give us an estimate of the performance improvement that the changes are introducing. . @economon, @talbring we need to carefully look at them, they seems reasonable but... maybe to specific. Is it worth it the lost of generality? some numbers would help a lot!. In my opinion the line 230 is not a bug... we need to divide by the total number of points, not the number of points in a particular core of the MPI decomposition. But I'll double check that. What do you think?. Thanks a lot,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-320490984:130,perform,performance,130,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-320490984,1,['perform'],['performance']
Performance,"Hi @jschuele, definitively a 10% or 15% improvement in performance is totally worth it. Be sure that we we'll approve the changes and the work is not going to be wasted. . Thanks again for your contribution! I'm going to add some comments to the source code to be sure that we understand why the performance improvement. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-322069750:55,perform,performance,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-322069750,2,['perform'],['performance']
Performance,"Hi @pcarruscag ,. Sorry for the late response. . I went through all your implementation and performed some tests. . Although, I didn't see an improvement using the accurate jacobians in the subsonic test cases, as already mentioned here, and even in the transonic OneraM6 case from the repo. This implementation is very clean and in my opinion is a great improvement. . I hope that in other cases, the use of accurate jacobian will have a positive effect in the convergence. The only thing that I would like to bring is that in the future, you open a PR from su2 repo instead from your personal account. It is easier for the reviewers to compile and test. I will wait Travis pass to merge this PR. Thanks again. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511142563:92,perform,performed,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511142563,1,['perform'],['performed']
Performance,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:64,perform,perform,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837,2,['perform'],['perform']
Performance,"Hi @pcarruscag and @vdweide ,. Thanks for creating a test branch and for bringing this discussion. When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2. ; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. ; I will be happy to help test Eigen and see if it is a good candidate. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460479862:451,perform,performance,451,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460479862,2,['perform'],['performance']
Performance,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:586,load,load,586,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779,2,['load'],['load']
Performance,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:627,perform,performance,627,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,2,['perform'],['performance']
Performance,"Hi @pcarruscag, thanks for the quick response. . There are still several possible memory reductions on the FEA solver by moving stuff to the vertices. Even though over-allocating would probably be fine for the structural solver as problems remain relatively small, I am replicating this structure for the mesh solver on the fluid side, and in there we should be careful not to add tons of doubles that are only necessary at the boundaries to the whole variable structure. I might also need a similar thing in the flow solver, e.g., to store boundary loads for the adjoint solver. I believe that relying on some ordering would be quite complex and require a lot of reworking of the code, everything in the solvers links directly to the point index, which gets renumbered at the beginning. So forcing the vertex nodes to go on to the initial positions doesn't seem like an easy one. And, as you say, maybe if we flag the nodes (as boundary or interior) we end up pretty much at the starting point. Possibly, the best alternative would be to replicate the structure in CGeometry in CSolver, therefore adding some CVertexVariable parent class and child for the different solvers. There are other boundary magnitudes that could be interesting to store as well. It would require some work, but given that there is a direct correspondence iMarker+iVertex -> iPoint, I would expect that to be the least invasive approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508090169:550,load,loads,550,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508090169,1,['load'],['loads']
Performance,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:138,perform,performance,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,4,['perform'],['performance']
Performance,"Hi @rsanfer,; I was afraid you were going to say that...; On the subject of memory savings, and taking the specific case of CFEAVariable, the class is 304 bytes before it allocates data, once data is allocated for a plain nonlinear 3D problem the effective size is 704 bytes, looking at the constructors, for such a problem we allocate 22 doubles or 176 bytes. So effectively 75% of the memory (equivalent to 66 doubles) is wasted.; It is important to note that this ""efficiency"" figure does not get much better even when this class allocates all it members (for which one needs fsi + adjoint + unsteady). This happens because operator `new []` needs to store the size of the allocation together with the data for when `delete []` is called so you get ""pointer + size + data"" rounded to a multiple of 16B because of the default alignment.; Therefore my opinion is that we can ""over allocate"" and still save memory, unless you need massive amounts of data for the boundary points(?)... But looking at CFEABoundVariable I don't think that is the case.; If we want to be optimum in terms of performance and memory usage, we would need to mimic the CGeometry strategy in CSolver.; If we do not want to mimic that structure we need to either be able to rely on some ordering of the special cases, e.g. boundary variables stored first, so that at runtime:; ```; double* Get(int iNode) {; if (iNode < nBoundary); return &special[iNode];; else; return &normal[iNode-nBoundary];; }; ```; If we cannot rely on some order we would need to tag nodes ""special"" or ""normal"" and then use some form of map for special cases... All this would cost a lot of indirection.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508082019:1088,perform,performance,1088,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508082019,1,['perform'],['performance']
Performance,"Hi @sun5k,. I think that the restart of the solution is missing. Since for CTransLMSolver you have inherited the functions from CTurbSolver class, the restart is only applied to the turbulent solver. I solved this problem by creating another class called CTransSolver which is a copy of the CTurbSolver class but with a modified LoadRestart function. I guess that the function in the CTurbSolver class can be modified to take into account the transition solver. It depends if we want to divide the transition from the turbulence solver or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246:329,Load,LoadRestart,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246,1,['Load'],['LoadRestart']
Performance,"Hi @vdweide,. Thank you for testing this out.; I had a look at the code and I think the overhead may be partly due to the multiplication function being compiled in one library and used in another. Which leaves little chance for some boiler plate code in the Eigen::Map class to be optimized way. If you share the test case and it fits in 16GB of ram I am happy to hack a bit and try to get those 10%.; As for Eigen beating MKL, like I said I never thought that would be the case, but out of curiosity what is the typical size of the matrices in the DG solver?. Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462083402:281,optimiz,optimized,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462083402,1,['optimiz'],['optimized']
Performance,"Hi Andrei,. for the optimization you have to convert the mesh to .su2 first. You can do that for example by just running SU2_DEF with DV_KIND set to FFD_SETTING. This will create a mesh_out.su2 (which is the default if MESH_OUT_FILENAME is not set). Afterwards change MESH_FILENAME and MESH_FORMAT accordingly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/270#issuecomment-212912758:20,optimiz,optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/270#issuecomment-212912758,1,['optimiz'],['optimization']
Performance,"Hi Antonio, thanks for the review! . Precisely, the point of this PR is to ease generalization of multi-zone, multi-instance problems. For this reason, I am currently working on a branch putting together a CMultizoneDriver, which should be generic enough to accommodate problems involving complex multiphysics. The situation is now that there are a lot of hard-coded constraints, in order for specific features to work. FSI is an example itself; it requires a very strict way of setting up the problem. The same happens with other features such as Multizone HB. While this is ok for showcasing the features, I don't think it's a sustainable approach. For example, if we were to do Turbomachinery FSI, with the current structure it wouldn't be feasible. It would require a ""CTurbomachineryFSIDriver"" class, and more hard coded assumptions. My goal is to get rid of these bottlenecks, by leveraging on the class structure of SU2. Of course, this will require work, but I think it will pay off in the long run. This PR is just a starting point: SU2_DEF, SU2_DOT, etc, will need to be updated accordingly in next stages, together with other changes that are also necessary in the optimization framework and the core code to get rid of a lot of hacks here and there. I will reply to your specific questions separately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392047648:870,bottleneck,bottlenecks,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392047648,2,"['bottleneck', 'optimiz']","['bottlenecks', 'optimization']"
Performance,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:414,tune,tuned,414,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,1,['tune'],['tuned']
Performance,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:162,optimiz,optimization,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,10,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Hi Eduardo,. As I wrote #657 here my bits (thanks @economon to notify me about this issue):; The top wall, which is the symmetry wall in your case, is not a straight line (i.e. line in 2D or plane in 3D) but has a bump in it. Therefore I would say the symmetry BC is inappropriate for that geometry/mesh. ; Implementation-wise the BC_sym routine in develop assumes (but not checks) a constant unit normal over all boundary elements in a symmetry marker and I would say that this a necessary condition for a symmetry-marker. . To cite a comment from @economon from that PR #657 . > As we should always have a plane for this BC type, is this [tangent vector computation to the unit normal, Editors note] something you can check outside the loop, or complete as a preprocessing and store? Looks a little expensive to perform at every vertex during runtime. Because of that preprocessed computation/storage of the unit normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](ht",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:814,perform,perform,814,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['perform'],['perform']
Performance,"Hi Floris,. Can you clarify whether you are using the continuous or discrete adjoint?. One thing that I am noticing in your results above is the large difference in magnitude between the compressible and incompressible sensitivities on the surface, which could require very different scaling later when that info is sent to the optimizer... . I would recommend running the discrete adjoint to get sensitivities for lift/drag w.r.t. the same set of design variables for both the compressible and incompressible solvers and comparing the result (with a nearly incompressible flow so the conditions are basically the same). This way, you can remove the scaling for optimization that is part of the shape_optimization.py script and focus only on the gradient results first. You could use the discrete_adjoint.py script for this. Hope this helps,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316295088:328,optimiz,optimizer,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316295088,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"Hi Floris,. the optimizer does not receive any information on the flow itself. The only information it gets are the objective function and the gradient. The optimizer is typically halving the dv_value if there was no sufficient decrease using the current step size for example if the initial scaling of the objective function was too large. So first of all try to reduce that factor (the number in OPT_OBJECTIVE). You probably need a different value for different regimes and Reynolds numbers as the magnitude of the gradient might be also different then. If that does not help then I think that the reason for the behavior you describe is probably the accuracy of the gradient. Can you have a look at the convergence of the adjoint problem in all of the cases ? Otherwise you can also try the discrete adjoint (discrete_adjoint.py or -g DISCRETE_ADJOINT for shape_optimization.py). Best,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-314993835:16,optimiz,optimizer,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-314993835,2,['optimiz'],['optimizer']
Performance,"Hi Heather,. This is a very interesting contribution. Just one question, Does multi objective include multi point optimization? Could you please give us an example of the particular application that you have in mind? . Thanks,; Francisco. > On Feb 9, 2016, at 11:24 AM, Heather Kline notifications@github.com wrote:; > ; > This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:114,optimiz,optimization,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['optimiz'],['optimization']
Performance,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:279,optimiz,optimized,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,3,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"Hi Josef,. This is an important issue that we need to solve, I going to double check; the problem and I'll keep you posted. Thanks for your interest in SU2,; Best,; Francisco. On Mon, Dec 19, 2016 at 5:44 AM, jschuele <notifications@github.com> wrote:. > Fetched developed branch and ran serial_regression.py. Got case FAILED; > with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; > With INTEL compiler on same platform get passed for ls89_sa,; > centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are; > the differences for naca0012_def and most of the brick-tests with intel.; > They converge in significant fewer steps and are marked FAILED.; > Is it worthwhile to investigate the differences between GCC and Intel for; > the brick-cases?; > I'am asking, because I'm gone look to fasten calculations up with; > optimizations in the existing code for single core and perhaps MPI. Far; > goal, but really far, may be using GPUs as well. Currently I have a 15%; > improvement single core for RANS from the Comp&Fluids_129 paper. But of; > course the calculations should not only be faster but correct as well.; > Regards, Josef; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/347>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AEpklloul4VIZDvBs74KUwxxmcGMoBWDks5rJopSgaJpZM4LQvRv>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-270770408:844,optimiz,optimizations,844,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-270770408,1,['optimiz'],['optimizations']
Performance,"Hi Josef: glad to see you getting involved!. I am very interested in this. We have seen differing behavior sometimes between the two compiler sets, in particular when high levels of optimization are being used. In fact, you might check if the same issues appear without compiler optimization. Often, it is an initialization problem or some optimization that affects correctness. If you have the time to explore different settings and perhaps dig into the code a bit, I would very much like to isolate and remove these compiler-dependent problems with your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-268111434:182,optimiz,optimization,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-268111434,3,['optimiz'],['optimization']
Performance,"Hi Pedro, ; As discussed last week, I now translate and rotate the whole aircraft in the elastic mesh in combination with a farfield onflow. Implementing and doing the coordinate transformations right took me a few hours, but now everything seems to work properly and fast :). 1. Currently, activating the gust resets/overwrites the grid velocities due to the deformed mesh, but I haven't found the place yet. Any ideas?. 2. Should I clean up / remove the split velocity approach as described in the first post or would you like to keep it?. 4. How to handle the new approach, should I close this pull request and open a new one? There are a few commits which I needed to undo. 5. Generally, I still need the rotating frame approach for steady maneuver load cases, e.g. to calculate the pitching, rolling or yawing aircraft in a steady simulation. The acceleration terms are zero in this case, but I understood that the Coriolis-Term with omega x velocity is missing. Is that correct? I guess they are probably important for objects like a propeller which spins at a couple of thousand RPMs but maybe it is justified to neglect them for slow objects?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240:753,load,load,753,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240,2,['load'],['load']
Performance,"Hi Tim,. In collaboration with the Energy Centre Netherlands (ECN) we are interested in participating in the development of a pressure-based incompressible solver. The applications we have in mind are all related to wind turbines, for which compressible solvers perform relatively poorly. We realize that OpenFOAM is very much capable of carrying out such simulations, but the motivation for developing this in SU2 is indeed the availability of the (discrete) adjoint. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-326904729:262,perform,perform,262,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-326904729,1,['perform'],['perform']
Performance,"Hi all, hi @rsanfer,. I get a segfault when running SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:424,Load,LoadRestart,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,2,['Load'],['LoadRestart']
Performance,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['optimiz'],['optimization']
Performance,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1006,perform,performed,1006,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,2,['perform'],['performed']
Performance,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/337:20,optimiz,optimizing,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/337,3,['optimiz'],"['optimization', 'optimizer', 'optimizing']"
Performance,"Hi, ; I'm new to CFD and SU2. I would like to ask if its possible to perform an axisymmetric flow simulation? I cannot find AXISYMMETRIC tag in the config_template, so I'm wondering if that option still exists. . Thanks for reply",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/404:69,perform,perform,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/404,1,['perform'],['perform']
Performance,"Hi, I'm in trouble with the shape_optimization.py. I'm following the instructions of the tutorial for unsteady shape optimization for naca0012 but got an error:. ```; Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:117,optimiz,optimization,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Hi, I'm trying to run SU2 in parallel but an error with the mpi always keeps showing. [hcogollo@localhost QuickStart]$ SU2_CFD inv_NACA0012.cfg ; SU2_CFD: error while loading shared libraries: libmpi.so.40: cannot open shared object file: No such file or directory. Does anyone know how to fix it? thanks a lot.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/968:167,load,loading,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/968,1,['load'],['loading']
Performance,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208:34,perform,performed,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/208,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:24,optimiz,optimization,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,1,['optimiz'],['optimization']
Performance,"Hi,. I want to use SU2 to do adjoint optimization on a geometry that is accelerating. I haven't been able to find anything about implementing time varying inlet BC's, and I was wondering if this is a feature in SU2/what would be the best way for me to implement this. Thanks!; Dean",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690:37,optimiz,optimization,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/690,1,['optimiz'],['optimization']
Performance,"Hi,. I've been trying to build SU2 with its Python bindings, but have sadly been unable to link the targets `SU2_PY/pySU2/_pysu2.so` and `SU2_PY/pySU2/_pysu2ad.so`. I have attempted the compilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:498,optimiz,optimization,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,1,['optimiz'],['optimization']
Performance,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:218,optimiz,optimization,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:411,Optimiz,Optimization,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['Optimiz'],['Optimization']
Performance,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:45,Load,LoadRestart,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['Load'],['LoadRestart']
Performance,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:346,optimiz,optimization,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Hi,; I want to processes a multipoint optimization with constraints. The problem I encountered is that, if I set the geometry based constraint is given to OPT_CONSTRAINT(e.g. OPT_CONSTRAINT=( AIRFOIL_THICKNESS>0)*0.001 like onepoint problem ), the error will occur as below. ; Traceback (most recent call last):; File ""/home/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", lin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:38,optimiz,optimization,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:21,optimiz,optimize,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,2,"['load', 'optimiz']","['loading', 'optimize']"
Performance,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632352572:669,optimiz,optimizations,669,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572,1,['optimiz'],['optimizations']
Performance,"Hi; Kind of strange that Travis tests failed. Modifications were performed only in the script; compute_polar.py and the pull request was set following git pull from develop branch.; Could it be that there is a problem with the online develop branch?; How can I check what caused Travis to fail?; Thanks,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376225263:65,perform,performed,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376225263,1,['perform'],['performed']
Performance,"Hmm.. I'm a bit surprised by this, since in the latest versions of the code, the memory required during partitioning does not exceed the memory required during the solve. Are you using the latest version of SU2? We've been working on even more memory optimization lately in the fix_periodic branch, if you'd like to give that a try. I am more concerned with the error you are receiving from the CGNS reader though, and think something funny might be happening there. Can you please share more info on the error?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-231554898:251,optimiz,optimization,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-231554898,1,['optimiz'],['optimization']
Performance,How to check the optimization objective is minimize OPT_OBJECTIVE,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:17,optimiz,optimization,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['optimiz'],['optimization']
Performance,How to load su2 in vs?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1572:7,load,load,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1572,1,['load'],['load']
Performance,Hybrid Parallel (AD): Fix Race Conditions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:26,Race Condition,Race Conditions,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,1,['Race Condition'],['Race Conditions']
Performance,Hybrid Parallel AD Performance Improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:19,Perform,Performance,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['Perform'],['Performance']
Performance,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:896,Load,LoadSurfaceData,896,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618,2,['Load'],"['LoadSurfaceData', 'LoadVolumeData']"
Performance,"I added the value of the global (real) number of elements before the partitioning. I needed this for GlobalToLocal vectors and load of information from file. @economon, can you double check it's all fine with this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/338#issuecomment-264241439:127,load,load,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/338#issuecomment-264241439,1,['load'],['load']
Performance,"I agree that this should be fixed, and as you have identified it is a problem separate from the FSI problem so you're doing the right thing (as far as my opinion goes) in terms of making this pull request. ; And you've definitely identified an important problem. . Considering that the deconstructers are used within SetVolume_Deformation() in the current develop branch, it seems like (part of) the problem is that that deconstructor is not doing what we thought it would. Aka, although C++ compilers will allow you to use LinsysSol.~CSysVector(), it may not be actually doing what it looks like - and based on your observations it seems like ~CSysVector() is not being called at all. A destructor like ~CSysVector() is more conventionally called by using a 'delete'. This may change the way that the initialize function is used for that object as well, by replacing it with 'new'. Replacing the current method of initializing/destructing that class with a new/delete pair should not change performance, and if anything improve it due to calling the destructor, since it looks like the constructor and the 'Initialize' methods are currently identical. Did you test via a cout or another way to see if the code within ~CSysVector() was called?. Having the delete within the SetVolume_Deformation() will free up memory during the rest of the calculation, as otherwise that memory will not be freed until the CVolumetricMovement class is deleted at the end of execution (or when something like delete [] grid_movement_container happens). But there may also be advantages to keeping it within the CVolumetricMovement constructor/destructor definition. Anyone else have a thought on this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-147892835:992,perform,performance,992,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-147892835,1,['perform'],['performance']
Performance,"I agree with both of you, that OBJECTIVE_FUNCTION should be a bit more descriptive. ; Following the format of other adjoint options (CONV_NUM_METHOD_ADJFLOW, LIMIT_ADJFLOW), how about OBJFUNC_ADJFLOW or FUNCTIONAL_ADJFLOW? . Regarding the format of OPT_OBJECTIVE, what I have working in another branch (which I have been sitting on pending figuring out these types of issues and more testing) is a format like:; OPT_OBJECTIVE = DRAG*0.1; LIFT*2.0; COMBINE_OBJECTIVE = YES; Where the associated adjoint settings are:; OBJECTIVE_FUNCTION = DRAG, LIFT; OBJECTIVE_WEIGHT = 0.1, -2.0. The effect of COMBINE_OBJECTIVE is a flag to switch between treating the objectives separately (each objective and its gradient is evaluated separately and the python scripts loop sequentially over the objectives, or if this option is 'YES' then a 'COMBO' value is output to the history file and the gradient is computed all-at-once (I can explain that more offline if necessary)). At the moment this only works for linear combinations of existing objectives, so the sample objective Francisco listed would be beyond that. . What do you think of this as an option structure for minimizing 0.1*DRAG-2.0*LIFT:; OPT_OBJECTIVE = COMBINATION; ...; OBJFUNC_ADJFLOW = COMBINATION; ..; COMBO_OBJDEF = DRAG, LIFT; COMBO_OBJWEIGHT = 0.1, -2.0; Where this would still be compatible with looping over sequential objectives in the shape optimization (that is really just a fairly small update to the python, and has some benefits depending on how many constraints you have), and both the adjoint and optimization would refer to OBJDEF if 'COMBINATION' is set as the objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187280368:1404,optimiz,optimization,1404,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187280368,2,['optimiz'],['optimization']
Performance,"I agree with the final conclusion here... thanks for discussing this and working toward a solution. . We have found in some of our performance optimization work that continuously allocating/deallocating memory is a performance killer, and I am in favor of uniform behavior across the code for readability/usability. Let's merge this in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-149771091:131,perform,performance,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-149771091,6,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"I also found out the hard way that `TOTAL_HEATFLUX` was dimensional, but one additional thing to consider here is that if I call `CDriverBase::GetMarkerNormalHeatFlux` in a Python-wrapped code then I think this PR would cause the returned heat flux to be nondimensional, which can be a nuisance if using it for CHT while running in nondimensional mode. If for FSI, `CDriverBase::GetMarkerFlowLoad` is the dimensional flow load, then this PR would also be inconsistent with that; but if that function returns nondim. loads then this update makes much more sense (I am not sure if it's nondim or not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658:422,load,load,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658,2,['load'],"['load', 'loads']"
Performance,"I also use Arch Linux, so I can experiment with the blas/openblas stuff a bit. I usually just use the standard blas and lapack packages in arch, and don't have any issues. I know that openblas replaces blas, but i'm not sure of its interaction with lapack. How much of a performance increase does openblas typically provide over blas? . Anyway, @aditya12398 , for now it looks like you and @pcarruscag have found a work-around! Cheers!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632168739:271,perform,performance,271,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632168739,1,['perform'],['performance']
Performance,"I always fix one point, so the optimizer doesn't take the geometry for a walk.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628729111:31,optimiz,optimizer,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628729111,1,['optimiz'],['optimizer']
Performance,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:105,optimiz,optimization,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354,2,['optimiz'],['optimization']
Performance,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:147,load,loading,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,1,['load'],['loading']
Performance,"I am currently tweaking settings to try to get the optimization to continue further; my goal is to get this done today, so I will update this pull request if that is successful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362#issuecomment-273270203:51,optimiz,optimization,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/362#issuecomment-273270203,1,['optimiz'],['optimization']
Performance,"I am exploring the use of SU2's adjoint capability for solving an inverse problem. I wish to know if it is possible to use this to optimize a spatially varying parameter (e.g., spatially varying viscosity). I have measured values of the velocity field in the flow domain, and below is the process I wish to follow for the inference.; 1. Guess viscosity values at grid points.; 2. Run a RANS solution; 3. Compare the RANS velocity field with the measured field; 4. Use loss function = (u_rans-u_measure)^2; 5. Use adjoint optimization to get the updated viscosity field; 6. Repeat 1-5 until convergence (Loss<set_threshold)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1623:131,optimiz,optimize,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1623,2,['optimiz'],"['optimization', 'optimize']"
Performance,"I am having some trouble in getting the Fixed CL mode to work properly with the new Output structure and SingleZoneDriver was wondering if anyone had some advice. . The way the fixed Cl mode works is that it first converges the solution to the target CL that is set in the config options. After that, it increases the `AOA` by 0.001 and runs for `ITER_DCL_DALPHA` iterations to determine the gradient `dCL_dAlpha`. This is essentially a finite differencing step to calculate gradients such as dCD_dCL so that it can be added to the objective function if the discrete adjoint is run in the fixed_cl mode. Currently, both the fixed cl convergence and the finite differencing occurs within the one call of `CFluidIteration::Solve` . This PR just changes how the fixed_CL mode converges to the `TARGET_CL` value and doesn't change anything about how the finite differencing step is performed. . My issue is to do with how to output the correct solution (the state before the finite differencing step) at the end of the simulation. Both the fixed cl convergence and the finite differencing occur within the one call of `CFluidIteration::Solve`. But the final solution output is controlled by the `CSinglezoneDriver::Output`. But by the time this is called the solution is at the state after the finite difference step has been taken and the CL is no longer matched. . The proper way to do it in this new output structure/SingleZoneDriver format would be to run the fixed CL mode to convergence using the SingleZoneDriver (including doing all the outputs from the `CSinglezoneDriver::Output` and then running the finite difference after that. But that wouldn't be possible without putting the if (fixed_cl) statement in either the SingleZoneDriver or in SU2_CFD, both of which are much higher level, and shouldn't have a problem specific if statement. The other way to do it would be to force the output structure to write the solution files before the finite differencing step (within the CFluidIteration) ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539148332:878,perform,performed,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539148332,1,['perform'],['performed']
Performance,I am not familiar with cygwin but maybe you compiling with debug options (-g) ? What optimization level are you using?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519503808:85,optimiz,optimization,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519503808,1,['optimiz'],['optimization']
Performance,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:353,optimiz,optimizer,353,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,2,['optimiz'],['optimizer']
Performance,"I am trying to run again the SWBLI V&V case on the SU2 page. However, as it is provided, it does not work with the SU2 standard boundary conditions. In particular, it always diverges due to NaN residuals in the X-Momentum equation. However, when I use the BCs from the NASA TMR page it works just fine (although only the v2003m model). . Here are the results of the computations performed. . Three configs are used:; 1 - With dimensionless limits $k_{lim} = 10^{-20}$ and $w_{lim} = 10^{-10}$.; 2 - Without dimensionless limiters.; 3 - With dimensionless limits $k_{lim} = 10^{-30}$ and $w_{lim} = 10^{-20}$. I am reporting the Skin Friction Coefficient on the lower wall against the Experimental results and the trend of the residual for $\rho$ during the simulations. Five different meshes have been considered. ![ComparisonNewBCsResiduals](https://github.com/user-attachments/assets/d84d7a23-e173-449a-9968-8d8d49b6000f). ![ComparisonNewBCsSFC](https://github.com/user-attachments/assets/243c55c6-e9c7-4335-b889-67244fa81e6b). The solutions are pretty much identical for the same mesh level, but the cases with the config 3 achieved convergence across all of the meshes. It is interesting how, on finer meshes, the use of dimensionless limits (config 1) actually had worst convergence than the one with std limits (config 2) (up until the finest mesh, where config 2 diverges). I am going to try to perform the simulations also with the non m variants of the SST model and the full production term. It may require some work since all of the occurrences of the ""ComputeStressTensor"" have to be changed. Ideally I think that it should be computed only once and then used that value for all of the other instances. I will focus only on the V2003 model for now as it is the only one that does not diverge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2325316937:379,perform,performed,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2325316937,2,['perform'],"['perform', 'performed']"
Performance,"I am using SU2 version 3.2.8 on a Linux workstation.; I am trying to optimize an NACA0012 for Euler flow Test_cases/Optimization_euler/steady_naca0012).; The code diverged after 115 call to functions. I am including the output.; If I am trying to read the error, it seems there is an issue with slsqp that; is provided by Python. If this is the cases, what Scipy version of Python would you recommend?. python shape_optimization.py -f inv_NACA0012_adv.cfg -r 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:69,optimiz,optimize,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,2,"['Optimiz', 'optimiz']","['Optimization', 'optimize']"
Performance,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:943,perform,performance,943,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['perform'],['performance']
Performance,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904437:343,perform,performance,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437,1,['perform'],['performance']
Performance,"I build mine for parallel with OpenMP and then use the environment variable; OMP_NUM_THREADS. On Mon, 10 Feb 2020, 14:41 cesss, <notifications@github.com> wrote:. > *Is your feature request related to a problem? Please describe.*; > I'm going to build SU2 with PaStiX, which requires BLAS built in serial; > mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX.; >; > However, SU2 also makes use of BLAS... but... what kind of build for; > OpenBLAS, sequential or parallel?; >; > It's not a subtle thing, because things can go wrong (or lose a lot of; > performance) if it's built in a way different to what SU2 expects.; >; > *Describe the solution you'd like*; > Just mention it in the build instructions where you mention that OpenBLAS; > can be used by SU2.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/869?email_source=notifications&email_token=AJCOXN5ODRHEGDIWPFF6YITRCFRS3A5CNFSM4KSPLSO2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMIWASA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN7HGYWRNCWPPNOLHKTRCFRS3ANCNFSM4KSPLSOQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/869#issuecomment-584254305:573,perform,performance,573,https://su2code.github.io,https://github.com/su2code/SU2/issues/869#issuecomment-584254305,1,['perform'],['performance']
Performance,I can submit a PR later this week addressing this issue. I've done shape optimization with inlet profiles before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-623585831:73,optimiz,optimization,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-623585831,1,['optimiz'],['optimization']
Performance,"I can totally see your point. Unfortunately there are no other ways. However, these are only minor performance tweaks. Maybe I will just add this inside the CNumerics::GetInviscidProjJac, since one should not expect a lot of modifications there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201#issuecomment-150165444:99,perform,performance,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/201#issuecomment-150165444,1,['perform'],['performance']
Performance,"I could create a ""safe Allgatherv"" function, e.g. in [`mpi_structure.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/parallelization/mpi_structure.hpp) or in [`ndflattener.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp). This function should check the number of processes, perform a simple copy if it is 1, and otherwise calls the regular Allgatherv. It would then be used [here](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp#L235) instead of `SU2_MPI::Allgatherv`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031:400,perform,perform,400,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031,2,['perform'],['perform']
Performance,"I could not follow the work here; I just watched the conference presentation. As much work has been done, have you considered using an existing linear algebra library such as https://github.com/ginkgo-project/ginkgo?. AFAIK the only thing you need to do is copy the matrix to Gingko format on GPU. Then Gingko will provide an efficient, scalable solver that works not only on NVIDIA but also on AMD and Intel. . GMRES and ILU preconditioners are available there, so it is pretty much ready to go for all problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775:337,scalab,scalable,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775,1,['scalab'],['scalable']
Performance,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:1058,perform,performance,1058,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,1,['perform'],['performance']
Performance,"I did few tests (CGNS mesh format), following are the details -; **While trying to use all 8 cores per node (Total 70 nodes, each having 24 GB RAM)-**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; ............ malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; ................; malloc failed for element data; malloc failed for element data; Loading section Connect_TETRA of element type Tetrahedron. **While trying 6 cores in each node**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data. **Finally settled with 4 cores at each node and memory usage at every node is--** . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 4652 aero 30 10 872m 746m 10m R 100 3.1 43:03.38 SU2_CFD ; 4653 aero 30 10 1076m 951m 10m R 100 3.9 43:12.10 SU2_CFD ; 4654 aero 30 10 1162m 1.0g 10m R 100 4.3 43:15.15 SU2_CFD ; 4655 aero 30 10 1458m 1.3g 10m R 100 5.5 43:08.96 SU2_CFD . **With above, memory usage seems to be around 16.8 % of 24 GB RAM**. Hope I am not missing something else (some other usage etc...) and what should be the approximate memory requirement for such mesh sizes (around 60 million or is there a general guideline of memory requirement with mesh size for RANS computation with Implicit solver) ?. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-232018195:152,Load,Loading,152,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-232018195,3,['Load'],['Loading']
Performance,"I did run the viscous ONERA M6 case. The speed up with the default config was marginal (2-3%). I also tried with multigrid enabled, in which case the MKL version was 10% faster. Overall the bottlenecks for the rans case were different than the inviscid onera case. I'll look at what can be done here next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-416955089:190,bottleneck,bottlenecks,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-416955089,1,['bottleneck'],['bottlenecks']
Performance,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:153,perform,performance,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,2,"['perform', 'scalab']","['performance', 'scalability']"
Performance,"I do not have a good grasp on the performance of each scheme. I fear that may be a much time-intensive task, particularly since these all are implicit at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1381003988:34,perform,performance,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1381003988,1,['perform'],['performance']
Performance,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:638,perform,performance,638,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,1,['perform'],['performance']
Performance,"I don't see a real problem here. Efficiency is always maximized so in the python scripts the objective function is scaled by -1.0. That's why the optimizer output gives you negative values. Note that the optimizer always minimizes the objective function (therefore we need the scaling)!. I am closing this, but if you have any questions regarding this, please reopen this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395#issuecomment-308408287:146,optimiz,optimizer,146,https://su2code.github.io,https://github.com/su2code/SU2/issues/395#issuecomment-308408287,2,['optimiz'],['optimizer']
Performance,"I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035:484,perform,perform,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035,1,['perform'],['perform']
Performance,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:727,Load,Loaded,727,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Load'],['Loaded']
Performance,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-560572616:703,perform,performance,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616,2,['perform'],['performance']
Performance,"I have not used ninja and meson in the past for building. As such, I should mention that there is a difference between the mpi implentations on the Cent7 (normal) and Cent8 (requires load) machines. On the Cent8 machines, the mpi implementation does require a load command prior to compilation; none of the other codes I work with have an issue with running post-compile (or they state that it is a missing file, not a seg fault). I'll check on library names etc to ensure nothing conflicts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623656920:183,load,load,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623656920,2,['load'],['load']
Performance,"I have same problem. In cluster, I can run normal analysis (not optimization) without any issue. When I try to run optimization on nodes of HPC, it gives same error at random stage. For example sometimes at DNS2 Defrom or DSN1 adjoint. [error.txt](https://github.com/su2code/SU2/files/12063848/error.txt). Could you suggest any solution?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666#issuecomment-1637055845:64,optimiz,optimization,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666#issuecomment-1637055845,2,['optimiz'],['optimization']
Performance,"I have same problem. In cluster, I can run normal analysis (not optimization) without any issue. When I try to run optimization on nodes of HPC, it gives same error at random stage. For example sometimes at DNS2 Defrom or DSN1 adjoint. [error.txt](https://github.com/su2code/SU2/files/12063848/error.txt). Could you suggest any solution?. _Originally posted by @mardar572 in https://github.com/su2code/SU2/issues/1666#issuecomment-1637055845_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2082:64,optimiz,optimization,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/2082,2,['optimiz'],['optimization']
Performance,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626404968:42,optimiz,optimization,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968,3,['optimiz'],['optimization']
Performance,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:558,load,load,558,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,1,['load'],['load']
Performance,"I know that it can be frustrating sometimes operating within the constraints of an open-source project such as ours. However, I can assure you that folks do indeed care about performance, and sometimes I have the impression that we stress over relatively small performance issues (remember to keep the total pie chart of where the major work of the solver resides in mind). . The option WRT_PERFORMANCE= YES is available to get timings for runs broken down by preprocessing, compute, and output phases, and I think we should focus our performance concerns first on issues within the compute phase, unless a major bottleneck appears in the other two phases that completely prohibits us from running larger cases (we have been clearing many of those out lately). We do not have the resources of a professional software company, but what we do have is a great community of folks who are putting in lots of effort on a volunteer basis. @pcarruscag: your reviews have been very helpful for improving contributions - thank you for that effort. Let's keep supporting each other, but let's also make sure we stay positive and foster a welcoming environment to encourage more participation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534682406:175,perform,performance,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534682406,8,"['bottleneck', 'perform']","['bottleneck', 'performance']"
Performance,"I know this is wicked late, but I have just recently been doing a lot of shape optimization and finally can answer some questions on it. Is this still an issue?. Usually when the optimizer exits with that error, it means the DIRECT run diverged, or something of that sort.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559#issuecomment-513077626:79,optimiz,optimization,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/559#issuecomment-513077626,2,['optimiz'],"['optimization', 'optimizer']"
Performance,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:44,optimiz,optimization,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['optimiz'],['optimization']
Performance,"I noticed that the output phase values for WRT_PERFORMANCE= YES are currently off due to the number of output phases not being correctly tracked (we call the SetResultsFiles in the Iteration class most of the time, and the one in the driver with the timing only at the end of the run). @talbring, did you already have something in mind for this? Otherwise, I can think of a cleaner way to handle those performance benchmarks. I think it would be good to start printing that information by default too potentially. A good place might be within the MPI structure, since it is accessible everywhere and we can also hide the timer ifdefs for MPI.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-543913612:402,perform,performance,402,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-543913612,1,['perform'],['performance']
Performance,"I noticed you mentioned that it is a multiblock structured mesh. SU2 expects a single block format, unless explicitly setting up a multi zone problem, so there's an outside chance it's only loading part of the mesh. I would expect that to throw some kind of error, but it's worth checking.; This could explain the wrong z projection, but to check you can plot the output volume solution to see if your mesh is loaded appropriately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388545925:190,load,loading,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388545925,2,['load'],"['loaded', 'loading']"
Performance,"I observed that sometimes only the product of the stress tensor with a vector is of interest, e.g.:. CNumerics::ComputeStressTensor(nDim, Tau, ...); for (iDim = 0; iDim < nDim; iDim++) {; for (jDim = 0 ; jDim < nDim; jDim++) {; someforce[iDim] += Tau[iDim][jDim]*Normal[jDim];; }; }; // never use Tau again. Do you think it is reasonable to have another function, which takes `someforce` and `Normal` instead of `Tau` as an argument and performs the addition? This would save from allocating `Tau` and going through two pairs of nested `for` loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743131314:437,perform,performs,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743131314,1,['perform'],['performs']
Performance,"I rolled back and had a look at the case again, it turned out to be issue with input given in one of the reference (I followed). I have changed the inputs from original reference and repeated the run (find the attached pdf [SU2_hflux_issue.pdf] https://github.com/su2code/SU2/files/5685357/SU2_hflux_issue.pdf); ) with finer grid. I also ran the case with alternate code. Pressure distribution match is good b/w the two but some differences are still there in heat flux distribution. The important thing is that I could not obtain a low dissipation 2nd order solution (perhaps this is common issue with such cases). I iterated to higher E fix value and Venkat limiter coeff =0.01 to make it work (got some in between order of accuracy). Seems like there will be requirement of some knobs to tune the numerical dissipation for hypersonic cases to avoid carbuncle/instabilities.; I am closing it for now, as primary issue is sorted but perhaps new additions/improvements will be required. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256:791,tune,tune,791,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256,1,['tune'],['tune']
Performance,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:359,perform,performance,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,1,['perform'],['performance']
Performance,"I see, I do not know what is the quickest way to invert a 5x5 matrix, most robust would probably be LU with pivoting (for which we have the code in the RBF class). Since that relates to how we handle small dense matrices I would say it relates to #643 so it would be good if the community got to a conclusion there.; In any case I want this PR to be only about templating, I can do that kind of cleanup when I:; - Try to activave the MKL optimizations for the discrete adjoint.; - Move the row/col elimination tasks from the structural solver and mesh deformation to CSysMatrix (as you suggested in #658).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485102720:438,optimiz,optimizations,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485102720,1,['optimiz'],['optimizations']
Performance,I should add that I was running a 2D case. SU2_CFD fails in the second optimizer iteration in the setup of the periodic boundaries due to wrong information in the new mesh file.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210#issuecomment-153779802:71,optimiz,optimizer,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/210#issuecomment-153779802,1,['optimiz'],['optimizer']
Performance,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566654480:383,perform,performance,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480,1,['perform'],['performance']
Performance,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:1654,perform,perform,1654,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['perform'],['perform']
Performance,"I think in LoadSurfaceElements the SendRecv markers do not exist yet.; unsigned short is what we use most for marker. Local to global should be an array or vector, global to local should be an unordered map, exactly as done for the point and element maps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762153763:11,Load,LoadSurfaceElements,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762153763,1,['Load'],['LoadSurfaceElements']
Performance,I think it would be super useful to change some (or all) of the TestCases to include the suggested settings that you have outlined in this PR. Most users wouldn't know how to get the best performance out of the code otherwise.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-540057251:188,perform,performance,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-540057251,1,['perform'],['performance']
Performance,"I think its a good idea to separate the weight from the objective function. This makes it more clear and flexible. However, what bothers me a little bit is that the OBJECTIVE_FUNCTION option is now used for two things. Namely for the optimization and for the individual adjoint runs. Maybe it would be good to still have another option for specifying the obj. function for the adjoint run itself (with a completely different name, so that there won't be any confusions). . Maybe it's less of a problem then I think, though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185126081:234,optimiz,optimization,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185126081,2,['optimiz'],['optimization']
Performance,"I think no more changes are needed. All of the test cases remain the same since probably the Rotation correction wasn't used. The only major corrections are the following:; - CRot now is set to 2.0 as in TMR; - The computation of $\hat{S}$ is performed before the the Rotation correction is applied, not after.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369:243,perform,performed,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369,1,['perform'],['performed']
Performance,"I think that defining these regions in separate files would be better. It would keep the mesh format intact and allow users to change the regions without regenerating the mesh.; We could also use the regions to define volumetric source terms.; 1) Config option to provide the file with regions; 2) Preprocess the regions in each mpi rank to define them as lists of local indices (based on the global indices that are owned by the rank).; 3) Extend the custom outputs to perform volume integrals and averages (not too different from the surface averages we already have), this would directly allow the volume averages to be used in optimizations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396263229:470,perform,perform,470,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396263229,2,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"I think that is what is happening, the logic to use either MACH_MOTION or the farfield velocity as the reference is in CEulerSolver::SetReferenceValues, I think if you have fluid load markers we will assume FSI and not use MACH_MOTION. Give this a try and if it fixes the issue we need more robust logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745:179,load,load,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745,1,['load'],['load']
Performance,"I think the issue is looping jSpan between 0 and nSpanDonor-1, I think it should be looped between 1 and nSpanDonor-2 (as is done in the higher level of the for loop) as the hub and shroud are handled seperately and there is no interpolation performed here. Admittedly, this is probably the area of the turbomachinery code I am most unfamiliar with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034492128:242,perform,performed,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034492128,1,['perform'],['performed']
Performance,"I thought about tackling this but I will most likely also switch to FADO for these kinds of things for multizone (shape optimization, finite differences). ; Afaik there is a `pull` array which keeps track of all files that need to be copied, it might also be enough to add that to the `state` in `shaep_optimization.py`. Not to discourage you but I doubt that it will work with just that addition tbh. But you are more then welcome to give it a shot and see how it goes :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-835825080:120,optimiz,optimization,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835825080,1,['optimiz'],['optimization']
Performance,I tried again and the problem still persist. I test the NACA64A010 euler optimization with V4.3.0. ; I attached the Log for adjoint calculation. same thing happened on all of the unsteady cases. there would be some problems with gradient projection code; [log_Adjoint(DRAG).pdf](https://github.com/su2code/SU2/files/517609/log_Adjoint.DRAG.pdf),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-252417783:73,optimiz,optimization,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-252417783,1,['optimiz'],['optimization']
Performance,"I tried running the shape optimization tutorial 1: Unconstrained shape design of a transonic inviscid airfoil at a cte. AoA using the given cfg and mesh file. But it seems the process only goes for 4 steps and stop. No matter I use python2 or python3, it is the same. What could cause the problem here? Thank you very much!. when using python2:. ```; NIT FC OBJFUN GNORM; 1 1 2.946447E-08 6.646259E-06; 2 3 2.927194E-08 5.513828E-06; 3 4 2.037004E-08 4.516896E-06; 4 6 1.769283E-08 5.893302E-06; Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:26,optimiz,optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],"['optimization', 'optimize']"
Performance,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:79,optimiz,optimization,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,4,['optimiz'],"['optimization', 'optimizations']"
Performance,I was having several other issues with optimization in v7. I have downgraded to v6 where none of these issues are there. I will not need a resolution for this at the moment. Thanks! @stephansmit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-645074820:39,optimiz,optimization,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-645074820,1,['optimiz'],['optimization']
Performance,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:827,perform,performed,827,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,2,['perform'],['performed']
Performance,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:597,perform,performance,597,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,1,['perform'],['performance']
Performance,"I'll have the summary at the bottom, you guys read papers you know to look for the conclusions.; ## Global speedup (Conclusions); I took the expected speedups for each prototyped area of the code and applied them to the profile I measured for the benchmark case from #716 / #753 (which is not very linear solver intensive).; It is hard to estimate the effect of fusing the convective and viscous edge loops, I assumed the cheaper of the two becomes ""free"" and the other gets a speedup of 1.5 (speedup should be 1.85 accounting for the matrix update optimizations).; I assumed that gradients and limiters are not fused and that minor areas of the code get no speedup, which is not necessarily true as this work would require contiguous storage of geometric properties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition wit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:549,optimiz,optimizations,549,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['optimiz'],['optimizations']
Performance,"I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91, are you still working on this? Did PR #672 introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [\[1\]](https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html) [\[2\]](https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html). I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502780046:606,perform,perform,606,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502780046,1,['perform'],['perform']
Performance,"I'm sorry to interject on this issue with what is probably a useless comment, but I wanted to ask if this issue affects you also in 1st order simulations?. In my experience MUSCL reconstruction at boundaries in SU2 is ""incorrect"" as it doesn't take into account the boundary condition applied and just assumed ```v_i = v_j```, as far as I have understood from scouring the code. This usually is a small first order approximation locally, but with complex EoS or unlucky combinations of BCs and numerical settings it can cause unphysical solutions and crashes. In a project of mine I have had some success by either disabling MUSCL outright at boundaries (very conservative and brutal solution), or disable it only at specific kinds of corners, which requires more memory unfortunately as one needs to somehow save if the node is a corner, etc. The ""real solution"" would be to either save the boundary solution in ghost nodes and use it for the gradient computation, or fix gradients in post-process with a small performance penalty.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2107217617:1012,perform,performance,1012,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2107217617,1,['perform'],['performance']
Performance,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627498661:57,optimiz,optimization,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661,1,['optimiz'],['optimization']
Performance,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:525,load,load,525,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213,1,['load'],['load']
Performance,"I've run into some headaches getting the optimization to run efficiently on my end, which is why I ask. Playing with a toy problem, SLSQP actually does a great job on its own (with all tuning parameters set to 1.0) if the following conditions are met:. + The constraints and bounds effectively bound ""reasonable"" solutions, so you don't have to worry about unrealistic deformations.; + The optimization function is (relatively) convex. If those conditions are met, then playing with any of the tuning parameters makes SLSQP converge more slowly, sometimes with 10x the iterations. So its not clear to me when the tuning parameters are necessary, and how those tuning parameters affect the convergence in those cases. I'm not arguing that the tuning parameters aren't necessary, just that their effects aren't clear. And I agree, the proper way to nondimensionalize and regularize these problems is not clear from a brief search of the literature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616825497:41,optimiz,optimization,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616825497,4,['optimiz'],['optimization']
Performance,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:416,load,loads,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['load'],['loads']
Performance,"If ""default"" blas is just the compiled reference implementation then the difference is massive, because it will not be optimized code. As for lapack it should not matter so much, to my knowledge the lapack functions we use are built on top of blas so good blas -> good lapack.; But of course the question is whether this is even needed, I think only the DG solver and RBF interpolation use blas.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632175752:119,optimiz,optimized,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632175752,1,['optimiz'],['optimized']
Performance,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:398,optimiz,optimization,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['optimiz'],['optimization']
Performance,"If it ever becomes a bottleneck for my objectives with SU2, I will pitch it and work on it. Until then I have to develop and consolidate high level functionality.; I do not think anyone mentioned this in Glasgow so it is probably not an issue for anyone, it is just one of those nice things to have in place when you start writing code...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434001240:21,bottleneck,bottleneck,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434001240,1,['bottleneck'],['bottleneck']
Performance,If the optimization problem has geometrical constraints and the section GEOMETRY EVALUATION PARAMETERS is incomplete SU2 (shape_optimization) will work but the result is going to be wrong.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/104:7,optimiz,optimization,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/104,1,['optimiz'],['optimization']
Performance,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/349:19,optimiz,optimization,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/349,1,['optimiz'],['optimization']
Performance,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/293:753,optimiz,optimization,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/293,1,['optimiz'],['optimization']
Performance,Improve parallel preacc performance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2092:24,perform,performance,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/2092,1,['perform'],['performance']
Performance,Improve partitioning load balance for hybrid grids and add advanced ParMETIS controls,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059:21,load,load,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059,1,['load'],['load']
Performance,Improvements for Topology Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:26,Optimiz,Optimization,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['Optimiz'],['Optimization']
Performance,"In `CVolumetricMovement::SetBoundaryDisplacements` the periodic boundaries are left free, and so there is no guarantee that periodicity will be preserved. I don't use the optimization framework, but the default formulation is usually to minimize, i.e. you use a negative weight if you want to maximize, have you tried not setting the weight to -1?. If you want to perturb a single parameter you change one of the values in DV_VALUE. Attach your config...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626400442:171,optimiz,optimization,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626400442,1,['optimiz'],['optimization']
Performance,"In my case I need to build like this:; ```; export CC=mpicc.mpich; export CXX=mpicxx.mpich; export CXXFLAGS=""-march=native -funroll-loops -ffast-math -fno-finite-math-only"". ./meson.py build --optimization=2 --warnlevel=3 -Denable-tests=true --prefix=$PWD/build -Dcustom-mpi=true -Dwith-omp=true; ./ninja -C build install; ```; Maybe building with OpenMP makes a difference.; The unit test output is; ```; ../UnitTests/Common/toolboxes/ndflattener_tests.cpp:78: FAILED:; REQUIRE( nd3[r][0][0] == 0.7 ); with expansion:; 2.0 == 0.7; ```; valgrind does not pick up anything on the unit test, only on the new test case added in #1892 ; The expected output is as shown in hybrid_regression.py (note that the testcases branch is not develop).; When the UB manifests the residuals are not the expected (by varying orders of magnitude depending on the spurious value of wall roughness).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650:193,optimiz,optimization,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650,1,['optimiz'],['optimization']
Performance,"In principle sounds good, it will probably break lots of cases, optimization scripts and what not. We'll see, we are not leaving this inconsistent though, all or nothing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2079#issuecomment-1631861372:64,optimiz,optimization,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/2079#issuecomment-1631861372,1,['optimiz'],['optimization']
Performance,"In reply to:; > What is the subroutine ""FinishResidualCalc"" is it a new name to call ""ComputeResidual"" if that is the case, for consistency with the rest of the code we should probably use ""ComputeResidual"". I would have liked to have named it the way you suggested. But unfortunately, it's not possible. There's two reasons for this: one is more philosophical, the other is due to a programming restriction. 1. The real residual calculation is a larger method in the parent class (i.e. `CAvgGrad_Abstract::ComputeResidual`). The method currently called `FinishResidualCalc` is just a step in that larger process.; 2. Since the real residual calculation is in the parent class, we need to be able to call it from derived classes (i.e. `CAvgGrad_TurbSA::ComputeResidual`). If we also name a separate method in the derived class `ComputeResidual`, then that method now overrides the method in the parent class. Instead of performing the whole calculation, callers would only get the final step in the calculation. I'm not fixed on the name. Honestly, I picked it somewhat arbitrarily. I just know that ""ComputeResidual"" isn't an option. What do you suggest as a better name?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422#issuecomment-320694792:920,perform,performing,920,https://su2code.github.io,https://github.com/su2code/SU2/pull/422#issuecomment-320694792,1,['perform'],['performing']
Performance,"In short, it means that the particular objective that you are requesting is not available in the python framework at this time. You can run. ```; $ SU2_CFD your_config.cfg -d; ```. to see the list of possible outputs that can be used as objectives for your particular problem currently. There are some objectives that have not been moved to the new output structure yet (but they are coming). In the meantime, you can add new custom history outputs for the flow solver (see CFlowCompOutput.cpp for instance) and then use them for objectives during shape optimization (you will likely need to run updateHistoryMap.py to register the new outputs with python).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-602776476:554,optimiz,optimization,554,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-602776476,1,['optimiz'],['optimization']
Performance,"In the lab we are also writing/rewriting another largish solver with eigen (https://ic-sharpy.rtfd.io/). A major advantage (and, I think, critical for open source) was code readability to ease the learning curve for newcomers, with no reported penalty on performance. I second all the other nice things about it written by @pcarruscag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459943384:255,perform,performance,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459943384,2,['perform'],['performance']
Performance,Increased performance of the discrete adjoint solver by using Templates for Linear Solvers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:10,perform,performance,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['perform'],['performance']
Performance,"Indeed, this helps, but it could be more general, since you only get to see this in the console output. I was thinking that a simple tag in the optimization history file for the evaluations that are 'major' would make this much simpler (and easier to post-process).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108#issuecomment-102168908:144,optimiz,optimization,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/108#issuecomment-102168908,2,['optimiz'],['optimization']
Performance,Integrate MKL option for performance improvement on Intel Architectures.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:25,perform,performance,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['perform'],['performance']
Performance,"Interesting. Well I managed to get icpc 19.04 to work last night (cluster IT problems...) and sure enough I got my 9% back. I think that is too large a difference in relative performance of a code that does not have any architecture specific tuning to attribute to 1 CPU generation. I have some ideas for vectorization + threads without complete re-writes and without readability concerns, I'll prototype them when I have time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524215699:175,perform,performance,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524215699,1,['perform'],['performance']
Performance,"It makes sense to cache because addValue does not always add a new value, only when the time iteration changes, after the first inner iteration addValue only modifies the last entry of the history.; The changes you mention sound ok, keep the switches, virtual would make everything slower and more complicated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1041285090:18,cache,cache,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1041285090,1,['cache'],['cache']
Performance,"It's not always the case that using a restart file is continuing from a simulation. For example, if one has a simulation that has a similar solution as a seed. An example would be doing optimization and using a nearby flow solution. Here, having the iteration count start from zero is useful, because it's the more accurate measure. We would also have to this about how this interfaces with MAX_ITER. Right now it's really clear, but which does it mean when iterations don't start from zero?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103239930:186,optimiz,optimization,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103239930,2,['optimiz'],['optimization']
Performance,"It's possible that you hit a bug, or the adjoint solver diverged, or... who knows, the python scripts are not very friendly at reporting errors and they are also not very flexible.; My most sincere advice is to follow what is done in this tutorial https://su2code.github.io/tutorials/Species_Transport/ it will save you time in the medium term, and at least you will know what the optimization is doing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666#issuecomment-1160907119:381,optimiz,optimization,381,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666#issuecomment-1160907119,1,['optimiz'],['optimization']
Performance,"It's running.; A small problem is that I have to change `ubuntu:19.04` to `ubuntu:18.04` and change `libopenmpi3` to `libopenmpi-dev openmpi-bin` in the definition, or it will fail.; ```; ubuntu@main-3:~/main_shared_volume/build_singularity_image/builid_image$ sudo singularity build su2_tensorforce.sif su2_tensorforce.def ; INFO: Starting build...; Getting image source signatures; Skipping fetch of repeat blob sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4; Skipping fetch of repeat blob sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550; Skipping fetch of repeat blob sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d; Skipping fetch of repeat blob sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50; Copying config sha256:993d5f573a24af19dd6006bc3e6e113bd0c709797dc48676f4f0b5ed456470cc; 2.42 KiB / 2.42 KiB [======================================================] 0s; Writing manifest to image destination; Storing signatures; singularity image-build: relocation error: /lib/x86_64-linux-gnu/libnss_files.so.2: symbol __libc_readline_unlocked version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; FATAL: While performing build: while running engine: exit status 127; ```. My OS is ubuntu 18.04, and OpenMPI version is 2.1.1. I will take a test to see the reason. Once if finishes, I will let you know. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515383478:1231,perform,performing,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515383478,1,['perform'],['performing']
Performance,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:65,perform,perform,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,2,"['Optimiz', 'perform']","['Optimization', 'perform']"
Performance,"Lately I've been playing with Ipopt, which has auto scaling, the documentation (https://coin-or.github.io/Ipopt/OPTIONS.html#OPT_NLP_Scaling) and implementation papers go into decent detail about the strategies they have.; That being said, in the optimizations I've run in the past using L-BFGS-B, I scaled the objectives, constraints, and variables to the [-1, 1] range, and things seemed to work ok, i.e. not excessively long line searches etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616830810:247,optimiz,optimizations,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616830810,1,['optimiz'],['optimizations']
Performance,"Looking at `CSurfaceMovement::SetFFDCPChange` in `Common/src/grid_movement_structure.cpp`, it looks like it would move by 0.001 in all directions. The movement vector would be [0.001, 0.001, 0.001]. . Like @pcarruscag said, we usually only move in one of the directions. If you want to move in all directions and let the optimizer control them independently, you could define multiple DVs for the same control point: . DEFINITION_DV= ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 0.0, 1.0, 0.0 ); ( 11, 1.0 | blade | FFD_BOX, 0, 0, 0, 0.0, 0.0, 1.0 ). But I would be careful when doing this. It can cause some wonky-looking deformations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-628732284:321,optimiz,optimizer,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628732284,1,['optimiz'],['optimizer']
Performance,Lower bounds of the design variables are violated by optimizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:53,optimiz,optimizer,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['optimiz'],['optimizer']
Performance,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:512,perform,performance,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,1,['perform'],['performance']
Performance,"Marker fluid load is to allow the native structural solver to receive fluid loads from python, and to extract adjoints again from python. Similarly, it allows extracting fluid loads from the flow solver via python, and its adjoints to be set, again from python.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778381964:13,load,load,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778381964,3,['load'],"['load', 'loads']"
Performance,Mesh type used in optimization and numerical simulation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:18,optimiz,optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,1,['optimiz'],['optimization']
Performance,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277:188,scalab,scalability,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277,1,['scalab'],['scalability']
Performance,More arm64 updates and fix a race condition in a test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2076:29,race condition,race condition,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2076,1,['race condition'],['race condition']
Performance,Move all restart reading from solver constructors to dedicated LoadRestart() routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:63,Load,LoadRestart,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['Load'],['LoadRestart']
Performance,Multipoint 2D Optimization Key Error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:14,Optimiz,Optimization,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['Optimiz'],['Optimization']
Performance,Multipoint Optimization not running under Windows 10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:11,Optimiz,Optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['Optimiz'],['Optimization']
Performance,Multipoint optimization for INC_RANS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:11,optimiz,optimization,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,1,['optimiz'],['optimization']
Performance,"My experience is that nice looking code and performance are two conflicting items, unfortunately. Apart from being contiguous in memory, you only obtain good performance when the vector length is a multiple of 8 or 16. This typically leads to padding the array, which does not improve readability. Furthermore, the best optimization is obtained when the vector length is known at compile time, typically leading to even uglier looking constructions,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513174037:44,perform,performance,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513174037,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,NELEM incorrect after mesh deformation during shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:52,optimiz,optimization,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,1,['optimiz'],['optimization']
Performance,"Nah, I usually put in all the control points. It doesn't increase the computation time significantly and the optimizer should be able to handle that many control points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628727533:109,optimiz,optimizer,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628727533,1,['optimiz'],['optimizer']
Performance,New CGNS Mesh Reader for improved performance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:34,perform,performance,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['perform'],['performance']
Performance,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:1263,perform,performance,1263,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,4,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:918,perform,performance,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,1,['perform'],['performance']
Performance,"No need for Intel buddies, I know what's up. Take [this code:](https://gcc.godbolt.org/z/siQamn); ```; class Base {; public:; inline virtual double get() const {return 0.0;}; };. class Derived : public Base {; double val;; public:; Derived(double a) : val(a) {}. inline double get() const final {return val;}; };. double fun1(Base* obj) {; return obj->get();; }. double fun2(Base* obj) {; return static_cast<Derived*>(obj)->get();; }; ```. `get` of derived has been marked `final` so in `fun2` polymorphism should be optimized away. Here is the assembly for gcc 5.4:. ```; fun1(Base*):; mov rax, QWORD PTR [rdi]; jmp [QWORD PTR [rax]]; fun2(Base*):; movsd xmm0, QWORD PTR [rdi+8]; ret; ```; `fun1` needs a jump, `fun2` knows what to return right away. Here is the assembly for icc 17:; ```; fun1(Base*):; mov rax, QWORD PTR [rdi] #16.12; mov rdx, QWORD PTR [rax] #16.12; jmp rdx #16.12; fun2(Base*):; mov rax, QWORD PTR [rdi] #20.34; mov rdx, QWORD PTR [rax] #20.34; jmp rdx #20.34; ```. @vdweide please tell me you did not use icc 19, because it performs this optimization just fine on this simple example. By the way @talbring (since you asked in #753), take away the `final` keyword and nothing gets optimized by the `static_cast`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523952473:517,optimiz,optimized,517,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523952473,8,"['optimiz', 'perform']","['optimization', 'optimized', 'performs']"
Performance,"Not sure if this issue is related, but I'm performing axisymmetric simulations of a convergent nozzle. Throughout most of the domain the axis values seem fine, but there is a region where density behaves quite strangely at the axis. What is seen here is the density gradient, just to make it more visible:; ![grafik](https://user-images.githubusercontent.com/42602495/152206391-755443cc-7c7e-43f1-812a-2335879027c4.png). Results obtained with SLAU2, 2nd order euler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1028187842:43,perform,performing,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1028187842,1,['perform'],['performing']
Performance,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632083173:189,load,load,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173,1,['load'],['load']
Performance,"OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I prop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1866,optimiz,optimizer,1866,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['Optimiz', 'optimiz']","['Optimization', 'optimizer']"
Performance,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:2395,Optimiz,Optimization,2395,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['Optimiz'],['Optimization']
Performance,"Of course I'll provide an example of an MLP input file, as well as a python script I wrote that translates an MLP trained through TensorFlow to such an input file. . Very well, I'll move the files from the numerics folder to the common folder and change names accordingly. The models I used so far had between 5 and 50 perceptrons and up to 15 layers. Performance is quite important, as evaluation of MLP's is generally more computationally expensive than for example lookup tables. The larger the MLP architecture, the more costly evaluations get of course. Any improvement to the computation speed will therefore be welcome. In terms of memory, the MLP's don't seem to be an issue so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1247834992:352,Perform,Performance,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1247834992,1,['Perform'],['Performance']
Performance,"Ok one issue out of the way.; After reading your first post again, it is a bit suspicious that the iteration time is ""exactly"" the same, can you post the preprocessing part of the output for:; 16 cores on one node; 16 total cores on 2 nodes (8+8); 8 cores on one node.; If b)==c) you are running identical simulations on each node (i.e. not distributing over nodes).; If a)==b) can you test the scalability with fewer cores (2 on one node Vs 1+1).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593073686:395,scalab,scalability,395,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593073686,1,['scalab'],['scalability']
Performance,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:413,perform,performance,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,4,"['concurren', 'perform']","['concurrently', 'performance']"
Performance,"Ok time to share some results after #753.; I deviated a bit from the original plan in that I skipped the contrived strategy of using a wrapper container with a special [] operator (as it had a slight whiff of hackery), and went straight to adding ""iNode"" to the methods of CVariable instead (me and a few lines of python...). The first rule of performance is **""measure it before changing code""**, I broke that rule because as my first post illustrated non contiguous storage at the scale we had is a real killer. With that out of the way, to some extent at least (the layout may not be optimum still) measuring is essential to decide what to do next. This is the case I am using:; ![case](https://user-images.githubusercontent.com/38071223/63288257-27d9d580-c2b4-11e9-9899-8b44b230b8bb.png); It is a bad wing design (NACA0012) with some sweep and taper and a home-brew mesh whose quality rivals that of the design (it converges and the flow does not separate...).; The mesh is just over 500k vertices (so it ""fits"" comfortably in my pc) the y+ is not great (obvs) but the aspect ratios are 200 and 2000 in the chordwise and spanwise directions respectively, so not exactly linear solver friendly either. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:344,perform,performance,344,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['perform'],['performance']
Performance,"Ok, I think the mesh file issue may have been due to the file system. The mesh file issue happened when I ran the simulation across three nodes on the cluster I was using. I tested on a single high memory node instead and the issue went away. It looks like problem solved! . The drag objective also seems to be working. One thing I noticed is that GNORM and OBJFUN values are not being listed in the output for each design as they were in the single point optimization. I'm not sure what that's about, but the drag values are decreasing!. Thanks again for the responses!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-609554540:456,optimiz,optimization,456,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-609554540,1,['optimiz'],['optimization']
Performance,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:150,perform,performs,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['perform'],['performs']
Performance,"Okay, all tests should be passing (except some random new codefactor issues). Main issue with the GY models hanging is disambiguating which matrix of collision integral (omega) values to use, Scalabrin's notation is a bit unclear. Are there other places we need to modify for including electrons? Anything in viscous numerics?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569:192,Scalab,Scalabrin,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569,1,['Scalab'],['Scalabrin']
Performance,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166:281,optimiz,optimization,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/166,1,['optimiz'],['optimization']
Performance,"On the subject of virtual functions I would like to put another idea forward.; After moving things around in #725 I noticed that we have tons of `inline virtual` methods.; The keyword `inline` has two meanings to the compiler:; - ""Dear merciful compiler please copy paste the body of this function and then do all your wonderful optimizations, if that pleases your excellency.""; - ""Dear forgiving compiler, you will find this method defined in multiple units, please don't be mad"" (i.e. ignore the one-definition-rule). `virtual` means determine what version of the method to call at runtime. This is not compatible with the first (and often the intended one) meaning of inline, therefore the compiler will in general not inline those methods.; They will only be inlined if they are being called on a pointer to the derived class that does not declare the method to be virtual anymore. CSolver knows what variables it creates and so in hot areas of the code it could do a static downcast to allow inlining (e.g. `static_cast<CEulerVariable*>(node[iNode])->DoStuff()`).; Where is this important? For example when computing gradients, where simple additions and subtractions are hidden behind virtual functions.; If you are worried about maintenance each solver can typedef its most safe downcast level or better yet (or just more modern), methods that could benefit from this can be templated for the type of downcast.; Those in favour say Yea those against say Nay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-509273008:329,optimiz,optimizations,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-509273008,2,['optimiz'],['optimizations']
Performance,"One of the interesting paper -. "" Comparison of numerical and Analytical Jacobians"", Kirk J. Vanden, Paul D. Orkwis; AIAA, Vol 34, No. 6, June 1996. They computed the exact analytical Jacobian with symbolic manipulation. In conclusion they are showing that both analytical and numerical Jacobians showed similar performance and suggesting that for simpler numerical fluxes, analytical Jacobians should be the best way to go and for complex numerical fluxes, numerical Jacobian can be preferable choice (but if one can work out analytical, that should be good as well, I guess (one time effort) ). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-505615012:312,perform,performance,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-505615012,2,['perform'],['performance']
Performance,"Oops, there was a typo: the SU2 version is actually 7.1.0 not 7.0.1. I'm glad you had looked into it. On high DOF counts per partition, I know they tend to be fairly similar. I only see big differences on meshes with 20M DOF on >200 partitions (i.e. where accounting for partition connectivity is more important). While having the option for different partitioners would be a nice feature, I do not know if the SU2 user-base would actually have much interest in it. The last time we tried a hybrid parallel approach our performance improvement was quite low (<10%). Thank you for your input.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-867007424:520,perform,performance,520,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867007424,1,['perform'],['performance']
Performance,Optimization improvements,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/421:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/421,1,['Optimiz'],['Optimization']
Performance,Optimization of helicopter rotor blade,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,1,['Optimiz'],['Optimization']
Performance,Optimization of wall distance computation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282:0,Optimiz,Optimization,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/282,1,['Optimiz'],['Optimization']
Performance,Optimize data structures for performance without losing readability/flexibility.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:0,Optimiz,Optimize,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['Optimiz', 'perform']","['Optimize', 'performance']"
Performance,Optimizing efficiency (bug?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395:0,Optimiz,Optimizing,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/395,1,['Optimiz'],['Optimizing']
Performance,Out of date. Quiet mode for the shape_optimization.py script (on by default) leaves us with a clean optimization history written to the console. Closing,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108#issuecomment-459230679:100,optimiz,optimization,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/108#issuecomment-459230679,1,['optimiz'],['optimization']
Performance,"Output file writing was taking long time in NFS based cluster for huge grids (40 millions case). This change fixes this issue. . End of line output is changed to **\n** from **endl**. **endl** forces a flush to the stream and hence incurs a performance penalty. For a small case with 13000 points, backup time _reduced_ from 7 seconds to 0.5 seconds after this fix.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281:241,perform,performance,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/281,1,['perform'],['performance']
Performance,"PR opening window is closed now. Thanks to all the people contributing. . Since we only have a limited amount of time to deal with all the PRs we have to be a bit structured. That means the following:. - Since we only have a limited amount of concurrent Travis jobs we might **manually cancel some jobs** in order to give precedence to PRs which have reviews and are likely to be merged once Travis passes. Please check your branch once in a while to restart the job if necessary. - If you have comments on a PR that you think **should** be addressed before merging, please block the merge by **requesting changes**. - Make use of the **WIP** feature. Especially if you think that you are not able to work on your PR in any ways for a couple of days (including addressing comments). This makes it easier for us to find an order for reviewing/merging.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762#issuecomment-525670354:243,concurren,concurrent,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/762#issuecomment-525670354,1,['concurren'],['concurrent']
Performance,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:62,optimiz,optimization,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976,2,['optimiz'],['optimization']
Performance,"Passing arrays by pointer -> don't https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-use-ptr; Variables declared at the top of the function -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-introduce; Using member variables to ""pass data"" to other methods -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ri-explicit. ""What are important implementation aspects?"" You ask -> https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#per7-design-to-enable-optimization",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628:504,optimiz,optimization,504,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218#issuecomment-789893628,1,['optimiz'],['optimization']
Performance,"Pedro,. I did a single core analysis on a Xeon Gold @2.30 GHz for the implicit solver, see below; ![SU2_Profile](https://user-images.githubusercontent.com/15017924/63409877-5067e980-c3f2-11e9-8957-0fc3ba26d69d.png); I can give more details, if needed. This is not shown in the picture, but the good news is that your feature_contiguous_cvariable_PR branch is a factor 1.25 to 1.3 faster per iteration than the current develop version. The bad news is that the far majority is still spent in scalar loops and the performance of the vectorized loops is rather poor. However, that was to be expected with the current data structures. My experience is that if you can vectorize the loops appropriately you can gain a factor of 3 to 4 compared to scalar loops (theoretically 8, but you never get that). However, that means a complete redesign of the current data structures and most likely a loss in generality and readability. If people want, we can start a discussion on this. And indeed, the inviscid flux computations are very time consuming. In the DG code I created a more hard coded version of the Roe solver and that was significantly faster (factor of 3). So also that is something to think about. Cheers,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523329065:512,perform,performance,512,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523329065,1,['perform'],['performance']
Performance,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:411,optimiz,optimization,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914,1,['optimiz'],['optimization']
Performance,Potential crash for the OpenMP multi-thread running,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1667:31,multi-thread,multi-thread,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1667,1,['multi-thread'],['multi-thread']
Performance,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956#issuecomment-620127214:22,optimiz,optimizations,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214,2,['optimiz'],"['optimizations', 'optimizes']"
Performance,"Reading Scalabrin, he says the WBE transport model breaks down at Ttr > 10,000 K, and he uses the GY model for incorporating ionization in LeMANS. So I think the roadmap to for viscous/ionized flows is:. 1. Implement GY model according to Scalabrin wth Coulomb potential for ion-ion collisions; 2. Add some flag to make sure transport model for viscous-ionized is always GY",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1382335968:8,Scalab,Scalabrin,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1382335968,2,['Scalab'],['Scalabrin']
Performance,"Recently pushed to develop branch with this.; Note: there is a LoadRestart method in the CSolver class which might reduce some repeated code, I'm not sure if there was a good reason folks had not used it in the past.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/68#issuecomment-56878160:63,Load,LoadRestart,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/68#issuecomment-56878160,1,['Load'],['LoadRestart']
Performance,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626799862:836,perform,performing,836,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862,6,"['optimiz', 'perform']","['optimization', 'performing']"
Performance,"Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1075,cache,cache,1075,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,Repeat the LM1021 optimization. Focus on the constraints and using a larger FFD box.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/64:18,optimiz,optimization,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/64,1,['optimiz'],['optimization']
Performance,Resolved by #1228 thanks @pcarruscag and thanks for the explanation. . Just one more thing. do you have an idea why I still see 100% cpu load in that case? I picture a hyperactive process running around a stoplight sign at a zebra walk 🚥 🏃 🦓 waiting for his teammates to catch up whilst not getting cold. My private machine gets hot and loud so I guess there is real computation going on there. It could relax and sit on that park bench 🪑 for a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241#issuecomment-804757081:137,load,load,137,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804757081,1,['load'],['load']
Performance,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17:106,load,load,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/17,3,['load'],"['load', 'loads']"
Performance,"Right, that is the AUSM-family refactoring done with the hybrid Jacobians, Roe approximation is still available and it is the default.; So far:; - It was not practical to do finite differences of the mass flux and pressure by perturbing the conservatives, I had to do it on the primitives which then requires an extra Jacobian... So the approach is more expensive per iteration, which could be partially offset by using vector-mode forward-AD.; - However for some cases convergence is much better for the same CFL (wedge case with CFL=25) and in others (transonic airfoil, SST, low Re mesh) it allows much higher (4x) CFL to be used, which again results in lower time overall.; - The performance penalty from the extra layers does not seem to be big, but I have to measure that in a machine that is not doing other things at the same time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-501745584:684,perform,performance,684,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-501745584,1,['perform'],['performance']
Performance,"Run SU2_CFD with `WRT_BINARY_RESTART= NO`. That will give you an ASCII `restart_flow.dat`. It will look something like this:; ```; ""PointID""	""x""	""y""	""z""	""Density""	""X-Momentum""	""Y-Momentum""	""Z-Momentum""	""Energy""	""Pressure""	""Temperature""	""C<sub>p</sub>""	""Mach""; 0	6.931794337794450e-01	1.199410270705132e+00	3.552713678800501e-15	9.247274759558524e-01	6.998395924205978e-01	6.744390123118781e-01	2.033333591408758e-01	2.825647424000119e+00	9.170095708259952e-01	9.784295110379145e-01	-1.930126447908861e-01	9.113348070779481e-01	; 1	6.906841300000011e-01	1.196300000000000e+00	0.000000000000000e+00	1.118921803269151e+00	5.021166385546235e-01	7.896289876522433e-01	2.161057381347509e-01	3.352487832836354e+00	1.176133434271568e+00	1.037113520398247e+00	3.252350821002600e-01	7.075425651590469e-01	; 2	6.924294614497271e-01	1.202091611452504e+00	1.468890958566504e-03	9.758692057411605e-01	8.423040306657703e-01	5.135454779704676e-01	2.297213358745695e-01	2.971366201327637e+00	9.782771280113181e-01	9.890989089014984e-01	-7.047753042024051e-02	8.761491078578573e-01	; ```; This answers the original question, ""How do I get SU2 to output raw ASCII data?"". You can also use the python scripting capabilities of Tecplot or Paraview (technically, VTK). You can find documentation for Tecplot's python API [here](https://www.tecplot.com/docs/pytecplot/index.html) and for VTK's python API [here](https://lorensen.github.io/VTKExamples/site/). That will allow you to use the Paraview or Tecplot files directly in python. You would use the paraview or tecplot libraries to load the data into python, then post-process it however you want. There's no need for ""manually deleting the lines for cell numbers.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461710:1564,load,load,1564,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461710,1,['load'],['load']
Performance,Running Optimization with FFD and Periodic Boundaries,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:8,Optimiz,Optimization,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['Optimiz'],['Optimization']
Performance,SU2 optimization does not work correctly with CGNS format,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/270:4,optimiz,optimization,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/270,1,['optimiz'],['optimization']
Performance,"SU2 optimization does not work correctly with CGNS format. Direct computation with CGNS format work correctly. First step of optimization is correct (DSN_001).; On second step (DSN_002) the program write the mesh_airfoil_deform.cgns.; The extension is correct, but internal format is SU2 format.; The command CONVERT_TO_SU2= YES does not work also. May be I do not know something. . Help me!. MESH_FILENAME= mesh_airfoil.cgns; MESH_FORMAT= CGNS; %CGNS_TO_SU2= YES; MESH_OUT_FILENAME= mesh_out.cgns or MESH_OUT_FILENAME= mesh_out.su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/270:4,optimiz,optimization,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/270,2,['optimiz'],['optimization']
Performance,SU2-NEMO - Optimize initialization time,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:11,Optimiz,Optimize,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,1,['Optimiz'],['Optimize']
Performance,Separate loading restart file and solution file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17:9,load,loading,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/17,1,['load'],['loading']
Performance,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:707,perform,performed,707,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['perform'],['performed']
Performance,Shape Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:6,Optimiz,Optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,Shape Optimization Issues,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:6,Optimiz,Optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['Optimiz'],['Optimization']
Performance,Shape optimization returns to initial shape after a couple of deformed shapes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/370:6,optimiz,optimization,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/370,1,['optimiz'],['optimization']
Performance,Should the objective function value move in one direction only in shape optimization?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984:72,optimiz,optimization,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/984,1,['optimiz'],['optimization']
Performance,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1389:89,optimiz,optimization,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389,1,['optimiz'],['optimization']
Performance,"Some illustrative images/output in case my description was hard to understand:; ![image](https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png). SU2_DEF output when only ""airfoil"" marker included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history; # Residual tolerance target = 4.14044e-11; # Initial residual norm = 15.8102; 0 1; 50 2.17385e-06; 100 1.08998e-10; # FGMRES final (true) residual:; # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. ![image](https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png); SU2_DEF: output when deforming with all markers included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-131578218:328,Perform,Performing,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-131578218,2,['Perform'],['Performing']
Performance,"Sorry for my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for the most part of the SU2 users community (in my opinion, external aerodynamics). If the new objective function is only useful for us, or a research project, then I think we need to create some kind of custom objective function, (e.g. CUSTOM_OBJFUNC at the same level than DRAG, LIFT, etc) that we can describe with other set of parameters. Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187255862:365,optimiz,optimization,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187255862,1,['optimiz'],['optimization']
Performance,"Sorry for taking so long to reply to this.; The old automake build system is loosely maintained, so far as I know it is currently working fine. Note that you need to specify the optimization flags manually, on gcc these work well:; export CXXFLAGS=""-O2 -funroll-loops -DNDEBUG -march=native""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037#issuecomment-661415665:178,optimiz,optimization,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037#issuecomment-661415665,1,['optimiz'],['optimization']
Performance,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:426,optimiz,optimized,426,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['optimiz'],['optimized']
Performance,"Sounds good to me. Then, I suggest we leave the comments for now, and you can come back to it when considering #643 further (or when some performance issues are considered) in a later PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485926000:138,perform,performance,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485926000,1,['perform'],['performance']
Performance,"Sounds good. I was a little concerned about carrying around unnecessary memory during fluid computations, which will be the case for FSI as well as time spectral and some other applications, but you have a good point about avoiding allocation/deallocation overhead, and since you're reducing the number of times the same variables are re-allocated without any deallocation, it'll be a performance improvement relative to the current code either way. Please replace the 'varname.~Classname' calls with 'delete varname', then I think it should be good to go (pending anyone else weighing in on this). [you probably already know this from previous pull requests, but just in case - you don't have to create a new pull request, just commit into your branch and it will update automatically]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148124339:385,perform,performance,385,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148124339,1,['perform'],['performance']
Performance,"Sounds good. Initially it would be enough to have some unit tests that would already show how to setup the network, together with documentation / example of the file format. Applications can come after. Some initial comments:; Please move the files to toolboxes/ and ideally use a namespace for the new classes.; Start the class names with C as we do, e.g. CIOMap. Then, how large are the models you've used so far? and how important is performance to this feature? (Just so I know how much to comment on that)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519:437,perform,performance,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519,1,['perform'],['performance']
Performance,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:25,optimiz,optimization,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095,4,['optimiz'],"['optimization', 'optimized']"
Performance,Sounds like a sensible fix. Please open a PR.; We should also warn or throw an error if that condition happens because the performance is not going to be good with very few nodes per thread.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1667#issuecomment-1160900707:123,perform,performance,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/1667#issuecomment-1160900707,1,['perform'],['performance']
Performance,Structural Modal Analysis (Eigenfreqencies) & Adjoint Shape Optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:60,Optimiz,Optimization,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,1,['Optimiz'],['Optimization']
Performance,"Structural stress penalty function for optimization, fix some CConfig problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:39,optimiz,optimization,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['optimiz'],['optimization']
Performance,Structural topology optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:20,optimiz,optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['optimiz'],['optimization']
Performance,"TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-itera",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1817,perform,performance,1817,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['perform'],['performance']
Performance,TOTAL_HEATFLUX keyword not working as objective function with python optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/946:69,optimiz,optimization,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/946,1,['optimiz'],['optimization']
Performance,"T_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:2201,optimiz,optimizer,2201,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,2,['optimiz'],"['optimizer', 'optimizers']"
Performance,Tag the major optimization iterations among the full set of shape design output,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108:14,optimiz,optimization,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/108,1,['optimiz'],['optimization']
Performance,"Text always moves between the images for some reason ... euler oneram6 14cores; ![sloweuler_oneram6](https://user-images.githubusercontent.com/31306376/65078336-18c27200-d99d-11e9-9d5c-5e38df4f9803.gif). euler channel 14cores; ![sloweuler_channel](https://user-images.githubusercontent.com/31306376/65078374-2a0b7e80-d99d-11e9-8860-23e48399873b.gif); Hi @pcarruscag (and everyone else of course :) ), Here some selected convergence rate comparisons with of this PR with develop. I also compared results all of those case side by side and the differences (I used contour line positions for most of it) are pretty subtle. Most of the times I double checked that I didn't load the same flow.vtk. At shocks it was a bit more visible especially close the wall but one has to really zoom in for it. Concerning lift / drag coefficient which are written on screen the difference was below 1% throughout the cases I looked at. Some cases were tested with different amount of cores with no mentionable deviance in Residuals. inc ns bend 2cores; ![incns_bend](https://user-images.githubusercontent.com/31306376/65078454-50c9b500-d99d-11e9-8be2-4ea1cb397c14.gif). inc euler nozzle 4cores; ![inceuler_nozzle](https://user-images.githubusercontent.com/31306376/65078420-3ee81200-d99d-11e9-83b3-cd8d301a5771.gif). euler wedge 14cores; ![euler_wedge](https://user-images.githubusercontent.com/31306376/65078443-49a2a700-d99d-11e9-9110-03dd278d742f.gif)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532401028:669,load,load,669,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532401028,1,['load'],['load']
Performance,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:306,perform,perform,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891,1,['perform'],['perform']
Performance,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:85,perform,perform,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039,2,['perform'],['perform']
Performance,Thank you for your quick response. I'll open a PR to fix the comment.; Do you happen to know why the default value of ADJ_SHARP_LIMITER_COEFF is set to 3? It makes surface sensitivity zero for large areas and screws up shape optimization. It took me a while to find out that this variable is the cause. I think the default value should be something that works for most users.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830#issuecomment-1328190193:225,optimiz,optimization,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830#issuecomment-1328190193,1,['optimiz'],['optimization']
Performance,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:834,race condition,race conditions,834,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,"['perform', 'race condition']","['perform', 'race conditions']"
Performance,Thanks @economon this makes a lot of sense. And if it goes ahead maybe the options DEFORM_LINEAR_SOLVER_ITER and DEFORM_LINEAR_ITER should also be fused?. This is has a smallish negative implication to FSI cases. There because the deformation is incremental it is acceptable to converge the solver to 1e-6 or only 1e-5. But in shape optimization (@cvencro and I are working on that) we would be limited by the lowest required tolerance. @rsanfer this is something to consider in the mesh deformation refactoring.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-443665804:333,optimiz,optimization,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-443665804,1,['optimiz'],['optimization']
Performance,"Thanks @economon!; I don't know what is the current situation with OpenMP and CoDi but any eventual change will have to be compatible with CoDi. The worst case would be disabling OpenMP for the discrete adjoint, the parallel clause supports an ""if"" modifier so that would not be too hard. But I hope to at least be able to lower the memory footprint by fusing some loops or make pre-accumulation more effective by using point loops.; The linear solvers will indeed become the bottleneck, they already are for JST, the good thing is matrix multiplication is easier to vectorize, not sure the best strategy will be similar though. ### Limiters. Scalar (reference) version of the code:; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. for(auto edge : connectivity); {; size_t iPoint = edge.first;; size_t jPoint = edge.second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = max(phiMax(iPoint,iVar), phi(jPoint,iVar));; phiMin(iPoint,iVar) = min(phiMin(iPoint,iVar), phi(jPoint,iVar));. phiMax(jPoint,iVar) = max(phiMax(jPoint,iVar), phi(iPoint,iVar));; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi(iPoint,iVar));; }; }. for(auto edge : connectivity); {; size_t iPoint = edge.first;; size_t jPoint = edge.second;. double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. for(size_t iVar=0; iVar<nVar; ++iVar); {; double proj_i = 0.0, proj_j = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; proj_i += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }. doubl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:476,bottleneck,bottleneck,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['bottleneck'],['bottleneck']
Performance,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:364,optimiz,optimization,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083,1,['optimiz'],['optimization']
Performance,"Thanks Edwin, the vectorized loops in the code are probably very simple array copies, hence the low efficiency? I would put money on not a single vector instruction being generated for the important stuff. I was surprised by the 1.25 to 1.3 factor you are seeing, for the exact same case I measured 1.39 (to be more precise). Initially I thought it had something to do with running single core, thus leaving vast amounts of L3 for only that core to use, so on the same 24c platform I ran 2 processes (30MB of cache for each) (very uncivilised) and the factor went down to 1.37, so cache was not the reason.; So then I thought maybe the Intel compilers are very good at optimizing polymorphism away, but the development branch compiled with icc 17 runs at exactly the same speed as when compiled with gcc 5.4. Then I compiled feature_contiguous_cvariable with icc 17 and it runs 9% slower than the gcc binaries, and so with icc 17 the speedup for this case was 1.27 errrrr... Anyone got a buddy at Intel?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523930905:509,cache,cache,509,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523930905,6,"['cache', 'optimiz']","['cache', 'optimizing']"
Performance,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):” solution… but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:317,optimiz,optimization,317,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,1,['optimiz'],['optimization']
Performance,"Thanks Max that sounds very promising indeed. To everyone else, a quick update on the issue of performance vs. MKL.; I played a bit with @vdweide 's case and it does not seem trivial to get those 10% of performance back, at least not without a lot of restructuring.; I did however measure the performance of native gemm in Eigen to be ""only"" 2.5 times worse than MKL, after some emails we determined that this was because with the Intel compiler Eigen was not using AVX instructions but with g++ those instructions could be enabled by setting the -march flag appropriately. So far the conclusions are:; - Get 0% to 10% performance loss if you are using MKL (one could always bypass Eigen and call mkl directly).; - Write clean code compatible with AD and that will perform better than most easy implementations.; - Eventually get better performance of the discrete adjoint via the more efficient differentiation of operations with matrix-like objects.; - Have an extra dependency that does not need to be compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463591821:95,perform,performance,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463591821,6,['perform'],"['perform', 'performance']"
Performance,"Thanks Pedro,. If you want I can run this test case also with the Intel performance tools. These usually give some more info what can be improved to obtain better performance. Cheers,. Edwin.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523063269:72,perform,performance,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523063269,2,['perform'],['performance']
Performance,"Thanks Suman,. My suggestion is the following… we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute … Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:68,perform,performed,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,1,['perform'],['performed']
Performance,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:322,Load,LoadRestart,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,2,['Load'],['LoadRestart']
Performance,"Thanks for all the questions on the shape optimization. It helps us make improvements to the code to make it easier to use. . You are correct in that the adjoint gradients determine the direction that the optimizer moves the design variables. But this direction can (and usually does) change during the optimization process as it explores different parts of the design space. So the design variables won't always move in the same direction. Sometimes the optimizer won't take the best step in the direction of descent. In this case, the objective function can increase. The optimizer will then try again in the same direction but with a different (usually smaller) step size. If it does achieve a reduction in the objective function, it will usually run the adjoints again to get an updated gradient direction. The objective + adjoint iterations are called major iterations and are what is output by the SLSQP algorithm. This process is more complicated when there are constraints involved. . So in summary, no it is not necessary (or likely) that the objective function will always decrease through an optimization process",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628714360:42,optimiz,optimization,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628714360,6,['optimiz'],"['optimization', 'optimizer']"
Performance,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625436086:171,load,loads,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086,2,"['load', 'optimiz']","['loads', 'optimization']"
Performance,"Thanks for putting those results together, Samet. For more comparisons, you might also check out the paper by Langtry, et al., ""Predicting 2D Airfoil and 3D Wind Turbine Rotor Performance using a Transition Model for General CFD Codes"" that contains this exact case. Another interesting paper is Potsdam, ""Unstructured Mesh CFD Aerodynamic Analysis of the NREL Phase VI Rotor."" We can also look at the surface streamlines to compare with some of the results in these papers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-260412407:176,Perform,Performance,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-260412407,1,['Perform'],['Performance']
Performance,"Thanks for rebases; A couple of notes: ; - the reference to the github issue in the comments may be confusing to others as to which part of that thread is being referenced. To make sure that future developers are aware of import issues, maybe just one line like 'recommended import format compatible with both Python 2.7 and 3', if you feel a comment really is necessary there.; - on the regressions: I know it may seem like small differences, but the fact that they are different with just changes to the python code is very concerning, and in some of the tests the differences are quite large (specifically discadj_euler_py and directidff_euler_py). If they are calling the exact same C++ executables and performing the exact same computations the result should be the same. If this is something going on behind the scenes within the python packages that cannot be avoided, we need to understand what that difference is, and where it is coming from. ; The only explanation I can think of off the top of my head for why the output could be different with only changing python code, is if some function previously imported from a different package is using single-precision instead of double-precision for some arithmetic operation or file io. If what you changed is actually providing GREATER precision that's fantastic, but we need to know for sure either way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224031436:707,perform,performing,707,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224031436,1,['perform'],['performing']
Performance,"Thanks for the additional information. > This should give a difference in sensitivity results, . Hm, I think some things should be clarified at this point because I think that it's possible that you mixed up two different step sizes:. - There is a step size that is used to **compute** the gradient when setting up finite difference quotients. That's a bit tricky, because although you are using an adjoint solution for the gradient computation, these are still used within the grid deformation. You can find it's value in the third column and since it's the same, the gradients agree. - There is the step size belonging to the optimizer which **uses** the gradient (the one Tim refers to). It is influenced by the overall scaling of the objective function and agrees with the one you put above the gradients. This scaling factor determines the amplitude of the mesh deformation. As Tim pointet out, the optimizer only 'sees' the objective function's value, its gradient and the scaling factor. It has no idea that there are some mesh deformations or aerodynamics going on in the background ;-). Therefore I find your result. > However the deviation of the sens_adjoint of incompressible is huge compare to the compressible case. most important since it explains the different behaviour of the optimizer (and it's addionally not due to different values of the objective, since your CLift- and CDrag-values agree). The remaining question is: Why are they that different? ; It could be due to distinctly different physics captured by the different PDEs (unlikely but possible), or due to (performance?) issues with the adjoint solver.; Fortunately, SU2 comes with an alternative adjoint solver (see Tims initial post how to run it) that can now help to find the reason. Regards, Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316045392:628,optimiz,optimizer,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316045392,4,"['optimiz', 'perform']","['optimizer', 'performance']"
Performance,"Thanks for the answer. If it has no benefit we can leave it like that. I was just worried that is not possible to load szplt and plt files together into tecplot. But I tried it and it works :+1: . I am happy with the change. As soon as there is further approval, we can merge it in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-426696883:114,load,load,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-426696883,1,['load'],['load']
Performance,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:71,perform,perform,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842,1,['perform'],['perform']
Performance,"Thanks for the contribution, that sounds like it might be a useful change if it improves performance.; Do you have any benchmarks for large cases (where frequent flushes may cause a larger performance penalty), or for cases on a non-NFS cluster? Aka, how long it took to write the large file you mention with or without this change?. I've seen some forum posts recommending using mostly ""\n"" for performance, with occasional ""endl"" to keep that buffer from being to large. It is recommended not to use endl too much with file i/o: ; http://demin.ws/blog/english/2012/04/25/endl-vs-new-line/. However, it looks like that file didn't have an endl at the end - so perhaps if you have the time you could test the performance change if you change just the last ""\n"" to ""endl""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223457468:89,perform,performance,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223457468,4,['perform'],['performance']
Performance,"Thanks for the detailed analysis... out of curiosity, how tightly did you converge the linear solve with each nonlinear iteration? . Lately, we have seen that the ILU preconditioner performs best, and, when solving the linear systems to a smaller tolerance, one can often use a higher CFL number. It could be interesting to look at the convergence of the linear solve for a single nonlinear iteration (at different points of the calculation) for GMRES+ILU to a near machine precision tolerance both with and without the term in the Jacobian. That might best show the impact of this term. All of that being said, I think we can add this term, as performance is the same or better, and it is technically correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358747316:182,perform,performs,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358747316,2,['perform'],"['performance', 'performs']"
Performance,"Thanks for the issue @Eduardo-Carvalho. If anyone working in an area related to unsteady optimization has a moment to take a look at this (maybe @TobiKattmann or @ScSteffen?), I'd appreciate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-603370840:89,optimiz,optimization,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-603370840,1,['optimiz'],['optimization']
Performance,"Thanks for the question Francisco - someone else actually asked me about multi-point optimization earlier today. Unfortunately that is not addressed here, but if there is some way that I can make this more compatible with future developments in that direction please do let me know. . An example of the application would be for optimization of an inlet, where you would want to simultaneously optimize for the conditions at the throat of the inlet and minimize drag on the surface. It may also be used for arbitrary linear combinations of heat flux, drag, lift, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182178391:85,optimiz,optimization,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182178391,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Thanks for the question; The RESTART_SOLUTION option determines only whether the CFD solution will restart from a provided solution file, not whether the optimizer will restart. ; To restart the optimizer process, this must be specified to the python script:; shape_optimization.py -r project.pkl -f config.cfg -n N; The options of all the python scripts can be viewed with a command like:; shape_optimization.py -h. So, to run an optimization process restarted from a previous optimization, and to have each individual simulation restart from previously converged CFD results you will need to BOTH specify RESTART_SOLUTION and the -r python option. To restart the optimizer but have each CFD simulation start from scratch, use the -r option and specify RESTART_SOLUTION=NO. . Restarting from a specified design (rather than the most recent design) is not currently provided as an option, but if you are willing to dig into things manually it may be possible via editing the project.pkl and results.pkl files. . In the future, please view our forum at http://www.cfd-online.com/Forums/su2/, you may find questions about configuration options etc that have already been answered, and a wider community will be able to respond.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/290#issuecomment-231421177:154,optimiz,optimizer,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/290#issuecomment-231421177,5,['optimiz'],"['optimization', 'optimizer']"
Performance,"Thanks for the quick review @pcarruscag. I have cleaned up a little bit. Also added a nicer table of the output. l prefer that we always compute the min/max values, at least for the FVM CFD solvers, for a few reasons. The most important reason is that we should start to build up some intuition about the correlation between mesh quality metrics and accuracy + convergence in the solvers. This can be especially important during optimization when the mesh is deforming. I think the metrics are valuable to print every time for this reason, which might help users diagnose problems eventually. Additionally, the cost is relatively small (on par with the other pre-processing routines, it is only executed once and it is parallelized, and the memory is released if we don't write).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-526456264:429,optimiz,optimization,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-526456264,2,['optimiz'],['optimization']
Performance,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:68,optimiz,optimization,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913,6,['optimiz'],['optimization']
Performance,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:408,optimiz,optimization,408,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,1,['optimiz'],['optimization']
Performance,"Thanks for the response and pointing me to the PR. I updated gcc version 9 and open mpi to version 4.02. It slightly improved speed but the behavior is still the same. . I don’t understand mpi well enough to understand the implications of that PR, but I guess that maybe it’s doing more communication at some level that causes it to be much more sensitive to network performance making 1G Ethernet inadequate. . I will try and upgrade my networking and see if that resolves the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593003762:367,perform,performance,367,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593003762,1,['perform'],['performance']
Performance,"Thanks for the reviews guys. At the moment the optimization framework does not support the topology variables, there is a script in SU2_PY for this feature that runs a testcase with hardcoded parameters...; It is not an easy thing to run a tutorial for :/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752#issuecomment-524374294:47,optimiz,optimization,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/752#issuecomment-524374294,1,['optimiz'],['optimization']
Performance,"Thanks for the reviews guys.; @economon I added comments to the area of the code you highlighted.; The file IO is not a bottleneck at the moment, and that filtering step is only done once.; I did have a look at anything with ""adjacency"" in the name but I took the easy way out (shamelessly) as those routines looked quite intimidating.; If you have plans to make the output structure capable of handling element values I will piggy-back/collaborate on that and output the derivatives via the output instead of writing a dedicated file.; Since we have two approvals, I will turn the example case I've included into a regression and then this can be merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-435698786:120,bottleneck,bottleneck,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-435698786,1,['bottleneck'],['bottleneck']
Performance,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-615329675:282,perform,performance,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675,1,['perform'],['performance']
Performance,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:73,Load,LoadSurfaceElements,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155,1,['Load'],['LoadSurfaceElements']
Performance,"Thanks for your input, I think you make a good point. . The way I was thinking about it is that OBJECTIVE_FUNCTION would now serve the same purpose and have the same behavior across multiple methods - right now (in the current develop and master branch), OBJECTIVE_FUNCTION is used either when running SU2_CFD with the continuous or discrete adjoint method, and when running continuous_adjoint.py, while OPT_OBJECTIVE is used with shape_optimization.py.; Where this gets confusing is that shape_optimization.py automatically flips signs of certain objectives without ever informing the user that this is the case - right now the only way to find out that the sign is flipped is either to carefully read through the source code or run a case and figure it out from the results. ; This will get more confusing when adding in multiple objectives - I would like to at least move the sign change into the config file rather than hidden behind the scenes; however that does get dangerous as it will quietly change the optimization behavior for people who aren't aware of that modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185479306:1012,optimiz,optimization,1012,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185479306,1,['optimiz'],['optimization']
Performance,"Thanks for your reply - I haven't tried the latest version, but plan to do it soon.; It sound like a reasonable explanation that DIRECT diverged (the images does look rather diverged).; Have you run the shape optimization tutorial 1?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559#issuecomment-513481846:209,optimiz,optimization,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/559#issuecomment-513481846,1,['optimiz'],['optimization']
Performance,"Thanks! Please feel free to add anything you consider to my PR. And… do not worry too much (or at all)... we are doing this for free and for fun! As you know, after a major release we always find this kind of small bugs. The big picture is that thanks to you we all enjoy an awesome multipoint optimization capability! Thanks!. Best,; Francisco. > On Mar 25, 2018, at 6:04 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176962282>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > @fpalacios <https://github.com/fpalacios> yes, I commented a bit too quickly; I do see the behavior that you mention. I think the line previously mentioned helps with getting the value of the objective but not the gradient.; > While I was testing this on my end I also noticed that there is an issue if you list the same objective multiple times (for example, if you wanted to weight the drag contribution from one surface more than another), where since it has the same key the previous dict entry is overwritten. Do you mind if I add an error catching that to your PR?; > ; > I am taking a look back through it but so far I think your solution will be good - and better to fix the performance in master now and worry about elegant improvements in the develop branch.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#discussion_r176962282>, or mute the thread <https://github.com/notifications/unsubscribe-auth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376023020:294,optimiz,optimization,294,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376023020,1,['optimiz'],['optimization']
Performance,"Thanks, I hope I can run some tests in the next couple of weeks and compare the performance with other implementations, especially MKL, because this gives the fastest results at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460092205:80,perform,performance,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460092205,1,['perform'],['performance']
Performance,"Thanks, Tim. Did you check if this is related to the compiler or architecture, by any chance? I know that the partitions provided by ParMETIS change depending on the system (although they should be deterministic). In the past, compiler optimizations have led to non-deterministic behavior on some systems. Does it still occur with -O0 optimization?. We'll look into it too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-221407884:236,optimiz,optimizations,236,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-221407884,2,['optimiz'],"['optimization', 'optimizations']"
Performance,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628725910:226,optimiz,optimization,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910,1,['optimiz'],['optimization']
Performance,"Thanks, this is a very useful contribution. . Yes, please, an example (maybe a NACA0012 in test cases optimization) is required. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406#issuecomment-312933080:102,optimiz,optimization,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/406#issuecomment-312933080,1,['optimiz'],['optimization']
Performance,"That will be great. Although I have been restarting my optimizations to work around this, I feel this fix is important.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-623591047:55,optimiz,optimizations,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-623591047,1,['optimiz'],['optimizations']
Performance,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:65,optimiz,optimization,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,2,['optimiz'],['optimization']
Performance,The NS continuous adjoint solver tries to load a restart even with RESTART_SOL = NO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1477:42,load,load,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1477,1,['load'],['load']
Performance,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:52,optimiz,optimizations,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,1,['optimiz'],['optimizations']
Performance,"The [description of SU2][1] says. >The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. Are there any examples of how [SU2][2] ""has been extended to treat more general equations such as electrodynamics""?. [1]: https://github.com/su2code/SU2#su2-introduction; [2]: https://github.com/su2code/SU2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/655:115,optimiz,optimization,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/655,1,['optimiz'],['optimization']
Performance,The `DV_VALUE` should be different across design iterations since this is determined by optimizer. . Is this the case in the config_DEF.cfg in the DEFORM folder?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-628743170:88,optimiz,optimizer,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-628743170,1,['optimiz'],['optimizer']
Performance,"The adjoint handling of the Eigen library can actually be a two step process. In the first step we just use the BlackBox differentiation of Eigen. This will work for every user in the primal code and adjoint code. As a second step we would then look into the BLAS wrapper of Eigen and check if we can provide a special treatment for the adjoint aka CoDiPack version. In general there are two options available:. 1. Wrap the BLAS calls in external functions, requires a lot of manual programming but can be generalized so that it is also available as a general feature of CoDiPack (e.g. We can handle BLAS to XX %). 2. Make use of the ""new"" AD tool I am currently programming. This tool does not insert itself into the Eigen structures, but wraps around them. Then the special path for BLAS can be activated without the AD tool even noticing it. For both options it will be very interesting for us to see how the performance compares with respect to the primal optimized and non optimized version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462272618:912,perform,performance,912,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462272618,3,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:346,perform,performs,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['perform'],['performs']
Performance,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609959747:421,optimiz,optimization,421,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747,2,['optimiz'],['optimization']
Performance,"The discussion in #643 revealed that this (the performance of the linear solvers) is a concern for a lot of us.; I am opening this issue so we can discuss each issue separately, I will quote relevant comments from #643 below.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648:47,perform,performance,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/648,1,['perform'],['performance']
Performance,The inlet profile file does not get copied/linked to the directories DIRECT and ADJOINT_* during a shape optimization. Which python scripts need to be changed to resolve this?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970:105,optimiz,optimization,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/970,1,['optimiz'],['optimization']
Performance,The inlet.dat file does not get copied during a shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970:54,optimiz,optimization,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/970,1,['optimiz'],['optimization']
Performance,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075:173,optimiz,optimization,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075,1,['optimiz'],['optimization']
Performance,"The optimization output includes a list of the major optimization iterations and the associated minor iteration number, which allows you to identify which of the CFD evaluations are associated with the major optimization iteration. Is that sufficiently addressing this issue?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108#issuecomment-101389663:4,optimiz,optimization,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/108#issuecomment-101389663,3,['optimiz'],['optimization']
Performance,"The primary changes in #652 were related to replacing legacy blocking send/receive calls with non-blocking versions (with the receives accepted in a first-come manner using WaitAny()) for all of the point-to-point communications. At the time, I saw modest time/iteration improvements (10-20%) across the board when testing scalability on a fairly large cluster (Xeon nodes with Infiniband). Can you check if there's anything in your network setup that would render the non-blocking communications ineffective? That would be my best guess since it was the major change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593130929:323,scalab,scalability,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593130929,1,['scalab'],['scalability']
Performance,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:385,multi-thread,multi-thread,385,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,1,['multi-thread'],['multi-thread']
Performance,The title says it already. Apparently projection was called twice (and info was overwritten). This fix should solve the problem. Maybe we should add some optimization to the CI.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/223:154,optimiz,optimization,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/223,1,['optimiz'],['optimization']
Performance,"There are a couple of small tweaks that need to be made to the python scripts to make sure the changes I pushed for multipoint optimizations work with this new output structure. There are also a few changes that need to be made to make sure that at the end of the fixed CL mode, the code outputs the flow state before the finite-differencing takes place. . It might be easiest if I make those changes and push them. Would that be a hassle? Should I just comment on the code and let you make the changes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-536735942:127,optimiz,optimizations,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-536735942,1,['optimiz'],['optimizations']
Performance,"There are a couple of talks in the upcoming SU2 conference (https://su2foundation.org/su2conference2020/) which sound related to this, perhaps tune in to those.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003#issuecomment-635813021:143,tune,tune,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-635813021,1,['tune'],['tune']
Performance,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:209,perform,performance-wise,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['perform'],['performance-wise']
Performance,"There is also a C++ version of the ADT search, although it assumes that the entire tree can be stored on one rank. Edwin. ---. From: juanjosealonso notifications@github.com; Sent: Thursday, June 9, 2016 9:27 PM; To: su2code/SU2; Cc: Weide, E.T.A. van der (CTW); Comment; Subject: Re: [su2code/SU2] Optimization of wall distance computation (#282). All,. Edwin has WAAAYYY too much on his plate right now. The ADT code is not that complicated and I know that there is an F90 (fairly object oriented) implementation. Edwin, is there also a C++ implementation that someone could start from?. If either Harichand or Giulio want to lead the effort, that would be great. I am sure Edwin would be happy to advise here and there if needed. So?. Cheers,. Juan. On Jun 9, 2016, at 4:42 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. If a k-d tree based implementation with parallel support with either pointcloud or full implementation is planned, I am interested to contribute. Otherwise Edwin can lead the work with ADT based implementation. I can give the necessary coding support. ## . You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224871075, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxFz0dOtTPpROEf7HF5x7B-duSVsDks5qJ_wUgaJpZM4ItVbi. ## . You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-225000652, or mute the threadhttps://github.com/notifications/unsubscribe/AOUnxLFSv5QD58IfpCw5MIgXIUo6tTBVks5qKGksgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-225013108:298,Optimiz,Optimization,298,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-225013108,1,['Optimiz'],['Optimization']
Performance,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:1200,perform,performed,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,1,['perform'],['performed']
Performance,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:52,optimiz,optimization,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416,2,['optimiz'],['optimization']
Performance,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:73,optimiz,optimizations,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593144776:102,latency,latency,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776,2,['latency'],['latency']
Performance,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:59,perform,performance,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,4,['perform'],['performance']
Performance,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:203,bottleneck,bottlenecks,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,2,"['bottleneck', 'perform']","['bottlenecks', 'performance']"
Performance,"This could be a nice way to save some computational cost... but, the flow limiter may be needed even when the turb. limiter is not in the reconstruction, here:. https://github.com/su2code/SU2/blob/ec551e427f20373511432e6cd87402304cc46baa/SU2_CFD/src/solver_direct_turbulent.cpp#L475-L478. So, we should double-check in the regressions that the flow limiter is always well computed (during the previous flow iteration) when we perform an iteration of the turb. model.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-313451152:426,perform,perform,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-313451152,1,['perform'],['perform']
Performance,"This is a SU2 user using Linux system. When simulating the a testcase of shape optimisation simulation in parallel, an error occured after the first set of DIRECT solution calculated, which is shown below:. ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Aerodynamic Shape Optimization Script |; | |; -------------------------------------------------------------------------; | SU2 Project Website: https://su2code.github.io |; | |; | The SU2 Project is maintained by the SU2 Foundation |; | (http://su2foundation.org) |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:406,Optimiz,Optimization,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['Optimiz'],['Optimization']
Performance,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:124,optimiz,optimization,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"This is a very important topic, @jayantmukho. The optimization functionality is very difficult for folks to get working on their own. There are too many options, and it is not user friendly. We need to improve, and I am open to streamlining the interface if you have some ideas. In general, the bevy of options that you nicely describe above have been added over the years in order to coax the scipy SLSQP optimizer into converging, especially with constraints. It has mostly been a trial-and-error process during that time. Most of the tricks involve getting the scaling set such that the SLSQP optimizer does not take any massively errant steps during its line search that cause divergence. I think it would be great to see a standard normalization of the problem (say, make everything on the order of 1 going in/out of the optimizer) and interfaces to new optimizers (this exists already in part in feature_pyopt). In practice, I use **ONLY** the Scale value in OPT_OBJECTIVE and OPT_CONSTRAINT (set to a value that results in a first optimizer step roughly 10% the characteristic length of my geometry), and ignore the options OPT_GRADIENT_FACTOR, OPT_RELAX_FACTOR, and OPT_LINE_SEARCH_BOUND. I sometimes use the OPT_BOUND_UPPER and OPT_BOUND_LOWER options. But even this approach still requires some manual tuning.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-520726069:50,optimiz,optimization,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-520726069,6,['optimiz'],"['optimization', 'optimizer', 'optimizers']"
Performance,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:130,perform,performance,130,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,2,['perform'],['performance']
Performance,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:20,scalab,scalability,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203,1,['scalab'],['scalability']
Performance,"This isn't just a hypothetical problem. In `CSolver::LoadInletProfile`, a specified inlet profile is compared against the loaded grid. Since each MPI task ""owns"" a different section of the grid, you can get errors on one task but not another. Here's the current workaround. The code currently does an `MPI_Allreduce` to check if there were any errors globally, then calls `SU2_MPI::Error` collectively if there were any errors. The code works fine how it is, but it would be nice if there was a standardized way to approach problems like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-415853537:53,Load,LoadInletProfile,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-415853537,2,"['Load', 'load']","['LoadInletProfile', 'loaded']"
Performance,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:129,perform,performing,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['perform'],['performing']
Performance,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:596,optimiz,optimization,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['optimiz'],['optimization']
Performance,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:100,optimiz,optimization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,3,['optimiz'],['optimization']
Performance,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:102,bottleneck,bottleneck,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,3,"['bottleneck', 'load']","['bottleneck', 'loaders', 'loading']"
Performance,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:41,load,loading,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,5,"['Load', 'load']","['LoadRestart', 'loaded', 'loading']"
Performance,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/292:295,optimiz,optimization,295,https://su2code.github.io,https://github.com/su2code/SU2/pull/292,1,['optimiz'],['optimization']
Performance,This works for a single case. I will try running a shape optimization with this and update this thread. It was a smart way of setting this. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-626908235:57,optimiz,optimization,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-626908235,1,['optimiz'],['optimization']
Performance,"Tom,. Ok. So 3 Gb and 4 sec to write on 72 cores is about 10.6Mb / sec / core. Since not each core has access to a separate I/O node (assume 8 cores / processor), that would give upwards of 80 Mb / sec / node which is quite respectable. The reading seems a bit slower, but it is indeed a major improvement. Later in time we should do some tests for much larger files to make sure we get some level of scalability. Best,. Juan. On Mar 3, 2017, at 10:40 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. Don't know those numbers yet for the aggregate bandwidth with Lustre or how many I/O nodes are available for this cluster. Will have to do a detailed analysis eventually. For reference, this RANS case at 27 million grid points (not cells) results in a 3 GB restart file (binary). I'll take the two orders of magnitude improvement :). Tom. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-284035130>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxLewYDD1YDs9b-b3gf61tw7hQLMcks5riF6TgaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284049783:401,scalab,scalability,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284049783,1,['scalab'],['scalability']
Performance,"Ubuntu 12.04.3; OpenMPI 1.4.3 (repo). OpenMPI runs well on my system with other applications, but fails 100% of the time with SU2 compiled for mpi. Specific example:. shape_optimization.py -f inv_ONERAM6.cfg -p 4. Error:. ------------------------- Solver Preprocessing --------------------------; Area projection in the z-plane = 0.758602.; Traceback (most recent call last):; File ""../SU2_PY/shape_optimization.py"", line 124, in <module>; main(); File ""../SU2_PY/shape_optimization.py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:774,optimiz,optimize,774,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,3,['optimiz'],['optimize']
Performance,Unsteady optimization in V5.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/377:9,optimiz,optimization,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/377,1,['optimiz'],['optimization']
Performance,"Unsteady optimization in V5.0 has some issues. The problem is that after direct iterations SU2 cannot calculate adjoint for each time step properly.; It just keep calculating adjoint equation for one time step. For example a part of the log_adjoint file for NACA64A010 optimization is as follow:. Loading flow solution from direct iteration 250.; Begin direct solver to store flow data (single iteration).; Compute residuals to check the convergence of the direct problem.; log10[Maximum residual]: -2.77153, located at point 1018.; End direct solver, begin adjoint problem. Min DT: 0.000323558.Max DT: 1.20067.Dual Time step: 0.677451.; log10[Maximum residual]: -3.34769.; Maximum residual point 134, located at (0.63649, 0.0371117). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -4.444881 -4.159977 4.4996e+00 -6.5737e-04; 10 0 -4.488648 -4.764869 4.4053e+00 -6.5737e-04; 20 0 -4.433964 -4.864120 2.7194e+00 -6.5737e-04; 30 0 -4.449170 -4.851557 1.7148e+00 -6.5737e-04; 40 0 -4.669063 -4.954710 1.1593e+00 -6.5737e-04; 50 0 -4.689637 -5.116023 9.2103e-01 -6.5737e-04; 60 0 -4.797857 -5.289007 8.5846e-01 -6.5737e-04; 70 0 -4.922113 -5.428807 8.9570e-01 -6.5737e-04; 80 0 -5.021316 -5.534515 9.5224e-01 -6.5737e-04; 90 0 -5.102257 -5.604468 9.9700e-01 -6.5737e-04; 100 0 -5.169358 -5.654203 1.0424e+00 -6.5737e-04. Min DT: 0.0003236.Max DT: 1.201.Dual Time step: 0.6775.; log10[Maximum residual]: -4.172.; Maximum residual point 693, located at (0.03989, -0.0254). IntIter ExtIter Res[Psi_Rho] Res[Psi_E] Sens_Geo Sens_AoA; 0 0 -5.221491 -5.704096 1.0838e+00 -6.5737e-04; 10 0 -5.262729 -5.764520 1.1144e+00 -6.5737e-04; 20 0 -5.306548 -5.835208 1.1305e+00 -6.5737e-04; 30 0 -5.363881 -5.911928 1.1291e+00 -6.5737e-04; 40 0 -5.436887 -5.991739 1.1172e+00 -6.5737e-04; 50 0 -5.521833 -6.072162 1.1056e+00 -6.5737e-04; 60 0 -5.611948 -6.152996 1.0993e+00 -6.5737e-04; 70 0 -5.701126 -6.235540 1.0974e+00 -6.5737e-04; ........... the ExtIter is locked to 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/377:9,optimiz,optimization,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/377,3,"['Load', 'optimiz']","['Loading', 'optimization']"
Performance,"Using Cygwin's OpenMPI you can compile SU2 using the following command:. $SU2_HOME/configure --prefix=$SU2_EXEC --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-metis --with-metis-cppflags=""-D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DMETIS_USE_LONGINDEX=1"" --enable-parmetis --with-parmetis-cppflags=""-DMETIS_USE_LONGINDEX=1"" --enable-cgns. Ok, you will not have the same performance as a linux distribution but you will be able to run SU2. I hope it can help. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378291150:412,perform,performance,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378291150,1,['perform'],['performance']
Performance,"Using MARKER_INLET applies the inlet profile correctly. Using:. `MARKER_GILES= (inlet, TOTAL_CONDITIONS_PT, 85E+03, 273.15, 1.0, 0.0, 0.0, 1.0, 1.0, outlet, RADIAL_EQUILIBRIUM, 69E+03, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)`; `SPECIFIED_INLET_PROFILE=YES`. does say,; `Reading inlet profile from file: inlet_728-self.dat; `; but the inlet profiles are not correctly applied. It should also say something about whether interpolation is being used or not so my guess is that the LoadInletProfile subroutine is not being called. Has anyone used inlet profiles with MARKER GILES? My understanding is using GILES will have the benefit of using non-reflecting boundary conditions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1002:468,Load,LoadInletProfile,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/1002,1,['Load'],['LoadInletProfile']
Performance,Using SU2's Adjoint Optimization For Inverse Problem,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1623:20,Optimiz,Optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1623,1,['Optimiz'],['Optimization']
Performance,"Vec(data_,offsets_); }. STRONGINLINE FltVec operator++(int) {; auto ret = (*this)(); offsets_ += Incr; return ret;; }; };; ```; so silly in fact, it only moves forward, we use it in our loop like so; ```c++; ...; auto gradI = grad.getColIterator(iPoint);; auto gradJ = grad.getColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12332,perform,perform,12332,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['perform'],"['perform', 'performance']"
Performance,"Wall distance computation is SU2 right now seems to be doing brute force search along the wall boundaries to find the nearest wall vertex. One performance optimization here would be to use k-d search tree to find the nearest neighbor. Is it necessary to have a internal k-d tree code or can I use a third party library (like pointcloud). Since I was not sure, I have raised this as an issue and not a pull request.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282:143,perform,performance,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/282,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,We are trying to perform resolvent analysis and need to linear NS equations in matrix form. But I guess I got your answer. Thank you for help!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-751761402:17,perform,perform,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-751761402,1,['perform'],['perform']
Performance,"We have also encountered the significant memory requirements of the discrete adjoint. Actually, this requirement prevented the use of fine mesh (of 10-20M cells) in optimizations process. This is not the case while using continuous adjoint but the effectiveness of the discrete adjoint is higher by far.; I think this is a very important issue in the actual use of the method. Unfortunately, I do not have any solution to suggest.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427554385:165,optimiz,optimizations,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427554385,1,['optimiz'],['optimizations']
Performance,"We have submitted a bug report to Intel about this three years ago. I recently talked with a higher support guy from Intel and he told me that this ticket is on very low priority. . If you (or anybody else) has the possibility to submit a bug report to intel, we would appreciate it. Bug report number 02697346. The problem is, that we defined this method inside of the template class, which makes it automatically inlined. For specific methods I do not want them to be inlined, since it provides a small performance boost and also improves debugging and performance sampling. An example is:; ```; #include <iostream>. template<typename T>; struct S1 {; void func() { std::cout<< ""Creates no warning, is inlined"" << std::endl;}; };. template<typename T>; struct S2 {; __attribute__((noinline)) void func() { std::cout<< ""Creates warning, is not inlined"" << std::endl;}; };. template<typename T>; struct S3 {; __attribute__((noinline)) void func();; };. template<typename T>; void S3<T>::func() { std::cout<< ""Creates no warning, is not inlined"" << std::endl;}. int main(int nargs, char** args) {; S1<int> s1; ; s1.func();. S2<int> s2; ; s2.func();. S3<int> s3; ; s3.func();; }; ```. I do not want to change CoDiPack to the implementation of S3 since this is a code copy of the declaration. But there are other options. You can disable the 'no inlining' with the option -DCODI_UseAvoidedInlines=0. Another option is, that we add the pgrama `#pragma warning disable 2196` for intel compilers in CoDiPack. But this is also not a good option as general case. So I would add it as a new parameter e.g. `-DCODI_DisableIntelNoInlineWarning`. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087#issuecomment-706082605:505,perform,performance,505,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706082605,2,['perform'],['performance']
Performance,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:43,optimiz,optimization,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,2,['optimiz'],['optimization']
Performance,"Well, the good news is that, when staying within a single node (up to 16 cores) v7 seems to perform significantly better for you than v6.2. The bad news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:92,perform,perform,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,5,"['latency', 'perform', 'scalab']","['latency', 'perform', 'performance', 'scalability']"
Performance,"What should the default value of RefElemLength in the code below be? The comment says it is 0.1 but the code says 1.0, which are inconsistent. ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; if (SystemMeasurements == US) RefElemLength /= 0.3048;; ```; https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/Common/src/CConfig.cpp#L4696. For shape optimization, when I set ADJ_SHARP_LIMITER_COEFF to default (3.0) and set SENS_REMOVE_SHARP to YES, surface sensitivity becomes zero within fairly large distance from the sharp edges. The cutoff distance is defined by the product of ADJ_SHARP_LIMITER_COEFF (AdjSharp_LimiterCoeff) and RefElemLength, so RefElemLength seems to be too large. https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/SU2_CFD/src/solvers/CDiscAdjSolver.cpp#L488. Because of this, I'm assuming that the default value of RefElemLength should have been 0.1 instead of 1.0. However, I realized that RefElemLength is used by the slope limiters as well, and I'm currently not sure about the impact of changing this variable. I am investigating myself but if someone knows the intent of this variable or the implementation of the slope limiters, I would like to ask for your help before I open PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830:436,optimiz,optimization,436,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830,1,['optimiz'],['optimization']
Performance,"When I was applying a multizone simulation with a single physics, I encountered the following problem:; When MULTIZONE_MESH = YES, the merged xxx.su2 file cannot be read. I didn't find any formatting errors also marked IZONE=1 and IZONE=2. The details of the problem are as follows:. ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Error in ""void CSU2ASCIIMeshReaderFVM::ReadMetadata()"":; -------------------------------------------------- -----------------------; Could not find the IZONE= keyword or the zone contents.; Check the SU2 ASCII file format.; ------------------------------ Error Exit ------------------ -------------; ```. When MULTIZONE_MESH = NO, I don't know if it is the problem of file reading again. An unexpected failure occurred when the solution process reached the following step:. ```; ---------------------------------------- Begin Solver ------------------ -------------; Simulation Run using the Multizone Driver; The simulation will run for 100 time steps.; Performing rigid mesh transformation.; New physical time: 0 seconds.; Translational velocity: (0, 0, 0) m/s.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) m.; Pitching frequency: (0, 0, 62.8) rad/s.; Pitching amplitude: (0, 0, 30) degrees.; Pitching phase lag: (0, 0, 0) degrees.; Angular velocity: (0, 0, 0) rad/s.; Segmentation fault (core dumped); ```. I followed every step of the tutorial exactly, but still can't achieve multizone simulation. . - Ubuntu: 20.04; - SU2 Version: 7.0.4 Linux Version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1594:1019,Perform,Performing,1019,https://su2code.github.io,https://github.com/su2code/SU2/issues/1594,1,['Perform'],['Performing']
Performance,"When the window size changes the weights for each sample change, you do need the history for nontrivial windows and to recompute the weights.; But it is possible to cache the sum over n-1 samples until the number of samples changes again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1040060714:165,cache,cache,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1040060714,1,['cache'],['cache']
Performance,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:257,load,load,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020,2,['load'],['load']
Performance,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:472,load,load,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['load'],['load']
Performance,"While `unsigned short* CPhysicalGeometry::Local_to_Global_Marker` and `Global_to_Local_Marker` are currently not in use, I think that they should be filled with sensible content rather than being removed. The data seems to be already available in `CPhysicalGeometry::LoadSurfaceElements` with the local variables; - `vector<unsigned long> Marker_Local` and ; - `unordered_map<unsigned long, unsigned long> Marker_Global_to_Local`. I'd like to implement this change. Before that, let's discuss the following questions: Do you think that marker IDs (often called `iMarker`) should be `unsigned short` or `unsigned long` (this is inconsistent across the code)? Should the above data structures be arrays (with some special code for ""this global index does not correspond to a local index"") or maps/lists? I'd prefer the latter, respectively.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231:267,Load,LoadSurfaceElements,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762047231,1,['Load'],['LoadSurfaceElements']
Performance,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:1098,perform,performance,1098,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,1,['perform'],['performance']
Performance,"Why don't I add additional regression cases of multiple objective on a single surface and a single objective on multiple surfaces, I think otherwise the situations you mention are covered (both of those should already work, but may not be covered by regressions, and they can easily be covered by single-iteration tests). ; There is a tutorial page here: ; https://github.com/su2code/SU2/wiki/Multi-Objective-Optimization; Although that's from a while ago I don't think much needs to be changed, except for broken links including images.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357367522:409,Optimiz,Optimization,409,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357367522,1,['Optimiz'],['Optimization']
Performance,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:537,Perform,Performance,537,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435,4,"['Perform', 'optimiz', 'perform']","['Performance', 'optimize', 'performance']"
Performance,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207:222,perform,performances,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/207,2,['perform'],"['performance', 'performances']"
Performance,Would be good to support the newer Vulkan compute api as this is showing greater performance and lower overheads. Vulkan is also the prefered api for Aarch64.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/381:81,perform,performance,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/381,1,['perform'],['performance']
Performance,Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459705131:135,perform,performance,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459705131,1,['perform'],['performance']
Performance,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:399,load,loading,399,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,1,['load'],['loading']
Performance,Wrong deformation in shape optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:27,optimiz,optimization,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,1,['optimiz'],['optimization']
Performance,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:229,perform,performing,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,6,"['optimiz', 'perform']","['optimizations', 'performing', 'performs']"
Performance,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:451,perform,performed,451,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,1,['perform'],['performed']
Performance,"Yeah, but listening to Mr Turner is surely well invested time if one is able to follow at least some of his thoughts. But imo he does a good job in that, I sometimes tune in for cppcast and that is okayish to follow most of the time (but that is not really in depth tbh)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1208#issuecomment-785905666:166,tune,tune,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/1208#issuecomment-785905666,1,['tune'],['tune']
Performance,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:142,load,load,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,2,['load'],['load']
Performance,"Yes, the minimum required version is now 4.7 (which has full C++11 support). But only for the AD binaries!; We have to move forward, otherwise it is not possible to include current and future changes that improve the performance. But I can provide a patch to make it work with gcc < 4.7 if necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350#issuecomment-271090352:217,perform,performance,217,https://su2code.github.io,https://github.com/su2code/SU2/pull/350#issuecomment-271090352,1,['perform'],['performance']
Performance,"You are completely right... the description for OBJECTIVE_FUNCTION. % Objective function in optimization problem (DRAG, LIFT, SIDEFORCE, MOMENT_X,; % MOMENT_Y, MOMENT_Z, EFFICIENCY,; % EQUIVALENT_AREA, NEARFIELD_PRESSURE,; % FORCE_X, FORCE_Y, FORCE_Z, THRUST,; % TORQUE, TOTAL_HEATFLUX,; % MAXIMUM_HEATFLUX, INVERSE_DESIGN_PRESSURE,; % INVERSE_DESIGN_HEATFLUX, AVG_TOTAL_PRESSURE, ; % MASS_FLOW_RATE, ELLIPTIC_SPANLOAD, MAX_SECTIONAL_CL); OBJECTIVE_FUNCTION= DRAG. Is not accurate and introduces some level of confusion. . From the “average"" user point of view my experience is that they only use OPT_OBJECTIVE and thy don’t know that OBJECTIVE_FUNCTION exists. Could you please change ""Objective function in optimization problem” by something more accurate? In fact, we should maybe think on changing the keyword OBJECTIVE_FUNCTION itself. Best,; Francisco. > On Apr 22, 2017, at 5:19 PM, Heather Kline <notifications@github.com> wrote:; > ; > @fpalacios <https://github.com/fpalacios>, @economon <https://github.com/economon> - There's a comment in the config files that says that 'OBJECTIVE_FUNCTION' sets the objective function for the optimizer - however it seems that this option is only used with controlling the adjoint solver and output, and whatever the user specifies there will be overwritten by the optimizer. I put an alternative comment in the config_templates here; I can either revert that back or change the comment in all the config files (I have a script).; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296410309>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklinNXzQxD1nXZbsTUqsE6aPW6zEMks5rypkJgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296417940:92,optimiz,optimization,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296417940,4,['optimiz'],"['optimization', 'optimizer']"
Performance,You only see changes on residuals that are -20 so I think you are ok.; Taking those variables from members to local variables may allow the compiler to re-order some stuff for optimization.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923#issuecomment-1432346004:176,optimiz,optimization,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923#issuecomment-1432346004,1,['optimiz'],['optimization']
Performance,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:290,cache,cache,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,8,['cache'],['cache']
Performance,[WIP] Enable the hover simulation for the Actuator Disk with Variable Load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:70,Load,Load,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Load'],['Load']
Performance,[WIP] Shape optimization overhaul,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:12,optimiz,optimization,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:94,optimiz,optimization,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,2,['optimiz'],['optimization']
Performance,[case728.txt](https://github.com/su2code/SU2/files/4794021/case728.txt); Is there any way to set max ITER for adjoint solution separately during shape optimization? My direct solution takes a lot of iterations to converge but adjoint converges quickly. The adjoint solution also does not stop after the convergence criteria is satisfied. It appears that there is no convergence criteria set for adjoint set in the solver. Thanks in advance.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024:151,optimiz,optimization,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024,1,['optimiz'],['optimization']
Performance,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:973,optimiz,optimization,973,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,1,['optimiz'],['optimization']
Performance,"[flat plate test.zip](https://github.com/user-attachments/files/16321830/flat.plate.test.zip); @pcarruscag Hi Pedro, thanks for the help. I used your modified one to do a plat plate test, which could work without inlet profile, however, when I input the inlet profile with uniform value(should be same as no-input), it still diverged immediately. I was looking through the function 'LoadInletProfile' in CSolver.cpp these days, maybe there should be some changes around? Because there is a determination of inlet type, which SUPERSONIC_BC doesn't belong to, I am not that sure if it effects. I attached all the testing files, including mesh, config, profile dat, etc. Please take a look and let's debug on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909:383,Load,LoadInletProfile,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909,1,['Load'],['LoadInletProfile']
Performance,"_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CNEMOGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core_AD.a.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:2074,optimiz,optimization,2074,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['optimiz'],['optimization']
Performance,"__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:1539,perform,performed,1539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['perform'],['performed']
Performance,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:1527,optimiz,optimization,1527,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['optimiz'],['optimization']
Performance,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:33,cache,cached,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,2,['cache'],['cached']
Performance,a possible bug for loading grid points for a zone,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:19,load,loading,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,1,['load'],['loading']
Performance,"a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>; <h2>v3.5.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Use correct API url / endpoint in GHES by <a href=""https://github.com/fhammerl""><code>@​fhammerl</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1289"">actions/checkout#1289</a> based on <a href=""https://redirect.github.com/actions/checkout/issues/1286"">#1286</a> by <a href=""https://github.com/1newsr""><code>@​1newsr</code></a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.1...v3.5.2"">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>; <h2>v3.5.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20<",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:5359,perform,performance,5359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['perform'],['performance']
Performance,"ache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/updat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6648,cache,cache,6648,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5677,cache,cache,5677,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7603,cache,cache,7603,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdot",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2116,cache,cache,2116,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8970,cache,cache,8970,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,actually I face the issue when dealing with naca64a10 optimization,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-248936687:54,optimiz,optimization,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-248936687,1,['optimiz'],['optimization']
Performance,"ages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data overhead is considerable. **Additional context**; I performed my tests so far with the RANS solver, employing SST turbulence and SLAU2 scheme. Time-averaging started at around time-iteration 160k and cintinous for another 200k iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:1528,perform,performance,1528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,2,['perform'],"['performance', 'performed']"
Performance,"all last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; gra",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1185,optimiz,optimize,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"and here's a trace from a unix cluster --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 3113133 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 4478644 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; trunc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:197,Perform,Performing,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,1,['Perform'],['Performing']
Performance,"angle=np.radians(26),; outlet_angle=np.radians(12),; upper_thick_prop=[0.015, 0.05, 0.05 , 0.015],; lower_thick_prop=[0.015, 0.05, 0.05, 0.015],; leading_prop=0.5,; trailing_prop=0.5,; chord_length=0.018,; ). axial_turbo_passage = TurboStagePassage(; inflow_passage=TurboRowPassage(; airfoil=rotor_airfoil,; spacing_to_chord=0.5,; leading_edge_gap_to_chord=1.0,; trailing_edge_gap_to_chord=0.25,; type=""camber"",; mesh_params=TurboMeshParameters(; airfoil_label=""wall1"",; bottom_label=""periodic1"",; top_label=""periodic2"",; inlet_label=""inflow"",; outlet_label=""outmix"",; ); ),; outflow_passage=TurboRowPassage(; airfoil=stator_airfoil,; spacing_to_chord=0.5,; leading_edge_gap_to_chord=0.25,; trailing_edge_gap_to_chord=1.0,; type=""camber"",; mesh_params=TurboMeshParameters(; airfoil_label=""wall2"",; bottom_label=""periodic3"",; top_label=""periodic4"",; inlet_label=""inmix"",; outlet_label=""outflow"",; ); ); ). ##############################################################################################. from paraflow import run_simulation, get_flasher, SimulationParams, get_frames, display_frame; from paraflow.simulation.su2 import Su2SimulationConfig . flasher = get_flasher(""air"", ""gas""); sim_results = run_simulation(; axial_turbo_passage,; params=SimulationParams(; inlet_total_state=flasher.flash(P=87909, T=276, mach_number=0.4098), ; target_outlet_static_state=flasher.flash(P=108932, T=296),; translation=[; np.array([0.0, 266, 0.0]),; None; ]; ),; working_directory=""./simulation_out"", ; id=""1"",; auto_delete=True,; verbose=True,; # num_procs=9,; cfg=Su2SimulationConfig(; custom_repo_url= ""https://github.com/su2code/SU2/tree/master"",; version= ""8.0.0""; ); ); sim_results.to_file(""./simulation_out/cached.pkl""). # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). frames = get_frames(; sim_results, ; property_names=[""Pressure""], ; num_pnts=500,; ); display_frame(frames, ""Pressure""); sim_results.eval_values.loc[sim_results.eval_values.index[-1], ' ""TotTotEff[1]"" ']",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204#issuecomment-1912707796:2303,cache,cached,2303,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204#issuecomment-1912707796,2,['cache'],['cached']
Performance,"ape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1581,optimiz,optimize,1581,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimize']
Performance,"ape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1456,optimiz,optimize,1456,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3766,cache,cache,3766,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"at a cte. AoA using the given cfg and mesh file. But it seems the process only goes for 4 steps and stop. No matter I use python2 or python3, it is the same. What could cause the problem here? Thank you very much!. when using python2:. ```; NIT FC OBJFUN GNORM; 1 1 2.946447E-08 6.646259E-06; 2 3 2.927194E-08 5.513828E-06; 3 4 2.037004E-08 4.516896E-06; 4 6 1.769283E-08 5.893302E-06; Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:1114,optimiz,optimize,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['optimiz'],['optimize']
Performance,"ator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop br",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1243,perform,performing,1243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['perform'],['performing']
Performance,"ave resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1012,Optimiz,Optimization,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2997,optimiz,optimization,2997,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"ays to do this, for example using [x86 intrinsics](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=2273,2273,2436,2943,2436,2943,610,1788,2942) (in header `<x86intrin.h>`), register types instead of arrays, and a boat load of template meta-programming (I'm guessing) there are professional libraries for this.; This quickly-hacked-together code is compatible with custom types, portable, and seems to do the trick. To pull this off we do not need to have `Vector` or `Matrix` of this class, the underlying type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has greater implications for gradients as instead of the familiar ""vector of matrices"" we would need a ""matrix of vectors"", i.e. the derivative of variable i w.r.t. coordinate j stored as a vector for all points. The `Adjacency` also needs to be stored in a funny way. For the scalar version of the code it was stored as a CSR sparse matrix (one array of indices into the arrays of data for each point, the rows).; For the vectorized version we want to load (small) arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all poi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:9772,optimiz,optimized,9772,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['optimiz'],['optimized']
Performance,"back at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrappe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7832,cache,cached,7832,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['cache'],['cached']
Performance,"ble with the shape_optimization.py. I'm following the instructions of the tutorial for unsteady shape optimization for naca0012 but got an error:. ```; Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 166, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = desig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1017,optimiz,optimize,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8534,cache,cache,8534,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"burger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4324,cache,cache,4324,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9478,cache,cache,9478,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4111,cache,cache,4111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"calj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_include_cgnslib_h=yes; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_lib_libcgns_a=yes; ac_cv_header_X11_Intrinsic_h=no; ac_cv_header_inttypes_h=yes; ac_cv_header_memory_h=yes; ac_cv_header_std",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19528,Cache,Cache,19528,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Cache'],['Cache']
Performance,"ce some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:1575,optimiz,optimization,1575,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['optimiz'],['optimization']
Performance,"centages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about wi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:4284,bottleneck,bottleneck,4284,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['bottleneck'],['bottleneck']
Performance,"ck']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8379,Load,Load,8379,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['Load'],['Load']
Performance,"closed for movement to cfd-online forum.; multi-threading does indicate an issue with compiling. One thing to check is whether the same mpi implementation is being used for compilation and at runtime. (aka, openmpi vs mpich)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303#issuecomment-242175443:42,multi-thread,multi-threading,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/303#issuecomment-242175443,1,['multi-thread'],['multi-threading']
Performance,"computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2588,perform,perform,2588,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['perform'],['perform']
Performance,compute_polar.py error when optimization objective is not defined,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545:28,optimiz,optimization,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/545,1,['optimiz'],['optimization']
Performance,"ctions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5538,cache,cache,5538,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"d news is that something is screwy when you go multi-node. The MPI implementation of SU2 should scale fairly well as long as you have >~ 10,000 nodes per MPI rank / partition. On 64 ranks, you have 106,250 and 421,875 cells per rank, respectively, for each of the two meshes (6.8e6 and 27e6) which is nowhere close to the scalability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1072,perform,performance,1072,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,1,['perform'],['performance']
Performance,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1318,load,load,1318,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['load'],['load']
Performance,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10549,load,load,10549,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['load'],['load']
Performance,"d, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombination. Journal of Computational Physics, 344, pp.234-246.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:2553,perform,performance,2553,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['perform'],['performance']
Performance,"d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9079,cache,cache,9079,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"de their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5793,cache,cache,5793,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"dweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2949,perform,performance,2949,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['perform'],['performance']
Performance,"e 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1661,optimiz,optimize,1661,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1116,optimiz,optimization,1116,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['optimiz'],['optimization']
Performance,"e use it in our loop like so; ```c++; ...; auto gradI = grad.getColIterator(iPoint);; auto gradJ = grad.getColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12582,optimiz,optimization,12582,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['optimiz'],['optimization']
Performance,"e will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operato",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4943,perform,performance,4943,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['perform'],['performance']
Performance,"e without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7872,cache,cache,7872,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ead_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2965,concurren,concurrent,2965,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['concurren'],['concurrent']
Performance,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1958,perform,perform,1958,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,2,['perform'],['perform']
Performance,"econditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible for the discrete adjoint but I have not made them available yet.; Branch *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:1967,optimiz,optimizations,1967,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['optimiz'],['optimizations']
Performance,"ect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed ca",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2536,cache,cache,2536,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ed the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about with this case (and more refined versions) it is clear the MG puts some limits on how many cores can be used before it stops being able to produce coarse grids, both in number and quality. Going to an MPI+Threads strategy would move that limit by one order of magnitude, giving us some robustness and performance for folks hoping to rely on strong scaling. I think I'll break it off here and keep my thoughts about SIMD and hybrid parallel for a later occasion (I have to do some ""real"" PhD work for a while) but please, if anyone has ideias, comments, corrections, suggestions, similar ongoing developments (specially)... I am all ears/eyes. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:5081,latency,latency,5081,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,4,"['latency', 'perform']","['latency', 'performance']"
Performance,"ed to compute the gradient into a local variable and then ""transpose"" it when storing it, i.e.; ```c++; FltVec phiI[MAXNVAR], gradI[MAXNVAR][MAXNDIM];; ...; for(size_t iVar=0; iVar<nVar; ++iVar); {; auto flux = weight*(phiI[iVar]+phi.getVec(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); gradI[iVar][iDim] += a_ij[iDim]*flux;; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpos",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:14611,Perform,Performance,14611,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,1,['Perform'],['Performance']
Performance,"ed) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/599",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1311,perform,performed,1311,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['perform'],['performed']
Performance,"edirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7155,cache,cache,7155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"enced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit sche",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5164,cache,cache,5164,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['cache'],['cache']
Performance,"ents. Registers are at the very top of the memory hierarchy, for any computation to be performed data needs to be in registers.; An AVX register is 256 bits wide, that means 4 lanes of doubles or 8 of floats, AVX-512 (available in Xeon-Phi and SkylakeX processors) doubles the size. By GPU standards these are rookie numbers. **Why should we care about SIMD?**; Because it is the only way to use the whole silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1209,load,load,1209,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['load'],['load']
Performance,"ependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5100,cache,cache,5100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"eply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1219,cache,cached,1219,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['cache'],['cached']
Performance,"er the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set `OMP_WAIT_POLICY=ACTIVE` and beware of thread binding settings, use `mpirun --bind-to socket` or `mpirun --bind-to numa` never `core`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2927,tune,tune,2927,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,10,"['perform', 'tune']","['performance', 'tune']"
Performance,"er thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performanc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5967,perform,performance,5967,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['perform'],['performance']
Performance,er works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4289,cache,cached,4289,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"es and alternating digital trees (ADTs) in the past with very significant cost reductions) is going to be necessary in the very near future as people begin to run much larger models. Otherwise the preprocessing time for the searches can become excessive and dominant. If someone wanted to try using PCL for this, that would be quite interesting. Given the open source license, as Tom mentions, there should not be a problem interfacing with SU2. Now, an issue we faced in the ASC / PSAAP programs is that for extremely large calculations, the surface mesh (to be searched for minimum distance calculations) may actually not fit in a single processor. For that purpose we built parallel ADTs in the past (unfortunately in FORTRAN90) which replicate a small portion of the upper structure of the tree in all processors (without consuming a lot of memory) and then decomposed the tree into the various processors participating in the searches. While the parallel speedups / efficiencies were not earth-shattering, we did manage to overcome the memory bottlenecks. Does anyone know if PCL can also handle trees that are decomposed in parallel? Would PCL work with its own MPI communicator and automate the communication needed for the searches?. Cheers,. Juan. On Jun 5, 2016, at 4:06 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Indeed, at the moment, we are relying on brute force searches. We have discussed using tree searches internally (and potentially have some reusable code available for this), but nothing has been implemented. It looks like pointcloud is released under a BSD license, which is very permissive. Do you have an implementation in SU2 already with this code embedded? It is also fairly straightforward for us to add hooks in the configure process to installed libraries on your system. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-223861540:1127,bottleneck,bottlenecks,1127,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-223861540,1,['bottleneck'],['bottlenecks']
Performance,"es that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3458,perform,performing,3458,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,"['optimiz', 'perform']","['optimization', 'optimizer', 'performing']"
Performance,"es</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1482,cache,cache,1482,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"esult and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calcula",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1363,optimiz,optimization,1363,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance,"everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3469,perform,performance,3469,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['perform'],['performance']
Performance,"ew segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3180,cache,cache,3180,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:990,perform,performed,990,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,1,['perform'],['performed']
Performance,"f=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9335,cache,cache,9335,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"f=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3440,cache,cache,3440,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1438,perform,performance,1438,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['perform'],['performance']
Performance,"fig_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdou",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10100,Load,Load,10100,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['Load'],['Load']
Performance,"fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJE",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1560,optimiz,optimizer,1560,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['optimiz'],['optimizer']
Performance,forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 16 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| Tria-1-Bndry| 14188|; | 1| Tria-2-Bndry| 188|; | 2| Tria-3-Bndry| 6421|; | 3| Tria-4-Bndry| 188|; | 4| Tria-5-Bndry| 612|; | 5| Tria-8-Bndry| 46107|; | 6| Tria-9-Bndry| 45354|; | 7| Tria-10-Bndry| 4922|; | 8| Tria-11-Bndry| 11414|; | 9| Tria-12-Bndry| 32010|; | 10| Tria-13-Bndry| 2486|; | 11| Tria-14-Bndry| 31513|; | 12| Tria-15-Bndry| 921|; | 13| Tria-16-Bndry| 82|; | 14| Tria-17-Bndry| 990|; | 15| Quad-6-Bndry| 9204|; +------------------------------------+; Calling ParMETIS... graph partitioning complete (52152 edge cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:3345,Perform,Performing,3345,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Perform'],['Performing']
Performance,"fyi, the surface files output both a .csv and a .dat version, one of which; can be opened by tecplot (.dat) with everything you usually want for; visualization, while the other one contains the global index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > —; > Reply to this email directly or view it on GitHub; > https",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:762,load,loaded,762,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,2,['load'],"['loaded', 'loading']"
Performance,"g an unsteady solution, to implementing numerical error estimates…and many others. It is important that the search / interpolation routines work when interpolating between grids where some points in the target grid may fall outside of the source grid and, therefore some notion of distance to the wall is needed. Fortunately, Edwin van der Weide had worked on an interpolation library that @sravya91 (who received her PhD yesterday at our graduation ceremony and is now working at NVIDIA) used in her work. Jayant Mukhopadhaya and Brian Munguia have also been testing/improving the library. Perhaps everyone can comment on current status and we can create a small task force to see what still needs to be done and who can do what?. Best,. Juan. On Jun 17, 2019, at 10:36 AM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91<https://github.com/sravya91>, are you still working on this? Did PR #672<https://github.com/su2code/SU2/pull/672> introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [1]<https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html> [2]<https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html>. I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/466?email_source=notifications&email_token=AA5FFRGCPYI5KNVQZ7GB5F3P27DQZA5CNFSM4EB5RB6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODX35BDQ#issuecomment-502780046>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRA2PYIJFUNP7AHIS3DP27DQZANCNFSM4EB5RB6A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502783107:1687,perform,perform,1687,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502783107,1,['perform'],['perform']
Performance,"g can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contrib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1419,optimiz,optimization,1419,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['optimiz'],['optimization']
Performance,"g global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for Machi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5360,cache,cached,5360,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['cache'],['cached']
Performance,"g template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1719,Optimiz,Optimization,1719,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['Optimiz'],['Optimization']
Performance,"github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""htt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6235,cache,cache,6235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6352,cache,cache,6352,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2651,perform,performance,2651,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"hanges. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Ga",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1023,optimiz,optimization,1023,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"he end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8977,perform,performance,8977,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance,"he tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:3238,perform,performance,3238,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['perform'],['performance']
Performance,"heir first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5655,cache,cache,5655,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"here is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen…take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Munguía <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/petsc/> from ANL, which has a 2-clause BSD license and is used by ADflow (formerly SUmb), among other solvers. Eduardo could probably provide more details. Another one that's come up in our discussions is HYPRE<https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods> from LLNL which has a GNU LGPL. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459562945>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJH0ySGyxvngq-G9YuG-H1HbBcYFks5vI42qgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:2255,scalab,scalable-linear-solvers-multigrid-methods,2255,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,1,['scalab'],['scalable-linear-solvers-multigrid-methods']
Performance,"here's a trace from my ubuntu machine --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 293290 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", bu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:195,Perform,Performing,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['Perform'],['Performing']
Performance,"herley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​ch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2767,cache,cache,2767,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"his would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------. [image]https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png; SU2_DEF: output when deforming with all markers included:. ------------------------- Surface grid deformation ----------------------; Performing ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:1697,Perform,Performing,1697,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,1,['Perform'],['Performing']
Performance,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:17010,perform,performance,17010,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['perform'],['performance']
Performance,"href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7448,cache,cache,7448,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5484,cache,cache,5484,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"hub.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1428,cache,cache,1428,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"iVar, lim*(lim+2.0)/(lim*lim+lim+2.0));; }; }; }; ```; In terms of algorithm, for each point we find the min and max neighbor values and the min (negative) and max (positive) projections, those are then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:10182,perform,performance,10182,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['perform'],['performance']
Performance,"ic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6054,cache,cache,6054,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment vari",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2304,cache,cached,2304,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['cache'],['cached']
Performance,"im; ++iDim); grad.setVec(iPoint,iVar,iDim,; grad.getVec(iPoint,iVar,iDim)/volume.getVec(iPoint));; }; }; ```; I think this is just as readable especially considering that in SU2 we always need to use some Set/Get/Add/Sub method to update a variable, the difference is that here those methods have overloads to operate on small fixed size vectors. The speedup is **1.35** (i.e. 35% faster than edge-based reference) note that the improvement relative to scalar-point-based is only 1.6, those pesky gathers... The loop advances `SIMDLEN` points on each iteration, yet there are no pragmas and small simd-loops in sight, in good C++ fashion that trickery has been encapsulated in a ""simd-friendly"" class.; Such a class can look something like this:; ```C++; template<class T, size_t N>; class Array; {; #define FOREACH for(size_t k=0; k<N; ++k); public:; enum : size_t {Size = N};; enum : size_t {Align = N*sizeof(T)};; private:; // fixed size and aligned array of internal data, naturally maps to a SIMD register; alignas(Align) T vals_[N];; /*; * Some helper methods go here; */; public:; // **** CONSTRUCTORS **** //; // We want to be able to construct this type from single scalars,; // a memory location from which we LOAD data,; // or a memory location and some offsets from which we GATHER data.; // In addition to the ""normal"" constructors. // scalar broadcasting ctor; STRONGINLINE Array(T x) {bcast(x);}. // loading ctor; STRONGINLINE Array(const T* ptr); {; #pragma omp simd aligned(ptr:Align); FOREACH vals_[k] = ptr[k];; }; // gathering ctor; template<class U>; STRONGINLINE Array(const T* base_ptr, const U& offsets); {; #pragma omp simd; FOREACH vals_[k] = base_ptr[offsets[k]];; }; /*; * Other traditional constructors (default, copy-ctor, move-ctor, etc) go here; */. // **** ACCESSORS **** //; STRONGINLINE T& operator[] (size_t k) {return vals_[k];}; STRONGINLINE T operator[] (size_t k) const {return vals_[k];}. // **** MATH OPERATORS **** //; STRONGINLINE Array& operator= (const A",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:7269,LOAD,LOAD,7269,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,1,['LOAD'],['LOAD']
Performance,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1575,OPTIMIZ,OPTIMIZER,1575,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,"['OPTIMIZ', 'Optimiz']","['OPTIMIZER', 'Optimization']"
Performance,"in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3295,cache,cache,3295,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLU",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:1243,perform,performance,1243,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['perform'],['performance']
Performance,"irectories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3084,cache,cache,3084,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['cache'],['cache']
Performance,"irst;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does not help much. This is the 4 core summary:. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 2.0 | 2.0 | 3.8 | 2.8 |. I think the point-based versions scale better because they are a bit less memory-bound as they write ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:14089,perform,performance,14089,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['perform'],['performance']
Performance,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2294,load,load,2294,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['load'],['load']
Performance,"issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7000,cache,cache,7000,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ithub.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8786,cache,cache,8786,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6817,cache,cache,6817,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5797,perform,performance,5797,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance,"k];}; STRONGINLINE T operator[] (size_t k) const {return vals_[k];}. // **** MATH OPERATORS **** //; STRONGINLINE Array& operator= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] = rhs.vals_[k];; return *this;; }. STRONGINLINE Array& operator+= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] += rhs.vals_[k];; return *this;; }; STRONGINLINE Array operator+ (const Array& rhs) const { return Array(*this)+=rhs; }; ; /*; * Many other operators go here.; */; };. // Common math function overloads; template<class T>; STRONGINLINE T vmax(const T& a, const T& b); {; T res;; #pragma omp simd; for(size_t k=0; k<T::Size; ++k); res[k] = (a[k]>b[k])? a[k] : b[k];; return res;; }. #undef FOREACH; ```; There are other (better) ways to do this, for example using [x86 intrinsics](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=2273,2273,2436,2943,2436,2943,610,1788,2942) (in header `<x86intrin.h>`), register types instead of arrays, and a boat load of template meta-programming (I'm guessing) there are professional libraries for this.; This quickly-hacked-together code is compatible with custom types, portable, and seems to do the trick. To pull this off we do not need to have `Vector` or `Matrix` of this class, the underlying type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:8890,load,load,8890,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['load'],['load']
Performance,"l is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OMP_NUM_THREADS` (eventually I will make that a command line parameter), for best performance set ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2645,Perform,Performance,2645,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['Perform'],['Performance']
Performance,"lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1636,optimiz,optimized,1636,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['optimiz'],['optimized']
Performance,"lease</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3916,cache,cache,3916,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.gith",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1701,cache,cache,1701,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"m/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6021,cache,cache,6021,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"metric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3175,load,load,3175,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['load'],['load']
Performance,"minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7728,cache,cache,7728,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"mization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1375,optimiz,optimize,1375,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['optimiz'],['optimize']
Performance,"mulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the ar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:1476,perform,perform,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['perform'],['perform']
Performance,"n feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8271,cache,cache,8271,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"n let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1455,perform,performance,1455,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['perform'],['performance']
Performance,"n to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3490,cache,cache,3490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"n3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1630,optimiz,optimize,1630,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"nce in convergence and result, which I think is due to the difference in regime. The convergence of the direct solution is: ; ![image](https://user-images.githubusercontent.com/21182966/28309520-e967cbc6-6ba9-11e7-9233-9c9f69db126b.png). The convergence of the adjoint solution is:; ![image](https://user-images.githubusercontent.com/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3196,optimiz,optimization,3196,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,2,['optimiz'],['optimization']
Performance,"nd fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4714,cache,cache,4714,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1328,perform,performed,1328,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,2,['perform'],"['perform', 'performed']"
Performance,"nd off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeId",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:2432,bottleneck,bottleneck,2432,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['bottleneck'],['bottleneck']
Performance,"ne, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is having a robust solver. If it can handle flow simulations with odd geometries, you need to do less parameter tweaking. The reason you need good scaling is so that the optimizer doesn't explore difficult parts of the design space. If the simulation diverges, the optimization fails. Some intelligent handling of simulation divergences would also help the optimiz",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:1333,optimiz,optimization,1333,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['optimiz'],['optimization']
Performance,"ng is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scaling",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4224,optimiz,optimizer,4224,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['optimiz'],['optimizer']
Performance,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1457,optimiz,optimized,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,1,['optimiz'],['optimized']
Performance,"ngential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1359,load,load,1359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['load'],['load']
Performance,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1860,load,load,1860,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['load'],['load']
Performance,"ns and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2864,optimiz,optimizations,2864,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimizations']
Performance,"nstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 118, in main; options.nzones ); File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 163, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 143, in scipy_slsqp; epsilon = eps ); File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 207, in fmin_slsqp; constraints=cons, **opts); File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:4514,optimiz,optimize,4514,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],['optimize']
Performance,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7243,perform,performance,7243,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['perform'],['performance']
Performance,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1816,perform,performance,1816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['perform'],['performance']
Performance,"ocations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes freque",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5423,perform,performance,5423,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['perform'],['performance']
Performance,"ocess to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7278,cache,cache,7278,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6375,cache,cached,6375,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['cache'],['cached']
Performance,"ome/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1315,optimiz,optimize,1315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"ommit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8679,cache,cache,8679,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"oni** July 18, 2022</sup>; Hi,. I'm running the inverse design case available in _`TestCases/optimization_euler/steady_inverse_design`_. While executing `python C:\SU2\bin\shape_optimization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:1210,optimiz,optimize,1210,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,2,['optimiz'],['optimize']
Performance,"ons-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-iteration is printed, which also tends to increase, but not monotonically. Additionally, it seems to get reset to 0 each time output is written:. ![grafik](https://user-images.githubusercontent.com/42602495/153232596-f815ff83-b0e8-49b8-9ee3-2bb1f176e2df.png). ~~What does this value in the history output actually mean? Is it time/iteration? I've noticed a performance degradation over time, but not to this extent (I've monitored the actual runtime only sporadically, though).; If the performance degradation is in fact so severe, what could be the cause?~~. I'd really be happy if one of the veterans could chip in their ideas here!</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:3226,perform,performance,3226,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,2,['perform'],['performance']
Performance,"ons/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9223,cache,cache,9223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"ons/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8823,cache,cache,8823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"or end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are ac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4875,perform,performance,4875,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['perform'],['performance']
Performance,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6214,race condition,race conditions,6214,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,8,"['perform', 'race condition']","['performance', 'race condition', 'race conditions']"
Performance,"ot be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1314,tune,tune,1314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['tune'],['tune']
Performance,out of bounds in optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:17,optimiz,optimization,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,1,['optimiz'],['optimization']
Performance,"ove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed wit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:1437,perform,performed,1437,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['perform'],['performed']
Performance,"p size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is having a robust solver. If it can handle flow simulations with odd geometries, you need to do less parameter tweaking. The reason you need good scaling is so that the optimizer doesn't explore difficult parts of the design space. If the simulation diverges, the optimization fails. Some intelligent handling of simulation divergences would also help the optimization framework.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:2165,optimiz,optimizer,2165,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,3,['optimiz'],"['optimization', 'optimizer']"
Performance,"p team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1159,perform,perform,1159,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['perform'],['perform']
Performance,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1393,optimiz,optimization,1393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"r clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:9248,optimiz,optimizable,9248,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['optimiz'],['optimizable']
Performance,"r that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2479,cache,cache,2479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"r upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3269,cache,cache,3269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,4,"['cache', 'perform']","['cache', 'performance']"
Performance,"rbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2721,cache,cache,2721,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"ref=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:4088,cache,cache,4088,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4352,cache,cache,4352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"rff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path argu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5359,cache,cache,5359,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"rise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1577,cache,cache,1577,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"rom <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10795,multi-thread,multi-threaded,10795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,"['multi-thread', 'perform']","['multi-threaded', 'performance']"
Performance,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:1090,Load,LoadRestart,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,2,"['Load', 'load']","['LoadRestart', 'loading']"
Performance,"s given to OPT_CONSTRAINT(e.g. OPT_CONSTRAINT=( AIRFOIL_THICKNESS>0)*0.001 like onepoint problem ), the error will occur as below. ; Traceback (most recent call last):; File ""/home/star/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/star/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/star/su2/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1146,optimiz,optimize,1146,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:1730,perform,performance,1730,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['perform'],['performance']
Performance,"s</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8502,perform,perform,8502,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['perform'],['perform']
Performance,"shal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3888,cache,cache,3888,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"sitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1055,optimiz,optimization,1055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance,"size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:13800,perform,performance,13800,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['perform'],['performance']
Performance,"source : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/Common/include/code_config.hpp#L42. is this a mistake?. this won't crash the code, but will most likely increase binary size when the purpose of NEVERINLINE is to prevent inlining. might cause performance degradation due to increasing binary size and causing instruction cache misses,. NEVERINLINE is being used in 2 places in the code base, one of them being in the simd numerics library : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/include/numerics_simd/flow/diffusion/common.hpp#L98. i didn't do any further tests. thanks",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1584:279,perform,performance,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1584,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"t makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:2088,optimiz,optimizer,2088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['optimiz'],['optimizer']
Performance,"tColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12669,perform,performance,12669,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance,"thon could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2905,optimiz,optimization,2905,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance,"thub.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9169,cache,cache,9169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"thub.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2541,cache,cache,2541,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"tion geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. If you see in Paraview that they are pointing inwards, the sign of the drag result must be swapped; - Compute the SU2 drag result by multiplying CD and the non-dimensional factor that can be found in the forces_breakdown.dat file; - You should get the forces that I mentioned in the text above. To reproduce the optimization itself, use the .cfg and the mesh file attached. Furthermore, the .geo file was used to create the mesh file with gmsh. You can find the files here:; [issue.zip](https://github.com/su2code/SU2/files/9138486/issue.zip). **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: g++ (GCC) 8.2.0; - MPI implementation and versi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:2236,load,load,2236,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['load'],['load']
Performance,"tion in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2062,cache,cache,2062,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1088,perform,performed,1088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['perform'],['performed']
Performance,"tion; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/shape_optimization.py"", line 187, in <module>; main(); File ""/o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:3171,optimiz,optimize,3171,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,2,['optimiz'],['optimize']
Performance,"to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1932,latency,latency,1932,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['latency'],['latency']
Performance,"to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a hre",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7407,cache,caches,7407,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['caches']
Performance,"to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has greater implications for gradients as instead of the familiar ""vector of matrices"" we would need a ""matrix of vectors"", i.e. the derivative of variable i w.r.t. coordinate j stored as a vector for all points. The `Adjacency` also needs to be stored in a funny way. For the scalar version of the code it was stored as a CSR sparse matrix (one array of indices into the arrays of data for each point, the rows).; For the vectorized version we want to load (small) arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly waste a lot of memory.; The solution is to use a Block-CSR format (like in CSysMatrix) where the blocks are the vectors we want and instead of one row per point we have one row per SIMD group. But even within a SIMD-sized group points can have different number of neighbors...; The solution for that is padding, within each group the number of neighbors is rounded up, shorter rows are then padded with valid data, e.g. jPoint=iPoint, direction=0, and iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:10484,load,load,10484,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,4,"['load', 'perform']","['load', 'performance']"
Performance,"tps://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2990,cache,cache,2990,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,try matlab or python scripting in conjuction with ABAQUS or ANSYS for introducing genetic algorithms or other simulation optimization methods.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003#issuecomment-637031316:121,optimiz,optimization,121,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-637031316,1,['optimiz'],['optimization']
Performance,"ts,accu); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1605,optimiz,optimize,1605,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"tter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3915,race condition,race conditions,3915,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['race condition'],['race conditions']
Performance,"ttps://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8627,cache,cache,8627,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ttps://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8201,cache,cache,8201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"ttps://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2363,cache,cache,2363,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"ttps://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/action",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:1937,cache,cache,1937,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance,"u2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/scipy/optimize/optimize.py"", line 292, in function_wrapper; return function(*(wrapper_args + args)); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/scipy_tools.py"", line 393, in obj_f; obj_list = project.obj_f(x); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 236, in obj_f; return self._eval(konfig, func,dvs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/opt/project.py"", line 205, in _eval; vals = design._eval(func,*args); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 150, in _eval; save_data(filename,self); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 253, in __exit__; os.chdir(origin); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/'. During handling of the above exception, another exception occurred:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:3045,optimiz,optimize,3045,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['optimiz'],['optimize']
Performance,"uction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Dif",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1344,perform,performance,1344,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['perform'],['performance']
Performance,ude used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking siz,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4215,cache,cached,4215,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"ummary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:957,Optimiz,Optimizations,957,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,"['Optimiz', 'optimiz']","['Optimizations', 'optimizations']"
Performance,"uncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6904,cache,cache,6904,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:98,optimiz,optimization,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['optimiz'],['optimization']
Performance,"use of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on gradients and limiters is the way the code is written, to vectorize the computation we need to compute the gradient into a local variable and then ""transpose"" it when storing it, i.e.; ```c++; FltVec phiI[MAXNVAR], gradI[MAXNVAR][MAXNDIM];; ...; for(size_t iVar=0; iVar<nVar; ++iVar); {; auto flux = weight*(phiI[iVar]+phi.getVec(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); gradI[iVar][iDim] += a_ij[iDim]*flux;; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:13605,perform,performance,13605,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['perform'],['performance']
Performance,"usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 313, in aerodynamics; funcs[key] = state['FUNCTIONS'][key]; KeyError: 'AIRFOIL_AREA'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:1758,optimiz,optimize,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,1,['optimiz'],['optimize']
Performance,"vironment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7720,cache,cache,7720,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"w` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear precondition",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2029,bottleneck,bottleneck,2029,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['bottleneck'],['bottleneck']
Performance,"we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4126,race condition,race conditions,4126,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['race condition'],['race conditions']
Performance,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:438,Perform,Performing,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,2,['Perform'],['Performing']
Performance,"when doing unsteady optimization in parallel, SU2 can not compute the gradients. Ive tested this issue on many cases (pitching, plunging, gist simulation, ....) with both SU2v4.0.0 and SU2-4.2.0 but each time the gradients are NaN. ; both flow and adjoint equations converged well and also the results on single possessor is ok.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296:20,optimiz,optimization,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/296,1,['optimiz'],['optimization']
Performance,with SU2_CFD (running in parallel mode and with PARAVIEW output); load_distribution.csv; is saved to disk when writing solution file frequency WRT_SOL_FREQ= xxx is passed; However it is not refreshed when SU2_CFD has found the final solution on Convergence criteria. After using parallel SU2_CFD one must run SU2_SOL to make the flow.vtk and surface_flow.vtk files but this action also does not make the latest version of the load_distribution.csv file. To obtain the final load_distribution.csv you can run SU2_CFD once more with EXT_ITER=1; But it would be nice if this last extra run would not be necessary. Possible related issue: Correct the output in the load distribution file. #106,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/703:661,load,load,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/703,1,['load'],['load']
Performance,"x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1476,optimiz,optimize,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance,"xes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5184,cache,cache,5184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:3426,optimiz,optimized,3426,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,1,['optimiz'],['optimized']
Performance,"y waste a lot of memory.; The solution is to use a Block-CSR format (like in CSysMatrix) where the blocks are the vectors we want and instead of one row per point we have one row per SIMD group. But even within a SIMD-sized group points can have different number of neighbors...; The solution for that is padding, within each group the number of neighbors is rounded up, shorter rows are then padded with valid data, e.g. jPoint=iPoint, direction=0, and iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already took care of that by rounding up the number of columns, and so that seemingly out-of-bounds access is safe (ain't encapsulation great). Padding also aligns the start of each column, thus it is a generally good thing to have (on large dimensions) whether used or not. Here is a relative performance recap before we talk bout parallelization. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core speedup (still relative to our reference) is **3.8** for the SIMD code and **2.8** for the scalar code. Parallelizing the edge loops is a bit more intricate, as this:; ```C++; for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Becomes:; ```C++; for(size_t color=",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:11828,perform,performance,11828,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['perform'],['performance']
Performance,"zure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3640,cache,cache,3640,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance,"{; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; size_t jPoint = adj.jPoint(iPoint,iNeigh);; size_t iEdge = adj.iEdge(iPoint,iNeigh);; double dir = adj.dir(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3498,race condition,race condition,3498,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['race condition'],['race condition']
Safety," 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a dimensional issue_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thou",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:2244,avoid,avoid,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['avoid'],['avoid']
Safety," Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] 23 more processes have sent help message help-mpi-api.txt / mpi-abort; [hongwei-Workstation:07803] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity exec su2.sif SU2_SOL inv_NACA0012.cfg ; /.singularity.d/actions/exec: 9: exec: SU2_SOL: not found; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity shell su2.sif ; Singularity su2.sif:~/SU2_RUN/QuickStart> SU2_SOL inv_NACA0012.cfg ; bash: SU2_SOL: command not found; Singularity su2.sif:~/SU2_RUN/QuickStart>; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:5482,abort,abort,5482,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['abort'],['abort']
Safety, [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.s,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:4655,abort,abort,4655,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety," case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubuser",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1856,detect,detect,1856,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['detect'],['detect']
Safety," exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3089,detect,detected,3089,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2405,risk,risk,2405,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['risk'],['risk']
Safety," the other gets a speedup of 1.5 (speedup should be 1.85 accounting for the matrix update optimizations).; I assumed that gradients and limiters are not fused and that minor areas of the code get no speedup, which is not necessarily true as this work would require contiguous storage of geometric properties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition within each MPI rank over a number of threads that need not be the same as that used for other areas. **SIMD**; - For gradients, limiters, and numerics a SIMD-friendly type will be used, by and large the high level code will look the same (see my examples above) but multiple points/edges will be processed simultaneously.; - No changes will be required to the data layout of CVariable, which means there will be no penalty to scalar code, new overloads for acce",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:1452,hazard,hazard,1452,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['hazard'],['hazard']
Safety," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5763,avoid,avoid,5763,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['avoid'],['avoid']
Safety,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:623,safe,safely,623,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,1,['safe'],['safely']
Safety,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:343,predict,prediction,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['predict'],['prediction']
Safety,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1170:309,redund,redundant,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170,1,['redund'],['redundant']
Safety,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:299,redund,redundant,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,1,['redund'],['redundant']
Safety,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1200:347,avoid,avoid,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200,1,['avoid'],['avoid']
Safety,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:574,safe,safety,574,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,1,['safe'],['safety']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:733,avoid,avoid,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['avoid'],['avoid']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:682,sanity check,sanity checks,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['sanity check'],['sanity checks']
Safety,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:410,avoid,avoid,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,1,['avoid'],['avoid']
Safety,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:192,redund,redundant,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,2,"['recover', 'redund']","['recovered', 'redundant']"
Safety,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:433,safe,safe,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,1,['safe'],['safe']
Safety,"## Proposed Changes; @rsanfer , @talbring please keep the testcases up to date with the new options you are introducing, avoidable bugs are starting to pass... ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:121,avoid,avoidable,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,1,['avoid'],['avoidable']
Safety,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:123,avoid,avoid,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:162,avoid,avoiding,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['avoid'],['avoiding']
Safety,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:182,detect,detected,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['detect'],['detected']
Safety,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:458,avoid,avoid,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:79,detect,detection,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['detect'],['detection']
Safety,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:69,avoid,avoid,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387:155,avoid,avoid,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:695,safe,safeguarded,695,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['safe'],['safeguarded']
Safety,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:255,avoid,avoiding,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,2,"['avoid', 'safe']","['avoiding', 'safe']"
Safety,"## Proposed Changes; Avoid calls to external functions when compiling in AD and the datatype becomes incompatible.; (The HAVE_LAPACK flag is compatible with AD in the RBF interpolation but not in the HOM feature).; @vdweide please have a look at this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:21,Avoid,Avoid,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['Avoid'],['Avoid']
Safety,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:972,predict,predicted,972,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['predict'],['predicted']
Safety,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:21,Detect,Detect,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,1,['Detect'],['Detect']
Safety,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:85,avoid,avoid,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897:126,avoid,avoided,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/897,1,['avoid'],['avoided']
Safety,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:96,detect,detect,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['detect'],['detect']
Safety,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388:248,sanity check,sanity check,248,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388,1,['sanity check'],['sanity check']
Safety,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129:706,avoid,avoid,706,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:164,predict,prediction,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['predict'],['prediction']
Safety,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:208,avoid,avoid,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:386,redund,redundant,386,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['redund'],['redundant']
Safety,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:150,detect,detect,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,2,['detect'],['detect']
Safety,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1372:135,redund,redundancy,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372,1,['redund'],['redundancy']
Safety,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:55,avoid,avoid,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['avoid'],['avoid']
Safety,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:54,predict,predicts,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['predict'],['predicts']
Safety,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:83,risk,risk,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['risk'],['risk']
Safety,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:1120,Avoid,Avoid,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['Avoid'],['Avoid']
Safety,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:542,avoid,avoid,542,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['avoid'],['avoid']
Safety,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:293,safe,safe,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['safe'],['safe']
Safety,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:129,safe,safe,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,3,"['avoid', 'safe']","['avoiding', 'safe']"
Safety,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:97,avoid,avoid,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['avoid'],['avoid']
Safety,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:363,avoid,avoid,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,1,['avoid'],['avoid']
Safety,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/873:58,detect,detected,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/873,1,['detect'],['detected']
Safety,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:236,avoid,avoid,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:131,avoid,avoids,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['avoid'],['avoids']
Safety,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:257,avoid,avoid,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:405,avoid,avoid,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,2,['avoid'],['avoid']
Safety,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:91,avoid,avoid,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['avoid'],['avoid']
Safety,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:105,safe,safe,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,2,['safe'],['safe']
Safety,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:54,detect,detection,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['detect'],['detection']
Safety,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1163:52,avoid,avoid,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163,1,['avoid'],['avoid']
Safety,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:588,detect,detected,588,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['detect'],['detected']
Safety,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:260,avoid,avoid,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507,1,['avoid'],['avoid']
Safety,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:586,avoid,avoid,586,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,1,['avoid'],['avoid']
Safety,"(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; size_t jPoint = adj.jPoint(iPoint,iNeigh);; size_t iEdge = adj.iEdge(iPoint,iNeigh);; double dir = adj.dir(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) += phi_ave*dir*area(iEdge,iDim);; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volum",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3618,avoid,avoids,3618,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['avoid'],['avoids']
Safety,") arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly waste a lot of memory.; The solution is to use a Block-CSR format (like in CSysMatrix) where the blocks are the vectors we want and instead of one row per point we have one row per SIMD group. But even within a SIMD-sized group points can have different number of neighbors...; The solution for that is padding, within each group the number of neighbors is rounded up, shorter rows are then padded with valid data, e.g. jPoint=iPoint, direction=0, and iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already took care of that by rounding up the number of columns, and so that seemingly out-of-bounds access is safe (ain't encapsulation great). Padding also aligns the start of each column, thus it is a generally good thing to have (on large dimensions) whether used or not. Here is a relative performance recap before we talk bout parallelization. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core sp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:11644,safe,safe,11644,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['safe'],['safe']
Safety,");; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec lim = vmin(FltVec(2.0), vmin(; (phiMax[iVar]-phi.getVec(iPoint,iVar))/prjMax[iVar],; (phiMin[iVar]-phi.getVec(iPoint,iVar))/prjMin[iVar]));. limiter.setVec(iPoint,iVar, lim*(lim+2.0)/(lim*lim+lim+2.0));; }; }; }; ```; In terms of algorithm, for each point we find the min and max neighbor values and the min (negative) and max (positive) projections, those are then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 ti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:9835,recover,recovered,9835,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['recover'],['recovered']
Safety,"**Describe the bug**. For optimising a symmetric NACA 0012 airfoil, SU2 does not detect the `AIRFOIL_THICKNESS` automatically as it does for the complete geometry. . When `SU2_GEO` is utilized, it stops at the following stage without evaluating `AIRFOIL_THICKNES`, `AIRFOIL_TOC` and etc. -------------------- Objective function evaluation ----------------------. Station 1. YCoord: 0 m,. Due to this, I can't set an `OPT_CONSTRAINT` for the simulation. Please help me if there is a workaround for this. **Desktop (please complete the following information):**; - OS: WINDOWS; - C++ compiler and version: WINDOWS POWERSHELL; - SU2 Version: 7.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1543:81,detect,detect,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1543,1,['detect'],['detect']
Safety,"**Describe the bug**. In Arch Linux, `ninja` binary detection is wrong. Let's see a minimal extract of [`build_ninja()`](https://github.com/su2code/SU2/blob/v8.1.0/preconfigure.py#L36-L74). ```python; # File located at /tmp/main.py; import sys; import os; import subprocess. try:; subprocess.run(; [sys.path[0] + os.path.sep + ""ninja"", ""--version""], stdout=subprocess.PIPE; ); except OSError:; print(""ninja executable not found. Building ...""); subprocess.run(; args=[; subprocess.run(; args=[""which"", ""ninja""], capture_output=True, text=True; ).stdout.strip(),; ""--version"",; ],; stdout=subprocess.PIPE,; ); subprocess.run([""ninja"", ""--version""]). subprocess.run([""pwd""]); print(sys.path[0]); ```. ```plain; ninja executable not found. Building ...; 1.12.1; /tmp; /tmp; ```. **Desktop**; - OS: Arch Linux; - SU2 Version: v8.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2364:52,detect,detection,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/2364,1,['detect'],['detection']
Safety,"**Describe the bug**. Maybe ""it's not a bug, it's a feature"", but:; I can for example select a field for output; SCREEN_OUTPUT= INNER_ITER ; or use the group,; SCREEN_OUTPUT= ITER; which is equivalent to choosing the fields INNER_ITER, OUTER_ITER, TIME_ITER. But for HISTORY_OUTPUT, I can only choose the group. This leads to a lot of data in the history file if I want to know what happens at a number of markers. So I would like to do this:. HISTORY_OUTPUT= (INNER_ITER, SURFACE_MASSFLOW). to get 2 columns in my history file. Instead I have to do this:. HISTORY_OUTPUT= (ITER, SURFACE_MASSFLOW). which leads to a lot of columns. Is there a reason that only groups are allowed or can this limitation be lifted safely?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1493:712,safe,safely,712,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493,1,['safe'],['safely']
Safety,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992:704,avoid,avoided,704,https://su2code.github.io,https://github.com/su2code/SU2/issues/992,1,['avoid'],['avoided']
Safety,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/988:416,Abort,Aborted,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/988,1,['Abort'],['Aborted']
Safety,"**Describe the bug**; During the last weeks of 2021, two different periodic flow scenarios have been investigated ( #1523 ).; While setting the periodic boundary conditions, the 2D-divergent wedge case solution seemed to be negatively affected even after the precious suggestions and corrections received in the quoted discussion. . Consequently, different test cases have been simulated again to avoid any possible mistake.; Scenarios investigated are better explained here below:; - **Rectangular Duct** . _2D case_ ; ![2022-03-13 (3)](https://user-images.githubusercontent.com/96534491/158036413-52921fc0-3ae9-464c-b9f9-1ef6b4075ecf.png). _3D case_ ; ![2022-03-13 (5)](https://user-images.githubusercontent.com/96534491/158036422-9fba20d1-9757-40a2-93f6-e4b05aeac2de.png). - **Divergent Wedge**. _2D case_ ; ![2022-03-13 (2)](https://user-images.githubusercontent.com/96534491/158036446-959ee5d1-f394-48c5-8ce6-383a1dc8d3a6.png). _3D case_ ; ![2022-03-13 (12)](https://user-images.githubusercontent.com/96534491/158036910-39f879f2-3c74-4735-b416-212f17181933.png). Meshes have been realized with ICEM CFD, then correctly converted into .cgns (adf) format. The results obtained are the following:. - 2D Rectangular Duct (Translational Periodicity) --> **Converged**; - 3D Rectangular Duct (Translational Periodicity) --> **Converged**; - 2D Divergent Wedge (Rotational Periodicity) --> _**Diverged**_; - 3D Divergent Wedge (Rotational Periodicity) --> **Converged**. It is suggested that this solution behavior might be traced to a bug.; It has also been observed that the converged simulations are providing consistent results only for the following convective scheme and time discretization settings: . CONV_NUM_METHOD_FLOW = ROE; MUSCL_FLOW = NO; TIME_DISCRE_FLOW = EULER_IMPLICIT. **To Reproduce the simulations**. _2D Rectangular Duct_; [channel2D.txt](https://github.com/su2code/SU2/files/8238476/channel2D.txt). _3D Rectangular Duct_; [channel3D.txt](https://github.com/su2code/SU2/files/8238",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562:397,avoid,avoid,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562,1,['avoid'],['avoid']
Safety,"**Describe the bug**; Hi all, . I noticed some issues with restarts (primal only and for the primal-iteration in the discrete adjoint). I do the following:; 1. Run a simulation with X+1 iterations. The residuals of the X+1st iterations are basically what we try to recreate in the restarted version. This is the ground truth; 2. Run a simulation with X iterations. This gives us a file to restart from. (A good sanity check with the 1. simulation is to diff with the history file to see whether the simulations are deterministic at all); 3. Run a primal restarted simulation from the restart file of 2. with just 1 iteration. The residuals should match the results of 1.; 4. Run an adjoint simulation with the restart file of 2. . The residuals should match the results of 1. What you will see in the following is 3 lines with multiple residual values each. The first line corresponds to the X+1st history entry of simulation 1. (the ground truth). The second line is the restarted primal from simulation 3., also last history line. The third line is from the adjoint-primal-restart, grabbed from the screen output with OUTPUT_PRECISION=12 (see #1394 ); ```; 1.res[1], 1.res[s] ...; 3.res[1] ....; 4.res[1]; ```. Of course the best outcome would be 3 identical lines ... which we dont get :(. ## Pin Array setup 2D - Fluid Only. (p, vx, vy, T, k, w); 200 iterations; ```; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; -7.16607941386 -7.34805457325 -6.99877222345 -1.01313133295 -8.55717653108 -1.6476144338; ```; everythings fine 👍 . ## Pin Array setup 2D - Solid Only. Note that this will only work with the fix in #1394 . 10 iterations (8 Linear Solver Iter); ```; -6.83193258622; -6.83193258622; -6.83193258622; ```. 10 iterations (10 Linear Solver Iter); ```; -7.38737630018; -7.38737630016; -7.38737630016; ```. 10 iterations (20 Linear Solver Iter); ```; -8.927",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:411,sanity check,sanity check,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['sanity check'],['sanity check']
Safety,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:619,avoid,avoid,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['avoid'],['avoid']
Safety,"**Desktop (please complete the following information):**; - OS: [e.g., WSL (Mint 21.2)]; - C++ compiler and version: [e.g., g++ (GCC) 11.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.1.2]; - SU2 Version: [e.g., v7.5.1]; ; I compile SU2 with ; ```; export CXXFLAGS=""-march=native -funroll-loops -O2""; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=/opt/su2; ./ninja -C build install; ```. And it compiles successfully. When I run **QuickStart** with ``` mpirun -n 2 SU2_CFD inv_NACA0012.cfg```, it can run sucessfully, but when I run serial with ``` SU2_CFD inv_NACA0012.cfg```, I get a error:; ```; [DESKTOP-7ALPJDS:00356] *** An error occurred in MPI_Win_create; [DESKTOP-7ALPJDS:00356] *** reported by process [235864065,0]; [DESKTOP-7ALPJDS:00356] *** on communicator MPI_COMM_WORLD; [DESKTOP-7ALPJDS:00356] *** MPI_ERR_WIN: invalid window; [DESKTOP-7ALPJDS:00356] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [DESKTOP-7ALPJDS:00356] *** and potentially your MPI job); ```. It seems that SU2 was able to run successfully in parallel, but something went wrong with running serially.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2104:972,abort,abort,972,https://su2code.github.io,https://github.com/su2code/SU2/issues/2104,1,['abort'],['abort']
Safety,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:1198,safe,safely,1198,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,1,['safe'],['safely']
Safety,"**Is your feature request related to a problem? Please describe.**; Per our previous discussion with @pcarruscag, [in this pull request](https://github.com/su2code/su2code.github.io/pull/99), the Barth-Jesperson flux limiter is actually implemented as the Venkat limiter. This ticket is noting the issue so it can be resolved at a later date. **Describe the solution you'd like**; An implementation of the BARTH_JESPERSON limiter. . **Describe alternatives you've considered**; Complete removal of the BARTH_JESPERSON limiter option to avoid confusion in the future. **Additional context**; To demonstrate the issue, we have modified the [flow over a cylinder test case](https://github.com/su2code/SU2/blob/master/TestCases/navierstokes/cylinder/lam_cylinder.cfg). The SLOPE_LIMITER_FLOW option was set to ""VENKATAKRISHNAN"" (VENKAT_LIMITER_COEFF = 0.0), ""BARTH_JESPERSON"", and ""NONE."" The results of these are shown below. Both VENKATAKRISHNAN and BARTH_JESPERSON yielded exactly the same results, and NONE was different. These results demonstrate that the limiters are implemented as described above. Flow over a cylinder test case. Results were extracted along a line at y=0 across the center of the domain:; This issue ticket written in collaboration with @tomtom252525; ![Limiter_Comp](https://user-images.githubusercontent.com/112184708/205416320-c5c45bcd-5157-4e3f-bfd1-2e9849e2a8e4.jpg); ![Momentum_Comp](https://user-images.githubusercontent.com/112184708/205416327-7eb3b01c-2eff-4f5a-953c-80cdc1820ef2.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1841:536,avoid,avoid,536,https://su2code.github.io,https://github.com/su2code/SU2/issues/1841,1,['avoid'],['avoid']
Safety,"**Is your feature request related to a problem?** . At any boundary that is not a Neumann-zero boundary ($\nabla \vec{V} \cdot \hat{n} = 0$) the gradients computed are incorrect, as they are all computed assuming that at boundaries $\vec{q}_i = \vec{q}_j$. . For example, for a Riemann boundary condition we have a certain imposed external state $\vec{q}_e$ but this is not considered in the computation of gradients. In my experience, this issue is exacerbated when using MUSCL reconstruction at corners shared by walls and Riemann boundaries, particularly in NICFD cases, as it can cause divergence of the solver and/or unphysical solutions. . **Describe the solution you'd like**. The solution is not easy as ideally it would require storing all ""external"" states for the computation of gradients. One may need to choose if swapping the order of the computation of boundary residuals and of gradients to avoid double computations, but it may be inefficient for MPI. **Describe alternatives you've considered**. One could also disable MUSCL at corner/boundary nodes which would require saving which points are corners. This is a 1st order approximation locally, but my opinion is that the current assumption that $\vec{q}_i = \vec{q}_j$ is also lower order. Another possibility is correcting boundaries after they have been computed by summation/subtraction, before the upwind residual computations. **Additional context**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285:907,avoid,avoid,907,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285,1,['avoid'],['avoid']
Safety,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; Not really a bug, but compiler warnings that can be avoided easily. In the file SU2_CFD/include/numerics/NEMO/NEMO_diffusion.hpp, class CAvgGradCorrected_NEMO, the variables iDim and iVar are defined, which are used as counters as far as I can tell. First of all I don't think such variables should not be defined as member variables of a class, but if you do then don't define variables with the same name in the implementation of the member functions. In this case in SU2_CFD/src/numerics/NEMO/NEMO_diffusion.cpp. It is causing a lot of compiler warnings in combination with the Intel compiler, which makes it more difficult to see the warnings that actually matter. If you want I can fix this, but maybe it is better if somebody with a NEMO background does it. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - C++ compiler and version: Intel compilers version 19.1.0.166; - MPI implementation and version: Intel MPI; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1916:182,avoid,avoided,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1916,1,['avoid'],['avoided']
Safety,", March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:2522,safe,safelinks,2522,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160,1,['safe'],['safelinks']
Safety,", which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2848,avoid,avoided,2848,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['avoid'],['avoided']
Safety,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406:251,Detect,Detecting,251,https://su2code.github.io,https://github.com/su2code/SU2/pull/406,1,['Detect'],['Detecting']
Safety,--------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated norm,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:1760,abort,abort,1760,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['abort'],['abort']
Safety,"-------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -3.358218| 2.356417| 0.021774| 45.825257| -2.955766|; ...; | 12377| -11.999782| -15.033189| -10.208063| 0.003434| 0.989679| -4.378694|; | 12378| -12.000141| -15.033858| -10.208411| 0.003434| 0.989679| -4.378353|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:1579,detect,detected,1579,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206,1,['detect'],['detected']
Safety,"---------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Key 0 not found!; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[54379,1],4]; Exit code: 254; --------------------------------------------------------------------------; ``` . Do you know what `Key 0` might be referring to? Thanks and regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:4089,abort,aborted,4089,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,2,"['abort', 'detect']","['aborted', 'detected']"
Safety,"------------; All convergence criteria satisfied.; ```. **`SU2_CFD multizone.cfg` in `issue_simplified/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.259741| -0.741089|; | 1| -1.224321| -2.240439|. ...; | 841| -0.356891| 0.285076|; | 842| -0.124937| 0.178422|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. **`mpirun SU2_CFD mz-0.cfg` in `issue_complicated/singlezone`** with 24 MPI ranks (because it needs so many iterations) gives; ```; +----------------------------------------------------------------+; | Inner_Iter| Time(sec)| rms[Rho]| CL| CD|; +----------------------------------------------------------------+; | 0| 4.5727e-02| -3.131336| -0.000000| 47.049080|; | 1| 3.9651e-02| -3.399537| -0.000000| 43.567743|; ...; | 1304734| 3.6630e-02| -12.000000| -0.000000| 1.003811|; | 1304735| 3.6630e-02| -12.000003| -0.000000| 1.003811|. ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; ```. **`SU2_CFD mz-all.cfg` in `issue_complicated/multizone`** gives; ```; +--------------------------------------+; | Multizone Summary |; +--------------------------------------+; | Outer_Iter| avg[bgs][0]| avg[bgs][1]|; +--------------------------------------+; | 0| -0.937734| -2.766626|; | 1| -2.167353| -6.482096|. ...; | 6546| -0.859233| -0.793018|; | 6547| -0.865290| -0.739081|. Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206:2878,detect,detected,2878,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-1432681206,1,['detect'],['detected']
Safety,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1575,recover,recovers,1575,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['recover'],['recovers']
Safety,".6455e-02| 9| 1.0000e+02| -8.116638| -6.253576| -6.088205| -2.591315| -6.098708| 2.464595| 3.6910e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6910e+05| -1.7511e-12| 7.4888e-13| 0.0000e+00| 0.0000e+00| 0.0000e+00|; | 2000| 12| 5.0000e-08| 1.6035e-02| 9| 1.0000e+02| -8.700803| -6.595298| -6.652705| -3.158904| -6.897678| 1.470020| 3.6910e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6910e+05| -3.5221e-12| 1.5395e-13| 0.0000e+00| 0.0000e+00| 0.0000e+00|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 binary restart |Flow_Restart_Convection_ZeroRestart_02000.dat|; |Paraview |Volume_Output_Convection_ZeroRestart_02000.vtu|; |CSV file |Surface_Output_Convection_ZeroRestart_02000.csv|; +-----------------------------------------------------------------------+; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+; | Time_Iter| Inner_Iter| Cur_Time| Time(sec)|Linear_Solve| Max CFL| rms[Rho]| rms[RhoU]| rms[RhoV]| rms[RhoE]| rms[k]| rms[w]| Avg_Press|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|HF(NS_Resona|HF(NS_Resona| tavg[HF]|tavg[Avg_Pre|tavg[Avg_Tem|; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+. Error in ""void CSolver::SetResidual_RMS(const CGeometry *, const CConfig *)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347:3832,detect,detected,3832,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347,1,['detect'],['detected']
Safety,".\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1176,avoid,avoided,1176,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['avoid'],['avoided']
Safety,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6721,timeout,timeout,6721,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['abort', 'timeout']","['aborting', 'timeout']"
Safety,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1358,Abort,Aborted,1358,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,1,['Abort'],['Aborted']
Safety,"/user-images.githubusercontent.com/46273732/74617122-a3003500-50f9-11ea-9a0f-1db78a9d4d04.png); ![Tt comparsion](https://user-images.githubusercontent.com/46273732/74617123-a3003500-50f9-11ea-9f86-decee9d097b4.png); ![Turb comparsion](https://user-images.githubusercontent.com/46273732/74617124-a4316200-50f9-11ea-8e10-bc7dcbb0e8c6.png). I am also attaching my python plotting results in case someone wants to reproduce the graphs and/or look at the equations in detail. [plotting_script.txt](https://github.com/su2code/SU2/files/4217388/plotting_script.txt). Please note that the inlet file was created with random fluctuating values to ensure correct inlet interpolation is happening. Some values and patterns may look unrealistic. Additionally, note that Akima can extrapolate values as well but will display a warning if it is doing so. Linear will only do interpolation and will exit if the inlet file does not have the specific radius data. However, it will show on the console which radius data is missing so the user can add it. Also, currently, the flow should be in z-direction only. I don't know how to find the flow direction through any built-in method in SU2 during run. If you can tell me that I can update the code to support any flow direction. During interpolation, it will display that flow direction must be in z-direction to avoid any mistake by the user. Thanks,; Aman. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:4273,avoid,avoid,4273,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['avoid'],['avoid']
Safety,"2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 63 of; ""../SU2_CFD/src/output/../../include/solvers/../../../Common/include/geometry/elements/CGaussVariable.hpp"". compilation aborted for ../SU2_CFD/src/output/CHeatOutput.cpp (code 2). Could the issue be because of C++-11 features not being supported by the compiler I am using? I am using Intel Parallel Studio 2017. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620066614:2571,abort,aborted,2571,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614,1,['abort'],['aborted']
Safety,"4138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compile",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:2880,abort,aborted,2880,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['abort'],['aborted']
Safety,"457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedback on this issue. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:5344,abort,aborted,5344,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['abort'],['aborted']
Safety,"67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:1280,timeout,timeout,1280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['timeout'],['timeout']
Safety,"7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3416,Sanity check,Sanity check,3416,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Sanity check'],['Sanity check']
Safety,"8bad981c0d0386d855daa8fbd340'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; Downloading Mutationpp '5ff579f43781cae07411e5ab46291c9971536be6'; Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 95, in init_submodules; download_module(mpp_name, alt_name_mpp, github_repo_mpp, sha_version_mpp); File ""/okyanus/admin/paketler/su2code-SU2-790ded8/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 247, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 222, in urlopen; return opener.open(url, data, timeout); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 531, in open; response = meth(req, response); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 640, in http_response; response = self.parent.error(; File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 569, in error; return self._call_chain(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 502, in _call_chain; result = func(*args); File ""/okyanus/progs/Python/Python-3.8.7-mpich-3.4.1-gcc-8.3.0/lib/python3.8/urllib/request.py"", line 649, in http_error_default; raise HTTPError(req.full_url, code, msg, hdrs, fp); urllib.error.HTTPError: HTTP Error 404: Not Found; ```; # Solution; You should edit meson_scripts/init.py file, and replace line56:; ```; github_repo_mpp = 'https://github.com/mutationpp/Mutationpp.git'; ```; with this line:; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1191:1276,timeout,timeout,1276,https://su2code.github.io,https://github.com/su2code/SU2/issues/1191,1,['timeout'],['timeout']
Safety,:+1: Is there something that can be tweaked in the implementation of the NdFlattneer to mitigate this issue? Either avoiding displs[0] != 0 or handling the single rank case manually?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397480249:116,avoid,avoiding,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397480249,1,['avoid'],['avoiding']
Safety,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:3123,Abort,Aborted,3123,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['Abort'],['Aborted']
Safety,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:6685,Abort,Aborted,6685,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['Abort'],['Aborted']
Safety,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:1752,Timeout,Timeout,1752,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,1,['Timeout'],['Timeout']
Safety,"> . Hi Pedro, thanks for your reply. I don't know how to safely typedef the mlpdouble type the way you suggested. I thought you meant that I just had to copy the way su2double was defined in `code_config.hpp`, but I guess that's not right. Do you know an example showing how this works?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1498919360:57,safe,safely,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1498919360,1,['safe'],['safely']
Safety,"> > I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .; > ; > There is the geometry toolbox for dot product and normal: https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm. The problem is more related to the finding of the wall-normal for a point within the volume mesh, not to the computations that it will be involved in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350:452,recover,recover,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350,1,['recover'],['recover']
Safety,"> @jtneedels Im a bit confused why this is necessary? Why do files need extra lines? versus not?. Github flags it as an issue, I think the main concern is it can cause problems when files are concatenated. Basically just a ""better safe than sorry"" situation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1391#issuecomment-934104439:231,safe,safe,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391#issuecomment-934104439,1,['safe'],['safe']
Safety,"> @sun5k please take care of the two comments above from my last review, and add regressions for your 2 tutorials (see what is done in TestCases/tutorials.py. Then I think we can merge this PR!. I'm seeing TestCases/tutorials.py. I have some questions about the code.; In the tutorials.py in transition flat plate for the BC model. . tutorial_trans_flatplate = TestCase('transitional_flatplate_tutorial'); tutorial_trans_flatplate.cfg_dir = ""../Tutorials/compressible_flow/Transitional_Flat_Plate""; tutorial_trans_flatplate.cfg_file = ""transitional_BC_model_ConfigFile.cfg""; tutorial_trans_flatplate.test_iter = 0; tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952] #last 4 columns; tutorial_trans_flatplate.su2_exec = ""mpirun -np 2 SU2_CFD""; tutorial_trans_flatplate.timeout = 1600; tutorial_trans_flatplate.tol = 0.00001; tutorial_trans_flatplate.no_restart = True; test_list.append(tutorial_trans_flatplate). I guess, ; ""tutorial_trans_flatplate.test_iter"" is a number of iterations,; ""tutorial_trans_flatplate.su2_exec"" is the command for SU2_CFD,; ""tutorial_trans_flatplate.timeout"" is the maximum program running time, ; ""tutorial_trans_flatplate.tol"" is a tolerance for convergence criteria,; ""tutorial_trans_flatplate.no_restart"" is a restart option. . I can't understand this whole sentence.; ""tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952]"". Could you explain what's meaning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724:799,timeout,timeout,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724,2,['timeout'],['timeout']
Safety,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:158,avoid,avoid,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,2,['avoid'],['avoid']
Safety,"> I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp . There is the geometry toolbox for dot product and normal:; https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp; just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269:450,recover,recover,450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269,1,['recover'],['recover']
Safety,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:342,detect,detect,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,1,['detect'],['detect']
Safety,"> If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Ok!. ; > Out of curiosity, do you use the windowing feature to discard a few initial time steps?. No not directly. The idea and motivation was, that I didn't want to wait until the transient phase of the flow field is computed. So I use a precomputed restart file, which serves as a better ""inital guess"" than freestream values. Then, so the idea, the transient phase is skipped for the first design, and it is at least shortened for other designs. This way, we safe CPU time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627769844:604,safe,safe,604,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627769844,1,['safe'],['safe']
Safety,"> Maybe we can avoid creating another instance is the surface_movement pointer is not nullptr when the init function is called? In CDriver we would just make sure all surface_movement are initialized to nullptr. Yeah, that would be an alternative to creating `surface_movement` per instance. It's the easier fix but I am not sure if the resulting behaviour would be correct either. @maxaehle have you tried this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018787319:15,avoid,avoid,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018787319,1,['avoid'],['avoid']
Safety,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:209,detect,detect,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,2,['detect'],['detect']
Safety,"> Note that you need to checkout this branch `fix_2d_periodic_rotation` (it is not in `develop` yet). Hi Pedro,; I checked the files you sent but building SU2 from source provided some errors:. - _MinGW64_ files provided from SU2 official website are corrupted and the installation crashes; however, it is possible to install the software but the .exe file mentioned in the installation guide won't be present. ; - After building _meson.py_ , the ninja installation command was line typed and the following alert message appeared "" **ninja: fatal: chdir to 'build' - No such file or directory** "". On a different laptop (with different user, to avoid the same mistakes) the following ERROR came up after the mason.py command line:; "" **'meson.py' is not recognized as an internal or external command, operable program or batch file** "". I don't know if any other user might have experienced the same errors. ; Anyway, are the bugfix files you published already available in the pre-compiled version? ; In the meanwhile, I'll try to figure out this inconvenient. Thank you in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722:645,avoid,avoid,645,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722,2,['avoid'],['avoid']
Safety,"> Regrading the results: Why do we not see the dip in skin friction coefficient for low Reynolds like we see in the paper of Rumsey? The paper shows that predicting this dip is a feature of the model, and it makes it different from the van Driest theory. I thought it depended on the grid resolution. The case of fine resolution grid(545 x 385), we can see ""dip"" in SU2 result(but relatively small). . ![image](https://github.com/su2code/SU2/assets/50565314/35739361-fa48-4710-aaea-97daf8ccf7cc); ![image](https://github.com/su2code/SU2/assets/50565314/50025c47-35c8-4480-aec1-1a3f17cf2342). From the ""Coarse-Zoom"" plot, The ""dip"" in coarse mesh(138 x 97) also appears in SU2, but it is really weak.; ![image](https://github.com/su2code/SU2/assets/50565314/0a1cd730-b321-47c9-aaee-1647bb696898); ![image](https://github.com/su2code/SU2/assets/50565314/0d60d026-ab8e-4cbf-b3ec-439ae67b5c96)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113:154,predict,predicting,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113,1,['predict'],['predicting']
Safety,"> Thank you for the detective work @yiren6 👍 We may need to consider changing the extension for OSX or create a symbolic link during the installation process. @patelha57 can you try the solution that yieren6 found?; > ; > As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here [b2ddd96](https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8) (at least that line 558 changed). When using code from a pull request you can have a look at the regression tests #1300 (bottom of the page) to get an idea if some issues might still be work in progress. Hey Pedro! Yup, we worked side-by-side to figure this issue out, we're actually labmates (small world!). I can also confirm that `pysu2` & `pysu2ad` are imported without errors on my OSX laptop. My environment is:. - Homebrew package manager; - GCC GNU compiler 11.2.0; - Python 3.9.12; - OpenMPI 4.1.3; - mpi4py 3.1.3; - swig 4.0.2. To summarize, the main change was to add `name_suffix: 'so'` option to `/SU2_PY/pySU2/meson.build`. This forces the output of `_pysu2.so` & `_pysu2ad.so` instead of OSX default of `_pysu2.dylib` & `_pysu2ad.dylib` for shared libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598:20,detect,detective,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598,1,['detect'],['detective']
Safety,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:220,avoid,avoid,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637,1,['avoid'],['avoid']
Safety,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:1297,detect,detected,1297,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,1,['detect'],['detected']
Safety,"> This is too hacky, mixing the iteration counts and adding +1 here and there. Doesn't look safe. We should of course first update the iteration count, and then check the convergence criteria for this iteration. ; Now [edit: in develop branch] the +1 is inside the monitor() function and monitor(iter) actually checks if iter+1 fulfills the convergence criterion, which is not what the stopping criterion should be. If we correct this, then all python files that use this have to be re-ordered a bit. I still have to check if there are other places where we make use of the fact that the current iteration is actually Iter+1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066:92,safe,safe,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066,1,['safe'],['safe']
Safety,"> Thrust should be -11.12N and torque 0.8329Nm, not accounting for number of blades. Is that closer to what you expect?; > ; > The coefficients are computed with a reference velocity based on Mach motion, but the dimensional factor shown in the breakdown file considers the free stream velocity instead... (silly and avoidable bug). How did you get the values of -11.12N and 0.8329Nm from the breakdown file, and output file? I'm not sure where/how to calculate it. I'm new at SU2. and want to use it for VAWT torque calcs, so stumbled upon this discussion in my searches. Many thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-1946975666:317,avoid,avoidable,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-1946975666,1,['avoid'],['avoidable']
Safety,"> What if you start with the ""perturbed value"" of AoA and then set it to the correct value for the FD step?. Mhmm, I am just thinking this through. At the end of the fixed_cl part, the flow is converged to the `TARGET_CL` and is at some angle of attack `alpha`. If I wanted to start from the perturbed value and set it to the final value of `alpha`, I would have to first, converge it to the perturbed value (`alpha + 0.001`), and then perform the finite difference step back to `alpha`. This would take approximately twice the number of `ITER_DCL_DALPHA` to perform. Which isn't the end of the world, but I would like to avoid if possible. Is there a cleverer way of doing this that I am not thinking off? The problem is that we don't know the final `alpha` until the fixed_cl simulation converges.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539575775:622,avoid,avoid,622,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539575775,1,['avoid'],['avoid']
Safety,"> You are proposing the exact opposite of the conclusion of the paper:; > ; > ""From the above findings, it is **recommended that all three of these terms be included** when running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with shock wave-induced separations.""; > ; > And they clearly say this: ""While the full inclusion of these terms does not always result in predictions that agree better with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out effects of other flaws in the RANS models employed.""; > ; > If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy. Thank you for your comment @bigfooted . The above paper is not presented to improve the current k-w SST model. . As you can see in the first post, there is a problem with the high Mach number and freestream turbulence intensity case. If high turbulence kinetic energy(TKE) and Mach number condition, the boundary condition cannot be maintained the imposed value. (I think there seems to be a bug in the temperature calculation using total energy when including the TKE). The introduction of C1 was intended to provide a 'temporary' solution at the level of first aid (simply commenting out conditional statements in code).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702:401,predict,predictions,401,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702,2,['predict'],['predictions']
Safety,"> generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication. Actually I just noticed there is no `CAdjNEMOOutput` or similar. Not sure @WallyMaier , but is the NEMO-tribe not doing in adjoints?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461#issuecomment-985070634:79,avoid,avoid,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461#issuecomment-985070634,1,['avoid'],['avoid']
Safety,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:77,avoid,avoiding,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235,1,['avoid'],['avoiding']
Safety,">; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6292,timeout,timeout,6292,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['abort', 'timeout']","['abort', 'timeout']"
Safety,">Do I understand correctly that the roughness height does not influence the wall distance calculation itself?... @pcarruscag , Yes. I can use the markerID to find the corresponding roughness as long as the field element and the nearest wall marker are on the same rank. I was not sure how to relate the markerID on rankID from a different rank to the global config list, hence the current implementation. I am open to fixing it with a different implementation if I can figure out how to actually do it. The few things I tried all ended up causing problems and this was one way to avoid them (also my inexperience with MPI did not help).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-596708744:580,avoid,avoid,580,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-596708744,1,['avoid'],['avoid']
Safety,">Therefore, we try to avoid templates when possible …. I find this view strange. I would appreciate if current C++ software techniques can be applied. How much can they help to make the source code a bit simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360055094:22,avoid,avoid,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360055094,2,['avoid'],['avoid']
Safety,"@; *GomerOfDoom <https://github.com/GomerOfDoom>*. *Then it makes sense why I am having this trouble. Thank you for letting me; know. This helps a lot. I will try to figure this one out atleast for my; case, what I can do. Appreciate your response! *. On Mon, Mar 16, 2020 at 7:36 PM Paul <notifications@github.com> wrote:. > I can also confirm that there is an issue with the *binary* Paraview; > output for large files. The code appears to write out the .vtu file just; > fine, but Paraview throws errors when attempting to open it. This does not; > occur for ASCII format Paraview files or smaller binary Paraview files. The; > case I am working on consists of a 180 million cell mesh.; >; > Also, @monika1387 <https://github.com/monika1387> , please note that the; > DG-FEM LES capability is *not* currently fully validated, and may be; > unstable in certain circumstances. Use this at your own risk. We are; > working on fixes for the DG solver, but they are still a ways away from; > being finished.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-599805153>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXCKD44SRSZPDWKSDM3RH2ZZFANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599807771:899,risk,risk,899,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599807771,1,['risk'],['risk']
Safety,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:671,avoid,avoid,671,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,2,['avoid'],['avoid']
Safety,"@TobiKattmann,; In the Airfoil_2D case, why are the surfaces detected as straight? Also the messages are a bit strange:; Boundary marker leading_edge is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker pressure_side is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker suction_side is a single straight.; Boundary marker 0.0 is a single straight.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537167522:61,detect,detected,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537167522,1,['detect'],['detected']
Safety,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:74,detect,detects,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['detect'],['detects']
Safety,"@economon Right now, Euler & Sym can be used interchangeably in both (incomp. & comp.) solvers. One could safely remove one but keeping both is reasonable I guess as both BC are expected by users and maybe the implementation deviates in the future.; Both will give the same results, independent of the 'curvyness' of the boundary (as that is checked in a preprocessing step). Bonus info: Comp & Incomp implementations are identical, so if a higher-level FlowSolver is implemented, EulerWall and SymBC could move up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536898493:106,safe,safely,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536898493,1,['safe'],['safely']
Safety,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:224,risk,risk,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['risk'],['risk']
Safety,"@economon the rotating_cylinder case is running well with CGNS mesh input.; However when it reaches the File output part, I get an error :; *** Error in `/opt/SU2/SU2_CFD': munmap_chunk(): invalid pointer: 0x000000000b547cd0 ***; ======= Backtrace: =========; #0 0x00007ffff66841f7 in raise () from /lib64/libc.so.6; #1 0x00007ffff66858e8 in abort () from /lib64/libc.so.6; #2 0x00007ffff66c3f47 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66c9b54 in malloc_printerr () from /lib64/libc.so.6; #4 0x000000000045c95e in COutput::DeallocateConnectivity_Parallel(CConfig*, CGeometry*, bool) (); #5 0x000000000045c41f in COutput::SetResult_Files_Parallel(CSolver*****, CGeometry****, CConfig**, unsigned long, unsigned short) (); #6 0x0000000002191a5f in CMultizoneDriver::Output(unsigned long) (); #7 0x00000000021918b1 in CMultizoneDriver::StartSolver() (); #8 0x0000000001620fe1 in main (). I haven't investigated much but I don't have the problem with the SU2 mesh.; Maybe there is a problem with the surface boundaries in CGNS.; It seems that the parsing of the ZoneBC node to get the FamilyName of the Boundary condition in CGNS is missing since moving to a class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526586410:342,abort,abort,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526586410,1,['abort'],['abort']
Safety,"@elfring: thank you very much for the suggestion, but for the time being, our philosophy is to keep the code as simple as possible to keep a low barrier to entry for new users/developers. Therefore, we try to avoid templates when possible (there are a few isolated places where they are necessary). This may change in the future, but we'll close this for now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360053938:209,avoid,avoid,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360053938,2,['avoid'],['avoid']
Safety,"@jayantmukho, the arguments to the ADT are converted to the data structures used in the ADT. This must be done, because sometimes it is necessary to gather surface grids to all ranks for an efficient search. That is why it is safe to release the memory immediately. Note that it is not necessary to do so, but this is just to avoid that an unnecessary amount of memory is allocated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435131100:226,safe,safe,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435131100,2,"['avoid', 'safe']","['avoid', 'safe']"
Safety,"@libm3l: if you have the time, could you please apply the suggested changes above from Tecplot (thanks, @davetaflin!)? It is probably best to start with a fresh branch without the changes to the autotools stuff that show up in the commits on this PR in order to avoid some conflicts when we merge. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/339#issuecomment-321732961:262,avoid,avoid,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/339#issuecomment-321732961,1,['avoid'],['avoid']
Safety,"@marcovanderbijl : thanks for the question. The original limit there is simply to impose an upper bound for memory considerations, since the first instantiation of the array of FFD boxes (before the number of FFD boxes embedded in the mesh is detected) needs a default value. We can of course change this to automatically detect the number to avoid the requirement or make it an input option in the config, but we have not run into this issue yet. For now, you should be able to increase that to a reasonable number without any issue. Please give it a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495078497:243,detect,detected,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495078497,6,"['avoid', 'detect']","['avoid', 'detect', 'detected']"
Safety,"@pcarruscag : as for header issues, I believe the consensus was also moving toward completely splitting the headers by class as well. It is true that then we may need to include multiple headers one-by-one, but in most cases, I think that we may just need to add a handful (rather than all), and this division should also help us avoid some of the dependencies during compile time. Open to more opinions on this, of course.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501388653:330,avoid,avoid,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501388653,1,['avoid'],['avoid']
Safety,@pcarruscag @CatarinaGarbacz I am going to close this PR to focus on making small/manageable PRs to develop itself to avoid bloating. Ill try to stick with 10-20 files changed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1108#issuecomment-729858337:118,avoid,avoid,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1108#issuecomment-729858337,1,['avoid'],['avoid']
Safety,"@pcarruscag I was planning to do all, but I can stick to places that files have already been moved around. Is there a list of future restructuring to happen so I can avoid those files?. Version 7 seems to be a good place to tackle a lot of these small changes. In any case, I can address this in a separate branch to limit any downsides.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/807#issuecomment-548145692:166,avoid,avoid,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/807#issuecomment-548145692,1,['avoid'],['avoid']
Safety,@pcarruscag I would like to get your opinion about following checks since they are related to code style and changes many things. https://clang.llvm.org/extra/clang-tidy/checks/readability/braces-around-statements.html -> This can be disabled for short ones. Needs to decide short is how many characters. https://clang.llvm.org/extra/clang-tidy/checks/readability/else-after-return.html. https://clang.llvm.org/extra/clang-tidy/checks/readability/isolate-declaration.html . May be this is too https://clang.llvm.org/extra/clang-tidy/checks/modernize/use-auto.html. If chosen those ones can be applied just before release v8. to avoid merge conflicts,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989#issuecomment-1485959545:628,avoid,avoid,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989#issuecomment-1485959545,1,['avoid'],['avoid']
Safety,@pcarruscag I would not call that an avoidable bug considering the fact that the regression test passed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518274692:37,avoid,avoidable,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518274692,1,['avoid'],['avoidable']
Safety,@pcarruscag Indeed both implementations are very similar. But this is the case for a lot of routines in CEulerSolver and CIncEulerSolver at the moment. We can think about introducing a common base class for both in the future to remove this code duplication. But for now there is no other way except for moving the implementation to CSolver which we should avoid in my opinion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-470926608:357,avoid,avoid,357,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-470926608,1,['avoid'],['avoid']
Safety,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-589673332:149,avoid,avoid,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332,1,['avoid'],['avoid']
Safety,"@pcarruscag Yes, we would have a group (or matrix, I guess) of CConfigs. We don't have to follow a rigorous ""one-config-per-class"" definition; we could make a lot of headway just by splitting things up very roughly. If I understand, you're thinking we would have to have a base class with lots of virtual functions, and then derived classes with specific implementations. I don't think that would be necessary. First off, that wouldn't solve any problems, since the base class would have to have virtual placeholders for all the config classes. Second, the respective solver classes know what calls they need to make. So they can just have a specific derived class as a parameter (e.g. `CIncSolverConfig`). They don't need an abstract base class because we expect the incompressible settings to incompressible settings, and we won't ever switch it out for any other type of settings. The derived classes (e.g. `CIncSolverConfig`) could implement their own config getters/setters, without having any matching virtual functions in the base Config class. That should allow us to keep our inlines and avoid dynamic dispatches. There may be other flaws with my thinking that i'm not seeing. I just wanted to put my idea out there so we can make more informed decisions. I can also move this discussion to a separate issue, if we want to flesh out this discussion more.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501240303:1097,avoid,avoid,1097,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501240303,1,['avoid'],['avoid']
Safety,"@pcarruscag sorry for being picky :D but I would like to have the double changed to passivedouble. In case someone needs a float we can name it passivefloat. Sometimes I use automated scripts to check for occurences of double variables, so we should use passivedouble whenever we can to avoid future confusions on whether the use of double is intentionally or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-426698341:287,avoid,avoid,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-426698341,1,['avoid'],['avoid']
Safety,"@talbring : as you know, the difference between disabled and active grid movement with 0 velocity is that the former case does not even allocate the memory for the grid velocity at each node, and many conditionals checking for grid movement throughout the solver (fluxes, BCs) are avoided. This was to save memory and effort when grid motion is not needed, however, maybe we need to now change the strategy for multizone problems which may have both fixed and moving zones (perhaps always active with 0 as default). . I am a little surprised they are not the same as well, but somewhere in the code path there must be an issue with this.. my guess is something related to BC_Fluid_Interface() or the transfer structure when grid movement is active on both sides but has a value of 0 on one of the interfaces.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505188890:281,avoid,avoided,281,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505188890,1,['avoid'],['avoided']
Safety,"@vdweide compilation with level 2 warnings (-Wall -Wextra) is no longer so verbose that it is not useful.; Most of the remaining warnings are of the ""not vectorized with simd"" variety and they come (I suppose) from CSysVector.hpp:302, I think I'll leave them to avoid having to create an exclusion for Intel only. If you want to fix the GCC 10 memcpy memset warnings feel free to use this PR, otherwise it is good to go on my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1091#issuecomment-707627414:262,avoid,avoid,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1091#issuecomment-707627414,1,['avoid'],['avoid']
Safety,"@vdweide ok I think I safeguarded the required areas, if you could test this it would be great as I do not have these libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-435066556:22,safe,safeguarded,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-435066556,1,['safe'],['safeguarded']
Safety,"@vdweide, of relevance to performance I used -O3 -march=native -DNDEBUG. That last one disables the assertions the container class performs to detect out of bounds accesses.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524534304:143,detect,detect,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524534304,1,['detect'],['detect']
Safety,"A cleaner output has been implemented. Unfortunately, it is not possible to detect the particular point that is diverging.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/74#issuecomment-57041769:76,detect,detect,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/74#issuecomment-57041769,1,['detect'],['detect']
Safety,Access to the global to local should be via a function to avoid unintentional insertion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711:58,avoid,avoid,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711,1,['avoid'],['avoid']
Safety,Accurate heat flux predictions require extremely small first cell spacing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:19,predict,predictions,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,1,['predict'],['predictions']
Safety,"Actually, @vdweide predicted exactly this issue in #696. I can report that, after updating the CGNS reader in #728, it is possible to run the solver on meshes with over 1 billion grid points (it was a hex cube, so also roughly 1 billion cells). I did not go much beyond that or try to do a restart, but I am certain we will uncover additional issues like this. @talbring, good ideas for the restart, we should start there. I am fine with keeping this issue (maybe pin it if necessary), or we can reopen #696.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622151435:19,predict,predicted,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622151435,1,['predict'],['predicted']
Safety,Add the Wtime function to the MPI wrapper (to avoid #ifdefs),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:46,avoid,avoid,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['avoid'],['avoid']
Safety,"Ah. Well, pull request #500 should fix this bug, regardless. It's a single-purpose pull request that's ready to be merged in with the develop branch. That being said, it looks like the changes implemented in `enhancement_periodicbc` and `enhancement_periodicbc_paralleldraft` seem to encompass a lot of the other changes needed to fix periodic boundary conditions. Unfortunately, both branches are based off of v4.3 and seem to be a little rough (there's a lot of cout statements, commented out code, etc.). @demanosalvas, @sravya91, or @hlkline: Do you anticipate updating these branches in the next few months? Our group wants to run a few periodic problems, and we're currently trying to fix the bugs in the periodic implementation. We want to avoid duplicating effort if at all possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358555075:747,avoid,avoid,747,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358555075,1,['avoid'],['avoid']
Safety,"All testcases run for only a few steps, not entirely to convergence, the purpose is really just to detect change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241:99,detect,detect,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241,1,['detect'],['detect']
Safety,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:283,redund,redundancy,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['redund'],['redundancy']
Safety,"Also since this issue is getting resolved, is there anyway or option I can; reduced number of variables in exported results? I tried using; VOLUME_OUTPUT= (COORDINATES, PRIMITIVE) deleted SOLUTIONS so that I can; able to reduce the size of file from redundant parameters which i don't; need as of now. But seems like that does not work either and exported .vtk; with same size. It supposed to work like that if I understand correctly. On Mon, Mar 16, 2020 at 6:53 PM Monika Chauhan <monika1387@vt.edu> wrote:. > @clarkepede Sure, I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:250,redund,redundant,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,1,['redund'],['redundant']
Safety,Alternative time-averaging for rectangular window to avoid performance degradation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:53,avoid,avoid,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['avoid'],['avoid']
Safety,Are there any duplicate files here? Perhaps the regression tests could copy in the files from tutorials before running to avoid having redundant information.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-353223445:122,avoid,avoid,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-353223445,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:0,Avoid,Avoid,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['Avoid'],['Avoid']
Safety,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:483,risk,risk,483,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,1,['risk'],['risk']
Safety,Changing a short to a long to avoid problems on large periodic markers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/678:30,avoid,avoid,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/678,1,['avoid'],['avoid']
Safety,"Couple of issues with clang-format, found in the context of #1044, on this kind of style:. ```; su2double; foo, /* blabla */; bar; /* blabla */; ```; It goes mental sometimes. Order of includes is modified, which is guaranteed to break compilation. So running clang-format on the whole code in one go is maybe possibly perhaps definitely not safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-656154231:342,safe,safe,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-656154231,1,['safe'],['safe']
Safety,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:384,avoid,avoid,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['avoid'],['avoid']
Safety,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:717,avoid,avoid,717,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887,1,['avoid'],['avoid']
Safety,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:530,avoid,avoiding,530,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,1,['avoid'],['avoiding']
Safety,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:261,predict,predicted,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['predict'],['predicted']
Safety,"Dear SU2 users,. I continued the investigation and managed to track down the source of the problem.; The issues I face with SU2 appear when my wing geometry has several airfoils across the span. I ran several cases with supercritical airfoils and NACA 4 digits airfoils. As soon as the airfoil was changing along the span, SU2 had troubles computing the projected and wetted area of the wing, an attaining a correct solution. To better illustrate the issue, I attached a SU2 .cfg file (dummy.txt) and Gmsh .geo file (dummy_mesh.txt) to this post.; The geometry is the same as in the previous post except that I used 3 different airfoils along the span. That is, I replaced the NASA SC(2)-0712 by the {NASA SC(2)-0714, NASA SC(2)-0712, NASA SC(3)-0712}.; These airfoils are similar, so I expected to recover similar results. However, I observed that:; - SU2 computed the wrong z-projected area : 23.1 m^2 instead of 38 m^2,; - the y+ of the first cell is way too high in certain regions (see attached image, grey zones are the area where y+<1),; - the Cp distribution if not looking good (makes sense with those values of y+), see attached file. I am unsure if the problem appears because Gmsh has trouble in generating this kind of mesh or because SU2 has trouble reading it. Any ideas are welcome. Thank you again,; Adrien. ![cp](https://user-images.githubusercontent.com/39187559/43064280-c076a5e2-8e5e-11e8-84e5-602d1ee27ea2.png); ![y](https://user-images.githubusercontent.com/39187559/43064281-c09a1f86-8e5e-11e8-82b9-4c4fddc7d470.png); [dummy_mesh.txt](https://github.com/su2code/SU2/files/2218394/dummy_mesh.txt); [dummy.txt](https://github.com/su2code/SU2/files/2218395/dummy.txt); [log.txt](https://github.com/su2code/SU2/files/2218411/log.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-406973884:799,recover,recover,799,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-406973884,1,['recover'],['recover']
Safety,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:816,avoid,avoid,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840,1,['avoid'],['avoid']
Safety,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:629,safe,safe,629,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,1,['safe'],['safe']
Safety,"Dejavu from modified and unmodified...; We want to default to noft2, a noft2 option is redundant. On Mon, 23 May 2022, 14:35 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879465502>:; >; > > @@ -1056,18 +1045,98 @@ inline SST_ParsedOptions ParseSSTOptions(const SST_OPTIONS *SST_Options, unsigne; > return SSTParsedOptions;; > }; >; > +/*!; > + * \brief SA Options; > + */; > +enum class SA_OPTIONS {; > + NONE, /*!< \brief No option / default. */; > + NEG, /*!< \brief Negative SA. */; > + EDW, /*!< \brief Edwards version. */; > + FT2, /*!< \brief Use FT2 term. */; >; > I think it's better to use the keyword NOFT2 instead of FT2 to be more; > compatible with the NASA naming.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981782386>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNZS5KCB7L45MPF4KULVLOCT3ANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498:87,redund,redundant,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498,1,['redund'],['redundant']
Safety,"Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1289,Sanity check,Sanity check,1289,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Sanity check'],['Sanity check']
Safety,Discussion #2213 is about fixes for the address sanitizer detections in the `harmonic_balance` and `hb_rans_preconditioning` test cases (see https://github.com/su2code/SU2/actions/runs/8422887468/job/23065483005?pr=2246).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875:58,detect,detections,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875,1,['detect'],['detections']
Safety,"Error messages are only printed for Rank == 0, see the function CBaseMPIWrapper::Error. inline void CBaseMPIWrapper::Error(std::string ErrorMsg, std::string FunctionName){; if (Rank == 0){; std::cout << std::endl << std::endl;; std::cout << ""Error in \"""" << FunctionName << ""\"": "" << std::endl;; std::cout << ""-------------------------------------------------------------------------"" << std::endl;; std::cout << ErrorMsg << std::endl;; std::cout << ""------------------------------ Error Exit -------------------------------"" << std::endl;; std::cout << std::endl << std::endl;; }; Abort(currentComm, 0);; }. This makes sense when the error handler is called collectively, as this avoids a messy output. However, there are quite a few situations where the error handler is not called collectively and therefore the error message is not printed when Rank != 0. Would it therefore be possible to add an additional argument (possibly default argument) to the error handler to inform whether or the call is collective or not?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:582,Abort,Abort,582,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,2,"['Abort', 'avoid']","['Abort', 'avoids']"
Safety,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:153,avoid,avoid,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473,1,['avoid'],['avoid']
Safety,"FFD box fix to avoid ambiguous definition of nonplanar faces . ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The FFD box is defined using quadrilateral faces. These faces can in principle be non-planar. To avoid ambiguity, we define a supporting middle node and divide each face into 4 triangles. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742:15,avoid,avoid,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742,2,['avoid'],['avoid']
Safety,Fix bugs detected by the address sanitizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:9,detect,detected,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['detect'],['detected']
Safety,"For the fluid zone0 the boundaries are detected as NOT straight (captial letters because it is written on screen like that ;) ) and for the solid zone1 the fluid markers are still in the Global marker list but not in the local list... thats why they are written as straight on screen (explanation in next paragraph). In parallel cases this case (process knows the global marker but does not own any nodes of it i.e. it is also not in the local marker list) the process has to assume that the boundary is straight for the mpi communication otherwise we would never have straight boundary-straightness predictions in high process-count simulations. Here the situation is the same... except for it is a serial case. I have to admit I am not really sure how to best tackle that. Can you split the cfg files like in the Airfoil_RBF case (not sure if this is an old vs new driver thing)? I could exclude that structral solver from the surf_straightness check in CDriver::Geometrical_Preprocessing but I am not sure if that possible and if, what boolean to use.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537377677:39,detect,detected,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537377677,2,"['detect', 'predict']","['detected', 'predictions']"
Safety,For the moment I tried to not use six to avoid to add a new library dependency but it could be another solution!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-209998153:41,avoid,avoid,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-209998153,1,['avoid'],['avoid']
Safety,"GCC doesn’t necessarily come with g++. Does which g++ show anything? If not, try: sudo apt-get install g++. Dave. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:984,safe,safe,984,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['safe'],['safe']
Safety,"Great idea! Below are some links to databases that I know of. I'd be happy to contribute. . (Some) CFD companies run very large regression tests that can take a long time to complete. Typically, you do not put validation test cases in a regression test (and run it up to convergence) because it will just take too long. A regression test should be <30s or so. ; At a certain point there *will* be validation test cases that will take a couple of weeks to run. If you want to make sure that the validation tests are up-to-date and will run with the current version, create a regression test for it: create a coarse mesh setup for it and run it for only 10 iterations and check the residuals. ; Having said that, it will be nice if there is a general 'run' script that will run all subcases of a single validation case to construct the entire validation and validate the final results with the known/stored solutions.; -nijso. ercoftac database:; http://cfd.mace.manchester.ac.uk/ercoftac/index.html; nparc database:; https://www.grc.nasa.gov/WWW/wind/valid/archive.html; cfl3d V&V database:; https://cfl3d.larc.nasa.gov/Cfl3dv6/cfl3dv6_testcases.html; V&V database for turbulence models:; https://turbmodels.larc.nasa.gov/; drag prediction workshop:; https://aiaa-dpw.larc.nasa.gov/; some cfd-online V&V links: ; https://www.cfd-online.com/Wiki/Validation_and_test_cases; https://www.cfd-online.com/Links/refs.html#validation; reacting flow database:; https://www.sandia.gov/TNF/abstract.html",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426239437:1228,predict,prediction,1228,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426239437,1,['predict'],['prediction']
Safety,"Great progress, thanks @clarkpede !. As for your notes, some thoughts:; - I think you are already doing this but just in case... manually specifying the info at each node can be made a little easier by automatically generating the files for the first time if they don't exist at runtime. We had code that would do this for the grid motion case, and perhaps you can reuse it to generate inlet profile files with the correct global ID and dummy free-stream state to save the trouble of finding the global IDs by hand (that is what we wanted to avoid as well). Then you can at least use excel or another text editor to swap out the data.; - I wouldn't worry about interpolation to start. This can be added later.; - MG is a little tough, but I think we should be able to do a mapping down to the coarse levels in a similar way that we do the restarts in the volume mesh. Can you please check the code in LoadRestart() in solver_direct_mean.cpp where we restrict the solution down onto the coarse levels?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-342353441:542,avoid,avoid,542,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-342353441,1,['avoid'],['avoid']
Safety,Great! This is a non-linear example: Can we say that the convergence pattern is not necessarily directly affected by the turbulence model's lower limits? ; Did you try avoiding the NK solver?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2337729090:168,avoid,avoiding,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2337729090,1,['avoid'],['avoiding']
Safety,"HI ~ . Recently, I read a some paper [[DOI:10.1017/aer.2020.93](https://www.proquest.com/intermediateredirectforezproxy)]. The main topic of the above paper is considering the TKE term in the RANS equation for supersonic and hypersonic. ; In the paper, the original RANS equation is: ; ![image](https://user-images.githubusercontent.com/50565314/234077533-a521a533-5230-4fcf-b77e-16fbb909570e.png). The paper said CFL3D and VULCAN codes ignored every TKE term, and ; “Since different authors treated the k terms in different ways, sometimes it is difficult to obtain a uniform evaluation from different papers for the same turbulence models on the performance of supersonic and hypersonic turbulent flow predictions.”; So, the paper classified 3 types of RANS equations (C1, C2, and C3) like below:; ![image](https://user-images.githubusercontent.com/50565314/234077599-1ca42027-ce87-4d7b-b5a0-055453acced8.png). The paper’s result about k-w SST ; Mach 5 flat plate : ; ; ![image](https://user-images.githubusercontent.com/50565314/234078582-ed57291b-0dfb-4c67-be32-e8d44c9a8914.png); ![image](https://user-images.githubusercontent.com/50565314/234078598-6bfee0e1-d4ce-4876-90eb-971e97190a95.png). Mach 2.25 impinging shock :; ; ![image](https://user-images.githubusercontent.com/50565314/234078666-df0f96f7-68b1-4e73-95e3-ce7ddb26c1c4.png). Mach 8.18 impinging shock :; ; ![image](https://user-images.githubusercontent.com/50565314/234078679-b83a1e88-def1-48a3-be79-4400ba415868.png). Mach 2.9 compression corner :; ; ![image](https://user-images.githubusercontent.com/50565314/234078700-c4dd7444-2149-4ad7-997d-869a5bebb1ee.png). Mach 7.05 compression corner :; ; ![image](https://user-images.githubusercontent.com/50565314/234078733-00042db1-28c7-43c2-b4a6-30de08e86f2d.png). It looks like the attached boundary layer region(like a flat plate) is almost the same, while the separation region(impinging shock and compression corner) shows slightly different results. The results indicate that C1 is ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1520613703:704,predict,predictions,704,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1520613703,1,['predict'],['predictions']
Safety,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:438,safe,safe,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890,2,['safe'],"['safe', 'safety']"
Safety,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:918,predict,predictably,918,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['predict'],['predictably']
Safety,"Heather, thanks for your response.; I do agree that it is preferable to avoid an exhaustive list of defaults. However, currently SU2 runs double booking: For the C++ code, defaults are set in SetRunTime_Options (part of config_structures.cpp) and for the Python scripts, a partial list of defaults is defined in config.py. If we can automatically sync between the c++ and python codes, it will make developers life much easier. ; I suggest creating a single ASCII file that contains all the defaults values. This file can be read both by the c++ code and by the Python scripts, before overwitting parameters, reading from the case cfg file. ; Such a file can be part of the distribution. Whenever a new parameter is defined in SetRunTime_Options, its default value should be written in the defaults' file. Actually, we can prepare a rendering script that would read through SetRunTime_Options and prepares the defaults in the ASCII file, synced with the c++, for the Python. What do you think?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377178756:72,avoid,avoid,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377178756,1,['avoid'],['avoid']
Safety,"Hello @pcarruscag, thank you for your suggestions. > Nice to have this addition to the code, I don't know much about CGNS so these are maybe dumb questions:; > ; > * Will this also work to output meshes after deformation with SU2_DEF? I am guessing not because we had that issue with where to put the FFD information. We did not think to output CGNS meshes with SU2_DEF yet. Maybe it is a development that we can consider.; For the moment, it works just to output the flow-field in CGNS format running SU2_SOL or SU2_CFD. > * Is it possible to write the file by sections? i.e. instead of gathering all the data in a single node do a number of Send/Recv to avoid running out of memory for large problems. I was thinking about problems with the memory. Maybe one possibility is to make each process to write a CGNS file and then merge them into one file (but I have never tried it).; The CGNS library currently embedded with SU2 does not support the parallel writing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131#issuecomment-744048522:656,avoid,avoid,656,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-744048522,1,['avoid'],['avoid']
Safety,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:858,predict,predicts,858,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,2,['predict'],['predicts']
Safety,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:283,detect,detect,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,1,['detect'],['detect']
Safety,"Hello guys, I have a proposal to make some numerical tests automatically compared with standard analytical results, requiring the deviation of specific physical variables to be in an allowable range. So that such numerical result bias error could be detected in time accurately after every time the numerical algorithm changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-514969680:250,detect,detected,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-514969680,1,['detect'],['detected']
Safety,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:939,avoid,avoid,939,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,['avoid'],['avoid']
Safety,"Hello, I meet a problem:meson test failed about su2@master on canetos8_aarch64.; ```console; [root@bigdata spack-build]# ls; Common SU2_CFD SU2_DEF SU2_DOT SU2_GEO SU2_PY SU2_SOL UnitTests build.ninja compile_commands.json externals meson-info meson-logs meson-private; [root@bigdata spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver FAIL 0.01s exit status 1; >>> MALLOC_PERTURB_=206 /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/meson-logs/testlog.txt; ```; testlog details:; [testlog.txt](https://github.com/su2code/SU2/files/10323737/testlog.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859:714,Timeout,Timeout,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859,1,['Timeout'],['Timeout']
Safety,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:10,detect,detected,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['detect'],['detected']
Safety,"Hello,. I ran an incompressible case with NACA 0012 (AoA=0, TMR case) and I see a similar difference between SA and SST on the grid level 3 (https://turbmodels.larc.nasa.gov/naca0012_grids.html, 257 points on the airfoil surface). I also tried the SST_SUST model and have attached the plots for mid section and wake here (white lines - SA, red - SST, green - SST_SUST). The SUST model gives the same difference at mid chord and LE but not in the wake. The SST_SUST under predicts the drag value though (also I had some convergence issues with SUST).; ![pressure_line_cmp_mid](https://user-images.githubusercontent.com/28007882/66496216-dd5a2580-eaba-11e9-869e-097cce8e52b4.png); ![pressure_line_cmp_wake](https://user-images.githubusercontent.com/28007882/66496217-dd5a2580-eaba-11e9-9c72-1980625dd550.png). @economon , the SetStressTensor routine includes the -2/3 * rho * TKE term, so I suppose the TKE is accounted for in the viscous residual of the mean flow equations. . @emoralest6 if you wanted to check the source code, the mean flow solver is in SU2_CFD/src/solver_direct_mean.cpp and the corresponding numerics in the SU2_CFD/src/numerics_direct_mean.cpp file. Cheers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540063840:471,predict,predicts,471,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540063840,1,['predict'],['predicts']
Safety,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250:161,detect,detected,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/250,1,['detect'],['detected']
Safety,"Hello; I'm so glad to see that the su2 meeting has been so productive!; To address Eran's concern, maybe it would be more reasonable to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterpro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:488,risk,risk,488,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['risk'],['risk']
Safety,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/510:192,redund,redundancy,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/510,1,['redund'],['redundancy']
Safety,"Here's what I see:. - Viscous components of BC_INLET and BC_OUTLET commented out, can these be ucnommented?; - BC_INLET is non-operational.; - BC_SUPERSONIC_INLET is commented out and non-functional. Is this redundant in function to BC_FARFIELD, can it be removed, or should it be fixed?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368083469:208,redund,redundant,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368083469,1,['redund'],['redundant']
Safety,"Hey @economon, it has! And it seems to recover the results of the older Euler Wall implementation, at least it does for the pitching NACA64A010 which @cvencro analyzed in more detail :+1: ; I'll add an image over at 828. Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633728578:39,recover,recover,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633728578,1,['recover'],['recover']
Safety,"Hey David,. I have been taking a quick look, it looks like a very nice contribution to me. Thanks for sharing!. I can foresee some issues for those of us who have been working on driver and iteration structures lately, specially for multi-zone applications. Any particular advice to avoid conflicts?. Cheers!. Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237534858:283,avoid,avoid,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237534858,1,['avoid'],['avoid']
Safety,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:989,recover,recover,989,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,2,['recover'],['recover']
Safety,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-633731665:196,recover,recovers,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665,2,['recover'],['recovers']
Safety,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:789,recover,recovered,789,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['recover'],['recovered']
Safety,"Hi @TobiKattmann ,. Apologies for the huge gap in communication - I had to attend to other matters before I could try this out. I just wanted to follow up and thank you for your suggestions. Doing `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` before calling 'parallel_computation.py' did the job!. Is it safe for me to edit line 70 in interface.py from `mpi_Command = 'mpirun -n %i %s'` to `mpi_Command = 'mpirun --use-hwthread-cpus -n %i %s'` so that it is set permanently? Or is it better to put `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` in my .bashrc?. Many thanks and kind regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-428829621:321,safe,safe,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-428829621,1,['safe'],['safe']
Safety,"Hi @WallyMaier, good thought that you'd like the developers to not lose sight of proper documentation, especially for all the new stuff.; Though _appropriate_ can be very subjective and seems too vague to me. It could be code comments, a tutorial, contributions to the Docs page, a scientific article, ...; So in the end it might be too easy ticking this box... (making it an almost redundant addition in the worst case). Can we think of a more specific formulation?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799#issuecomment-541651742:383,redund,redundant,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/799#issuecomment-541651742,1,['redund'],['redundant']
Safety,"Hi @cjz667,; I know, that is why I suggested using the current development version. You can read about what that option does in #691. AUSM+up and similar schemes need a reference Mach number, which comes from MACH_NUMBER, apparently if that is 0 they do not do so well.; These settings should get you started: [cavity.txt](https://github.com/su2code/SU2/files/3526060/cavity.txt). I will put a check in the code for v7 to avoid mysterious ""divergence on the first iteration"" problems, I'll leave this issue open to remind me. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761#issuecomment-523511203:422,avoid,avoid,422,https://su2code.github.io,https://github.com/su2code/SU2/issues/761#issuecomment-523511203,1,['avoid'],['avoid']
Safety,"Hi @economon . > Did you solve this issue? I think that the problem is related to specifying VOLUME_OUTPUT fields different than the default (or at least I have had one other person report this to me). When you put in custom fields, the sensitivities are not also added by automatically. yes I noticed that adding sensitivity in the output solves the issue. ; I agree, it makes sense to put `SENSITIVITY` as a default entry in the case of adjoints to avoid this problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-626029155:451,avoid,avoid,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626029155,1,['avoid'],['avoid']
Safety,"Hi @economon,; thanks for cleaning this. One question, I think that LAPACK may be used by the RBF feature in #555, but to confirm, @pcarruscag, is this the case?; Regarding the autotools, I agree with @vdweide, I think we should use this PR to fix them. I think that @talbring proposal is a good idea, it would avoid the constant conflict that we have when we develop in different machines. I would also update the version of autotools provided in externals, so when bootstrap is run a recent version is compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423889045:311,avoid,avoid,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423889045,1,['avoid'],['avoid']
Safety,"Hi @pcarruscag ,; compressible needs this as well. There is some NICF (`Chi_b`, `Kappa_b`,...) stuff in the Euler_Wall implementation which I need some help with to get it right (that's why it is not done yet ). That is also the only compressible-exclusive part that could be a reason to not have one single code for inc+comp. But of course one could do it anyway with an `if(compressible)` conditional to avoid code duplication :). Towards input boolean: I thought about that as well, but with that preprocessing step it is impossible to get it wrong imo. I personally agree with BC_Sym always being flat and Euler allowing to be curvy, but as seen in issue #735 this opinion is not undisputed. By paying the price of checking straightness once, one eliminates the use of Marker_Sym (assumes const normal after your proposal) on curvy slip walls (happened in #735 ), or the possibly correct use of Marker_Euler on flat boundaries which would be a lot more expensive than checking once, right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-517228836:406,avoid,avoid,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-517228836,1,['avoid'],['avoid']
Safety,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:292,avoid,avoid,292,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,1,['avoid'],['avoid']
Safety,"Hi @rsanfer,; Did you consider using a derived class of CFEAVariable that augments it with the fluid tractions?; This would save you the memory of the data, the pointer, and the boolean (which due to alignment issues is probably not just 1 byte). It would also avoid the if statements.; Cheers for removing the methods returning pointers by the way.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663#issuecomment-476253315:261,avoid,avoid,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/663#issuecomment-476253315,1,['avoid'],['avoid']
Safety,"Hi Eduardo,. So far LES_FEM worked pretty well for us with few minor changes at our end.; Thank you for all your support and work in this.; But I do have one query, is anytime the SU2 team worked on averaging mean; flow data (or even perturbations) to avoid huge memory issues with large; LES dumped files in SU2? I mean we are doing averaging but for a large; number of files locally offline is challenging so we are wondering if you; have anything like that during the simulation SU2 can dump averaged mean; flow for a number of iterations?; Please advise if any work or anything closer worked upon which we can use; or take it from there.; Thank you in advance for your help!. On Wed, May 27, 2020 at 8:32 PM Eduardo Molina <notifications@github.com>; wrote:. > Hi Monika,; >; > We are in the V&V process of a new wall model LES implementation. Also, I; > took the opportunity to start fixing the RANS wall function since it will; > share the same code structure with the WMLES part, i.e. replace the wall; > shear stress in the NS fluxes.; >; > We didn’t extensively test the RANS wall functions, only very limited test; > cases. It will be great if you could run your own cases using the following; > branch:; >; > https://github.com/su2code/SU2/tree/feature_WallModelLES <; > https://github.com/su2code/SU2/tree/feature_WallModelLES>; >; > Please let me know if you need additional help and looking forward to hear; > from you.; >; > Best,; >; > Eduardo; >; >; >; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > >; > >; > > Sure Juan! I would like to. Because I was running on RANS but I am; > working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for; > LES; > > simulation (wall models in SU2).; > >; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <; > notifications@github.com>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-648243104:252,avoid,avoid,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-648243104,1,['avoid'],['avoid']
Safety,"Hi Josef,; in general, structural problems are quite stiff and it takes quite a lot of effort for the linear solver to find a solution for u. . I have just run this case in my own computer (GNU compilers), I get:; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.018591 -8.498274 -8.230638 -8.123824 6.4095e+04; so even I see a very small discrepancy. If LINEAR_SOLVER_ERROR is reduced to 1E-10,; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.223478 -10.390248 -10.043411 -10.058976 6.4095e+04; so it is just a matter of how much are we letting FGMRES converge. In principle I believe that, if the changes are just in the order of 1,6e-13, it should be fine to put up the tolerance a bit just for this particular case. It's not the same for non-linear structural problems (e.g. configBeam_2d.cfg) where the residuals printed by the code have a different meaning. In any case, just to be on the safe side: would you mind to share with me the file restart_beam.dat ? That way I can quantify the actual change in the results. Thanks,. Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276688029:931,safe,safe,931,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276688029,1,['safe'],['safe']
Safety,"Hi Paul, indeed when I introduced aligned allocation I took for granted that it was a c++11 feature.; Did you come across any programmatic way to detect whether aligned_alloc is available? We could have a graceful fallback to normal new/delete, no part of the code strictly relies on alignment (yet).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-761011723:146,detect,detect,146,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-761011723,1,['detect'],['detect']
Safety,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:128,predict,predicted,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705,2,"['predict', 'redund']","['predicted', 'redundant']"
Safety,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:582,predict,predicted,582,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,2,['predict'],['predicted']
Safety,"Hi Pedro, thanks for the probe extraction feature. I'll be looking into it when I get the chance. . I have also worked on this feature since the beginning of this year (for SU2 v7.5.0); on my version, you can set the probes in the .cfg files by directly describing the locations or by a .csv file (if you have many probes, for example). It will also create an output history file for each probe with your specified volume output variables and a probe_information.dat containing the location of the nearest node for that probe (since no interpolation is done). I initially did some workarounds to avoid OOM problems in finding the probe location since I used this in a 400M nodes mesh. I still need to clean up a little bit the additional implementation while keeping/improving the efficiency to avoid a big overhead time in the simulation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909#issuecomment-1497344705:596,avoid,avoid,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909#issuecomment-1497344705,2,['avoid'],['avoid']
Safety,"Hi Pedro,; thanks for cleaning up Joel's code and creating the pull request. The disc_adj_fsi testcase is failing, I believe because of the relaxation. Probably you need to update the value of the test_case config and set the relaxation to 1.0 to recover the previous test. ; About the symmetric matrix class: Joel's implementation was indeed intended to populate the matrix needed for the RBF; the CSysMatrix would not be able to accommodate some terms due to the sparsity. It's well explained in the comments. Also, his implementation was only single-core. I agree that it would be very interesting to have some methods such as the cholesky decomposition available, but I think they would require some reworking (at least for parallelization).; I think this is a very valuable contribution, so it would be good to get more people on board to push it forward.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406847760:247,recover,recover,247,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406847760,1,['recover'],['recover']
Safety,"Hi Ruben,. Thank you for your feedback !. It is hard to tell what to do you to avoid conflicts. Anyway, the most significant part of the changes concerns the parent CDriver class, especially the constructor and some new functions that are pieces of code coming from the main function (like Output and Monitor). So if the contributions are focused on one particular driver (single, multi, ...) and if they are more or less compatible with the main ""driver->run"" then ""driver->update"" structure, it should be straightforward to solve the potential confilcts. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237702911:79,avoid,avoid,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237702911,2,['avoid'],['avoid']
Safety,"Hi Steve,. I think that all your contributions are very interesting, so please feel free to create a pull request. Only one comment, please be sure that you pull to the develop branch (not the master). We only use the master branch for releasing the code. Thanks again!. Best; Francisco. On Jan 11, 2015, at 7:34 AM, Steven Endres notifications@github.com wrote:. > By the way, I have another set up updates for you guys to consider that are ; > beyond the scope of this pull request. Let me know if you are waiting on me ; > to close the pull request or if you can do that. ; > ; > I put the recommended changes for the structure of config.py file in a gist ; > https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the ; > low level config errors validation. I also created a few unit test cases to ; > allow a controlled build up of regex checks without risk of breaking ; > previous bug fixes. ; > ; > Let me know ; > ; > Steve ; > ; > On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote: ; > ; > > thanks for the commands ; > > ; > > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com ; > > ; > > > wrote: ; > > > ; > > > so now the file is being committed as deleted... please roll back to this ; > > > commit ; > > > spendres@6cbddbe ; > > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > ; > > > here are the commands you can use -- ; > > > Reset the index to the desired tree ; > > > ; > > > git reset 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > Move the branch pointer back to the previous HEAD ; > > > ; > > > git reset --soft HEAD@{1} ; > > > ; > > > git commit -m ""Revert to 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > "" ; > > > Update working copy to reflect the new commit ; > > > ; > > > git reset --hard ; > > > ; > > > — ; > > > Reply to this email directly or vie",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69612161:872,risk,risk,872,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69612161,1,['risk'],['risk']
Safety,"Hi Tobi,. If the old results can exactly be recovered for the 3D case discussed, then I recommend updating the code with the changes you've made for the JST convective residual as default since those were the original results and they have also been validated in @RoccoBombardieri 's study. I've just tried the branch `testing_symmetry_plane` with the recommended settings for the NACA0012 pitching airfoil case. With the JST convective residual calculation, the results still appear to be different on initial look. Something still appears to be not right when grid motion is included. Can you please also look into this and try the pitching NACA0012 using the case zip I'd attached in my earlier post?. Thanks,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578083725:44,recover,recovered,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578083725,1,['recover'],['recovered']
Safety,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:1083,avoid,avoided,1083,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,1,['avoid'],['avoided']
Safety,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:192,safe,safety,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,2,"['redund', 'safe']","['redundant', 'safety']"
Safety,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:111,avoid,avoid,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781,2,['avoid'],['avoid']
Safety,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088:592,abort,aborted,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088,1,['abort'],['aborted']
Safety,"Hi, ; thanks for this contribution, I will get a more detailed feedback soon. A first comment about the CSymmetricMatrix class came up to my mind, from a first brief review.; There is already a CSysMatrix class and a few routines added in this pull request look redundant (matvect product for instance).; On the other hand, many of those routines (cholesky decomposition and so on) could turn out to be very useful also for other future code developments.; That said, perhaps it would be nice to collect all the matrix-related routines into the CSymmetricMatrix class (removing redundancies) to make them available at an higher level. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406370798:262,redund,redundant,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406370798,4,['redund'],"['redundancies', 'redundant']"
Safety,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208:241,recover,recover,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/208,1,['recover'],['recover']
Safety,"Hi,. Regarding the cross-diffusion term (CD) that appears in Omega source term (residual). The SST model (1994/2003) is a high-Reynolds-number model. Namely, It can not predict correctly the sub-layer region (especially the correct profile of the TKE). Therefore, only a positive contribution is required. Moreover, since the SST model was design as a k-w and k-epsilon blending, the CD term ""belongs"" only to the k-epsilon ""branch"", that is why the CD term include the factor ""1-F1"". However, it may happen, that the factor ""1-F1"" is not a 100% safe guarantee. It may happen that ""1-F1"" is not zero in region where the CD term is negative (this happen due numerical errors). To avoid such a situation, it is a good idea to clip the CD term with zero. Otherwise, severe numerical robustness issues may rise. ; Yes, it is different from Menter publications, but I think that clipping the CD term with zero is completely inline with Menter original idea (that is why, I think, he was including the factor ""1-F1"". But again the 1-F1 factor is not 100% percent ""safe"").",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2251561287:169,predict,predict,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2251561287,4,"['avoid', 'predict', 'safe']","['avoid', 'predict', 'safe']"
Safety,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:284,avoid,avoid,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['avoid'],['avoid']
Safety,"Hi,. The attached project files are trying to solve a transient 3D cylinder model, the geometry is shown below. While the solver returns the error about the NaN value. Could you please guide me how to resolve this NaN value issue? Thank you. ![gui_model](https://github.com/su2code/SU2/assets/106984354/9dbbfe68-abcd-4ec9-926a-688021843a34). ```; Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. To run this model, please remove the "".txt"" suffix after downloading these two files.; [mesh.su2.txt](https://github.com/su2code/SU2/files/13806689/mesh.su2.txt); [su2.cfg.txt](https://github.com/su2code/SU2/files/13806690/su2.cfg.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2191:521,detect,detected,521,https://su2code.github.io,https://github.com/su2code/SU2/issues/2191,1,['detect'],['detected']
Safety,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401:267,avoid,avoid,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/401,1,['avoid'],['avoid']
Safety,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:453,abort,aborts,453,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,1,['abort'],['aborts']
Safety,Hmm but why would they need to? Dynamic FSI cases restart just fine...; I have not looked into this further (been fixing other bugs). But since the case does not recover after the first iteration it seems that the grid velocities are not computed at all.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/915#issuecomment-606618221:162,recover,recover,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/915#issuecomment-606618221,1,['recover'],['recover']
Safety,"Hmmm ok, indeed that region of code does not look like the safest thing in the world...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-847891725:59,safe,safest,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-847891725,1,['safe'],['safest']
Safety,"How well does a restart work in general for multizone? I restart from a converged solution and the result at the zone interface shows high residuals, and I do not recover the exact residual values. The solution looks fine everywhere except at the zone interface. This image below shows the residuals for velocity.; [EDIT: high residuals is relative, it is still 1e-12, but it is higher than what it should be]; ![screenshot](https://user-images.githubusercontent.com/7050568/202928587-22acde97-ecc9-4e3b-9377-1ea95a98a129.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158:163,recover,recover,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158,1,['recover'],['recover']
Safety,"I agree with having suitable defaults that make the code robust, but ""expert"" options should still be available.; Having separate controls also sounds good, I would not throw an error though, maybe just a warning. If you detect the two gradient options to be the same the associated CVariable classes make the reconstruction gradient point to the primitive gradient instead of allocating, and the call to compute the reconstruction gradient is skipped. If this is what you have in mind I support 100%.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533266438:221,detect,detect,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533266438,1,['detect'],['detect']
Safety,"I also like the idea of renaming to ""SOLVER"" but I would also say to avoid as much churn as possible in the conditionals throughout the code... looks like a wash when reading through the PR changes (almost as many +'s as -'s). Unless the changes are going to make something much more flexible or clear, I would say just keep Kind_Regime and set it in config postprocessing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756#issuecomment-520705829:69,avoid,avoid,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/756#issuecomment-520705829,2,['avoid'],['avoid']
Safety,"I always thought of CSolver, CIteration, etc. as ""strategies"" and CNumerics as ""visitors"", but just because the numerics ""visit"" the edges. I like the separation between solver and numerics, but I think the implementation could be better to avoid the problems @clarkpede mentioned.; We will need the contiguous storage for vectorization, once we have that we should benchmark again to evaluate the overhead of the current numerics structure and the potential gains from vectorization and weight that against whatever loss of readibility we would need to incur.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514334254:241,avoid,avoid,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514334254,1,['avoid'],['avoid']
Safety,"I am sorry, but neither of those 2 is helpful to me. I can obtain ASCII data with Tecplot format, and with the restart file. However, the end of the restart_flow file looks something like this, and it may change with conditions for simulation:; ```; 3748	2.000000000000002e-02	0.000000000000000e+00	1.161205517119654e+00	8.075360800285049e+02	-4.616675578067918e-14	5.307920350591170e+05	9.999999999999996e+04	2.999999999999997e+02	2.002826699082778e+00	-1.559133774467877e-16	; 3749	0.000000000000000e+00	0.000000000000000e+00	1.161205517119653e+00	8.075360800285049e+02	-1.451560808848285e-13	5.307920350591170e+05	9.999999999999988e+04	2.999999999999997e+02	2.002826699082779e+00	-4.157690065247673e-16	; EXT_ITER= 195; AOA= 0.000000000000000e+00; SIDESLIP_ANGLE= 0.000000000000000e+00; INITIAL_BCTHRUST= 4.000000000000000e+03; DCD_DCL_VALUE= 0.000000000000000e+00; DCMX_DCL_VALUE= 0.000000000000000e+00; DCMY_DCL_VALUE= 0.000000000000000e+00; DCMZ_DCL_VALUE= 0.000000000000000e+00; ```; It is the same case for the _flow.dat_ file with Tecplot format. When reading this data file back with Python, the last lines will cause errors (with skip_footer option in numpy.genfromtxt) if they are not consistent in number for the parameter sweep. I only need the array w/o the tail data and wanted to avoid additional scripting through Tecplot or Paraview for a faster turnaround for speedup. Hence I was requesting if we can have a CSV format, with just the raw grid data and headings.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528484440:1297,avoid,avoid,1297,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528484440,1,['avoid'],['avoid']
Safety,"I am trying to catch up on the developments in this PR but I've lost the overview. Are there still issues that we need to figure out? It looks like convergence is now recovered and results look OK? ; Regarding the symmetry plane, as @pcarruscag mentioned it is improving the accuracy, but not necessarily the convergence. @pcarruscag and I tried to get it to converge as well as before, but no guarantees. Do you still see issues with the new symmetry plane?; Regarding the peak residual that you observed in a single node in the mesh: This is a common observation when using Green-Gauss, which gives O(1) accuracy in mixed mesh nodes where quadrilateral and triangular meshes meet. There are some methods that try to fix this, although none of them are holy grails and the best methods are the most expensive ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976:167,recover,recovered,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976,1,['recover'],['recovered']
Safety,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:444,abort,aborted,444,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,1,['abort'],['aborted']
Safety,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:752,predict,predicted,752,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['predict'],['predicted']
Safety,"I believe the viscous components of a lot of bcs are commented out and can probably be removed at this point. I'm not even sure if they are formulated properly for NEMO problems. I think BC_Inlet can be removed. Or all the commented code can be removed with just an error message. Regarding the outlet boundaries, supersonic outlet does seem to be redundant. However, many validation cases use a supersonic outlet, regardless of boundary layers (ASWBLI), so it may be fine to keep.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064:348,redund,redundant,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064,1,['redund'],['redundant']
Safety,"I can also confirm that there is an issue with the *binary* Paraview output for large files. The code appears to write out the .vtu file just fine, but Paraview throws errors when attempting to open it. This does not occur for ASCII format Paraview files or smaller binary Paraview files. The case I am working on consists of a 180 million cell mesh. Also, @monika1387 , please note that the DG-FEM LES capability is *not* currently fully validated, and may be unstable in certain circumstances. Use this at your own risk. We are working on fixes for the DG solver, but they are still a ways away from being finished.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599805153:517,risk,risk,517,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599805153,1,['risk'],['risk']
Safety,"I could create a ""safe Allgatherv"" function, e.g. in [`mpi_structure.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/parallelization/mpi_structure.hpp) or in [`ndflattener.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp). This function should check the number of processes, perform a simple copy if it is 1, and otherwise calls the regular Allgatherv. It would then be used [here](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp#L235) instead of `SU2_MPI::Allgatherv`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031:18,safe,safe,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031,2,['safe'],['safe']
Safety,"I do have some issues with the continuous adjoint Testcases. Taking for example the euler_wedge. In the primal, results/convergence are really close. The continuous adjoint case (contadj_wedge) however produces pretty different results especially along the Euler walls (will upload an image later). The cont.adj. case converges though. So I guess I am doing missing something which is specific to the continuous adjoint? ; Maybe someone with experience in that field can help me and take a look. @hlkline maybe?. Update: Fixed the problem -> I had to change the call signature of the base implementation of `BC_Euler_Wall `and I changed it for all the primal solvers but not the continuous adjoint solver. Therefore in during integration the empty method of the CSolver was called. I'll additionally add the `override `keyword to the method declaration to avoid that in the future. Thanks to @talbring for pointing me to that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532675551:856,avoid,avoid,856,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532675551,1,['avoid'],['avoid']
Safety,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:243,safe,safe,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565,1,['safe'],['safe']
Safety,"I expect that epsilon to be a simple measure to avoid division by 0, if that lower bound had physical meaning it would have to be multiplied by some reference factors to make its dimensions appropriate, otherwise SST would not give the same results for the same Reynolds obtained with different rho and mu.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205:48,avoid,avoid,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205,2,['avoid'],['avoid']
Safety,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:1153,predict,prediction,1153,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['predict'],['prediction']
Safety,"I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035:448,recover,recover,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035,1,['recover'],['recover']
Safety,"I have started dividing the geometry classes. First, I created a new set of classes for the FVM mesh readers. There is a base interface that should never need to be modified, and the new CGNS reader is the first implementation. I will move the SU2 ASCII to this framework soon. The new class will make it easy to add new readers or even just implement analytic meshes like squares and cubes directly as child classes. I will break off a few more small classes in this PR, since they will be easy to handle, but I will likely wait for after this PR to completely divide CPhysicalGeometry just to be safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520532998:598,safe,safe,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520532998,1,['safe'],['safe']
Safety,"I have tested the adjoint FSI solver, results from matching, conservative, and consistent interpolation all agree. I am attaching only the bare minimum [files](https://github.com/su2code/SU2/files/2475798/testing.zip): meshes, configs, histories and logs. As to avoid uploading large files, I can obviously share the solutions.; To me the original issue is fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429571819:262,avoid,avoid,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429571819,1,['avoid'],['avoid']
Safety,"I haven't looked at this in awhile but I believe I had it working at the time. The volume of each element is already calculated, except that I believe the absolute value of it is used to avoid negative volume cells. The patch just lets the volume get calculated and reorients the element if the volume is negative. This makes a lot more sense to me than using what seems to be an arbitrary algorithm to determine if the elements should be reoriented. . I came across this when I was writing a 3d mesh generator. It doesn't create elements of the best quality but I made sure that they had a positive volume. SU2 would then reorient some elements on me, which caused even more issues for the meshes I created . . I can probably find the time to look into fixing the conflicts and creating a test case if that's desired.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-256731488:187,avoid,avoid,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-256731488,1,['avoid'],['avoid']
Safety,"I just checked and develop has that problem too, I see it from log files in build n 600.2. That's probably something we missed form an older pull request.; Maybe we should start thinking about adding a test to check also those python script (?) just to avoid such issues in the future. Cause right now we are only looking at residuals and we can't check them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-252172548:253,avoid,avoid,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-252172548,1,['avoid'],['avoid']
Safety,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:276,avoid,avoid,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['avoid'],['avoid']
Safety,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:236,predict,predicted,236,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918,1,['predict'],['predicted']
Safety,"I removed from pull request the files removed in another pull request. I also tried to fix some PEP8 issues including ""useless `return`"" in one function.; The remain CodeFactor issues:; * `Use of eval (eval-used)` - there is check for `window` is presented in allowed value list, ; so it safe to eval this value currently.; * `Wildcard import math (wildcard-import)` - I have no idea what math expressions are used in this file. ; Maybe it could be removed. As I don't know if it will brake something in case of replacing it with `import math` instead of `from math import *`.; * `Redefining built-in 'pow' (redefined-builtin)` - is related to previous issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983#issuecomment-629634439:288,safe,safe,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-629634439,1,['safe'],['safe']
Safety,"I reran the thread sanitizer analysis and it didn't detect any data races. The deviations are small, so I'm with @pcarruscag that this is probably inherent non-determinism. I relaxed the tolerances in #1984.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1483122833:52,detect,detect,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1483122833,1,['detect'],['detect']
Safety,"I rolled back and had a look at the case again, it turned out to be issue with input given in one of the reference (I followed). I have changed the inputs from original reference and repeated the run (find the attached pdf [SU2_hflux_issue.pdf] https://github.com/su2code/SU2/files/5685357/SU2_hflux_issue.pdf); ) with finer grid. I also ran the case with alternate code. Pressure distribution match is good b/w the two but some differences are still there in heat flux distribution. The important thing is that I could not obtain a low dissipation 2nd order solution (perhaps this is common issue with such cases). I iterated to higher E fix value and Venkat limiter coeff =0.01 to make it work (got some in between order of accuracy). Seems like there will be requirement of some knobs to tune the numerical dissipation for hypersonic cases to avoid carbuncle/instabilities.; I am closing it for now, as primary issue is sorted but perhaps new additions/improvements will be required. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256:846,avoid,avoid,846,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-744062256,1,['avoid'],['avoid']
Safety,"I see, then it should be possible to detect the version of the standard supported by the compiler and only enable the feature in that case. We do that for simd directives for compatibility (hopefully) with the MS compilers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788243448:37,detect,detect,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788243448,1,['detect'],['detect']
Safety,I suppose when #913 and #923 are done this will be redundant (?),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/932#issuecomment-612463518:51,redund,redundant,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/932#issuecomment-612463518,1,['redund'],['redundant']
Safety,"I think I found out the problem. In the correction of the gradients on the symmetry plane, somehow the gradient of the velocity along the normal direction was still not 0. By fixing it then the Mach number and nu_tilde profile are correct. I don't know if I am still missing the correction in the tangential direction, but at least the solution improves. Here you can see the same graph as before but without the line of the last commit. I have added, instead, a try with the Weighted Least Square (LS) and a first order (FO) (no MUSCL). In the end I have added the line for the correction implemented (Corr Grad). We can see that the behaviour before the implementation of the gradient correction is recovered. ![CommitsComparison_RMSRho_New](https://github.com/user-attachments/assets/dc7c843c-8141-489b-b627-a59cfb2d795d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2374767784:701,recover,recovered,701,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2374767784,1,['recover'],['recovered']
Safety,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:768,avoid,avoids,768,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['avoid'],['avoids']
Safety,"I think combining options where possible would be great. Also, won’t the move to multiple config files for multizone avoid the linear solver tolerance issue you mention for FSI, as the elasticity config can again reuse Linear_Solver_Error once it is not simultaneously being used by the fluid? Therefore, the deform option can be solely for grid deformation either during shape design or for the mesh equations in FSI problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-444003331:117,avoid,avoid,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-444003331,1,['avoid'],['avoid']
Safety,"I tried the case from @pcarruscag and it indeed works. However, when I extrude the same mesh to 3-D by 5 cells in Pointwise I don't see the correct solution. I created the new interior face by dividing the existing mesh in the middle to avoid any tolerance issues when joining two disjoint meshes. I don't see any issues with mesh quality. Even though only one surface exists. the nodes are duplicated, but that is how Pointwise writes the mesh file when creating an internal face in 3D. If I try to avoid this duplication, there is an additional unspecified marker written. This duplication happens only on the interior of the face and not on the perimeter of the marker. . Also, I found this forum post about nodes being written twice(https://www.cfd-online.com/Forums/pointwise/171862-excluding-domain-boundaries-getting-written-twice.html) and it appears that Pointwise always writes duplicate nodes when exporting meshes with internal boundary markers. I am not quite sure if this now a Pointwise issue or SU2 one anymore.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-629166352:237,avoid,avoid,237,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629166352,2,['avoid'],['avoid']
Safety,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:294,predict,predicted,294,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415,3,['predict'],"['predicted', 'predictor']"
Safety,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:193,avoid,avoid,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,2,['avoid'],['avoid']
Safety,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:1951,avoid,avoid,1951,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,1,['avoid'],['avoid']
Safety,"I'll merge this one to make the diff on my other PR's cleaner, but feel free to comment if you see something that does not look right.; I think these are fairly safe changes bug-wise, CEdge does not have a lot of methods and so I did this almost manually.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/959#issuecomment-622496979:161,safe,safe,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/959#issuecomment-622496979,1,['safe'],['safe']
Safety,"I'll merge this since it avoids confusion for people trying to use a feature that does not exist, it is all in one commit so it should be easy enough to revert if it becomes needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153#issuecomment-757463538:25,avoid,avoids,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153#issuecomment-757463538,1,['avoid'],['avoids']
Safety,"I'm not in a hurry, but I would not want to upset the stalebot. Practical consideration regarding storing the CFL, do we have to? In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?; I don't mind outputting the CFL, but it would be nice if we could avoid complexifying the restart logic further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041:331,avoid,avoid,331,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041,1,['avoid'],['avoid']
Safety,"I'm with Juan on this... an in-house option in C++ would be best to avoid dependencies and have control of the algorithms for further tuning and easier application throughout the codebase. If anyone is willing to give it a shot, please let us know, and we can help with integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224838550:68,avoid,avoid,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224838550,1,['avoid'],['avoid']
Safety,"I've been doing some recreational reading on strategies that people have used for vectorization of fluxes but so far I have not thought of a way to reconcile them with the nice encapsulation we have of the numerics. For gradients (at least GG) and limiters on the other hand I do have ideas. By the way is there a branch on the repo for the work you, Francisco, Intel, and others did on this kind of stuff?. Yeah making solution variables members of the solver would avoid a lot of virtual calls but it would make it harder to eventually reach the solution for post processing, or in other areas like Integration/Iteration where the solution is manipulated directly by non-solver classes, we will see...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513171591:467,avoid,avoid,467,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513171591,1,['avoid'],['avoid']
Safety,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550:631,abort,aborting,631,https://su2code.github.io,https://github.com/su2code/SU2/issues/550,1,['abort'],['aborting']
Safety,"I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=Storage",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620066614:1276,detect,detected,1276,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614,1,['detect'],['detected']
Safety,"If I recall correctly @tobikattman was dealing with a similar issue; (relating local markers to global ones) on his symmetry boundary condition; pull request. I think it would be worth keeping the ADT as clean and; generic as possible. On Mon, 9 Mar 2020, 19:32 Akshay.K.R, <notifications@github.com> wrote:. > Do I understand correctly that the roughness height does not influence the; > wall distance calculation itself?...; >; > @pcarruscag <https://github.com/pcarruscag> , Yes. I can use the markerID; > to find the corresponding roughness as long as the field element and the; > nearest wall marker are on the same rank. I was not sure how to relate the; > markerID on rankID from a different rank to the global config list, hence; > the current implementation. I am open to fixing it with a different; > implementation if I can figure out how to actually do it. The few things I; > tried all ended up causing problems and this was one way to avoid them; > (also my inexperience with MPI did not help).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/877?email_source=notifications&email_token=AJCOXNZA5Z2CBAXSTXG7BTTRGUY3XA5CNFSM4KVE7ON2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEOIQ3CA#issuecomment-596708744>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2KX3BY5CXBZFKIMM3RGUY3XANCNFSM4KVE7ONQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-597205550:949,avoid,avoid,949,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-597205550,1,['avoid'],['avoid']
Safety,"If modifying the configure is necessary, I can help with that, but I think Tim is suggesting we just use the MPI_VERSION macro that is already defined by the implementations within the C++ (correct me if I am wrong). So, we could check for MPI_VERSION > 3, for instance. However, I think that in some older implementations this may not be defined, in which case we should default to something safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419880168:393,safe,safe,393,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419880168,1,['safe'],['safe']
Safety,"If no internet connection is available, you have to download the appropriate submodules manually and place them in the root folder:. https://github.com/scicompkl/CoDiPack/archive/501dcf0305df147481630f20ce37c2e624fb351f.zip ; https://github.com/scicompkl/MeDiPack/archive/edde14f9ac4026b72b1e130f61c0a78e8652afa5.zip; https://github.com/mesonbuild/meson/archive/0435691e83fb7172e2a9635d2eb32d5521089916.zip; https://github.com/ninja-build/ninja/archive/2d15b04e411229cb902332957281622119025e77.zip . This information should be printed when no internet connection is detected, unfortunately there is a small bug in the current master branch that prevents that. A fix will be included in the next release. . Otherwise, you can also just run meson.py once on a computer with internet and then copy it to the other machine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619937697:566,detect,detected,566,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619937697,1,['detect'],['detected']
Safety,"If you add GRID_VELOCITY to VOLUME_OUTPUT the 2nd order restart will work properly in 7.1.1, this will not be needed in future versions.; Restarting the solver does not recover precisely the same values as letting it continue the simulation, I do not have an explanation for this (or time to look for it unfortunately) but it may be why you have crashes with some iterations but not others (combined with the case being sensitive).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-843195621:169,recover,recover,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-843195621,1,['recover'],['recover']
Safety,"If you are interested, @vdweide spent considerable time between 2003 and 2008 writing a multiblock-structured turbo machinery code called SUmb, as part of the DoE ASCI program. SUmb, although written in Fortran90/95, had all of the interpolation capabilities that you need for turbo machinery computations when radial inlet / outflow profiles (Tt, Pt, flow angles, static pressure, etc.) are given as inputs on a radial grid whose spacing does not match that of the actual computational grid. You may consider creating some interpolation functions (with all the safeguards and error codes) in C++ based on the SUmb code (which was structured in a C++-like way) or at least take inspiration from that approach to identify interpolation utilities / libraries in C++ that could be used for the same purpose. Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. On Sep 20, 2019, at 3:30 PM, Aman uz zaman Baig <notifications@github.com<mailto:notifications@github.com>> wrote:. @clarkpede<https://github.com/clarkpede> Thanks for your response! My work in focused on Turbomachinery and very frequently we need to have inlet profiles. I hope my work will give a neater, cleaner way of making this possible, though I also used python scripts in the past. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/791?email_source=notifications&email_token=AA5FFRDZYQ56RTPMG7RHC6DQKVFJ5A5CNFSM4IYRTZJKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7IBREI#issuecomment-533731473>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRCUZWNCGUIGYDSADO3QKVFJ5ANCNFSM4IYRTZJA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533740827:562,safe,safeguards,562,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533740827,1,['safe'],['safeguards']
Safety,"If you have a solution that allows you to use system-wide via an option and self-contained by default, please open a pull request.; As long as this option warns about having to manage dependencies manually I'm fine with it.; If you know a clean way of detecting the system-wide ninja and bypassing the ninja dependency that would also be an improvement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036:252,detect,detecting,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036,1,['detect'],['detecting']
Safety,Improve exception safety with smart pointers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:18,safe,safety,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['safe'],['safety']
Safety,Improve ninja system-wide detection,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2364:26,detect,detection,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/2364,1,['detect'],['detection']
Safety,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:238,recover,recover,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312,1,['recover'],['recover']
Safety,"In terms of file organisation I can think of two strategies, one would be grouping them according to parent class, numerics, solver, etc. this would maybe make navigation easier for people who work on the code daily but it does little more than what the naming convention already does. The other would be to group families of classes and that, I think, would help people who are less familiar with the code, so for example numerics, solvers, variables, etc. used for fluid simulations would be separate from the ones used for other physics. The main re-compilation trigger is probably the config, every file includes it and not all need it. Not much can be done here because most classes do use the config in some way but we could try to minimise how much the dependency spreads by:; - Reviewing what cpp files actually need to include config_structure.hpp; - Including from the cpp and using a forward declaration on the corresponding hpp. Other sensitive ""triggers"" are the header files of classes with many children (solver, numerics, and variable) splitting the header files for these (maybe by family for small classes to avoid an explosion of hpp files) would allow working on a child class without re-compiling all others so often. The clients of CSolver would only include the header for the abstract class so those too would be shielded from changes in children classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-423970045:1127,avoid,avoid,1127,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-423970045,1,['avoid'],['avoid']
Safety,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209:223,predict,predicted,223,https://su2code.github.io,https://github.com/su2code/SU2/pull/209,2,"['predict', 'redund']","['predicted', 'redundancies']"
Safety,Intermediate base class for flow solvers to avoid duplication.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1044:44,avoid,avoid,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044,1,['avoid'],['avoid']
Safety,"It does output the file, Paraview & Tecplot formats (binary & ASCII) both work. However, I need the raw data as I will be subjecting it to a Machine Learning Algorithm in Python. Manually deleting the lines for cell numbers in Tecplot format is an additional time consuming step, that hinders full automation. Hence a simple file as flow.csv (CSV format) may help me run it more efficiently. 1. Ganti, Himakar & Khare, Prashant. (2018). Spatio-Temporal Prediction of Gaseous and Liquid Spray Fields using Machine Learning. 10.2514/6.2018-4760. . 2. Ganti, Himakar & Kamin, Manu & Khare, Prashant. (2019). Design Space Exploration for Vaporizing Liquid Jet in Air Crossflow using Machine Learning. 10.2514/6.2019-2211.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528453362:453,Predict,Prediction,453,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528453362,1,['Predict'],['Prediction']
Safety,"It seems like your situation may have been resolved, but for archival purposes, I'll list my workaround here. This problem occurs when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:383,detect,detect,383,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['detect'],['detect']
Safety,"It should be emphasized that we do not modify nor change the model formulation (terms, constants, coefficients, etc.) The Lower limit clipping of K and omega used currently in SU2 are not a part of the model formulation. It is a numerical fix to avoid negative values. To the best of our knowledge there is no formal lower limit given by Mentor or anyone else and current values in SU2 are taken arbitrarily. Based on our twenty years of experience, using the lower limit suggested will lead to a more robust scheme without compromising the quality of results. This has been demonstrated in the attached figures .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2223408382:246,avoid,avoid,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2223408382,1,['avoid'],['avoid']
Safety,"It's ok, I'll have a look today or tomorrow to see if there is some way to recover those precious deleted lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1449#issuecomment-974631156:75,recover,recover,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449#issuecomment-974631156,1,['recover'],['recover']
Safety,"Juan,. Indeed, it is desirable that at the highest level the details of the time integration scheme and number of zones per discipline should not be visible. The question is whether that is achievable for all combinations you can think of. This is especially the case for the time integration schemes. E.g. suppose you would like to use a multi-stage time integration scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:1012,predict,predictor,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,2,['predict'],['predictor']
Safety,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003:260,avoid,avoid,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003,1,['avoid'],['avoid']
Safety,"Just an update: There is now WRLES data for the axisymmetric transonic bump case on the NASA Turbulence Modeling Resource. The data includes pressure, turbulent kinetic energy, and density. While the WRLES is not ""ground truth,"" it is a reliable data source for comparison. Sometime over the next few weeks, I'll compare the WRLES data with the SU2 results, including some of the possible changes. This will give us a better idea of how these model changes impact the predictive accuracy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-649816660:468,predict,predictive,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-649816660,1,['predict'],['predictive']
Safety,Just as @economon I also had to `git submodule update --init` and I had the same `ERROR: Could not detect Ninja v1.5 or newer`. I am running on a RHEL Server 7 with git 1.8.3; I got everything to run after running the `./bootstrap.py` in `externals/ninja/` and adding that very directory to my PATH.; Two small hints for everyone trying: ` ./ninja -C build -j #cores` and the SU2_CFD binary is then in `<repo-root>/build/SU2_CFD/src/`. The QuickStart ran fine for me. It also ran perfectly in parallel without further ado. Is there already an AD-build? I would like to see/make a build speed comparison with auto- and directdiff enabled.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495368696:99,detect,detect,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495368696,1,['detect'],['detect']
Safety,"Just as an information: I enabled CodeFactor to check the pull requests for tabs and white-spaces (I added CPPLINT.cfg file in the develop branch). However, this configuration does not work properly for PRs that are already open, they still use the default config. That is the reason why it is complaining about ""Redundant blank line .."" For new PRs it should work properly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-550000663:313,Redund,Redundant,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550000663,1,['Redund'],['Redundant']
Safety,Keeping the solution group together to avoid issues in restarts,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1985:39,avoid,avoid,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1985,1,['avoid'],['avoid']
Safety,"Krishna,. Thanks for your contributions. I have a couple of questions...; 1. Can the dockerfiles be made more general so that a user does not need to manually change the paths, i.e., avoid having the pathname on your machine hard-coded?; 2. The config generator is nice (it seems to even be working in Safari), but I have one concern: can it be made to automatically track the current available options in the code since these change somewhat frequently? For instance, we have a gui utility that does this in Python by parsing the config_structure.cpp file for current options (SU2_PY/config_gui.py). Can your web-based tool be made to do something similar?. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126105709:183,avoid,avoid,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126105709,1,['avoid'],['avoid']
Safety,MARKER_ROUGHWALL is fine too. Do you want some help with the MPI to avoid setting data into the config? (I don't want to create too much friction but that is something that should really be avoided).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-652641123:68,avoid,avoid,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-652641123,2,['avoid'],"['avoid', 'avoided']"
Safety,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:3142,abort,aborted,3142,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['abort'],['aborted']
Safety,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624457511:314,abort,aborts,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511,2,['abort'],['aborts']
Safety,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:449,safe,safety,449,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412,4,"['safe', 'unsafe']","['safety', 'unsafe']"
Safety,Maybe it makes more sense to have this changes in a separate branch for now ? This way we avoid potential problems for others in case there are some modifications of this config option necessary during the final implementation of the wall functions.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/435#issuecomment-329400246:90,avoid,avoid,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/435#issuecomment-329400246,1,['avoid'],['avoid']
Safety,Maybe we can avoid creating another instance is the surface_movement pointer is not nullptr when the init function is called? In CDriver we would just make sure all surface_movement are initialized to nullptr.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018574171:13,avoid,avoid,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018574171,1,['avoid'],['avoid']
Safety,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/484:237,avoid,avoiding,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/484,1,['avoid'],['avoiding']
Safety,"My compiler is detection tens of warnings, I have fixed most of them. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/440:15,detect,detection,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/440,1,['detect'],['detection']
Safety,Need proper error checking to avoid running a CGNS mesh when MESH_FORMAT= SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/54:30,avoid,avoid,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/54,1,['avoid'],['avoid']
Safety,"Nice analysis @clarkpede. It is true that we simplify the Jacobians at the periodic boundaries, mostly to avoid issues with adding entries to the Jacobian from the neighbors that potentially do not live on our rank and to keep communication costs low (those neighbors are treated explicitly). This could be changed to communicate the full Jacobian.. but I am not sure it is worth the effort/cost. The approximation that is made should still be consistent though, because we only allow one of the repeated periodic nodes to participate in the linear solve with each nonlinear iteration, and then we communicate its update to its periodic pair. In short, the value of the solution should always be the same on periodic points with each iteration update, and if the problem converges to a steady-state (even in time stepping mode), the Jacobian should only affect convergence (the RHS should be the same). You could try the time stepping option with one of the RK methods to see if going fully explicit helps further isolate the issue. It could also be something related to the time step that is communicated. In the SetTime_Step() routine in the flow solver class, we do some special checks for time stepping mode to make sure that the minimum global time step is used in all cells. Might want to print out the dT communicated in the periodic comms or write the dT to the solution file to make sure everything is ok there too. Honestly, I don't think a ton of folks use the time stepping option in general with the FVM solver, so double-checking that it behaves well for a non-periodic problem could shed some light too, unless you have already done that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-524007345:106,avoid,avoid,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-524007345,2,['avoid'],['avoid']
Safety,"Nice post @pcarruscag : I think we can gain a lot by first breaking up the files, especially the headers, and then being much better about include statements. In particular, we can look at forward declarations, using more guards, and just minimizing the number of includes (I expect some are redundant). As far as breaking up the files, I think geometry is a good place to start. I can take a shot at this first soon. . More ideas out there? Anyone have some bandwidth to experiment a little with the headers?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-424215054:292,redund,redundant,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-424215054,1,['redund'],['redundant']
Safety,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:453,avoid,avoid,453,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,2,['avoid'],['avoid']
Safety,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:78,detect,detecting,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,3,"['detect', 'risk', 'safe']","['detecting', 'risk', 'safe']"
Safety,"No not really, it is a fairly safe thing to change but it only makes sense to do it if the CFL is also increased. I did not make it default at the time because many cases would change over 2 lines of code...; Maybe it can be done now as part of #790? I can help you with the testcase updates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/711#issuecomment-540995151:30,safe,safe,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/711#issuecomment-540995151,1,['safe'],['safe']
Safety,"No, switching to first order is not a proper solution so I agree on avoiding doing this. The only possible thing I would add is to take into account the inlet and outlet boundary conditions in the computation of gradients at boundary points, but this could be a separate issue altogether.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2449820746:68,avoid,avoiding,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2449820746,1,['avoid'],['avoiding']
Safety,"OW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if neces",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1382,avoid,avoid,1382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['avoid'],['avoid']
Safety,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:185,avoid,avoid,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264,2,"['avoid', 'safe']","['avoid', 'safely']"
Safety,Oh right... It was there all along and I missed it. Hope you don't mind I made that consistent and merged the velocity prediction with the displacement prediction.; And so everything LGTM.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822335132:119,predict,prediction,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822335132,2,['predict'],['prediction']
Safety,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:843,safe,safe,843,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['safe'],['safe']
Safety,"Ok, SIMD update, with #753, #959, and #966 we now have a unified storage type for the data we need in CNumerics. This means that we (I) only need to implement ""SIMD accessor methods"" (i.e. that return a SIMD type instead of a su2double) for one class (C2DContainer and co.). I think to do SIMD right we need a new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not por",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:407,safe,safe,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,6,"['avoid', 'safe']","['avoid', 'safe']"
Safety,"Ok, changed it to 1000. Results changed only slightly. ; Got now; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); Org: 0 34.920000 -8.498275 -8.230640 -8.123825 6.4095e+04; Reci 0 20.430000 -8.498260 -8.230796 -8.123818 6.4095e+04; Quad 0 25.000000 -8.498253 -8.230661 -8.123815 6.4095e+04; (Times are irrelevant - all calcs. do all types redundant).; How to continue? ; My (nasty, debugging) source used is a tiny 320 line C-code called as external ""C"". There I can select which method to be passed to the callee. I stepped with Totalview through all and found, that in GaussElimination the divisions (no matter how, except for the QUADs) are sometimes only accurate to the 14th decimal which is not unusual for double precision (checked with hand calculator in quad precision).; After all, Res is log10(of something) and ""of something"" differs in displx by 1,6e-13, that is a relative error of 5e-05",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276675208:353,redund,redundant,353,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276675208,1,['redund'],['redundant']
Safety,"On an added note to this topic, and to avoid some future hassle, I have collected a list of active branches (updated within the last 3 months) that are currently falling far behind the last release:. - feature_boom; - feature_caa; - feature_turbo; - feature_turbo2phase; - feature_adjoint_lut; - feature_transp_part; - feature_turbo_aeroelastic; - feature_gradientNorm. I would strongly encourage to regularly update with develop to ensure the future merging process is as smooth as possible, particularly when we start moving files around.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-423180781:39,avoid,avoid,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-423180781,1,['avoid'],['avoid']
Safety,"On the subject of virtual functions I would like to put another idea forward.; After moving things around in #725 I noticed that we have tons of `inline virtual` methods.; The keyword `inline` has two meanings to the compiler:; - ""Dear merciful compiler please copy paste the body of this function and then do all your wonderful optimizations, if that pleases your excellency.""; - ""Dear forgiving compiler, you will find this method defined in multiple units, please don't be mad"" (i.e. ignore the one-definition-rule). `virtual` means determine what version of the method to call at runtime. This is not compatible with the first (and often the intended one) meaning of inline, therefore the compiler will in general not inline those methods.; They will only be inlined if they are being called on a pointer to the derived class that does not declare the method to be virtual anymore. CSolver knows what variables it creates and so in hot areas of the code it could do a static downcast to allow inlining (e.g. `static_cast<CEulerVariable*>(node[iNode])->DoStuff()`).; Where is this important? For example when computing gradients, where simple additions and subtractions are hidden behind virtual functions.; If you are worried about maintenance each solver can typedef its most safe downcast level or better yet (or just more modern), methods that could benefit from this can be templated for the type of downcast.; Those in favour say Yea those against say Nay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-509273008:1281,safe,safe,1281,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-509273008,2,['safe'],['safe']
Safety,"Our proposal does not relate to the SST's good behavior (iThe SST model is not sensitive to Omega freestream value: it is because of the addition of the cross-diffusion term, which was absent in the original Wilcox model). The current implicit treatment in the SU2 may generate a negative solution that is not physical. A low limit value is available in the code to avoid a negative solution. This means the solution is clipped to this value if the solution reaches a lower value. There is no single absolute low-limit value that is suitable, for example, issues with dimension vs. non-dimension form. Our proposal circumvents this problem. The current situation in the code is not robust. We suffer from many robustness issues, especially with the SST2003 model. However, using our proposal significantly enhanced the solver's robustness. The current situation is like a ""bug"" because it may interfere with the solution. We understand that our idea requires a lot of effort and that it would make the code unreproducible. Therefore, we would like to suggest the following: Give the user an option to control these low-limit values. The default values will be according to the hard-coded values. We also strongly recommend adding additional user low-limit values control according to our proposal. The user will be able to decide which option he prefers. Our end goal is to design the implicit treatment so that these low-limit controls will be almost redundant. Based on several publications I've made during the last 15-20 years, my code enjoys this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2231452852:366,avoid,avoid,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2231452852,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>. —; You are receiving this because you are subscribed to this thread.; Reply to this email direc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160:2063,safe,safelinks,2063,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827721160,1,['safe'],['safelinks']
Safety,"Probably not, it was a silly idea anyway. Maybe you could perturb the target value of CL instead and measure the variation of alpha for an imposed variation of CL but that is starting to sound quite strange. I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. Edit: Regardless of how the process works, you can always do one more update of alpha to refine CL and take those two points for the finite difference, i.e. you never do an explicit perturbation and the final state is guaranteed to be the best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539587908:364,avoid,avoid,364,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539587908,1,['avoid'],['avoid']
Safety,Proper restart at each sweep member from the previous member; EXT_ITER from the cfg file is used unless overwritten in script command; More careful folders renaming to avoid inconsistencies in parallel run; Listing case details on the polar-sweep concluding file; Semantic and cosmetic fixes to make pylint less verbal,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520:168,avoid,avoid,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/520,1,['avoid'],['avoid']
Safety,"Provocative thought of the day: Removing the numbers from the enums is a bit of spring cleaning, the ""modern C++"" way is to use `enum class` and to never rely on implicit conversions from enum to integer type.; In any case, it should be safe to remove the numbers when they already start at zero.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-805010330:237,safe,safe,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805010330,1,['safe'],['safe']
Safety,"Realized I never followed up. I did not find a programmatic way to detect this. I think the best solution is to have people use your work-around file if they are stuck with an old compiler. When aligned_alloc becomes a required part of SU2, we may need to include a minimum compiler version requirement for the code. IMO, it is too much to continually write code that supports ancient compiler versions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-778501880:67,detect,detect,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-778501880,1,['detect'],['detect']
Safety,Redundant SetVolume_Deformation() calls for DEFORMING mode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/730:0,Redund,Redundant,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/730,1,['Redund'],['Redundant']
Safety,"Regrading the results: Why do we not see the dip in skin friction coefficient for low Reynolds like we see in the paper of Rumsey? The paper shows that predicting this dip is a feature of the model, and it makes it different from the van Driest theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2082038290:152,predict,predicting,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2082038290,1,['predict'],['predicting']
Safety,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:281,sanity check,sanity check,281,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944,1,['sanity check'],['sanity check']
Safety,"Right there seems to be no way to reproduce this, and I don't see anything inherently wrong with the code.; No one else has reported any similar issue.; I am glad you have a workaround but I will not risk applying it to the code because it does not sound safe (to delete without calling close).; I'm closing this, if you ever get to the root of what's going on please let us now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-894821584:200,risk,risk,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-894821584,2,"['risk', 'safe']","['risk', 'safe']"
Safety,"Right, in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-965077124:82,avoid,avoiding,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-965077124,1,['avoid'],['avoiding']
Safety,"Right... I've finally fix this. The manual/offline build with meson will work in the next version.; For completeness, there is another way to work ""offline"", on a machine with internet access clone the SU2 repo using `git clone`, then run meson which will initialize the submodules, finally copy **everything** to the offline machine.; If this machine **has git** installed, it will detect that the submodules are present.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111:383,detect,detect,383,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111,1,['detect'],['detect']
Safety,SU2_DEF should automatically detect an existing point inversion and not recompute when setting up the FFD boxes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/116:29,detect,detect,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/116,1,['detect'],['detect']
Safety,"SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency stru",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2178,abort,aborted,2178,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['abort'],['aborted']
Safety,Seems that 'shell=True' is a security risk. Any way to easily fix that by using different options with the system call? We could do a search and replace for the others already in the Python framework.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533370188:38,risk,risk,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533370188,1,['risk'],['risk']
Safety,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:571,recover,recover,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['recover'],['recover']
Safety,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265:502,avoid,avoids,502,https://su2code.github.io,https://github.com/su2code/SU2/pull/265,2,"['avoid', 'risk']","['avoids', 'risks']"
Safety,"Should we use the branching methodology that we use for the SU2 repository? In the sense that we create a develop branch, create branches for any cases we want to add, submit pull requests that can be reviewed by the rest of the community etc. . I like the idea from @bigfooted, of having some regression testing that can run the simulation for a couple of iterations and check residuals (identical to what we do for the TestCases). This might be redundant to the actual regression tests that are done in SU2, but would be an easy first check on weather a particular validation case needs to be run again. Ideally, this would be run before any major version releases, as we discussed earlier. . I can also start working on creating a section on the website for the results of the validation cases. I'll eventually upload a sample validation case with corresponding results that people can model their efforts on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426808018:447,redund,redundant,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426808018,1,['redund'],['redundant']
Safety,"Some additional ideas on this topic:. #### Using Github projects; - For compilation of branches, I have created a github project: https://github.com/su2code/SU2/projects/7; - In there, you can list your active/old branches by adding a note to the relevant column. Please be so kind to mark the name of the branch in bold using Markdown's format (`** my branch name **`).; - I have added some examples from my own branches. #### Where do I find my branches?; - We have all worked on branches that we no longer remember, but Github has a really nice feature for this.; - Log-in to your Github user account and go to: https://github.com/su2code/SU2/branches/yours; - All the branches in which you have added at least one commit will be listed there. #### Old branches; - We have found a lot of branches that are older than the latest release and have no commits ahead of master (you can see this in your branch list).; - This would mean that normally all of their commits have already gone into a released version of SU2 and they are no longer required.; - I am planning to do some cleaning of very old branches to have a more compact structure, however it would be helpful if all the developers could indicate explicitly which branches can be safely removed to avoid any future issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582#issuecomment-423178409:1241,safe,safely,1241,https://su2code.github.io,https://github.com/su2code/SU2/issues/582#issuecomment-423178409,2,"['avoid', 'safe']","['avoid', 'safely']"
Safety,"Sorry for the late reply, here are some personal opinions. (1) I have also test the turb flatplate and Onera M6 case (Fig1.Original; Fig2.Submit) in the tutorials. The convengence and results also shows just slightly difference. . (2) This PR is not suitable for the euler wall, for the wall is not always a straight plane and singular points do not statisfy the condition for the normal direction is hard to define. (3) Well, I have noticed the BC_Sym_Plane before, but it is very puzzling to me that only the closed point to the vertex on the sym wall is considered to add additional negative normal flux contribution. Maybe the mesh is unstructured and more than one point out of wall is linked to the vortex. Maybe the closed point is not normal to the wall while it always occurs on the 3D sym plane such as the ONERA M6 wing case. (4) This PR is to add a limitation of the velocity on the sym wall, just like what we do to the turb walls in the CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh). The fix is only available for the SYMMETRY wall and in the implicit iteration, just to avoid uncertainty and potential instability.; `; CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh); : CTurbSolver(geometry, config, true) {; ...... /*--- Initialize lower and upper limits---*/; lowerlimit[0] = 1.0e-10;; upperlimit[0] = 1.0e10;. lowerlimit[1] = 1.0e-4;; upperlimit[1] = 1.0e15;; `; ![untitled](https://github.com/su2code/SU2/assets/58663453/f5b5f543-3476-45d6-9477-94c7deeca9aa); ![untitled](https://github.com/su2code/SU2/assets/58663453/c6ecbdc5-0636-4880-a315-05c8636c27bb)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458:1130,avoid,avoid,1130,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458,1,['avoid'],['avoid']
Safety,"Sounds good. I was a little concerned about carrying around unnecessary memory during fluid computations, which will be the case for FSI as well as time spectral and some other applications, but you have a good point about avoiding allocation/deallocation overhead, and since you're reducing the number of times the same variables are re-allocated without any deallocation, it'll be a performance improvement relative to the current code either way. Please replace the 'varname.~Classname' calls with 'delete varname', then I think it should be good to go (pending anyone else weighing in on this). [you probably already know this from previous pull requests, but just in case - you don't have to create a new pull request, just commit into your branch and it will update automatically]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148124339:223,avoid,avoiding,223,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148124339,1,['avoid'],['avoiding']
Safety,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:504,avoid,avoid,504,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095,2,['avoid'],['avoid']
Safety,"Technically, this model has only one equation, the one for intermittency. Most of the functions are the same as the original LM model. Should I consider the Simplified model (SLM) as an option for the LM model to avoid duplicates? This is how I started, but I am open to discussions and suggestions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239:213,avoid,avoid,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239,1,['avoid'],['avoid']
Safety,"Thank you all.; When I run the tutorial case with `mpirun`, there are some warnings:; ```; (base) root@a5502ebdff64:/home/SU2_RUN/QuickStart# mpirun -n 24 SU2_CFD inv_NACA0012.cfg ; --------------------------------------------------------------------------; mpirun has detected an attempt to run as root.; Running at root is *strongly* discouraged as any mistake (e.g., in; defining TMPDIR) or bug can result in catastrophic damage to the OS; file system, leaving your system in an unusable state. You can override this protection by adding the --allow-run-as-root; option to your cmd line. However, we reiterate our strong advice; against doing so - please do so at your own risk.; ```; Should I directly ignore such warnings ? Any suggestion would be grateful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513868405:269,detect,detected,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513868405,2,"['detect', 'risk']","['detected', 'risk']"
Safety,"Thank you for letting us know about the update.; We will discuss whether to update or to provide both versions as BC and BCM, as described in the turbulence models page (to avoid any doubt).; If you would like to join us, the meetings take place Wednesdays at 4pm CET https://meet.jit.si/SU2_DevMeeting; By the way, are you aware of any other issues with the implementation, or have you compared the results with other references? (I suppose you are the best person to ask).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-743749639:173,avoid,avoid,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743749639,1,['avoid'],['avoid']
Safety,"Thank you for replying while busy preparing the High Lift Prediction Workshop 5. Sorry, I didn't clearly understand. From what I understand, I can suggest another energy equation calculating method instead of the current SU2 method(reading calculated TKE from inlet boundary condition and using it as an energy equation). Is that right? If not, could you please explain in more detail?. > @sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly? In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374:58,Predict,Prediction,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374,1,['Predict'],['Prediction']
Safety,"Thank you for the detective work @yiren6 :+1: ; We may need to consider changing the extension for OSX or create a symbolic link during the installation process.; @patelha57 can you try the solution that yieren6 found?. As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8 (at least that line 558 changed).; When using code from a pull request you can have a look at the regression tests https://github.com/su2code/SU2/pull/1300 (bottom of the page) to get an idea if some issues might still be work in progress.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636:18,detect,detective,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636,1,['detect'],['detective']
Safety,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:229,safe,safe,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['safe'],['safe']
Safety,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:824,avoid,avoid,824,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['avoid'],['avoid']
Safety,"Thanks @bigfooted, I fixed the conflicts (albeit not very well judging from the broken compilation) and left some more comments some more important than others.; For me the most important ones are those regarding avoiding any and all repetition, reference factors and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-789223219:213,avoid,avoiding,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789223219,1,['avoid'],['avoiding']
Safety,"Thanks @talbring,; I moved the preconditioner and matrix-vector product wrapper classes to separate files, these are so light weight that I was thinking of leaving them in one file.; I also moved some inlines to the hpp but I kept the private inlines in the inl file, these are only needed in the cpp and so by including the inl from the cpp (instead of bottom of hpp) we might avoid triggering recompilation of more units when working on implementation details of CSysMatrix.; Finally I would like to move/rename the larger files on a separate PR, that way it will be easier to track changes.; What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503615855:378,avoid,avoid,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503615855,1,['avoid'],['avoid']
Safety,"Thanks Tom !. I made the changes (typo and initializations). I would not choose just ""SU2"" for the Py wrapper name, since there already is a SU2 python folder. By the way this also contains some python driving functions and this might be confusing. The true python wrapper is what you get when you directly interface C++ functionalities with python through SWIG. The previous name of the wrapper was SU2Solver but once again I would avoid it since the true goal of the wrapper is to interface functionalities that could be much deeper than just the solver level. The python wrapper is not just a solver. So to avoid confusion I chose the name WrapSU2. pySU2 would do the job too and this is consistent with the pySU2 folder (used to compile the wrapper). SU2Wrapper ? PyWrapSU2 ? Just keep in mind that ""SU2"" should be part of the name, imagine you have to import two wrapped modules (from different codes) in the same python script I would prefer having : . ********; import pySU2 # wrapper of SU2; import pyOtherCode # wrapper of another code; ********. than having : . ********; import pyWrap # wrapper of SU2 but this is unclear; import theWrapper # wrapper of an other code but this is unclear; ********",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272404829:433,avoid,avoid,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272404829,2,['avoid'],['avoid']
Safety,"Thanks a lot for the comments, Heather. As you said, it seems that the deconstructers LinsysSol.~CSysVector() and StiffMatrix.~CSysMatrix() weren't doing their job. I believe that the problem was not only with the two vectors LinsysSol and LinSysRes, which as you say may be constructed using a 'new' statement. In the case of the StiffMatrix, there is a major difference between calling the constructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:660,avoid,avoid,660,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['avoid'],['avoid']
Safety,"Thanks for filing this. Unfortunately, we have not completely implemented the ALE formulation for the incompressible solver to handle dynamic meshes. If this is something you would be interested in helping develop further, please let us know. That being said, we should have proper guards (or error messages) that avoid this kind of memory access error in the incompressible case. We'll look into this right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247#issuecomment-195838721:314,avoid,avoid,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/247#issuecomment-195838721,1,['avoid'],['avoid']
Safety,"Thanks for putting those results together, Samet. For more comparisons, you might also check out the paper by Langtry, et al., ""Predicting 2D Airfoil and 3D Wind Turbine Rotor Performance using a Transition Model for General CFD Codes"" that contains this exact case. Another interesting paper is Potsdam, ""Unstructured Mesh CFD Aerodynamic Analysis of the NREL Phase VI Rotor."" We can also look at the surface streamlines to compare with some of the results in these papers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-260412407:128,Predict,Predicting,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-260412407,1,['Predict'],['Predicting']
Safety,"Thanks for rebases; A couple of notes: ; - the reference to the github issue in the comments may be confusing to others as to which part of that thread is being referenced. To make sure that future developers are aware of import issues, maybe just one line like 'recommended import format compatible with both Python 2.7 and 3', if you feel a comment really is necessary there.; - on the regressions: I know it may seem like small differences, but the fact that they are different with just changes to the python code is very concerning, and in some of the tests the differences are quite large (specifically discadj_euler_py and directidff_euler_py). If they are calling the exact same C++ executables and performing the exact same computations the result should be the same. If this is something going on behind the scenes within the python packages that cannot be avoided, we need to understand what that difference is, and where it is coming from. ; The only explanation I can think of off the top of my head for why the output could be different with only changing python code, is if some function previously imported from a different package is using single-precision instead of double-precision for some arithmetic operation or file io. If what you changed is actually providing GREATER precision that's fantastic, but we need to know for sure either way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224031436:867,avoid,avoided,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224031436,1,['avoid'],['avoided']
Safety,"Thanks for the changes, @pcarruscag. I like PRs like this with 797 additions and 3220 deletions maintaining functionality :+1: The incompressible part of the FEA problem was, like some other features in the code, 90% ready but never totally finished, so to avoid confusion in users and developers and ease maintenance I think it's better for it to be removed until someone can take over and finalize the implementation.; Let me know when you've had some time to put that testcase, and we can get this merged in.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-496400629:257,avoid,avoid,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-496400629,1,['avoid'],['avoid']
Safety,"Thanks for the post. I think the issue is that ParMETIS support is enabled by default when building with '--enable-mpi' and so that option is not necessary (and may throw and error). Additionally, if the user does not enable MPI, ParMETIS will be disabled. Same for METIS. . If this is causing issues, we can remove them entirely from the set of configure options in order to avoid confusion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-416808134:376,avoid,avoid,376,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-416808134,1,['avoid'],['avoid']
Safety,"Thanks for the replies and suggestions. I am trying to use built-in optimization abilities of SU2 for turbomachinery cases. So far the multi zone issue seems like one of the many problems. I realized this when using a single zone case while trying to avoid previous multi zone problem I encountered, when using v7.0.6, turbomachinery cases create a different kind of solution history file and it seems to interfere with the optimization process. Also, it seems like the optimization side of SU2 is created without considering turbomachinery simulations since the current objective functions are not really useful for turbomachinery optimization, and there are some objective functions that are in config_template.cfg but does not work such as SURFACE_MASSFLOW, SURFACE_TOTAL_PRESSURE and TORQUE. Therefore, it seems like the solution history and objective function problems need to be solved together in order to do optimization on turbomachinery cases with v7.0.6. Even though v7.0.6 turned out very satisfactory just for solving both single and multi zone turbomachinery cases I am trying to see if using an older version like v6.2.0 would change the situation on turbomachinery optimization. It may seem like I am avoiding going in and changing the code but I want to see first if a base version of SU2 can do the job.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913:251,avoid,avoid,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-835832913,2,['avoid'],"['avoid', 'avoiding']"
Safety,"Thanks for your reply. 3.0.12 works well in my own machine. But the newest version in HPC is 3.0.10. I have required ICT to install it. Hopefully, it will be done tomorrow. Thanks. 获取 Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; 发件人: Pedro Gomes ***@***.***>; 发送时间: Monday, April 25, 2022 8:49:52 PM; 收件人: su2code/SU2 ***@***.***>; 抄送: Jia, Guangnan ***@***.***>; Author ***@***.***>; 主题: Re: [su2code/SU2] Fail to Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx' (Issue #1617). This email from ***@***.*** originates from outside Imperial. Do not click on links and attachments unless you recognise the sender. If you trust the sender, add them to your safe senders list<https://spam.ic.ac.uk/SpamConsole/Senders.aspx> to disable email stamping for this address. Should work with swig 3.0.11 onward according to this https://www.swig.org/; (I have 3.0.12 and it's fine); Please confirm if upgrading swig works for you and I will try to put this requirement meson. ―; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1617#issuecomment-1108974316>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDDBRPFTZJQUMEUKVME6GLVG3ZOBANCNFSM5UI2ADRA>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945:682,safe,safe,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945,1,['safe'],['safe']
Safety,"Thanks! I would suggest to fix these issues first, in this branch, ASAP. We can also make sure that is is done before the feature_output PR. ; Summarizing we still have the following problems:. 1. SU2_SOL not working correctly in parallel for unsteady. Just one mesh partition is plotted in time.; 2. SU2_CFD crashes when restarting, due to additional lines in the restart file ; 3. The current reg tests are not able to detect this kind of problems ( we should do something for this). Any suggestion/help to fix the listed issues :) ? Of course, if you prefer, we can merge this in as it is, but still we will have those bugs in the develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267317372:421,detect,detect,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267317372,1,['detect'],['detect']
Safety,"Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423122949:229,avoid,avoiding,229,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423122949,1,['avoid'],['avoiding']
Safety,"That is how I understand it, but memory allocation is a complex beast.; For example I expect the policy for small and large sizes to be different, maybe the interaction between similar sizes (e.g. from different MPI processes) is more important, because memory is a global resource and the different processes do not request it in a predictable order.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818837883:333,predict,predictable,333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818837883,1,['predict'],['predictable']
Safety,"The Aachen turbine test case added in #2158 needs another look, for two reasons. 1. The test case is subject to a yet unfixed memory access violation, as detected in the address sanitizer tests in #2246. We explored a fix in c97610b02bc1281eb766847e7ef5ed7ac451dfb9, that remedies the address sanitzer detections but also changes the test results notably. It is unclear yet whether this is the correct way to fix it.; 2. @bigfooted observed non-deterministic behaviour in #2260. This might or might not be related to the memory access violation. As soon as the memory access violation is fixed, address sanitizer testing can be re-enabled for the Aachen turbine test case (it was disabled in 0f3fc3ec900f1518c0c3ed26c3e971ae27fb974c). @alecappiello We can continue the discussion from #2246 here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:154,detect,detected,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,2,['detect'],"['detected', 'detections']"
Safety,"The changes to the symmetry BC were to improve the accuracy, especially when there are walls perpendicular to the symmetry plane.; It's possible the Jacobians can be improved to be more consistent with the RHS and recover some of the convergence rate.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2379688926:214,recover,recover,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2379688926,1,['recover'],['recover']
Safety,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:361,detect,detection,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['detect'],['detection']
Safety,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/926:625,safe,safer,625,https://su2code.github.io,https://github.com/su2code/SU2/issues/926,1,['safe'],['safer']
Safety,"The folks at Travis CI have kindly doubled both our ""hard"" timeout and ""silence"" timeout limits up to 140 min. and 20 min., respectively. We should be safely within limits for some time to come. . That being said, rather than relying on the increases, I would really encourage that we find some better approaches for reducing total test time, as we will continue to add more cases. It is not good for our pace of development that we have to wait over an hour to get the results of the tests. I think that a test time of approx. 10-20 min. would be more ideal so that we can iterate much more quickly. I suspect that attacking our compile time would be most helpful. Any ideas and discussion most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382152114:59,timeout,timeout,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382152114,3,"['safe', 'timeout']","['safely', 'timeout']"
Safety,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:216,avoid,avoid,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798,1,['avoid'],['avoid']
Safety,"The motivation of having it as the default was to make the code as user-friendly as possible (fewer knobs exposed in the config), but options are good of course. I would propose then that we add an option for the reconstruction gradient, something like:; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; to let users decide if they want a separate option for the reconstruction gradients. If it does not appear, then the default is to use the same method as defined by NUM_METHOD_GRAD without a second gradient computation (basically what we have now). The nice thing about that is we can even try out other combos such as WLS+GG for the two different gradients. I will throw an error if users try to use LSQ for the viscous/source gradients, to avoid accuracy issues. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533259202:745,avoid,avoid,745,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533259202,2,['avoid'],['avoid']
Safety,"The naming ""passive scalar' is inappropriate now. Maybe change this to 'species transport' everywhere.; Looks like you can safely do a 'search and replace all' on ""passive scalar"" and ""PASSIVE_SCALAR""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1249289137:123,safe,safely,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1249289137,1,['safe'],['safely']
Safety,"The predictor thing is fine, the fluid displacement may start different from the structural but this is corrected in the outer iterations. I think the best solution for the velocity issue (if there is one, but it really looks like there is) would be to include ImplicitNewmark_Relaxation in the corrector step (this sets the solution to the relaxed solution and recomputes velocity and acceleration) and to transfer velocity directly, i.e. without any prediction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774769502:4,predict,predictor,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774769502,2,['predict'],"['prediction', 'predictor']"
Safety,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573929388:335,avoid,avoid,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388,1,['avoid'],['avoid']
Safety,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743422907:718,avoid,avoid,718,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907,1,['avoid'],['avoid']
Safety,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/915:449,recover,recover,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/915,1,['recover'],['recover']
Safety,This is now completely general I believe. `geometry->node[iPoint]->GetPoint(index)` always returns the right point either for index 0 or 1 at least in a quad mesh (there are only two neighbours at the corner) and the wrong one equals the normal neighbour. I tried it on a triangular mesh and it worked as well but perhaps it won't always be correct. The worst case is an error equal to the one of setting it to 0.0 and it's just as safe. Setting it to 0.0 is what I did at first but the axis is not a wall in general so it's usually the point with the largest cells and the highest velocities unless it's an Euler case. If there are very few nodes overall on the marker the contribution may not be that small. I suppose looking for the vertices on the axis marker here would be more messy and prone to bugs (and much more work for me),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611625225:432,safe,safe,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611625225,1,['safe'],['safe']
Safety,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:390,avoid,avoid,390,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,2,['avoid'],['avoid']
Safety,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:167,redund,redundant,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['redund'],['redundant']
Safety,Those Set functions need to be called at least for the Get functions in CEulerSolver::Evaluate_ObjFunc unless they are supposed to be called somewhere else. These calls exist in the legacy output and seem to have been removed because SetHistoryOutputPerSurfaceValue is replacing them for the history/screen output. Perhaps this will be redundant when #913 is done,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/935:336,redund,redundant,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/935,1,['redund'],['redundant']
Safety,"Thrust should be -11.12N and torque 0.8329Nm, not accounting for number of blades. Is that closer to what you expect?. The coefficients are computed with a reference velocity based on Mach motion, but the dimensional factor shown in the breakdown file considers the free stream velocity instead... (silly and avoidable bug).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-767597032:309,avoid,avoidable,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-767597032,1,['avoid'],['avoidable']
Safety,"To answer the first question, yes, the distance calculations are done based the entire surface of a boundary element. This is done using routines written by @vdweide for the higher order solver. In short, the distance to the wall of a node in the mesh is found by finding the projection of the said node on a boundary element, and the distance is calculated using that information. . I validated this on a host of grids, some of which had sheared elements near the wall, and this procedure seemed to give the right predictions regardless of the quality of the mesh. . Yes, from what I understand, by the end of the ComputeWall_Distance function all the memory, weather it is the vectors or the ADT itself, should be deallocated. I based this code on what Edwin was doing so he might be able to substantiate on why he deallocates the vectors immediately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435105466:515,predict,predictions,515,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435105466,1,['predict'],['predictions']
Safety,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:6,safe,safe,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['safe'],['safe']
Safety,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:910,Avoid,Avoid,910,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,3,"['Avoid', 'redund']","['Avoid', 'redundant']"
Safety,Try to detect wrong meson being used to configure SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1615:7,detect,detect,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1615,1,['detect'],['detect']
Safety,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:332,risk,risk,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,2,['risk'],['risk']
Safety,"Valgrind does not detect any leaks.; What is probably happening is heap fragmentation, some large temporary arrays are used during parallel output, they are free'd correctly but the OS is not obligated to re-use that space the next time something is allocated. If you want to experiment with modifying some code (to make those arrays persistent) we can show you what to do.; (developers meetings every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting). Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174:18,detect,detect,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174,1,['detect'],['detect']
Safety,"We are actually having a group meeting, cloned and compiled in two machines while discussing SU2 with the whole group, and experienced this one-commit-behind issue. This has all been in the context of brainstorming open-science and reproducibility practices for CFD. . We've continued to discuss it and we wonder if this might be avoided by keeping the Tests as a folder in the main SU2 repo, rather than having a separate repo for Tests. . Is there a reason why you decided to have a separate repository for Tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72737918:330,avoid,avoided,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72737918,1,['avoid'],['avoided']
Safety,We could also write a script that detects cfg options whose removal does not break the regression ;-),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-802804906:34,detect,detects,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802804906,1,['detect'],['detects']
Safety,"We have used SU2 and SU2-NEMO to predict the heat flux for various shapes in a high-speed flow. Something we have observed is that SU2 requires an extremely small first cell spacing to get an accurate and grid-independent prediction for heat flux. For example, this first cell space is often 1E-9 to 1E-10 m with SU2; whereas with other codes it is a micrometer. The latter is in line with the general rule of thumb of setting the first cell height so that the first cell Reynold's number is between 0.1 and 1.0. Discussing with @jtneedels and @WallyMaier, we think it may have to do with how the temperature gradient is calculated in CNSSolver.cpp:. /*--- Compute the normal gradient in temperature using Twall ---*/. ` su2double dTdn = -(There - Twall)/dist_ij;`. /*--- Apply a weak boundary condition for the energy equation.; Compute the residual due to the prescribed heat flux. ---*/. ` su2double Res_Conv = 0.0;; su2double Res_Visc = thermal_conductivity * dTdn * Area;`. which may result in a first-order approximation for the temperature gradient causing this requirement for an extremely small cell size to recover the true gradient. I would be interested to see if calculating this gradient similar to CFVMFlowSolverBase.ini. For example,; ` for (iDim = 0; iDim < nDim; iDim++) {; Grad_Temp[iDim] = nodes->GetGradient_Primitive(iPoint, prim_idx.Temperature(), iDim);; }`. `su2double dTdn = -GeometryToolbox::DotProduct(nDim, Grad_Temp, UnitNormal);`. I tried checking this but quickly found out, I am not familiar enough with the code structure to implement.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:33,predict,predict,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,3,"['predict', 'recover']","['predict', 'prediction', 'recover']"
Safety,"Welcome to SU2 and thank you for fixing these issues :+1: . Some of the files you changed are removed in #902, please revert those changes to avoid merge conflicts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983#issuecomment-629117883:142,avoid,avoid,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-629117883,1,['avoid'],['avoid']
Safety,What about using weighted least squares for NUM_METHOD_GRAD? (if you don't specify something for NUM_METHOD_GRAD_RECON the method from NUM_METHOD_GRAD is used). Context: Plain least squares will under-predict gradients in stretched meshes whereas GG and WLS are not supposed to.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090#issuecomment-725309360:201,predict,predict,201,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-725309360,1,['predict'],['predict']
Safety,"Why are you defining an internal marker? I always try to avoid having undefined faces in my mesh. If you are linking the face your connectivity will be different than when you are not linking the faces. I don't know how Pointwise does it, but that's my guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-628770758:57,avoid,avoid,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628770758,1,['avoid'],['avoid']
Safety,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1812,avoid,avoid,1812,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435,1,['avoid'],['avoid']
Safety,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-612613571:272,abort,aborted,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571,1,['abort'],['aborted']
Safety,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:933,avoid,avoids,933,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,4,['avoid'],"['avoid', 'avoids']"
Safety,"Yes, I am using periodic boundaries. However, the points are matched without any issue during initialization so I don't think the issue is there. Turbomachinery cases are working but the issue is with MPI where after a certain number of cores a case may encounter segmentation fault. I cannot predict beforehand at what number of cores it will fail, or if it will even fail or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630394537:293,predict,predict,293,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630394537,1,['predict'],['predict']
Safety,"Yes, I'd say that the V&V regression tests should definitely start from the converged solutions that were used to produce the results on the V&V website. . But for cases that do not have V&V documentation, the regression tests are imo merely a way to detect and prevent unwanted changes/side-effects (so, what you said). If they need to be more than that, they should be upgraded to a V&V with proper documentation. For the cases that are not VandV I'd rather have a 'start' + 'restart' regression test, with restarts from the 'start' results. In that way the restart files are always generated from the current code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759:251,detect,detect,251,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759,1,['detect'],['detect']
Safety,"Yes, there are some warnings there. I have mostly avoided the Tecplot ones with ""-Wno-unused-parameter."" We could also contact the developers of those two packages directly (CGNS is now on GitHub).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/441#issuecomment-329835608:50,avoid,avoided,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/441#issuecomment-329835608,1,['avoid'],['avoided']
Safety,"You are proposing the exact opposite of the conclusion of the paper:. ""From the above findings, it is **recommended that all three of these terms be included** when; running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with; shock wave-induced separations."". And they clearly say this:; ""While the full inclusion of these terms does not always result in predictions that agree better; with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out; effects of other flaws in the RANS models employed."". If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562:390,predict,predictions,390,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562,2,['predict'],['predictions']
Safety,"You can use paths for the inputs and outputs of the code, e.g. RESTART_FILENAME= ./test/restart.dat or MESH_FILENAME= ../mesh.su2; I think it is much safer if you use paths for inputs and change directory to where you want the files written.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675:150,safe,safer,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675,1,['safe'],['safer']
Safety,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:84,detect,detects,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886,2,['detect'],['detects']
Safety,"ZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a47",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1239,recover,recovers,1239,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['recover'],['recovers']
Safety,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:843,avoid,avoid,843,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,2,['avoid'],['avoid']
Safety,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2206,abort,aborted,2206,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,1,['abort'],['aborted']
Safety,"acency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; [ubuntu:08544] 1 more process has sent help message help-mpi-errors.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1485,abort,abort,1485,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['abort'],['abort']
Safety,"ate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:3446,abort,abort,3446,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety,avoid calls to blas routines when the data type is not compatible,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:0,avoid,avoid,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['avoid'],['avoid']
Safety,"build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a defaul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4512,Sanity check,Sanity check,4512,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Sanity check'],['Sanity check']
Safety,closing temporarily for finishing tutorial/anticipating merging with the previously mentioned pull request/bug fix/generally avoiding confusion. Will reopen when those are complete.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-364602321:125,avoid,avoiding,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-364602321,1,['avoid'],['avoiding']
Safety,"computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2609,avoid,avoids,2609,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['avoid'],['avoids']
Safety,"de></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2233,timeout,timeout,2233,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"discadj_arina2k fails with some mpi error, but it does not fail when I run it on my local machine. Not sure what is going on here. ```; Clearing the computational graph.; [9c7d9f63f200:01637] *** An error occurred in MPI_Allgather; [9c7d9f63f200:01637] *** reported by process [4177330177,1]; [9c7d9f63f200:01637] *** on communicator MPI_COMM_WORLD; [9c7d9f63f200:01637] *** MPI_ERR_TRUNCATE: message truncated; [9c7d9f63f200:01637] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [9c7d9f63f200:01637] *** and potentially your MPI job). ```; There is another case that sometimes fails due to the tight tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196:499,abort,abort,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196,1,['abort'],['abort']
Safety,"echnique is a proven procedure that helps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Pag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:1611,predict,prediction,1611,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['predict'],['prediction']
Safety,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4685,Sanity check,Sanity check,4685,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['Sanity check'],['Sanity check']
Safety,"ef=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:9540,safe,safe-directory,9540,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['safe'],['safe-directory']
Safety,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2092,recover,recovers,2092,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['recover'],['recovers']
Safety,"erodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_term",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:2618,Abort,Aborted,2618,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,3,['Abort'],['Aborted']
Safety,"ers are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:3246,recover,recovered,3246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['recover'],['recovered']
Safety,"ers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=KJACa6bUpNomvHIrZDe0%2FoMQ3DeJTksfdC5nwoHPTWk%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1655,safe,safelinks,1655,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,2,['safe'],['safelinks']
Safety,"es are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/581#issuecomment-423122949>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJzh9dwbOM_5DoymCA6lAIqv3biyks5uc2eqgaJpZM4Ww0V4>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:1656,avoid,avoiding,1656,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,1,['avoid'],['avoiding']
Safety,"es by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3597,detect,detected,3597,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety,"f overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:996,avoid,avoid,996,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['avoid'],['avoid']
Safety,"fg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:1533,Abort,Aborted,1533,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['Abort'],['Aborted']
Safety,"fic multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3581,avoid,avoid,3581,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['avoid'],['avoid']
Safety,"for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regres",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2411,recover,recover,2411,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['recover'],['recover']
Safety,"formance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does not help much. This is the 4 core summary:. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 2.0 | 2.0 | 3.8 | 2.8 |. I think the point-based versions scale better because they are a bit less memory-bound as they write to the gradient sequentially and they have a bit more compute due to the duplicated computations. **Conclusion**; Computing gradients via point-loops allows simpler and more generic SIMD and SPMD strategies, the resulting implementation seems to do better in the bandwidth-starved conditions typical of modern hardware (3 or more cores per memory channel). However, additional adjacency information is required to support point-based loops. Next I will talk about limiters, almost all concepts are introduced so it will be shorter (promise). As a little appetizer let me tell you we can recover the extra memory and we could be looking at a 2.7x speedup for gradients+limiters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:15713,recover,recover,15713,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['recover'],['recover']
Safety,"hello,I meet a problem:meson test failed about su2@7.3.1 on centos8_aarch64 but sucesses on centos8_x86_64; ### Steps to reproduce the issue. ```console; aarch64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:628,Timeout,Timeout,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,1,['Timeout'],['Timeout']
Safety,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:16984,avoid,avoid,16984,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['avoid'],['avoid']
Safety,"https://github.com/su2code/SU2/blob/f4116f45f80b7360169e3126e58cc17e24f9aaa6/SU2_PY/fsi_computation.py#L109. The base C++ code ~/git/su2/SU2_CFD/src/driver_structure.cpp has five arguments:; ```c++; new CFluidDriver(config_file_name, nZone, nDim, periodic, MPICommunicator); ```; However, the python script fsi_computations.py provides uses four arguments; ```python; FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], comm); ```. # Missing argument error; This gives the following error during execution. ; ```; File ""~/git/su2/bin/pysu2.py"", line 579, in __init__; this = _pysu2.new_CFluidDriver(*args); TypeError: new_CFluidDriver() takes exactly 5 arguments (4 given); ```; I was able to get rid off this error by adding proving the missing argument for periodic BCs. # Order of arguments did not cause any issues. It seems that ; ```python; cfd = pysu2.CFluidDriver(fsi_config['CFD_CONFIG_FILE_NAME'],; 1,; fsi_config['NDIM'],; False,; MPI.COMM_WORLD); ```; and; ```python; cfd = pysu2.CFluidDriver(fsi_config['CFD_CONFIG_FILE_NAME'],; 1,; False,; fsi_config['NDIM'],; MPI.COMM_WORLD); ```; are both valid calls and the simulation runs. I am not sure if this is safe!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642:1185,safe,safe,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/642,1,['safe'],['safe']
Safety,"i_i[iVar]);; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi_i[iVar]);; }; }. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // i to j vector; double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. // projections; double proj_i[nVar], proj_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); proj_i[iVar] = proj_j[iVar] = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; proj_i[iVar] += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j[iVar] -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }; }. // choose the ""right"" delta based on sign of projection; // and avoid division by zero; double lim_i[nVar], lim_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = phiMax(iPoint,iVar);; lim_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limits<double>::epsilon();. // very simple if's are required to get vectorization; // trough vector comparisons and masked blends; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; if(proj_i[iVar] <= 0.0); {; lim_i[iVar] = phiMin(iPoint,iVar);; proj_i[iVar] = min(proj_i[iVar], -eps);; }. if(proj_j[iVar] <= 0.0); {; lim_j[iVar] = phiMin(jPoint,iVar);; proj_j[iVar] = min(proj_j[iVar], -eps);; }; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHU",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:6100,avoid,avoid,6100,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['avoid'],['avoid']
Safety,"ib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3061,safe,safe,3061,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['safe'],['safe']
Safety,"ild\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2387,Sanity check,Sanity check,2387,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Sanity check'],['Sanity check']
Safety,"ile MPI Version error on Windows. I can build successfully by run ` py .\meson.py build` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1024,avoid,avoided,1024,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['avoid'],['avoided']
Safety,"irst;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does not help much. This is the 4 core summary:. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 2.0 | 2.0 | 3.8 | 2.8 |. I think the point-based versions scale better because they are a bit less memory-bound as they write ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:14076,recover,recovers,14076,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['recover'],['recovers']
Safety,"it ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is probably not a good idea to draw conclusion about <1% variations. Moving on, I took the top level percentages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a tempor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:3946,predict,predicted,3946,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['predict'],['predicted']
Safety,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6770,timeout,timeout,6770,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"k, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f7495f2acb0]; [ system:14029] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f7495b91425]; [ system:14029] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f7495b94b8b]; [ system:14030] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f13a80aecb0]; [ system:14030] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7f13a7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:3191,abort,abort,3191,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['abort'],['abort']
Safety,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2560,Sanity check,Sanity check,2560,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['Sanity check'],['Sanity check']
Safety,"l Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1441,risk,risk,1441,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['risk'],['risk']
Safety,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1457,Sanity check,Sanity check,1457,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['Sanity check'],['Sanity check']
Safety,"lf.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:2270,timeout,timeout,2270,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['timeout'],['timeout']
Safety,"loads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1991,Detect,Detect,1991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Detect'],['Detect']
Safety,"look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matrix-matrix multiplications are representative, this should be a conservative estimate as I am not considering the eventual fusion of convective and diffusive discretizations. **The vectorized code is 1.5 times faster.**; This is a fair 1.5 as the code is running on 4 fast cores (parallel via colouring for the reasons I explained previously) and 2 memory channels (scalar code can eventually saturate the memory bandwidth too, but it would take an unreasonable ratio of cores to channels to do so).; Furthermore the scalar code I am considering is writing to CSysMatrix with all the mapping and vectorized writes I mentioned before, before you get all compound interest and take this 1.5 with the 1.47 from CSysMatrix, the speedup relative to code without mapping and vector writes is 1.85.; I restate that this does not require changes to the data layout, again for reasons previously mentioned. ## SpMv - Sparse matrix-vector multiplication; With all these speedups the linear solvers will start taking well over 50% of the time, and so it is desirable to make some improvements there too.; Sadly SpMv is as bandwidth bound as it gets, 1 FMA per 8 bytes, nonetheless I implemented some number-of-variable-specific kernels (for nVar=4 and nVar=5) and I can get about **1.12** speedup (same realistic core to channel conditions). I am not going to dump that code here because it is not too nice to look at (it uses intrinsics) but again that would be something hidden away in CSysMatrix that most people would not need to look at, and there would be a safe generic fall-back for arbitrary number of variables. I think I will do the estimated global speedup together with the summary/proposal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:4278,safe,safe,4278,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['safe'],['safe']
Safety,"m_j = phiMax(jPoint,iVar);. const double eps = numeric_limits<double>::epsilon();. if(proj_i <= 0.0); {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }. if(proj_j <= 0.0); {; lim_j = phiMin(jPoint,iVar);; proj_j = min(proj_j, -eps);; }. lim_i = (lim_i-phi(iPoint,iVar))/proj_i;; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i);. lim_j = (lim_j-phi(jPoint,iVar))/proj_j;; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j);; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Something in the code above is a bit different from the implementation in SU2, namely:; ```C++; double lim_i = phiMax(iPoint,iVar);; if(proj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3008,avoid,avoids,3008,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['avoid'],['avoids']
Safety,"meson.build does indeed look short and clean. Tried this on mac, and hit the following error (I guess the OS is more picky?):. ERROR: Could not detect Ninja v1.5 or newer. Any issue with updating to a newer ninja version in the bootstrap? . Also, for older git versions (like mine apparently), you may need to add the --init and --recursive flags to 'git submodule update'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495097393:144,detect,detect,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495097393,1,['detect'],['detect']
Safety,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:2244,detect,detection,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['detect'],['detection']
Safety,"ne 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:1504,Timeout,TimeoutError,1504,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['Timeout'],['TimeoutError']
Safety,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3584,Sanity check,Sanity check,3584,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['Sanity check'],['Sanity check']
Safety,"om/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5222,timeout,timeout,5222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['timeout'],['timeout']
Safety,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:2136,avoid,avoid,2136,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['avoid'],['avoid']
Safety,"opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:2100,safe,safe,2100,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['safe'],['safe']
Safety,"ould have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; Th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6124,recover,recover,6124,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['recover', 'safe']","['recover', 'safe']"
Safety,pack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. Ok: 1; Expected Fail: 0; Fail: 0; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build/meson-logs/testlog.txt; ```; I want to know what's causing this difference. Does su2 not support aarch64 testing?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:2067,Timeout,Timeout,2067,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,1,['Timeout'],['Timeout']
Safety,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:3024,abort,aborted,3024,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['abort'],['aborted']
Safety,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1338,recover,recover,1338,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['recover'],['recover']
Safety,"primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6343,recover,recover,6343,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['recover'],['recover']
Safety,"ptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patter",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2207,detect,detected,2207,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['detect'],['detected']
Safety,"ry_plane) and add the following settings:; ```; % Surf; YES=oldEuler; NO=NewEuler; VISUALIZE_SURFACE_DEF= NO ; % Vol; YES=UpwRoe; NO=JST_BC; VISUALIZE_VOLUME_DEF= NO; % YES=JST; NO=see VOLUME_DEF; MUSCL_ADJFLOW= NO; ```; In that branch I added the possibility to run the old or new Euler_Wall BC on `MARKER_EULER `walls (`MARKER_SYM `always uses the the new implementation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1134,recover,recovers,1134,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['recover'],['recovers']
Safety,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1936,recover,recovered,1936,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,2,['recover'],['recovered']
Safety,"some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aaf6b411fd30a0aab80; > 29ebe325d8/Tutorials/Inviscid_Bump/Inviscid_Bump.md; >; > —; > You are receiving this because you are sub",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1306,avoid,avoiding,1306,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['avoid'],['avoiding']
Safety,"t if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a gui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2784,avoid,avoid,2784,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['avoid'],['avoid']
Safety,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2162,safe,safe,2162,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['safe'],['safe']
Safety,"tColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12656,avoid,avoid,12656,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['avoid'],['avoid']
Safety,"thanks! should I close issue,.. or will someone take it up and code auto FFD box number detection?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495213847:88,detect,detection,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495213847,1,['detect'],['detection']
Safety,"the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2347,detect,detected,2347,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['detect'],['detected']
Safety,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1999,avoid,avoid,1999,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['avoid'],['avoid']
Safety,"turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3140,detect,detected,3140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['detect'],['detected']
Safety,"turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surfac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1080,detect,detect,1080,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['detect'],['detect']
Safety,"ture of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release. My apologies, I misunderstood your request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:1490,detect,detection,1490,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['detect'],['detection']
Safety,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2153,redund,redundant,2153,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['redund'],['redundant']
Safety,"wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot for SST. The results are not quite as good as SA in general, but I expected that considering some limitations reported in the literature (ex a min y^+ ~ 0.01 and so on). Here is a comparison against experimental data by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must speci",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:2612,predict,prediction,2612,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['predict'],['prediction']
Safety,"we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4118,risk,risk,4118,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['risk'],['risk']
Safety,"xes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5169,avoid,avoiding,5169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['avoid'],['avoiding']
Safety,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:1275,safe,safety,1275,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['safe'],['safety']
Security," #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertic",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:987,validat,validate,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['validat'],['validate']
Security," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1557,Validat,Validated,1557,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Validat'],['Validated']
Security," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1757,validat,validation,1757,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['validat'],['validation']
Security," committed to the develop branch.; > > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > > ; > > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > > ; > > ; > > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?; > ; > Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attched the error file with Valgrind output. The test files are on the above conversations so that you may also take a try. Thanks for the help! [error.txt](https://github.com/user-attachments/files/16323710/error.txt). From the error, I think The SU2_CFD encountered an invalid memory read operation during an attempt to read the inletUNI.dat file, causing the program to crash with a segment error (SIGSEGV). The specific error occurs in the CConfig::GetInletPtotal function, which seems attempts to access memory that has not been properly initialized or allocated. Any ideas? @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890:2323,access,access,2323,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890,1,['access'],['access']
Security," consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1749,Validat,Validation,1749,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['Validat'],['Validation']
Security," for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1064,validat,validated,1064,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['validat'],['validated']
Security," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2305,access,access,2305,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['access'],['access']
Security," new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:1295,access,access,1295,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['access'],['access']
Security," of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1372,Validat,Validation,1372,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,1,['Validat'],['Validation']
Security," that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterproof but might be more workable.; > What do you think?; > Eran; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581#issuecomment-423273117>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AE7akEt5omvVYLjMzzdaTQ6jgPza0N4wks5uc9R-gaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:1689,validat,validation,1689,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['validat'],['validation']
Security," the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to preven",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1265,validat,validation,1265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['validat'],['validation']
Security," to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of oth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1744,validat,validation,1744,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['validat'],['validation']
Security," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5712,access,accessing,5712,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['access'],['accessing']
Security," where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2192,validat,validation,2192,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['validat'],['validation']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2988,secur,security-and-quality,2988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security-and-quality']
Security,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:62,access,access,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909,2,"['access', 'sanitiz']","['access', 'sanitizers']"
Security,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:37,secur,security,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,4,"['attack', 'sanitiz', 'secur']","['attack', 'sanitizing', 'secure', 'security']"
Security,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:211,access,accessed,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['access'],['accessed']
Security,"## Proposed Changes. CoDiPack update that fixes out-of-bounds accesses. Those lead to deadlocks in hybrid parallel discrete adjoint test cases. ## Related Work. work on hybrid parallel AD, e. g. #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2153:62,access,accesses,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/2153,1,['access'],['accesses']
Security,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:558,validat,validated,558,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['validat'],['validated']
Security,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:210,validat,validation,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['validat'],['validation']
Security,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:668,validat,validation,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['validat'],['validation']
Security,"## Proposed Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:395,validat,validation,395,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,1,['validat'],['validation']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:194,access,accessed,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['access'],['accessed']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204:235,validat,validation,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204,1,['validat'],['validation']
Security,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:726,expose,exposed,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['expose'],['exposed']
Security,"## Proposed Changes; - Protect `AD::GetDerivative()` call trees by `AD::BeginUseAdjoints()`, `AD::EndUseAdjoints()`.; - `GetAdjointSolution_time_n()` and `GetAdjointSolution_time_n1()` use lock-free adjoints access now. ## Related Work; continues #2146; related to #1984. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:208,access,access,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['access'],['access']
Security,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:77,sanitiz,sanitizer,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,2,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:286,access,access,286,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,2,"['access', 'expose']","['access', 'expose']"
Security,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:666,validat,validation,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['validat'],['validation']
Security,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:235,access,accessed,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['access'],['accessed']
Security,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1290:585,validat,validation,585,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290,1,['validat'],['validation']
Security,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:1172,access,access,1172,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['access'],['access']
Security,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:332,validat,validation,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['validat'],['validation']
Security,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:302,validat,validation,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,['validat'],['validation']
Security,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:279,access,access,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['access'],['access']
Security,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:635,access,accessed,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,1,['access'],['accessed']
Security,"## Proposed Changes; Small follow-on from #2039. Fixes two data races that did not affect the results but polluted the thread sanitizer findings (write-write for value that is not read and read-write for value that is overwritten with itself). ## Related Work; #2039. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2046:126,sanitiz,sanitizer,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/2046,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055:274,access,access,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055,1,['access'],['access']
Security,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:32,sanitiz,sanitizer,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:701,validat,validated,701,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,1,['validat'],['validated']
Security,"## Proposed Changes; This PR automates the address sanitizer analysis that lead to the fixes in #2212. I'll make the additions step by step, to see if things in the CI pipeline work as expected. ## Related Work; https://github.com/su2code/Docker-Builds/pull/24, #2212, #2068, #2213. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:51,sanitiz,sanitizer,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:413,expose,exposed,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['expose'],['exposed']
Security,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:997,validat,validate,997,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['validat'],['validate']
Security,"## Proposed Changes; This address the issue in #1916 to resolve the Intel compiler warnings generated by NEMO. Turns out I don't have access to an intel compiler, but -warnlevel=3 using GCC does not give any issues. @vdweide, @pcarruscag, @bigfooted could you make sure the issue is resolved?. ## Related Work; Issue #1916. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1918:134,access,access,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1918,1,['access'],['access']
Security,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:147,access,access,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['access'],['access']
Security,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:1261,access,accessible,1261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['access'],['accessible']
Security,"## Proposed Changes; To simplify the maintenance of hybrid parallel SU2, we want to run thread sanitizer tests as part of the CI pipeline. We use thread-sanitizer enabled containers for this. This is work in progress and there are things that need testing, so I want to take it step by step while observing the behaviour of the CI pipeline. ## Related Work; https://github.com/su2code/Docker-Builds/pull/17 and follow-on PRs, #1679. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:95,sanitiz,sanitizer,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,2,['sanitiz'],['sanitizer']
Security,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:476,Validat,Validation,476,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,1,['Validat'],['Validation']
Security,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:26,access,accessing,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['access'],['accessing']
Security,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:69,access,access,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,1,['access'],['access']
Security,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:182,access,access,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,3,['access'],['access']
Security,"### Preamble. I am moving the discussion about SIMD that started in #716 here and adding hybrid parallelization.; The two topics go hand in hand since both (SPMD and SIMD) consist of processing multiple data (MD) elements simultaneous, either by a single program (SP) that is run by multiple threads (generally with shared view of memory), or by a single instruction (SI) run by a single core.; The reason SIMD came up in #716 is that, as I will demonstrate, vectorization needs to be supported by data structures. On the other hand SPMD needs to be supported by algorithms designed to avoid race conditions, two or more threads modifying the same memory location. Instead of continuing #716 I think it is better to let that become documentation for #753.; I did not add **without loss of readability** to the title because it is long as is, that requirement is present nonetheless.; I open these issues in the hope that people participate (I am not a fast writer so this is actually a lot of work) and so far great comments and insights have come from those with experience in these topics (kudos to @economon and @vdweide). But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...). My (ambitious) goal with this work is to lay down an architecture for performance, i.e. not just to improve the performance of a few key numerical schemes but to create mechanisms applicable to all existing and future ones. Moreover I want that to be possible with minimal changes to the way those bits of code are currently written.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789:1301,access,accessible,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/789,1,['access'],['accessible']
Security,"(I was not expecting this many comments so quickly, thanks guys!). First let me clarify the intent.; I do not propose replacing the routines that deal with CSysMatrix, or change its format, all that (Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:397,access,access,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['access'],['access']
Security,") arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly waste a lot of memory.; The solution is to use a Block-CSR format (like in CSysMatrix) where the blocks are the vectors we want and instead of one row per point we have one row per SIMD group. But even within a SIMD-sized group points can have different number of neighbors...; The solution for that is padding, within each group the number of neighbors is rounded up, shorter rows are then padded with valid data, e.g. jPoint=iPoint, direction=0, and iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already took care of that by rounding up the number of columns, and so that seemingly out-of-bounds access is safe (ain't encapsulation great). Padding also aligns the start of each column, thus it is a generally good thing to have (on large dimensions) whether used or not. Here is a relative performance recap before we talk bout parallelization. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core sp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:11634,access,access,11634,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['access'],['access']
Security,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:219,access,access,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,2,"['access', 'password']","['access', 'password']"
Security,"**Describe the bug**. Hi SU2 developers,. I will consider this as a possible bug until I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hum",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:133,validat,validation,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['validat'],['validation']
Security,"**Describe the bug**. The serial regression test `p1rad`, which runs SU2_CFD on [TestCases/radiation/p1model/configp1.cfg](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/TestCases/radiation/p1model/configp1.cfg#L50), has a heap-buffer-overflow in [`CConfig::GetWall_Emissivity`](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/Common/src/CConfig.cpp#L9614) according to Clang's address sanitizer. . According to my printf debugging, `nMarker_Emissivity` is `2` and `Wall_Emissivity` is `{""left"", ""right""}` (matching the cfg file), but `CRadP1Solver::BC_Marshak` calls `GetWall_Emissivity` with the marker string `""upper""`. . **Bug report checklist**; - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; Ubuntu 22.04 with Clang++ 16.0.6, MPI disabled, SU2 at current `develop` branch, commit f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2211:445,sanitiz,sanitizer,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/2211,1,['sanitiz'],['sanitizer']
Security,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:424,firewall,firewall,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['firewall'],['firewall']
Security,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:253,access,access,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,5,"['AUTHENTICAT', 'Authenticat', 'access']","['AUTHENTICATING', 'Authenticating', 'Authentication', 'access']"
Security,"**Describe the bug**; I faced some non determinism in #1892 which I traced back to spurious values of walll roughness.; I tried running UB sanitizer and valgrind, the latter finds one memory error when accessing the flatner, but theres nothing while it's built.; The ndflatner unit test also fails on my machine, both in release and debug builds. Given the complexity of that class, and it only being used in one place, I just wrote alternative code.; @maxaehle can you investigate the issue?. **Desktop (please complete the following information):**; - ubuntu 22 + gcc + mpich (standard packages)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893:139,sanitiz,sanitizer,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893,2,"['access', 'sanitiz']","['accessing', 'sanitizer']"
Security,"**Describe the bug**; If I start SU2_CFD with USE_INLET_PROFILE= YES but the inlet profile does not exist, then an example_profile.dat file will be written for you.; When I start in parallel with mpirun, it crashes for certain choices of nr of nodes. For me, it crashes when I choose n=4,6,7,9,10,12; I have no idea where to look for a solution... [EDIT] So this actually only happens for specific meshes, I could only reproduce it on my turbulent 90 degree pipe bend until now.; [EDIT] a mesh where this happens can be found here (90 degree pipe bend); https://github.com/bigfooted/su2cases/tree/master/validation/sudo_pipe_bend; If you set SPECIFIED_INLET_PROFILE=YES, then for me, it crashes with mpirun and e.g. n=4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767:604,validat,validation,604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767,1,['validat'],['validation']
Security,"**Describe the bug**; In CFVMFlowSolverBase<>::Friction_Forces, there is the following piece of code ([permalink](https://github.com/su2code/SU2/blob/641d2544d8958e9c74fbe9e22d9eb16cbc99167f/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl#L2477)):; ```c++; /*--- Loop over the vertices to compute the forces ---*/; ; for (iVertex = 0; iVertex < geometry->nVertex[iMarker]; iVertex++) {; iPoint = geometry->vertex[iMarker][iVertex]->GetNode();; iPointNormal = geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor();; ...; }; ```; However, a normal neighbor exists only for vertices on the domain (see [`CMultiGridGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CMultiGridGeometry.cpp#L1159) and [`CPhysicalGeometry::FindNormal_Neighbor`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/Common/src/geometry/CPhysicalGeometry.cpp#L8470)), not for halo points. ; **Edit**: The link for `CPhysicalGeometry` was wrong. `CPhysicalGeometry` actually computes the normal neighbors for halo points, `CMultigridGeometry` doesn't. . `iPointNormal` is needed to retrieve `Coord_Normal`, which is needed to compute `WallDist`/`WallDistMod`, which are needed to compute `YPlus`. To fix the above problem, I would therefore suggest to compute `YPlus` only for domain points. Looking for locations where `YPlus` could be accessed (to see whether `YPlus` is needed on non-domain points), I found e.g. [`CTurbSSTSolver::SetTurbVars_WF`](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494). However there again the normal neighbor is accessed without checking that we're on a domain point, so likely this should also be changed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430:1415,access,accessed,1415,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430,2,['access'],['accessed']
Security,**Describe the bug**; a primal and adjoint restart with multigrid will not produce the correct residuals for turbulence. **To Reproduce**; Use the restart validation tutorial for species transport. Switch off Species transport and put turbulence model to SST or SA to see different residuals for the turbulence quantities; [species tutorial](https://su2code.github.io/tutorials/Species_Transport/). **Desktop (please complete the following information):**; - OS: linux; - C++ compiler and version: gcc 5.3.0; - MPI implementation and version: OpenMPI 3.1.6; - SU2 Version: current develop,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1549:155,validat,validation,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549,1,['validat'],['validation']
Security,**Is your feature request related to a problem? Please describe.**. A reminder to add some more verification and validation for species transport; verification: ; - analytic solution of laminar scalar transport for 2D planar and axisymmetric cases available for some convection diffusion of 2 streams; validation:; - turbulent species transport (nonreacting turbulent fuel jet),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1789:113,validat,validation,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/1789,2,['validat'],['validation']
Security,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940:251,attack,attack,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/940,1,['attack'],['attack']
Security,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:656,Validat,Validation,656,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:407,validat,validation,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,1,['validat'],['validation']
Security,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:31,sanitiz,sanitizer,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,3,['sanitiz'],"['sanitizer', 'sanitizers']"
Security,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:91,attack,attack,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,8,['attack'],['attack']
Security,"- The meshes are available here: https://github.com/su2code/VandV/tree/master/rans/dsma661; - The config files for the GG + LSQ results are here: [dsma661_configs.zip](https://github.com/su2code/SU2/files/3842634/dsma661_configs.zip). - I did not run the other solvers myself. Those are results from the NASA TMR website. I don't have access to those solvers unfortunately. . - Yeah the non-monotonic variation worried me as well. But all the simulations were converged to a density residual of -13. (all of them have over 6 orders of residual reduction). The residuals for the GG+LSQ results shown here:; ![res_SA](https://user-images.githubusercontent.com/30271435/68789548-8a641880-05fa-11ea-8885-4e024fe84eda.png); I tried a few re-runs of that finest mesh with a couple of different options. I reduced the maximum CFL to ~30 from 1000 and it still gave the same result. I reduced the number of cores I was running on from 80 to 20 and that had no effect either. As soon as I ran without the `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` option, it got a C_L of about 0.159402 which would be more in line with the other solvers. @economon I haven't tried a high fixed CFL. Let me check that behavior and report back.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553524258:335,access,access,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553524258,1,['access'],['access']
Security,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2023,secur,security,2023,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"/558c3c39-c604-402a-87c7-f616b0e6c575); ![image](https://github.com/su2code/SU2/assets/50565314/0bc69766-595d-47f6-8136-1f50cbac07f6); ![image](https://github.com/su2code/SU2/assets/50565314/67a3e69f-ea4e-4f80-a01e-c179d86f989d); The **H** is the Heaviside function.; ![image](https://github.com/su2code/SU2/assets/50565314/cc5e7510-4ce5-4c04-a468-5af0211f2e6d). 2. Sarkar; In the Sarkar's CC, the pressure dilatation(![image](https://github.com/su2code/SU2/assets/50565314/7abcdd0e-c760-47b0-bc62-9ff6b918c28d)) is considered. The k transport equation is :; ![image](https://github.com/su2code/SU2/assets/50565314/c4d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:2121,Validat,Validation,2121,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['Validat'],['Validation']
Security,"/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1462:35: warning: format ‘%lld’ expects argument of type ‘long long int’, but argument 3 has type ‘int64_t {aka long int}’ [-Wformat=]; fprintf(msh->hdl, ""%lld "", LngTab[ LngCpt++ ]);; ~~~^ ~~~~~~~~~~~~~~~~~~; ; %ld; ```; Moreover later on the script (even if it asks me for permissions, and I provide the password):; ```. Installing _amgio.; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; Installing _amgio.; Installing pyAMG for Linux.; pyAMG installation failed. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619345758:2432,password,password,2432,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758,1,['password'],['password']
Security,"0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9284,secur,security-vulnerabilities,9284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:3135,expose,expose,3135,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['expose'],['expose']
Security,"1; continue. if not any(self.FSI_marker in key for key in self.markers.keys()):; raise Exception(""The FSI marker was not found in the available sets""). self.markers[self.FSI_marker].sort(); "". Revisied Version:; ""; pos = line.find(""SET1""); if pos == 30:; line = line.strip(""\r\n""); line = line[37:]; line = line.split(); markerTag = line.pop(0); self.markers[markerTag] = []. # First 7 ID which in the same line with SET1; for _ in range(7):; ID = int(line.pop(0)); print(""ID: "", ID ); for iPoint in range(self.nPoint):; if self.node[iPoint].GetID() == ID:; break; if (iPoint == (self.nPoint - 1)) and (self.node[iPoint].GetID() != ID):; raise Exception(; ""Point {} in the set {} was not found in the mesh"".format(ID, markerTag); ); self.markers[markerTag].append(iPoint). # after SET1 line start to read a new line; while True:; line = meshfile.readline().strip(""\r\n""); if not line:; continue; line = line[30:].strip().split(); # when the SET1 ends, there is a SPC card in .f06 file. this is a break condition ; if ""SPC1"" in line:; break; if ""SPC"" in line:; break; if not line:; continue; if line[0] == ""+"":; line.pop(0); if line[-1]==""+"":; line.pop(-1); while line:; ID = int(line.pop(0)); print(""ID: "", ID ); for iPoint in range(self.nPoint):; if self.node[iPoint].GetID() == ID:; break; if (iPoint == (self.nPoint - 1)) and (self.node[iPoint].GetID() != ID):; raise Exception(; ""Point {} in the set {} was not found in the mesh"".format(ID, markerTag); ); self.markers[markerTag].append(iPoint); else:; continue. self.nMarker += 1; continue; #there is warning part for ""FSI marker check"" in here, i just did not write but that is not important for now; self.markers[self.FSI_marker].sort(); "". I am trying to validate this FSI module on a 3D wing. I hope this works in other cases. I can take help for FSI code structure. I have some problem with validation, wings suction and pressure side collapses and analysis diverges. I dont know that the problem on the structural analysis or the FSI code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2313:5788,validat,validate,5788,https://su2code.github.io,https://github.com/su2code/SU2/issues/2313,2,['validat'],"['validate', 'validation']"
Security,"9236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2547,secur,security-vulnerabilities,2547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:956,secur,security,956,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8678,access,access,8678,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['access'],"['access', 'accesses']"
Security,"<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8427,access,accessing,8427,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['accessing']
Security,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607953901:912,expose,expose,912,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901,1,['expose'],['expose']
Security,"> ; > ; > Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; > We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms.; > ; > Is the aligned_alloc from stdlib OK for Win64?. `std::aligned_alloc` is C++17 addition but MSVC does not have it (https://developercommunity.visualstudio.com/solutions/473365/view.html), it didn't work with MinGW as well. Have a look at https://github.com/boostorg/align, in `detail` folder. On windows, the aligned memory has to be freed by `_aligned_free` instead of `free` due to old runtime implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554401239:253,access,access,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554401239,1,['access'],['access']
Security,"> > Fixed it! I think we can start with flat plate and maybe BFS. It might take a week or so for me to get anything done though.; > ; > Sorry but it still says ""Error 404 page not found"". Maybe I cannot access it. Can you share the title please?; > ; > A colleague of mine is working on the verification too on the flatplate, we will soon share the results and we will build on top of these ones. Evaluation of the SST-SAS Model, L. Davidson. I can also start working on BFS if you think you got the flatplate covered or we both can work on flatplate to cross check each other. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2449602321:203,access,access,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2449602321,1,['access'],['access']
Security,"> > Hi @ShukaiWang1110, In SU2, we have different branches:; > > ; > > * The _master_ branch are official releases. They get a version number and are also released with precompiled executables. This is for instance ""SU2 v.8.0""; > > * A new master branch is created from the latest _develop_ branch. Developers are usually working with the develop branch to have access to the latest implementations. New implementations are committed to the develop branch.; > > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > > ; > > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > > ; > > ; > > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?; > ; > Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attched the error file with Valgrind output. The test files are on the above conversations so that you may also take a try. Thanks for the help! [error.txt](https://github.com/user",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890:362,access,access,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890,1,['access'],['access']
Security,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:221,validat,validation,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['validat'],['validation']
Security,"> > I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist.; > ; > Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.; Thank you for your response. Firstly, I would like to know what Verification and Validation (V&V) work has been conducted on the SST-based DDES (Delayed Detached Eddy Simulation) model to date. Secondly, we can provide a compressor cascade validation, with an inlet Mach number of 0.4, a Reynolds number of approximately 500,000, and a spanwise height of about 20% of the chord length, ensuring that the vortices resolved by DDES can develop in three dimensions. Thirdly, as I am a rookie to GitHub, I have not yet found out how to download your pull request code. For further communication, you can contact me via email at linnnnnn2308@gmail.com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976:313,validat,validation,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976,5,"['Validat', 'validat']","['Validation', 'validation']"
Security,"> > I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .; > ; > There is the geometry toolbox for dot product and normal: https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm. The problem is more related to the finding of the wall-normal for a point within the volume mesh, not to the computations that it will be involved in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350:187,access,access,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350,1,['access'],['access']
Security,"> > even if the attackers will succeed in compromising your workflow, they won’t be able to do much.; > ; > But if an attacker compromises the workflow then (s)he will be able to change the permissions too, no ?. Yes, AFAIK. That is why it is recommended to Pin by SHA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1174043432:16,attack,attackers,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1174043432,2,['attack'],"['attacker', 'attackers']"
Security,"> @alecappiello develop is updated with a fix for the thread sanitizer issue, it should fix your CI pipeline once you merge it into your branch. Thanks a lot! I've just done it and tsan tests are indeed not failing anymore!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587:61,sanitiz,sanitizer,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587,1,['sanitiz'],['sanitizer']
Security,"> @patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect.; > ; > In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:; > ; > ```c++; > Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; > ```; > ; > rather than using:; > ; > ```c++; > su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; > ```; > ; > Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities.; > ; > Once again, I want to express my deep appreciation for your contributions. Hey @kursatyurt, thanks for the input! I absolutely agree about the speed of sound change that you suggested, so I will address it in my PR. I will also double check about the Reynolds number update. Haven't used that function before so not sure what the issue is. . It would be great to get additional input on that PR so please review if you get the chance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610:445,access,access,445,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610,1,['access'],['access']
Security,"> Fixed it! I think we can start with flat plate and maybe BFS. It might take a week or so for me to get anything done though. Sorry but it still says ""Error 404 page not found"". Maybe I cannot access it. Can you share the title please?. A colleague of mine is working on the verification too on the flatplate, we will soon share the results and we will build on top of these ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447207964:194,access,access,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447207964,1,['access'],['access']
Security,"> Great! I did not run flamelet + CHT in a full optimization loop, yet. My next step is to validate gradients and add a regression test for the adjoint of flamelet + CHT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033:91,validat,validate,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033,1,['validat'],['validate']
Security,"> Hi @ShukaiWang1110, In SU2, we have different branches:; > ; > * The _master_ branch are official releases. They get a version number and are also released with precompiled executables. This is for instance ""SU2 v.8.0""; > * A new master branch is created from the latest _develop_ branch. Developers are usually working with the develop branch to have access to the latest implementations. New implementations are committed to the develop branch.; > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > ; > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > ; > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > ; > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?. Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attached the error file with Valgrind output. After eliminating the difference of different branches(versions), I guess you may have the same error? The test files are on the above conversations so that you m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869:354,access,access,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869,1,['access'],['access']
Security,"> Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually. Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044:212,validat,validation,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044,1,['validat'],['validation']
Security,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:255,attack,attack,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,2,['attack'],['attack']
Security,"> I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist. Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773:304,validat,validation,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773,2,['validat'],['validation']
Security,"> I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp . There is the geometry toolbox for dot product and normal:; https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp; just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269:185,access,access,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269,1,['access'],['access']
Security,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:250,sanitiz,sanitizer,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,2,['sanitiz'],['sanitizer']
Security,"> I think generalizing the inlet option to read more values would be good. I worked on trying to create a new inlet and it got complicated pretty quickly. The main issue I run into is in COptionInlet in SetValues. To add mass fractions, we need to know the number of species which can vary, so this would need access to config. Just adding an ""INLET_GAS_COMPOSITION"" field lets us use the same supersonic inlet bc (no additional repeated code) but with just one extra get function to pull from config. It feels a little hacky... but seems to save a lot of additional repeated code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203:310,access,access,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203,1,['access'],['access']
Security,"> In theory mass flow outlets and your periodic mass flow fall in the same category of fixed-Cl. I thought about that as well. If I get the streamwise periodic massflow to work that should be equivalent for massflow outlets. After all, quite a few ideas were taken from that implementation. Maybe a question to @economon in that regard (I surely asked that already but cannot remember :brain: :hammer: ): Did you make a gradient validation for massflow-outlets back in the day? If yes, do you remember whether that went well, or did you see some imperfection that wasn't there for pressure-outlets?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030102871:429,validat,validation,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030102871,1,['validat'],['validation']
Security,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:1028,access,accessor,1028,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,2,['access'],['accessor']
Security,"> Recently I was looking around the 3rd Annual SU2 conference web page(#1683), and I came across a presentation that seemed to be related to this PR.; > ; > [SU2conference](https://su2foundation.org/su2conference2022/) : Day2 The title: Implementation of γ-Re θ transition model within SU2: model validation and the presenter is Andrea Rausa.; > ; > I'd like to see the presentation above the presentation. The 2nd SU2 conference presentation video was uploaded. So, Is the 3rd SU2 conference video going to be uploaded?. Hi @sun5k, I'm sorry but I've just seen this message. I have uploaded a link to the presentation to my pull request. If you need anything then feel free to ask.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772:297,validat,validation,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772,1,['validat'],['validation']
Security,"> Thank you Max, can you also add the right hash to meson_scripts/init.py and to preconfigure.py around line 290. Done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210#issuecomment-785813580:44,hash,hash,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210#issuecomment-785813580,1,['hash'],['hash']
Security,"> The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD. Yes.. The name was the first one I gave that routine. It somehow made it through.. Now that I had to type it several times I'd love to have it changed. But anyway.. I'm a bit puzzled that it seems to be so easy but maybe it's just as simple as you said - new approach inside `CDiscAdjSolver` and old in `CDiscAdjFEASolver` (if I got that correctly?). That would come in handy for all further developments. Let's wait for the validation. I'll also do one with this branch for the CHT adjoints tomorrow, just to be sure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542360883:533,validat,validation,533,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542360883,2,['validat'],['validation']
Security,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:338,validat,validation,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530,1,['validat'],['validation']
Security,"> What if you start with the ""perturbed value"" of AoA and then set it to the correct value for the FD step?. Mhmm, I am just thinking this through. At the end of the fixed_cl part, the flow is converged to the `TARGET_CL` and is at some angle of attack `alpha`. If I wanted to start from the perturbed value and set it to the final value of `alpha`, I would have to first, converge it to the perturbed value (`alpha + 0.001`), and then perform the finite difference step back to `alpha`. This would take approximately twice the number of `ITER_DCL_DALPHA` to perform. Which isn't the end of the world, but I would like to avoid if possible. Is there a cleverer way of doing this that I am not thinking off? The problem is that we don't know the final `alpha` until the fixed_cl simulation converges.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539575775:246,attack,attack,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539575775,1,['attack'],['attack']
Security,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:220,expose,expose,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097,2,['expose'],['expose']
Security,"> even if the attackers will succeed in compromising your workflow, they won’t be able to do much. But if an attacker compromises the workflow then (s)he will be able to change the permissions too, no ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1149557138:14,attack,attackers,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1149557138,2,['attack'],"['attacker', 'attackers']"
Security,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:252,access,access,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235,1,['access'],['access']
Security,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:639,validat,validated,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['validat'],['validated']
Security,"></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3924,validat,validation,3924,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['validat'],['validation']
Security,"><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5008,secur,security-vulnerabilities,5008,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"@; *GomerOfDoom <https://github.com/GomerOfDoom>*. *Then it makes sense why I am having this trouble. Thank you for letting me; know. This helps a lot. I will try to figure this one out atleast for my; case, what I can do. Appreciate your response! *. On Mon, Mar 16, 2020 at 7:36 PM Paul <notifications@github.com> wrote:. > I can also confirm that there is an issue with the *binary* Paraview; > output for large files. The code appears to write out the .vtu file just; > fine, but Paraview throws errors when attempting to open it. This does not; > occur for ASCII format Paraview files or smaller binary Paraview files. The; > case I am working on consists of a 180 million cell mesh.; >; > Also, @monika1387 <https://github.com/monika1387> , please note that the; > DG-FEM LES capability is *not* currently fully validated, and may be; > unstable in certain circumstances. Use this at your own risk. We are; > working on fixes for the DG solver, but they are still a ways away from; > being finished.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-599805153>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXCKD44SRSZPDWKSDM3RH2ZZFANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599807771:818,validat,validated,818,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599807771,1,['validat'],['validated']
Security,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:139,access,access,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575,1,['access'],['access']
Security,"@BeckettZhou I think that's a good idea. Just to make sure I understand the BANC model: for cases that have large mesh sizes, we provide configuration files, and visualization of the results (comparisons to higher fidelity data and/or to other solvers). If someone would like to run the case for themselves, they would contact the custodian and the custodian is obligated to provide the meshes. The next step would be to start the github repo. @economon Is it possible to start the repo under the su2code umbrella? Is that something you could start and people can start compiling validation test cases, and their results?. Cheers, ; Jayant",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-425961143:580,validat,validation,580,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-425961143,1,['validat'],['validation']
Security,"@FlorianDm When I was working on the feature_axi to attempt what you have done, I unsed this reference, which should match the incompressible version exactly.; [AxiSymm_1.pdf](https://github.com/su2code/SU2/files/5482565/AxiSymm_1.pdf); [AxiSymm_2.pdf](https://github.com/su2code/SU2/files/5482567/AxiSymm_2.pdf). @jtneedels Has ran/is running a laminar viscous wedge with your formulation of axisymmetric and 3D to do some verification. We have also tried to run the NASA TMR axisymmetric Validation cases, but they are proving to be quite difficult. Hope this is useful to the discussion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721231212:490,Validat,Validation,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721231212,1,['Validat'],['Validation']
Security,@TobiKattmann The validation looks perfect. Happy that it works now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-533541630:18,validat,validation,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-533541630,1,['validat'],['validation']
Security,@WallyMaier oh great I think this book was cited in the publication but I couldn't get access to it,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721247348:87,access,access,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721247348,1,['access'],['access']
Security,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:505,validat,validation,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665,1,['validat'],['validation']
Security,"@alecappiello develop is updated with a fix for the thread sanitizer issue, it should fix your CI pipeline once you merge it into your branch",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-2000417122:59,sanitiz,sanitizer,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-2000417122,1,['sanitiz'],['sanitizer']
Security,"@danielmayer @EvertBunschoten @Cristopher-Morales I ran the scripts that we have for the species transport validation (from @TobiKattmann). Primal restart, adjoint restart and the comparison between adjoint and finite difference gradients all seem to work fine for the current PR. I will add some additional regression tests this week to make sure we do not break anything while polishing the code (specifically adding an axisymmetric case and a CHT case).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936:107,validat,validation,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936,1,['validat'],['validation']
Security,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:591,access,access,591,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['access'],['access']
Security,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:850,validat,validating,850,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['validat'],['validating']
Security,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:136,access,accessible,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,2,['access'],"['access', 'accessible']"
Security,"@economon that is what I propose for AUSM+up(2) and SLAU(2). Unfortunately their predecessor AUSM does not fit into the same generic form and so it will not have access to these numerical Jacobians. On the subject of accurate Jacobians, IMO matrix free is definitely the way to go (not just because of storage but because it would possibly require changing the edge loops, I did something similar in the past and it got messy).; Using forward AD to linearize the entire iteration and create some sort of Newton-nonlinear-GMRES monster solver preconditioned by the current 1st order Jacobians would indeed be interesting... I have no feeling for potential speed-up though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-504050203:162,access,access,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-504050203,1,['access'],['access']
Security,"@gbaty, a few comments basedon experience solely in py2.7 --. pattern 1; this is in place to save the need for additional import lines in user scripts. namely package1.p1m1.\* would not be accessible without import package1.p1m1. since in the grand scheme of things the SU2 python package is a small package, i think it's important for the whole python package to be accessible with one import SU2. So would hesitate to delete all imports without understanding how the sub (and subsub) modules would be accessed. pattern 2; this is aliasing a submodule that is commonly used to a higher module tier. this can be removed if it's too messy. the .p1m1 syntax is fine since this isn't exposed to the user. pattern 3; same aliasing idea as pattern 2, except aliasing a commonly used object to another module branch. absolute imports are great, i'm cool with this. pattern 4; sounds fine, i think this only shows up in one or two places right? if it's in multiple places i'd be concerned about a lot of repeated code and would try to make an import helper function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-201176278:189,access,accessible,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-201176278,4,"['access', 'expose']","['accessed', 'accessible', 'exposed']"
Security,"@hlkline That's a good point about the regression tests ensuring that the v&v results will be unlikely to change. If we have the same residuals for all the test cases, it isn't a stretch to say that the final results of the v&v cases will stay the same. But sometimes the test values for the regression tests are changed during development and then we lose the guarantee. . From the viewpoint of being rigorous, I agree with the suggestion to run the v&v cases before a major release like 7.0 and also with @erangit on keeping track of the last version that they were run for. I am unsure about holding the people who add the test cases responsible for re-running them. Circumstances change, and access to resources change. That may make it hard for people to run the v&v cases. . I also think it is a good idea to have the effort be collaborative so people can add cases. My concern is about size limits that github has on repositories. Some of the mesh files are going to be massive, especially given that we want to perform grid convergence studies. We will soon be over the size limit. I am not sure about how to get around that. Suggestions would be great!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423291806:696,access,access,696,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423291806,1,['access'],['access']
Security,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:1097,expose,expose,1097,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,1,['expose'],['expose']
Security,@joshkellyjak I updated the [container documentation](https://su2code.github.io/docs_v7/Container-Development/) and included details on the thread sanitizer,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011#issuecomment-1680241131:147,sanitiz,sanitizer,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011#issuecomment-1680241131,1,['sanitiz'],['sanitizer']
Security,"@joshkellyjak The memory access violation described [here](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720) does not occur unconditionally, it depends on the test case. The iterations of the inner loop for `jSpan == 0` and `jSpan == nSpanDonor - 1` (that we removed in the fix) only have an effect if the if-conditions in the loop body evaluate to `true`. I checked this for the serial test cases in the test file's ""turbomachinery"" section. - `aachen_turbine_restart`: iterations both with `jSpan == 0` and `jSpan == nSpanDonor - 1` have an effect, the latter trigger the memory access violations; - `jones_turbocharger_restart`: some iterations with `jSpan == 0` have an effect, but iterations for larger `jSpan` usually overwrite the results; also, the case `jSpan == 0` does not trigger the memory access violation; - `axial_stage2D`: the problematic code is not executed by this test case; - `transonic_stator_restart`: the problematic code is not executed by this test case. I think these observations point to why only the Aachen test case had address sanitizer findings, and why only the results of the Aachen test case were affected by the attempted fix. The other test cases basically ""do not care"" whether we do the extra iterations. @alecappiello Regarding your earlier question about the restart file. Restart files are to some extent specific to the version of SU2 they were obtained with, in the sense that newer versions of SU2 can behave differently if they use an old restart file. I was wondering if this is the case here, too. If the memory access violation had manifested itself in the restart file, a version of SU2 with the memory access violation fixed could give different results. The observations above point to why only the Aachen test case is affected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507:25,access,access,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507,6,"['access', 'sanitiz']","['access', 'sanitizer']"
Security,@juanjosealonso Thanks for your response. I would definitely want to have a look at SUmb. If there is some documentation with the code and any published work that shows its capability will also help. > Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. Please do provide me the access.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533796609:243,access,access,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533796609,2,['access'],['access']
Security,"@koodlyakshay I was looking at the ADT modifications that you mention.; Do I understand correctly that the roughness height does not influence the wall distance calculation itself? But that you simply need to know what is the roughness height associated with the closest wall point? If this is the case you can probably just use the markerId returned by the wall distance function?; As for mpi aspects, each rank sees the same ADT and I recall that we do have mechanisms to access global marker information.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-595197305:474,access,access,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-595197305,2,['access'],['access']
Security,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:872,access,access,872,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022,1,['access'],['access']
Security,"@patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect. In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:. ```cpp; Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; ```. rather than using:. ```cpp; su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; ```. Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities. Once again, I want to express my deep appreciation for your contributions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075:436,access,access,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075,1,['access'],['access']
Security,"@pcarruscag Hi Pedro, just still want to make sure one thing, does the function the function 'LoadInletProfile' in CSolver.cpp needed to be changed? Since you didn't commit it. From the Valgrind output, a segment error occurred while reading the inletUNI.dat file. This is usually because the memory address attempted to be accessed is 0x0, which means there is a null pointer reference. The segment error occurs in the CConfig::GetInlet_Ptotal function and is due to accessing a null pointer. Maybe you can give me some suggestions and there's no need to change the version at this moment. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241393846:324,access,accessed,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241393846,2,['access'],"['accessed', 'accessing']"
Security,"@pcarruscag I am installing this on a cluster with no internet access. So, I followed the advice from @talbring and I downloaded the codipack, medipack, meson and ninja on my local computer (with internet access). I then replaced the directories in the externals folder in the cluster with the downloaded directories. The local computer runs Ubuntu and used python3 to download the libraries. I hope this is okay. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620554072:63,access,access,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620554072,2,['access'],['access']
Security,@pcarruscag I can change one of the existing testcases to have a validation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662:65,validat,validation,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662,1,['validat'],['validation']
Security,"@pcarruscag I updated the jacobian. Regarding the flux, I am a bit confused as well. The paper referenced above says flux implemented is a higher-order scheme that employs the SLIP scheme's limiter. That being said, I do not have access to Blazek's book at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/705#issuecomment-501025544:230,access,access,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/705#issuecomment-501025544,1,['access'],['access']
Security,"@rsanfer , @oleburghardt , I think I fixed it, I'll do further validation tomorrow, but the reference derivative is very close to the regression value. The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542234952:63,validat,validation,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542234952,1,['validat'],['validation']
Security,"@rsanfer I'm using a test case from Ref [1], which doesn't exactly match the test case matching the figure I gave from Ref [2]. In Ref [1], they ran a whole ensemble of tests at various resolutions, corrections, and inflow/initial conditions. Some of the tests involved laminar separation, while others involved turbulent separation. I did not pick one of the Re = 50,000 cases because those cases involve laminar separation. Travin *et. al.* used a special nonuniform initial condition to promote laminar separation, which I viewed as overly complicated for the purposes of these tests. Instead, I picked a turbulent separation case at Re = 1.4 x 10^5 (roughly matching TS1 from Ref [1]). If you want more details/grids/cfg files, I can certainly provide them. Yes, I used the unsteady compressible solver. But I'm unsure if the circular cylinder case provides a good test case for the unsteady incompressible solver. I did very little with this test case in terms of a proper validation. The references I listed went to great lengths to ensure that the numerical results were consistent with experiments. It seems like a challenging test case. There were a lot of improvements I should have made if I were also trying to get consistent results. For example, my spanwise length was too short, and I didn't look into the impact of the rotation correction for the SA model. I skipped these improvements in the interest of time, since I wasn't aiming for validation, but rather a simple acceptance test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403850762:978,validat,validation,978,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403850762,4,['validat'],['validation']
Security,@salvovitale: just added write access for the developer team. Please try again when you have a moment.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/416#issuecomment-327304618:31,access,access,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/416#issuecomment-327304618,1,['access'],['access']
Security,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619968113:752,secur,security,752,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113,1,['secur'],['security']
Security,"@talbring I have found other issues now (disabled tecio,cgns). [87/331] Compiling C++ object 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o'.; FAILED: SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o; icpc -ISU2_CFD/src/37e1b17@@SU2_CFD@exe -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620066614:658,secur,security,658,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614,1,['secur'],['security']
Security,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:961,hash,hash-style,961,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['hash'],['hash-style']
Security,"@vdweide, of relevance to performance I used -O3 -march=native -DNDEBUG. That last one disables the assertions the container class performs to detect out of bounds accesses.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524534304:164,access,accesses,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524534304,1,['access'],['accesses']
Security,"A little gradient validation using the added Testcase (comp euler, 150 timesteps, pitching airfoil, FFD points as DV, Efficiency obj function). . ![gradient](https://user-images.githubusercontent.com/31306376/65078088-96d24900-d99c-11e9-9fef-1fd1a73dd759.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-532394741:18,validat,validation,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-532394741,1,['validat'],['validation']
Security,Access solution and primitives **at markers** via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1949:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1949,1,['Access'],['Access']
Security,Access solution and primitives via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['Access'],['Access']
Security,"Access the solution files? I'm not sure if that is possible, the runners are not persisted after the tests. But updating the results based on the test logs is fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746,1,['Access'],['Access']
Security,Access to the global to local should be via a function to avoid unintentional insertion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711:0,Access,Access,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762154711,1,['Access'],['Access']
Security,Add angle of attack as a design variable (or design in fixed-lift mode),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/109:13,attack,attack,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/109,1,['attack'],['attack']
Security,Address sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:8,sanitiz,sanitizer,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['sanitiz'],['sanitizer']
Security,"After some investigation I think the problem is related to how rpath was handled differently in OSX and Linux. There is a post on stackoverflow: . [https://stackoverflow.com/questions/19123623/python-runtime-library-dirs-doesnt-work-on-mac; ]([Python runtime_library_dirs doesn't work on Mac](https://stackoverflow.com/questions/19123623/python-runtime-library-dirs-doesnt-work-on-mac)); Quote: ; ```; All of the libraries you're linking against must have install names that begin with ""@rpath/"". For example, if a library is called ""libFoo.dylib"", its install name should be ""@rpath/libFoo.dylib"". You can use ""install_name_tool -id"" to change the install name of a library.; ```; There on I followed this link trying to change the rpath for _pysu2.dylib:. https://stackoverflow.com/questions/33991581/install-name-tool-to-update-a-executable-to-search-for-dylib-in-mac-os-x. However, I noticed that _pysu2.dylib does not have a field called ""LC_RPATH"". Some posts suggested to create a link image under system folder /usr/lib which is not possible for OSX even disabled Mac System Integrity Protection as the /usr/lib directory is read only.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1110617329:1083,Integrity,Integrity,1083,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1110617329,1,['Integrity'],['Integrity']
Security,"Agreed, thanks for fixing those security issues. I know it is more work, but it is important. Extra fixes added to PRs like this help improve the code quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533583473:32,secur,security,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533583473,1,['secur'],['security']
Security,"All, . Regarding the steady test cases, Embraer folks published a paper of their efforts to validate SU2 using the DPW and HLPW geometries (https://doi.org/10.2514/6.2018-2845 <https://doi.org/10.2514/6.2018-2845>) in the last AVIATION. I think that they will be happy to contribute with the meshes and config files. . Also, I can contribute with some unsteady cases. I think that the Backward Facing Step and the Tandem Cylinder test cases are a good start. Best,. Eduardo; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/581#issuecomment-423207120>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCdByjE1ogiSKp7fIos58GcRe-Rdlks5uc6e0gaJpZM4Ww0V4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423260699:92,validat,validate,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423260699,1,['validat'],['validate']
Security,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:769,expose,exposes,769,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,2,['expose'],['exposes']
Security,"All,. Thanks for getting this going. My two cents:. 1. Indeed, while these V&V cases and the TestCases directory / repo are not identical, there is some overlap…some of the TestCases are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://git",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:198,validat,validation,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,2,"['access', 'validat']","['access', 'validation']"
Security,"Also, we're happy to give regular contributors direct access to the repository (easier to collaborate and participate in reviews, etc.). Just let me know if you would like to be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/935#issuecomment-613544012:54,access,access,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/935#issuecomment-613544012,1,['access'],['access']
Security,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:140,validat,validation,140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142,1,['validat'],['validation']
Security,"Antonio,. We will see if this check passes with corrections to .py files, but the mesh file is sitting in a pull request in TestCases repository. I could not add to that repository as part of this pull request. I have a feeling both checks are going to fail unless they can access each other. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-337577313:274,access,access,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-337577313,1,['access'],['access']
Security,"Any further comments on this ? Otherwise I assume that there is no objection and I will merge it in today. Btw. as you might have seen, I enabled codacy for the project in order to check the code for security, errors and code style.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-502652486:200,secur,security,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-502652486,1,['secur'],['security']
Security,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:45,expose,exposed,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,2,['expose'],['exposed']
Security,"Attaching some results for the RAE2822 of the pressure field zoomed in right near the shock on the upper surface. The results do change (lift and drag by a couple percent) mostly due to a change in shock position it seems. The pressure field also shows the same behavior referenced above when the term is included. Unfortunately, we do not have much data to compare with here, since this case is not on the TMR. The integrated quantities above for the bump problem do not appear to be too sensitive to it either way, but the pressure field does indeed show the same discrepancies. In general, I have not been able to find any strong arguments for or against including the term in literature/codes. Although it is prescribed by the theory, some folks mention it is sometimes dropped (TMR also says it is sometimes ignored unless supersonic), or it gets dropped without mention at all. It is certainly affecting the pressure distribution, so we should take that into consideration. It is possible that there is some other bug that gets exposed by its inclusion, but I did not come across anything yet. As we know the SA model does not exhibit this behavior, I lean toward removing it. I'm all ears if you have any other insight. <img width=""1313"" alt=""Screen Shot 2019-10-25 at 2 47 16 PM"" src=""https://user-images.githubusercontent.com/4896083/67607461-615a1180-f739-11e9-9d68-9c5d15fb0acc.png"">; <img width=""1312"" alt=""Screen Shot 2019-10-25 at 2 47 06 PM"" src=""https://user-images.githubusercontent.com/4896083/67607471-68811f80-f739-11e9-82bd-ac1c23b4caad.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-546529544:1034,expose,exposed,1034,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-546529544,1,['expose'],['exposed']
Security,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:205,access,access,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['access'],['access']
Security,"Awesome, close to 1.5 was what I saw on the skylake architecture too (albeit the consumer version).; Thanks for testing again, without the DNDEBUG flag every access to CVariable is an if statement basically. That flag is now set by default when building with meson.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524806934:158,access,access,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524806934,1,['access'],['access']
Security,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:647,access,access-to-actions-from-githubcom,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['access'],"['access-to-actions-from-githubcom', 'access-to-githubcom-actions-using-github-connect']"
Security,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:378,validat,validation,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,1,['validat'],['validation']
Security,"Can someone validate the Conjugate Heat Transfer test case? Perhaps @oleburghardt ? I included the CHT_WALL_INTERFACE in the list of markers that are used for the wall distance computation, but that was not present in the original implementation. I can run the test case, but I don't know what to validate the case against.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435402614:12,validat,validate,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435402614,2,['validat'],['validate']
Security,Can you run it through valgrind or address sanitizer (with debug symbols) to give us more info about where the segfault occurs?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623657896:43,sanitiz,sanitizer,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623657896,1,['sanitiz'],['sanitizer']
Security,Changing angle of attack from python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2027:18,attack,attack,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/2027,1,['attack'],['attack']
Security,Compiling SU2 on a linux computer cluster and it asks for root access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936:63,access,access,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/936,1,['access'],['access']
Security,"Could be a data race, thanks for reporting @kursatyurt. Last I ran the thread sanitizer during the CoDiPack 2 update, nothing came up at the time. The failing test is the recently added `pywrapper_CFD_AD_MeshDisp`. I'll look into it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399:78,sanitiz,sanitizer,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399,1,['sanitiz'],['sanitizer']
Security,"Dear @WenyinWei: presently Mutation is already fully linked to SU2 and is not only something that will allow to deal nicely with chemical reactions, but it presently also used to get all the species/mixture thermochemical properties (including ions and free electrons) and to address thermal non equilibrium (i.e. multiple-temperatures) by incorporating characteristic vibrational and electronic temperatures for various species. We still have not pushed the latest developments in NEMO-TNE2 since we are finalizing some verification and validation test cases and producing appropriate documentation to be added on the SU2 webpage. @srcopela already created a nice substrate for all these features now we are trying to put this up to speed with the latest SU2 versions and capabilities and go beyond that with additional capabilities. Introducing MHD is definitely something on our roadmap, but something that will come after we have completed our merging of TNE2+NEMO and we have one solid feature with thermochemical nonequilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515662933:538,validat,validation,538,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515662933,1,['validat'],['validation']
Security,"Dear @fpalacios and @economon,. I would like to add the su2perio fortran program to the MeshTools repository. Could you please give me access to it? I tried to push it, but apparently I do not have the right to push on that repository. Regards. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/416#issuecomment-326982841:135,access,access,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/416#issuecomment-326982841,1,['access'],['access']
Security,"Dear Jyothi,. This error message indicates that you have specified the AOA option (angle of attack) option twice in your cfg file. Check if this is indeed the case and remove one. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318047362:92,attack,attack,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318047362,1,['attack'],['attack']
Security,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:226,validat,validation,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,2,['validat'],['validation']
Security,Discussion #2213 is about fixes for the address sanitizer detections in the `harmonic_balance` and `hb_rans_preconditioning` test cases (see https://github.com/su2code/SU2/actions/runs/8422887468/job/23065483005?pr=2246).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875:48,sanitiz,sanitizer,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875,1,['sanitiz'],['sanitizer']
Security,Do you have a testcase that demonstrates this implementation? Can you reproduce and compare to the validation plots published by Xiao He? I think you have shared some similar results with us before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478:99,validat,validation,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478,1,['validat'],['validation']
Security,Done. These options are all now exposed to the user in the configuration file directly (v3.2.9).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107#issuecomment-102170781:32,expose,exposed,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/107#issuecomment-102170781,1,['expose'],['exposed']
Security,"Dr. Economon,; It turns out that the latest version of the SU2 prints the outputs that I needed (Cfx Cfy and Cfz). So, I created the surface streamlines, along with pressure coefficient distributions for comparison, and you can find it in the attached document . There are also some results from other studies in the literature in the attached document. ; It seems to me that, the NREL case may not be the best case for validating our model. Comparing the results in the literature, none of the surface streamlines agree well with eachother. In the absence of experimental data, it is difficult to tell which one is more reasonable. I would be happy if you would also comment on these results.; Also, I wonder what the next step is. Is there anything else that you require us to do before merging the model into the master code? I think if the transition model was released officially, the community may apply the transition model to different test cases that we may not heard of or the proprietary ones. . Samet; [BC_Transition_NREL_PhaseVI.pdf](https://github.com/su2code/SU2/files/603139/BC_Transition_NREL_PhaseVI.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-261886757:420,validat,validating,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-261886757,1,['validat'],['validating']
Security,"Everything looks good here with the ADT search. Merging this into the develop branch. Two notes:; 1. I switched MPI_Allgatherv() to SU2_MPI:Allgather() temporarily until we can properly treat the wrapper. This will be easy to change. The code is slightly less pretty, but same results.; 2. Scaling results look very good out to 96 cores and can be ~100x faster than the brute force search. I'll run on O(1000) cores as soon as I have access again to make sure there aren't any hidden problems at scale.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-230977816:434,access,access,434,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-230977816,1,['access'],['access']
Security,Expose all history outputs via the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1986:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1986,1,['Expose'],['Expose']
Security,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,1,['Expose'],['Expose']
Security,Expose mesh deformation (SU2_DEF) and AD gradient projection (SU2_DOT_AD) to the pysu2 Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:0,Expose,Expose,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Expose'],['Expose']
Security,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:495,attack,attack,495,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['attack'],['attack']
Security,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:639,access,accessor,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,1,['access'],['accessor']
Security,Fix bugs detected by the address sanitizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:33,sanitiz,sanitizer,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['sanitiz'],['sanitizer']
Security,"From the SU2 paper, talking about ""guiding principles"":. <img width=""574"" alt=""Screen Shot 2019-10-09 at 3 26 46 PM"" src=""https://user-images.githubusercontent.com/19416354/66525312-edb5d480-eaa9-11e9-9c0f-158b3941b407.png"">. I particularly like. > Full documentation, including a comprehensive set of tutorials. (""including"" implying that the tutorials are a subset of the documentation), and . > expose the full set of options [...] to the practitioner. This conflicts with our ""operating principle"", laid out on the tutorials page:. > Rather than writing a long manual on all available (and constantly evolving) configuration options available in SU2[...]. The Guide to V7 is a good start, but I think at the bare minimum (since I agree that full documentation would be a huge task, though one that's apparently promised on a paper we link on our homepage), we should provide more information about the existing options beyond forcing the user to scroll through config_template.cfg or dig through the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540239931:398,expose,expose,398,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540239931,2,['expose'],['expose']
Security,Further Explicit Adjoints Locking and Lock-Free Adjoints Access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:57,Access,Access,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['Access'],['Access']
Security,"Good Morning,. I'm from Chair of Thermal Engineering of Poznań University of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:321,validat,validation,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,2,['validat'],['validation']
Security,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:77,access,accessible,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['access'],['accessible']
Security,"Good to hear about the progress. In the mean time, I have had a look at the wall model implementation for RANS in your implementation and the current develop. I have a working version validated for SA and SST in the branch 'fix_wallfunctions', which was branched from develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120#issuecomment-782819100:184,validat,validated,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-782819100,1,['validat'],['validated']
Security,"Great idea! Below are some links to databases that I know of. I'd be happy to contribute. . (Some) CFD companies run very large regression tests that can take a long time to complete. Typically, you do not put validation test cases in a regression test (and run it up to convergence) because it will just take too long. A regression test should be <30s or so. ; At a certain point there *will* be validation test cases that will take a couple of weeks to run. If you want to make sure that the validation tests are up-to-date and will run with the current version, create a regression test for it: create a coarse mesh setup for it and run it for only 10 iterations and check the residuals. ; Having said that, it will be nice if there is a general 'run' script that will run all subcases of a single validation case to construct the entire validation and validate the final results with the known/stored solutions.; -nijso. ercoftac database:; http://cfd.mace.manchester.ac.uk/ercoftac/index.html; nparc database:; https://www.grc.nasa.gov/WWW/wind/valid/archive.html; cfl3d V&V database:; https://cfl3d.larc.nasa.gov/Cfl3dv6/cfl3dv6_testcases.html; V&V database for turbulence models:; https://turbmodels.larc.nasa.gov/; drag prediction workshop:; https://aiaa-dpw.larc.nasa.gov/; some cfd-online V&V links: ; https://www.cfd-online.com/Wiki/Validation_and_test_cases; https://www.cfd-online.com/Links/refs.html#validation; reacting flow database:; https://www.sandia.gov/TNF/abstract.html",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426239437:210,validat,validation,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426239437,7,['validat'],"['validate', 'validation']"
Security,"Great!; I see, I will propose different times for the meetings on the Slack channel (https://join.slack.com/t/su2devteam/shared_invite/zt-af0uuqf8-8XNExKMV9G~UVsnkvi5uVA), even for some folks in the US it is very early.; Join the channel if you would like and you can help to pick better times, we want all aspects of SU2 to be accessible worldwide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-883448046:328,access,accessible,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-883448046,1,['access'],['accessible']
Security,"Guys, we cannot simply change defaults like that, update regressions, and call it a day... Even fixing #1551 is a major change that should warrant a major version update. We want SU2 users to be able to rely and trust the code we release...; That is why I suggested that this PR should be used only to change the way of specifying SST options, and introduce simple ones like the V and KL modifications. Then the validation work for SST 2003 (with and w/o modification) would be done in #1557.; But ok, let me look at this and propose a way forward that gets in develop ASAP, **please don't start updating regressions**.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672:412,validat,validation,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672,2,['validat'],['validation']
Security,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:770,access,accessing,770,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['access'],['accessing']
Security,"Hello @talbring. Thank you for the suggestion. After downloading the submodules manually, should I run meson.py or a different script? And when you mean the root folder, do you mean ""externals"" folder or the system's root folder? If you mean the latter, then I don't have root access. Is this necessary for installation? ; Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619940115:277,access,access,277,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619940115,1,['access'],['access']
Security,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:51,validat,validation,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,2,['validat'],['validation']
Security,"Hello Tobi, Charanya, ; I run the simulation with my FSI framework including @economon modifications as suggested by @TobiKattmann. Unfortunately the simulation crashed due to server problems before it was complete but the partial results give us some preliminary information.; ![Comparison](https://user-images.githubusercontent.com/23583209/83328161-42989c00-a281-11ea-8b52-39b1967c1f69.jpg). The figure proposes the same time domain GAF comparison shown in https://github.com/su2code/SU2/issues/828#issuecomment-576826669.; The blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. Here in green I add the solution run with Tom's fix of the BC as discussed with Tobi. You can notice how this new version, while featuring a response similar to the reference response, shows a filtering of the higher frequency dynamics. Can't do yet the Fourier transform of the signal to quantitatively asses at which frequency the results start diverging from the reference, so I don't know how much this discrepancy is, in effect, relevant. ; We are talking about really high frequency dynamics which may be due to the numerical scheme. Certainly, it would be interesting to understand the cause of that.; ; Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-636327003:787,validat,validated,787,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-636327003,1,['validat'],['validated']
Security,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620295725:920,Access,AccessorImpl,920,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725,1,['Access'],['AccessorImpl']
Security,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:159,access,access,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,1,['access'],['access']
Security,"Hello,. So, as promised I add the complete results of the simulation which I re-run in the meanwhile (please zoom the image for better details).; ![Comparison](https://user-images.githubusercontent.com/23583209/83864373-efad6180-a724-11ea-9b87-321ac14834b3.jpg). Same as the previous post, the blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. In black the solution run with Tom's fix of the BC as discussed with Tobi. In this case I scaled the response with the dynamic pressure as did in https://github.com/su2code/SU2/issues/828#issuecomment-576826669. I've also made a zoom of the signal at the beginning (when I introduce the blended step in time on the moving boundary) and at the end when all the dynamics is over. As you can see, as previously mentioned, Tom's fix appears to filter some high frequency dynamics but for the rest the trend is very similar to the reference one. In the end , when the steady value is reached, Tom's fix converges to the same value of the blue signal with the bugged BC. It is true anyway that the difference with the reference is very small, which is something we already knew. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-639402407:550,validat,validated,550,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-639402407,1,['validat'],['validated']
Security,"Hey @EduardoMolina ,; Yes, I guess it would be good if you can test if this actually fixes your validation Testcase. Maybe also adding the case as regression/validation case could be an idea as there is currently none to my knowledge. ; MfG, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515225353:96,validat,validation,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515225353,2,['validat'],['validation']
Security,"Hey @sun5k . I think that discussion sums it up quite well. I had some trouble with high n values at the start of the simulation, as small n values still resulted in a small production addition, and thus increased the n values again. But I think I am able to control it. I will update the code today and work on some validation cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765#issuecomment-1333681411:317,validat,validation,317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765#issuecomment-1333681411,1,['validat'],['validation']
Security,"Hey Sun5k! . I am a master student on the University of Twente, based in the Netherlands. I am also starting to work on the implementation of the Langtry and Menter model into the current version of SU2 for my master thesis (although I have not set-up my own branch yet). The goal would be to validate and hopefully work on some application to test and verify the results compared to other work done in literature and the latest AIAA transition modeling workshop (https://transitionmodeling.larc.nasa.gov/workshop_i/). . I would love to know what your plans are with this model and on what timeframe you are working. As we are both working on this topic, it might be beneficial to combine our efforts? If you would like to discuss this, you can send me an email at r.roos@student.utwente.nl. Kind regards,; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498:293,validat,validate,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498,1,['validat'],['validate']
Security,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:854,validat,validation,854,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['validat'],['validation']
Security,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:449,validat,validation,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['validat'],['validation']
Security,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:45,validat,validating,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['validat'],['validating']
Security,"Hi @ShukaiWang1110,; In SU2, we have different branches:. - The _master_ branch are official releases. They get a version number and are also released with precompiled executables. This is for instance ""SU2 v.8.0""; - A new master branch is created from the latest _develop_ branch. Developers are usually working with the develop branch to have access to the latest implementations. New implementations are committed to the develop branch. ; - When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see. > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile). You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up. . I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241531458:345,access,access,345,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241531458,1,['access'],['access']
Security,"Hi @bmunguia ,; thanks for the fast reply, I'm sorry, the Python version was 3.6. I installed the 3.7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619345758:828,secur,security,828,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758,2,['secur'],['security']
Security,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:201,access,access,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,2,['access'],['access']
Security,"Hi @dkavolis,; It seems like you know your stuff about build systems and associated best practices, it would be great if you could open a PR with the fixes for this, I'd be happy to test the MKL stuff on the systems I have access to.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/823#issuecomment-558107370:223,access,access,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/823#issuecomment-558107370,1,['access'],['access']
Security,"Hi @jatrin - glad to hear that the incompressible RANS solver is working well for you! . Thanks for the feature request. We have worked on this a little in the past, although there is no general method to expose any desired option for multipoint yet. However, in the past, we implemented the same concept for mass flow outlets with the incompressible solver. You might check the commit here to see the changes, and perhaps you can apply them to your own situation: . https://github.com/su2code/SU2/commit/541cae41c2ed5dc47ff1ce8a5ee5f7aff9c5fbf1#diff-e344798f2c0e495f61cf1e9a773e4257",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-600274648:205,expose,expose,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-600274648,1,['expose'],['expose']
Security,"Hi @metuaee<https://github.com/metuaee>, further to @economon, I can add that we are presents working on a branch called NEMO (NonEquilibrium MOdels) that will deal with this type of aspects natively through a proper link with the library Mutation++. We plan to make it available soon through GitHub after some verification and validation steps are finalized.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731#issuecomment-512577363:328,validat,validation,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/731#issuecomment-512577363,1,['validat'],['validation']
Security,"Hi @rois1995 , I'd like to help with validation/verification if I can. Let me know if you are interested. You can contact me at berkecancfd@gmail.com.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2434640466:37,validat,validation,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2434640466,1,['validat'],['validation']
Security,"Hi @rois1995. The LM model code under the development clearly has some problems. I've not finished yet all validation cases for commonly used. So, I can't help with the E387 profile problem. but, I think I can give some helpful comments. . Check the numerical scheme which you used. like Roe and L2Roe, AUSM and SLAU. In my case, I didn't think to use the low dissipation scheme because I thought the code was wrong. I upload the configure file for the T3A flat plate case, which I used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534:107,validat,validation,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534,2,['validat'],['validation']
Security,"Hi All; I’m a bit worried about the logistics related to checking this v&v data base for every new release.; Unlike the tutorials, these cases, by their nature will be large and will require long integrations(the 2D cases might not fall on this category). This means also that significant computational resources will be required for this evaluation (about twice a year for a growing list of cases). Is it practical?; The only way that I think that it might work is that each contributor will be responsible for checking the casesthat he has introduced, before each release. Being a voluntary institution, this can not be enforced (and we do not want to enforce). How about trying to be less demanding:; In each validation case there will be a statement about the last version that it was checked with and the responsible contributor. Each contributor will receive a recommendation to check his cases before a new release, and will be able to do that and update the OK label also after the release.; Less waterproof but might be more workable.; What do you think?; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423273117:712,validat,validation,712,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423273117,1,['validat'],['validation']
Security,"Hi Antonio,; the forum is a brand new feature, so it's normal you hadn't heard about it! :) In fact, mine was one of the very first posts. So that's precisely why we are putting it together, so all developers have access to the discussion there. I think moving this discussion there would be a good starting point (and a good way to encourage its use :D).; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392070338:214,access,access,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392070338,1,['access'],['access']
Security,"Hi Florian, great work, and important to have. The transonic bump case seems to have enough data available for proper validation. ; What are you unsure about? The actual derived source terms? If you have a document with your derivation of the source terms that would help in checking if it is correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713412778:118,validat,validation,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713412778,1,['validat'],['validation']
Security,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:188,validat,validation,188,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,2,['validat'],['validation']
Security,"Hi Lorena,. Sorry for the delay getting back to you. You are right, and the TestCases repository is starting to be huge, mainly because of the stuff that GitHub generates to track the files. Easy to maintain/access alternatives are very welcome. Some releases ago, the grids were in another place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:208,access,access,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['access'],['access']
Security,"Hi Pedro,. SU2 Testcase repo has 3 supersonic TestCases under euler folder (wedge, biparabolic and bluntbody), they all go well without initialization (you may be already aware of these euler cases). But I do not have any specific supersonic case for RANS or Laminar flow problems (some of them ideally be like nozzle flow or SHOCK-BL interaction).; May be need to have a look at NASA CFD site for validation and verification cases. Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500152158:398,validat,validation,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500152158,1,['validat'],['validation']
Security,"Hi Steve,. I think that all your contributions are very interesting, so please feel free to create a pull request. Only one comment, please be sure that you pull to the develop branch (not the master). We only use the master branch for releasing the code. Thanks again!. Best; Francisco. On Jan 11, 2015, at 7:34 AM, Steven Endres notifications@github.com wrote:. > By the way, I have another set up updates for you guys to consider that are ; > beyond the scope of this pull request. Let me know if you are waiting on me ; > to close the pull request or if you can do that. ; > ; > I put the recommended changes for the structure of config.py file in a gist ; > https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the ; > low level config errors validation. I also created a few unit test cases to ; > allow a controlled build up of regex checks without risk of breaking ; > previous bug fixes. ; > ; > Let me know ; > ; > Steve ; > ; > On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote: ; > ; > > thanks for the commands ; > > ; > > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com ; > > ; > > > wrote: ; > > > ; > > > so now the file is being committed as deleted... please roll back to this ; > > > commit ; > > > spendres@6cbddbe ; > > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > ; > > > here are the commands you can use -- ; > > > Reset the index to the desired tree ; > > > ; > > > git reset 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > Move the branch pointer back to the previous HEAD ; > > > ; > > > git reset --soft HEAD@{1} ; > > > ; > > > git commit -m ""Revert to 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > "" ; > > > Update working copy to reflect the new commit ; > > > ; > > > git reset --hard ; > > > ; > > > — ; > > > Reply to this email directly or vie",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69612161:764,validat,validation,764,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69612161,1,['validat'],['validation']
Security,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:594,access,access,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,4,['access'],"['access', 'accessors']"
Security,"Hi Tobi,. If the old results can exactly be recovered for the 3D case discussed, then I recommend updating the code with the changes you've made for the JST convective residual as default since those were the original results and they have also been validated in @RoccoBombardieri 's study. I've just tried the branch `testing_symmetry_plane` with the recommended settings for the NACA0012 pitching airfoil case. With the JST convective residual calculation, the results still appear to be different on initial look. Something still appears to be not right when grid motion is included. Can you please also look into this and try the pitching NACA0012 using the case zip I'd attached in my earlier post?. Thanks,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578083725:250,validat,validated,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578083725,1,['validat'],['validated']
Security,"Hi `su2code/SU2`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request —",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:276,secur,security,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:139,access,access,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['access'],['access']
Security,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046:568,Secur,Security,568,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046,1,['Secur'],['Security']
Security,"Hi everyone, I am working on implementing my changes on top of the accepted transition model implementation. I already created a new branch here in the SU2 repository and I am validating the results. . However, I do not think I can modify this pull request to make it point to the new branch. The only thing I can do is open another pull request from the new branch. Should we close this pull request?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788#issuecomment-1305309880:176,validat,validating,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788#issuecomment-1305309880,1,['validat'],['validating']
Security,"Hi guys~ . Here is sharing the status of the LM model. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://use",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:333,validat,validate,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,1,['validat'],['validate']
Security,"Hi, I was about to open a pull request with the same exact implementation. I can help with the review and validation cases.; I am running test for an inviscid supersonic flow past a diamond airfoil and I am about to run some test on the RANS ONERA M6 wing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072:106,validat,validation,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072,1,['validat'],['validation']
Security,"Hi, all. This PR is resuming the #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid blac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:682,validat,validation,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['validat'],['validation']
Security,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:119,access,access,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['access'],['access']
Security,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:79,access,access,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,1,['access'],['access']
Security,"Hi,. I am trying to install SU2 v7.1.1 on a cluster without internet access. I have downloaded CoDiPack, MeDiPack, Meson, Ninja and Mutation modules in the root directory. However, when I run meson.py I get the following error:. Downloading CoDiPack '1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8'; Traceback (most recent call last):; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1318, in do_open; encode_chunked=req.has_header('Transfer-encoding')); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1239, in request; self._send_request(method, url, body, headers, encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1285, in _send_request; self.endheaders(body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1234, in endheaders; self._send_output(message_body, encode_chunked=encode_chunked); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1026, in _send_output; self.send(msg); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 964, in send; self.connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 1392, in connect; super().connect(); File ""/app/python-3.6.3/lib/python3.6/http/client.py"", line 936, in connect; (self.host,self.port), self.timeout, self.source_address); File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 724, in create_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:69,access,access,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['access'],['access']
Security,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:398,validat,validation,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['validat'],['validation']
Security,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:430,access,accessed,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['access'],['accessed']
Security,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:426,expose,exposed,426,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867,1,['expose'],['exposed']
Security,Hm that seems to be an issue with python 3.5. Do you have access to python3.7? Otherwise manually extract the archive file by going to folder externals/tecio/ and using the command; ```; tar xzf boost.tar.gz ; ```; Then try to rerun meson.py again.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640555096:58,access,access,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640555096,1,['access'],['access']
Security,"I also just made a gradient validation with the species variance OF ... will have the small additions in a follow up PR.; Small and easy case but with SST and 2 species transport equations; ```; SURFACE_SPECIES_VARIANCE gradient ; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | DV number | DA gradient | FD gradient | absolute diff | relative diff [%] | sign change |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+; | 0 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199523955 | 0 |; | 1 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215893397 | 0 |; | 2 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019320096 | 0 |; | 3 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037214309 | 0 |; | 4 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138354969 | 0 |; | 5 | -0.0015565547 | -0.0015568653 | 0.0000003106 | 0.0199522614 | 0 |; | 6 | -0.0002704356 | -0.0002704940 | 0.0000000584 | 0.0215901515 | 0 |; | 7 | 0.0005546628 | 0.0005546735 | -0.0000000107 | -0.0019318288 | 0 |; | 8 | 0.0008743823 | 0.0008743497 | 0.0000000325 | 0.0037199429 | 0 |; | 9 | 0.0008629093 | 0.0008627899 | 0.0000001194 | 0.0138353462 | 0 |; +-----------+-------------------+-------------------+-------------------+-------------------+-------------+. ```. I only consider the y-direction of the points and and fixed the first two ""columns"" to have a smooth transition. Additionally during deformation i have the outlet as MARKER_SYM for smooth Volume mesh morphing , i.e. only the wall is in DV_MARKER. This Gradient validation was brought to you by: FADO :); ![image](https://user-images.githubusercontent.com/31306376/144081781-2c02eae0-f135-4235-8ebf-bc6c83c65345.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-982771284:28,validat,validation,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-982771284,2,['validat'],['validation']
Security,"I believe the viscous components of a lot of bcs are commented out and can probably be removed at this point. I'm not even sure if they are formulated properly for NEMO problems. I think BC_Inlet can be removed. Or all the commented code can be removed with just an error message. Regarding the outlet boundaries, supersonic outlet does seem to be redundant. However, many validation cases use a supersonic outlet, regardless of boundary layers (ASWBLI), so it may be fine to keep.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064:373,validat,validation,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064,1,['validat'],['validation']
Security,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:66,access,access,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695,1,['access'],['access']
Security,"I can also confirm that there is an issue with the *binary* Paraview output for large files. The code appears to write out the .vtu file just fine, but Paraview throws errors when attempting to open it. This does not occur for ASCII format Paraview files or smaller binary Paraview files. The case I am working on consists of a 180 million cell mesh. Also, @monika1387 , please note that the DG-FEM LES capability is *not* currently fully validated, and may be unstable in certain circumstances. Use this at your own risk. We are working on fixes for the DG solver, but they are still a ways away from being finished.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599805153:439,validat,validated,439,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599805153,1,['validat'],['validated']
Security,"I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2683,attack,attack,2683,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['attack'],['attack']
Security,"I can share that version of the code.. but beware, just as Edwin mentions, it is nasty looking and hard to compile (there are intrinsics and all sorts of architecture-specific changes). But, interesting to look at, of course. There you will see that we basically moved up all of the CVariable data (reordered contiguously) and methods to the solver to eliminate the extra layer of indirection, while still keeping access for outside classes, i.e. something like solver[FLOW_SOL]->node[iPoint]->GetPressure() becomes solver[FLOW_SOL]->GetPressure(iPoint). Since you mentioned it, another target is the CNumerics classes. The flexibility is nice, but does it really need an entire set of classes with getters/setters/virtual functions? I think that most of the ComputeResidual() functions could be moved up as methods in the solver classes as well to make more efficient residual kernel loops. In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility. While the former is still true (although certainly doable), the latter does not seem to me as high of a priority any longer. Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). In addition, the CVariable and CNumerics child classes all live almost entirely within their own solvers, so we aren't taking much advantage of code reuse to justify having them as separate classes. For instance, if we just copied the relevant ComputeResidual() routines up into their solvers from numerics, we would have very little code duplication in the end, which is an indicator that we may not really need the extra baggage.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513292350:414,access,access,414,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513292350,1,['access'],['access']
Security,I can write the probe location for debugging purposes.; The probes have access to the same things as the custom outputs and they only output one scalar.; So if someone wants to probe the entire flow field they need to define one probe per variable.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909#issuecomment-1418292228:72,access,access,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909#issuecomment-1418292228,1,['access'],['access']
Security,"I do have them:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ sudo pacman -S --needed meson ninja; [sudo] password for slimshady: ; warning: meson-0.53.2-1 is up to date -- skipping; warning: ninja-1.10.0-1 is up to date -- skipping; there is nothing to do; slimshady@arch-linux-hp-probook-g3-450: ~$ ; ```. How do I use them to build it? Sorry if this is a noob question, haha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631274168:109,password,password,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631274168,1,['password'],['password']
Security,"I don't have access to a cluster to test this on. However, I usually will install Anaconda Python (3) in my home directory when I do run on clusters just to have complete control over the entire Python environment. I think for scientific/engineering computing this is generally a better strategy than relying on the system Python. . On another note, any hints on why these tests are failing?. ```; /home/travis/build/su2code/SU2/TestCases/optimization_euler/steady_naca0012; naca0012_geo: FAILED; ```. ```; execution command: SU2_GEO inv_NACA0012_adv.cfg > inv_NACA0012_adv.log; ERROR: The code was not able to get to the ""OBJFUN"" section.; ERROR: The SU2_GEO values could not be found.; ```. ```; /home/travis/build/su2code/SU2/TestCases/rans/naca0012; Error in test_vals!; turb_naca0012_sst_restart_mg: FAILED; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321769609:13,access,access,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321769609,1,['access'],['access']
Security,"I don't think the fix is as simple as it seems.; Indeed looking back at how we developed the CGNS reader, It was originally meant to read multiple zone in a single file. But during development, someone decided to restrict the reader to only one zone per file (and I don't know if it was validated). So now we are seating in the middle. If we replace line 169 of CGNSFVMMeshReader :; <pre>; if ( nzones > 1 ) {; SU2_MPI::Error(string(""CGNS reader currently expects only 1 zone per CGNS file."") +; string(""Multizone problems can be run with separate CGNS files for each zone.""), CURRENT_FUNCTION);; }; </pre>; by; <pre>; if ( cgnsZone > nzones) {; cgnsZone = 1;; }; </pre>. we can easily support multiple zone in one file. To support one CGNS zone per file, I guess that user should provide either the index in the cgns file of the zone we want to read or even better its name and not rely on SU2 numbering of zones. I think that supporting multiple mesh zones in the same file at the same time as one zone per mesh file should be possible as long as enough information is provided by the user. In this case, I am wondering how the option MULTIZONE_MESH and MULTIZONE option are interacting in the related issue. When MULTIZONE_MESH is set to NO do we expect one mesh file per zone ?; And in this case we can force CGNS Reader to read only the first Zone. In a more generic way something like this should be possible:; MULTIZONE=YES; CONFIG_LIST= (zone_1.cfg, zone_2.cfg, zone_3.cfg); CGNSZONENAMES = (""FluidRotor"", ""Solid"", ""FluidStator"") # To let CGNS pick the right zone in the file and if it not found the first zone can be used (current SU2 behavior). CGNSZONENAMES could also be set in each config file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565:287,validat,validated,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565,2,['validat'],['validated']
Security,I finally managed to install this branch on my windows PC and can confirm that I can now access the vtu files on Paraview version 5.8.0.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055#issuecomment-669275669:89,access,access,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669275669,1,['access'],['access']
Security,"I had a chat with @pcarruscag in the meantime. Summary of the recent changes:; - All the non-FEM classes derived from CPrimalGrid (CLine, CTriangle etc) declared the static members for the connectivity themselves. So they all had to override the virtual getter functions for the connectivity themselves, resulting in a lot of code duplication. -> Now we have an intermediate class `CPrimalGridWithConnectivity<Connectivity>` that overrides them once, accessing the static members of `Connectivity` = `CLineConnectivity`, `CTriangleConnectivity` etc.; - `type*` array -> `std::vector<type>`. As a special case for a fixed-size boolean array, `std::bitset`.; - removed unused variables and functions",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756:451,access,accessing,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352#issuecomment-903237756,1,['access'],['accessing']
Security,"I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035:183,access,access,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1410785035,1,['access'],['access']
Security,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:19,validat,validated,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['validat'],['validated']
Security,"I noticed that the output phase values for WRT_PERFORMANCE= YES are currently off due to the number of output phases not being correctly tracked (we call the SetResultsFiles in the Iteration class most of the time, and the one in the driver with the timing only at the end of the run). @talbring, did you already have something in mind for this? Otherwise, I can think of a cleaner way to handle those performance benchmarks. I think it would be good to start printing that information by default too potentially. A good place might be within the MPI structure, since it is accessible everywhere and we can also hide the timer ifdefs for MPI.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-543913612:574,access,accessible,574,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-543913612,1,['access'],['accessible']
Security,"I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:356,validat,validation,356,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['validat'],['validation']
Security,"I reran the thread sanitizer analysis and it didn't detect any data races. The deviations are small, so I'm with @pcarruscag that this is probably inherent non-determinism. I relaxed the tolerances in #1984.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1483122833:19,sanitiz,sanitizer,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1483122833,1,['sanitiz'],['sanitizer']
Security,"I think I don't have the authority to merge, it says: ""This pull request can be automatically merged by project collaborators""; and ""Only those with [write access](https://docs.github.com/articles/what-are-the-different-access-permissions) to this repository can merge pull requests.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1576156464:156,access,access,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1576156464,2,['access'],"['access', 'access-permissions']"
Security,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:777,access,accessing,777,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['access'],['accessing']
Security,"I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code wor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1396,validat,validate,1396,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['validat'],['validate']
Security,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:63,validat,validation,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354,1,['validat'],['validation']
Security,"I would love to change the branch, if I really knew how to. Should I create a new Pull Request?; I am in the process of rerunning my isothermal validation cases with the updated code. As soon as I can get a stable config+mesh, I will send them over to you for a regression test!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56638023:144,validat,validation,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56638023,1,['validat'],['validation']
Security,"I'll try and find some time to have a look at this today. I think the issue is in the `jSpan == nSpanDonor - 1`. The final value in both the donor and target arrays are 1D values, the values at nSpanDonor - 2 are the values at the shroud. I think the original proposed fix is still needed here as further down you have an array accessing a postion of `kSpan + 1` which iirc resulted in the memory access violation. I think what has happened here is the Aachen case triggers this condition, and results in an error in the calculation of the coefficient for the linear interpolation. When we fixed it, we changed the simulation enough that it throws the residuals off as the computational problem is inherently different. A good test for this would be to extract the values at the interface from the turbomachinery special output with and without this change to see if this is the case. When we were first designing this case @alecappiello had an issue getting the results in one of the zones to agree with experimental results, this could be why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783:328,access,accessing,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783,2,['access'],"['access', 'accessing']"
Security,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:652,access,access,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['access'],['access']
Security,"I'll weigh in with a more in depth answer on a second email, but yes I've; found great value in being able to have a good set of unit tests. Particularly when you don't have good acceptance tests (hard in a fast; moving research code), it gives a developer confidence that new changes; aren't being fundamental assumptions in the code. It lets sub module; developers build ""armor"" around those assumptions. It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is uni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:736,expose,exposed,736,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['expose'],['exposed']
Security,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:433,attack,attack,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['attack'],['attack']
Security,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:81,access,accessor,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772,3,['access'],"['accessor', 'accessors']"
Security,"I've thought about this a bit, and I think the best way forward for this BC is to assume thermal equilibirum in the subsonic flow. In that case the ongoing characteristic for total density can be used to solve for the full thermodynamic state. I think this probably is consistent with use cases such as fuel injection in scramjets, where the injected fluid would be in thermodynamic equilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401:308,inject,injection,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401,2,['inject'],"['injected', 'injection']"
Security,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:264,access,accessors,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['access'],['accessors']
Security,"I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -ICommon/src/./ -I../Common/src/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/output_CHeatOutput.cpp.o' -c ../SU2_CFD/src/output/CHeatOutput.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/allocation_toolbox.hpp(79): **error: the global scope has no ""aligned_alloc""; ptr = ::aligned_alloc(alignment, size);**; ^; detected during:; instantiation of ""void container_helpers::AccessorImpl<Index_t, Scalar_t, Store, AlignSize, 0UL, 0UL>::m_allocate(size_t={unsigned long}, Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL]"" at line 411 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""size_t={unsigned long} C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::m_resize(Index_t, Index_t) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=StorageType::RowMajor, AlignSize=64UL, StaticRows=0UL, StaticCols=0UL]"" at line 445 of ""../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp""; instantiation of ""C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols>::operator=(const C2DContainer<Index_t, Scalar_t, Store, AlignSize, StaticRows, StaticCols> &) [with Index_t=unsigned long, Scalar_t=su2double={double}, Store=Storage",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620066614:1336,Access,AccessorImpl,1336,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620066614,1,['Access'],['AccessorImpl']
Security,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:324,access,accessed,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['access'],['accessed']
Security,"If you are interested, @vdweide spent considerable time between 2003 and 2008 writing a multiblock-structured turbo machinery code called SUmb, as part of the DoE ASCI program. SUmb, although written in Fortran90/95, had all of the interpolation capabilities that you need for turbo machinery computations when radial inlet / outflow profiles (Tt, Pt, flow angles, static pressure, etc.) are given as inputs on a radial grid whose spacing does not match that of the actual computational grid. You may consider creating some interpolation functions (with all the safeguards and error codes) in C++ based on the SUmb code (which was structured in a C++-like way) or at least take inspiration from that approach to identify interpolation utilities / libraries in C++ that could be used for the same purpose. Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. On Sep 20, 2019, at 3:30 PM, Aman uz zaman Baig <notifications@github.com<mailto:notifications@github.com>> wrote:. @clarkpede<https://github.com/clarkpede> Thanks for your response! My work in focused on Turbomachinery and very frequently we need to have inlet profiles. I hope my work will give a neater, cleaner way of making this possible, though I also used python scripts in the past. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/791?email_source=notifications&email_token=AA5FFRDZYQ56RTPMG7RHC6DQKVFJ5A5CNFSM4IYRTZJKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7IBREI#issuecomment-533731473>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRCUZWNCGUIGYDSADO3QKVFJ5ANCNFSM4IYRTZJA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533740827:846,access,access,846,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533740827,1,['access'],['access']
Security,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:840,expose,expose,840,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,2,['expose'],['expose']
Security,Illegal access to normal neighbor of halo vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430:8,access,access,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430,1,['access'],['access']
Security,Impressive! Can you share some info on your implementation? What about the CFL values and the computational time?. One more thing: in another PR (if I recall correctly it was the one for the dimensionless limits to SST) you mentioned the VFE2 test-case. Do you have access to shareable CAD files and meshes?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033:266,access,access,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033,1,['access'],['access']
Security,"In keeping with our open-source philosophy, the SU2 webpage should be open and modifiable by all members of the community, just like the rest of the code. This will make it much easier to manage and improve in the long run with distributed effort. As a first step to accomplish this, we are taking advantage of GitHub Pages (https://pages.github.com) in order to host our current SU2 page. A new repository has been created within the SU2 GitHub organization here:. https://github.com/su2code/su2code.github.io. and it contains a copy of the current webpage located at http://su2.stanford.edu with all necessary modifications to links, data, etc. so that it functions correctly and independently. The files on the master branch of that new repository are automatically hosted for us by GitHub here (for free):. https://su2code.github.io. All developers now have access to this repository, and in the future, we can all collaborate together to keep it updated and modernize it. An important note is that GitHub allows for custom domain names to be applied to this website, allowing us to use a "".org"" domain name instead of https://su2code.github.io in the future, once available (https://help.github.com/articles/using-a-custom-domain-with-github-pages/). As for next steps, I would like to use this PR to invite discussion about this. If we are in agreement to approve this PR, then we will add an automatic redirect from http://su2.stanford.edu to https://su2code.github.io and focus solely on the version of the website in the new repo going forward. Please do share any comments or thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/436:862,access,access,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/436,1,['access'],['access']
Security,Installing SU2 on a machine without internet access,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:45,access,access,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,2,['access'],['access']
Security,"It is possible that while the master rank is writing the template file and throwing the error, another rank starts trying to access the profile data (which was not read) and then segfaults.; Try putting a barrier so that ranks don't escape while the template is being written.; ```; if (profile_file.fail()) {; MergeProfileMarkers();; WriteMarkerProfileTemplate();; // barrier here; } else {; ReadMarkerProfile();; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1264692237:125,access,access,125,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1264692237,1,['access'],['access']
Security,"It turns out using convective BCs drastically changes the global flow pattern. Here you can see a comparison of pressures between a simulation with isothermal wall (top, 300 K) and convective BC (bottom, 300K, 20). Only the BCs in the conical part on the right side are different. Numerical settings and further BCs are identical.; https://github.com/su2code/SU2/assets/42602495/ba378660-ddd3-417c-a75e-f5ab54542697. Here you can see the difference in temperature.; https://github.com/su2code/SU2/assets/42602495/a6fcd09d-a065-46a5-b04a-60052fe35ed4. The difference means, that in one simulation (isothermal wall, top) I get strong, periodic oscillations, while in the other one (with convection) the oscillations are dampened out almost immediately. Is there a SU2 unit test case for the validation of the convective boundary condition I can run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231:789,validat,validation,789,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231,1,['validat'],['validation']
Security,"It's not correct. You need to follow the pattern from CGeometry::ComputeWallDistance; First you collect all the normals that are local to the rank; Then you collect the normals across all ranks (using the NDFlatner), then you access this information by (ClosestRank, ClosestMarker, ClosestVertex); You cannot access the local information directly because ClosestMarker and ClosestVertex may refer to a different rank.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429997290:226,access,access,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429997290,2,['access'],['access']
Security,"It's probably a small fix, but better if @WallyMaier or @jtneedels look into this and fix it, since they are more capable of setting up the compressible test case for verification/validation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712:180,validat,validation,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712,1,['validat'],['validation']
Security,"Just one thought on this. I think it would be nice to run the validation suite for every release, that would force us to keep the configurations up to date, and provide an extra level of quality assurance. Most of the cases will be too expensive for travis but hopefully the computational burden can be spread over the community.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423119881:62,validat,validation,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423119881,1,['validat'],['validation']
Security,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183:1039,access,accessed,1039,https://su2code.github.io,https://github.com/su2code/SU2/issues/183,1,['access'],['accessed']
Security,Maybe a little bit of non determinism because of atomic adjoint updates. @jblueh by chance did you run thread sanitizer after the codi 2 update?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1479902415:110,sanitiz,sanitizer,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1479902415,1,['sanitiz'],['sanitizer']
Security,"Maybe we could define the NO_OPTINAL_CONST based on the MPI Version. https://stackoverflow.com/questions/17772906/why-does-mpi-send-accept-void-source. Gives a hint as to when the transition was made. On Tue, 2017-11-21 at 19:53 +0000, Tim Albring wrote:. @talbring commented on this pull request. ________________________________. In .travis.yml<https://github.com/su2code/SU2/pull/473#discussion_r152384146>:. > @@ -20,7 +20,7 @@ branches:. env:; global:; - CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security""; + CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security -DMEDI_NO_OPTIONAL_CONST"". The problem is that depending on the actual MPI implementation (so for example MPICH, openmpi etc.) send buffer arguments might be declared as const or not. Unfortunately, there is no (easy) way to get that information automatically. It might be even different between versions of openmpi (on travis it is v1.6.5 and its necessary, locally I have v3.x, and its not)... so for now it is trial and error whether this is necessary or not. Maybe I can find that information somewhere, then I will provide it in the wiki. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/473#discussion_r152384146>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AMWwAeCRxzq9FO4-6pkSHTDnihbtByhvks5s4yoygaJpZM4QmNie>. --. Max Sagebaum Chair for Scientific Computing, TU Kaiserslautern, Bldg/Geb 34, Paul-Ehrlich-Strasse, 67663 Kaiserslautern, Germany Phone: +49 (0)631 205 5638 Fax: +49 (0)631 205 3056 Email: max.sagebaum@scicomp.uni-kl.de URL: www.scicomp.uni-kl.de",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-346273506:538,secur,security,538,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-346273506,2,['secur'],['security']
Security,Meson build SU2 requires root password on Linux,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:30,password,password,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,1,['password'],['password']
Security,"My proposal the other day seems to have put you in quite the mood...; Do you also get a ton of ""-1 converted to unsigned short""? Or is that just me?; I'll see what I can do about the rest. > I do not have access to a Mac, so I didn't test if on OSX. I tried clang 6 and clang 10, and had to stupefy the code because of the former, should be ok on Mac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023:205,access,access,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023,1,['access'],['access']
Security,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745:425,secur,security,425,https://su2code.github.io,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745,2,['secur'],['security']
Security,"Ok, SIMD update, with #753, #959, and #966 we now have a unified storage type for the data we need in CNumerics. This means that we (I) only need to implement ""SIMD accessor methods"" (i.e. that return a SIMD type instead of a su2double) for one class (C2DContainer and co.). I think to do SIMD right we need a new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not por",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:165,access,accessor,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['access'],['accessor']
Security,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:958,access,accessed,958,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['access'],['accessed']
Security,"On it, I've disabled the Jacobian contributions in my branch. Initial tests look primising, but I'll need a longer-running test to validate it on my case. Will update once the case has finished.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214:131,validat,validate,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214,1,['validat'],['validate']
Security,"Pardon the intrusion good sir, I noticed the truncated residual and co. could also be an issue for the NEMO folks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1194#issuecomment-777383469:11,intrusion,intrusion,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194#issuecomment-777383469,1,['intrusion'],['intrusion']
Security,"R [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored out of the inner loop so that the resulting assembly looks much simpler:; ```asm; .L15:; vmovsd xmm5, QWORD PTR [rsp-40+rax*8]; vfmadd231sd xmm0, xmm5, QWORD PTR [r15+rax*8]; add rax, 1; cmp rcx, rax; jne .L15; ```; I think the reason for this is that there are plenty of integer registers (64bit) to keep memory locations (rsp, rax, r15 in the above) but there are only 16 ymm registers (256bit). In any case we need to give the compiler a hand, the calculation we need is; `index = iPoint*nVar*nDim + iVar*nDim + iDim` where iPoint is an array of ints; Note that as we loop by nDim and then by nVar all we need is to compute `iPoint*nVar*nDim` outside the loops and then add 1 on each access (which is more or less what the compiler does for the scalar code), in other words we need an **iterator**, something silly like; ```c++; template<size_t VecLen, size_t Incr = VecLen>; class GatherIterator; {; private:; using IntVec = Array<size_t,VecLen>;; using FltVec = Array<double,VecLen>;. IntVec offsets_;; const double* data_;; public:; GatherIterator() = delete;; GatherIterator(const double* data, IntVec offsets) : offsets_(offsets), data_(data) {}. STRONGINLINE FltVec operator()() const { return FltVec(data_,offsets_); }. STRONGINLINE FltVec operator++(int) {; auto ret = (*this)(); offsets_ += Incr; return ret;; }; };; ```; so silly in fact, it only moves forward, we use it in our loop like so; ```c++; ...; auto gradI = grad.getColIterator(iPoint);; auto gradJ = grad.getColIterator(jPoint);. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += (gradI++)*d_ij[iDim];; phiR -= (gradJ++)*d_ij[iDim];; };",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:10879,access,access,10879,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['access']
Security,"ROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:2285,attack,attack,2285,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['attack'],['attack']
Security,"Recently I was looking around the 3rd Annual SU2 conference web page(#1683), and I came across a presentation that seemed to be related to this PR. . [SU2conference](https://su2foundation.org/su2conference2022/) : Day2 ; The title: Implementation of γ-Re θ transition model within SU2: model validation and the presenter is Andrea Rausa. . I'd like to see the presentation above the presentation. The 2nd SU2 conference presentation video was uploaded. So, Is the 3rd SU2 conference video going to be uploaded?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1262591493:292,validat,validation,292,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1262591493,1,['validat'],['validation']
Security,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661:87,attack,attackers,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661,3,"['attack', 'secur']","['attackers', 'secure', 'securitylab']"
Security,"Right... I've finally fix this. The manual/offline build with meson will work in the next version.; For completeness, there is another way to work ""offline"", on a machine with internet access clone the SU2 repo using `git clone`, then run meson which will initialize the submodules, finally copy **everything** to the offline machine.; If this machine **has git** installed, it will detect that the submodules are present.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111:185,access,access,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335#issuecomment-1000842111,1,['access'],['access']
Security,"SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. In our use case we need to link the library so that we can efficiently multithread workflows, keep data in memory, and make analysis as efficient as possible. I realize this is a significant request, but a build process with CMake could be so much simpler and would make your codebase much more accessible to the C++ community. Thanks so much for all your excellent work!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711:574,access,accessible,574,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711,1,['access'],['accessible']
Security,"Seems correct to me,; Thanks guys,; Francisco. Ps.- note that the bottom line of the original change was to add extra info at the end of the solution file like the angle of attack after a fix cl simulation or current solver iter. Sent from my iPhone. > On Dec 13, 2016, at 9:40 AM, Antonio Rubino <notifications@github.com> wrote:; > ; > This is a temporary fix for #341 for the problems in the develop and SU2_SOL related to the unsteady post-processing. Thanks to @LaSerpe suggestion for the bug fix!; > ; > Please, have a look if this solves all the issues and add anything necessary to this PR, so that we could merge it in ASAP.; > ; > Antonio; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/344; > ; > Commit Summary; > ; > Fix bug for unsteady SU2_SOL postprocessing; > Small change; > Small change in travis cfg; > File Changes; > ; > M .travis.yml (4); > M SU2_CFD/src/solver_structure.cpp (52); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/344.patch; > https://github.com/su2code/SU2/pull/344.diff; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-266816485:173,attack,attack,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-266816485,1,['attack'],['attack']
Security,Seems that 'shell=True' is a security risk. Any way to easily fix that by using different options with the system call? We could do a search and replace for the others already in the Python framework.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533370188:29,secur,security,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533370188,1,['secur'],['security']
Security,"Should we use the branching methodology that we use for the SU2 repository? In the sense that we create a develop branch, create branches for any cases we want to add, submit pull requests that can be reviewed by the rest of the community etc. . I like the idea from @bigfooted, of having some regression testing that can run the simulation for a couple of iterations and check residuals (identical to what we do for the TestCases). This might be redundant to the actual regression tests that are done in SU2, but would be an easy first check on weather a particular validation case needs to be run again. Ideally, this would be run before any major version releases, as we discussed earlier. . I can also start working on creating a section on the website for the results of the validation cases. I'll eventually upload a sample validation case with corresponding results that people can model their efforts on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426808018:567,validat,validation,567,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426808018,3,['validat'],['validation']
Security,"So now that the Fluid-only version is reporting correct gradients for prescribed massflow due to the introduced adjoint equation for pressure drop -> the next problem seems to arrive: As of now I did not manage to get validated gradients for a CHT setup. I wonder whether sth additional is necessary there. But as the changes were introduced in the CDiscAdjSolver and CDiscFluidIteration ,always with using proper conditional to assure that the respective code is only excecuted when really needed, I am not sure if the mistake is not somewhere else. Why cant shit just work :disappointed: . btw: for prescribed pressure drop I get nice validated gradients for avgTemp, Drag, massflow",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826:218,validat,validated,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1031698826,2,['validat'],['validated']
Security,"Some updates:. - Python wrapper functionalities have been moved into a dedicated python_wrapper_structure.cpp file for code clarity.; - The data structures for the customized values at boundaries have been removed from the CPoint class. Data structures are stored in the geometry class, they are initialized only when customization is set ON and only for involved vertices. There was no restriction to put the data structures in the solver class, except that when multi-grids needs to be updated (required for non uniform field), the geometry class needed an access to the solver class, which is not the case since everything that is in the Common structure seems to be independent of what it is in SU2_CFD, and I wanted to keep that. Those data structures should not be seen as true PDE-related variables, they should be seen as a generic support for boundary customization.; - CHT related labels have been removed and replaced by ""Python customizable"" in order to not introduce any confusion with the native CHT development. The basic purpose of this work is to enable existing boudary conditions to be customized from Python and not to develop a CHT interface. CHT is just an example of application (since only the HEAT_FLUX and ISOTHERMAL walls are customizable for now).; - Based on the previous point, no new specific boundary condition was introduced. For now, I keep the idea to just modify (one single line) the existing boundary conditions to take into account the customization. New dedicated boundary conditions (for example BC_HEAT_FLUX_CUSTOM or BC_ISOTHERMAL_CUSTOM) would be a 99% copy of the originals... Dedicated boundary conditions for native CHT development can still be defined independently (no condlfict). Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-355928565:559,access,access,559,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-355928565,1,['access'],['access']
Security,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:948,Validat,Validated,948,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Validat'],['Validated']
Security,"Sorry took a while to get around to it but here are the results from the validation cases that were requested. Turns out, this change is minimal in its effect to the overall simulation (at least for the two cases I have run). ## Flatplate; For the flatplate case, there was no difference in the C_D calculation so the lines mesh convergence were on top of each other. But while I was doing that, I was playing around with the solver parameters and there was an interesting difference between simulations run with `WEIGHTED_LEAST_SQUARES` and those run with `GREEN_GAUSS`. I have included them here:. ![force_convergence_flatplate_SA](https://user-images.githubusercontent.com/30271435/76541252-83320780-6440-11ea-9678-bd3a10e47436.png); ![force_convergence_flatplate_SST](https://user-images.githubusercontent.com/30271435/76541258-84633480-6440-11ea-9624-93bde157fbb8.png). This shows interesting parallels between `WEIGHTED_LEAST_SQUARES` results and CFL3D results vs `GREEN_GAUSS` and FUN3D. Also interesting the SU2 with both gradient methods converges to a slightly different C_f value than CFL3D and FUN3D. Not really connected with this PR but interesting results that can be uploaded to the VandV section of the website. . ## RAE 2822. Luckily I have been working on the RAE2822 as a validation case so I already had a family of grids that worked for this case. Again seems like the change didn't make much of a difference. dev_SST refers to the current SST implementation in develop. SST refers to the results from this PR. ![force_convergence_rae2822_SST](https://user-images.githubusercontent.com/30271435/76541879-76fa7a00-6441-11ea-911d-29ccffc81677.png). Consequently, the C_P plots are also identical; ![cp_rae2822_SST](https://user-images.githubusercontent.com/30271435/76543047-28e67600-6443-11ea-8a8e-6ca8ff62098d.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-598280668:73,validat,validation,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598280668,2,['validat'],['validation']
Security,"TRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeMap[edge].second;. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:4950,access,accesses,4950,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['accesses']
Security,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:657,attack,attack,657,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,4,"['attack', 'integrity']","['attack', 'integrity']"
Security,"Thank you Max, can you also add the right hash to meson_scripts/init.py and to preconfigure.py around line 290.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210#issuecomment-785777231:42,hash,hash,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210#issuecomment-785777231,1,['hash'],['hash']
Security,"Thank you very much, Pedro!; Kind regards. On Tue, Oct 24, 2023 at 9:09 AM Pedro Gomes ***@***.***>; wrote:. > Yes that makes sense, we are probably missing some validation on markers; > not appearing on incompatible boundary conditions.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1777083598>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUQ652XHGRI7S7C7D7DYA6VYBAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZXGA4DGNJZHA>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698:162,validat,validation,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698,1,['validat'],['validation']
Security,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:586,validat,validation,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101,1,['validat'],['validation']
Security,"Thanks Ruben! Sorry, but I did not even know there was a forum (and also with these topics) by the Dev-society. I would suggest better a meeting and maybe posting on github projects the next steps so that all developers can get information about it. I would keep the conversation on github projects (if possible) so that is accessible to everybody. I'll shortly contact you in private to organize a meeting thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392065213:324,access,accessible,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392065213,1,['access'],['accessible']
Security,"Thanks for checking, I'll try to get access to a machine with CentOS 8.; But that error seems to come from somewhere deep in the MPI... so not sure how much we can do about it. In the meantime you can always try different MPI version maybe 3.1.4?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623655467:37,access,access,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623655467,1,['access'],['access']
Security,"Thanks for filing this. Unfortunately, we have not completely implemented the ALE formulation for the incompressible solver to handle dynamic meshes. If this is something you would be interested in helping develop further, please let us know. That being said, we should have proper guards (or error messages) that avoid this kind of memory access error in the incompressible case. We'll look into this right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247#issuecomment-195838721:340,access,access,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/247#issuecomment-195838721,1,['access'],['access']
Security,"Thanks for getting everything cleaned up, @ScottImlay. I really would like to get this merged soon, as I think it is a great contribution. My main concern remains the size of the files that are now included due to the boost library. The externals/tecio directory has increased in size from 3.6 MB to 172 MB, and 166 MB of that is boost. Perhaps we can consider downloading this code on-the-fly during the configure process, or have a script access it as a submodule similar to CoDiPack via preconfigure.py. Open to ideas here.. any thoughts?. Lastly, if we are shipping boost source, we should add their license to the distribution by including this file in externals/tecio/boost/ : https://www.boost.org/LICENSE_1_0.txt",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-426809515:441,access,access,441,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-426809515,1,['access'],['access']
Security,"Thanks for sharing the progress on the container in #753 . You may already be going in this direction, but another idea to consider is making CVariable a pure data structure (basically a c-style struct with your new containers) with no methods. This could be interesting for 2 reasons: 1) we remove a level of indirection without the Getters/Setters and operate directly on the data, and 2) this breaks the current cycle we are stuck in where we need to add a new virtual function to the base class every time one of the child CVariable classes adds new data that it must access with Get()/Set(). . Adding new data to the child classes for each solver becomes trivial if it is just a data structure. A pure data structure and an object with polymorphism will always be at odds - we should choose the best for each situation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-518900363:572,access,access,572,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-518900363,1,['access'],['access']
Security,"Thanks for spending the time on this, @petebachant. I just fixed a couple of bugs in the python scripts in another PR, but I don't think they will affect this too much. Btw, do you have access to a sizable distributed machine with Python 3+ installed for testing? It would be great to know if this is working in a production environment, while keeping backward compatibility with Python 2+, since it can sometimes be hard to get new Python installations on clusters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321731944:186,access,access,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321731944,1,['access'],['access']
Security,"Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms. Is the aligned_alloc from stdlib OK for Win64?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554393825:241,access,access,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554393825,1,['access'],['access']
Security,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:509,access,access,509,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842,2,['access'],['access']
Security,"Thanks for the fix! One more small request... can you please push this to our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master. Also, Sean had mentioned that you have done some nice isothermal validations. If you are interested, we would be happy to make a regression test based on one of your test cases (to ensure that these features remain well-tested in SU2). If you provide a config/mesh, we can make the regression test for you very quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56557046:354,validat,validations,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56557046,1,['validat'],['validations']
Security,"The Aachen turbine test case added in #2158 needs another look, for two reasons. 1. The test case is subject to a yet unfixed memory access violation, as detected in the address sanitizer tests in #2246. We explored a fix in c97610b02bc1281eb766847e7ef5ed7ac451dfb9, that remedies the address sanitzer detections but also changes the test results notably. It is unclear yet whether this is the correct way to fix it.; 2. @bigfooted observed non-deterministic behaviour in #2260. This might or might not be related to the memory access violation. As soon as the memory access violation is fixed, address sanitizer testing can be re-enabled for the Aachen turbine test case (it was disabled in 0f3fc3ec900f1518c0c3ed26c3e971ae27fb974c). @alecappiello We can continue the discussion from #2246 here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:133,access,access,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,5,"['access', 'sanitiz']","['access', 'sanitizer']"
Security,"The PR looks good but more to @talbring 's point, do we want to conserve a vanilla SST implementation for validation purposes? . I thought about this when I was trying to incorporate some improvements to the SST model that were published in a [2003 paper](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf) by Menter et al. These are small changes in the coefficients but I wasn't sure if I should make the changes to the base SST model or make a new one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-523979583:106,validat,validation,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-523979583,1,['validat'],['validation']
Security,The address sanitizer records are clean with this fix :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034724087:12,sanitiz,sanitizer,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034724087,1,['sanitiz'],['sanitizer']
Security,"The address sanitizer reports a heap buffer overflow for [this](https://github.com/su2code/SU2/blob/e33871a2c22dd1eefb3a023ea28369b1ca249b3f/SU2_CFD/src/interfaces/CInterface.cpp#L314) piece of code. I presume the issue is the access `SpanValuesDonor[kSpan + 1]` in the case that `kSpan == nSpanDonor - 1` so that `kSpan` references the last array entry already. Below is a stripped-down version of the corresponding code.; ```; ...; for (jSpan = 0; jSpan < nSpanDonor; jSpan++) {; ...; if (...); kSpan = jSpan;; ...; }; ... SpanValuesDonor[kSpan + 1] ...; ```. Is someone familiar with the `CInterface` code and could make recommendations for a fix?. Below is the address sanitizer report, see also [here](https://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_del",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:12,sanitiz,sanitizer,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,3,"['access', 'sanitiz']","['access', 'sanitizer']"
Security,"The changes do fix #2241, thread sanitizer builds and tests execute without crashing. The workaround is only needed until a corresponding fix in the github runner is deployed, which will take around a week (https://github.com/actions/runner-images/issues/9491#issuecomment-1999433974). We could merge this now and roll it back later. @pcarruscag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885:33,sanitiz,sanitizer,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885,1,['sanitiz'],['sanitizer']
Security,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/926:661,access,accessing,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/926,1,['access'],['accessing']
Security,"The folks at Travis CI have kindly doubled both our ""hard"" timeout and ""silence"" timeout limits up to 140 min. and 20 min., respectively. We should be safely within limits for some time to come. . That being said, rather than relying on the increases, I would really encourage that we find some better approaches for reducing total test time, as we will continue to add more cases. It is not good for our pace of development that we have to wait over an hour to get the results of the tests. I think that a test time of approx. 10-20 min. would be more ideal so that we can iterate much more quickly. I suspect that attacking our compile time would be most helpful. Any ideas and discussion most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382152114:616,attack,attacking,616,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382152114,1,['attack'],['attacking']
Security,"The motivation of having it as the default was to make the code as user-friendly as possible (fewer knobs exposed in the config), but options are good of course. I would propose then that we add an option for the reconstruction gradient, something like:; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; to let users decide if they want a separate option for the reconstruction gradients. If it does not appear, then the default is to use the same method as defined by NUM_METHOD_GRAD without a second gradient computation (basically what we have now). The nice thing about that is we can even try out other combos such as WLS+GG for the two different gradients. I will throw an error if users try to use LSQ for the viscous/source gradients, to avoid accuracy issues. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533259202:106,expose,exposed,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533259202,2,['expose'],['exposed']
Security,The new repo is live here: https://github.com/su2code/VandV (GitHub didn't like '&' in the title). All members of the developer team on GitHub should have read/write/push access.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426799490:171,access,access,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426799490,1,['access'],['access']
Security,The primal elements are stored in the CGeometry class in the array CPrimalGrid*\* elem (geometry_structure.hpp:114) which is of length nElem (which can be accessed with GetnElem()). For future questions: please use the forum at http://www.cfd-online.com/Forums/su2/ otherwise we are going to have a lot of open issues here on github ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/309#issuecomment-248893613:155,access,accessed,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/309#issuecomment-248893613,1,['access'],['accessed']
Security,"The solver with the closest functionality to what you are trying to do is the elasticity solver, it may be worth having a look there. But in a nutshell there the variables we want to differentiate are held by (members of) the discrete adjoint solver, they are reset before being registered as inputs to clear the derivative information, and it is important that they are left alone during the recording phase.; You will see that the adjoint iteration class for this solver then needs to update the numerics classes (in SetDependencies), at least for the source term the SA coefficients are set in the constructor of the corresponding numerics so maybe this step is missing?; The key point is that whenever a coefficient is used you need to be able to trace its value back to the original variable you registered.; Also the derivatives should be extracted in the same order they were registered, and you cannot access them multiple times by calling ""GetDerivative"" on them repeatedly (not 100% sure if this restriction still exists after the update of CoDi).; If none of this makes sense point me to branch you are working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491910935:910,access,access,910,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491910935,2,['access'],['access']
Security,"The test case seems to work, I only see small differences in the last digit w.r.t the results I computed on my workstation, which is ok from my side. How can I access the results computed by GitHub?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715:160,access,access,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715,1,['access'],['access']
Security,"There are two causes for the failed test: your branch is currently failing the compute_polar test case, and an unrelated issue involving time-outs that is effected tests for everyone. . You can click the 'details' link to the right of the failed test in section just below the comments, or click on the red x next to any failed test. This takes you to the travis page, where through following through the links you can find which tests failed, and access the test logs. . The tests with exclamation points on the travis page are the ones that are failing due to other issues, and for now I would suggest focusing on the compute_polar test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376704607:448,access,access,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376704607,1,['access'],['access']
Security,"There might be a problem here: If I understood correctly once you login to Gritter using your GitHub account, it opens all the git access that you have to all the community that is in the Gritter group.; I have, and probably other people also do, access to GitHub locations (other than SU2) which are not open for the public (like Github of commercial companies). In the Gritter login page, I could see all these locations but could not remove those that are not SU2 related.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515093449:131,access,access,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515093449,2,['access'],['access']
Security,"There's no using the develop branch. Develop software don't make their way in our module systems, we only install releases, with tarbals of the sources and checksums of those tarballs, as we aim for reproducibility. . We have a large number of build tools, including pkgconfig, cmake, meson, ninja, bazel, autoconf, etc. We use EasyBuild to wrap things up and generate modules.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439:156,checksum,checksums,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439,1,['checksum'],['checksums']
Security,"Things done:; - Create CScalarSolver/Variable classes that now sits between CSolver/Variable and CTurbSolver/Variable; - Move variables/methods to CScalar-land for which one can reasonably assume that they will be useful for future children of the CScalar-family; - That implies, that the rest remains in Turbulence land mostly(!) untouched; - Mostly, because I renamed (Set)TurbVar[-,Gradient] variables/methods in CNumerics which result in changing that all over turb_diff/conv/sources. They hear by the name (Set)ScalarVar* now; And that's it for now. I added some personal comments in the code here and there that will be removed. Next up (coming to a PR near you soon):; - add CSpeciesSolver/Variable with appropriate Upwind/Viscous_Residual and Boundary conditions; - The first step will be a truly Passive Species transport but then ...; - ...introduce the mixture properties of @mheimgartner from #1332 i.e. make the transport equation 'active'. This comes along with some more necessary changes to CConfig. I am not sure yet what is the best order of tackling that. We'll see...; - @mheimgartner work concentrates on 1 additional transport equation. The idea is of course to make it as general as possible but it might be wiser to just go with 1 for the beginning.; - For that setup (2 components mixing) we'll want to get validated gradients going; - The more general way will be needed to merge with @danielmayer #1223 but that would be the step after the above mentioned. @bigfooted that i what I currently have in mind but feel free to chime in here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752:1332,validat,validated,1332,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-905608752,1,['validat'],['validated']
Security,"This PR is ready for merging. The Codacy failure is for a os.system() call that introduces a security vulnerability that I am not sure how to fix. There are a lot of os.system() calls in the code already, but since I introduced one more, it is failing. . Any help in fixing the issue would be fantastic. If this is not a big deal, I can merge the PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-532759515:93,secur,security,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-532759515,1,['secur'],['security']
Security,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:859,access,access,859,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['access'],['access']
Security,"This looks great - I notice that there's a couple of things in the doxygen file in su2code/Documentation/Doxygen/Doxyfile that might be helpful here (setting project name, there may be other things). I wonder if these two files could be merged? Perhaps we should remove su2code/Documentation/Doxygen?. For potential volunteers: all the warnings I see right now seem to come from inputs/outputs not included in the comments description - correcting this should be relatively accessible to folks just getting started, and I'd also encourage anyone who has introduced a new function recently to check and see if the comment block above the function declaration in the .hpp file is filled in. ; Other doxygen info: I recall that the last time I worked with doxygen, some warnings went away once graphviz was installed on my local machine. Sorry that I can't commit 100% to volunteering for this right now; but I might chip away at things once in a while.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/373#issuecomment-278573631:474,access,accessible,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/373#issuecomment-278573631,1,['access'],['accessible']
Security,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:730,access,accessing,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['access'],['accessing']
Security,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/482:261,access,access,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/482,1,['access'],['access']
Security,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:110,secur,secure,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,4,['secur'],"['secure', 'security']"
Security,Thread Sanitizer CI Crashes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:7,Sanitiz,Sanitizer,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['Sanitiz'],['Sanitizer']
Security,Thread sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:7,sanitiz,sanitizer,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,1,['sanitiz'],['sanitizer']
Security,"To answer the first question, yes, the distance calculations are done based the entire surface of a boundary element. This is done using routines written by @vdweide for the higher order solver. In short, the distance to the wall of a node in the mesh is found by finding the projection of the said node on a boundary element, and the distance is calculated using that information. . I validated this on a host of grids, some of which had sheared elements near the wall, and this procedure seemed to give the right predictions regardless of the quality of the mesh. . Yes, from what I understand, by the end of the ComputeWall_Distance function all the memory, weather it is the vectors or the ADT itself, should be deallocated. I based this code on what Edwin was doing so he might be able to substantiate on why he deallocates the vectors immediately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435105466:386,validat,validated,386,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435105466,1,['validat'],['validated']
Security,"To get this PR going, I have reverted the proposed fix c97610b02bc1281eb766847e7ef5ed7ac451dfb9 for now and excluded the Aachen turbine test case from address sanitizer testing. I'll create an issue about this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516:159,sanitiz,sanitizer,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516,1,['sanitiz'],['sanitizer']
Security,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:1298,validat,validation,1298,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,2,['validat'],['validation']
Security,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:492,access,accessing,492,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,1,['access'],['accessing']
Security,"Tom,. Ok. So 3 Gb and 4 sec to write on 72 cores is about 10.6Mb / sec / core. Since not each core has access to a separate I/O node (assume 8 cores / processor), that would give upwards of 80 Mb / sec / node which is quite respectable. The reading seems a bit slower, but it is indeed a major improvement. Later in time we should do some tests for much larger files to make sure we get some level of scalability. Best,. Juan. On Mar 3, 2017, at 10:40 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. Don't know those numbers yet for the aggregate bandwidth with Lustre or how many I/O nodes are available for this cluster. Will have to do a detailed analysis eventually. For reference, this RANS case at 27 million grid points (not cells) results in a 3 GB restart file (binary). I'll take the two orders of magnitude improvement :). Tom. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-284035130>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxLewYDD1YDs9b-b3gf61tw7hQLMcks5riF6TgaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284049783:103,access,access,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284049783,1,['access'],['access']
Security,"True. I was thinking more from the user point-of-view, to be sure people little little experience can use SU2 easier. Similar to something Tim has already started in the Docs page. The idea here is just to be sure new features are easily usable/accessible for people unfamiliar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799#issuecomment-541832531:245,access,accessible,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/799#issuecomment-541832531,2,['access'],['accessible']
Security,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:323,secur,security,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,2,['secur'],['security']
Security,Validation Suite for SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:0,Validat,Validation,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['Validat'],['Validation']
Security,"We should not roll out a new version of SST without having substantial coverage. I think with this PR we can:; - Validate SST-2003m, flatplate and maybe channel bump, NACA0012.; - Assess the changes required in the code, they are fairly subtle so we could consider having the 2 version, SST and 2003m as a ""variant"" specified like @suargi suggests for SA.; - Assess the ""damage"" in the regressions, how many restarts need re-doing etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1060767999:113,Validat,Validate,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060767999,1,['Validat'],['Validate']
Security,"What permissions? If it's access to SU2 we give it to everyone. I'll invite Blanca, then let's let the first author open the PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684#issuecomment-1165581596:26,access,access,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684#issuecomment-1165581596,1,['access'],['access']
Security,"When you create a token, you need to click 'workflow' as one of the allowed actions. ; Go to Settings -> Developer Settings -> Personal Access Tokens (classic); and then choose 'generate new token' and in the scope, you need to select 'workflow' in addition to whatever else is necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886#issuecomment-1381621210:136,Access,Access,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886#issuecomment-1381621210,1,['Access'],['Access']
Security,Why is this being accessed out of bounds? Instead of adding a potentially confusing default behavior we should not access a marker that doesnt exist.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281#issuecomment-2110296430:18,access,accessed,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281#issuecomment-2110296430,2,['access'],"['access', 'accessed']"
Security,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:178,validat,validated,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['validat'],['validated']
Security,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623683360:17,sanitiz,sanitizer,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360,1,['sanitiz'],['sanitizer']
Security,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:48,validat,validation,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842,2,['validat'],['validation']
Security,"Yes that makes sense, we are probably missing some validation on markers not appearing on incompatible boundary conditions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777083598:51,validat,validation,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777083598,1,['validat'],['validation']
Security,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/957#issuecomment-621662776:404,access,access,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776,1,['access'],['access']
Security,"You can now access any output, please look at the examples in TestCases/pywrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262:12,access,access,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262,1,['access'],['access']
Security,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626952122:453,access,access,453,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122,2,"['access', 'password']","['access', 'password']"
Security,You have to restrict third-party access in the options of the other project (https://help.github.com/en/articles/enabling-oauth-app-access-restrictions-for-your-organization),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515101184:33,access,access,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515101184,2,['access'],"['access', 'access-restrictions-for-your-organization']"
Security,You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced. The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127:211,expose,expose,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907033127,1,['expose'],['expose']
Security,"_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; size_t jPoint = adj.jPoint(iPoint,iNeigh);; size_t iEdge = adj.iEdge(iPoint,iNeigh);; double dir = adj.dir(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) += phi_ave*dir*area(iEdge,iDim);; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; }; ```; The `Adjacency` class stores for each point: the surrounding neighbor points (this is available in SU2), the neighbor edges, and the direction (in or out, -1 or 1) of the area vector relative to the point.; The speedup is **0.83** (i.e. not a speedup), that is actually not that bad considering the same computation is repeated for each edge, the reason it is not that bad is the sequential access to the gradient. Note that this loop is one #pragma away from parallelization. The SIMD version of this code is:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& area,; const Vector& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; const size_t SIMDLEN = 4;. for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad.setVec(iPoint,iVar,iDim,Array<double,SIMDLEN>(0.0));. for(size_t iNeigh=0; iNeigh<adj.nNeighbor_vec(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);; auto iEdge = adj.iEdge_vec(iPoint,iNeigh);; auto dir = adj.dir_vec(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; auto phi_ave = (phi.getVec(iPoint,iVar)+; phi.getVec(jPoint,iVar))*0.5;. for(size_t iDim=0; iDim<nDim; ++iDim); grad.addVec(iPoint,iVar,iDim,; phi_ave*dir*area.g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:5023,access,access,5023,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['access'],['access']
Security,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5823,secur,security-vulnerabilities,5823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1341,validat,validation,1341,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['validat'],['validation']
Security,"ariable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6874,access,accessors,6874,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['accessors']
Security,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10814,secur,security-vulnerabilities,10814,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ble* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3635,access,access,3635,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5098,secur,security-vulnerabilities,5098,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"cally equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they beco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2224,access,access,2224,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['access'],['access']
Security,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1803,access,access,1803,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['access'],['access']
Security,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6284,secur,security-vulnerabilities,6284,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6558,audit,audit,6558,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['audit'],['audit']
Security,"double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const double* blk_i, const double* blk_j,; SparseMatrix& matrix); {; matrix.setDiagZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorSta",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:2659,access,access,2659,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['access']
Security,"e a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new Vari",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2123,access,access,2123,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"e could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:2113,access,access,2113,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['access'],['access']
Security,"e counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition within each MPI rank over a number of threads that need not be the same as that used for other areas. **SIMD**; - For gradients, limiters, and numerics a SIMD-friendly type will be used, by and large the high level code will look the same (see my examples above) but multiple points/edges will be processed simultaneously.; - No changes will be required to the data layout of CVariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:2456,access,accessor,2456,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['access'],['accessor']
Security,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2322,validat,validated,2322,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['validat'],['validated']
Security,"easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2446,access,access,2446,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['access'],['access']
Security,"economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1947,validat,validation,1947,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['validat'],['validation']
Security,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15530,secur,security-vulnerabilities,15530,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7647,secur,security-vulnerabilities,7647,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2277,Validat,Validation,2277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['Validat'],['Validation']
Security,"fic multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3555,access,accesses,3555,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['access'],['accesses']
Security,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4524,access,access,4524,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['access'],['access']
Security,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3055,secur,security,3055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1551,access,accessible,1551,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['access'],['accessible']
Security,"here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/aut",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2996,validat,validation,2996,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['validat'],['validation']
Security,"his PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1124,access,accessed,1124,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['access'],['accessed']
Security,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:17372,access,accessed,17372,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['accessed']
Security,"ignment, size_t size) noexcept; ^; [111/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysSolve.cpp.o' -c ../Common/src/linear_algebra/CSysSolve.cpp; In file included from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/C2DContainer.hpp:30:0,; from ../Common/src/linear_algebra/../../include/geometry/../toolboxes/graph_toolbox.hpp:30,; from ../Common/src/linear_algebra/../../include/geometry/CGeometry.hpp:61,; from ../Common/src/linear_algebra/CSysSolve.cpp:33:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/geometry/../toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620486002:3006,secur,security,3006,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002,1,['secur'],['security']
Security,"ike we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, tha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3892,access,accessible,3892,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['access'],['accessible']
Security,"ilation. I still get this error. [107/846] Compiling C++ object 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o'.; FAILED: Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o ; c++ -ICommon/src/9e112f9@@SU2Common@sta -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns/./ -I../externals/cgns/./ -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/mpich-3.2.1/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/app/mpich-3.2.1/lib -Wl,--enable-new-dtags -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -MF 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o.d' -o 'Common/src/9e112f9@@SU2Common@sta/linear_algebra_CSysVector.cpp.o' -c ../Common/src/linear_algebra/CSysVector.cpp; In file included from ../Common/src/linear_algebra/CSysVector.cpp:31:0:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp: In function ‘T* MemoryAllocation::aligned_alloc(size_t, size_t)’:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: error: ‘::aligned_alloc’ has not been declared; ptr = ::aligned_alloc(alignment, size);; ^; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:79:9: note: suggested alternative:; ../Common/src/linear_algebra/../../include/toolboxes/allocation_toolbox.hpp:61:11: note: ‘MemoryAllocation::aligned_alloc’; inline T* aligned_alloc(siz",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620486002:999,secur,security,999,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620486002,1,['secur'],['security']
Security,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:258,integrity,integrity,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['integrity'],['integrity']
Security,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10057,secur,security-vulnerabilities,10057,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ive one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and compare the scalar ""edge+edge"" with the SIMD ""point+point"" and ""fused point"" we get:. | G+L Approach | Edge+Edge | Point+Point | Fused Point |; | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.85 |; | **Speed 4 cores** | 2.3 | 5.35 | 6.1 |. Fusing point loops only gives a 14% improvement vs separate loops due to the difference in gathered data, only one gather is amortized and the remaining memory accesses are very efficient.; Nevertheless if it can be done nicely while accounting for ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:10609,access,access,10609,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['access'],['access']
Security,"ly contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4514,access,accessing,4514,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['accessing']
Security,"m : size_t {Size = N};; enum : size_t {Align = N*sizeof(T)};; private:; // fixed size and aligned array of internal data, naturally maps to a SIMD register; alignas(Align) T vals_[N];; /*; * Some helper methods go here; */; public:; // **** CONSTRUCTORS **** //; // We want to be able to construct this type from single scalars,; // a memory location from which we LOAD data,; // or a memory location and some offsets from which we GATHER data.; // In addition to the ""normal"" constructors. // scalar broadcasting ctor; STRONGINLINE Array(T x) {bcast(x);}. // loading ctor; STRONGINLINE Array(const T* ptr); {; #pragma omp simd aligned(ptr:Align); FOREACH vals_[k] = ptr[k];; }; // gathering ctor; template<class U>; STRONGINLINE Array(const T* base_ptr, const U& offsets); {; #pragma omp simd; FOREACH vals_[k] = base_ptr[offsets[k]];; }; /*; * Other traditional constructors (default, copy-ctor, move-ctor, etc) go here; */. // **** ACCESSORS **** //; STRONGINLINE T& operator[] (size_t k) {return vals_[k];}; STRONGINLINE T operator[] (size_t k) const {return vals_[k];}. // **** MATH OPERATORS **** //; STRONGINLINE Array& operator= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] = rhs.vals_[k];; return *this;; }. STRONGINLINE Array& operator+= (const Array& rhs); {; #pragma omp simd; FOREACH vals_[k] += rhs.vals_[k];; return *this;; }; STRONGINLINE Array operator+ (const Array& rhs) const { return Array(*this)+=rhs; }; ; /*; * Many other operators go here.; */; };. // Common math function overloads; template<class T>; STRONGINLINE T vmax(const T& a, const T& b); {; T res;; #pragma omp simd; for(size_t k=0; k<T::Size; ++k); res[k] = (a[k]>b[k])? a[k] : b[k];; return res;; }. #undef FOREACH; ```; There are other (better) ways to do this, for example using [x86 intrinsics](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=2273,2273,2436,2943,2436,2943,610,1788,2942) (in header `<x86intrin.h>`), register types instead of arrays, and a boat load of templa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:7839,ACCESS,ACCESSORS,7839,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,1,['ACCESS'],['ACCESSORS']
Security,"mage](https://github.com/su2code/SU2/assets/50565314/558c3c39-c604-402a-87c7-f616b0e6c575); ![image](https://github.com/su2code/SU2/assets/50565314/0bc69766-595d-47f6-8136-1f50cbac07f6); ![image](https://github.com/su2code/SU2/assets/50565314/67a3e69f-ea4e-4f80-a01e-c179d86f989d); The **H** is the Heaviside function.; ![image](https://github.com/su2code/SU2/assets/50565314/cc5e7510-4ce5-4c04-a468-5af0211f2e6d). 2. Sarkar; In the Sarkar's CC, the pressure dilatation(![image](https://github.com/su2code/SU2/assets/50565314/7abcdd0e-c760-47b0-bc62-9ff6b918c28d)) is considered. The k transport equation is :; ![image](https://github.com/su2code/SU2/assets/50565314/c4d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:2104,Validat,Validation,2104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['Validat'],['Validation']
Security,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:3293,access,accessed,3293,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['access'],['accessed']
Security,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1588,expose,exposes,1588,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['expose'],['exposes']
Security,"nd max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and compare the scalar ""edge+edge"" with the SIMD ""point+point"" and ""fused point"" we get:. | G+L Approach | Edge+Edge | Point+Point | Fused Point |; | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.85 |; | **Speed 4 cores** | 2.3 | 5.35 | 6.1 |. Fusing point loops only gives a 14% improvement vs separate loops due to the difference in gathered data, only one gather is amortized and the remaining memory accesses are very efficient.; Nevertheless if it can be done nicely while accounting for boundaries (which may have to be handled outside the loop) it could allow some memory savings for the discrete adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:11447,access,accesses,11447,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['access'],['accesses']
Security,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1926,validat,validation,1926,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['validat'],['validation']
Security,"ns. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as we already pointed out at the beginning, noticing that both steady and converged values were very very similar for the two boundary conditions) Anyway, by increasing the frequency, we notice that differences increase rapidly pointing out the problem must be somehow related to the rate of unsteadiness of the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2666,validat,validated,2666,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,1,['validat'],['validated']
Security,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7644,access,access,7644,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['access', 'hash']","['access', 'hash']"
Security,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:2023,hash,hash,2023,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,2,['hash'],['hash']
Security,"o now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution va",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:2523,validat,validated,2523,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['validat'],['validated']
Security,"ode ; ```; TablePrinter MGTable(&std::cout);; ; MGTable.AddColumn(""MG Level"", 10);; MGTable.AddColumn(""Presmooth"", 10);; MGTable.AddColumn(""PostSmooth"", 10);; MGTable.AddColumn(""CorrectSmooth"", 10);; MGTable.set_flush_right();; MGTable.PrintHeader();; for (unsigned short iLevel = 0; iLevel < nMGLevels+1; iLevel++) {; MGTable << iLevel << MG_PreSmooth[iLevel] << MG_PostSmooth[iLevel] << MG_CorrecSmooth[iLevel];; }; MGTable.PrintFooter();. ```; An example of the current preprocessing output in the feature_output branch can be found below. Especially the information for the free-stream and non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-l",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:1640,attack,attack,1640,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['attack'],['attack']
Security,"ode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:1448,access,access,1448,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['access'],['access']
Security,"onomon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotoo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1124,validat,validation,1124,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['validat'],['validation']
Security,"ons/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/f1e993d9663a03508e7fc0370c744c4b963f0044""><code>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:3360,checksum,checksum,3360,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['checksum'],['checksum']
Security,"ouble* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower resp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3730,access,access,3730,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['access'],['access']
Security,"oved most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/src/solvers/../../include/solvers/CFVMFlowSolverBase.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/CIncEulerSolver.hpp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134:1108,secur,security,1108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134,1,['secur'],['security']
Security,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6515,validat,validation,6515,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['validat'],['validation']
Security,"put should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1720,validat,validation,1720,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['validat'],['validation']
Security,"r clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:9094,access,accesses,9094,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['access'],['accesses']
Security,"r routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4531,access,access,4531,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['access'],['access']
Security,"rth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1179,validat,validation,1179,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['validat'],['validation']
Security,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2158,Validat,Validated,2158,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Validat'],['Validated']
Security,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3628,secur,security,3628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"seems to be a file from UCX, so it's a virtual machine issue I think? If you run SU2 from inside a virtual machine, you have to make sure that the vm has access to more than 2 nodes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2316#issuecomment-2221484343:154,access,access,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/2316#issuecomment-2221484343,1,['access'],['access']
Security,"shell = false doesn't seem to work in this particular case (symbolic linking) but it might in others. There seem more secure ways to run commands but they need case by case treatment. As in the solution for a `cp` command is different from a `ln -s` command. . We can also replace the `os.system` calls with other python functions (for example `os.symlink` for symbolic linking). . Either way, it wont be a simple search and replace. There seem to be about 25 `os.system` calls across the python scripts. Let me try and replace them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533410018:118,secur,secure,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533410018,2,['secur'],['secure']
Security,"sted it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2210,Secur,Security,2210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['Secur'],['Security']
Security,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR 😉",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2752,validat,validation,2752,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['validat'],['validation']
Security,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1539,secur,security,1539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"t.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_PRESSURE= 101325.0; %; % Free-stream temperature (288.15 K by default); FREESTREAM_TEMPERATURE= 288.15. % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation; REF_ORIGIN_MOMENT_X = 0.25; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; %; % Reference length for pitching, rolling, and yawing non-dimensional moment; REF_LENGTH= 1.0; %; % Reference area for force coefficients (0 implies automatic calculation); REF_AREA= 14.098904. % ----------------------- DYNAMIC MESH DEFINITION -----------------------------%; %; % Type of dynamic mesh (NONE, RIGID_MOTION, DEFORMING, ROTATING_FRAME,; % MOVING_WALL, AEROELASTIC, EXTERNAL); GRID_MOVEMENT= ROTATING_FRAME; %; % Motion mach number (non-dimensional). Used for intitializing a viscous flow; % with the Reynol",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:3479,attack,attack,3479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['attack'],['attack']
Security,"terature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1421,Validat,Validation,1421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['Validat'],['Validation']
Security,"the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1390,access,access,1390,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['access'],['access']
Security,"the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1827,attack,attack,1827,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['attack'],['attack']
Security,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1904,validat,validation,1904,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,2,['validat'],['validation']
Security,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2450,access,access,2450,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['access'],['access']
Security,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:1596,access,access,1596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['access'],['access']
Security,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2345,expose,exposed,2345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['expose'],['exposed']
Security,"tructure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instantiations of these class templates, 2D/3D with or without viscous terms, and this is done in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:1100,access,access,1100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,1,['access'],['access']
Security,"tter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3790,access,access,3790,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['access'],['access']
Security,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2318,secur,security,2318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['secur'],['security']
Security,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:8,validat,validated,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115,5,['validat'],"['validated', 'validation']"
Security,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4379,access,access,4379,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['access'],['access']
Security,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2563,Expose,Expose,2563,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['Expose'],['Expose']
Testability," (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.063 0.0035 0.5; 4 0 0 0.08 0.0057 -0.5; 4 0 1 0.08 0.0005 0.5; 4 1 0 0.08 0.0087 -0.5; 4 1 1 0.08 0.0035 0.5; FFD_SURFACE_POINTS= 2822; ...; ```. The deformation was then tested by running SU2_DEF with the two leftmost FFD control points being fixed:. ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); DV_KIND = FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); %%%%%%%%%%%%%% FFD PARAMETERS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_TOLERANCE = 1E-10; FFD_ITERATIONS = 20; FFD_CONTINUITY=USER_INPUT; % DV_PARAM = ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); DV_PARAM = \; (BOX, 2, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 2, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 1, 0, 0.0, 1.0, 0.0); % NOTE: left-most 2 points omitted, to make them fixed; % Value of the shape deformation; % first row: lower row y-direction; % second row: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:2170,test,tested,2170,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['test'],['tested']
Testability, (78) ; - M Common/include/linear_solvers_structure.inl (15) ; - M Common/include/matrix_structure.hpp (95) ; - M Common/include/matrix_structure.inl (17) ; - M Common/include/option_structure.hpp (1228) ; - M Common/include/primal_grid_structure.hpp (65) ; - M Common/include/primal_grid_structure.inl (37) ; - M Common/include/su2mpi.hpp (29) ; - M Common/include/vector_structure.hpp (20) ; - M Common/include/vector_structure.inl (13) ; - M Common/lib/Makefile.am (28) ; - M Common/lib/Makefile.in (36) ; - M Common/src/config_structure.cpp (2907) ; - M Common/src/dual_grid_structure.cpp (29) ; - M Common/src/geometry_structure.cpp (16033) ; - M Common/src/grid_adaptation_structure.cpp (374) ; - M Common/src/grid_movement_structure.cpp (2754) ; - M Common/src/linear_solvers_structure.cpp (330) ; - M Common/src/matrix_structure.cpp (371) ; - M Common/src/primal_grid_structure.cpp (45) ; - M Common/src/su2mpi.cpp (41) ; - M Common/src/vector_structure.cpp (46) ; - D Doxygen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/Plu,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:12324,Log,Logo,12324,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Log'],['Logo']
Testability," * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3006,Test,Tested,3006,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['Test'],['Tested']
Testability," ,. thank you very much for your comments. I haven't found any suggestion in literature to clip to only positive values the cross-diffusion term in the w-equation. I understand that it might be more robust, but it is not the standard implementation of the SST model, which is the first thing that we need to achieve. Only then we can build on top of that to improve the robustness of SU2. Nevertheless, I tried the SWBLI test case and I compared the results across 6 different combinations:. 1- develop branch, no changes; 2- develop branch, changes to Supersonic_inlet profile as suggested in #1851 ; 3- my branch, with original CDkw implementation (should give exactly the same result as develop+modified BC); 3- my branch, with original CDkw implementation and using boundary conditions from TMR; 4- my branch, with original CDkw implementation and using your suggestions for lower limits for k and w.; 5- my branch, allowing negative values of CDkw; 6- my branch, allowing negative values of CDkw and using boundary conditions from TMR; 7- my branch, allowing negative values of CDkw and using your suggestions for lower limits for k and w.; 8- my branch, allowing negative values of CDkw, using boundary conditions from TMR and using your suggestions for lower limits for k and w. When my branch is used, then the changes to the supersonic inlet BC are already in place. I haven't achieved convergence with 1, 2 and 3. More precisely, 1 diverged right away (after 30 iterations), while 2 and 3 gave ""FGMRES - Orthogonalization Failed"" after 900ish iterations. Here you can see the residuals for the different combinations. ![OrigCDkw](https://github.com/user-attachments/assets/18836f37-5fa5-4523-bee2-8f0c420d4080). ![NegCDkw](https://github.com/user-attachments/assets/4ba446a0-f77d-4f06-bcc2-cdd499839f82). Unfortunately I will be busy with the AIAA Conference next week, thus I don't know how much I will be able to work on this. The next test case will be the 2D airfoil near-wake from TMR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531:1973,test,test,1973,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531,1,['test'],['test']
Testability," -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in inde",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2685,log,log,2685,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['log'],['log']
Testability," 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of contr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3402,test,testcase,3402,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['test'],['testcase']
Testability," Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-relate well",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:1175,test,test,1175,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,2,"['Test', 'test']","['Test', 'test']"
Testability," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:1292,Test,Test,1292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,1,['Test'],['Test']
Testability," PR. And… do not worry too much (or at all)... we are doing this for free and for fun! As you know, after a major release we always find this kind of small bugs. The big picture is that thanks to you we all enjoy an awesome multipoint optimization capability! Thanks!. Best,; Francisco. > On Mar 25, 2018, at 6:04 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176962282>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > @fpalacios <https://github.com/fpalacios> yes, I commented a bit too quickly; I do see the behavior that you mention. I think the line previously mentioned helps with getting the value of the objective but not the gradient.; > While I was testing this on my end I also noticed that there is an issue if you list the same objective multiple times (for example, if you wanted to weight the drag contribution from one surface more than another), where since it has the same key the previous dict entry is overwritten. Do you mind if I add an error catching that to your PR?; > ; > I am taking a look back through it but so far I think your solution will be good - and better to fix the performance in master now and worry about elegant improvements in the develop branch.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#discussion_r176962282>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRlzQ3wEuDogzT35DALgoNbrSv32Xks5tiD64gaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376023020:1223,test,testing,1223,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376023020,1,['test'],['testing']
Testability," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:4153,test,test,4153,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['test'],['test']
Testability," Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./U",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1822,test,test,1822,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,3,['test'],"['test', 'tests']"
Testability," You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > avail",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3428,test,tests-for-scientific-research-codes,3428,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['testing', 'tests-for-scientific-research-codes']"
Testability," a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:1398,test,test,1398,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,2,['test'],['test']
Testability," aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:2364,test,test,2364,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['test'],['test']
Testability," are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5795,Test,Test,5795,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,8,"['Test', 'mock', 'test']","['Test', 'mocking', 'testing', 'tests']"
Testability," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1768,test,test,1768,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,4,['test'],['test']
Testability," choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4277,test,testing,4277,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability," commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-434492415>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sVTNXVIdfr1Oo3wVM2qGfepSGfIks5uqNHngaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1983,test,tests,1983,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['test'],['tests']
Testability," commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4543,test,testing,4543,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['testing']
Testability," committed to the develop branch.; > > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > > ; > > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > > ; > > ; > > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?; > ; > Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attched the error file with Valgrind output. The test files are on the above conversations so that you may also take a try. Thanks for the help! [error.txt](https://github.com/user-attachments/files/16323710/error.txt). From the error, I think The SU2_CFD encountered an invalid memory read operation during an attempt to read the inletUNI.dat file, causing the program to crash with a segment error (SIGSEGV). The specific error occurs in the CConfig::GetInletPtotal function, which seems attempts to access memory that has not been properly initialized or allocated. Any ideas? @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890:1671,test,test,1671,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890,2,['test'],['test']
Testability," first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4969,test,tests,4969,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,12,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability," for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1114,test,testcases,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['test'],['testcases']
Testability," from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), this is very useful for non linear elasticity.; The fill-in for the ILU is set via PASTIX_FILL_LEVEL, I did not reuse the option we have again to keep CSysMatrix from allocating any more than it needs to.; By default the solvers run silently, but more verbosity can be set via PASTIX_VERBOSITY_LEVEL (0 : silent, 1 : only during major operations, 2 : 1 + on every solve). ## Compilation; _TODO_; This needs linking with another library (Scotch) and with BLAS, I will explain this in detail.; Question: For v7 are we moving exclusively to meson?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:2855,test,test,2855,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['test'],['test']
Testability," in advance!; > > ; > > ; > > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the othe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1214,test,test-case,1214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,1,['test'],['test-case']
Testability," just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2618,test,tests,2618,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:2013,test,test,2013,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,1,['test'],['test']
Testability," mainly because of the stuff that GitHub generates to track the files. Easy to maintain/access alternatives are very welcome. Some releases ago, the grids were in another place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1138,test,testing,1138,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['test'],['testing']
Testability," more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3202,test,tests,3202,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:2980,test,test,2980,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['test'],['test']
Testability," of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4241,test,testing,4241,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability," or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3153,test,testing,3153,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability," periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:3080,test,test,3080,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['test'],['test']
Testability," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1958,test,tests,1958,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['test'],['tests']
Testability," require almost no changes to the solver classes when switching between different solutions by using polymorphism (other than maybe where they get instantiated).; * applicable for any of the following: imposing initial conditions, analytic solutions, or manufactured solutions. There is also now a user-defined solution class that folks can use to prescribe initial conditions as a function of space for any type of calculation. It should be easy to add new solutions to the library by creating new child classes. We are placing a few cases in the regressions, but we will also add full cases with analysis to the V&V repo. It will also be discussed in a presentation at the developers meeting. You will find a few other small bug fixes in the PR as well. As an example, here are some (particularly nice) sample observed order of accuracy results for the compressible FV solver with a laminar N-S MMS (to be fair, not all look this clean):. ![accuracy_rms_rho](https://user-images.githubusercontent.com/4896083/56620511-fc80fb80-65dd-11e9-942f-b7add7edeae8.png); ![slope_rms_rho](https://user-images.githubusercontent.com/4896083/56620512-fd199200-65dd-11e9-97db-537f6bd00114.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Cases to be added as part of the V&V repo discussed in #581 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672:2443,test,test,2443,https://su2code.github.io,https://github.com/su2code/SU2/pull/672,1,['test'],['test']
Testability," revision e6e6e6b are very small, aside from an extra test file. But revision d1e3a18 fails the regression tests and revision e6e6e6b passes the regression tests. Specifically, it's only the CHT incompressible case that's failing. The test results show:. test_vals (stored): 0.000000, 0.000000, -7.685301, -12947.783696; sim_vals (computed): 0.000000, 0.000000, -7.685301, -12947.783678 ; delta_vals: 0.000000, 0.000000, 0.000000, 0.000018. It's only the total heat flux that's different, and it's only off by 1E-7%. I believe that these changes are due to floating-point errors. To check and make sure nothing is going crazy, I ran the test case under both the develop and the PR branches. When I compared the solution files, I couldn't find any points where the solution differed by more than 0.0003%. The differences seem to be very small. The two differences between revision d1e3a18 and revision e6e6e6b can be summarized as follows:. 1. In the `CNumerics::GetViscousIncProjJacs()` calculation on the develop branch, a quantity called `theta` is calculated. `theta` is the magnitude of the `val_normal` parameter, squared. The catch is that `val_normal` is passed as a unit vector (named `UnitNormal` in `CAvgGradInc_Flow::ComputeResidual`). So `theta` should always be equal to one, with some floating point errors. In the failing revision, the value is set explicitly to one. In the passing revision, the magnitude is calculated explicitly. I checked, and the difference between `theta` and 1.0 is always of the order 1E-16 or less.; 2. The second change affects where the area is multiplied into the Jacobian. When the area is multiplied at a later stage, very small differences in the calculated quantities appear. I don't like revision e6e6e6b, and I would like to revert it. The question then is how to update the tests. We could just update the regression test values, but I would propose fixing the regression test. It seems to be sensitive to what I believe are unimportant differences.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-444655022:2020,test,tests,2020,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-444655022,3,['test'],"['test', 'tests']"
Testability," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:5382,test,test,5382,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['test'],['test']
Testability," shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1646,test,tests,1646,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,2,['test'],"['test', 'tests']"
Testability," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:4153,test,test,4153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['test'],['test']
Testability," stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>. Thank you very much, I hope we can give an useful contribution.; I hope to see you in person too. Best regards,; Ettore",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:1331,test,test,1331,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487,1,['test'],['test']
Testability," testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4569,Test,Test,4569,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['Test'],['Test']
Testability," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2954,test,tests,2954,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,4,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability," the solution at the inlet corner is completely wrong, while the outlet is ok most likely because characteristics are outgoing as it is supersonic. The artifacts disappear if we disable MUSCL everywhere (1st order solution) or disable it only on boundaries (not ideal solution, but disabling only on corners would still be good enough for now I believe). Using ```WEIGHTED_LEAST_SQUARES``` seems to not present the same issue, in this test case at least, as the stencil ""does not care"" about the boundary states. The boundary conditions are:; - ```MARKER_SYMMETRY``` at centerline; - ```MARKER_EULER``` at wall; - ```MARKER_RIEMANN= (INLET, TOTAL_CONDITIONS_PT, 904388, 542.13, 1.0, 0.0, 0.0)``` at inlet; - ```MARKER_RIEMANN= (OUTLET, STATIC_PRESSURE, 200000.0, 0.0, 0.0, 0.0, 0.0)``` at outlet. I tried both with and without a slope limiter as there are no discontinuities, but it makes no difference on the artifacts:. ```; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; VENKAT_LIMITER_COEFF= 0.1; ```. # Complete test case ZIP; [mdm_coolprop_nozzle.zip](https://github.com/su2code/SU2/files/15403732/mdm_coolprop_nozzle.zip). # Inlet pressure zoom; ![Screenshot from 2024-05-22 15-06-36](https://github.com/su2code/SU2/assets/79575547/9ba71127-cb12-4c5f-8e49-3ea9e839b1f4). # Notation: ; - ""1st order"" no MUSCL; - ""2nd order"" MUSCL as implemented in SU2; - ""2nd order (BC 1st order)"" I simply disabled MUSCL on ALL physical boundaries in the upwind residual computations, see code snippet below. # Proof of concept code modification for ""2nd order (BC 1st order)"":; To show that the error lies in MUSCL/gradients at boundaries I added these two lines of code in the upwind gradient computation; ![image](https://github.com/su2code/SU2/assets/79575547/27f2a79b-824d-4a32-a626-73cd87750c0c). # Residuals:; ![image](https://github.com/su2code/SU2/assets/79575547/3f0800fe-478e-433d-8495-cd4964d0f8ee). # Mesh:; ![image](https://github.com/su2code/SU2/assets/79575547/0ebaf86b-fbf9-40b1-aeb9-8764a90a1440)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449:1320,test,test,1320,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449,2,['test'],['test']
Testability," then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2464,Test,Tests,2464,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['Test'],['Tests']
Testability," this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the change you've made to reproduce the same convective flux strategy at the boundary. As a final test I ran the rotating frame case, again from @economon 's thesis which is a steady problem with simulated grid motion. I was able to run and replicate the flow characteristics using the Euler wall boundary condition but with symmetry plane the residuals were straightaway at machine precision and the flow never develops around the airfoil. [rotating_frame.zip](https://github.com/su2code/SU2/files/3963763/rotating_frame.zip). Overall from these 2D airfoil cases, there are some unexpected variations between the two boundary conditions. A closer look at grid motion with the symmetry plane is needed. It would also be interesting to run the cases with symmetry plane using the convective flux residuals calculated in the same way as the Euler wall to see if that takes them closer to the original results, similarly as seen in the fixed grid problem. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:3150,test,test,3150,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['test'],['test']
Testability," to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options.; >If the CFL must remain low for stability, then perhaps we should look at the quality of the Jacobians we construct to see if we can improve, or even try exact Jacobians with AD if we can afford it. A more advanced CFL ramping strategy could also be helpful here to get us closer to a solution before trying to aggressively converge. I think that is everyone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:3453,test,test,3453,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['test'],['test']
Testability," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1190,test,testcase,1190,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcase']
Testability," to destabilize after some iterations due to the high speed gradient on the outlet face. To get into more details, there is a vortex forming ring forming near of the outlet creating a inflow at the center. The BC seems to build on this inflow up to a point where the flow destabilizes the solution and diverges or pushes the flow to make a ring around the propeller. *Case setup and context*; To put some context the current case tries to simulate the flow-field generated by a blade/propeller in a hover state in order to compute the thrust. The blade is surrounded by a cylinder. The markers for each surfaces are:; -""inlet"" for the top of the cylinder; -""farfield"" for the sides of the cylinder; -""outlet"" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:1455,test,tested,1455,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['tested']
Testability," to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105254215-f1734a80-5b78-11eb-939f-46a34f558faf.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:1850,test,test,1850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,1,['test'],['test']
Testability," unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing fr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2795,test,test,2795,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['test']
Testability," use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5193,test,tests,5193,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability," want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is avai",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2354,test,tests-for-scientific-research-codes,2354,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests-for-scientific-research-codes']
Testability," where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1209,log,logic,1209,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['log'],['logic']
Testability," where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2203,test,testing,2203,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['testing', 'tests']"
Testability,"   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_E",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2063,test,testing,2063,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['test'],['testing']
Testability,"![CHT_Fluid_Solid](https://github.com/su2code/SU2/assets/38651601/5c025e63-bc14-4148-9625-67d77c6990c7). Was able to run a case with fluid and two solids with contact resistance between the solid domains. By setting a non-zero contact resistance between the solid domains there appears a temperature discontinuity between the solids, but by setting the contact resistance value to zero on the fluid-to-solid interfaces, the temperature trends are continuous. ; Further testing still required on more complicated cases, but the core functionality seems to work so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953:469,test,testing,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953,1,['test'],['testing']
Testability,""" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10823,log,log,10823,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['log'],['log']
Testability,""" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https://user-images.githubusercontent.com/31306376/53201756-19707100-3625-11e9-9cb6-8a62fcd6787e.JPG). 2. Incompressible half cylinder in channel, navier-stokes, no turb-model, velocity inlet pressure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](https://user-images.githubusercontent.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:1457,test,testing,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['testing']
Testability,""" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVE",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2185,test,tested,2185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['tested']
Testability,"""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9626,test,testfile,9626,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testfile']
Testability,"""But wait there's more""; - Debugging, profiling, logging: The access methods of containers can do bound-checking for debugging, they can be instrumented to measure how much data is used, or to log every imaginable type of information. Raw arrays will have you run to valgrind or address sanitizers and then good luck if the only example where you are able to reproduce a bug is too large and you need to wait one hour per test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909:49,log,logging,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793847909,3,"['log', 'test']","['log', 'logging', 'test']"
Testability,"""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20</a></li>; </ul>; <h2>v3.6.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1377"">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/579"">Add option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:6504,test,test,6504,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['test'],['test']
Testability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:718,test,tests,718,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['test'],['tests']
Testability,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,3,"['Test', 'test']","['Testcases', 'tests']"
Testability,"## Disclaimer; This is my first ever contribution to any GitHub project. Please give feedback on what I can Improve if I haven't done something that is expected of me. ## Proposed Changes; Added Velocity output, since I am interested in that and adding it only in the config just gets ignored and no output happens; . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2077:652,test,test,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/2077,1,['test'],['test']
Testability,"## Justification; This is just a minor bug fix for an inconsistency introduced in the recently merged PR #760 by the changes introduced by #756. It shouldn't affect anybody's work as these method have not (yet) been made the default. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/785:544,test,test,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/785,1,['test'],['test']
Testability,"## Proposed Changes & related work; See issue #1928:. The filename of the Paraview multiblock is set to the case name / config filename. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. . This PR aligns the filename handling of the Paraview multiblock output with the other volume outputs, besides calling the `config->GetUnsteady_FileName` function instead of the `config->GetFilename` function which is used for the other volume outputs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1930:1188,test,test,1188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1930,1,['test'],['test']
Testability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:471,test,test,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes. - Added the missing config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]) to CEulerSolver::GetPower_Properties; - Added a new option,BC_EVAL_FREQ for setting the evaluation frequency for the Actuator Disk and Engine Markers, in order to control the stability of the marker. ## Related Work; Fix for issue #2274 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278:1022,test,test,1022,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278,1,['test'],['test']
Testability,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1391:692,test,test,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391,1,['test'],['test']
Testability,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:931,test,test,931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['test'],['test']
Testability,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:1030,test,test,1030,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['test'],['test']
Testability,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1170:1043,test,test,1043,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170,1,['test'],['test']
Testability,"## Proposed Changes. . ## Related Work. related to Tutorial for composition-dependent model #113 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:656,test,test,656,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['test'],['test']
Testability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:1075,test,test,1075,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['test'],['test']
Testability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:1080,test,test,1080,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['test'],['test']
Testability,"## Proposed Changes. Add `workflow_call` event to `regression.yml` Github Actions workflow. This way it is possible to [re-use](https://docs.github.com/en/actions/using-workflows/reusing-workflows) it from another workflow. Add a new workflow - `scheduled-arm64.yml`. It is a scheduled workflow that just executes `regressions.yml` on a self-hosted runner. ## Related Work. https://github.com/su2code/Docker-Builds/pull/1 - A PR that updates the build and test Docker images to Ubuntu 20.04 so that they could be used on both AMD64 and ARM64. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:456,test,test,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,2,['test'],['test']
Testability,"## Proposed Changes. As promised in #806 , this adds caching to the regression test workflow. This potentially should speed up the compilation. I am not quite sure whether it works as I think it does, but lets see. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/810:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/810,2,['test'],['test']
Testability,"## Proposed Changes. Changes the loading of zlib and szip libraries from static (.a) to dynamic (.so).; Suggested by @aa-g at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. ## Related Work. None. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:569,test,test,569,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['test'],['test']
Testability,"## Proposed Changes. CoDiPack update that fixes out-of-bounds accesses. Those lead to deadlocks in hybrid parallel discrete adjoint test cases. ## Related Work. work on hybrid parallel AD, e. g. #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2153:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/2153,2,['test'],['test']
Testability,"## Proposed Changes. Continuation of previous pull request https://github.com/su2code/SU2/pull/2281. [CHT + flamelet was only working if there was an additional isothermal wall present.] . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2283:877,test,test,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/2283,1,['test'],['test']
Testability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:1270,test,test,1270,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['test'],['test']
Testability,"## Proposed Changes. Even though the website has a style guide and the repo has a `.clang-format` file it has not strictly applied to pull requests. There is no style-checking workflow. As different users use different environment sometimes pull request contains unrelated style changes which makes the PR unreadable. This PR proposes to use [pre-commit-hooks ](https://pre-commit.com/) which are easy to use and enforce the style and adds a workflow check for formatting. There is no formatted/style proposed for python files. This PR additionally proposes a[ black](https://pypi.org/project/black/) based python formatting that ensures the python files are consistent maximum line length is set to 120 to increase readability. Moreover, pre-commit has additional hooks for the style of files. ; The following ones are proposed: ; `trailing-whitespace - trims trailing whitespace.` -> Especially useful for config files.; `mixed-line-ending - replaces or checks mixed line ending.`; `end-of-file-fixer - ensures that a file is either empty or ends with one newline.`. the pre-commit hooks can be easily installed via pip `pip install pre-commit`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948:1705,test,test,1705,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948,1,['test'],['test']
Testability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1663:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1663,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. . ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1662:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1662,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes. Fixing the CONSTANT_SCHMIDT diffusivity model and removing the Constant_SchimdtRANS class because it is not needed. Additionally, the class CUnityLewisDiffusivity has been modified to CConstantLewisDiffusivity in order to allow users to use constant Lewis number for each species but different to one, which is the assumption of Unity_Lewis. ; The option UNITY_LEWIS is still available in order to allow users to use that option. New option, CONSTANT_LEWIS, is added for the purpose aforementioned.; I can add a test case for the additional option if it is needed. ## Related Work; This pull request is related to #1762. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1787:533,test,test,533,https://su2code.github.io,https://github.com/su2code/SU2/pull/1787,2,['test'],['test']
Testability,"## Proposed Changes. Follow up of #1987 . Can be merged after, #1986 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988:628,test,test,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988,1,['test'],['test']
Testability,"## Proposed Changes. For 2D problems, the calculation for the magnitude of the rate-of-strain tensor is missing a term. When summing over the diagonal components of the deviatoric rate-of-strain tensor, the code loops over `nDim` diagonal components. In 2D, that means it only adds the first two diagonal components. This creates problems, because the third component is *not* zero, even for 2D flow. While third component of the rate-of-strain tensor in 2D is zero (i.e. S_33 = 0), the deviatoric rate-of-strain tensor has a nonzero third diagonal component. So in 2D, the third diagonal component must be explicitly added. This should only make significant impacts on problems where the divergence of velocity is non-negligible when compared to the diagonal components of the rate-of-strain tensor (i.e. for higher Mach cases). ## Related Work; None that I know of. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670:1178,test,test,1178,https://su2code.github.io,https://github.com/su2code/SU2/pull/670,1,['test'],['test']
Testability,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,3,['test'],['test']
Testability,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:1495,test,test,1495,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['test'],['test']
Testability,"## Proposed Changes. I used the OptimalPropeller function for another project a saw a lot of code that could be cleanup in order to be a bit more pythonic and easy to read.; ; ## Related Work; - no. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1846:756,test,test,756,https://su2code.github.io,https://github.com/su2code/SU2/pull/1846,1,['test'],['test']
Testability,"## Proposed Changes. In line with what we presented in the hackathon, this PR comes to be the first stage of a major reformatting that we are planning for the Driver structure. The goal is to converge to a structure that is more constant in time and that easily accommodates multi-physics via config file definition, instead on a *case by case* new CDriver class. The goal of this PR is not to be merged immediately, but rather to initiate discussion on the topic. I have created a project in; https://github.com/su2code/SU2/projects/8; where the stages of this process will be done. . ## Related Work. I run a presentation together with @talbring on input/output reformatting during the hackathon that took place at the annual SU2 Developers Meeting. The relevant slides for this PR are shared:. [ReformattingDriver.pdf](https://github.com/su2code/SU2/files/2405682/ReformattingDriver.pdf). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585:1442,test,test,1442,https://su2code.github.io,https://github.com/su2code/SU2/pull/585,1,['test'],['test']
Testability,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1200:716,test,test,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200,1,['test'],['test']
Testability,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1470:999,test,test,999,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470,1,['test'],['test']
Testability,"## Proposed Changes. In this pull request, we aim to add the option of turbulent intensity and ratio turbulent to laminar viscosity per inlet for the SST model as follows: . MARKER_INLET_TURBULENT= (Inlet_1, TurbIntensity_1, ViscRatio_1, Inlet_2, TurbIntensity_2, ViscRatio_2,......). In the case that the inlet markers are not provided, we aim to keep the current SU2 implementation. ## Related Work. This pull request is related to the previous pull request #1796. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1843:1024,test,test,1024,https://su2code.github.io,https://github.com/su2code/SU2/pull/1843,1,['test'],['test']
Testability,"## Proposed Changes. It would be good to extend the CFL_ADAPT option to include species transport for compressible flows. I can add a test case if it is needed. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:134,test,test,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,2,['test'],['test']
Testability,"## Proposed Changes. Move `radiation/p1adjoint/of_grad_cd.csv.ref` from https://github.com/su2code/TestCases.git to `TestCases/` folder. Discussion: https://su2devteam.slack.com/archives/C2A1JLGDR/p1654254077647149. ## Related Work. https://github.com/su2code/TestCases/pull/102. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1668:99,Test,TestCases,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1668,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:710,test,test,710,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,1,['test'],['test']
Testability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. Some other info was also not communicated like column names and column values. This fixes the issue. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999:1289,test,test,1289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999,1,['test'],['test']
Testability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. This fixes the issue. . [At the moment the code does not crash anymore but still only one profile is being written]. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1997:1303,test,test,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/1997,1,['test'],['test']
Testability,"## Proposed Changes. Small cleaning of CFluidScalar Constructor. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2357:756,test,test,756,https://su2code.github.io,https://github.com/su2code/SU2/pull/2357,1,['test'],['test']
Testability,"## Proposed Changes. Some method names make no sense like `GetNodeDomain` the user/coder has to look explanation and it is also not clear `Get the halo flag of a mesh node.` give no information and also provides no information, whether true indicates halo node or domain node. Python wrapper functions are almost complete in the camel case just a few of them in the snake case. Now all of them are in camel case, consistently. Similarly in the codebase, even inside same class some functions are the snake and others are in the camel case. In terms of the SU2 style guide, it is okay but pretty annoying for a developer. I am changing method names to at least provide some consistency inside the classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:1262,test,test,1262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['test'],['test']
Testability,"## Proposed Changes. The Boundary conditions in the SST turbulence model are based on the free stream conditions. However if we mix two stream with different fluid properties at the inlets, the Turbulent Kinetic Energy, omega and eddy viscosity at the inlets should be based on these local fluid properties. So in this pull request, we aim to use the known fluid properties at the inlets in order to set the BC for the SST model. ; I can add a test case if it is needed. ## Related Work. This pull request is related to #1784. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796:444,test,test,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796,2,['test'],['test']
Testability,"## Proposed Changes. The SU2 logo has been move in #1771 but its path has not been modified in the README. I update it and improve a bit the formatting of the markdown. ## Related Work. No. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1911:29,log,logo,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1911,2,"['log', 'test']","['logo', 'test']"
Testability,"## Proposed Changes. The current work implements the BAY and jBAY vortex generator source-term model using a jBAY cell selection method in the compressible and incompressible solver. The model allows to simulate triangular and rectangular vortex generators. The model is based of [https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d](https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d; ). . ## PR Checklist. - [ x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273:855,test,test,855,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273,1,['test'],['test']
Testability,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1067:1377,test,test,1377,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067,1,['test'],['test']
Testability,"## Proposed Changes. The driver method `Postprocessing()` actually frees all the containers and finalizes the driver. As it does not reflect what is actually done and is easy to confuse with the method `Postprocess()`, the PR proposes renaming the method to `Finalize()`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1976:829,test,test,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/1976,1,['test'],['test']
Testability,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:635,Test,Testing,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,2,"['Test', 'test']","['Testing', 'test']"
Testability,"## Proposed Changes. The python wrapper instantiates drivers directly. To ensure that SU2 is initialized properly, also if used from python, some initialization code is already placed in the driver constructor. This PR moves additional initialization code to the driver constructor. ## Related Work; This came up during #1903. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:644,test,test,644,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['test'],['test']
Testability,"## Proposed Changes. There seems to be a sign error in the Jacobian calculation for the viscous flux of ideal gases. This has been checked in two ways. First, the Jacobian was derived by hand and compared to the actual code. Second, the code has been compared with the code for arbitrary equations of state. While the ideal gas law variant adds the inner product of the viscous flux and the velocity, the general gas law variant subtracts this term. ## Related Work. This error has been previously discussed in issue #609. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/612:833,test,test,833,https://su2code.github.io,https://github.com/su2code/SU2/pull/612,1,['test'],['test']
Testability,"## Proposed Changes. This PR adds the following features:; - New pressure inlet BC (specify total pressure) for the incompressible solver; - New mass flow outlet BC (specify target mass flow) for the incompressible solver; - Added outlet BC values to multipoint optimization options in python. It is now required to specify the type for each inlet and outlet BC in the incompressible solver. A descriptive error is thrown if this is not the case. For two inlet and outlets with different types, you would specify it as:. INC_INLET_TYPE= PRESSURE_INLET VELOCITY_INLET; INC_OUTLET_TYPE= MASS_FLOW_OUTLET PRESSURE_OUTLET. and the type order corresponds to the order of the markers given in MARKER_INLET and MARKER_OUTLET, respectively. An inviscid nozzle test case has been added to demonstrate the new features. Will update residuals in regressions once reported. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/621:752,test,test,752,https://su2code.github.io,https://github.com/su2code/SU2/pull/621,2,['test'],['test']
Testability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:588,benchmark,benchmark,588,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"## Proposed Changes. This PR is intended to put some functionality back that was involuntarily removed in #724. . Test cases for discrete adjoint FSI are now re-enabled with split files. They [correctly pass](https://travis-ci.org/su2code/SU2/builds/597983817) the travis tests [when the branch is based in feature_input_output](https://github.com/su2code/SU2/compare/feature_input_output...654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:114,Test,Test,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,3,"['Test', 'test']","['Test', 'tests']"
Testability,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:1792,test,test,1792,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,1,['test'],['test']
Testability,"## Proposed Changes. This PR, created together with @TobiKattmann , makes the necessary changes to obtain time-accurate discrete adjoint gradients for unsteady problems with grid movement. Main changes are for the handling of grid velocities of previous time steps. Regression test case to follow. ## Related Work; depends on #767 unsteady incompressible + ALE. Then a tested discrete adjoint for unsteady incompressible flow can be merged with this. ; Edit @TobiKattmann: PR767 is merged so I remove the dependent label. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766:277,test,test,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/766,3,['test'],"['test', 'tested']"
Testability,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1015:896,test,test,896,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015,1,['test'],['test']
Testability,"## Proposed Changes. This is a collection of minor bug-fixes that I've found while working with the codebase. Each is separated into a separate commit, with a description of the purpose of each bug fix in the commit description. ## Related Work. N/A. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649:561,test,test,561,https://su2code.github.io,https://github.com/su2code/SU2/pull/649,1,['test'],['test']
Testability,"## Proposed Changes. This is a fix for travis. Apparently the default channel for anaconda has changed as it was not able to find mpi4py anymore. . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/720:475,test,test,475,https://su2code.github.io,https://github.com/su2code/SU2/pull/720,1,['test'],['test']
Testability,"## Proposed Changes. This is a further effort in automating as much as we can in our development process. It enables the release drafter action (https://github.com/toolmantim/release-drafter) which will automatically keep an release draft with a changelog up to date as soon as there is a push to develop. . The change log entries are categorized depending on the labels `feature`, `fix`, `chore` for new features, bug fixes and maintenance. If you don't want your PR listed, add the label `no_changelog`.; So remember to always add a label to your PR (maybe we will automate that soon)!. Here is the most current draft (https://github.com/su2code/SU2/releases). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:319,log,log,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,2,"['log', 'test']","['log', 'test']"
Testability,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:605,test,test,605,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['test'],['test']
Testability,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:57,test,testing,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,7,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:113,test,tests,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,8,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:318,benchmark,benchmarks,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['benchmark'],['benchmarks']
Testability,"## Proposed Changes. This pull request adds the thermal conductivity, heat capacity and diffusivity as output for the incompressible solver in order to help the process of debugging inside SU2. During this process, we found some bugs regarding the diffusivity and thermal conductivity when the FLUID_MIXTURE model is used. Additionally, unused variables for computing the diffusivity have been removed. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956,1,['test'],['test']
Testability,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:1101,test,test,1101,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['test'],['test']
Testability,"## Proposed Changes. This pull request restricts the use of the FLUID_MIXTURE model only when the KIND_SCALAR_MODEL is SPECIES_TRANSPORT. . ## Related Work. Reported in CDF-Online; https://www.cfd-online.com/Forums/su2/257519-kind_scalar_model-mixture.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2345:932,test,test,932,https://su2code.github.io,https://github.com/su2code/SU2/pull/2345,1,['test'],['test']
Testability,"## Proposed Changes. This request enables unsteady incompressible flow simulation with grid movement. Changes are made as part of the collaboration with @economon and @TobiKattmann to expand the capabilities of the incompressible solver. Arbitrary Lagrangian-Eulerian formulation of the Low-Mach Navier-Stokes equations have been implemented which is suitable for both rigid grid motion and mesh deformation problems. Regression test case to follow. ## Related Work. #766 . ## PR Checklist. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767:429,test,test,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/767,2,['test'],['test']
Testability,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998:703,test,test,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/998,1,['test'],['test']
Testability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:775,test,test,775,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['test'],['test']
Testability,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552:1368,test,test,1368,https://su2code.github.io,https://github.com/su2code/SU2/pull/552,1,['test'],['test']
Testability,"## Proposed Changes. With this pull request, we aim to initialize the fluid models based on the Ideal gas laws for incompressible flows in a standard way using the THERMODYNAMIC_PRESSURE($P_{op}$) and the INC_TEMPERATURE_INIT ($T_{init}$), the initial density is computed based on the ideal gas law :. $\rho_{init}= P_{op} / R T_{init}$. When the FLUID_MODEL is CONSTANT_DENSITY, the constant density must be given in the config file using the option DENSITY_CONSTANT, similar as it is done when viscosity, thermal conductivity and diffusivity models are chosen as constant. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2137:1263,test,test,1263,https://su2code.github.io,https://github.com/su2code/SU2/pull/2137,1,['test'],['test']
Testability,"## Proposed Changes. [clang-tidy ](https://clang.llvm.org/extra/clang-tidy/) is a well-known tool. This PR adds clang-tidy file with common checks and applies to the code base. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989:494,test,test,494,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989,1,['test'],['test']
Testability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:758,test,test,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['test'],['test']
Testability,"## Proposed Changes; ![image](https://github.com/su2code/SU2/assets/38071223/019c08ab-6ef4-44d0-8d6e-302318fa27ab). I'm also working on an unsteady version, but there is something wrong with the unsteady adjoint. ## Related Work; Fixes #2058. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2059:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/2059,1,['test'],['test']
Testability,"## Proposed Changes; #824 was closed when merging #861, this is the new WIP PR for the hybrid work. ## Related Work; #789 #824 #861. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/895:443,test,test,443,https://su2code.github.io,https://github.com/su2code/SU2/pull/895,1,['test'],['test']
Testability,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964:1216,test,test,1216,https://su2code.github.io,https://github.com/su2code/SU2/pull/964,1,['test'],['test']
Testability,"## Proposed Changes; * Fix `mpi4py` include directories when it is installed in python user directory.; * Fix `mkl` dependency when it is installed outside a master directory such as when installing from Ubuntu PPA.; . ## Related Work; Fixes #823. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/826:798,test,test,798,https://su2code.github.io,https://github.com/su2code/SU2/pull/826,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2140:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2140,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2240:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2240,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:1313,test,test,1313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Following to what was done in the pull request #1796 , we aim with this pull request to use the known fluid properties at the inlets in order to set the BC for the SA model. Also, we extent the use of the turbulent marker options for this case as It was done in the previous pull request for SST #1843. ; I can add a test case if it is needed. . ## Related Work. related to pull request #1796 , #1843 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953:409,test,test,409,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:1128,test,test,1128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - During time-averaging, the weighted sum over previous timesteps is re-used to quickly update the time-average during inner iterations.; - Square-windowing now does not save the entire sample history, which should eliminate performance degradation when time-averaging is performed over many timesteps. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1545 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. (UnitTest); - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:1143,test,test,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360:300,test,testcase,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360,3,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1912:799,test,test,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/1912,3,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/616:792,test,test,792,https://su2code.github.io,https://github.com/su2code/SU2/pull/616,4,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/856:792,test,test,792,https://su2code.github.io,https://github.com/su2code/SU2/pull/856,19,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1512:834,test,test,834,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512,4,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:1093,test,test,1093,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; * Bug fix for surface-based objectives so that they are not counted multiple times when multiple surfaces are being designed; * Segfault fix for ParaView binary in serial.; * Fixes so that ParaView binary works properly with SU2_SOL (writing ASCII instead) and the python scripts for gradients and shape design; * Fixes line endings of SU2_PY/SU2/run/mergy.py; * Fixes TecIO typecasting issue found in #339; * Removes y^+ output from laminar Navier-Stokes (now RANS only); * Adjustment to output variables for incompressible flows; * Removes some warnings; * Xcode project file update. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Includes fix from #339, which will be closed.; Resolves #62 ; Resolves #54 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598:1455,test,test,1455,https://su2code.github.io,https://github.com/su2code/SU2/pull/598,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; A couple of memory issues that should be fixed right away in develop. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/517:867,test,test,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/517,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:1532,test,test,1532,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:1252,test,test,1252,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1004:266,test,tests,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/546:924,test,test,924,https://su2code.github.io,https://github.com/su2code/SU2/pull/546,1,['test'],['test']
Testability,## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Experimental branch to test modifications to the scalar/turbulence classes to minimize duplicate code. Will be merged into feature_scalar if successful.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/817:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/817,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204:1074,test,test,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug causing inlet profiles to fail when two adjacent inlets that share a vertex are prescribed with different values by file (especially with MG). Fixed by adding an explicit check on the marker tag for a match. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/560:1017,test,test,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/560,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:1242,test,test,1242,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Hi, all. This PR is resuming the #1496. I'm not familiar with the git, so the branch is unfortunately disconnected. ## Now working on . [Langtry and Menter model](https://doi.org/10.2514/1.42362). ## Current State . Code is well running. But, the result is not satisfactory. 😂; The LM(Langtry and Menter) model implemented to Su2 is under debugging compared to the results of Fluent's LM model. Transition onset is located upward then Fluent result. But, the good news is that when the correlations are set fixed value, the transition onset location is similar to the Fluent result. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:1658,test,test,1658,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; In this pull request, we extend the previous pull request of the mixing model adding the options of viscosity, thermal conductivity and other properties based on the species mass fractions. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This corresponds to the 2/3 part of the complete mixing model which started with the feature_mixturedensity in the previous pull request. We expect to add the final properties and the mixture specific heat capacity in the next pull request. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1687:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1687,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More efficient loops/maps for sorting of grid points and connectivity during initial reading/partitioning. This is important for very large meshes when running on limited resources. Due to the changes in the initial ordering of the connectivity, this PR results in minor differences in the residuals for the regressions. They have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:1154,test,test,1154,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Multizone does not work yet for species transport; This is a WIP to discuss the implementation details online. It does not work yet! . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; As mentioned in #1818 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821:958,test,test,958,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Part 2/3 of fluid mixing model. In this part, viscosity, thermal conductivity and other properties based on species mass fractions have been added. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690:1063,test,test,1063,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Preparing for large mesh support by switching from int32 to int64 in the ParMETIS library header. This change causes nearly all of the parallel regressions to fail due to slightly different partitioning behavior, but the final results stay the same. All regressions have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/561:1094,test,test,1094,https://su2code.github.io,https://github.com/su2code/SU2/pull/561,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Quick update for Xcode for the Driver file changes. Minor change in the include paths for each driver .cpp file. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/750:913,test,test,913,https://su2code.github.io,https://github.com/su2code/SU2/pull/750,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The mass flow rate uses AxiFactor. The computation of axifactor in CIncEulerSolver::GetOutletProperties is inconsistent with GetAxiFactor in CFlowOutput.cpp, leading to a different mass flow rate used for the target mass flow rate boundary condition (reported as screen output) compared to the mass flow rate reported in the history file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1780:1140,test,test,1140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1780,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The thermodynamic pressure influences the density at the inlet boundaries, especially when the mixture consists of more than 2 gases. So, with this pull request, we aim to obtain the pressure_thermodynamic as a user value or a default value, as 101325 [pa]. and based on this value compute the density. This is consistent with the low-mach approximation used in combustion.; I can add a test case if it is needed. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; This is pull request is related to #1826. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1839:481,test,test,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/1839,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/928:930,test,test,930,https://su2code.github.io,https://github.com/su2code/SU2/pull/928,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds the necessary base classes (solver, numerics, variable) for having an arbitrary number of scalar transport equations added to flow problems in a segregated manner (alongside a turbulence model, if necessary). Most of the numerics is shared with the scalar methods for the turb. solvers to eliminate duplication, and it should be easy now to add child classes for any new scalar transport models. In this PR, only a passive scalar has been implemented, but we are also building on this framework to add a flamelet model for combustion as a child class. A passive scalar test case will be added. It still needs more work, but it is important to have the skeleton merged now to lessen the burden of fixing conflicts with the ongoing restructuring in driver, variable, output, etc. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/777:676,test,test,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/777,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/535:1342,test,test,1342,https://su2code.github.io,https://github.com/su2code/SU2/pull/535,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR integrates the DG-FEM solver in the develop branch. Although still under development this solver is now in a state where other people can start to contribute, if desired. Furthermore, additional functionalities in terms of searching and interpolating are present in the DG solver that can also be used for the FV solver. Especially a true wall distance search instead of a point search to the nearest node on the wall would be possible. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565:1246,test,test,1246,https://su2code.github.io,https://github.com/su2code/SU2/pull/565,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a clean up of the configure options and bindings. I have removed unused bindings: HDF5, ZLIB, SZIP, JSON, and LAPACK. If anyone needs these, just let me know and we can put the necessary bindings back into configure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We can also think about changing the autotools here as discussed in #584. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:1094,test,test,1094,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/540:1102,test,test,1102,https://su2code.github.io,https://github.com/su2code/SU2/pull/540,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:1516,test,test,1516,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:128,test,testing,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['test'],['testing']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/525:212,test,tests,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/525,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:289,test,tests,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; add incompressible turbulent bend to tutorial regression tests. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. https://github.com/su2code/Tutorials/pull/33; https://github.com/su2code/su2code.github.io/pull/111. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1898:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1898,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1453:941,test,test,941,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Add a probe function in latest SU2. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/553:826,test,test,826,https://su2code.github.io,https://github.com/su2code/SU2/pull/553,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/527:983,test,test,983,https://su2code.github.io,https://github.com/su2code/SU2/pull/527,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added surface analyse options for direct differentiation and fixed a bug for multiple ffd boxes with multiple dv markers.; The feature_directdiff_obj branch in TestCases repo needs to be merged in conjunction with this pull request. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/569:252,Test,TestCases,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/569,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Adds the functionality of reading fluid data from an unstructured triangulated lookup table and interpolating. No coupling with a solver (combustion) yet, at this point we will only add a verification test. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; We split #1223 into smaller chunks. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637:293,test,test,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637,2,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/547:880,test,test,880,https://su2code.github.io,https://github.com/su2code/SU2/pull/547,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/548:879,test,test,879,https://su2code.github.io,https://github.com/su2code/SU2/pull/548,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Ffor wall functions a warning is issued when y+ < 5, but the value 5 should be the user defined limit obtained from the config option.; Furthermore, some spelling errors are correcred. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/945:845,test,test,845,https://su2code.github.io,https://github.com/su2code/SU2/pull/945,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix incompressible inlet when corner nodes are shared by a viscous wall; https://github.com/su2code/SU2/discussions/1613. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1631:954,test,test,954,https://su2code.github.io,https://github.com/su2code/SU2/pull/1631,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/925:889,test,test,889,https://su2code.github.io,https://github.com/su2code/SU2/pull/925,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixing some spelling mistakes. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1586:867,test,test,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/1586,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; INCINLET_USENORMALS= YES will use the normals of the inlet boundary faces instead of the normal from MARKER_INLET.; This was only active for pressure inlets and not for velocity inlets. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1643:1018,test,test,1018,https://su2code.github.io,https://github.com/su2code/SU2/pull/1643,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; My changes allow the changing of moving wall velocities when using the py_wrapper. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; There has been some previous work, where functionality for changing mesh rotation rates was added. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Nodes shared by an inlet and a wall show nonphysical values in the corner node for energy, temperature, pressure, density. This fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266:1056,test,test,1056,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1758:1112,test,test,1112,https://su2code.github.io,https://github.com/su2code/SU2/pull/1758,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762:1115,test,test,1115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:909,test,test,909,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1320:899,test,test,899,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329:1380,test,test,1380,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The comment and the code are inconsistent regarding RefElemLength. Propose to change the comment from 0.1m to 1.0m.; ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1830. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1831:1049,test,test,1049,https://su2code.github.io,https://github.com/su2code/SU2/pull/1831,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500:946,test,test,946,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The wall function variable y+ was not computed on the halo nodes, leading to visual 'spots' in the solution. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1768 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:916,test,test,916,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:1719,test,test,1719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames.; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. Additional independent transport equations are optionally solved for the species like NO and CO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917:1251,test,test,1251,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a draft pull request for the implementation of a supersonic inlet profile feature. So far, the only changes made have been in CEulerSolver.cpp, where the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC have been replaced with vertex values (please verify I did this correctly). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; I have been in communication with @bigfooted regarding the first steps for this implementation. I created a feature request for this on 5/25/2022. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652:1300,test,test,1300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a small update of the lookup table routines to prepare for the implementation of the flamelet model. A bug was fixed and the header file definition changed (keywords in sentences are capitalized). Some small textual changes were made. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the upcoming PR for feature_new_flamelet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:1093,test,test,1093,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465:1304,test,test,1304,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; We need a different treatment of the convective scalar fluxes to improve results for the species solver. ; This PR deals with the specific case of the incompressible species solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; connected to #726 and #721, and discussion #1695. ## my checklist:; [] check residual convergence for old and new testcase (primitive venturi mixer); [] check convergence for turbulence problems, still problematic? Should we implement upwind scheme for species only (for now)?; [] check implementation of inlet/outlet bc; [] compressible flow vs incompressible flow; []. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1697:536,test,testcase,536,https://su2code.github.io,https://github.com/su2code/SU2/pull/1697,2,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When `(Objective < Value ) * Scale` ('<' can be '>') is added to OPT_OBJECTIVE in the configuration file, it is treated as a penalty function. When the constraint is satisfied, the penalty function value should be zero. However, it is currently set to the function value. The same `elif` condition as in `obj_dp` should be used. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1968. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1969:1143,test,test,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1969,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When no inlet profile exists, su2 creates one for you. There was a bug where the index of the marker was used to look up the string of column names, instead of the index of the inlet markers. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2267:1105,test,test,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2267,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When using wall functions in combination with heat transfer, a thermal law of the wall is needed to accurately solve for velocity as well as temperature. . This is a first implementation, only for isothermal walls, and only for the incompressible solver. During the WIP, this will be generalized. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Improvement of the wall function implementation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1748:1145,test,test,1145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1748,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; change MPI_QUANTITIES to enum class. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2279:543,test,test,543,https://su2code.github.io,https://github.com/su2code/SU2/pull/2279,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1452:901,test,test,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; edit:; - Implement the SST2004,SST2004m, SST2003 and SST2003m model according to the NASA website https://turbmodels.larc.nasa.gov/sst.html; - implementation compatible with ongoing work on SA model. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1551 ; #1364 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557:1048,test,test,1048,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1451:919,test,test,919,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1457:872,test,test,872,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; the axisymmetric terms in the production term of the SST model are not correct and the current implementation is prone to error. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1783 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784:936,test,test,936,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; updated catch.hpp from the catchorg github repository. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726:739,test,test,739,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726,1,['test'],['test']
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; when using an inlet profile, and the inlet profile does not exist, SU2 will write a profile for you. When you do this when using mpi, this sometimes fails, depending on the number of ranks. This PR fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1767 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1786:1020,test,test,1020,https://su2code.github.io,https://github.com/su2code/SU2/pull/1786,1,['test'],['test']
Testability,"## Proposed Changes; *Implementation of NISHIKAWA Rp Limiters (R3, R4, R5); Reference - ""New Unstructured-Grid Limiter Functions"", Hiroaki Nishikawa, AIAA 2022-1473*; . ## Related Work; *1- Less dissipative in comparison to Venkatakrishnan limiter; 2- Can preserve higher order accuracy (3rd, 4th and 5th with R3, R4 and R5 limiters, probably future proof); 3- May help in better convergence for certain cases with different K.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006:987,test,test,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006,1,['test'],['test']
Testability,"## Proposed Changes; *Implementation of Streamwise periodic Iso-thermal BCs*; . ## Related Work; *This is an add-on to the already existing Streamwise periodic flow solver. As a result, there are new source terms which are accounted for in the solution.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1799:814,test,test,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/1799,1,['test'],['test']
Testability,"## Proposed Changes; *This PR adds the capability of a radiative equilibrium wall boundary condition to the standard air and NEMO solvers. ; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1703:755,test,test,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/1703,1,['test'],['test']
Testability,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:1078,test,test,1078,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,1,['test'],['test']
Testability,"## Proposed Changes; *add Cur_Time column to the default history.csv file for transient analysis*. ## Related Work; *I propose this change mainly for third-party post-processing purposes, the post module can easily acquire the time information from the history file. In addition, the time data in the history file allows the users to know the current simulation time intuitively.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2141:1053,test,test,1053,https://su2code.github.io,https://github.com/su2code/SU2/pull/2141,1,['test'],['test']
Testability,"## Proposed Changes; *in driver_structure.cpp, a few lines have been included to force reading the Target files when running discrete adjoint. I tested it on MacOS El Capitán and OpenSUSE 42.3 with the most recent g++. Under MacOS, the MPI flavour is openmpi; on openSUSE, the MPI flavour is mpich2psm2*; . ## Related Work; This fix forces the reading of Target Files in an inverse design project when using discrete adjoint. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600:145,test,tested,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/600,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; *restoring original testcase repository for regression tests.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371:41,test,testcase,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371,3,['test'],"['test', 'testcase', 'tests']"
Testability,"## Proposed Changes; + remove some obsolete code. This is to make clearer what can be called from python.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:426,test,test,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['test'],['test']
Testability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:471,test,test,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:1144,test,test,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['test'],['test']
Testability,"## Proposed Changes; - Protect `AD::GetDerivative()` call trees by `AD::BeginUseAdjoints()`, `AD::EndUseAdjoints()`.; - `GetAdjointSolution_time_n()` and `GetAdjointSolution_time_n1()` use lock-free adjoints access now. ## Related Work; continues #2146; related to #1984. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:703,test,test,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['test'],['test']
Testability,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352:991,test,test,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352,1,['test'],['test']
Testability,"## Proposed Changes; - The CoDiPack update fixes a rare data race.; - For consistency, the explicit adjoints resizing introduced previously is complemented by explicit adjoints locking. ## Related Work; #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2146:642,test,test,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/2146,1,['test'],['test']
Testability,"## Proposed Changes; - This PR proposes to add CGNS format as a possible writing format for FFD box; . ## Related Work; - This should address #148 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/674:699,test,test,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/674,1,['test'],['test']
Testability,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1238:65,Test,Testcases,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238,2,"['Test', 'test']","['Testcases', 'test']"
Testability,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1396:1055,test,test,1055,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396,1,['test'],['test']
Testability,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:890,test,test,890,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['test'],['test']
Testability,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1162:923,test,test,923,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162,1,['test'],['test']
Testability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:808,test,test,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,1,['test'],['test']
Testability,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:595,log,logic,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## Related Work; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2328:1331,test,test,1331,https://su2code.github.io,https://github.com/su2code/SU2/pull/2328,1,['test'],['test']
Testability,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981:902,test,test,902,https://su2code.github.io,https://github.com/su2code/SU2/pull/981,2,['test'],['test']
Testability,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294:175,test,tests,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; ; Add execute permission to SU2_PY/fsi_computation.py. This appears to be the intent - installs to $prefix/bin and starts with a shebang. ## Related Work. Resolve sbopkglint complaint when building Slackware package. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2072:795,test,test,795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2072,1,['test'],['test']
Testability,"## Proposed Changes; ; Do not write Z-velocity or temperature when the (adjoint) equations are not solved. . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1920:443,test,test,443,https://su2code.github.io,https://github.com/su2code/SU2/pull/1920,1,['test'],['test']
Testability,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189:1064,test,test,1064,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189,1,['test'],['test']
Testability,"## Proposed Changes; @jtneedels and I have worked on implementing the Air-7 gas model to the NEMO native fluid model. This allows for simulations of inviscid weakly ionized flows with the addition of NO+ and e-. . I am open to adding a test case for this, similar to the thermal bath case, since they run extremely fast, though I am open to idea. Work is ongoing to extend this viscous simulations.; Updates from #1533 are added here as well. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555:236,test,test,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555,2,['test'],['test']
Testability,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:236,test,tests,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; @oleburghardt, according to @talbring this was supposed to go AFTER #653. Is my work a joke around here or what?!; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667:836,test,test,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/667,1,['test'],['test']
Testability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:1366,test,test,1366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['test'],['test']
Testability,"## Proposed Changes; @rsanfer , @talbring please keep the testcases up to date with the new options you are introducing, avoidable bugs are starting to pass... ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:58,test,testcases,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,2,['test'],"['test', 'testcases']"
Testability,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1491:424,test,test,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491,1,['test'],['test']
Testability,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:539,test,test,539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,1,['test'],['test']
Testability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:909,test,test,909,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,3,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; A recent change from #1417, which I merged in had the regression set to feature_cat_wall in the TestCases. This will update and fix that call. I'm sure I will need to check additional fixes associated with this change.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1817:117,Test,TestCases,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1817,1,['Test'],['TestCases']
Testability,"## Proposed Changes; A small typo was causing the eddy viscosity to not be communicated properly.; Thanks @economon for pointing me in the right direction. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/744:466,test,test,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/744,1,['test'],['test']
Testability,"## Proposed Changes; AUSM+ -up scheme of Liou (A sequel to AUSM, Part II: AUSM + -up for all speeds) has been implemented . It is an all speed scheme and is more robust and accurate in comparison to the AUSM scheme. Also It has relatively fewer issues in comparison to the Roe scheme.; (I tried it over a relatively complex geometry (unstructured hybrid mesh), implementation looks fine). . ## Related Work; **. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628:962,test,test,962,https://su2code.github.io,https://github.com/su2code/SU2/pull/628,1,['test'],['test']
Testability,"## Proposed Changes; AUSM+-up scheme of Liou has been implemented (A sequel to AUSM, Part II: AUSM + -up for all speeds).; - This scheme is more robust and accurate in comparison to existing AUSM scheme in the code; - Relatively fewer issues in comparison to Roe scheme; - Proper scaling of numerical dissipation at lower Mach numbers; - I tried it over a relatively complex geometry, implementation seems to be fine. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/629:986,test,test,986,https://su2code.github.io,https://github.com/su2code/SU2/pull/629,1,['test'],['test']
Testability,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1510:874,test,test,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510,1,['test'],['test']
Testability,"## Proposed Changes; Add feature to record a tape for debug purposes (as a tool for AD / discrete adjoint / .. developers), using CoDiPack's `codi::RealReverseTag`. ## Related Work; Supposed to help finding remaining errors in #2317. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2343:905,test,test,905,https://su2code.github.io,https://github.com/su2code/SU2/pull/2343,1,['test'],['test']
Testability,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:761,test,test,761,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['test'],['test']
Testability,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:911,test,test,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['test'],['test']
Testability,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:1119,test,test,1119,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,1,['test'],['test']
Testability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:1328,test,test,1328,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['test'],['test']
Testability,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:397,test,test,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['test'],['test']
Testability,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387:829,test,test,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387,1,['test'],['test']
Testability,"## Proposed Changes; Added `SelectZone` function to `CDriverBase` that dynamically sets the zone index; . ## Example Usage; ```python; import pysu2; from mpi4py import MPI. def execute_su2():; # Import mpi4py for parallel run; comm = MPI.COMM_WORLD; rank = comm.Get_rank(); num_zones = 2; # Initialize the corresponding driver of SU2, this includes solver preprocessing; SU2Driver = pysu2.CMultizoneDriver(config_path, num_zones, comm) # type: ignore. # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(). # Time loop is defined in Python so that we have acces to SU2 functionalities at each time step; comm.Barrier(). # Time iteration preprocessing; SU2Driver.Preprocess(0). # Run one time-step (static: one simulation); SU2Driver.Run(). # Update the solver for the next time iteration; SU2Driver.Update(). # Monitor the solver and output solution to file if required; SU2Driver.Monitor(0). for izone in range(num_zones):; SU2Driver.SelectZone(izone); # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(); print(allMarkerIDs). # Output the solution to file; SU2Driver.Output(0). # Finalize the solver and exit cleanly; SU2Driver.Finalize(); ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:1834,test,test,1834,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,1,['test'],['test']
Testability,"## Proposed Changes; Added a dry run mode (can be enabled by adding -d as flag to the SU2_CFD binary). If this mode is enabled, all of the expensive geometrical preprocessing steps are skipped and no solver is started, but all other steps during the driver construction are executed. This is great to check whether the setup is sane and the physical settings are correct without having to wait until the mesh is read and the partitioning is done. For the implementation I created a dummy geometry class with zero elements and points and a dummy driver which does essentially nothing. Initially I thought it would be more work, but apparently it almost worked out of the box. I also added a table output during the solver preprocessing for the DG solver. Furthermore I moved parts of the Input_Preprocessing() routine dealing with the geometry to the Geometrical_Preprocessing() routine where it should belong. The changes in SU2_CFD.cpp look more complicated then they are. Just hide white space changes. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:1572,test,test,1572,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,1,['test'],['test']
Testability,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:399,Test,Testcases,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"## Proposed Changes; Added local timestep and local CFL as volume output for both the flow and turbulence variables; . ## Related Work; In relation to #2056. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060:715,test,test,715,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060,1,['test'],['test']
