quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"OOT/master/_build/bin/thisroot.fish; /tmp root -l # now with master; root [0] ROOT::RDataFrame(""t"", ""f.root"").Display(""x"")->Print(); Fatal: 0 violated at line 1509 of `../io/io/src/TGenCollectionProxy.cxx'; aborting; #0 0x00007f4f9c4a99ea in wait4 () from /usr/lib/libc.so.6; #1 0x00007f4f9c427a2b in do_system () from /usr/lib/libc.so.6; #2 0x00007f4f9cdcc21c in TUnixSystem::Exec (this=0x55b0a9ebf800, shellcmd=0x55b0ae8f76d0 ""/home/blue/ROOT/master/_build/etc/gdb-backtrace.sh 143932 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f4f9cdccb0e in TUnixSystem::StackTrace (this=0x55b0a9ebf800) at ../core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f4f9cc5e089 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7f4f9c10b012 """", msg=0x55b0af523450 ""0 violated at line 1509 of `../io/io/src/TGenCollectionProxy.cxx'"") at ../core/base/src/TErrorDefaultHandler.cxx:174; #5 0x00007f4f9cd3a560 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7f4f9c10b012 """", fmt=0x7f4f9ce795d8 ""%s violated at line %d of `%s'"", ap=0x7ffe675d1310) at ../core/foundation/src/TError.cxx:152; #6 0x00007f4f9cd3ab94 in Fatal (location=0x7f4f9c10b012 """", fmt=0x7f4f9ce795d8 ""%s violated at line %d of `%s'"") at ../core/foundation/src/TError.cxx:249; #7 0x00007f4f9bf0a0fa in TGenCollectionProxy__VectorNext () at ../io/io/src/TGenCollectionProxy.cxx:1509; #8 0x00007f4f9c009167 in TStreamerInfoActions::GenericLooper::Numeric<int, int>::ConvertAction (items=0x55b0af2ac580, start=0x55b0af0e38d0, end=0x55b0af0e38dc, loopconf=0x7ffe675d1550) at ../io/io/src/TStreamerInfoActions.cxx:2447; #9 0x00007f4f9bff45fd in TStreamerInfoActions::GenericLooper::ConvertBasicType<int, int, TStreamerInfoActions::GenericLooper::Numeric>::Action (buf=..., start=0x55b0af0e38d0, end=0x55b0af0e38dc, loopconf=0x7ffe675d1550, config=0x55b0af070740) at ../io/io/src/TStreamerInfoActions.cxx:2467; #10 0x00007f4f9bf90e3b in TStreamerInfoActions::GenericLoope",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9136:1229,Error,ErrorHandler,1229,https://root.cern,https://github.com/root-project/root/issues/9136,1,['Error'],['ErrorHandler']
Availability,"OSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1641,error,error,1641,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"OT should get one too, but that's another Issue.). As Wouter doesn't appear to have a GitHub account (**edit**: I'm wrong, he's @wverkerke), I'll tag @egpbos as a public member of the RooFit development team (apologies if I should have tagged someone else) as well as @dkirkby to see if they have any particular thoughts on the matter. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. To trigger the RooFit banner simply run any piece of code that uses any part of RooFit. Example:. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. For the examples I've shown above are using ROOT `v6.24/06` built from source. ```console; $ root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Feb 18 2022, 00:26:00; From tags/v6-24-06@v6-24-06; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. * [ROOT Forum: How to switch off RooFit banner?](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4); * [ROOT Forum: RooFit Banner - can we switch it off somehow?](https://root-forum.cern.ch/t/roofit-banner-can-we-switch-it-off-somehow/13574); * [ROOT Forum: `__ROOFIT_NOBANNER=ON` CMake option seems to have no effect](https://root-forum.cern.ch/t/roofit-nobanner-on-cmake-option-seems-to-have-no-effect/48828); * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/63; * https://github.com/conda-forge/root-feedstock/issues/160",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:4729,down,download,4729,https://root.cern,https://github.com/root-project/root/issues/9954,1,['down'],['download']
Availability,"OTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Windows 10. Latest version of root as of April 2021; ### Additional context; <!--; Add any other context about the problem here.; -->; I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:5207,down,download,5207,https://root.cern,https://github.com/root-project/root/issues/7982,1,['down'],['download']
Availability,"Old test said:. > one of the reason of the failure is the fact that the first	; > clones array is empty!. https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/runNestedClones.C and https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/nestedclones.root are reproducing this (before it was removed, because roottest isn't a place to keep reproducers)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8744:43,failure,failure,43,https://root.cern,https://github.com/root-project/root/issues/8744,1,['failure'],['failure']
Availability,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:760,error,error,760,https://root.cern,https://github.com/root-project/root/issues/8187,1,['error'],['error']
Availability,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160:153,error,error,153,https://root.cern,https://github.com/root-project/root/issues/7160,2,['error'],['error']
Availability,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5339:119,avail,available,119,https://root.cern,https://github.com/root-project/root/pull/5339,1,['avail'],['available']
Availability,"On Ubuntu at least, the compiler is in a package separate of the development headers and libraries, but it is required to build `ROOTTMVASofieParser`. If missing, it leads to confusing errors such as `target pattern contains no '%'`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13356:185,error,errors,185,https://root.cern,https://github.com/root-project/root/pull/13356,1,['error'],['errors']
Availability,"On Windows, even `__declspec(no_sanitize_address)` does not prevent the `heap-use-after-free` errors when using the `/fsanitize=address` compiler flag, so don't even try. Fixes https://github.com/root-project/root/issues/9445",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16586:94,error,errors,94,https://root.cern,https://github.com/root-project/root/pull/16586,1,['error'],['errors']
Availability,"On Windows, the .dll files contain symbol information in COFF Format which DLM currently fails to understand properly. This leads to unrecognized symbol errors while starting ROOT with modules. This commit teaches DLM to correctly read symbols when the Object File is in COFF executable format. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6154:153,error,errors,153,https://root.cern,https://github.com/root-project/root/pull/6154,1,['error'],['errors']
Availability,"On Windows, the `TMVA_Higgs_Classification.C` tutorial gives the; following error:. ```; Processing C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/tmva/TMVA_Higgs_Classification.C...; In file included from input_line_10:1:; C:\build\night\LABEL\windows10\SPEC\default\V\master\root\tutorials\tmva\TMVA_Higgs_Classification.C:322:27: error: no member named 'Python_Executable' in namespace 'TMVA'; gSystem->Exec(TMVA::Python_Executable() + "" make_higgs_model.py"");; ~~~~~~^; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. Using the same trick to get the Python executable name via; `gROOT->ProcessLine` that is also used in the other TMVA tutorials like; `TMVA_CNN_Classification.C` should fix the problem. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_tmva_TMVA_Higgs_Classification/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10379:76,error,error,76,https://root.cern,https://github.com/root-project/root/pull/10379,4,"['Error', 'error']","['Error', 'error']"
Availability,"On a M1 Max mac, ROOT fails to compile due to the fact it spawns too many processes too fast to copy the headers, going over the 256 file descriptors limit which is default on macOS. Changing ulimit via `ulimit -n 1024` fixes the issue, however it would be good to have some proper throttling, since the failure is really ambiguous.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10410:304,failure,failure,304,https://root.cern,https://github.com/root-project/root/issues/10410,1,['failure'],['failure']
Availability,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650:428,repair,repairs,428,https://root.cern,https://github.com/root-project/root/pull/12650,2,"['down', 'repair']","['down', 'repairs']"
Availability,"On apple M2 chips, LLVM assertion slow down the execution of the test suite (>2k tests) by some 20%. This PR aims to check whether this is the case on the Core i7 mac, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14650:39,down,down,39,https://root.cern,https://github.com/root-project/root/pull/14650,1,['down'],['down']
Availability,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16492:1168,Error,Error,1168,https://root.cern,https://github.com/root-project/root/pull/16492,2,['Error'],['Error']
Availability,"On i686, floating-point math is less accurate than on other systems. By enabling SSE2, rounding errors should accumulate to a lower extent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4402:96,error,errors,96,https://root.cern,https://github.com/root-project/root/pull/4402,1,['error'],['errors']
Availability,On macOS 13.3 Xcode 14 we get; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<unsigned long long *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<unsigned long long *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```; when generating `./tree/ntupleutil/G__ROOTNTupleUtil.cxx` yet the exit code is 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788:192,error,error,192,https://root.cern,https://github.com/root-project/root/issues/12788,1,['error'],['error']
Availability,"On macOS, `-Dcocoa=Off` will cause the build to fail with; ```; [ 77%] Linking CXX shared library ../lib/libCore.so; Undefined symbols for architecture arm64:; ""TMacOSXSystem::TMacOSXSystem()"", referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; ""typeinfo for TMacOSXSystem"", referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; ld: symbol(s) not found for architecture arm64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libCore.so] Error 1; make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12527:666,error,error,666,https://root.cern,https://github.com/root-project/root/issues/12527,4,"['Error', 'error']","['Error', 'error']"
Availability,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433:180,avail,available,180,https://root.cern,https://github.com/root-project/root/pull/16433,1,['avail'],['available']
Availability,On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error.; Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3801:137,error,error,137,https://root.cern,https://github.com/root-project/root/pull/3801,2,['error'],['error']
Availability,"On one installation of MacOS with Sonoma 14.6.1 and XCode 15.4 and clang-1500.3.9.4; (not sure about the xcode command line tool version), the generation of; G__Core.cxx failed until we applied the change in this commit. On another installation of MacOS with the same version numbers the; change was not needed but the change did not hurt either. ```; In module 'std' imported from input_line_1:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:52:; error: missing '#include <__chrono/file_clock.h>'; '_FilesystemClock'; must be defined before it is used; template <class _Clock, class _Duration = typename _Clock::duration>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/time_point.h:34:1:; note: in instantiation of default argument for; 'time_point<std::filesystem::_FilesystemClock>' required here; template <class _Clock, class _Duration = typename _Clock::duration>; ^~~~~~~~; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk/usr/include/c++/v1/__chrono/file_clock.h:51:8:; note: definition here is not reachable; struct _FilesystemClock {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494:547,error,error,547,https://root.cern,https://github.com/root-project/root/pull/16494,1,['error'],['error']
Availability,"On some configurations such warning causes compilation errors like:. ```; C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9686:55,error,errors,55,https://root.cern,https://github.com/root-project/root/pull/9686,2,['error'],"['error', 'errors']"
Availability,On some machines the gif library is not available.; The animated gif production is disabled by default.; The tutorial header explains how to activate it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10433:40,avail,available,40,https://root.cern,https://github.com/root-project/root/pull/10433,1,['avail'],['available']
Availability,"On the Snap build of ROOT, the parameters were assumed to be int, double. Errors from build log, running Ubuntu 20.04 GCC9 C++17. ```; /root/parts/root/src/roofit/xroofit/src/xRooNode.cxx:5778:105: note: deduced conflicting types for parameter ‘const _Tp’ (‘int’ and ‘double’); 5778 | : (h->GetBinContent(1) + std::max(abs(h->GetBinContent(1) * 0.1), 50.)));; ```; ; This doesn't appear to occur in normal builds, but the guard code seems trivial enough to include and this may prevent compilation errors in other scenarios. ## Checklist:. - [Y] tested changes locally; - [Y] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11984:74,Error,Errors,74,https://root.cern,https://github.com/root-project/root/pull/11984,2,"['Error', 'error']","['Errors', 'errors']"
Availability,Only builds using LLVM 9 source works right now (using `--with-binary-llvm` and `--with-llvm-tar` flags will cause a build error). A single test fails. Reproducer - `cat <path to cling source dir>/test/Lookup/template.C | cling --nologo -I<path to build dir>/tools/clang/include -Xclang -verify -fno-rtti 2>&1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7760:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/7760,1,['error'],['error']
Availability,Only download test data if running the test that needs them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:5,down,download,5,https://root.cern,https://github.com/root-project/root/pull/402,1,['down'],['download']
Availability,"Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```; if __name__ == ""__main__"": ; with TFile(""file1.root"", ""recreate"") as outfile: ; h = ROOT.TH1F() ; outfile.Close(); ```. about half the time it gives the following error output:. `; *** Break *** segmentation violation; [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info); [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info); [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11823:367,error,error,367,https://root.cern,https://github.com/root-project/root/issues/11823,1,['error'],['error']
Availability,Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7350:311,failure,failures,311,https://root.cern,https://github.com/root-project/root/pull/7350,1,['failure'],['failures']
Availability,"Original commit message:; ""; The current logic of pseudo-automatic modulemap discovery is a little fragile; as it mounts a virtual file named module.modulemap in the location where the; a give system library header is found (cuda.h, etc). However, if the libraries; are squashed into a single folder then we end up mounting a file over another; virtual file. This should be a hard error, however, on systems such as OSX some; libraries already come with modulemap files and we should just not mount our; predefined ones. This makes it very difficult to distinguish when to issue the; hard error. While this patch is not a solution for the general when the modulemaps are; automatically discovered (-fimplicit-module-maps), we can use the real file; stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header; files into a single folder.; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5178:381,error,error,381,https://root.cern,https://github.com/root-project/root/pull/5178,2,['error'],['error']
Availability,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5059:552,error,error,552,https://root.cern,https://github.com/root-project/root/pull/5059,1,['error'],['error']
Availability,"Original message of upstream commit by Richard Smith, https://github.com/llvm/llvm-project/commit/61c7a9140b:; ```; Commit to a primary definition for a class when we load its first; member. Previously, we wouldn't do this if the first member loaded is within a; definition that's added to a class via an update record, which happens; when template instantiation adds a class definition to a declaration; that was imported from an AST file. This would lead to classes having member functions whose getParent; returned a class declaration that wasn't the primary definition, which; in turn caused the vtable builder to build broken vtables. I don't yet have a reduced testcase for the wrong-code bug here, because; the setup required to get us into the broken state is very subtle, but; have confirmed that this fixes it.; ```. This fixes an assertion in `CodeGenFunction::EmitCXXDestructorCall()`:; ```; Assertion `ThisTy->getAsCXXRecordDecl() == DtorDecl->getParent() && ""Pointer/Object mixup""' failed.; ```; which was already seen during the upgrade to LLVM 13 in one tutorial on CentOS 8 and ""solved"" by commit ffe867985b (""Relax assertion on generating destructor call""). Due to the nature of this problem, the assertion failure went away with unrelated changes so I reverted the change in 2b997add1d. Now the problem comes back with the upgrade to LLVM 16 and also in master when trying to enable the RBatchGenerator tutorials in https://github.com/root-project/root/pull/13302, both on macOS this time. Luckily, the underlying cause was properly fixed in upstream LLVM just last week, so backport that commit. FYI @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:1225,failure,failure,1225,https://root.cern,https://github.com/root-project/root/pull/13370,1,['failure'],['failure']
Availability,Otherwise roottest will pick up in the standalone mode the NDEBUG; flag twice and fail due to a redefinition. This failure shows up; in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6586:115,failure,failure,115,https://root.cern,https://github.com/root-project/root/pull/6586,1,['failure'],['failure']
Availability,"Otherwise the externals are built in x86_64 mode and are not compatible with the rest of the libraries. The error message is then something like:; ```; ld: warning: ignoring file lib/liblzma.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64; ```. See also https://discourse.cmake.org/t/building-application-using-externalproject-add-on-m1-cpu/4931/7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12887:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/12887,1,['error'],['error']
Availability,Otherwise we get cmake errors when CLING_CXXFLAGS is empty.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8866:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/8866,1,['error'],['errors']
Availability,Our CMake code for making path to headers relative is broken; for the v7 headers (as they don't have the 'CURRENT_SOURCE/inc'; prefix we check for). This caused that we have absolute paths for; those headers in the modulemap we ship with ROOT. This patch just hacks in the additional check for v7 headers; and a sanity check that should prevent this error in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2003:350,error,error,350,https://root.cern,https://github.com/root-project/root/pull/2003,1,['error'],['error']
Availability,"Output lines are in wrong order when running CTest on Windows x64, as shown below:; ```; 1397: -- BEGIN TEST OUTPUT --; 1397:; 1397: Processing C:/Users/bellenot/git/roottest/root/meta/runInterpreterValue.C...; 1397: WithDtor(): 1; 1397: Ident: IAmWithDtor!; 1397: Now deleting TInterpreterValue; 1397: ~WithDtor() 0; 1397: Now all WithDor should be gone; we have 0 left; 1397: About to return a WithDtor; 1397:; 1397: -- END TEST OUTPUT --; 1397: -- BEGIN OUTDIFF OUTPUT --; 1397: --- C:/Users/bellenot/git/roottest/root/meta/InterpreterValue.ref Tue Jul 13 10:19:19 2021; 1397: +++ C:/Users/bellenot/build/x64/release/roottest/root/meta/roottest-root-meta-runInterpreterValue-auto.log Mon Feb 21 15:23:36 2022; 1397: @@ -1,7 +1,7 @@; 1397:; 1397: WithDtor():1; 1397: -AbouttoreturnaWithDtor; 1397: Ident:IAmWithDtor!; 1397: NowdeletingTInterpreterValue; 1397: ~WithDtor()0; 1397: NowallWithDorshouldbegone;wehave0left; 1397: +AbouttoreturnaWithDtor; 1397:; 1397: -- END OUTDIFF OUTPUT --; 1397: CMake Error at C:/Users/bellenot/build/x64/release/RootTestDriver.cmake:254 (message):; 1397: compare 'stdout' error: 1; 1397:; 1397:; 1/1 Test #1397: roottest-root-meta-runInterpreterValue-auto ...***Failed 0.56 sec; ```; The output is correct, but the line order is wrong (i.e. `AbouttoreturnaWithDtor` is at the wrong position).; This is related to the issue #9809, and is due to the `-O1` optimization flag in Cling (`clingArgsStorage.push_back(""-O1"");` in `TCling.cxx`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9944:1003,Error,Error,1003,https://root.cern,https://github.com/root-project/root/issues/9944,2,"['Error', 'error']","['Error', 'error']"
Availability,"Over the years we have a pathological issue with cling when it calls directly; compiler API. Most of the API assume they are called from code residing in a; text file. This code has valid source locations which can be used for; comparisons and things like point of instantiation for template instantiations. This means that whenever a clang API requires a valid source location, cling; should have an interface which gives a pseudo-valid, commonly-rooted unique; source location. We are bitten by this fact when preloading modules as if we have diagnostics; they cannot be ordered due to the fact that the compared decls from two; different modules do not have a common includer. This patch avoids using an API and relies on a textual form which does not have; this problem at the cost of synthesizing an extra string. This should fix the roottest python stl-stl test failure in the incremental builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4339:868,failure,failure,868,https://root.cern,https://github.com/root-project/root/pull/4339,1,['failure'],['failure']
Availability,Over the years we have been working towards controlling very well the way we build the PCH in order to reduce a lot of subtle problems. We have understood that inverting the responsibility to the infrastructure producing the PCH is better in terms of reliability. This patch unteaches cling to match its compiler instance to a given PCH. This helps when migrating to clang-repl where we could rely much more on the clang Driver to set up the compiler instance. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11922:251,reliab,reliability,251,https://root.cern,https://github.com/root-project/root/pull/11922,1,['reliab'],['reliability']
Availability,"PEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1006:17: error: ‘type’ was not declared in this scope; 01:46:28 len = sizeof(type);; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1062:1: warning: contro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:1925,error,error,1925,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8827:184,ERROR,ERROR,184,https://root.cern,https://github.com/root-project/root/pull/8827,1,['ERROR'],['ERROR']
Availability,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:178,echo,echo,178,https://root.cern,https://github.com/root-project/root/pull/8709,4,"['echo', 'error']","['echo', 'error']"
Availability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:463,avail,available,463,https://root.cern,https://github.com/root-project/root/pull/8880,1,['avail'],['available']
Availability,Please recover `SrvAuthenticate` from libSrvAuth library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:7,recover,recover,7,https://root.cern,https://github.com/root-project/root/issues/13387,1,['recover'],['recover']
Availability,Plus fix error with TCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4498:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/4498,1,['error'],['error']
Availability,"Ported from Cppyy patch by @wlav :`; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff. Adds an iterator for using declarations to `TClingMethodInfo`. it should make redundant the pythonisations that add the method overloads from a base class to the derived class that uses them:; https://github.com/root-project/root/blob/master/bindings/pyroot_experimental/PyROOT/src/PyzPythonHelpers.cxx#L113. Instead of relying on pythonisations for specific classes, this PR adds the necessary logic to have this functionality solved in a generic way in the bindings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640:199,redundant,redundant,199,https://root.cern,https://github.com/root-project/root/pull/3640,1,['redundant'],['redundant']
Availability,Possible fix to error and warning when using ROOT in pytest tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/3595,1,['error'],['error']
Availability,Prevent Access of deleted object during hadd tear down,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021:50,down,down,50,https://root.cern,https://github.com/root-project/root/pull/9021,1,['down'],['down']
Availability,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021:595,down,down,595,https://root.cern,https://github.com/root-project/root/pull/9021,3,['down'],['down']
Availability,"Prevent numpy from being imported every time the pythonizor function is registered, and instead do it lazily and with an error check if the pythonized method is actually invoked.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5096:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/5096,1,['error'],['error']
Availability,"Prevent running xml tests when xml is disabled, suppressing the following test failures:; ```; TEST FAILURES:; 971:tutorial-xml-DOMParsePerson; 972:tutorial-xml-DOMRecursive; 973:tutorial-xml-SAXHandler; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13742:79,failure,failures,79,https://root.cern,https://github.com/root-project/root/pull/13742,2,"['FAILURE', 'failure']","['FAILURES', 'failures']"
Availability,"Prevent the following error when running the test with VS 2022 v17.9.0:; ```; 779: Processing C:/root-dev/git/master/tutorials/multicore/mt201_parallelHistoFill.C...; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { ?_Swap@?$_Ptr_base@VTH1F@@@std@@IEAAXAEAV12@@Z,; [...]; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-9 }) }; 779: cling JIT session error: Failed to materialize symbols: { (main, { ?mt201_parallelHistoFill@@YAHXZ }) }; 779: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 779: error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14783:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/14783,4,"['Error', 'error']","['Error', 'error']"
Availability,Prevent this kind of error when using ACLiC:; LINK : fatal error LNK1181: it is not possible to open input file 'VCRUNTIME140.lib',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4439:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/4439,2,['error'],['error']
Availability,"Prevent wild over-read when reading badly clustered file.; ; In some cases where the memory available to the TTreeCache can not fit the entirety; of (potentially odd-shaped) cluster, the TTreeCache could end up with a situation; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:92,avail,available,92,https://root.cern,https://github.com/root-project/root/pull/1778,1,['avail'],['available']
Availability,Prevents failures induced by #16338 for python3.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16548:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/16548,1,['failure'],['failures']
Availability,"Previously all the dataset information was stored in the thread-local; TTreeViews, causing data duplication between threads and requiring; that TTreeProcessorMT queries it when it needs part of it.; Now TTreeProcessorMT stores all the dataset information (tree name,; filenames, friend names, friend file names, entry list) as constant; thread-global data which is passed down to TTreeView::GetTreeReader.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2157:372,down,down,372,https://root.cern,https://github.com/root-project/root/pull/2157,1,['down'],['down']
Availability,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705:105,error,error,105,https://root.cern,https://github.com/root-project/root/pull/7705,2,['error'],['error']
Availability,"Previously the checks that the type of the readerValue and the leaf (part of a leaflist) was susceptible to the; 'difference' between '[U]Long64_t' and '[unsigned] long long'. The previous check did not account for TDictionary::GetDictionary returning 'typedef' information. So instead rely on the numerical/enum version of the type. This addresses https://root-forum.cern.ch/t/issues-with-automatically-constructed-makeselector/37033; and https://root-forum.cern.ch/t/how-to-read-unsigned-long-using-ttreereader/21850. *Br 0 :SelectOpHitBkgInfo : deltat0/D:deltat/D:t0/D:te/D:tabs/D:PEs/D: *; * | event/l:run/l:subRun/l:chan/l:bar/l. TTreeReaderValue<ULong64_t> event = {fReader, ""SelectOpHitBkgInfo.event""};. was leading to. Error in <TTreeReaderValueBase::CreateProxy()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4670:727,Error,Error,727,https://root.cern,https://github.com/root-project/root/pull/4670,1,['Error'],['Error']
Availability,Previously the handling was inconsistent resulting in mis-matches; and thus memory errors. This fixes ROOT-10526.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4841:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/4841,1,['error'],['errors']
Availability,"Previously, [system] was used to mark modules which were supporsed be implicitly built by rootcling for runtime modules. This was a workaround, and it was causing SourceLocation error in cxxmodules as it is also using the same modulemap.; ; To remove the workaround, we are introducing a new convention that modules start with ROOT_ is treated as ""ROOT system modules"", which can be build implicitly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2684:178,error,error,178,https://root.cern,https://github.com/root-project/root/pull/2684,1,['error'],['error']
Availability,"Previously, it tried to use the clear method which does not exist. Corresponding unit tests are available on this branch:. https://github.com/bbockelm/roottest/tree/makeproject_bitset. @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61:96,avail,available,96,https://root.cern,https://github.com/root-project/root/pull/61,1,['avail'],['available']
Availability,"Primary changes proposed; - avoiding char to TString to char conversions; - avoid redundant call to xmlEngine().hasattr(node,att) checking instead for null ptr from getattr.; - Add specialization of void TMVA::Tools::ReadAttr( void* node, const char* attrname, T& value ) for float,int, short. [which seem to be the ones we use aside from bool, which now is the biggest contributor to ReadAttr* timing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/584:82,redundant,redundant,82,https://root.cern,https://github.com/root-project/root/pull/584,1,['redundant'],['redundant']
Availability,"Print info before inserting a value in the vector (therefore invalidating the iterator). This fixes a debug assertion failure ""can't dereference invalidated vector iterator"", as explained [in the standard](https://en.cppreference.com/w/cpp/container/vector/insert):; > Causes reallocation if the new size() is greater than the old capacity(). If the new size() is greater than capacity(), all iterators and references are invalidated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13328:118,failure,failure,118,https://root.cern,https://github.com/root-project/root/pull/13328,1,['failure'],['failure']
Availability,Print instructive error message if builtin_llvm=off,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1509:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/1509,1,['error'],['error']
Availability,"Prior to this change, TProcessID::RecursiveRemove would call TExMap::Remove without checking whether the object was in that map or not. In addition TExMap::Remove complains if it can not be found.; This resulted in spurious error message when the number of TProcessID increased passed 255 but some of the object with lower index TProcessID were deleted. See https://root-forum.cern.ch/t/resetting-tprocessid-objectcount-in-multihtreading-environment/38899; for a concrete example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5446:224,error,error,224,https://root.cern,https://github.com/root-project/root/pull/5446,1,['error'],['error']
Availability,"Probably due to historical reasons, the Minuit2 code uses several systems to report errors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:84,error,errors,84,https://root.cern,https://github.com/root-project/root/issues/6421,2,['error'],['errors']
Availability,Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3746:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/3746,1,['error'],['error']
Availability,"Proposal to add a `requirements.txt` file and a corresponding test checking the dependencies also by the version requirement. The test throws an error for each dependency seperately due to the `SubTest`. A single exception looks like this:. ```; 3: pkg_resources.VersionConflict: (xgboost 0.80 (/home/stefan/.local/lib/python3.8/site-packages), Requirement.parse('xgboost>=0.81')); ```. @eguiraud @Axel-Naumann @etejedor @oshadura Ping :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408:145,error,error,145,https://root.cern,https://github.com/root-project/root/pull/5408,2,"['Ping', 'error']","['Ping', 'error']"
Availability,"Provide assign operator for the point_t class which have copy constructor; Fixes compilation error when trying to compile with cxxmodules=ON,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5812:93,error,error,93,https://root.cern,https://github.com/root-project/root/pull/5812,1,['error'],['error']
Availability,Provide helper function `PyRunString` in class `PyMethodBase` to call python code from string in local namespace with appropriate error handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/278:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/278,1,['error'],['error']
Availability,"Proxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:2486,error,error,2486,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,Python 3.11 failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/issues/10799,1,['failure'],['failures']
Availability,"RANLUX++ is an LCG equivalent of RANLUX using 576 bit numbers. Described in; A. Sibidanov, *A revision of the subtract-with-borrow random numbergenerators*,; *Computer Physics Communications*, 221(2017), 299-303,; preprint https://arxiv.org/pdf/1705.03123.pdf. The code is loosely based on the Assembly implementation by A. Sibidanov; available at https://github.com/sibidanov/ranluxpp/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6794:335,avail,available,335,https://root.cern,https://github.com/root-project/root/pull/6794,1,['avail'],['available']
Availability,"RDF is crashing when asking for type of aliased columns.; Here is a small reproducer:; ```; root [0] // We create an empty data frame of 100 entries; root [1] ROOT::RDataFrame df(100);; root [2] gRandom->SetSeed(1);; root [3] auto df_1 = df.Define(""rnd"", []() { return gRandom->Gaus(); });; root [4] auto df_2=df_1.Alias(""rnd2"", ""rnd""); (ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void> &) @0x7faf7b7c2098; root [5] std::cout<<df_2.GetColumnType(""rnd"")<<std::endl;; double; root [6] std::cout<<df_2.GetColumnType(""rnd2"")<<std::endl;; Error in <TRint::HandleTermInput()>: std::out_of_range caught: map::at; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7058:546,Error,Error,546,https://root.cern,https://github.com/root-project/root/issues/7058,1,['Error'],['Error']
Availability,"RDFHelpers.hxx provides ROOT::RDF::RunGraphs(std::vector<RResultHandle>).; In order for the handy implicit conversion from RResultPtr<T> to; RResultHandle to be available for client code that include; RDFHelpers.hxx, it is not enough that this header forward-declares; RResultHandle, but it needs to transitively provide the whole type; declaration. In practice, before 8bbd543f3d56, this worked fine:. ```; ...; RunGraphs({resultptr1, resultptr2});; ```. while after that commit it would require an extra `#include; <ROOT/RResultHandle.hxx>`. This patch restores the previous situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11248:161,avail,available,161,https://root.cern,https://github.com/root-project/root/pull/11248,1,['avail'],['available']
Availability,RDataFrame and CreatePoxy/TTreeReaderValue error for selection on string branch in Filter method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:43,error,error,43,https://root.cern,https://github.com/root-project/root/issues/7169,1,['error'],['error']
Availability,RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11051:41,error,error,41,https://root.cern,https://github.com/root-project/root/issues/11051,1,['error'],['error']
Availability,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8901:70,error,error,70,https://root.cern,https://github.com/root-project/root/issues/8901,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"RNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2084,avail,available,2084,https://root.cern,https://github.com/root-project/root/issues/6421,1,['avail'],['available']
Availability,"RNTuple, parallel unzip tear down race condition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:29,down,down,29,https://root.cern,https://github.com/root-project/root/issues/7076,1,['down'],['down']
Availability,"RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2c in __libc_start_main_impl () from /lib/libc.so.6; #26 0x56560e0b in _start (); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:12304,Error,Error,12304,https://root.cern,https://github.com/root-project/root/issues/12427,2,"['Error', 'error']","['Error', 'error']"
Availability,"ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```; void test_crash(){; using namespace RooFit;; Int_t to_gen = 10;; RooRealVar m(""m"",""m"",5000,5500);; RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);; RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);; RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);; exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));; }; ```. Here I fit to a dataset of 10 events and it causes the following . ```; ...; NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY; **********; ** 6 **MIGRAD 500 1; **********; FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; std::length_error what(): '; what(): what(): vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'; '; what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert; terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '; what(): what(): vector::_M_fill_insert; vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9406:855,RELIAB,RELIABILITY,855,https://root.cern,https://github.com/root-project/root/issues/9406,1,['RELIAB'],['RELIABILITY']
Availability,ROOT 6.28.00 fails on aarch64: cling JIT session error: Failed to materialize symbols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12294:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/12294,1,['error'],['error']
Availability,ROOT Version: v6-22-02; Platform: CentOS 7; Compiler: gcc 8.3 c++17. ```; [ 80%] Built target GenVector; In file included from input_line_16:3:; /home/annie/Documents/root-6.22.02/build/include/ROOT/RAxis.hxx:57:4: error: exception specification of explicitly defaulted default constructor does not match the calculated one; RAxisBase() noexcept = default;; ^; Error: /home/annie/Documents/root-6.22.02/build/bin/rootcling: compilation failure (/home/annie/Documents/root-6.22.02/build/lib/libROOTHist93b0963531_dictUmbrella.h); make[2]: *** [hist/histv7/CMakeFiles/G__ROOTHist.dir/build.make:108: hist/histv7/G__ROOTHist.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:22334: hist/histv7/CMakeFiles/G__ROOTHist.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6731:215,error,error,215,https://root.cern,https://github.com/root-project/root/issues/6731,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"ROOT batch mode is now automatically web batch mode. Means no web browser starting, no web server running. There is the only exception - when on Linux `DISPLAY` variable not set, ROOT will set batch mode (`fBatchMode = kTRUE`); but `fWebDisplayBatch = kFALSE`. In this case all web widgets remain fully normal and will start interactive. Any call to `gROOT->SetBatch(kTRUE)` also disables interactivity for web widgets. All web widgets (RBrowser, TWebCanvas, RWebWindow in general) will not start browser when `gROOT->IsWebDisplayBatch()` is true. Should fix problems with running many graphics-related tutorials. Small fix in TGX11. ; While TRint.cxx directly calls `gVirtualX->SetKeyAutoRepeat(kTRUE)`, prevent crashing; when display is not available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11836:743,avail,available,743,https://root.cern,https://github.com/root-project/root/pull/11836,1,['avail'],['available']
Availability,"ROOT build fails with `-Ddev=ON` cmake flag, where all warnings are converted to errors. ```; /home/linev/git/root6/tree/ntuple/v7/src/RMiniFile.cxx:199:20: error: comparison of integer expressions of different signedness: ‘uint64_t’ {aka ‘long unsigned int’} and ‘int’ [-Werror=sign-compare]; ```. These warnings are since a long time in ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5419:81,error,errors,81,https://root.cern,https://github.com/root-project/root/pull/5419,2,['error'],"['error', 'errors']"
Availability,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. 1. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. 2. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup. This PR depends on #1394",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396:738,avail,available,738,https://root.cern,https://github.com/root-project/root/pull/1396,1,['avail'],['available']
Availability,ROOT crashes with no helpful error messages if a TApplication is not present and tree->StartViewer() is called,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:29,error,error,29,https://root.cern,https://github.com/root-project/root/issues/6743,1,['error'],['error']
Availability,"ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:152,error,error,152,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,ROOT failed to build with error MSB8066 with MSVC on Windows arm64ec and how to disable run clang-tblgen.exe and llvm-tblgen.exe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"ROOT failed to build with error MSB8066 with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? I think these errors are due to the clang-tblgen.exe and llvm-tblgen.exe being ran. How to disable run these two exes. Thanks in advance. Versions and configuration; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.20). **Repro steps:**; 1. Open a VS 2019 x64 Native Tools Command Prompt; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone hhttps://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec_a && cd build_arm64ec_a; 6. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:26,error,error,26,https://root.cern,https://github.com/root-project/root/issues/11881,2,['error'],"['error', 'errors']"
Availability,"ROOT has several features which interact with libraries and require implicit header inclusion. This can be triggered by reading or writing data on disk, or user actions at the prompt. Often, the headers are immutable and reparsing is redundant. C++ Modules are designed to minimize the reparsing of the same header content by providing an efficient on-disk representation of C++ Code. More information about the C++ modules technology can be found at README/README.CXXMODULES.md. This undertaking was successful due to the efforts of many people. Especially, Raphael Isemann (@Teemperor), Oksana Shadura(@oshadura) and Yuka Takahashi (@yamaguchi1024). We are grateful to Liz Sexton-Kennedy, Peter Elmer (@pelmer), Brian Bockelman(@bbockelm) and Ken Bloom for putting (wo)manpower into the project and supporting it. This work has been supported by an Intel Parallel Computing Center grant, by U.S.National Science Foundation grants PHY-1450377, ACI-1450323 and PHY-1624356, and by the U.S. Department of Energy, Office of Science. Special thanks to Axel Naumann (@Axel-Naumann) and Philippe Canal (@pcanal) for helping and supporting the technical efforts over the years. We are thankful to Shahzad Malik Muzaffar (@smuzaffar), David Lange (@davidlange6) and Mircho Rodozov (@mrodozov) from the CMSSW development team, CERN/EP-SFT and the ROOT team.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395:234,redundant,redundant,234,https://root.cern,https://github.com/root-project/root/pull/4395,1,['redundant'],['redundant']
Availability,ROOT won't compile because of changes in the Python 3 API together with; GCC 6.1 release. The code changes fixes the issues on my machine running; Arch Linux (except for an error in Python 3.5 numpy/__multiarray_api.h),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/173:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/173,1,['error'],['error']
Availability,"ROOT-HEAD fails with ""cling interactive line includer >>>: fatal error: module file '[snip]/Vc.pcm' not found: module file not found""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:65,error,error,65,https://root.cern,https://github.com/root-project/root/issues/14964,1,['error'],['error']
Availability,ROOT-HEAD fails with error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15087:21,error,error,21,https://root.cern,https://github.com/root-project/root/issues/15087,1,['error'],['error']
Availability,ROOT.TFile:: corrupt data content (TTree) not signaled/no error thrown,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154:58,error,error,58,https://root.cern,https://github.com/root-project/root/issues/9154,1,['error'],['error']
Availability,"ROOT::R::Label is a synonym of Rcpp::_. We should just bind to it, instead of; introducing a new variable causing redundant deserialization from the C++ module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4409:114,redundant,redundant,114,https://root.cern,https://github.com/root-project/root/pull/4409,1,['redundant'],['redundant']
Availability,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2634,error,error,2634,https://root.cern,https://github.com/root-project/root/pull/11153,4,['error'],['error']
Availability,"ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received.; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing.; -------------------------; Pre-registered messages:; kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'; kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'; kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'; kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'; Unexpected messages received:; kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'; -------------------------; ```. ## After; ```; ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:; severity: kError; received: 0 times (required, fullMatch)	; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure; Failed; ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:; severity: kError; origin: ""TFormula::InputFormulaIntoCling""; message: Error compiling formula expression in Cling; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/12469,11,"['Error', 'Failure', 'error', 'failure']","['Error', 'Failure', 'error', 'failure']"
Availability,ROOT_HEAD failed with error message: Fail to detect cryptographic random generator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:22,error,error,22,https://root.cern,https://github.com/root-project/root/issues/14958,1,['error'],['error']
Availability,"RSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; ```. LXPLUS7:; ```; ROOT Version: 6.24/08; Built for linuxx8664gcc on Sep 29 2022, 13:04:57; From tags/v6-24-08@v6-24-08; ```. LXPLUS8:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. LXPLUS9:; ```; ROOT Version: 6.26/10; Built for linuxx8664gcc on Nov 16 2022, 10:42:54; From tags/v6-26-10@v6-26-10; ```. <!--; 1. ROOT version; 2. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:3201,down,download,3201,https://root.cern,https://github.com/root-project/root/issues/11977,1,['down'],['download']
Availability,"RScanner iterates over all decls in our AST, but with modules we; have hidden decl from unimported submodules in our AST. As we; call Sema functions on these decls which use the normal clang; lookup that respects visibility, we suddenly get mysterious; lookup failures from inside Sema when running rootcling. This patch restricts RScanner to looking at visible decls, which; restores the original behavior where RScanner onlys sees visible decls; from included headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/915:260,failure,failures,260,https://root.cern,https://github.com/root-project/root/pull/915,1,['failure'],['failures']
Availability,"RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. The master branch seems to go past this point, so probably something needs to be backported (I tested with the tip of the 6.24 branch).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:1543,error,error,1543,https://root.cern,https://github.com/root-project/root/issues/8281,4,"['Error', 'error']","['Error', 'error']"
Availability,"RTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:85:8: error: unknown type name 'size_t'; size_t fLength{0};; ^; /home/root-build/include/ROOT/RStringView.hxx:88:47: error: unknown type name 'size_t'; explicit TStringView(const char *cstr, size_t len) : fData(cstr), fLength(len) {}; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/TClassEdit.h:29:10: note: submodule of top-level module 'std' implicitly imported here; #include <cxxabi.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:10263,error,error,10263,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"RWebWindow uses credit-based data transport. ; Default number of credits was always 10 and can be too small.; Now this default value can be changed via ""WebGui.ConnCredits"" variable. In WebEve checks amount of available credits to suppress highlight operations - main source of small packets send to server.; Let avoid situation when such small packets over-flood communication channel. Latest JSROOT code with better organization how TCanvas and TFrame painters provided when required.; Previous implementation was not adequate, while cannot take into account that object may be drawn on TCanvas or on RCanvas. Now it clearly stated in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6920:210,avail,available,210,https://root.cern,https://github.com/root-project/root/pull/6920,1,['avail'],['available']
Availability,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3904:59,error,error,59,https://root.cern,https://github.com/root-project/root/pull/3904,1,['error'],['error']
Availability,Re-download all Clad patches from GitHub,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12892:3,down,download,3,https://root.cern,https://github.com/root-project/root/pull/12892,1,['down'],['download']
Availability,Re-opening [this PR](https://github.com/root-project/root/pull/15578) to check if the clad failures were real.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15588:91,failure,failures,91,https://root.cern,https://github.com/root-project/root/pull/15588,1,['failure'],['failures']
Availability,"Reading `RVecs` with `RNTuple` incurs in an off-by-one-byte error, because all `RVec<T>` are deserialized as `std::vector<char>`, but the position of the data buffer is different for `RVecs`:. ```; >>> p ((ROOT::VecOps::RVec<int>*)0x5555596c72a0)->data(); $983 = (int *) 0x5555581b2918; >>> p ((std::vector<char, std::allocator<char> > *)0x5555596c72a0)->data(); $984 = 0x5555581b2910; ```. I think the problematic logic is [here](https://github.com/root-project/root/blob/8d5b55f51ad8449d83fc0db8f49217e556c34036/tree/ntuple/v7/src/RField.cxx#L660). A second issue related to RVecs is that at RField.cxx:638 we use RVectorField for reading RVecs, but this means that the parent RField will have type name `std::vector<...>` even if it should (probably?) be `RVec<...>`. #6336 contains a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/6347,1,['error'],['error']
Availability,"Rebase PR #1396. Original PR comment:; ""ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697:772,avail,available,772,https://root.cern,https://github.com/root-project/root/pull/1697,1,['avail'],['available']
Availability,"Recent llvm versions use llvm::Error as a facility for error handling. It includes an ErrorInfoBase class which has virtual methods (with a pinned vtable in the object file). This makes it harder to include headers that use transitively include llvm/Support/Error.h crossing rtti/no-rtti worlds (that is llvm is compiled with -fno-rtti and TCling and friends with -frtti). Newer llvm versions have a lot of usage of llvm::Error in its header files and it is practically impossible to solve this problem by avoiding the headers that use ErrorInfoBase. There are two other alternatives. First we can outline the functions in Error.h which use ErrorInfoBase but then we will hit other things like RTTIRoot which also needs special treatment. Secondly, we can enable llvm's RTTI builds for ROOT and this is what this patch does.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10289:31,Error,Error,31,https://root.cern,https://github.com/root-project/root/pull/10289,8,"['Error', 'error']","['Error', 'ErrorInfoBase', 'error']"
Availability,"Recently, I am seeing test failures in local builds depending on the build directory, or rather the length of its name / path. I bisected this to commit https://github.com/root-project/root/commit/46ba2eefd00371b024ae239626c7600cd3259885 (""Enable a few modules for Windows"") which introduced a check to filter dependencies without cxxmodule. There are (at least) two problems with this check: First, we add the `cpp_module` which is equal to the `library_target_name` and not the pcm file name. This results in currently no module dependencies being passed to `rootcling` at all because the condition is never true!. This could be fixed by checking `dep IN_LIST local_modules_idx_deps`. However, that still doesn't work because `local_modules_idx_deps` does not contain all modules from the start but is constructed on-the-fly. This is particularly a problem for `libCore` whose dictionary is only created after the other libraries located below `core/` are processed, for example `Imt`. The problem is that `libImt` depends on `Core`, but at the time `ROOT_GENERATE_DICTIONARY` is called for `Imt`, it doesn't know yet about the dictionary of `Core`. Finally, I'm not sure if completely omitting the dependency for a target with `NO_CXXMODULE` in case of `runtime_cxxmodules` is correct. Based on the code around, I would expect to fall back to `*_rdict.pcm` in that case. Note: This change will probably break the (partial) support for modules on Windows, but for the the reasons spelled out above, I don't see an easy fix given the current situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/12561,1,['failure'],['failures']
Availability,Reduce precision errors for Mean and StdDev #7395,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9546:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/9546,1,['error'],['errors']
Availability,Refactored modulemaps to fix ODR errors when using modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/876,1,['error'],['errors']
Availability,"Registrering the thread-local gDirectory with the gROOT (which is special TDirectory) allows to keep the; shared_pointer alive until gROOT is destructed. Technically we would only need to keep around the one associated with the main thread. Thread local; storage (and hence the original shared_ptr for the thread local gDirectory) is destructed; (even for the thread local associated with the main thread) before the static storage is destructed.; So prior to this commit, the main thread's gDirectory shared pointer was destructed before; the start of the TROOT destructor and then TDirectory::CleanTargets when using explicitly; 'gDirectory' was reading deleted memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12090:121,alive,alive,121,https://root.cern,https://github.com/root-project/root/pull/12090,1,['alive'],['alive']
Availability,"Remaining printouts cannot easily be tested/checked, see also [this discussion](https://github.com/root-project/root/pull/5591#issuecomment-641453675). #### dataframe_simple. * `RLoopManager::Run prints to stderr rather than using Warning/Error, because it does so from a catch clause, and Warning/Error could be made throw exceptions by experiments frameworks, and we don't want to `std::terminate`. There is no `ROOT_EXPECT_*` macro for stderr printouts that do not come from `Warning`, `Error` or `Info`. #### datasource_sqlite. A constructor that warns is invoked by a factory function. Obviously, switching from. ```c++; auto rdf = MakeSqliteDataFrame(fileName0, query0);; ```; to . ```c++; ROOT_EXPECT_WARNING(auto rdf = MakeSqliteDataFrame(fileName0, query0), ..., ...);; ```; makes it impossible to use `rdf` after this line. To make things worse, `rdf` is not default-constructible, so I cannot do. ```c++; RDFType rdf;; ROOT_EXPECT_WARNING(rdf = MakeSqliteDataFrame(....), ...., ...);; ```. ...so I don't know how to catch that warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845:239,Error,Error,239,https://root.cern,https://github.com/root-project/root/pull/5845,3,['Error'],['Error']
Availability,"Remove ""l"" from ""ar clq"" command while there is no extra library; linked to libAfterImage.a. ; Fixing build error on latest OpenSUSE.; Most probably caused by latest `ar`:; ```; % ar --version; GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1; Copyright (C) 2021 Free Software Foundation, Inc.; This program is free software; you may redistribute it under the terms of; the GNU General Public License version 3 or (at your option) any later version.; This program has absolutely no warranty.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7346:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/7346,1,['error'],['error']
Availability,Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of; web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8586:92,ping,ping,92,https://root.cern,https://github.com/root-project/root/pull/8586,1,['ping'],['ping']
Availability,"Remove `#include <cassert>` from `TGeoExtension.h` and move it to the `TGeoExtension.cxx` source file, fixing a potential crash of JupyROOT when running on a machine with a different version of the Windows SDK than the one used to build ROOT, as described in the Github issue #14302 and as shown below. The issue comes from this code in `JupyROOT\helpers\utils.py`:; ```; def GetGeometryDrawer():; if not hasattr(ROOT,'gGeoManager'): return; if not ROOT.gGeoManager: return; if not ROOT.gGeoManager.GetUserPaintVolume(): return; vol = ROOT.gGeoManager.GetTopVolume(); if vol:; return NotebookDrawer(vol); ```; triggering the autoloading of libGeom, leading to this error:; ```; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:260:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:665,error,error,665,https://root.cern,https://github.com/root-project/root/pull/14335,2,['error'],['error']
Availability,Remove a .gitignore file in minuit2 which can cause the remaining of duplicate files in local repo after having build a standalone minuit2 tarball. The file was used to mask files which are copied inside the minuit2 source directory when building the standalone distribution. ; These files should be deleted after building the standalone distribution by a `make purge` command. . Update the documentation of building minui2 tarballs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5417:169,mask,mask,169,https://root.cern,https://github.com/root-project/root/pull/5417,1,['mask'],['mask']
Availability,Remove all redundant header guards around #include directives,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/341:11,redundant,redundant,11,https://root.cern,https://github.com/root-project/root/pull/341,1,['redundant'],['redundant']
Availability,Remove extra redundant tensorboard Option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5936:13,redundant,redundant,13,https://root.cern,https://github.com/root-project/root/pull/5936,1,['redundant'],['redundant']
Availability,Remove extra single quote in error message to avoid confusion what the actual class name is.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10099:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/10099,1,['error'],['error']
Availability,Remove redundant RooCintUtils.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1720:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/1720,1,['redundant'],['redundant']
Availability,Remove redundant checks in TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/361:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/361,1,['redundant'],['redundant']
Availability,Remove redundant includes from http/webgui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5045:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/5045,1,['redundant'],['redundant']
Availability,Remove redundant null pointer check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/249,1,['redundant'],['redundant']
Availability,Remove redundant null pointer checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/260:7,redundant,redundant,7,https://root.cern,https://github.com/root-project/root/pull/260,1,['redundant'],['redundant']
Availability,"Remove some headers from `std_darwin.modulemap` and backport https://github.com/llvm/llvm-project/commit/09ec0004eee2d9929d25cf519956cc470ffb33dd to fix the build of `std.pcm`. ---. This fixes the build but still has five failing tests:; ```; The following tests FAILED:; 206 - gtest-math-mathcore-test-CladDerivatorTests (Failed); 232 - gtest-roofit-histfactory-test-testHistFactory (Failed); 235 - gtest-roofit-hs3-test-testRooFitHS3 (Failed); 267 - gtest-roofit-roofitcore-test-testRooFuncWrapper (Failed); 1729 - roottest-root-io-compression-make (Failed); ```. There seem to be at least two problems: an `UNREACHABLE executed`; ```; builtin functions are handled elsewhere; UNREACHABLE executed at /Users/sftnight/jonas/root.src/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:2036!; ```. and Clad not being able to differentiate `__builtin_pow`:; ```; [ RUN ] CladDerivator.power; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:162:55: warning: Unsupported declaration; using __result_type = typename __promote<_A1, _A2>::type;; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__math/exponential_functions.h:153:10: warning: function '__builtin_pow' was not differentiated because clad failed to d; ifferentiate it and no suitable overload was found in namespace 'custom_derivatives', and function may not be eligible for numerical differentiation.; return __builtin_pow(__x, __y);; ^; /Users/sftnight/jonas/root.src/math/mathcore/test/CladDerivatorTests.cxx:43: Failure; Expected equality of these values:; 48; value->GetAsDouble(); Which is: 0; [ FAILED ] CladDerivator.power (6 ms); ```. I'm still investigating, starting with the first.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15900:1617,Failure,Failure,1617,https://root.cern,https://github.com/root-project/root/pull/15900,1,['Failure'],['Failure']
Availability,Remove sysroot arg when writing modules to fix assertion failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/519:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/pull/519,1,['failure'],['failure']
Availability,Remove the redundant dependencies from the target. This fixes a cxxmodules; nightly builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1741:11,redundant,redundant,11,https://root.cern,https://github.com/root-project/root/pull/1741,1,['redundant'],['redundant']
Availability,"Remove the work-around for the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug, which is now fixed in more recent versions of Visual Studio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4474:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/4474,1,['error'],['error']
Availability,Remove usage of deprecated GC macro to prevent build failure in Python3.7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3333:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/3333,1,['failure'],['failure']
Availability,Remove work around for a compiler error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4474:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/4474,1,['error'],['error']
Availability,Remove wrong and redundant null pointer check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/248:17,redundant,redundant,17,https://root.cern,https://github.com/root-project/root/pull/248,1,['redundant'],['redundant']
Availability,RemovePoint did not remove the errors in TGraph2DErrors.; This was reported here: https://sft.its.cern.ch/jira/browse/ROOT-10695,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5461:31,error,errors,31,https://root.cern,https://github.com/root-project/root/pull/5461,1,['error'],['errors']
Availability,Removed redundant -fmodule-map-file= compilation flag.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/551:8,redundant,redundant,8,https://root.cern,https://github.com/root-project/root/pull/551,1,['redundant'],['redundant']
Availability,"Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11772:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/11772,1,['error'],['error']
Availability,"Renormalize fitted parameters error when using the option ""W"" in TH1::Fit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5114:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/5114,1,['error'],['error']
Availability,"Renormalize the fitted errors in case the histogram has no error (i.e. when using the fit option ""W""); In this case the parameter errors are corrected using the obtained chi2 value. error = error* sqrt( chi2/(ndf-1). - Add in the documentation also option ""MULTI"" (Multinomial likelihood fit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5114:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/5114,5,['error'],"['error', 'errors']"
Availability,Replace direct floating point comparison with `AreEqualRel()` comparison with a tolerance.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/505:80,toler,tolerance,80,https://root.cern,https://github.com/root-project/root/pull/505,1,['toler'],['tolerance']
Availability,"Replace the RooLinkedList in the central collections of RooFit (RooArgSet, RooArgList, RooRefCountList) with a std::vector. This speeds up the tutorials of RooFit/RooStats by 10 to 20 %.; The interface with respect to iterators and size() now resembles an STL container. When iterating on the updated collections, only begin(), end() and range-based for loops should be used. The legacy RooFit iterators are still supported, but should not be used, since they are slower. They were flagged with the R__SUGGEST_ALTERNATIVE macro. This PR is identical to #3345, but more improvements were added on top of the branch used there. This is to test if the test failures on centos7 persist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3380:654,failure,failures,654,https://root.cern,https://github.com/root-project/root/pull/3380,1,['failure'],['failures']
Availability,Report failure for missing symbols!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1868:7,failure,failure,7,https://root.cern,https://github.com/root-project/root/pull/1868,1,['failure'],['failure']
Availability,"Reported by ALICE:. ```; G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}; ^; G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8499:97,error,error,97,https://root.cern,https://github.com/root-project/root/issues/8499,2,['error'],['error']
Availability,Reported here:. https://root-forum.cern.ch/t/gdml-import-error-due-to-comment-at-end-of-file/27671. Can be also applied for 6.12 and 6.10 branches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1548:57,error,error-due-to-comment-at-end-of-file,57,https://root.cern,https://github.com/root-project/root/pull/1548,1,['error'],['error-due-to-comment-at-end-of-file']
Availability,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7162:355,Error,Error,355,https://root.cern,https://github.com/root-project/root/issues/7162,2,"['Error', 'error']","['Error', 'error']"
Availability,"Reproducer:. ```; python; >>> import ROOT; >>> ROOT.RooFit.Minos(1).getSet(0).Print(""v""); 1) 0x6535abd27b70 RooConstVar:: 1 = 1 ""1""; ```. Should be like in C++:; ```c++; root [1] RooFit::Minos(1).getSet(0); (const RooArgSet *) nullptr; ```. The function has overloads like this:; ```; RooCmdArg Minos(bool);; RooCmdArg Minos(RooArgSet const&);; ```; The RooArgSet has a constructor `RooArgSet(double)` which is accidentally taken by PyROOT here, even though the call to `Minos(bool)` would be correct. This caused some bad experience for users who tried to enable Minos for all parameters with `Minos(1)`, resulting in nothing happening (Minos was only attempted for this constant ""1"" parameter, which of course does nothing). Not a high priority in this case because the workaround is easy: `Minos(True)`. But it's very possible that users are also bitten in other cases by this faulty overload resolution, so we need to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16573:880,fault,faulty,880,https://root.cern,https://github.com/root-project/root/issues/16573,1,['fault'],['faulty']
Availability,"Reproducer:. ```; root [0] auto x = std::make_pair(42, 84);; root [1] auto *xp = &x;; root [2] TTree t(""t"", ""t""); (TTree &) Name: t Title: t; root [3] t.Branch(""x"", &xp); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; root [4] t.Branch(""x"", &x); Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. Note the ""Execution of your code was aborted"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11215:171,Error,Error,171,https://root.cern,https://github.com/root-project/root/issues/11215,2,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <Math/Vector3D.h>; #include <ROOT/RDataFrame.hxx>; #include <vector>; #include <TClass.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ROOT::Math::XYZVector x(1, 2, 3);; std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};; t.Branch(""x"", &x);; // original line:; // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem!; // Actual trigger:; auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem!; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");; r.Next();; *rx;; }; ```; yields:. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>; Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()?; ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10423:695,Error,Error,695,https://root.cern,https://github.com/root-project/root/issues/10423,2,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11173:334,Error,Error,334,https://root.cern,https://github.com/root-project/root/issues/11173,1,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; ROOT::RDataFrame(10); .Define(""x"", [] { return 42; }); .Snapshot<int>(""t"", ""thefile"", {""x""});; std::cout << ""done writing\n"";. ROOT::EnableImplicitMT();; ROOT::RDataFrame(""t"", ""thefile"").Max<int>(""x"").GetValue();. return 0;; }. ```. prints. ```; done writing; Error in <TFile::TFile>: file /tmp/thefile/t does not exist; Warning in <TTreeReader::SetEntryBase()>: There was an issue opening the last file associated to the TChain being processed.; ```. This is likely due to logic in `TChain::AddFile` that expects a `.root` extension to be present in order to distinguish `/path/to/file.root/treename` from just `/path/to/file.root` (over the network or via xrootd it's difficult/expensive to figure out which case we are in otherwise). ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/getting-value-from-tbranch-is-extremely-slow/45950",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8739:348,Error,Error,348,https://root.cern,https://github.com/root-project/root/issues/8739,1,['Error'],['Error']
Availability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";; ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);; auto *td = f->Get<TTree>(""testd/testt"");; auto rdftd = ROOT::RDataFrame(*td);; auto htd = rdftd.Histo1D<ULong64_t>(""e"");; std::cout << htd->GetMean() << '\n';; }; ```; yields:. ```; terminate called after throwing an instance of 'std::runtime_error'; what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root""; ```; i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10216:600,error,error,600,https://root.cern,https://github.com/root-project/root/issues/10216,1,['error'],['error']
Availability,"Reproducer:. ```cpp; #include <TFile.h>; #include <TTreeReader.h>. int main() {; {; TFile f(""f16.root"", ""recreate"");; TTree t(""t"", ""t"");; float x = 42.f;; t.Branch(""x"", &x, ""x/f"");; t.Fill();; f.Write();; }. {; TFile f(""f16.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<Float16_t> rv(r, ""x"");; r.Next();; }; }; ```. produces. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10645:336,Error,Error,336,https://root.cern,https://github.com/root-project/root/issues/10645,1,['Error'],['Error']
Availability,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14022:88,error,error,88,https://root.cern,https://github.com/root-project/root/pull/14022,1,['error'],['error']
Availability,Resolve error: call to virtual function in destructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4275:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/4275,1,['error'],['error']
Availability,"Resolves root-project/cling#399; Fix the following linker errors:; ```; 253>cling.exp : error LNK2001: unresolved external symbol ""public: static class std::basic_string<char,struct std::char_traits,class std::allocator > __cdecl clang::QualType::getAsString(class clang::Type const *,class clang::Qualifiers)"" (?getAsString@QualType@clang@@sa?AV?$basic_string@DU?$char_traits@D@std@@v?$allocator@D@2@@std@@PEBVType@2@VQualifiers@2@@z); 253>cling.exp : error LNK2001: unresolved external symbol ""private: virtual void __cdecl llvm::raw_ostream::handle(void)"" (?handle@raw_ostream@llvm@@EEAAXXZ); 253>D:\work\libs\cling\src\build\Release\bin\cling.exe : fatal error LNK1120: 2 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7645:58,error,errors,58,https://root.cern,https://github.com/root-project/root/pull/7645,4,['error'],"['error', 'errors']"
Availability,"Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake.; Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:; It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13633:349,recover,recovering,349,https://root.cern,https://github.com/root-project/root/pull/13633,1,['recover'],['recovering']
Availability,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702:289,Down,Downside,289,https://root.cern,https://github.com/root-project/root/issues/7702,2,['Down'],['Downside']
Availability,"Revert ""Force the caching of file / dir lookup failures (ROOT-6865).""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/894:47,failure,failures,47,https://root.cern,https://github.com/root-project/root/pull/894,1,['failure'],['failures']
Availability,"Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to; the actual std::tuple implementation to be attempted (and failing) to be used; for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3982:152,repair,repairs,152,https://root.cern,https://github.com/root-project/root/pull/3982,1,['repair'],['repairs']
Availability,"Revert ""[rootcling] Treat warnings coming from ROOT as errors.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6142:55,error,errors,55,https://root.cern,https://github.com/root-project/root/pull/6142,1,['error'],['errors']
Availability,"Reverts root-project/root#2130:; ```; /mnt/build/jenkins/workspace/lcg_personal_experimental/BUILDTYPE/Release/COMPILER/clang600binutils/LABEL/centos7/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/newdelete/src/NewDelete.cxx:214:7: error: exception specification in declaration does not match previous declaration; void *operator new(size_t /*size*/, std::align_val_t /*al*/) throw(); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220:230,error,error,230,https://root.cern,https://github.com/root-project/root/pull/2220,1,['error'],['error']
Availability,"Reverts root-project/root#9251 due to failures in LCG. In 1c38aa0 we made it possible to use installed json versions which do not have `json_fwd.h` to forward declare the json classes. However in this case, that brings the entire json package in the dictionaries. In turn, then we will need to build Json.pcm to avoid content duplication. This in turn requires LCG to provide ROOT_INCLUDE_PATH=/path/to/json at runtime. Is this all worth it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9267:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/9267,1,['failure'],['failures']
Availability,"RooArgSet allows to create a file with the information from the arguments stored in the set with the method RooArgSet::writeToFile(...).; Unfortunately, when using the corresponding RooArgSet::readFromFile function, there is a parsing problems for numbers in the form Xe+YZ, and the information gets lost in the import. The following error is produced:. ```; [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision; ```; You can test yourself with this script: [root-prob.py](https://root.cern.ch/phpBB3/download/file.php?id=13191&sid=a39a5dc5dc04a4c2be38081286650206). I’ve tracked the problem down to a forgotten case in RooStreamParser::readToken(). And after fixing it I made the script work as expected ([after.txt](https://root.cern.ch/phpBB3/download/file.php?id=13192&sid=a39a5dc5dc04a4c2be38081286650206)). Apologies for the trailing whitespace removed. Only real change at line 230.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/352:334,error,error,334,https://root.cern,https://github.com/root-project/root/pull/352,6,"['ERROR', 'down', 'error']","['ERROR', 'down', 'download', 'error']"
Availability,RooFit got more strict and forbids the implicit construction of; meaningless RooCmdArgs from strings. Our users should be warned about; possible new compiler errors if they make this mistake. Needs to be backported to the 6.26 branch (CMS already encountered such compiler errors in CMSSW). This is a followup to https://github.com/root-project/root/pull/9747.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9833:158,error,errors,158,https://root.cern,https://github.com/root-project/root/pull/9833,2,['error'],['errors']
Availability,"RooMomentMorphND was initialising fractions to zero. That will lead to; an all-zero PDF, which triggers evaluation errors. Setting all fractions; to 1 avoids those warnings, and the correct values will be calculated; during the first fit step.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6110:115,error,errors,115,https://root.cern,https://github.com/root-project/root/pull/6110,1,['error'],['errors']
Availability,"RooStats was using a global bool to switch on/off offsetting of; likelihoods. Now, this was moved into a function-local static config; struct that now also holds a flag to check if the error wall should be; presented to the minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4694:185,error,error,185,https://root.cern,https://github.com/root-project/root/pull/4694,1,['error'],['error']
Availability,Root 7457: Segmentation fault when embedding Type 1 fonts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90:24,fault,fault,24,https://root.cern,https://github.com/root-project/root/pull/90,1,['fault'],['fault']
Availability,Root compilation fails at target G__Gviz3d (on errors in TClass.h) on Debian Bullseye,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:47,error,errors,47,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['errors']
Availability,Root lib error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8814:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/8814,1,['error'],['error']
Availability,Root v6.24/06 using XrdSysDNS: Failure to compile using g++ 10.3.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173:31,Failure,Failure,31,https://root.cern,https://github.com/root-project/root/issues/9173,1,['Failure'],['Failure']
Availability,Rootcling's stage2 mode calls gDriverConfig->fTCling__GetInterpreter() to; get the TCling's instance of the cling interpreter. This in turn might; need to initialize TCling. Our modules setup preloads a modulemap but not the overlays preventing; system modules such as libc and stl to be loaded. This criples rootcling; and whenever it #includes a header file we get an error that we included; a module from ROOT which depends on modules stl but it is not accessible; through the module map.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1395:370,error,error,370,https://root.cern,https://github.com/root-project/root/pull/1395,1,['error'],['error']
Availability,"Run2_ana/lib/libCling.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libffi.7.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:7434,Down,Downloads,7434,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,"Running a weighted batch fit in Batch mode on an unweighted data set results in wrong errors du to a wrong Hessian computed the second time. ; Here is the code reproducing the problem:; ```; import ROOT as r. c1 = r.TCanvas(). def fit(sumw2 = False, batchmode = False, binned = False, minimizer = ""Minuit2"", printLevel = 0 ):; if (batchmode) :; print(""running in batchmode""); if (sumw2) :; print(""using weight correction""); r.RooRandom.randomGenerator().SetSeed(4357); ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); sig = ws.factory(""Gaussian::sig(x, mu[-1, 1], s[0.1, 5])""); bkg = ws.factory(""Chebychev::bkg(x, {c1[0.1, -1, 1]})""); shp = ws.factory(""SUM::shp(Nsig[0, 20000] * sig, Nbkg[0, 20000] * bkg)""); if (binned) :; data = shp.generateBinned(r.RooArgSet(x)); else :; data = shp.generate(r.RooArgSet(x)); data.Print(); ws.Import(data); res1 = shp.fitTo(; data,; r.RooFit.Extended(),; r.RooFit.Save(),; r.RooFit.SumW2Error(sumw2),; r.RooFit.Strategy(1),; r.RooFit.BatchMode(batchmode),; r.RooFit.Minimizer(minimizer),; r.RooFit.PrintLevel(printLevel); ); res1.Print(); pl = x.frame(); data.plotOn(pl); shp.plotOn(pl); pl.Draw(); c1.SaveAs(""fit.png""). ; fit(1,1,1,""Minuit"",2) # you can see second covariance matrix is completely wrong ; ```. This was reported in https://root-forum.cern.ch/t/sumw2error-gives-unexpected-results-with-unweighted-datasets-batchmode/47206",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9118:86,error,errors,86,https://root.cern,https://github.com/root-project/root/issues/9118,1,['error'],['errors']
Availability,"Running tree/ntuple/v7/test/ntuple_extended sometimes fails (at least on MacOS 11) at tear down. The crash happens at:. ```; (lldb) bt; * thread #13, stop reason = EXC_BAD_ACCESS (code=1, address=0x0); * frame #0: 0x000000010095d80f libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSourceFile::UnzipClusterImpl(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorageFile.cxx:652:26; frame #1: 0x0000000100944934 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSource::UnzipCluster(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorage.cxx:101:7; frame #2: 0x0000000100897a53 libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RClusterPool::ExecUnzipClusters(this=0x00000001479040b0) at RClusterPool.cxx:102:22; frame #3: 0x00000001008a9817 libROOTNTuple.6.23.so`decltype(__f=0x00000001479042d8, __a0=0x00000001479042e8)).*fp()) std::__1::__invoke<void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, void>(void (ROOT::Experimental::Detail::RClusterPool::*&&)(), ROOT::Experimental::Detail::RClusterPool*&&) at type_traits:3486:1; frame #4: 0x00000001008a971e libROOTNTuple.6.23.so`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*, 2ul>(__t=size=3, (null)=__tuple_indices<2> @ 0x0000700008c5df58)(), ROOT::Experimental::Detail::RClusterPool*>&, std::__1::__tuple_indices<2ul>) at thread:273:5; frame #5: 0x00000001008a8ed6 libROOTNTuple.6.23.so`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (ROOT::Experimental::Detail::RClusterPool::*)(), ROOT::Experimental::Detail::RClusterPool*> >(__vp=0x00000001479042d0) at thread:284:5; frame #6: 0x00007fff2032f950 libsystem_pthread.dylib`_pthread_start + 224; frame #7: 0x00007fff2032b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:91,down,down,91,https://root.cern,https://github.com/root-project/root/issues/7076,1,['down'],['down']
Availability,"Running. ```cpp; // repro.C; void repro() {; TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");; }; ```; as. ```; root -l -b -q repro.C; ```; yields:; ```; Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation; ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9316:174,Error,Error,174,https://root.cern,https://github.com/root-project/root/issues/9316,2,"['Error', 'error']","['Error', 'error']"
Availability,"SBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake --build . --config Release. ### Setup; 1. Operating system: Windows 10; 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2890,error,error,2890,https://root.cern,https://github.com/root-project/root/issues/9487,3,['error'],"['error', 'errorlevel']"
Availability,"SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x0000000107881888 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001078807fc llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x0000000107881ea4 SignalHandler(int) + 292; 3 libsystem_platform.dylib 0x0000000187a44184 _sigtramp + 56; 4 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 5 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 6 rootcling_stage1 0x00000001050b30e4 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:3835,error,error,3835,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1006:17: error: ‘type’ was not declared in this scope; 01:46:28 len = sizeof(type);; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1062:1: warning: control reaches end of non-void function [-Wreturn-type]; 01:46:28 }; 01:46:28 ^; ```. which seem caused by an update in the xrootd version (now version 5). ROOT has [some known issues](https://sft.its.cern.ch/jira/browse/ROOT-10910) with xrootd5, although this failure mode is not the same as in those cases. [These](root-project/root#6226) are the changes that @oshadura backported to 6.22 to fix xrootd5 support there.; I don't know whether those changes m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:2398,error,error,2398,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"SX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1747:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/inplace_merge.h:26:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:51:41: error: no template named 'is_trivially_destructible'; {__incr(integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:55:45: error: no template named 'is_trivially_destructible'; {__set(__s, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:59:49: error: no template named 'is_trivially_destructible'; {__process(__p, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:12970,error,error,12970,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,SXSystem.h TUnixSystem.h /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-32-04/0/core/base/inc/LinkDef.h; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Develope,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:9756,error,error,9756,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"Same as https://github.com/root-project/root/commit/19caf55b88d16ac67d9bfb39380a4d1c89f935e6 but this time moving RKeyBlob out of the anon namespace which causes compile errors on windows (I missed this in the previous commit, now reverted). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15660:170,error,errors,170,https://root.cern,https://github.com/root-project/root/pull/15660,1,['error'],['errors']
Availability,Same as the backport for 6.18! Fixes the errors in the nightlies: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=21468. Coupled to https://github.com/root-project/roottest/pull/590,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6286:41,error,errors,41,https://root.cern,https://github.com/root-project/root/pull/6286,1,['error'],['errors']
Availability,"See also this discussion here:; https://github.com/root-project/root/pull/15812#issuecomment-2252107168. The PR #15812 introduced a direct dependency of `graf3d/gl` on TASImage, which is only built if `asimage=ON`. It would be better if the PNG export would be done via the `TImage` plugin system, so there is no dependency at build time. Or if this can't be done, at least error out at configuration time if one attempts to build with this combination of flags. Here is the culprit:; https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLSdfFontMaker.cxx#L198. @osschar @linev . See also:; * https://root.cern.ch/doc/master/classTASImage.html; * https://root.cern/doc/master/imgconv_8C.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16250:374,error,error,374,https://root.cern,https://github.com/root-project/root/issues/16250,1,['error'],['error']
Availability,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8049:237,error,error,237,https://root.cern,https://github.com/root-project/root/pull/8049,7,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7339:735,avail,available,735,https://root.cern,https://github.com/root-project/root/pull/7339,1,['avail'],['available']
Availability,"See for comparison the screenshot below. The upper plot was done with `TTree.Draw`:. ```python; >>> import ROOT; >>> f = ROOT.TFile('DYJetsToLL.root'); >>> t = f.Get('Events'); >>> t.Draw('GenPart_pdgId'); ```. The lower plot was done with `RDataFrame.Histo1D`:. ```python; >>> import ROOT; >>> c = ROOT.TCanvas(); >>> h = ROOT.RDataFrame('Events', 'DYJetsToLL.root').Histo1D('GenPart_pdgId'); >>> h.Draw(); ```. ![Screenshot from 2020-10-20 10-38-16](https://user-images.githubusercontent.com/6951222/96562487-1974b880-12c1-11eb-9bc5-1006c78031e5.png). I've used ROOT 6.22/02 and you can download the file here:. http://opendata.web.cern.ch/record/12353",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671:589,down,download,589,https://root.cern,https://github.com/root-project/root/issues/6671,1,['down'],['download']
Availability,"See https://github.com/cms-sw/cmssw/pull/41932#issuecomment-2440492881. ```; // This produces errors; TH2Poly p1;; TH2Poly p2(p1);; ```; The stack trace is:; ```; * frame #0: 0x000000010515b3d4 libHist.so`TH2Poly::Copy(this=0x00000001000100a8, newobj=0x00000001000180a8) const at TH2Poly.cxx:235:49; frame #1: 0x000000010515add8 libHist.so`TH2Poly::TH2Poly(this=0x00000001000180a8, rhs=0x00000001000100a8) at TH2Poly.cxx:185:9; frame #2: 0x000000010515ae34 libHist.so`TH2Poly::TH2Poly(this=0x00000001000180a8, rhs=0x00000001000100a8) at TH2Poly.cxx:184:47; ```; with a missing `if not nullptr` at:; ```; 234 // need to use Clone to copy the contained bin list; -> 235 newth2p.fBins = dynamic_cast<TList *>(fBins->Clone());; ```. As a side note:. ```; // This works fine (initialized case); TH2Poly p1;; Double_t x[] = {0,0,1,1};; Double_t y[] = {0,1,1,0};; p1.AddBin(4, x, y);; TH2Poly p2(p1);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16771:94,error,errors,94,https://root.cern,https://github.com/root-project/root/issues/16771,1,['error'],['errors']
Availability,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12651:481,repair,repairs,481,https://root.cern,https://github.com/root-project/root/pull/12651,2,"['down', 'repair']","['down', 'repairs']"
Availability,"See https://github.com/root-project/root/pull/9913. This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9927:454,down,down,454,https://root.cern,https://github.com/root-project/root/pull/9927,1,['down'],['down']
Availability,See https://root-forum.cern.ch/t/open-a-file-to-read-data/52234/7. `rootls -t yourfile.root:*` will spit out overload errors if it encounters a branch of an unknown class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11675:118,error,errors,118,https://root.cern,https://github.com/root-project/root/issues/11675,1,['error'],['errors']
Availability,"See https://root-forum.cern.ch/t/open-gui-failed-on-latest-macos-13-3-1/54474. ```; root [0] new TBrowser; root.exe(29254,0x16d62f000) malloc: *** error for object 0x600002e1a980: pointer being freed was not allocated; root.exe(29254,0x16d62f000) malloc: *** set a breakpoint in malloc_error_break to debug; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12750:147,error,error,147,https://root.cern,https://github.com/root-project/root/issues/12750,1,['error'],['error']
Availability,"See https://root-forum.cern.ch/t/possible-bug-in-roominimizer-contour-change-errordef-and-gets-not-restored/46919. Calling two times: . ```; RooPlot *frame = m.contour(frac, sigma_g2, 1, 2, 3); ; RooPlot *frame2 = m.contour(frac, sigma_g2, 1,2,3);; ```; gives the second time a different contour, probably using the wrong definition of the error level coming from the previous call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10440:77,error,errordef-and-gets-not-restored,77,https://root.cern,https://github.com/root-project/root/issues/10440,2,['error'],"['error', 'errordef-and-gets-not-restored']"
Availability,"See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected; This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3996:68,error,error-when-expected,68,https://root.cern,https://github.com/root-project/root/pull/3996,1,['error'],['error-when-expected']
Availability,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16412:109,failure,failures,109,https://root.cern,https://github.com/root-project/root/pull/16412,2,['failure'],['failures']
Availability,"See more details in the commit messages. This is a followup to https://github.com/root-project/root/pull/8878, and the first commit silences a harmless error message that appeared after https://github.com/root-project/root/commit/d5c3c5885726d11d14b59249e601e81ecfe8021d.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9795:152,error,error,152,https://root.cern,https://github.com/root-project/root/pull/9795,1,['error'],['error']
Availability,See the following 5 years old commit in Clang:. ```; https://github.com/llvm-mirror/clang/commit/; a78c5c34fbd20fde02261c3f3e21933cd58fcc04; ```. Clang forces '(' token after reference to dtor. Reflex uses an extra; parentheses around dtor reference. It force Clang 3.5 to diagnose and fail. A thread in cfe-dev (Clang) mainling-list was started:. ```; http://lists.cs.uiuc.edu/pipermail/cfe-dev/; 2014-October/039371.html; ```. The following fixes failure in CMSSW with Clang 3.5: https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc6_amd64_gcc481/CMSSW_7_3_CLANG_X_2014-10-01-0200/AnalysisDataFormats/TopObjects. Signed-off-by: David Abdurachmanov davidlt@cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/29:449,failure,failure,449,https://root.cern,https://github.com/root-project/root/pull/29,1,['failure'],['failure']
Availability,"See:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/. The last successful build on that platform was in the morning of November 30, so any of the PRs merged on Monday seems to have broken the 32 bit build. The candidate PRs are in chronological order (newest to oldest):. * https://github.com/root-project/root/pull/14148; * https://github.com/root-project/root/pull/14144; * https://github.com/root-project/root/pull/14120; * https://github.com/root-project/root/pull/14129; * https://github.com/root-project/root/pull/14131; * https://github.com/root-project/root/pull/14135; * https://github.com/root-project/root/pull/14146; * https://github.com/root-project/root/pull/14115; * https://github.com/root-project/root/pull/14110; * https://github.com/root-project/root/pull/13565; * https://github.com/root-project/root/pull/14137. Any PR that got backported to 6.30 is probably not the offender, because the 6.30 nightlies don't have these failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14306:1032,failure,failures,1032,https://root.cern,https://github.com/root-project/root/issues/14306,1,['failure'],['failures']
Availability,"Seems to be, buffer is not released correctly.; I guess, error should be fixed in cling repository first",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4897:57,error,error,57,https://root.cern,https://github.com/root-project/root/pull/4897,1,['error'],['error']
Availability,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16445:161,error,error,161,https://root.cern,https://github.com/root-project/root/pull/16445,1,['error'],['error']
Availability,Seg fault in RooMomentMorphND for ROOT 6.29,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12155:4,fault,fault,4,https://root.cern,https://github.com/root-project/root/issues/12155,1,['fault'],['fault']
Availability,Segmentation fault after quitting Cling in CUDA mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/7433,1,['fault'],['fault']
Availability,Segmentation fault in TGraph::Sort with large number of entries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13632:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/13632,1,['fault'],['fault']
Availability,Segmentation fault when building with the mold linker,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:13,fault,fault,13,https://root.cern,https://github.com/root-project/root/issues/15473,1,['fault'],['fault']
Availability,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8810:221,error,errors,221,https://root.cern,https://github.com/root-project/root/pull/8810,3,['error'],"['error', 'errors']"
Availability,SetErrorDef was not implemented for the FCNGradAdapter used to wrap the user functions in the Minuit interface. This causes that the current set ErrorDef was not used when minimizing but the one set when constructed the function. This fixes issue #12338,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12339:145,Error,ErrorDef,145,https://root.cern,https://github.com/root-project/root/pull/12339,1,['Error'],['ErrorDef']
Availability,"SetRootSys is overwriting ROOTSYS every time:; ```; [yuka@yuka-arch normalroot]$ source bin/thisroot.sh; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /home/yuka/normalroot; [yuka@yuka-arch normalroot]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch normalroot]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot""; root [1] .q; [yuka@yuka-arch normalroot]$ echo $ROOTSYS; /hoge/huga; ```. This is the right behavior as users can choose different ROOT binary in; cvmfs enviroment. However, as SetROOTSYS is reading the binary header; which stores the information of where the binary was built, ROOTSYS is; messed up when you relocate build directory (Without this patch):; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/normalroot"" // It should be ""/home/yuka/test""!; ```. ROOTSYS can be overwritten, but it should point to the actual binary; location. With this patch, ROOTSYS can point to the correct binary location:; ```; [yuka@yuka-arch ~]$ cp -r normalroot test; [yuka@yuka-arch ~]$ cd test; [yuka@yuka-arch test]$ export ROOTSYS=/hoge/huga; [yuka@yuka-arch test]$ echo $ROOTSYS; /hoge/huga; [yuka@yuka-arch test]$ bin/root.exe -l; root [0] gSystem->Getenv(""ROOTSYS""); (const char *) ""/home/yuka/test"" // Which is correct; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366:134,echo,echo,134,https://root.cern,https://github.com/root-project/root/pull/2366,5,['echo'],['echo']
Availability,"Setting the move constructor and move assignment operator to = default; causes linker errors because the copy assignment operator is not; implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators; work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;; ```C++; void iterator_test() {. RooArgSet argSet1;; RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7910:86,error,errors,86,https://root.cern,https://github.com/root-project/root/pull/7910,2,['error'],"['error', 'errors']"
Availability,"Several improvements to the [`RooDataSet` constructor](https://root.cern.ch/doc/master/classRooDataSet.html#a6a2302f27e1b016a0351f6e0a0329fa2) that takes command arguments to import other data:. 1. Automatically create weight variable when importing multiple data slices (closes #11487); 2. Support importing also RooDataHists (also as slices for combined datasets), and filling the weight errors correctly to match the `weightSquared()`; 3. Create the weight variable on the fly if it was specified by name in `WeightVar()` but is not in the list of variables; 4. Have a default argument for `WeightVar(=""weight"")`, because that's usually the name anyway; 5. Fix `RooVectorDataStore::loadValues()` for loading values from another vector data store: so far it used `assignValueOnly` to copy the values over, but the values might have errors, like for example in the case of importing a RooDataHist. That's why the regular `RooAbsCollection::assign()` is used now. All of these changes result in several code simplifications in the cases where RooDataSets are imported from other data, and fixes the bugs that might have been because the `weightSqaured()` was usually not transferred correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12227:390,error,errors,390,https://root.cern,https://github.com/root-project/root/pull/12227,2,['error'],['errors']
Availability,Several new test failures on ppc64le with 6.22.06 due to:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6887:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/6887,1,['failure'],['failures']
Availability,"Several small issues came up in the forum, and this is a collection of documentation updates, a few safety checks added to roofit and more understandable warning/error messages. Further, the class RooRealProxy (kind of a pointer with extra functionality) has been replaced by a templated class, as it always requires casting when the pointed-to object is used. Since it is internal to RooFit, this should not affect users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4739:162,error,error,162,https://root.cern,https://github.com/root-project/root/pull/4739,1,['error'],['error']
Availability,Should address the Gaudi failures reported in ROOT-10303.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4349:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/4349,1,['failure'],['failures']
Availability,Should address; ```; /tmp/workspace/src/tree/ntuple/v7/src/RField.cxx:43:10: fatal error: charconv: No such file or directory; #include <charconv>; ^~~~~~~~~~; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12196:83,error,error,83,https://root.cern,https://github.com/root-project/root/pull/12196,1,['error'],['error']
Availability,Should decrease the number of failures and retries when running the tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16273:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/16273,1,['failure'],['failures']
Availability,"Should fix errors such as those at https://bit.ly/2W6cZoc :. ```; /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/default/V/master/build/include/ROOT/RDF/RInterface.hxx:2363:25:; error: no viable conversion from; 'shared_ptr<ROOT::Detail::RDF::RCustomColumn<ROOT::VecOps::RVec<ROOT::VecOps::RVec<unsigned; long> > (*)(const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<float> &, const; ROOT::VecOps::RVec<float> &, const ROOT::VecOps::RVec<int> &),; ROOT::Detail::RDF::CustomColExtraArgs::None>>' to 'const; shared_ptr<RDFDetail::RCustomColumnBase>'; newCols.AddColumn(newColumn, name);; ^~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5554:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/5554,2,['error'],"['error', 'errors']"
Availability,Should fix sporadic failures on `projectroot.test.test_stressentrylist_interpreted`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5234:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/5234,1,['failure'],['failures']
Availability,Should fix the failure of tutorial/tree/run_h1analysis.C on Win64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12243:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/pull/12243,1,['failure'],['failure']
Availability,Should fix the out-of-sync failures :crossed_fingers:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12834:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/12834,1,['failure'],['failures']
Availability,Should fix; ```; WARNING:discardable_shared_memory_manager.cc(197)] Less than 64MB of free space in temporary directory for shared memory files: 62; ```; and similar errors with headless chromium.; See https://stackoverflow.com/a/56941767. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466:166,error,errors,166,https://root.cern,https://github.com/root-project/root/pull/13466,1,['error'],['errors']
Availability,Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7389:7,repair,repair,7,https://root.cern,https://github.com/root-project/root/pull/7389,1,['repair'],['repair']
Availability,Should solve failures on fedora40 in #16729,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16731:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/16731,1,['failure'],['failures']
Availability,Significantly speed up the tear down of hadd and its reduce memory use,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4525:32,down,down,32,https://root.cern,https://github.com/root-project/root/pull/4525,1,['down'],['down']
Availability,"Silence ""Can't read file attributes"" with protected system files on Windows.; This addresses the following topic on the Forum:; [TGFileDialog multiple ""Can't read file attributes"" errors on Windows](https://root-forum.cern.ch/t/tgfiledialog-multiple-cant-read-file-attributes-errors-on-windows/58342)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865:180,error,errors,180,https://root.cern,https://github.com/root-project/root/pull/14865,2,['error'],"['errors', 'errors-on-windows']"
Availability,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11179:113,error,error,113,https://root.cern,https://github.com/root-project/root/issues/11179,5,['error'],"['error', 'errors']"
Availability,"Simultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""a"");; sim.addPdf(g, ""b"");; sim.addPdf(g, ""c"");; ; sim.fitTo(*ds, RooFit::Save(true); , RooFit::BatchMode(true) // commenting this solves the issue; )->Print(""V"");; // _a_x parameter in results, cov matrix is ""Approximation only""; ; // works; //g.fitTo(*ds, RooFit::Save(true), RooFit::BatchMode(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; ROOT 6.26.04 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:2535,down,download,2535,https://root.cern,https://github.com/root-project/root/issues/10991,1,['down'],['download']
Availability,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11767:319,avail,available,319,https://root.cern,https://github.com/root-project/root/pull/11767,1,['avail'],['available']
Availability,"Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction; to multiply the yields in the RooHistFuncs with the inverse bin widths,; in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is; not optimal for the `BinnedLikelihood` code path. Here, the bin widths; need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by; propagating the information that we are building a binned likelihood; down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL; knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,; but actually the main motivation is not performance but RooFit AD; support. By removing the RooBinWidthFunctions from the computation graphs; of HistFactory likelihoods, we don't need to implement code generation; support for this class, which would be not trivial in the general; n-dimensional case. With the suggestion in this PR, all that work is; avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13024:548,down,down,548,https://root.cern,https://github.com/root-project/root/pull/13024,1,['down'],['down']
Availability,"Since ROOT 6.26/00, passing a null pointer to RooFit::ConditionalObservables results in a crash. It does not crash for ROOT 6.22/xx and 6.24/06. Reproducer:; ```; import ROOT; ws = ROOT.RooWorkspace(""ws""); # seg fault; ROOT.RooFit.ConditionalObservables(ws.set("""")); ```; Tested ROOT versions that crashes: 6.26/00 (installed from conda), 6.27/01 (from swan bleeding edge); Tested ROOT version that does not crash: 6.22/00 (LCG 98), 6.24/00 (LCG 100), 6.24/06 (LCG 101)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10232:212,fault,fault,212,https://root.cern,https://github.com/root-project/root/issues/10232,1,['fault'],['fault']
Availability,"Since ROOT 6.30, we are not building ROOT with the `math/fftw`; subpackage anymore (`fftw3=OFF`). It is the interface between ROOT and; fftw3, but is incompatible with fftws GPL license. That means that for default ROOT builds, the `RooFFTConvPdf` class for; FFT convolutions is not working anymore, because it uses `math/fftw`. This commit implements a solution to make the `RooFFTConvPdf` work; again in this situation: the routine that uses fftw is declared; on-the-fly to the interpreter. This will work if the user has an; external install of `fftw3`, which is usually available in all Linux; distributions. Closes #14162. Note: the error that you get if `fftw3.h` can't be found looks like this:; ```txt; input_line_21:1:10: fatal error: 'fftw3.h' file not found; #include ""fftw3.h""; ^~~~~~~~~; [#0] ERROR:Eval -- RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header.; You have three options to fix this problem:; 1) Install fftw3 on your system so that the interpreter can find it; 2) In case fftw3.h is installed somewhere else,; tell ROOT with gInterpreter->AddIncludePath() where to find it; 3) Compile ROOT with the -Dfftw3=ON in the CMake configuration,; such that ROOT comes with built-in fftw3 convolution routines. terminate called after throwing an instance of 'std::runtime_error'; what(): RooFFTConvPdf evaluation Failed! The interpreter could not find the fftw3.h header; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14174:574,avail,available,574,https://root.cern,https://github.com/root-project/root/pull/14174,4,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"Since adding `bits/utility.h` in commit e9a8c48e4f, a C++14 build with GCC 12 (and potentially also other compiler versions) failed with; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:38:; /opt/gcc/12.2.0/include/c++/12.2.0/functional:337:35: error: missing '#include <bits/utility.h>'; 'tuple_size' must be declared before it is used; = typename enable_if<(__i < tuple_size<_Tuple>::value),; ^; /opt/gcc/12.2.0/include/c++/12.2.0/bits/utility.h:49:12: note: declaration here is not visible; struct tuple_size;; ^; ```. Apparently, once the module is declared, it must also be enabled for C++14 and not restricted with `cplusplus17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12793:332,error,error,332,https://root.cern,https://github.com/root-project/root/pull/12793,1,['error'],['error']
Availability,"Since newer releases, TBrowser considerably slowed down when used through an X-forward. I tried on SL7, root6.20, gcc9.2, C++17 (LCG_97a) & SL7, root6.22, gcc4.8,C++11. These versions have considerably slowed down. All worked well until at least 6.08 (SL6,gcc4.9,c++1y,LCG_88). Minimum example (try from home):; ```; ssh -C -X lxplus.cern.ch; root -l; new TBrowser; ```; -> Slow !. Better:; ```; ssh -C -X lxplus.cern.ch; cd /cvmfs/sft.cern.ch/lcg/releases/LCG_80/ROOT/6.04.06/x86_64-cc7-gcc48-opt/bin; . thisroot.sh; root -l; new TBrowser; ```; -> good. This issue is probably related to the new --web option, or some anti-aliasing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6730:51,down,down,51,https://root.cern,https://github.com/root-project/root/issues/6730,2,['down'],['down']
Availability,"Since the LLVM upgrade, the following four tests:; ```; projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend; projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex; projectroot.roottest.root.io.complex.roottest_root_io_complex_readcomplex; projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_Names; ```; fail with; ```; In module 'std' imported from input_line_1:1:; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: error: 'std::__is_same_uncvref<char [6], std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' has different definitions in different modules; first difference is defined here found 0 base classes; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^; /Library/Developer/CommandLineTools/usr/include/c++/v1/type_traits:1427:8: note: but in 'std.type_traits' found 1 base class; struct __is_same_uncvref : _IsSame<typename __uncvref<_Tp>::type,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12003:514,error,error,514,https://root.cern,https://github.com/root-project/root/issues/12003,1,['error'],['error']
Availability,"Since the beginning when 0 ranges were specified by Save method, ; half a bin was add to coordinate. But wrong number of bins was stored and ; therefore produced buffer was not able to use. Error was from very beginning - ; already by initial import from rcs to svn 23 years ago. Now proper number of bins are stored. It still stores middle of bins when `f1->Save(0,0,0,0,0,0)` is called. There was also failure to use such saved buffer when trying to get approximation at upper boundaries. Now it is fixed. Adding tests for all TF1/TF2/TF3. Fixes #13927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13949:190,Error,Error,190,https://root.cern,https://github.com/root-project/root/pull/13949,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12455:330,echo,echo,330,https://root.cern,https://github.com/root-project/root/issues/12455,1,['echo'],['echo']
Availability,"Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12456:188,Error,ErrorRecovery,188,https://root.cern,https://github.com/root-project/root/pull/12456,1,['Error'],['ErrorRecovery']
Availability,"Since they are only available for Define and Filter operations, the functionality is not ready yet for wider use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13889:20,avail,available,20,https://root.cern,https://github.com/root-project/root/pull/13889,2,['avail'],['available']
Availability,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8892:97,failure,failures,97,https://root.cern,https://github.com/root-project/root/issues/8892,2,"['Ping', 'failure']","['Ping', 'failures']"
Availability,"Since we enabled warnings by default in rootcling, which pointed; out a bunch of warnings in the code base, we also set rootcling; into a mode in which it is unable to ever fail. The reason for this is this faulty if statement. If we enable warnings,; we set the errorIgnoreLevel to kWarning. But this if statement only records; any errors if the errorIgnoreLevel is NOT kWarning (which is between; kThrowOnWarning and kError). The new if statements only checks if the the printed message is an error; or higher (which would include any kind of fatal error). If the errorIgnoreLevel; is set higher, we already correctly filter this at the start of the method; where we return on filtered messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831:207,fault,faulty,207,https://root.cern,https://github.com/root-project/root/pull/831,7,"['error', 'fault']","['error', 'errorIgnoreLevel', 'errors', 'faulty']"
Availability,"Skip all DLL in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And an even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/6156,2,['error'],['error']
Availability,"Skip all DLLs in `C:/Program Files...` the path containing spaces is not handled properly anyway, leading to this kind of error:; `LINK : fatal error LNK1181: cannot open input file 'c:\program.obj'`; And a even more fundamental reason is that the matching `.lib` files are usually not along side the DLLs in `C:\Program Files*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6163:122,error,error,122,https://root.cern,https://github.com/root-project/root/pull/6163,2,['error'],['error']
Availability,"SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11433:1276,error,error,1276,https://root.cern,https://github.com/root-project/root/pull/11433,2,['error'],['error']
Availability,Small fix for geometry state recovery in VMC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3882:29,recover,recovery,29,https://root.cern,https://github.com/root-project/root/pull/3882,1,['recover'],['recovery']
Availability,Small spelling error during explaining lhcbOpenData.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10371:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/10371,1,['error'],['error']
Availability,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:445,error,error,445,https://root.cern,https://github.com/root-project/root/pull/5595,2,['error'],['error']
Availability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:155,error,error,155,https://root.cern,https://github.com/root-project/root/pull/527,1,['error'],['error']
Availability,"So far, the pdf normalization could not be done in RooBatchCompute,; because it requires the tracking of evaluation errors. This could not be implemented in the current batchcompure library,; because information could not flow back from the compute functions to; the calling object. This is now made possible by taking the `ExtraArgs`; array by reference, meaning it can also be used as an output parameter; by the compute function to return for example the number of evaluation; errors. This change greatly helps to speed up the BatchMode, expecially on the; GPU because the normalization can now be done on the device. To be able to also do the NaN-packing on the GPU device, the `RooNaNPacker` helper class was moved to `batchcompute`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12677:116,error,errors,116,https://root.cern,https://github.com/root-project/root/pull/12677,2,['error'],['errors']
Availability,"So far, the whole HistFactory package was not built if `xml=OFF`, even; if only one part of HistFactory uses TXML: the `ConfigParser` class and; it's executable wrapper `hist2workspace`. With this commit, we only refrain from building the ConfigParser and the; hist2workspace executable if `xml=OFF`, but still build the rest of; HistFactory. The reason for doing this now was the RooFitHS3 package: it depends on; HistFactory, but doesn't use the XML-specific classes. After this; commit, RooFitHS3 builds also with `xml=OFF`. The RooStats tutorials that depend on `hist2workspace` are now also; disabled if XML is not ON. This PR should fix the compiler errors reported on the forum:; https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10104:656,error,errors,656,https://root.cern,https://github.com/root-project/root/pull/10104,2,['error'],"['error-on-ubuntu', 'errors']"
Availability,"So here are the changes that I needed to make from the comments of the last pull request and some other changes:; 1) I've added the name for a enum constant because I realised when declaring kMyConstant = 42 that I didn't save the name.; 2) I've added some checks in the TCling to see if the TEnum and TEnumConstants are actually created, because when I run the test:; // MyEnumComment; enum EMyEnum {; kMyEnumConstant = 42 // enumConstantComment; };. int assertTEnum(); {. ```; if (!(TEnum*)gROOT->GetListOfEnums()->FindObject(""EMyEnum"")) {; Error (""TEnum"", ""Constructor of TEnum failure."");; return -1;; ```. }; It does return and Error. I tried that on the root[0] promp as well and the address of GetListOfEnum is not NULL(because the HashTable is created), but the address of FindObject is 0x0. ; Now I don't get the Errors of TEnum and TEnumConstant are not created..I wanted to check whether they are added to the fEnums and fGlobals, but Add() for TCollection is a void function. My best guess is that they are not added to the lists, maybe you can see why...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2:543,Error,Error,543,https://root.cern,https://github.com/root-project/root/pull/2,4,"['Error', 'failure']","['Error', 'Errors', 'failure']"
Availability,Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7908:52,error,error,52,https://root.cern,https://github.com/root-project/root/pull/7908,1,['error'],['error']
Availability,Solves a bug in the TFITSIO code when reading a FITS binary table that; contained a column of type LOGICAL. The code in TFISTIO:LoadHDU only; had tests for column types of strings or numeric so it was failing with the error. “bad binary table datatype”,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1590:218,error,error,218,https://root.cern,https://github.com/root-project/root/pull/1590,1,['error'],['error']
Availability,Some Python tests define `PRE_` and `POST_CMD`; they should not get the ASan runtime preloaded. Invent a new `CMD_ENV` that supports exactly one environment variable that is applied to `CMD`. This fixes another 16 test failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11226:219,failure,failures,219,https://root.cern,https://github.com/root-project/root/pull/11226,1,['failure'],['failures']
Availability,Some RooAbsArg member functions were replaced a long time ago with drop-in alternatives that everyone uses since forever. We might as well deprecate these member functions now to slim down the interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16430:184,down,down,184,https://root.cern,https://github.com/root-project/root/pull/16430,1,['down'],['down']
Availability,"Some RooFit classes used the RooRealVar or RooAbsRealLValue types for; some of their parameters in the constructor, which is not as flexible as; RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were; encountered when investigating RooFit problems reported in the forum.; More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which; was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7325:181,down,down,181,https://root.cern,https://github.com/root-project/root/pull/7325,1,['down'],['down']
Availability,Some classes like TObjString do not inherit form TNamed and therefor do not have the; SetName method. This produces in the command line tools errors when such objects are; stored in ROOT files. This problem was seen in the forum post in the case of `rootcp`.; https://root-forum.cern.ch/t/remove-directory/47733/31,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9340:142,error,errors,142,https://root.cern,https://github.com/root-project/root/pull/9340,1,['error'],['errors']
Availability,Some files in the webgui tutorials should not be scanned by doxygen. They produce errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10508:82,error,errors,82,https://root.cern,https://github.com/root-project/root/pull/10508,1,['error'],['errors']
Availability,"Some headers contain redundant header guards around #include directives like this:. #ifndef ROOT_TTree; #include ""TTree.h""; #endif. This patch removes the #ifndef's around these includes as they don't serve any practical purpose and are no longer part of the current ROOT coding convention. This patch also fixes the 153 typos that are contained in the symbols of the #ifndef directives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/341:21,redundant,redundant,21,https://root.cern,https://github.com/root-project/root/pull/341,1,['redundant'],['redundant']
Availability,Some improvements to the tutorial which might help with the frequent CI failures (as seen for example at https://github.com/root-project/root/actions/runs/7648815978/job/20842218312),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14434:72,failure,failures,72,https://root.cern,https://github.com/root-project/root/pull/14434,1,['failure'],['failures']
Availability,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:380,down,down,380,https://root.cern,https://github.com/root-project/root/pull/6969,2,"['down', 'failure']","['down', 'failures']"
Availability,Some of VC methods are marked as deprecated and causing compiler; warnings (or errors) even when methods are not used; Should solve already reported by @lmoneta here https://github.com/VcDevel/Vc/issues/253,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/5833,1,['error'],['errors']
Availability,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:144,avail,available,144,https://root.cern,https://github.com/root-project/root/pull/6108,1,['avail'],['available']
Availability,"Some tests are failing with modules such with redefinition errors; (for example `roottest-cling-parsing-scopeDict-build`). The reason for this is that we include all headers that form; the C++ module again to make sure the module is complete (some; rootcling invocations don't have all headers of the module as; arguments, most notably the Core module). The first inclusion; of these headers happens from the normal rootcling code. This patch changes this behavior that we only include the; *missing* headers that are necessary to make the C++ module; complete and not all headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1335:59,error,errors,59,https://root.cern,https://github.com/root-project/root/pull/1335,1,['error'],['errors']
Availability,Some tutorials had two `\author` lines. This generates the doxygen error:; ```; \endcond command within this file; ```; These double lines are replaced by the `\authors` single line.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10460:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/10460,1,['error'],['error']
Availability,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10955:244,error,error,244,https://root.cern,https://github.com/root-project/root/pull/10955,1,['error'],['error']
Availability,"Sorry @vgvassilev, I forgot to let `echo` escape the tabs :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/448:36,echo,echo,36,https://root.cern,https://github.com/root-project/root/pull/448,1,['echo'],['echo']
Availability,"Sporadic test failures are caused by the randomness of the test input.; (For some inputs the training does not converge). This patch ""fixes""; this by removing the randomness from the input to the tests. One source of randomness still remains, the dataloader shuffles the; batches internally, relying on a source of randomness that is not; reachable from the outside. However, the variability in test output is _significantly_ reduced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251:14,failure,failures,14,https://root.cern,https://github.com/root-project/root/pull/2251,1,['failure'],['failures']
Availability,"Spun off from [discussion](https://github.com/root-project/root/pull/5967/files/f38dec8a28705a66fa234733be390f349941ce97#r448840263) on #5967:. For the new `RResult` error handling regime, fallible functions that don't return a value have the return type `RResult<void>`. ; Oftentimes, we only want to ensure the function succeeded before proceeding and throw an exception up the stack otherwise. This PR adds a convenience method `ThrowOnError()` (analogous to `RResult<T>::Get()` for non-void `T`). . `ThrowOnError` checks the error state of the `RResult<void>`, throwing if there's an error and doing nothing otherwise. . Before:; ```cpp; RResult<void> validRes = FallibleVoidFn();; if (!validRes) { ; validRes.Throw(); ; }; ```. After:; ```cpp; FallibleVoidFn().ThrowOnError(); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5975:166,error,error,166,https://root.cern,https://github.com/root-project/root/pull/5975,3,['error'],['error']
Availability,Spurious error message when reading a `char` from a `TTreeReader<signed char>`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11837:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/11837,1,['error'],['error']
Availability,"Std library types are picked up by rootcling as `TClasses`. If there is no; `RField` specialization for them, they are passed to the `RClassField`; constructor. This led to accidental support of those std types by; RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but; for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type; is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7842:313,error,errors,313,https://root.cern,https://github.com/root-project/root/pull/7842,1,['error'],['errors']
Availability,"Still need to change the `find(""return "")` to something more robust, but this allows defines to be a bit more complex. For filters, we need to do a bit more work (i.e., ensure we get something convertible to boolean).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1103:61,robust,robust,61,https://root.cern,https://github.com/root-project/root/pull/1103,1,['robust'],['robust']
Availability,"Strip of ../ so that the search finds a valid longest match. With the upcoming upgrade of LLVM 13, this would otherwise lead to an error ""File name too long"" but it's already wrong now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10387:131,error,error,131,https://root.cern,https://github.com/root-project/root/pull/10387,1,['error'],['error']
Availability,Summary of the changes in Vc 0.7.4:; - fixed several compile errors / warnings with newer or old C++; compilers; - support clean compilation with more -W flags; - fixed compilation when compiling without optimization; - added operator-- to Vector<T>; - Copying Memory now uses SIMD move instructions; - Vc::Allocator<T> now uses a minimum alignment of the SIMD types of; the chosen Vc implementation. Thus making it useable for containers of; builtin types. Signed-off-by: Matthias Kretz kretz@kde.org,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/19:61,error,errors,61,https://root.cern,https://github.com/root-project/root/pull/19,1,['error'],['errors']
Availability,Suppress error output on broken symlinks (use debug output); Provide size field for several objects kinds like TKey or TBranch; Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8029:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/8029,1,['error'],['error']
Availability,"Suppress warnings compiling the builtin LLVM and clang. It is not; maintained by ROOT, so warnings are not necessary here. This suppresses many warnings that flood the build logs, and also; prevent us from treating warnings as errors in the CI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15483:227,error,errors,227,https://root.cern,https://github.com/root-project/root/pull/15483,1,['error'],['errors']
Availability,Syntax error in the markdown bullet list,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8455:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/8455,1,['error'],['error']
Availability,Syntax error leads to interpreter assert with `Must not nest within unloading transaction` when reading object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11651:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/11651,1,['error'],['error']
Availability,Systematic build failure of ROOT master in the LCG DEBUG builds since Jan 15th,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594:17,failure,failure,17,https://root.cern,https://github.com/root-project/root/issues/9594,1,['failure'],['failure']
Availability,"TBranches"" in my analysis** nor am trying to plot them.; When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:; 1. Reading events TTree/TChain.; 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF.; 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**; Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)?. Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches?. **Expected behaviour:**; 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches.; 2.Snapshot to print that there is a branch which could not be fully stored or stored at all with mentioning which branch it is and the reason of failure (i.e. missing branch in x,y,z, files).; 3.Is it possible to develop a method for snapshot to store only the required branches and not all. It can help with saving plenty of space on the servers. Thank you in advance for looking into this issue and sorry about the wordy description. Github links:; **RDF opening the TTree datasets**: https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1464; **RDF opening the TChain datasets**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1486; **Snapshot**:https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L1753 ,; https://github.com/brunel-physics/Shirin-Codes/blob/b6539523aeda1dee0445e81d0377b19589b468ed/src/TTreeMaker.cxx#L2249",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366:2146,failure,failure,2146,https://root.cern,https://github.com/root-project/root/issues/9366,1,['failure'],['failure']
Availability,TBrowser slowed down when used through X-forward,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6730:16,down,down,16,https://root.cern,https://github.com/root-project/root/issues/6730,1,['down'],['down']
Availability,TBufferFile: remove stray quote in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10099:35,error,error,35,https://root.cern,https://github.com/root-project/root/pull/10099,1,['error'],['error']
Availability,"TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```. ### To Reproduce; Steps to reproduce the behavior:; 1. I am building root through the CMake program with the command as recommended:; ```; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src ; $ cmake --build .; ```. ### Setup; 1. ROOT version = 6.26.00; 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4; 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:2749,error,error,2749,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,TClass::GetListOfDataMembers returns an empty list even-though the information is available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6666:82,avail,available,82,https://root.cern,https://github.com/root-project/root/issues/6666,1,['avail'],['available']
Availability,TCling: Remove error if symbols cannot be autoloaded,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15973:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/15973,1,['error'],['error']
Availability,TCling::RefreshClassInfo: Error if shadowing namespace.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16540:26,Error,Error,26,https://root.cern,https://github.com/root-project/root/pull/16540,1,['Error'],['Error']
Availability,"TClingCallFunc provides an interface between compiled and interpreted code. That is, we can create at compile time a function to be called by the interpreter and get back its result into compiled code. To do that we require connecting to a function declaration available in the interpreter and calling it by setting input arguments. However, the input arguments are set with the SetArg which can resolve to a type and argument representation different from the signature of the interpreter function we will call. This is practically not a problem integral types because their representation is mostly the same. The problem becomes visible when we call SetArg with a `double` and the function signature expects a `float`. That works out of the box when the compiler can see both ends and insert proper representation casts. Unfortunately, when crossing the compiler/interpreter boundary we use `void*` and that information is lost. This patch adds some representation adjustments so that the compiled code (SetArg) and the interpreted code (CallFunc) can agree on the memory representation before calling. Fixes #14405",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14853:261,avail,available,261,https://root.cern,https://github.com/root-project/root/pull/14853,1,['avail'],['available']
Availability,"TClingCallFunc provides an interface between compiled and interpreted code. That is, we can create at compile time a function to be called by the interpreter and get back its result into compiled code. To do that we require connecting to a function declaration available in the interpreter and calling it by setting input arguments. However, the input arguments are set with the SetArg which can resolve to a type and argument representation different from the signature of the interpreter function we will call. This is practically not a problem integral types because their representation is mostly the same. The problem becomes visible when we call SetArg with a double and the function signature expects a float. That works out of the box when the compiler can see both ends and insert proper representation casts. Unfortunately, when crossing the compiler/interpreter boundary we use void* and that information is lost. This patch adds some representation adjustments so that the compiled code (SetArg) and the interpreted code (CallFunc) can agree on the memory representation before calling. Fixes https://github.com/root-project/root/issues/14405",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14888:261,avail,available,261,https://root.cern,https://github.com/root-project/root/pull/14888,1,['avail'],['available']
Availability,TExecutorCRTP and TSequentialExecutor errors when building application with CUDA 11.6+,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11511:38,error,errors,38,https://root.cern,https://github.com/root-project/root/issues/11511,1,['error'],['errors']
Availability,TExecutorCRTP and TSequentialExecutor errors when building application with Kokkos 3.7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:38,error,errors,38,https://root.cern,https://github.com/root-project/root/issues/11495,1,['error'],['errors']
Availability,"TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:257:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 257 | auto TExecutorCRTP<SubC>::MapReduce(F func, ROOT::TSeq<INTEGER> args, R redfunc) -> typename std::result_of<F(INTEGER)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:9196,error,error,9196,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,"TFile's ctor's error message should point to TFile::Open when filename contains ""://""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10039:15,error,error,15,https://root.cern,https://github.com/root-project/root/issues/10039,1,['error'],['error']
Availability,TFormula error when loading gdml using matrix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/13074,1,['error'],['error']
Availability,TGCommandLinePlugin Up-Down Arrows and Tab Keys,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:23,Down,Down,23,https://root.cern,https://github.com/root-project/root/issues/7180,1,['Down'],['Down']
Availability,TGraph copy constructor error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7302:24,error,error,24,https://root.cern,https://github.com/root-project/root/issues/7302,1,['error'],['error']
Availability,"TGraph(Asymm,Bent)Errors getters segfault in PyROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13600:18,Error,Errors,18,https://root.cern,https://github.com/root-project/root/issues/13600,1,['Error'],['Errors']
Availability,TH2PolyBin should be able to store errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340:35,error,errors,35,https://root.cern,https://github.com/root-project/root/issues/8340,1,['error'],['errors']
Availability,TH::Divide create Sumw2 if binomial errors are requested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2611:36,error,errors,36,https://root.cern,https://github.com/root-project/root/pull/2611,1,['error'],['errors']
Availability,TH::Divide warn if binomial errors are requested but not computed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2610:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/2610,1,['error'],['errors']
Availability,"TIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:11348,Error,Error,11348,https://root.cern,https://github.com/root-project/root/issues/12428,2,"['Error', 'error']","['Error', 'error']"
Availability,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10626:105,avail,available,105,https://root.cern,https://github.com/root-project/root/pull/10626,1,['avail'],['available']
Availability,"TLS is currently not suppored in the JIT. However, it's possible to; enable emulated TLS support in LLVM which means that we now support; TLS across all architectures. The performance downsides of this; should be neglectiable and can be easily worked around (by merging; TLS variables into a single one). Patch created with a lot of help from Lang Hames and Pavel Labath!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208:184,down,downsides,184,https://root.cern,https://github.com/root-project/root/pull/1208,1,['down'],['downsides']
Availability,TMVA Errors while building the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:5,Error,Errors,5,https://root.cern,https://github.com/root-project/root/issues/10461,1,['Error'],['Errors']
Availability,TMVA GPU features are enabled only when both the cuda and tmva-gpu flags are enabled. These flags are not used anywhere else. It looks like the cuda flag is redundant in this case. . Related forum post - https://root-forum.cern.ch/t/feature-request-enable-cuda-if-detected/32764,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3438:157,redundant,redundant,157,https://root.cern,https://github.com/root-project/root/pull/3438,1,['redundant'],['redundant']
Availability,"TMVA headers must be included before TODBCServer.h to avoid compile error in TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:68,error,error,68,https://root.cern,https://github.com/root-project/root/issues/16638,2,['error'],['error']
Availability,TProcessID::RecursiveRemove: prevent spurrious error msg.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5446:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/5446,1,['error'],['error']
Availability,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11663:453,error,errors,453,https://root.cern,https://github.com/root-project/root/issues/11663,2,"['error', 'failure']","['errors', 'failure']"
Availability,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5464:48,avail,available,48,https://root.cern,https://github.com/root-project/root/pull/5464,1,['avail'],['available']
Availability,TTree: Creating a branch with std::vector can raise an internal error when mixing I/O systems.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:64,error,error,64,https://root.cern,https://github.com/root-project/root/issues/10240,1,['error'],['error']
Availability,TTreeCache::FillBuffer spurrious error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8048:33,error,error,33,https://root.cern,https://github.com/root-project/root/issues/8048,1,['error'],['error']
Availability,TTreeReader: error out for STL within TClonesArray.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12137:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/12137,2,['error'],['error']
Availability,TWebFile: error handling for Status Code 301 without Location,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/108:10,error,error,10,https://root.cern,https://github.com/root-project/root/pull/108,1,['error'],['error']
Availability,TWebFile::GetFromWeb10 error - redirect without location from host,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14429:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/14429,1,['error'],['error']
Availability,TXMLEngine: buffer expand error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2280:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/2280,1,['error'],['error']
Availability,Teach the CI to add a note in the summary comment if the failure is observed on other PRs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14781:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/issues/14781,1,['failure'],['failure']
Availability,Technically this is not revert because of the faulty merge commit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/859:46,fault,faulty,46,https://root.cern,https://github.com/root-project/root/pull/859,1,['fault'],['faulty']
Availability,Temporary change to debug assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7297:36,failure,failure,36,https://root.cern,https://github.com/root-project/root/pull/7297,1,['failure'],['failure']
Availability,Test 25 had a minor difference in size compared to the reference value stored; in the reference file. This is a simple ratio plot example. All the other formats are; ok. A pdf comparison with a previous version shows that the two pdf files are the; same. So we give a bit more error margin.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12343:277,error,error,277,https://root.cern,https://github.com/root-project/root/pull/12343,2,['error'],['error']
Availability,"Test directories should be added using ROOT_ADD_TEST_SUBDIRECTORY. If add_subdirectory is used the test binaries get installed during ""make install"". if(testing) is redundant - it is already part of the ROOT_ADD_TEST_SUBDIRECTORY macro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2247:165,redundant,redundant,165,https://root.cern,https://github.com/root-project/root/pull/2247,1,['redundant'],['redundant']
Availability,Test error/warning/info messages in RDF tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/5845,1,['error'],['error']
Availability,Test failure in RNTuple: RNTuple.TClassEBO fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/issues/12428,1,['failure'],['failure']
Availability,Test failure with `nbconvert-7.14`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14303:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/issues/14303,1,['failure'],['failure']
Availability,Test failures in RNTuple: 32 bit specific,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/12427,1,['failure'],['failures']
Availability,Test failures in root7 tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/8073,1,['failure'],['failures']
Availability,Test failures in tutorial-roofit when building without FFTW,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8245:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/8245,1,['failure'],['failures']
Availability,Test failures on MacOS with Xcode 12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/6563,1,['failure'],['failures']
Availability,Test failures on s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/10409,1,['failure'],['failures']
Availability,"Test failures with C++17, but without `runtime_cxxmodules`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/13058,1,['failure'],['failures']
Availability,Test failures with Python 3.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15430:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/15430,1,['failure'],['failures']
Availability,Test failures with ROOT master on Gentoo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:5,failure,failures,5,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failures']
Availability,"Tests.h:22,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:17:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx: In member function ‘void PDFTest::compareFixedValues(double&, bool, bool, bool, unsigned int)’:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:355:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 355 | EXPECT_GT(sumDiffs/outputsScalar.size(), -toleranceCompare) << ""Batch outputs biased towards negative."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:356:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 356 | EXPECT_LT(sumDiffs/outputsScalar.size(), toleranceCompare) << ""Batch outputs biased towards positive."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:357:25: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 357 | EXPECT_LT(sqrt(sumVars/outputsScalar.size()), toleranceCompare) << ""High standard deviation for batch results vs scalar."";; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}. ```. ### Setup; commit 92c90e8deff323fd2eab700e384dd3944b754471; gcc (GCC) 12.2.0; 6.1.3-arch1-1; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12006:2204,toler,toleranceCompare,2204,https://root.cern,https://github.com/root-project/root/issues/12006,4,"['down', 'error', 'toler']","['download', 'error', 'toleranceCompare']"
Availability,Thanks @etejedor for noticing the error messages I missed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1309:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/1309,1,['error'],['error']
Availability,Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002; ```; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:200,error,errors,200,https://root.cern,https://github.com/root-project/root/issues/9424,2,"['avail', 'error']","['available', 'errors']"
Availability,That should fix a recent nightly failure with gcc11,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276:33,failure,failure,33,https://root.cern,https://github.com/root-project/root/pull/12276,1,['failure'],['failure']
Availability,"The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore; moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13646:10,Error,Error,10,https://root.cern,https://github.com/root-project/root/pull/13646,4,['Error'],['Error']
Availability,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build against. However, this means that binary releases become sensitive to minor sdk upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact that the current sdk's parent directory has a symlink MacOSX.sdk which points to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7625:236,resilien,resilient,236,https://root.cern,https://github.com/root-project/root/pull/7625,1,['resilien'],['resilient']
Availability,"The CMAKE_OSX_SYSROOT exports the exact version of the sdk which we build; against. However, this means that binary releases become sensitive to minor sdk; upgrades (eg. MacOSX11.1.sdk -> MacOSX11.2.sdk). Our infrastructure is; relatively resilient to such changes. This patch introduces a workaround to address this issue -- it uses the fact; that the current sdk's parent directory has a symlink MacOSX.sdk which points; to the current sdk. This should resolve root-project/root#7021.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7628:239,resilien,resilient,239,https://root.cern,https://github.com/root-project/root/pull/7628,2,['resilien'],['resilient']
Availability,"The Core module is now just called `Core`, and no longer `libCore.so`,; which leads to the confusing PCM file name `libCore.so.pcm` which is 75%; just boilerplate prefixes and suffixes. This also make the error; messages from clang more readable now as they use the same module name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/878:205,error,error,205,https://root.cern,https://github.com/root-project/root/pull/878,1,['error'],['error']
Availability,"The Failure is visible on the GCC 12 / Fedora 36 build: https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3285/LABEL=ROOT-fedora36,SPEC=default,V=master/testReport/junit/projectroot.roottest.root.tree/branches/roottest_root_tree_branches_make/; for example:; ```; +Error in <TTree::Branch>: The class requested (vector<int>) for the branch ""vec"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (vector<int>) to avoid to write corrupted data.; ```; This indicates that the generation of the dictionary for `std::vector<int>` failed even-though it is explicitly requested as part of the G__Core.cxx dictionary. . And indeed when inspecting the build log we see for `G__Core.cxx`:; ```; Warning: Unused class rule: vector<Int_t> ; ```. I narrowed down the problem to the presence of:; ```; -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes ; ```; on the command line. And it can easily be reproduce with the files:; ```; // a.h; #include <vector>; ```; and; ```; // aLinkDef.h ; #pragma link C++ class vector<Int_t>+;; ```; and with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx a.h aLinkDef.h; ```; we get a proper dictionary for the vector. While with; ```; /home/sftnight/build/manual/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/sftnight/build/manual/build/lib/libCore.so -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes a.h aLinkDef.h ; ```; we get an empty dictionary and the warning:. ```; Warning: Unused class rule: vector<Int_t> ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11329:4,Failure,Failure,4,https://root.cern,https://github.com/root-project/root/issues/11329,3,"['Error', 'Failure', 'down']","['Error', 'Failure', 'down']"
Availability,"The Fedora Packaging Guidelines some time ago added a section on packaging javascript files. This section says that minified scripts should be treated as compiled code. And like for programs written in other languages, pre-compiled code that is part of the sources must not be used in packaging, but must be regenerated from sources during the package build. I recently implemented these guidelines in the root package and found some issues. This pull request has three commits. 1) The word ""default"" is a reserved word in the language, and when used as a key in a dictionary it must be quoted. The yuicompressor minifier complains about this:; ```; $ yuicompressor etc/notebook/JsMVA/js/DecisionTree.js ; [ERROR] in etc/notebook/JsMVA/js/DecisionTree.js; 57:24:invalid property id; ```; 2. In one place (and one place only) in the script a construct from a very new version of the javascript standard is used for defining default values to function parameters. This unnecessarily makes the code incompatible with old browsers. It also makes it hard to run the minification during the package build as both yuicompressor and uglufyjs choke on it.; ```; $ yuicompressor etc/notebook/JsMVA/js/NeuralNetwork.js ; [ERROR] in etc/notebook/JsMVA/js/NeuralNetwork.js; 509:75:missing ) after formal parameters; ```; ```; $ uglifyjs etc/notebook/JsMVA/js/NeuralNetwork.js -c -m; Parse error at etc/notebook/JsMVA/js/NeuralNetwork.js:509,73; = function (divid, netobj, oldStructure=false) {; ^; SyntaxError: Unexpected token operator «=», expected punc «,»; ```; 3. The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some portin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520:707,ERROR,ERROR,707,https://root.cern,https://github.com/root-project/root/pull/1520,1,['ERROR'],['ERROR']
Availability,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010:762,down,downstream,762,https://root.cern,https://github.com/root-project/root/pull/9010,1,['down'],['downstream']
Availability,"The IO for the tests statistics never worked anyway, not even for a simple Gaussian likelihood. It is better to exclude the old test statistics classes complete from IO. Like this, the users don't even attempt to do IO with them, and to developers it's clear that IO backwards compatibility is not necessary, taking away some maintenance burden. Here are some simple scripts to show that storing test statistics doesn't work anyway. Create a NLL object, write it of file and minimize it:; ```c++; void write(); {; using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. auto *data = gauss.generateBinned(x, 10000);. auto nll = gauss.createNLL(*data);. RooWorkspace ws(""ws"");; ws.import(*nll);. ws.Print();. ws.writeToFile(""ws.root"");. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. Attempt to read the NLL and minimize it again:; ```c++; void open() {. auto f = TFile::Open(""ws.root"");. auto ws = f->Get<RooWorkspace>(""ws"");. ws->Print();. ws->function(""nll_gauss_genData"")->Print();. auto nll = static_cast<RooNLLVar*>(ws->function(""nll_gauss_genData""));. auto& pdf = nll->function();; auto& data = nll->data();. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. The result is completely off this time. It was also confirmed with Wouter in one of the RooFit meetings that IO of the old test statistics never really worked and was also not intended to be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11909:326,mainten,maintenance,326,https://root.cern,https://github.com/root-project/root/pull/11909,1,['mainten'],['maintenance']
Availability,"The IO of RooFit proxies can be quite fragile sometimes, and it can happen when reading a RooProduct that the `_proxyList` is not synced with the proxy members. In dbc96810, I decided to throw an exception is this case, but I realized this was too strong: too many old workspace are affected. In all cases that I know of, one can simply recover by correctly resetting the `_proxyList`. This is now what is done, and only a warning is printed. The warning includes information on all the proxies, so the user can figure out themselves if what RooFit is doing here is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12046:337,recover,recover,337,https://root.cern,https://github.com/root-project/root/pull/12046,1,['recover'],['recover']
Availability,"The RArrowDS in v6.16 did not support recent arrow versions.; This commits syncs it with v6.18, v6.20 and master. This should fix [these](http://cdash.cern.ch/viewBuildError.php?buildid=865186) compilation failures in 6.16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5505:206,failure,failures,206,https://root.cern,https://github.com/root-project/root/pull/5505,1,['failure'],['failures']
Availability,"The RException class is supposed to serve as base class for all ROOT; exceptions. It contains an `RError` member with diagnostic information.; The `RResult<T>` class can be used as a return value of operations that; may fail. The `RResult<T>` object wraps either a valid value or an `RError`.; If an error state remains unchecked, the `RResult` class will throw an; exception on destruction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683:300,error,error,300,https://root.cern,https://github.com/root-project/root/pull/4683,1,['error'],['error']
Availability,The RNTuple datasource currently does not look at cluster boundaries when splitting the dataset into entry ranges that are fed to TBB tasks via RDF. A more sensible task splitting would avoid redundant decompression work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10871:192,redundant,redundant,192,https://root.cern,https://github.com/root-project/root/issues/10871,1,['redundant'],['redundant']
Availability,"The RooAbsMinimizerFcn object is copied by the fitter, so the; `_evalCounter` of the original object will never be increased. Hence,; `RooMinimizer::evalCount()` will always return zero, which is; unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests; to habe a second counter variable that is a member of the `RooMinimizer`; itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10598:245,reliab,reliable,245,https://root.cern,https://github.com/root-project/root/pull/10598,1,['reliab'],['reliable']
Availability,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11093:267,error,errors,267,https://root.cern,https://github.com/root-project/root/pull/11093,2,['error'],['errors']
Availability,"The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects.; However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas).; However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit.; With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3922:553,error,error,553,https://root.cern,https://github.com/root-project/root/pull/3922,1,['error'],['error']
Availability,"The RooFit test statistic classes give wrong results if they are; constructed from multiple comma-separated ranges. This can cause errors,; such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated; ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7827:131,error,errors,131,https://root.cern,https://github.com/root-project/root/pull/7827,1,['error'],['errors']
Availability,"The RooFitDriver mutates the RooAbsArgs it evaluates by setting a; specific index token to quickly look up cached information for a given; RooAbsArg. Because of this, it's not possible to evaluate two computation graphs; that share RooAbsArgs with two separate RooFitDrivers. However, this usecase needs to be supported, because in RooStats is; often happens that different likelihoods based on the same model are; instantiated. The key to the solution in this commit is the insight that for each; likelihood, almost the full compute graph is cloned anyway, *except* for; the parameters. Therefore, the solution proposed in this commit is to; not set the data tokens for the parameters and not fill the data map; with their values. Instead, when querying their values, they are just; retrieved from the object itself. This is possible because parameters; are always scalar, and the RooAbsReal can already cache scalar members; in the `_value` field. This PR fixes the failure of some RooStats tutorials if BatchMode would be enabled by default. After this PR is merged, the CI would be completely green if `BatchMode(""cpu"")` would be made the default!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12925:968,failure,failure,968,https://root.cern,https://github.com/root-project/root/pull/12925,1,['failure'],['failure']
Availability,"The TChain::Add() documentation says. `Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name`. While `[]` and `*` work, I have found that `?` does not. Consider a script `chTest.C` containing the following:; `{` ; ` TChain* ch = new TChain(""ch"", ""ch"");`; ` ch->Add(""file?.root"");`; ` ch->GetEntry(0);`; `}`. Then run the following lines at the terminal:; ` % touch file1.root`; ` % touch file1.root`; ` % root chtest.C`. The output is:; `root [0]`; `Processing chtest.C...`; `Error in <TFile::TFile>: file /Users/jasondet/Work/Coding/chtest/file does not exist`. Replacing the line `ch->Add(""file?.root"");` with `ch->Add(""file*.root"");` or `ch->Add(""file[12].root"");` gives expected file read errors, indicating that those wildcards are working correctly. I'm using:; ` % root --version`; `ROOT Version: 6.26/00`; `Built for macosx64 on Mar 03 2022, 06:51:13`; `From tags/v6-26-00@v6-26-00`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10239:528,Error,Error,528,https://root.cern,https://github.com/root-project/root/issues/10239,2,"['Error', 'error']","['Error', 'errors']"
Availability,"The TFile objects need to be closed before the ROOT files can be; deleted. Otherwise, we get errors such as these on Windows 10:. ```; Traceback (most recent call last):; File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>; os.remove(""pyroot006_file_{}.root"".format(i)); PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10378:93,error,errors,93,https://root.cern,https://github.com/root-project/root/pull/10378,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"The TestData target is currently declared ALL, which means it is always executed during the build.; However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:121,down,downloads,121,https://root.cern,https://github.com/root-project/root/pull/402,4,['down'],"['download', 'downloaded', 'downloads']"
Availability,"The Vavilov test fails on 32 bit ix86 in Fedora 29. Testing Cdf and Cdf_c; kappa = 0.01; Max abs diff: 1.2e-07, max rel diff: 1.9e-05, max diff cdf+cdf_c-1: 6.2e-15, pass=0; kappa = 0.04; Max abs diff: 1.4e-07, max rel diff: 1.9e-05, max diff cdf+cdf_c-1: 1.1e-15, pass=1; kappa = 0.07; Max abs diff: 2.5e-06, max rel diff: 0.061, max diff cdf+cdf_c-1: 1.6e-15, pass=1; kappa = 0.1; Max abs diff: 6.1e-06, max rel diff: 0.038, max diff cdf+cdf_c-1: 6.7e-16, pass=1; kappa = 0.4; Max abs diff: 1.7e-06, max rel diff: 0.018, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 0.7; Max abs diff: 2.5e-06, max rel diff: 0.0092, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 1; Max abs diff: 1.9e-06, max rel diff: 0.0072, max diff cdf+cdf_c-1: 4.4e-16, pass=1; kappa = 4; Max abs diff: 2e-06, max rel diff: 0.15, max diff cdf+cdf_c-1: 2.2e-16, pass=1; kappa = 7; Max abs diff: 1.7e-06, max rel diff: 0.026, max diff cdf+cdf_c-1: 4.4e-16, pass=1; kappa = 10; Max abs diff: 2.2e-06, max rel diff: 0.033, max diff cdf+cdf_c-1: 2.2e-16, pass=1; Number of failed tests: 1. This PR changes the allowed error from 5e-15 to 7e-15, allowing the 6.2e-15 result to pass. The test does not fail on Fedora 28 which uses the same compiler (gcc 8.1.1). The default compiler flags for ix86 have changed between Fedora 28 and 29 though, and the following flags were added: -msse2 -mfpmath=sse -mstackrealign. The -msse2 flag is my guess for the cause of the difference.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2273:1089,error,error,1089,https://root.cern,https://github.com/root-project/root/pull/2273,1,['error'],['error']
Availability,"The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8934:1221,avail,available,1221,https://root.cern,https://github.com/root-project/root/pull/8934,2,['avail'],['available']
Availability,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:381,failure,failure,381,https://root.cern,https://github.com/root-project/root/pull/15464,1,['failure'],['failure']
Availability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16314:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/16314,2,"['avail', 'down']","['available', 'down']"
Availability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. (cherry picked from commit fd97311519a5d64f0110686db46e0d912503751c, backport of https://github.com/root-project/root/pull/16314)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16318:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/16318,2,"['avail', 'down']","['available', 'down']"
Availability,"The `ClingMMapper` must remain available until all `ClingMemoryManager`s are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. ---. This aims to backport https://github.com/root-project/root/pull/16314, but it's a bit more complicated with LLVM 13. We need to decide if we want this or just leave v6.30 and v6.28 alone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16319:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/16319,2,"['avail', 'down']","['available', 'down']"
Availability,"The `ClingMMapper` must remain available until all `ClingMemoryManagers` are destructed, which is typically during shutdown of `IncrementalJIT`. This was not the case for the global object `MMapperInstance` that was introduced during the upgrade to LLVM 13 because `libCling` variables are destructed before running `TROOT` `atexit` handlers that shut down the JIT. In practice, it happened to work but this will change with the upgrade to LLVM 18 where we see crashes in some tests, potentially because of upstream commit https://github.com/llvm/llvm-project/commit/47f5c54f997a59bb2c65abe6b8b811f6e7553456. See also commits e0f6c04660 (""Prevent static destruction from ending DefaultMMapper too early"") and 80c14bb948 (""Extend lifetime of SectionMemoryManager::DefaultMMapper, again"") for the same problem that we previously patched in our copy of LLVM. This differs from commit fd97311519a5d64f0110686db46e0d912503751c in master because LLVM doesn't support passing move-only lambdas. (cherry picked from commit 41cbd5bafaf5037f52dec9864fc01d500d54578f, backport of https://github.com/root-project/root/pull/16314 / https://github.com/root-project/root/pull/16319)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16387:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/16387,2,"['avail', 'down']","['available', 'down']"
Availability,"The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in; HistFactory can both interpolate asymmetric up-and-down variations; between the +/- one standard deviation such that both the first and; second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of; taking constant interpolation parameters, it takes other `RooAbsReals`.; That means it makes no sense for that class to cache the polynomial; coefficients that have to re recomputed anyway each time the input; changes. It uses an optimized formula to do the interpolation on the; fly. The `FlexibleInterpVar` however precomputes and caches the polynomial; coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of; `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be; equivalent. * Most importantly, and this was the motivation for this PR now:; when we do the code generation for AD, we can't pre-compute cached; coefficients because it would bloat the generated code with constant; arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and; `high=1.2` that shows the interpolated values are agreeing to the 5e-4; level. This is completely accepatable for such an ad-hoc polynomial; motivation, where the shape is not given by any physical meaning anyway; but just by the continuity condition at the boundaries. And at the; boundaries (and `param=0`), the difference between both implementations; goes to zero. It was also checked that this change has no performance; effect on fitting the full ATLAS Higgs combination modes. ```txt; param ref new diff_abs diff_rel; 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00; 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06; 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05; 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04; 4 -0.65 0.9317",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:120,down,down,120,https://root.cern,https://github.com/root-project/root/pull/13067,1,['down'],['down']
Availability,"The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:; ```python; import ROOT; ROOT.PyConfig.IgnoreCommandLineOptions = True; ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:; ```python; import ROOT; ROOT.gROOT.SetBatch(True); ```; or in the command line:; ```bash; > python my_script.py -b; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3731:292,error,error,292,https://root.cern,https://github.com/root-project/root/pull/3731,1,['error'],['error']
Availability,"The `R__ALWAYS_INLINE` macro was introduced by commit b7c9be5 in TBufferJSON. However, it breaks the build with GCC and the `-Og` flag, for debug-compatible optimizations:. ```txt; In member function ‘void TBufferJSON::JsonWriteFastArray(const T*, Int_t, const char*, void (TBufferJSON::*)(const T*, Int_t, const char*)) [with T = bool]’,; inlined from ‘virtual void TBufferJSON::WriteFastArray(const Bool_t*, Int_t)’ at /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3296:22:; /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3034:23: error: inlining failed in call to ‘always_inline’ ‘void TBufferJSON::JsonWriteArrayCompress(const T*, Int_t, const char*) [with T = bool]’: function not considered for inlining; 3034 | R__ALWAYS_INLINE void TBufferJSON::JsonWriteArrayCompress(const T *vname, Int_t arrsize, const char *typname); ```. Libraries other than ROOT have also encountered similar problems: https://github.com/Cyan4973/xxHash/pull/804. The `R__ALWAYS_INLINE` macro is probably not necessary for these templated functions, because the compiler figures out itself whether it's worth to inline the templated functions or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13894:590,error,error,590,https://root.cern,https://github.com/root-project/root/pull/13894,1,['error'],['error']
Availability,"The `RooAbsMinimizerFcn` and `RooMinimizerFcn` classes are; implementation details of the `RooMinimizer`. In one of the recent RooFit meetings, it was decided together with users; that this should be no problem, and doing so will greatly increase the; developers flexibility in updating the RooMinimizer implementation. This removal is mentioned in the v628 release notes. Furthermore, this PR suggests to make `RooMinimizer::applyCovarianceMatrix` a public function, and extends `RooAbsMinimizerFcn` by a `fit` function to avoid downcasting in the RooMinimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9874:530,down,downcasting,530,https://root.cern,https://github.com/root-project/root/pull/9874,1,['down'],['downcasting']
Availability,The `RooCFunction*Binding` classes and the associated `RooFit::bindFunction()` and `RooFit::bindPdf()` functions are deprecated and will be removed in ROOT 6.32. Their functionality is redundant with the `RooFormulaVar` and `RooGenericPdf` that should be used instead. This is another deprecation done in the spirit of avoiding duplicate interfaces and user confusion.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11983:185,redundant,redundant,185,https://root.cern,https://github.com/root-project/root/pull/11983,1,['redundant'],['redundant']
Availability,"The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10465:151,error,errors,151,https://root.cern,https://github.com/root-project/root/pull/10465,11,"['error', 'redundant', 'toler']","['error', 'errors', 'redundant', 'tolerance']"
Availability,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590:103,failure,failure,103,https://root.cern,https://github.com/root-project/root/pull/8590,2,"['down', 'failure']","['down', 'failure']"
Availability,"The `c++ --print-file-name` command now seems to work, and it is indeed the more appropriate way to get the location of the asan shared library on MacOS. Also fix the following problems occurring when building on MacOS with -Dasan=ON. Error:; ```; CMake Error at cmake/modules/CheckAtomic.cmake:59 (message):; Host compiler appears to require libatomic, but cannot find it.; ```; Fix: fix typos in asan symbols (extra `_`) and specify correct linker flag (-U). Error:; ```; error: static AddressSanitizer runtime is not supported on darwin; ```; Fix: remove `-static-libsan` flag. This is required by latest MacOS Xcode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16499:235,Error,Error,235,https://root.cern,https://github.com/root-project/root/pull/16499,4,"['Error', 'error']","['Error', 'error']"
Availability,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11117:333,failure,failures,333,https://root.cern,https://github.com/root-project/root/pull/11117,2,['failure'],"['failure', 'failures']"
Availability,"The `df103_NanoAODHiggsAnalysis` tutorial, already available in C++, has been converted to PyROOT. In this tutorial, many functions are called as arguments to nodes in the RDataFrame computational graph. In Python, these could be either written as multiline strings and then exposed to the C++ interpeter one by one with `gInterpreter.Processline()`, or put all together in one C++ header which is then declared to the interpreter via `gInterpreter.Declare()`. This second approach has been pursued, thus there are two files making up the Python version of the tutorial: one `.h` file for the header and one `.py` file for the analysis itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4019:51,avail,available,51,https://root.cern,https://github.com/root-project/root/pull/4019,1,['avail'],['available']
Availability,"The `dnn_cuda` library is only an intermediate library that is not meant to be installed with ROOT, so it needs to be static since TMVA needs to export its dependencies and if this library is shared; the dependency won't be there after a `make install'. Therefore the error in CMake:. ```; CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""TMVA"" which requires target ""dnn_cuda"" that is not in the export set.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3066:268,error,error,268,https://root.cern,https://github.com/root-project/root/pull/3066,2,"['Error', 'error']","['Error', 'error']"
Availability,"The `gMainDict` should be borrowed, i.e. we are not calling Py_INCREF(gMainDict). Like this, we avoid unexpectedly affecting how long `__main__` is kept alive. The `gMainDict` is only used in `Exec()`, `ExecScript()`, and `Eval()`, which should not be called after `__main__` is garbage collected anyway. Closes #16402. Needs to be backported to 6.32. Equivalent CPyCppyy PR:; https://github.com/wlav/CPyCppyy/pull/37",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16403:153,alive,alive,153,https://root.cern,https://github.com/root-project/root/pull/16403,1,['alive'],['alive']
Availability,"The `max template recursion depth reached` error is due to the; implementation of std::tuple's move constructor in some STL; implementations (notably, gcc). The logic has been modified to avoid copying large tuples:; - the number of slots is now fixed for each node at construction time; - all the logic that was implemented by the `CreateSlot` methods has; been moved to the corresponding nodes' constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/740:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/740,1,['error'],['error']
Availability,"The `max template recursion depth reached` error is due to the; implementation of std::tuple's move constructor in some STL; implementations (notably, gcc). The logic has been modified to avoid copying large tuples:; - the number of slots is now fixed for each node at construction time; - all the logic that was implemented by the `CreateSlot` methods has; been moved to the corresponding nodes' constructors. Cherry-pick conflicts:; 	tree/treeplayer/inc/ROOT/TDFNodes.hxx; 	tree/treeplayer/src/TDFNodes.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/743:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/743,1,['error'],['error']
Availability,"The `pyobj`'s `tp_flags` can have a number of other bits set, for example `Py_TPFLAGS_HEAPTYPE` and `Py_TPFLAGS_BASETYPE`. Only forward the two bits for `Py_TPFLAGS_HAVE_GC` and (since Python 3.11) `Py_TPFLAGS_MANAGED_DICT`. This fixes test failures seen with a Debug build on Fedora 38, but likely affecting all builds against Python 3.11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12857:241,failure,failures,241,https://root.cern,https://github.com/root-project/root/pull/12857,1,['failure'],['failures']
Availability,"The `report` attribute is not present in all types of errors, as seen in e.g. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/184277/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13617:54,error,errors,54,https://root.cern,https://github.com/root-project/root/pull/13617,1,['error'],['errors']
Availability,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12696:136,error,error,136,https://root.cern,https://github.com/root-project/root/pull/12696,1,['error'],['error']
Availability,"The `target` attribute in a rule specification is mandatory, but the list can be empty, in which case `TSchemaRule::GetTarget()` returns `nullptr`. In particular, @Nowakus reported the following error for read rules associated with class `ElementLinkBase`, which happens to have an empty `target` list; ```; Fatal: rule->GetTarget() != nullptr violated at line 1006 of; `/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx'; aborting; ```; Therefore, in principle we should also allow these rules for now. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12049:195,error,error,195,https://root.cern,https://github.com/root-project/root/pull/12049,1,['error'],['error']
Availability,"The argument parsing in rootcling has become quite hard (if not impossible) to maintain. This PR replaces the handmade argument parsing with the [LLVM's CommandLine](https://github.com/root-project/root/blob/master/interpreter/llvm/src/docs/CommandLine.rst) framework.; Use the llvm command line option parser and phase out the hand crafted one. It uses declarative-style option specification, improves type-safety and most importantly moves out from rootcling the cumbersome argument parsing logic. One of the major advantages is that help messages are automatically generated:; ```; OVERVIEW: rootcling; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file>; ; OPTIONS:; ; Generic Options:; ; -help - Display available options (-help-hidden for more); -help-list - Display list of available options (-help-list-hidden for more); -version - Display the version of this program; ; rootcling common options:; ; -D=<string> - Specify defined macros.; -I=<string> - Specify an include path.; -W=<string> - Specify compiler diagnostics options.; -c - Deprecated, legacy flag which is ignored.; -cxxmodule - Generate a C++ module.; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Sp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:758,avail,available,758,https://root.cern,https://github.com/root-project/root/pull/4171,2,['avail'],['available']
Availability,"The array interface now inferes the size of the data-type with `sizeof` by itself. This fixes [this](https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-master/1703/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6-i686/testReport/junit/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/) failure for `long` types on 32bit sytems not being 8 bytes long.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1925:304,failure,failure,304,https://root.cern,https://github.com/root-project/root/pull/1925,1,['failure'],['failure']
Availability,"The assert is not needed and it could also fail, if for some random number generated value==2*sigma. This could explain some failure observed in TMVA CNN tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5468:125,failure,failure,125,https://root.cern,https://github.com/root-project/root/pull/5468,1,['failure'],['failure']
Availability,"The assertion failure is not visible anymore (git-bisect points to commit 580fa949b0 even though that looks unrelated), so revert the change for now. This reverts commit ffe867985b715305d11e7b7adcbde9793bc9fd52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13099:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/13099,1,['failure'],['failure']
Availability,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11646:508,error,errors,508,https://root.cern,https://github.com/root-project/root/pull/11646,1,['error'],['errors']
Availability,"The buffer tests for histograms have slightly different rounding errors between buffered/not buffered histograms which exceed a few epsilons, so the test fails if the tolerances are too strict. *Note:* This test doesn't fail on Jenkins, but *does* fail on my machine without this patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/2138,2,"['error', 'toler']","['errors', 'tolerances']"
Availability,"The builtin xrootd version 4.8.5 has the -Werror flag in release mode,; which causes build errors with future compilers such as happened with; gcc9. The -w flag suppresses all warnings even if -Werror is set; afterwards. Future xrootd releases (4.12 and later) have the -Werror; flag removed in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6294:91,error,errors,91,https://root.cern,https://github.com/root-project/root/pull/6294,1,['error'],['errors']
Availability,"The changed tests were failing with errors like the one below:. ```; Traceback (most recent call last):; File ""root/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py"",; line 22, in test_dynamiccast; self.assertEquals(type(o_upcast), TObject); ^^^^^^^^^^^^^^^^^; AttributeError: 'TClassDynamicCast' object has no attribute 'assertEquals'.; Did you mean: 'assertEqual'?; ```. These errors were observed with Python 3.12, but I guess they also happen with earlier versions of Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11655:36,error,errors,36,https://root.cern,https://github.com/root-project/root/pull/11655,2,['error'],['errors']
Availability,The changes in the commits are taken from upstream. Each commit references the upstream commit(s) that were needed to implement those changes. This should fix #13410 and hopefully not provoke other test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13821:203,failure,failures,203,https://root.cern,https://github.com/root-project/root/pull/13821,1,['failure'],['failures']
Availability,"The changes in this PR address this forum post...; https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369; ...and follows up on the discussion here:; https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:; 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes; 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf; 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets; 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13651:876,error,errors,876,https://root.cern,https://github.com/root-project/root/pull/13651,1,['error'],['errors']
Availability,"The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17.; The errors are all of the type:; ```; tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8477:57,error,errors,57,https://root.cern,https://github.com/root-project/root/pull/8477,4,['error'],"['error', 'errors']"
Availability,The changes to fix the build process with GCC6 mentioned in [ROOT-8180](https://sft.its.cern.ch/jira/browse/ROOT-8180) only apply to GCC6. The same problem occurs again using GCC7 because of the equality check to major version 6. . The commit is tested on Arch Linux 64Bit and fixes the compile errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/731:295,error,errors,295,https://root.cern,https://github.com/root-project/root/pull/731,1,['error'],['errors']
Availability,"The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location. # Additional diagnostic. To find the bug, I also add some diagnostic functions for the PTX compiler. 1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error. example; ```; - example before:; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes. - example after:; cling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; cling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.; cling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.; ```. 2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707:324,error,error,324,https://root.cern,https://github.com/root-project/root/pull/6707,9,"['avail', 'error']","['available', 'error']"
Availability,"The comments in `ROOT_ADD_GTEST` suggest that the macro can also be used; in your own projects based on ROOT, only that when ROOT was configured; with `testing=OFF`, the ROOT::TestSupport library is not available. However, in the case where ROOT::TestSupport is not available, the; ROOT_ADD_GTEST macro is dysfunctional because the linkage against; `gtest` is missing. It is only indirectly picked up via; ROOT::TestSupport. This breaks the compilation of all tests, even if; they don't use the TestSupport library. To make this work again without; the user having to explicitly link against `gtest`, this PR suggests; to always link against `gtest` in the ROOT_ADD_GTEST macro. Also, make the linking against ROOT::TestSupport in RooFit tests explicit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16243:203,avail,available,203,https://root.cern,https://github.com/root-project/root/pull/16243,2,['avail'],['available']
Availability,The commit implements a few new unit tests and also fixes one bug related to the normalization of a RooAddPdf when the custom normalization set of its components is reset. There is also some code improvement by removing a redundant data member of the `RooAddPdf` and `RooAddModel` classes. More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11485:222,redundant,redundant,222,https://root.cern,https://github.com/root-project/root/pull/11485,1,['redundant'],['redundant']
Availability,"The commit mentioned in the title was leading to a build failure, fixed with this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4316:57,failure,failure,57,https://root.cern,https://github.com/root-project/root/pull/4316,1,['failure'],['failure']
Availability,"The compiler flag is not available in clang, tested with clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4727:25,avail,available,25,https://root.cern,https://github.com/root-project/root/pull/4727,1,['avail'],['available']
Availability,"The connection check only makes sense for `fail-on-missing=OFF`, where the result is used to decide whether to download a missing dependency as a builtin from the internet, or to disable the feature that has the missing dependency. With `fail-on-missing=ON`, it doesn't matter because disabling features is not allowed. Therefore, we can skip the connection check to save some configuration overhead and just assume we have internet: if a builtin can't be downloaded there will be a configuration failure either way. Closes #11603 without introducing an additional flag. To be backported to 6.32, because it will improve the packaging of the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15467:111,down,download,111,https://root.cern,https://github.com/root-project/root/pull/15467,3,"['down', 'failure']","['download', 'downloaded', 'failure']"
Availability,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10659:140,avail,available,140,https://root.cern,https://github.com/root-project/root/pull/10659,1,['avail'],['available']
Availability,"The current failure in snapshot is due to an ABI incompatibility (or so it seems) that we may have encountered before.; The failing line is:; {code:c++}; auto snapshotRDF = std::make_shared<RInterface<RLoopManager>>(std::make_shared<RLoopManager>(nullptr, validCols));; {code}; and one of the component of make_shared is the call to the following shared_ptr constructor; {code:c++}; // This constructor is non-standard, it is used by allocate_shared.; template<typename _Alloc, typename... _Args>; shared_ptr(_Sp_make_shared_tag __tag, const _Alloc& __a,; _Args&&... __args); : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/pull/2158,2,['failure'],['failure']
Availability,"The current implementation is broken (fObjPtr.release() deletes the; object thet we then return by pointer) and in general it is extremely; awkward to convince a std::shared_ptr to release ownership (and for good; reason, it only makes sense if you can be absolutely sure that there is; only one shared_ptr alive that owns that object). Instead of using RResultPtr::Release, we recommend moving the result; out of the RResultPtr. This effectively reverts commit 03fd58eec04ddf96c1596c02d4269185fef42b9f.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7485:307,alive,alive,307,https://root.cern,https://github.com/root-project/root/pull/7485,2,['alive'],['alive']
Availability,"The current implementation of `optimize_npartitions` of the Dask backend; queries information about the workers from the Dask client object. The; information is stored in the `client.scheduler_info()` return value; which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed; information. This is not always true. In certain scenarios, for example; when waiting for a batch system to return the available workers to the; dask client, the `workers` key will be present but its value will be an; empty dictionary. This is because the scheduler doesn't already know; which nodes of the cluster will become workers (this can be mitigated by; calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the; dictionary key `workers` and then checking if that value actually; contains something. fixes #9429",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9431:463,avail,available,463,https://root.cern,https://github.com/root-project/root/pull/9431,1,['avail'],['available']
Availability,"The current logic of pseudo-automatic modulemap discovery is a little fragile as it mounts a virtual file named module.modulemap in the location where the a give system library header is found (cuda.h, etc). However, if the libraries are squashed into a single folder then we end up mounting a file over another virtual file. This should be a hard error, however, on systems such as OSX some libraries already come with modulemap files and we should just not mount our predefined ones. This makes it very difficult to distinguish when to issue the hard error. While this patch is not a solution for the general when the modulemaps are automatically discovered (-fimplicit-module-maps), we can use the real file stems in cases where we are called with -fno-implicit-module-maps. As a side effect this fixes the *non-recommended* squashing of library header files into a single folder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5177:348,error,error,348,https://root.cern,https://github.com/root-project/root/pull/5177,2,['error'],['error']
Availability,"The declaration of `obj` has been moved to an outer scope in PR #15179, resulting in a warning (or error) from `-Wshadow`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15256:99,error,error,99,https://root.cern,https://github.com/root-project/root/pull/15256,1,['error'],['error']
Availability,"The default `SIGPIPE` handler installed by `TUnixSystem` does not do anything except print a message and possibly causing an endless loop of `SIGPIPE` handling:. ```; echo 'std::cout << ""foo"" << std::endl;' | root -l |& true; python -c 'import ROOT; print ""foo""' |& true; ```. This fixes ROOT-4568 and ROOT-7659. The alternative would be to remove all pending sigpipe signals which might have occurred while handling the signal itself. This would keep the current behavior and still fix the endless loop. . However think that not handling SIGPIPE by default would be a wiser choice as I don't see a real use case for printing that a SIGPIPE was received and then continuing normally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/413:167,echo,echo,167,https://root.cern,https://github.com/root-project/root/pull/413,1,['echo'],['echo']
Availability,"The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:; Fixes an unintended behavior. ## Changes or fixes:; The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11789:703,error,error,703,https://root.cern,https://github.com/root-project/root/pull/11789,1,['error'],['error']
Availability,The definition of `TExecutor::GetPoolSize()` causes errors in builds with `runtime_cxxmodules=OFF`:; ```; IncrementalExecutor::executeFunction: symbol '_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv' unresolved while linking symbol 'atexit'!; You are probably missing the definition of ROOT::TThreadExecutor::GetPoolSize() const; Maybe you need to load the corresponding shared library?; atexit not defined; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033:52,error,errors,52,https://root.cern,https://github.com/root-project/root/pull/7033,1,['error'],['errors']
Availability,"The different overloads of `RooAbsRealLValue::inRange()` implemented; different tolerances when checking if a value `x` falls inside a; specific range. Some overloads checked if the interval; `[x - 1e-6, x + 1e6]` is overlapping with the range, an other overload; checked if the interval `[x - 1e-8*x, x + 1e8*x]` is overlapping. It's better is this is done consistently and predictably so this commit; suggests to leave out these epsilon margins that were never documented.; For backwards compatibility, one can set a custom relative or absolute; epsilon via the `RooNumber` interface. Also, the checks if the range limits are `RooNumber::isInfinite()` were; removed. They were mathematically redundant, since in RooFit, +/-; infinity is simply defined as +/-1e30. This PR fixes some corner cases in which you get paradox results from rage checks, like in this example:; ```C++; RooRealVar x{""x"", ""x"", 1e-6, 2e-6};; RooRealVar y{""y"", ""y"", 1e30, 1e30};. std::cout << x.inRange(0.0, nullptr) << std::endl;; std::cout << y.inRange(0.0, nullptr) << std::endl;; // both checks will return true without this PR!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999:80,toler,tolerances,80,https://root.cern,https://github.com/root-project/root/pull/11999,2,"['redundant', 'toler']","['redundant', 'tolerances']"
Availability,"The downside is that builtin_xrootd requires an internet connection. So by making users that expect ROOT + remote files to ""just work"" happy, we might upset users that need want a way to build ROOT offline. There is a precedent: TBB is in the exact same situation and builtin_tbb is on by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5276:4,down,downside,4,https://root.cern,https://github.com/root-project/root/pull/5276,1,['down'],['downside']
Availability,"The downsteam code, -- like RooAddPdf::getValV for example -- assume; that a nullptr is passed when no normalization is requested. The case of; an empty norm set is not handled correctly in RooAddPdf::getValV,; leading to wrong results. However, some calling code passes an empty norm set to; RooAbsReal::getVal instead of a `nullptr` in an attempt to disable; normalization. This commit suggests to solve this ambiguity at the highest possible; level: right at the beginning of RooAbsReal::getVal. If the; normalization set is empty, the pointer pointing to it will be set to; `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR. The backport PR to 6.24 is https://github.com/root-project/root/pull/8372, which first go included in 6.24.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8364:4,down,downsteam,4,https://root.cern,https://github.com/root-project/root/pull/8364,1,['down'],['downsteam']
Availability,The env variable ROOTTEST_IGNORE_NUMBA is set in; rootspi/jenkins/root-build.cmake and select nodes; with expected failures of the tests. This goes along with https://github.com/root-project/rootspi/pull/75.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5476:115,failure,failures,115,https://root.cern,https://github.com/root-project/root/pull/5476,1,['failure'],['failures']
Availability,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10593:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/10593,1,['error'],['error']
Availability,The error was overly optimistic and may confuse users. This can be the result of literally anything going wrong in the distributed execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14633:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/14633,1,['error'],['error']
Availability,"The extended term needs a special correction, it should not just be; reevaluated with the squared weights replacing the weights. This is not; implemented correctly. The way how weights are handled in the batch mode was also simplified.; Previously, a dummy `RooRealVar` was created for the weight and the; squared weight each, but now the conventional name for the weight; variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:; https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10467:580,error,errors-with-,580,https://root.cern,https://github.com/root-project/root/pull/10467,1,['error'],['errors-with-']
Availability,"The fact that gradient computations are supported in a `ROOT::Math`; function wrapper was only transmitted by the static class type. However, this is rather inconvenient:. 1. If you forget to downcast your function to the gradient type, the; provided gradient won't be used. 2. Many minimizer function signatures must be overloaded for both the; function with and without gradients. 3. In RooFit, this caused particular pain: depending on if an external; gradient is provided, the function wrapper in the `RooMinimizer`; needs to have a different base class, and the RooMinimizer needs to; cast it correctly when fitting. This commit suggests two new virtual functions:. * `IBaseFunctionMultiDimTempl::HasGradient()` for multi-dim functions. * `IBaseFunctionOneDim::HasGradient()` for 1D functions. Like this, the gradient support can be queried without dynamic casting; at runtime, simplifying lots of other code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257:192,down,downcast,192,https://root.cern,https://github.com/root-project/root/pull/12257,1,['down'],['downcast']
Availability,"The failure seen in ROOT-9336 merging ATLAS histogram was caused by a bug in TH1::IsEmpty and ; TH1::ResetStats/GetStats ; TH1::ResetStats was setting the entries to zero for histograms with labels and the function TH1::IsEmpty was assuming than an histogram is empty if fTsumw AND entries == 0. Now we fix the protected function Th1::IsEmpty used in TH1Merger for the cas…e when both fTSumw=0 and fEntries=0, but in reality the bin contents are not zero.; We Add in this case a check to all bin contents, including underflow/overflows. We fix also TH1::GetStats() for the case of labels histograms. In this case when you have fTSumw=0 and fEntries !=0 (happening for the cases after calling SetBinContent or TH1::ResetStats) you want to compute the correct fTsumw and fTsumw2 values.; With these fixes now ResetStats() works correctly and set the correct histogram statistics (e.g. number of entries).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2114:4,failure,failure,4,https://root.cern,https://github.com/root-project/root/pull/2114,1,['failure'],['failure']
Availability,"The first commit introduces `DefineSlotEntry`, analogous to `DefineSlot` but also passes the entry number to the registered callable. The second commit is a simple refactoring of `Define` to separate user interface from internal details and error checking.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1216:241,error,error,241,https://root.cern,https://github.com/root-project/root/pull/1216,1,['error'],['error']
Availability,"The fix for newer TBB versions is in master, but 6.22.06 and below cannot use TBB 2021 and above, so CMake should reject these versions during the configuration phase. The error at compilation is known (usage of deprecated functionality which is dropped in TBB 2021.1.1):; ```; root-6.22.06/core/imt/src/TPoolManager.cxx:10:10: fatal error: tbb/task_scheduler_init.h: No such file or directory; #include ""tbb/task_scheduler_init.h""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6933:172,error,error,172,https://root.cern,https://github.com/root-project/root/issues/6933,2,['error'],['error']
Availability,"The following reproducer uses an excessive amount of memory:. ```python; import ROOT; ROOT.gROOT.SetBatch(True); ROOT.EnableImplicitMT(). h = {}; df = ROOT.RDataFrame('Events', 'DYJetsToLL.root'). # Types with vector<bool> are broken, see #6675; columns = [str(col) for col in df.GetColumnNames() if not 'Bool' in str(df.GetColumnType(col))]. for col in columns:; h[col] = df.Histo1D(col). for col in columns:; c = ROOT.TCanvas(col, col, 600, 600); h[col].Draw(); c.SaveAs(col + '.png'); ```. I could not let the script finish without filling 16GB memory + 20GB swap. Here's the max res size from the interrupted run:. ```bash; $ /usr/bin/time python rep.py ; Command terminated by signal 15; 769.89user 56.57system 3:57.31elapsed 348%CPU (0avgtext+0avgdata 13316884maxresident)k; 17064208inputs+0outputs (215131major+12346853minor)pagefaults 0swaps; ```. And two screenshots of `htop` during the run of the script and right after killing the process. So it's not chrome which fills my memory ;); ![Screenshot from 2020-10-20 14-17-01](https://user-images.githubusercontent.com/6951222/96585018-4df76d00-12df-11eb-921c-eea94afbd06b.png); ![Screenshot from 2020-10-20 14-17-28](https://user-images.githubusercontent.com/6951222/96585045-55b71180-12df-11eb-8001-75f12d2f3030.png). I've used ROOT from conda v6.22/02. You can download the file here (http://opendata.web.cern.ch/record/12353#).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676:1323,down,download,1323,https://root.cern,https://github.com/root-project/root/issues/6676,1,['down'],['download']
Availability,"The following standalone reproducer tells the story. The issue is an error that just appears if we snapshot an empty tree from a chain as input. ```python; import ROOT. # Make two files with a single branch of vector<float>; # NOTE: The bug does not happen with fundamental types; for name in ('file1.root', 'file2.root'):; ROOT.RDataFrame(1).Define('x', 'vector<float>(1)').Snapshot('tree', name). # This runs fine, note that we use just a single file as input.; ROOT.RDataFrame('tree', 'file1.root').Filter('false').Snapshot('tree', 'file3.root'). # This call has a bug and prints the error; # TChain::CopyAddresses:0: RuntimeWarning: Could not find branch named 'x' in tree named 'tree'; ROOT.RDataFrame('tree', ('file1.root', 'file2.root')).Filter('false').Snapshot('tree', 'file3.root'); ```. Present on master in commit ff0c693e49d6857d3c7b089720adc012f379a45e (2020 Oct 8) but also seen in 6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6848:69,error,error,69,https://root.cern,https://github.com/root-project/root/issues/6848,2,['error'],['error']
Availability,The following tutorials need to be disabled in old PyROOT because they; use a pythonization available only in experimental:. ~~tutorials/roofit/rf501_simultaneouspdf.py~~; tutorials/roofit/rf502_wspacewrite.py; tutorials/roofit/rf504_simwstool.py; tutorials/roofit/rf509_wsinteractive.py; tutorials/roofit/rf511_wsfactory_basic.py. Reported here: https://sft.its.cern.ch/jira/browse/ROOT-10736,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5529:92,avail,available,92,https://root.cern,https://github.com/root-project/root/pull/5529,1,['avail'],['available']
Availability,"The following, very particular, combination triggers a test failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:60,failure,failure,60,https://root.cern,https://github.com/root-project/root/pull/14803,3,"['Error', 'failure']","['Error', 'failure']"
Availability,The formula showing the calculations of the TProfile bin error are not correct if the weights are different than 1. ; In https://root.cern/doc/master/classTProfile.html . See https://root-forum.cern.ch/t/errors-in-weighted-tprofiles/54299,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12592:57,error,error,57,https://root.cern,https://github.com/root-project/root/issues/12592,2,['error'],"['error', 'errors-in-weighted-tprofiles']"
Availability,"The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13737:206,error,errors,206,https://root.cern,https://github.com/root-project/root/pull/13737,1,['error'],['errors']
Availability,"The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose.; Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7262:174,avail,available,174,https://root.cern,https://github.com/root-project/root/pull/7262,1,['avail'],['available']
Availability,The header file is not needed and causes some failure on some architecture when compiling DNN GPU tests. Fix also a warning in a test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4704:46,failure,failure,46,https://root.cern,https://github.com/root-project/root/pull/4704,1,['failure'],['failure']
Availability,"The idea of the RooGenProdProj is that we divide two integral objects; each created with this makeIntgral() function to get the normalized; integral of a product. Therefore, we don't need to normalize the; numerater and denominator integrals themselves. Doing the normalization; would be expensive and it would cancel out anyway. However, if we don't; specify an explicit normalization integral in createIntegral(), the; last-used normalization set might be used to normalize the pdf,; resulting in redundant computations. For this reason, the normalization set of the integrated pdfs is fixed; to an empty set in this case. Note that in RooFit, a nullptr; normalization set and an empty normalization set is not equivalent. The; former implies taking the last-used normalization set, and the latter; means explicitly no normalization. This fixes the performance regression reported in https://github.com/root-project/root/issues/11814, and a new unit; test is implemented to make sure no new numeric integrals pop up in the; reproducer code to that issue. Unfortunately, this change means that there will be again warnings about; missing `RooAddPdf` normalization sets, but this is not a regression; because these warnings only got fixed in the 6.28 development cycle in; https://github.com/root-project/root/commit/290b478710a90351bd7b15130a7a81e01b461940. This PR also includes some other minor improvements explained in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12010:499,redundant,redundant,499,https://root.cern,https://github.com/root-project/root/pull/12010,1,['redundant'],['redundant']
Availability,"The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16175:89,redundant,redundant,89,https://root.cern,https://github.com/root-project/root/pull/16175,1,['redundant'],['redundant']
Availability,"The important commit is [[DF] Make dataset group an optional data member of RSampleInfo](https://github.com/root-project/root/commit/ad6ecd8227786f363f48be207d45b0f86d6357e5): it short-circuits some logic so that we don't construct a RDatasetGroup object if we don't have to, and we copy pointers to RDatasetGroups instead of RDatasetGroup objects. It also introduces a change in behavior: RDF now throws if a user asks for information about the dataset group but there is no group available. Before that commit it would return some arbitrary value for each of the properties (e.g. empty string, 0, ...). This should fix the performance regression seen in some Grafana benchmarks on the evening of the 15th of December.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12174:482,avail,available,482,https://root.cern,https://github.com/root-project/root/pull/12174,1,['avail'],['available']
Availability,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8457:171,avail,available,171,https://root.cern,https://github.com/root-project/root/pull/8457,1,['avail'],['available']
Availability,"The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`); * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`); * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python; import datetime; import struct; import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""); x = ROOT.TObjString(""one""); x.Write(); file.mkdir(""subdir""); file.cd(""subdir""); y = ROOT.TObjString(""two""); y.Write(); file.Close(). def datime(number):; return datetime.datetime(; ((number & 0b11111100000000000000000000000000) >> 26) + 1995,; ((number & 0b00000011110000000000000000000000) >> 22),; ((number & 0b00000000001111100000000000000000) >> 17),; ((number & 0b00000000000000011111000000000000) >> 12),; ((number & 0b00000000000000000000111111000000) >> 6),; ((number & 0b00000000000000000000000000111111)),; ). file = open(""sample.root"", ""rb""). (; magic,; fVersion,; fBEGIN,; fEND,; fSeekFree,; fNbytesFree,; nfree,; fNbytesName,; fUnits,; fCompress,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7817:136,error,error,136,https://root.cern,https://github.com/root-project/root/pull/7817,1,['error'],['error']
Availability,"The issue is initially reported and discussed on the ROOT forum [here](https://root-forum.cern.ch/t/rdataframe-tree-friends-branches-with-identical-variable-name-but-different-types/42701/4). ### Describe the bug. RDataFrame has two tree friends.; Both tree friends have a branch with identical name.; Type of a branch in the 1st friend tree: XYZVector; Type of a branch in the 2nd friend tree: vector\<XYZTVector>. 1st friend tree is attached to RDataFrame before 2nd friend tree.; Access of 2nd friend tree branch results in error due to unexpected type of the branch assumed by RDataFrame as shown in the stand alone example bellow. ### To Reproduce. Run this stand alone example:. ```; import ROOT. vectors = '''; #include ""Math/Vector3D.h""; #include ""Math/Vector4D.h""; #include ""TFile.h""; #include ""TTree.h""; #include <vector>; using namespace ROOT::Math;; using namespace ROOT::VecOps;. RVec <double> getArrZ(const RVec<XYZTVector>& vec){; auto getItemZ = [](const XYZTVector& item) { return item.Z(); };; return Map(vec, getItemZ);; }. '''. ROOT.gInterpreter.Declare(vectors). if __name__ == ""__main__"":; ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(10, 10, 10)"").Snapshot(""Particle"", ""f1.root""); ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(20, 20, 20)"").Snapshot(""Cluster"", ""f2.root""); ROOT.RDataFrame(1).Define(""vec"", ""std::vector<XYZTVector>{XYZTVector(30, 30, 30, 30)}"").Snapshot(""Vertex"", ""f3.root""). ch1 = ROOT.TChain(""Particle""); ch1.Add(""f1.root""); ch2 = ROOT.TChain(""Cluster""); ch2.Add(""f2.root""); ch3 = ROOT.TChain(""Vertex""); ch3.Add(""f3.root""). ch1.AddFriend(ch2, ""cluster""); ch1.AddFriend(ch3, ""vertex""). df = ROOT.RDataFrame(ch1); print(df.Define(""particle_z"", ""vec.Z()"").Histo1D(""particle_z"").GetMean()); print(df.Define(""cluster_z"", ""cluster.vec.Z()"").Histo1D(""cluster_z"").GetMean()); print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); ```. which results in the error on 3rd print. Full output:. ```; 10.0; 20.0; input_line_99:2:142: error: no matc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:527,error,error,527,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,"The last commit that touched `roofit/histfactory/test/CMakeLists.txt` was accidentally removing the dependency on RooFitCommon, which needs to be there to avoid linker errors on Windows. Fixes these Windows build errors in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=windows10,SPEC=default/10959/parsed_console/log_content.html#ERROR1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11394:168,error,errors,168,https://root.cern,https://github.com/root-project/root/pull/11394,2,['error'],['errors']
Availability,"The line.cxx example has been modified accordingly. But when executed it gives errors messages like:; error: no matching literal operator for call to 'operator""""_normal'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1915:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/1915,2,['error'],"['error', 'errors']"
Availability,"The linking of rootcling_stage1 and libCling requires a lot of memory.; Since these are linked from mostly the same objects, the build is ready; to link them at the same time. If you make a parallel build this means; that the two targets that require the most amount of memory are being; linked in parallel. This exhausts the available memory, and the; computer starts swapping. This adds a dependency of one of the targets to the other. The dependency is; not really there since it is not needed for building, but it prevents the; two memory consuming targets to be built in parallel. A similar dependency existed before the code latest code changes; (see commit 2638f6fc7f54b0995f2f9d60363daaf8aae2386e), then between; rootcling and libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1516:326,avail,available,326,https://root.cern,https://github.com/root-project/root/pull/1516,1,['avail'],['available']
Availability,"The logic in `TDecompLU` where a separate `bool` was tracking if a given; pointer should be ""deleted"" caused some compiler errors warnings like:. ```; root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:; root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]; 883 | delete [] pWorkd;; | ^~~~~~; root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here; 847 | Double_t workd[kWorkMax];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10582:123,error,errors,123,https://root.cern,https://github.com/root-project/root/pull/10582,1,['error'],['errors']
Availability,"The macro should be already set via `${VecCore_DEFINITIONS}`, so setting it unconditionally is redundant and leads to many warnings. However, the build system is not quite ready for setting this only via; `${VecCore_DEFINITIONS}`, so we need to conditionally set it if dependencies are satisfied and it is not set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/677:95,redundant,redundant,95,https://root.cern,https://github.com/root-project/root/pull/677,1,['redundant'],['redundant']
Availability,"The minimizer test quite often did not converge. As a result there were; many spurious test failures. The test is tuned to converge _much_ more reliably by increasing the; learning rate (0.0001 -> 0.001), and the number of early stopping epochs; (5 -> 50). This commit also makes the `testMinimization` test the minimizer; _without_ using momentum (this code path was previously untested here). The following code was used to benchmark changes (only single precision; part of the test was tested and some aux text was commented out if you; want to reproduce):; ```; for i in `seq 100`; do tmva/tmva/test/DNN/testMinimizationCpu; done | awk '{print $6;}' | python -c 'import numpy; import fileinput; a = map(float, fileinput.input()); print(numpy.std(a), numpy.mean(a), numpy.min(a), numpy.max(a))'; ```. Results (typical values):; - Old version: 2.70*10^{-7} (std dev), 3.34*10^5 (mean), 2.27*10^{-6} (min), 0.0017 (max); - New verstion: 2.59 * 10^{-6} (std dev), 2.51*10*{-6} (mean), 1.16*10*{-7} (min), 1.37*10^{-5} (max). Time taken is roughly doubled (~1 sec -> ~2 secs). All results on local mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:92,failure,failures,92,https://root.cern,https://github.com/root-project/root/pull/1958,2,"['failure', 'reliab']","['failures', 'reliably']"
Availability,"The new BatchMode was so far very hacky in the way it dealt with constraint terms, there were two places where it tried to consider them but they both failed in different scenarios:. * hack in `RooProdPdf::computeBatch()`, where PDFs with a span of size one in the datamap were ignored (failed if there was only one bin in the dataset because all PDFs were ignored then); * hack in `NormalizationHelpers`, where constrained RooProdPdfs were assumed to have only one factor that is a constraint. This was only the case in HistFactory and failed in other cases, like in `stressRooStats` and the `ATALS` Higgs combination fit. The new implementation in this PR follows a safer approach: when the constraints are obtained from the RooProdPdf via `getConstraints`, a new option is added to remove the obtained constraints from the RooProdPdf. This way, no other code is required downstream to deal with constraints. This means, to avoid mutating the computation graph, the constraint sum also needs to be extracted **after** the PDF is cloned. All changes in this PR follow from that line of thought and are explained more in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11606:874,down,downstream,874,https://root.cern,https://github.com/root-project/root/pull/11606,1,['down'],['downstream']
Availability,"The newest ROOT version in LCG dev3 nightlies crashes in a situation where the earlier versions (<6.27) printed this message:; ```; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState: ; Missing FileEntry for TestClassPrimitives.h ; requested to autoload type TestClassPrimitives ; ```; Now I see this stack trace instead:. ```; #0 0x00007fffebc82b61 in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState(clang::Decl*, std::pair<llvm::StringRef, llvm::StringRef>)::{lambda(llvm::StringRef, bool)#1}::operator()(llvm::StringRef, bool) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #1 0x00007fffebc835ac in cling::AutoLoadingVisitor::VisitDecl(clang::Decl*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #2 0x00007fffebc970c9 in clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseCXXRecordDecl(clang::CXXRecordDecl*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #3 0x00007fffebc8274a in cling::AutoloadCallback::TransactionCommitted(cling::Transaction const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #4 0x00007fffebc64088 in cling::MultiplexInterpreterCallbacks::TransactionCommitted(cling::Transaction const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #5 0x00007fffebce26f7 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so; #6 0x00007fffebce5429 in cling::IncrementalP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:132,Error,Error,132,https://root.cern,https://github.com/root-project/root/issues/11933,1,['Error'],['Error']
Availability,"The newly integrated cross validation has suffered two seemingly random failures. Reported [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15871/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/) and [here](https://epsft-jenkins.cern.ch/job/root-incremental-master-noimt/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/1803/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/). The root cause is still not properly understood, but this patch addresses two issues discovered by valgrind and which may be related.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:72,failure,failures,72,https://root.cern,https://github.com/root-project/root/pull/1568,1,['failure'],['failures']
Availability,"The non-modules system iterates over all available rootmap files and adds their libraries as potential dependencies to the library which ACLiC builds. The built library relies on the explicit linking to load its dependencies when it is dlopened. This is necessary because we have no other way to resolve symbols. Fortunately, the modules dynamic linker has superior symbol resolution. We can rely on it when loading a shared library. This patch fixes failing tests on OSX when runtime_cxxmodules are on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:41,avail,available,41,https://root.cern,https://github.com/root-project/root/pull/4742,1,['avail'],['available']
Availability,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10747:20,avail,available,20,https://root.cern,https://github.com/root-project/root/pull/10747,2,['avail'],['available']
Availability,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671:242,redundant,redundant,242,https://root.cern,https://github.com/root-project/root/pull/16671,1,['redundant'],['redundant']
Availability,"The old client library libXrdClient is removed.; Also XrdSysDNS is removed. Do not build the legacy XProofD file server and client (already; disabled by default - give error if someone enables it while building; with xrootd 5). Do not build the old libNetx. Build the new libNetNG without XrdSysDNS, use XrdNetAddr instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6031:168,error,error,168,https://root.cern,https://github.com/root-project/root/pull/6031,2,['error'],['error']
Availability,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:157,failure,failure,157,https://root.cern,https://github.com/root-project/root/pull/6128,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11174:91,error,errors,91,https://root.cern,https://github.com/root-project/root/pull/11174,1,['error'],['errors']
Availability,"The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work. (cherry picked from commit 588e13c4da4a63427ef156f2624f5a5a15bfd298). Backport of PR https://github.com/root-project/root/pull/11174",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11187:91,error,errors,91,https://root.cern,https://github.com/root-project/root/pull/11187,1,['error'],['errors']
Availability,"The problem with this test is that it is comparing an analytical; solution of the derivative against the center difference formula; f'(x) = (f(x+dx) - f(x-dx))/(2*dx), and this formula is not exact.; The choice of dx was too large for the tolerance accepted for the; maximum relative error. Using a smaller dx for the center difference; calculation fixes this issue by reducing the error in the numerical; derivative calculation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/534:239,toler,tolerance,239,https://root.cern,https://github.com/root-project/root/pull/534,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063:158,error,error,158,https://root.cern,https://github.com/root-project/root/pull/11063,6,"['Error', 'down', 'error']","['Error', 'downside', 'error', 'error-distrdf-release', 'errors']"
Availability,The pythonization RDataFrame.AsNumpy looks for the attribute; RDataFrameAsNumpy_ in the ROOT module and raises an attribute error if not found.; This error can not be triggered if ROOT is imported but is raised if; RDataFrame is accessed through cppyy.gbl. This PR implements a; protection for this skipping the pythonization if the pythonizer; function is not found in the ROOT module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4362:124,error,error,124,https://root.cern,https://github.com/root-project/root/pull/4362,2,['error'],['error']
Availability,"The recently introduced pythonizations for the RDataFrame API allow passing; Python callables to operations such as Define and Filter, but there is no; support for other operations. For now, hide this functionality for the 6.28; release cycle, it will be available once all common operations are supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12053:255,avail,available,255,https://root.cern,https://github.com/root-project/root/pull/12053,1,['avail'],['available']
Availability,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5902:186,failure,failures,186,https://root.cern,https://github.com/root-project/root/pull/5902,1,['failure'],['failures']
Availability,"The reproducer is the following line in the ROOT prompt:. ```cpp; ROOT::RDataFrame(""Events"", ""DYJetsToLL.root"").Histo1D(""Muon_tightId"").GetValue();; ```. The stack trace is as follows:. ```; In module 'ROOTDataFrame':; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/ActionHelpers.hxx:303:18: error: non-const lvalue reference to type 'bool' cannot bind to a temporary of type 'std::_Bit_const_iterator::const_reference' (aka 'bool'); for (auto &x0 : x0s) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillParHelper<TH1D>::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:309,error,error,309,https://root.cern,https://github.com/root-project/root/issues/6675,1,['error'],['error']
Availability,"The return type of `foo(int)` is `void`, which causes an assertion failure in `lib/Interpreter/Value.cpp:163`: ""Type not supported"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13282:67,failure,failure,67,https://root.cern,https://github.com/root-project/root/pull/13282,1,['failure'],['failure']
Availability,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8491:415,Failure,Failures,415,https://root.cern,https://github.com/root-project/root/pull/8491,1,['Failure'],['Failures']
Availability,"The roottest-python-cmdLineUtils test sometimes fails with error along the line of:; ```; 16/22 Test #1217: roottest-python-cmdLineUtils-SimpleRootrm1CheckOutput .......***Failed 0.86 sec; -- TEST COMMAND --; cd /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils; /usr/bin/timeout -s USR2 270s /home/pcanal/root_working/build/master-debug/bin/rootls -1 victim1.root; -- BEGIN TEST OUTPUT --; dir; hprof; hprof; hpxpy; hpxpy; tof. -- END TEST OUTPUT --; -- BEGIN OUTDIFF OUTPUT --; --- /home/pcanal/root_working/code/root/roottest/python/cmdLineUtils/SimpleRootrm.ref Thu Dec 3 17:25:54 2020; +++ /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils/SimpleRootrm1CheckOutput.log Fri Jan 15 15:57:03 2021; @@ -1,4 +1,6 @@; dir; hprof; +hprof; +hpxpy; hpxpy; tof. -- END OUTDIFF OUTPUT --. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7054:59,error,error,59,https://root.cern,https://github.com/root-project/root/issues/7054,1,['error'],['error']
Availability,"The signature has to match the declaration in RooAbsArg.h:. ```C++; std::ostream& operator<<(std::ostream& os, const RooAbsArg &arg);; ```. This problem was spotted by users in the forum:; https://root-forum.cern.ch/t/error-while-extracting-getrealvalue-of-roorealvar-defined-with-range/44922/6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8208:218,error,error-while-extracting-getrealvalue-of-roorealvar-defined-with-range,218,https://root.cern,https://github.com/root-project/root/pull/8208,1,['error'],['error-while-extracting-getrealvalue-of-roorealvar-defined-with-range']
Availability,"The std.condition_variable module can be exported via the std.condition_variable; module or std.memory. On some platforms (gcc10) that causes definition mismatch; problems of kind:. In module 'std' imported from input_line_1:1:; c++/10.3.0/bits/unique_ptr.h:208:12: error: 'std::__uniq_ptr_data<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >, std::default_delete<std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > > >, true, true>' has different definitions in different modules; definition in module 'std.condition_variable' is here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /c++/10.3.0/bits/unique_ptr.h:208:12: note: definition in module 'std.condition_variable' is here. Try fixing cms-sw/cmssw#36700",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9566:266,error,error,266,https://root.cern,https://github.com/root-project/root/pull/9566,1,['error'],['error']
Availability,"The test is broken with `-march=native` on my machine without this fix. Tolerance seems too strict in some places. I am using `1.0e-12` relative error, which amounts to a few times epsilon for `double`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2832:72,Toler,Tolerance,72,https://root.cern,https://github.com/root-project/root/pull/2832,2,"['Toler', 'error']","['Tolerance', 'error']"
Availability,The test roottest/root/meta/genreflex/ROOT-5768 currently include `boost` header files and thus is disable. This test the `--interpreteronly` flag of genreflex. See https://sft.its.cern.ch/jira/browse/ROOT-5768. The test needs to be trimmed down to no longer include the boost header files OR rewritten without them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11484:241,down,down,241,https://root.cern,https://github.com/root-project/root/issues/11484,1,['down'],['down']
Availability,"The things we need to do before merging this PR and can probably be done by various people in parallel. Cling standalone:; - [x] Fix cling CUDA tests; - [ ] Fix the remaining test failures (6, see below); - [x] Revert the commit 'FIXME: Undo this change and debug why we have PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 56",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:180,failure,failures,180,https://root.cern,https://github.com/root-project/root/pull/10294,5,"['Error', 'Failure', 'failure']","['ErrorRecovery', 'Failures', 'failures']"
Availability,"The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):; ```; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous; RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};; ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;; namespace RDFInternal = ROOT::Internal::RDF;; ^; In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,; from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;; namespace RDFInternal = ROOT::Internal::RDF;; ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:; * Inside of namespace `ROOT::RDF` within RResultPtr.hxx; * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included; ```; using namespace ROOT::Detail::RDF;; using namespace ROOT::RDF;; ```; For example in ROOT/RDF/U",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12981:70,error,errors,70,https://root.cern,https://github.com/root-project/root/pull/12981,2,['error'],"['error', 'errors']"
Availability,"The tutorial is actually using the SPlots class wrong. It is calculating; sWeights for the isolation based on the invariant mass and the isolation; itself. That’s wrong. For sPlots, the control variable should not be in; the set of discriminating variables for the likelihood fit! See; https://arxiv.org/pdf/physics/0402083.pdf. That means when using the SPlot class, you should exclude the isolation; variable from the dataset that you pass. Big thanks to Dongliang for reporting this on the ROOT Forum!. https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. A second commit applies some other improvements to the tutorial:. * Code modernization. * Don't define number of events in toy data redundantly. * Add also plots of isolation models",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11475:701,redundant,redundantly,701,https://root.cern,https://github.com/root-project/root/pull/11475,1,['redundant'],['redundantly']
Availability,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8065:971,error,errors,971,https://root.cern,https://github.com/root-project/root/pull/8065,1,['error'],['errors']
Availability,"The two specializations for the relative_error functions were removed this [commit](https://github.com/root-project/root/commit/43aac3fb4bc5f215ac3cb7755791372f05a5da72) by @amadio. However, the; general function template does not protect against the division by values that are numerically close; to zero and lead to large relative errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/798:333,error,errors,333,https://root.cern,https://github.com/root-project/root/pull/798,1,['error'],['errors']
Availability,"The unit test for RooWorkspace tests failures when importing models into the workspace.; Since RooFit will print `ERROR` messages, it looks like there is a problem in the test.; The error messages are now silenced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3379:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/pull/3379,3,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'failures']"
Availability,The v7/line.cxx tutorial fails when run in batch mode with an error about that the DISPLAY can not be opened. Since this tutorial is part of the test suite this causes the tests to fail. This problem started due to some recent changes to the test. This PR reverts some of those changes to make the test work again.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3435:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/3435,1,['error'],['error']
Availability,"There are a number of trivial operations that users often want to perform on dataframes that are surprisingly hard to get right, for example adding several `Define`s in a loop or conditionally adding a `Filter` depending on a runtime boolean (both use-cases are challenging in C++, trivial in python). The way I see it, difficulties boil down to the fact that different dataframe nodes have different types (because their types incorporate e.g. the type of the callable passed to a `Filter` and the type of their parent node in the computation graph). In this PR I propose to add a common base class `ROOT::RDF::RNode` to all nodes of the graph (except leaves a.k.a results, which have a completely different interface),; so that users can, for example:; * take any dataframe node by reference in non-template functions as `RNode&`; * `emplace_back` dataframe nodes in ~`std::vector<RNode>`~ `vector<RInterface<RNode>>`; * have non-const pointers to dataframe nodes. and so on. For example, conditionally adding a `Range` do a dataframe now looks like this:. ```c++; auto maybe_ranged = [&df, mustAddRange] { ; return mustAddRange ? ROOT::RDF::RNode(d.Range(1)); : ROOT::RDF::RNode(d); ; }(); ; ```. while before this PR one would have to add fake `Filter(""true"")` filters to normalize the return type of the lambda, involving the interpreter for no reason. Internal `RDataFrame` code is also simplified by the introduction of this common base class.; The only downside I can think of is that if this mechanism is abused users might end up with extra, unnecessary virtual calls in their event loop -- on the other hand, this mechanism should only be used in situations that required either complex template magic or dirty and slow tricks before. Questions:; * can we come up with a better name than `ROOT::RDF::ToCommonNodeType` for the function that upcasts any dataframe object to the same type?; * should this cast only be explicit through an upcasting function call or should we allow implicit cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182:338,down,down,338,https://root.cern,https://github.com/root-project/root/pull/2182,1,['down'],['down']
Availability,"There are three ways to get the code of latest-stable:; a) git clone as suggested by https://root.cern/install/: 1.4GiB; b) git clone with --depth=20: 673MiB; c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238:185,down,download,185,https://root.cern,https://github.com/root-project/root/issues/10238,2,['down'],"['download', 'downsides']"
Availability,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9098:292,error,error,292,https://root.cern,https://github.com/root-project/root/issues/9098,6,['error'],"['error', 'errors']"
Availability,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15488:318,error,error,318,https://root.cern,https://github.com/root-project/root/pull/15488,1,['error'],['error']
Availability,"There is a constructor of the RooAddPdf that takes no coefficients and; only a list of PDFs. This only makes sense if all of the PDFs are; extendible. Indeed, there are error messages when a PDF is not; extendible, but it would be better to throw an exception because this is; an error that will certainly break your model. This change is inspired by the following forum post:; https://root-forum.cern.ch/t/roofftconvpdf-not-working-in-product-with-rooaddpdf-even-in-new-root-versions/51442. One user error that resulted in the post was using the no-coefficient constructor with non-extendible PDFs, which would have been prevented by throwing an error as suggested in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11323:169,error,error,169,https://root.cern,https://github.com/root-project/root/pull/11323,4,['error'],['error']
Availability,"There is a missing include in `df103_NanoAODHiggsAnalysis.C`. Trying to compile gives:; ```; $ g++ -g -Wall -Wextra -Wpedantic -O2 -o h higgs.cpp $(root-config --cflags --libs); higgs.cpp: In function 'void df103_NanoAODHiggsAnalysis(bool)':; higgs.cpp:459:15: error: 'RunGraphs' is not a member of 'ROOT::RDF'; 459 | ROOT::RDF::RunGraphs({df_h_sig_4mu, df_h_bkg_4mu, df_h_data_4mu,; | ; ```; Quickfix: `#include <ROOT/RDFHelpers.hxx>`. Also, currently I get the following warnings:; ```; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11124:261,error,error,261,https://root.cern,https://github.com/root-project/root/issues/11124,1,['error'],['error']
Availability,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12704:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/12704,2,['error'],['error']
Availability,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12707:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/12707,2,['error'],['error']
Availability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:954,error,error,954,https://root.cern,https://github.com/root-project/root/pull/15106,1,['error'],['error']
Availability,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8022:205,error,error,205,https://root.cern,https://github.com/root-project/root/issues/8022,1,['error'],['error']
Availability,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754:25,fault,fault,25,https://root.cern,https://github.com/root-project/root/pull/10754,1,['fault'],['fault']
Availability,"There was some naming inconsistency between `minuit2-*` and `minuit2_*` CMake options; this standardizes that to match ROOT (`minuit2_*`); due to a mismatch, mpi and openmp could not be enabled in the standalone build. This also fixes an error in commit 1a75a687f19 that has incorrect CMake syntax (mixing `set_property` and `set_target_properties` style - would only affect CMake < 3.9 due to surrounding if statement). Running tests with MPI enabled will actually try to run the tests with MPI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1809:238,error,error,238,https://root.cern,https://github.com/root-project/root/pull/1809,1,['error'],['error']
Availability,"There's a bug on 32-bit non-intel such as armv7l where root-config lists `-lROOTDataFrame` because it passes the check this patch adjusts, but libROOTDataFrame is not built on any 32-bit due to https://github.com/root-project/root/blob/v6-16-00-patches/tree/dataframe/CMakeLists.txt#L7 . Old check only hid DataFrame on i686; this patch changes the check to have the exact same conditions as the check for building DataFrame itself to prevent build failures in apps using root-config.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3442:449,failure,failures,449,https://root.cern,https://github.com/root-project/root/pull/3442,1,['failure'],['failures']
Availability,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15099:40,failure,failures,40,https://root.cern,https://github.com/root-project/root/pull/15099,1,['failure'],['failures']
Availability,"These 3 small patches I am using for ROOT + Intel QuickAssist Technology (QAT). QAT provides HW-accelerated (de)compression and crypto (incl. hashing). For easy integration Intel provides zlib-shim and openssl-shim, support the most common interfaces (but not everything). Note, that QAT also has software fallback mechanism. More details are available in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/523:343,avail,available,343,https://root.cern,https://github.com/root-project/root/pull/523,1,['avail'],['available']
Availability,"These are fixes that I had to make to build ROOT on my [Raspberry Pi](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/) using [GCC 8](https://gcc.gnu.org/gcc-8/). (I need to build ROOT with a hand-built GCC 8, as I need [C\+\+17](https://en.wikipedia.org/wiki/C%2B%2B17) support in the projects that I want to build on top of ROOT...). The issue at hand is one that is reasonably well documented on various forums. Like:; - https://github.com/opencv/opencv/issues/15278; - https://github.com/aws/aws-sdk-cpp/issues/1199. One has to explicitly link binaries against [libatomic](https://github.com/gcc-mirror/gcc/tree/master/libatomic) under certain conditions... If not, the following kinds of linking errors happen:. ```; [100%] Linking CXX shared library ../../lib/libRIO.so; CMakeFiles/RIO.dir/src/TFilePrefetch.cxx.o: In function `TFilePrefetch::GetBlockFromCache(char const*, int)':; TFilePrefetch.cxx:(.text+0x1424): undefined reference to `__atomic_fetch_add_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::ReadBuffer(char*, int) [clone .part.82]':; TFile.cxx:(.text+0x1444): undefined reference to `__atomic_fetch_add_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::ReadBuffer(char*, long long, int)':; TFile.cxx:(.text+0x3738): undefined reference to `__atomic_fetch_add_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::ReadBuffers(char*, long long*, int*, int)':; TFile.cxx:(.text+0x53a4): undefined reference to `__atomic_fetch_sub_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::WriteBuffer(char const*, int)':; TFile.cxx:(.text+0x5ddc): undefined reference to `__atomic_fetch_add_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesRead()':; TFile.cxx:(.text+0xb370): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesWritten()':; TFile.cxx:(.text+0xb390): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561:718,error,errors,718,https://root.cern,https://github.com/root-project/root/pull/4561,1,['error'],['errors']
Availability,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14018:660,error,errors,660,https://root.cern,https://github.com/root-project/root/pull/14018,1,['error'],['errors']
Availability,"These changes fix a periodic crash which was occuring while running the threaded version of CMS' reconstruction code. The problem was a bad interaction between rebinning of a TProfile while being filled and the cloning of a TFormula. The problem stemmed from insufficient locking of cint data structures.; As part of the change, additional error reporting for the case where cloning fails was added. These reports were extremely useful in tracking down the problem and may prove useful in the future if a similar problem surfaces again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/32:340,error,error,340,https://root.cern,https://github.com/root-project/root/pull/32,2,"['down', 'error']","['down', 'error']"
Availability,"These commits are related to the binary distribution of runtime modules, and will fix the errors like https://root-forum.cern.ch/t/module-stl-imported-by-ast-file-found-in-a-different-module-map-file/32461/7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3342:90,error,errors,90,https://root.cern,https://github.com/root-project/root/pull/3342,1,['error'],['errors']
Availability,"These days, ClassImp() causes more harm than good. See e.g. https://root-forum.cern.ch/t/error-cling-loadlibrary-while-compiling-in-root-6-08/30340/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2563:89,error,error-cling-loadlibrary-while-compiling-in-root-,89,https://root.cern,https://github.com/root-project/root/pull/2563,1,['error'],['error-cling-loadlibrary-while-compiling-in-root-']
Availability,These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/403:16,avail,available,16,https://root.cern,https://github.com/root-project/root/pull/403,1,['avail'],['available']
Availability,These includes may be used in dictionaries and therefore should be available already in core libs. Fixes ROOT-10701.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5673:67,avail,available,67,https://root.cern,https://github.com/root-project/root/pull/5673,1,['avail'],['available']
Availability,These includes may be used in dictionaries and therefore should; be available already in core libs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5265:68,avail,available,68,https://root.cern,https://github.com/root-project/root/pull/5265,1,['avail'],['available']
Availability,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365:704,error,error,704,https://root.cern,https://github.com/root-project/root/pull/5365,2,"['Error', 'error']","['Error', 'error']"
Availability,These tests ensure that the functionality of the current PyROOT is as well available in experimental PyROOT. No explicit pythonizations are added since the feature is now provided directly by CPyCppyy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3475:75,avail,available,75,https://root.cern,https://github.com/root-project/root/pull/3475,1,['avail'],['available']
Availability,"They currently trigger segfaults in TClass*/cling of the like:. ```; RAssertion failed: ((*I)->isCompleted() && ""Nested transaction not completed!?""), function endTransaction, file IncrementalParser.cpp, line 511.; *** Break *** abort; Error in <TClingCallFunc::make_dtor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __dtor_32(void* obj, unsigned long nary, int withFree); {; if (withFree) {; if (!nary) {; delete (TMVA::Experimental::Internal::RBatchGenerator<float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &>*) obj;; }; else {; delete[] (TMVA::Experimental::Internal::RBatchGenerator<float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &>*) obj;; }; }; else {; typedef TMVA::Experimental::Internal::RBatchGenerator<float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &, float &> Nm;; if (!nary) {; ((Nm*)obj)->~Nm();; }; else {; do {; (((Nm*)obj)+(--nary))->~Nm();; } while (nary);; }; }; ```. ```; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] KeepNParams(clang::QualType&, clang::QualType const&, cling::Interpreter const&, ROOT::TMetaUtils::TNormalizedCtxt const&) /Users/sftnight/build/workspace/root-pullrequests-build/root/core/clingutils/src/TClingUtils.cxx:3926; [/Users/sftnight/build/workspace/root-pullrequests-build/build/lib/libCling.6.29.01.so] RecurseKeepNParams(clang::TemplateArgu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13290:236,Error,Error,236,https://root.cern,https://github.com/root-project/root/pull/13290,1,['Error'],['Error']
Availability,They need to be temporarily disabled until a fix is available in clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15018:52,avail,available,52,https://root.cern,https://github.com/root-project/root/pull/15018,1,['avail'],['available']
Availability,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8661:138,avail,available,138,https://root.cern,https://github.com/root-project/root/pull/8661,2,['avail'],"['available', 'available-after-loading-dictionary']"
Availability,"This (temporary) work-around silents the error C2668: 'ROOT::TThreadExecutor::Map': ambiguous call to overloaded function, due to a MS compiler bug (as reported here: https://developercommunity.visualstudio.com/content/problem/225022/wrong-error-c2668-ambiguous-call-to-overloaded-fun.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2942:41,error,error,41,https://root.cern,https://github.com/root-project/root/pull/2942,2,['error'],"['error', 'error-']"
Availability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:614,error,error,614,https://root.cern,https://github.com/root-project/root/pull/2321,1,['error'],['error']
Availability,This PR addresses:; - Bug fix to plotting datasets horizontal error bars; - Bug fix to obtaining datasets of reduced pdfs (i.e. get the corresponding reduced dataset); - Beginning to add some documentation for xRooNode; - Adds a cling interpreter method for xRooNode to print the names of the child nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14900:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/14900,1,['error'],['error']
Availability,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116:902,avail,available,902,https://root.cern,https://github.com/root-project/root/pull/15116,1,['avail'],['available']
Availability,"This PR adds a new callback to the PyKeras method.; I've build ROOT without any errors and run the ctests and all of them passed. . You can try out this new callback with:; `sudo pip install keras --upgrade`; `sudo pip install tensorflow --upgrade`. And then run: `python tutorials/tmva/keras/ClassificationKeras.py`. The callback will create a new directory called 'logs'.; Then you can call while or after training tensorboard: `tensorboard --logdir=./logs`; Now you can open the link from your terminal and visualize the network and training. ; The `ClassificationKeras.py` script, seems to be not compatible with the Keras 2.x API right now, therefore you can revert the changes of this PR in this specific script after testing. More information on TensorBoard: https://www.tensorflow.org/get_started/summaries_and_tensorboard. Also pointing to the author of the PyKeras implementation: @stwunsch. Thanks in advance for reviewing this PR!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353:80,error,errors,80,https://root.cern,https://github.com/root-project/root/pull/1353,1,['error'],['errors']
Availability,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12475:234,down,down,234,https://root.cern,https://github.com/root-project/root/pull/12475,1,['down'],['down']
Availability,This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9729:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/9729,1,['error'],['error']
Availability,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919:396,down,download,396,https://root.cern,https://github.com/root-project/root/pull/5919,1,['down'],['download']
Availability,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11161:238,redundant,redundant,238,https://root.cern,https://github.com/root-project/root/pull/11161,1,['redundant'],['redundant']
Availability,"This PR brings compile options of the classic build closer to what the CMake system has.; There is also a fix for stressEntryList, which was failing on ICC because of rounding errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/755:176,error,errors,176,https://root.cern,https://github.com/root-project/root/pull/755,1,['error'],['errors']
Availability,This PR continues the work in #5376. It creates a vcruntime.modulemap file which is loaded before libc and std modulemaps in order to fix several include errors. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5586:154,error,errors,154,https://root.cern,https://github.com/root-project/root/pull/5586,1,['error'],['errors']
Availability,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see TError.h). This is a backport of PR https://github.com/root-project/root/pull/8737/ and is required for the unit tests of another backport: https://github.com/root-project/root/pull/10120. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10123:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/10123,2,['error'],['error']
Availability,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8737:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/8737,5,"['Error', 'error']","['Error', 'error']"
Availability,"This PR enables the support to create Vectorized TFormula expression by adding a signature using ; ROOT::Double_v. The functionality is available if ROOT has been compiled with VecCore support, ; i.e. the macro R__HAS__VECCORE is defined",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1275:136,avail,available,136,https://root.cern,https://github.com/root-project/root/pull/1275,1,['avail'],['available']
Availability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:520,mask,masks,520,https://root.cern,https://github.com/root-project/root/pull/394,1,['mask'],['masks']
Availability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:410,error,error,410,https://root.cern,https://github.com/root-project/root/pull/453,3,['error'],['error']
Availability,This PR fixes an issue in parsing correctly the Convolution operator from an ONNX file. . In addition an utility funciton to convert the tensor shape to a string is added to improve the produced error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8993:195,error,error,195,https://root.cern,https://github.com/root-project/root/pull/8993,1,['error'],['error']
Availability,"This PR fixes building of Core module on Windows. . ```; /.../build/include\ROOT/RWrap_libcpp_string_view.h(428,34): error G1A4676F8: no member named '__find_end' in namespace 'std'; did you mean 'find_end'?; const _CharT* __r = _VSTD::__find_end(; ~~~~~~~^~~~~~~~~~; find_end; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5636:117,error,error,117,https://root.cern,https://github.com/root-project/root/pull/5636,1,['error'],['error']
Availability,This PR fixes compiling the code for parsing Keras model when the C-API of Python 2 is used. In this case some functions are not available in Python.h. Those functions are used to parse the convolutional layers from Keras. ; This PR excludes the parsing of this layer and avoid calling those functions available only in Python3. ; Also the tests using the cone layer parsing are disabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11950:129,avail,available,129,https://root.cern,https://github.com/root-project/root/pull/11950,2,['avail'],['available']
Availability,This PR fixes following failures:; 1. http://cdash.cern.ch/testDetails.php?test=42006642&build=497548; 2. http://cdash.cern.ch/testDetails.php?test=42274691&build=497583. Before merging it should be understood why. @etejedor The tests for `TTree.AsMatrix` run all fine but the tutorial fails occasionally with a segfault (only on Mac OS and only on these two versions). It is not related to the `TTree.AsMatrix` code but to the creation of a `TFile` inside a Python function. Any ideas?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1957:24,failure,failures,24,https://root.cern,https://github.com/root-project/root/pull/1957,1,['failure'],['failures']
Availability,"This PR fixes https://github.com/root-project/root/issues/12043 . It should also address sporadic failures seen in our jenkins CI due to sometimes Dask assigning two tasks to the same worker process, thus the second task using the same DefinePerSample node of the first task and collapsing into the same situation as the linked issue. The first commit contains the actual fix, then tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787:98,failure,failures,98,https://root.cern,https://github.com/root-project/root/pull/13787,1,['failure'],['failures']
Availability,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5702:204,error,error,204,https://root.cern,https://github.com/root-project/root/pull/5702,1,['error'],['error']
Availability,This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16093:100,error,error-bars,100,https://root.cern,https://github.com/root-project/root/pull/16093,3,['error'],"['error', 'error-bars']"
Availability,"This PR fixes the copy constructor of the `ROOT::Fit::BinDtaa` class, ; solving the problem reported in ; https://root-forum.cern.ch/t/globalchi2-function-for-many-histograms-in-root-fitfcn/42016/10. In addition this PR fixes a small issue of one mathcore tests, which was reporting a linking error in case both IMT and VECCORE were not present",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6776:293,error,error,293,https://root.cern,https://github.com/root-project/root/pull/6776,1,['error'],['error']
Availability,"This PR fixes the errors occurring while building the Thread module on Windows by adding a new services_msvc.modulemap which holds Microsoft System Services headers.; ```; /.../build/include\TWin32Condition.h(35,4): error G4823F0AC: declaration of 'CRITICAL_SECTION' must be imported from module 'Core.TWinNTSystem.h' before it is required [C:\build\night\LABEL\windows10\SPEC\rtcxxmod\build\core\thread\G__Thread.vcxproj]; CRITICAL_SECTION waiters_count_lock_;; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\minwinbase.h:217:30: note: previous declaration is here; typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5681:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/5681,2,['error'],"['error', 'errors']"
Availability,"This PR fixes the initialisation of the gradient function pointer which caused a failure in TFormula::Print(""V""). The PR introduces also a test for TFormula::Print",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2962:81,failure,failure,81,https://root.cern,https://github.com/root-project/root/pull/2962,1,['failure'],['failure']
Availability,This PR fixes the remaining ASAN build test failures in RooFit. More detail can be found in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11192:44,failure,failures,44,https://root.cern,https://github.com/root-project/root/pull/11192,1,['failure'],['failures']
Availability,This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12519:34,failure,failures,34,https://root.cern,https://github.com/root-project/root/pull/12519,1,['failure'],['failures']
Availability,This PR fixes: ; - stressHistoFit - so not use colour (even black) to keep a nice output log; - TMVA Keras tutorial: use different output file to avoid sporadic failures; - mathmore (GSL) : add a check for correct GSL version (2.3) introducing the new function `gsl_linalg_cholesky_decomp1`. Use the older `gsl_linalg_cholesky_decomp` for the old versions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13047:161,failure,failures,161,https://root.cern,https://github.com/root-project/root/pull/13047,1,['failure'],['failures']
Availability,"This PR fixes; - https://github.com/root-project/root/issues/7808. This is happening because in when the parentheses operator overload `TKDE::operator()(Double_t x)` calls ReInit `(const_cast<TKDE*>(this))->ReInit()` it returns before setting the fKernel in the case of new data. One approach is to call SetKernel here:. ```cpp; if (fNewData) {; InitFromNewData();; SetKernel();; return;; }; ```; or call it at the end of InitFromNewData(). When that happens, the fKernel is no longer null but this error is reproducible with both iterative options -; With Adaptive we get **NaN** and Fixed we get **inf**. This is because the weight calculation is using the nSum that is 0 when binning is not used; Inversing that gives the infinity in the Iteration:Fixed case. This fix:; - adds the call to SetBinCountData() in InitFromNewData(); - recreates the kernel fun pointer (previously fKernel ends up a `nullptr`); - calculating nSum as fNEvents if not binning in TKDE::TKernel::operator(). Results:. ```cpp; auto kde = new TKDE(0, nullptr, 0, 5, ""KernelType:Gaussian;Iteration:Adaptive;Mirror:noMirror;Binning:RelaxedBinning"", 1);; for (unsigned int i = 0; i < 100; i++) { kde->Fill(gRandom->Gaus(2,1)); }; std::cout<<kde->GetValue(2)<<""\n""; ; ```. Gives ; 0.487581",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14740:499,error,error,499,https://root.cern,https://github.com/root-project/root/pull/14740,1,['error'],['error']
Availability,"This PR for now fixes #14748, but IMO down the line we might need a more tailored representation for friends (at least in how they are presented to the user). Friends are (virtually) represented as untyped records. To properly create them as fields (neede e.g. for `Show` and `PrintInfo`), we artificially bind them to an untyped `RRecordField`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14749:38,down,down,38,https://root.cern,https://github.com/root-project/root/pull/14749,1,['down'],['down']
Availability,"This PR implements an iterator over an `NTuple's` field descriptors (i.e. field metadata). It is a building block for the upcoming NTuple merger algorithm by allowing comparison between two `NTuples`. This PR is a slimmed down version of PR #5768. . **Edit**: Users can optionally sort the NTuple iterator range, (e.g. field names by alphabetical order) with arbitrary comparison functions (see e05a85b). . <details>; <summary>Notes on previous sort approach</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5848:222,down,down,222,https://root.cern,https://github.com/root-project/root/pull/5848,1,['down'],['down']
Availability,"This PR implements the feature to read numpy arrays with `RDataFrame`. See following example for the use-case:. ```python; data = {; ""x"": numpy.array([1, 2, 3]),; ""y"": numpy.array([4, 5, 6]); }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df2 = df.Filter(""x>1"").Define(""z"", ""x*y""). assert(df2.Mean(""z"").GetValue(), 14); ```. Edit: Up to now it works only with C++17 since `std::string_view` is not yet available in experimental PyROOT as backport.; Edit: Renamed `MakeRDataFrame` to `MakeNumpyDataFrame`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424:403,avail,available,403,https://root.cern,https://github.com/root-project/root/pull/3424,1,['avail'],['available']
Availability,"This PR implements the possibility to store global observables in RooFit datasets, and makes the necessary changes in the `RooAbsPdf::fitTo` code path to consider the global observables in the data if available. If one wants to restore the old behavior of taking the global observable values from the model even if they are stored in the data, one can use the new `GlobalObservablesSource` command argument. . Unit tests for all new functionality is also implemented. Please find the more information in the commit messages. Ideas for future developments in future PRs:; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables. Closes https://github.com/root-project/root/issues/8123.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8878:201,avail,available,201,https://root.cern,https://github.com/root-project/root/pull/8878,1,['avail'],['available']
Availability,"This PR increases the tolerance for SOFIE-GNN testing. Due to different floating representations in Python frameworks and C++ implementations, it will be better to have a tolerance of 10^-5 and not 10^-7 which was the default previously.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13608:22,toler,tolerance,22,https://root.cern,https://github.com/root-project/root/pull/13608,2,['toler'],['tolerance']
Availability,"This PR introduces (with unit tests!) the concept of a forward-compatibility feature break flag for `TBasket`. This allows the `TBasket` class to identify if the object being deserialized was written by a newer version of ROOT using a feature that breaks forward-compatibility. Note that much care was taken so older versions of ROOT that *don't* recognize the new flag will believe the file is corrupt; they will give a misleading error message, but will not silently serve corrupted data. If this approach goes forward, I intend to backport the flags to older versions of ROOT -- they should be able to recognize files they aren't supposed to read. I do not plan to backport the new IO features themselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/959:432,error,error,432,https://root.cern,https://github.com/root-project/root/pull/959,1,['error'],['error']
Availability,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8972:232,avail,available,232,https://root.cern,https://github.com/root-project/root/pull/8972,1,['avail'],['available']
Availability,"This PR introduces the logic necessary in TTreeReader to detect when an entry being read is ""incomplete"" for the following situations:; * When switching to a new tree in the chain, if a branch that was expected to be found is not available; * When doing event matching with TTreeIndex, in case one or more of the friend trees did not match the index value for the current entry. It also introduces new functionality in RDataFrame to allow users to act upon the situations described above:; * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing.; * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded.; * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. The tutorials `df036_missingBranches` and `df037_TTreeEventMatching` show example usage of the new functionalities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15641:230,avail,available,230,https://root.cern,https://github.com/root-project/root/pull/15641,2,['avail'],['available']
Availability,"This PR is based on PR #11200. ; The systematic variations in the Higgs to four leptons tutorial are implemented. The improved plot shows the up and down variations of the total Monte Carlo weight (scale factor) on top of what was previously shown. Now the C++ version of the full tutorial is also available. I decided to rename the tutorial from df106_HiggsToFourLeptons.py to df106_HiggsToFourLeptons_withVaariations.py but it's just a suggestion, I can change it back to what it was. . Note (I suppose only relevant since I run it on Mac ARM)- in order to use the Interpolator I built root with `-Dbuiltin_gsl=ON` option. ; ![df106_HiggsToFourLeptons_python](https://github.com/root-project/root/assets/80402204/e273ae21-fbf3-4813-8d23-99ee59c4b431)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13519:149,down,down,149,https://root.cern,https://github.com/root-project/root/pull/13519,2,"['avail', 'down']","['available', 'down']"
Availability,This PR is meant to slim down the man pages while feedback from experts is collected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1544:25,down,down,25,https://root.cern,https://github.com/root-project/root/pull/1544,1,['down'],['down']
Availability,"This PR is on top of #1777 and adds the method `TTree.AsMatrix(columns)` as pythonization, which returns the content of the tree as numpy array powered by `TDataFrame` and the memory adption with the `__array_interface__`. TODO:; - ~~Infere the final datatype of the numpy array in a clever way (currently `double` is the default). Implicit type conversion is done by the lambda passed to `TDataFrame` in the backend.~~ Done in python, with tests.; - ~~More error-handling?~~ Can't think of any more checks.; - ~~More tests? Corner-cases missed?~~ Ideas? Any corner-cases missed?; - ~~What about not supported datatypes? Currently implemented for `float`, `double`, `int`, `unsigned int`, `long`, `unsigned long`. This is dependent on the memory adption feature of #1777 for `std.vector`.~~ Added proper error-handling.; - ~~Apply `clang-format`~~ ~~ Let's travis do this.; - ~~Shall we provide a `TTree.AsMatrix()` without given columns, which defaults to all columns? -> Most likely: Yes (but with proper error-handling!) -> White-listing branch types?~~ Done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856:458,error,error-handling,458,https://root.cern,https://github.com/root-project/root/pull/1856,3,['error'],['error-handling']
Availability,"This PR is to address GitHub issue https://github.com/root-project/root/issues/9353. So far, it is only a revert of d91509e so I can see the failures in the CI (on my system, the RooFit tests are still passing even after reverting said commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9374:141,failure,failures,141,https://root.cern,https://github.com/root-project/root/pull/9374,1,['failure'],['failures']
Availability,"This PR makes the vectorised version of the mathematical functions provided by VecCore available to ROOT vey instantiating them in ROOT Mathcore. ; The symbols will be available automatically at the ROOT prompt and by bringing in the Vc symbols, functions like std::sin or std::cos with vector types (std::sin(ROOT::Double_v) will be available",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1102:87,avail,available,87,https://root.cern,https://github.com/root-project/root/pull/1102,3,['avail'],['available']
Availability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:653,error,error,653,https://root.cern,https://github.com/root-project/root/pull/6841,1,['error'],['error']
Availability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:674,error,error-reporting,674,https://root.cern,https://github.com/root-project/root/pull/16090,1,['error'],['error-reporting']
Availability,"This PR roots our llvm vendor drop to the LLVM's 5.0 release. Updating llvm will enable C++17 support in ROOT. There are many advantages of doing that such as relying on a release which is very thoroughly tested. After many years, this update removes practically all cling/ROOT-specific patches from llvm which means that technically we can link against vanilla llvm. Note that we still have (a reduced) set of patches in clang. Note this comes with a few issues (thus the do-not-merge label):; * We have two failures in cling's testsuite (visible when building with -Dclingtest=On) -- they seem to be coming from a stack-corruption when the JIT is supposed to throw an exception;; * A few roottest failures which I want to make sure it is the same set as on my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:509,failure,failures,509,https://root.cern,https://github.com/root-project/root/pull/1218,2,['failure'],['failures']
Availability,This PR should fix TMVA_RNN_Classification.py tutorial failures seen in many CI node in the nightly builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11347:55,failure,failures,55,https://root.cern,https://github.com/root-project/root/pull/11347,1,['failure'],['failures']
Availability,This PR should fix some of sporadic failures observed in some TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15109:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/15109,1,['failure'],['failures']
Availability,This PR should fix the failures of some PyTorch tests caused by using Python2 instead of Python3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12168:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/12168,1,['failure'],['failures']
Availability,"This PR sits on top of #1871. Adds pythonization `TTree.Asmatrix(columns, dtype)`. `columns` can be `None`, which results in taking all branches. `dtype` is by default `double` but can be set to all types, which are supported by the array interface of `std.vector` (error-handling provided).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872:266,error,error-handling,266,https://root.cern,https://github.com/root-project/root/pull/1872,1,['error'],['error-handling']
Availability,This PR starts replacing `R__ASSERT` checks in fallible functions (e.g. IO) with the new `RResult` error sum type introduced in https://github.com/root-project/root/pull/4683. . I started with `RMiniFileReader::GetNTuple` because it's an expected error case that an `NTuple` of a certain name doesn't exist in the given file (I've certainly done it a few times).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5911:99,error,error,99,https://root.cern,https://github.com/root-project/root/pull/5911,2,['error'],['error']
Availability,"This PR supersedes #3424. The reference counting is greatly improved and the data is kept alive until the datasource dies, which gets delete at the end of the lifetime of the computational graph. See here for the use-case:. ```python; import ROOT; import numpy. data = {; ""x"": numpy.array([1, 2, 3]),; ""y"": numpy.array([4, 5, 6]); }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df = df.Define(""z"", ""x + y""). print(df.Mean(""z"").GetValue()) # Returns 7.0; ```. The feature plays well along with the `RDataFrame.AsNumpy` feature:. ```python; import ROOT. df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""(int)rdfentry_""); data = df.AsNumpy(). df2 = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df2.Snapshot(""tree"", ""file.root""); ```. TODO:. - [x] Figure out how to install the header needed for the `NumyDataSource`; - [x] How to call the header (current name `MakeNumpyDataFrame.hxx`)? We should put it in a scope.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3669:90,alive,alive,90,https://root.cern,https://github.com/root-project/root/pull/3669,1,['alive'],['alive']
Availability,"This PR supersedes https://github.com/root-project/root/pull/15476 since there were changes to be made also in roottest, available at https://github.com/root-project/roottest/pull/1127. From the original PR:. # This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15672:121,avail,available,121,https://root.cern,https://github.com/root-project/root/pull/15672,1,['avail'],['available']
Availability,"This PR updates Cppyy and adapts experimental PyROOT to the changes. It also re-enables a few tests. The following PRs merged and issues fixed in Cppyy are incorporated by this update:. https://bitbucket.org/wlav/cpycppyy/pull-requests/24/fixes-for-memoryregulator-recursiveremove; https://bitbucket.org/wlav/cpycppyy/pull-requests/25/proposal-for-setting-hooks-for-custom. https://bitbucket.org/wlav/cppyy/issues/113/assignment-to-c-global-from-python-does; https://bitbucket.org/wlav/cppyy/issues/115/instantiation-for-c-float-picked-when; https://bitbucket.org/wlav/cppyy/issues/121/dir-does-not-return-auto-instantiated; https://bitbucket.org/wlav/cppyy/issues/131/problem-constructing-object-of-templated; https://bitbucket.org/wlav/cppyy/issues/138/crash-when-deleting-an-object-of-a-python; https://bitbucket.org/wlav/cppyy/issues/139/wrong-overload-picked-when-passing-object. There is still one more pending issue, introduced recently in Cppyy, which affects a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; Those tests have been disabled temporarily. Once a bug fix is available it will be ported right away to experimental PyROOT's Cppyy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:1130,avail,available,1130,https://root.cern,https://github.com/root-project/root/pull/4264,1,['avail'],['available']
Availability,This PR:. Removes CINT from function name; Minor improvement in error ellipsoid example,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15728:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/15728,1,['error'],['error']
Availability,This PR:; * Removes CINT from function name; * Minor improvement in error ellipsoid example,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15705:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/15705,1,['error'],['error']
Availability,"This Pull request adds Google Test fixture functionality in the RNTuple DAOS test suite, enabling automatic storage cleanup when running unit tests with real DAOS clusters. ## Changes or fixes:. - Introduces a fixture class for the test suite and registers all five existing tests under it through the `TEST_F` macro. ; - Consolidates shared functionality in the fixture definition. Namely, pool and container label data and expected diagnostics messages from `ROOT::TestSupport`. ; - Uses the `TearDownTestSuite()` call to automatically destroy DAOS containers created for the unit tests when all of them are completed.; - Replaces some duplicated string literals that specify ntuples and models for variables.; - Introduces preproc definition `R__DAOS_TEST_MOCK` to CMake to bypass container destruction system call if using the mock library as underlying storage. ## Pending:. - One error message is not currently suppressed, as it is not emitted by ROOT's exception diagnostics: `client ERR src/client/api/container.c:148 daos_cont_create_with_label() daos_cont_create label=test-multiple-ntuples failed, DER_EXIST(-1004): 'Entity already exists'`. This is the (normal) output of `RDaosContainer` attempting to create a container by default, and ignoring the error if it already exists in the DAOS pool. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12106:886,error,error,886,https://root.cern,https://github.com/root-project/root/pull/12106,2,['error'],['error']
Availability,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:888,error,error,888,https://root.cern,https://github.com/root-project/root/pull/12109,1,['error'],['error']
Availability,This Pull request provides a small fix to stressRooFit by doing correctly the plot in the full range and in the restricted range as it is done in the corresponding tutorial.; It also provides a fix for an error message in the RooUnitTest class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9134:205,error,error,205,https://root.cern,https://github.com/root-project/root/pull/9134,1,['error'],['error']
Availability,This Pull request removes the final check on the MSE (Minimal Square Error) in the Keras Regression test since too few events are used to train the model. . Revert also the commit disabling pymva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15403:69,Error,Error,69,https://root.cern,https://github.com/root-project/root/pull/15403,1,['Error'],['Error']
Availability,"This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the ; values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10651:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/10651,1,['error'],['error']
Availability,This Pull request should fix a failure seen in the nortcxxmod builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11545:31,failure,failure,31,https://root.cern,https://github.com/root-project/root/pull/11545,1,['failure'],['failure']
Availability,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12819:128,avail,available,128,https://root.cern,https://github.com/root-project/root/pull/12819,1,['avail'],['available']
Availability,This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/10435,1,['error'],['error']
Availability,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/8417,7,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"This addresses the bug raised [in the forum](https://root-forum.cern.ch/t/error-writing-trees-with-snapshot-and-implicitmt/36965). Adds option to `TDirectoryFile` to call `mkdir` with an existing directory name without raising an error, and implements this option when creating a `Snapshot` with multithreading enabled. Also changes `CreateSnaphotRDF` to `CreateSnapshotRDF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4649:74,error,error-writing-trees-with-snapshot-and-implicitmt,74,https://root.cern,https://github.com/root-project/root/pull/4649,2,['error'],"['error', 'error-writing-trees-with-snapshot-and-implicitmt']"
Availability,This addresses the following errors:. Test 5: TText 1 (Text attributes)................................. OK; PDF output.......................................... 5 FAILED; Result = 12968; Reference = 12802; Error = 166 (was 150); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK. Test 43: Divided pads and TLatex................................... OK; PDF output......................................... 43 FAILED; Result = 14206; Reference = 14075; Error = 131 (was 100); GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5957:29,error,errors,29,https://root.cern,https://github.com/root-project/root/pull/5957,3,"['Error', 'error']","['Error', 'errors']"
Availability,"This adds **cividis** as 113th colormap to TColor, as well as the palettes tutorial. This colormap aims to solve problems that people with **color vision deficiency** have with the common colormaps. For more details see:. Nuñez J, Anderton C, and Renslow R. _Optimizing colormaps with consideration for color vision deficiency to enable accurate interpretation of scientific data._. https://arxiv.org/abs/1712.01662. The colormap stops have been interpolated from the (256 stops) Fiji/ImageJ version [1] and cut down to the 9 stops that ROOT uses (using the scipy Akima interpolator). Alternatively, the official* (18 stop) version committed to plotly.py [2] could be used, which would mean a slight deviation from the other palettes (see code below). In the plot produced by the palette tutorial the difference between the 9 and 18 stops seems negligible, hence sticking to the ROOT default values seems appropriate. Double_t cstps[18] = {0.0, 0.0588235294118, 0.117647058824, 0.176470588235, 0.235294117647, 0.294117647059, 0.352941176471, 0.411764705882, 0.470588235294, 0.529411764706, 0.588235294118, 0.647058823529, 0.705882352941, 0.764705882353, 0.823529411765, 0.882352941176, 0.941176470588, 1.0};; Double_t red[18] = { 0./255., 0./255., 0./255., 39./255., 60./255., 76./255., 91./255., 104./255., 117./255., 131./255., 146./255., 161./255., 176./255., 192./255., 209./255., 225./255., 243./255., 255./255.};; Double_t green[18] = { 32./255., 42./255., 52./255., 63./255., 74./255., 85./255., 95./255., 106./255., 117./255., 129./255., 140./255., 152./255., 165./255., 177./255., 191./255., 204./255., 219./255., 233./255.};; Double_t blue[18] = { 76./255., 102./255., 110./255., 108./255., 107./255., 107./255., 109./255., 112./255., 117./255., 120./255., 120./255., 118./255., 114./255., 109./255., 102./255., 92./255., 79./255., 69./255.};; Idx = TColor::CreateGradientColorTable(18, cstps, red, green, blue, 255, alpha); . *Meaning committed by the original author. [1] https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1546:512,down,down,512,https://root.cern,https://github.com/root-project/root/pull/1546,1,['down'],['down']
Availability,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12453:786,ERROR,ERROR,786,https://root.cern,https://github.com/root-project/root/issues/12453,4,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,This allows downstream packages to also use the `ROOT_ADD_GTEST` macro in CMake with all its convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16568:12,down,downstream,12,https://root.cern,https://github.com/root-project/root/pull/16568,1,['down'],['downstream']
Availability,"This allows the header files to spell the std math functions unqualified and; this way to allow template instantiations with vector types to swap them with; vector functions. Consider:; ```cpp. namespace N {; void call(double);; }. inline namespace __1 {; using N::call; // Enables ADL in a nicer and more transparent way; template <class T>; struct S {; int f() {; using namespace N; // enables ADL but it looks ugly...; call(T()); // call is an unqualified id, thus ADL will kick in. If we had `N::call(T())` we would have a compiler error.; return 42;; }; };; }. namespace N {; struct V{};; void call(V);; }. int res = S<N::V>().f(); // The compiler will add lookup candidates from namespace N. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/445:536,error,error,536,https://root.cern,https://github.com/root-project/root/pull/445,1,['error'],['error']
Availability,This allows to avoid awkward errors due to the absence of moves.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2490:29,error,errors,29,https://root.cern,https://github.com/root-project/root/pull/2490,1,['error'],['errors']
Availability,This also fixes an unused variable warning. Thanks for the ping @couet !,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9274:59,ping,ping,59,https://root.cern,https://github.com/root-project/root/pull/9274,1,['ping'],['ping']
Availability,This appease the bots' sporadic failures about missing gRandom while we are investigating.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4410:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/4410,1,['failure'],['failures']
Availability,"This avoids an error in the nightlies:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_v7_ntuple_ntpl008_import/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13447:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/13447,1,['error'],['error']
Availability,This avoids problems during ctest like:; ```; 512/838 Test #516: tutorial-multicore-mp001_fillHistos .................................***Failed Error regular expression found in output. Regex=[Error in <] 2.61 sec; Processing /builddir/build/BUILD/root-6.14.06/tutorials/multicore/mp001_fillHistos.C...; SysError in <TFile::TFile>: could not delete myFile_3.root (errno: 2) (No such file or directory); Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (myHisto_3) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3029:144,Error,Error,144,https://root.cern,https://github.com/root-project/root/pull/3029,3,['Error'],['Error']
Availability,This branch contains modifications to address some performance issues identifies in JIRA issue [ROOT-8871](https://sft.its.cern.ch/jira/browse/ROOT-8871). The main changes are:; * Make `TClass::LoadClassInfo()` private and avoid locking the interpreter unnecessarily; * Avoid interpreter lock in `TClass::GetListOfBases()` and return existing list if already available; * Reduce scope of interpreter locks in several places where the lock is taken before necessary; * Add locks where unprotected use of `gInterpreter` is made; * Improve code clarity and performance of `TTree::Fill()`; * Some typo and formatting fixes to improve conformance to coding conventions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/709:359,avail,available,359,https://root.cern,https://github.com/root-project/root/pull/709,1,['avail'],['available']
Availability,"This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34.; [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8549:834,avail,available,834,https://root.cern,https://github.com/root-project/root/issues/8549,1,['avail'],['available']
Availability,"This bug report:; ![obraz_2021-01-05_030717](https://user-images.githubusercontent.com/483575/103598565-36ee1180-4f03-11eb-891b-2a66e7bb2062.png). Reference from tutorial: https://root.cern.ch/doc/master/alice__vsd_8C.html; ![image](https://user-images.githubusercontent.com/483575/103598652-6e5cbe00-4f03-11eb-9716-f77d792b80e9.png). ### Describe the bug; By running one of the ROOT tutorials:. $ root alice_vsd.C. I do not see any button to change events (see the image above). Apparently, from the log:. > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoBack.gif> (null); > Warning in <TASImage::GetMask>: No image; > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoForward.gif> (null); > Warning in <TASImage::GetMask>: No image. however:; ```; $ ls -all /usr/lib/root/6.22/icons/GoBack.gif /usr/lib/root/6.22/icons/GoForward.gif; -rw-r--r-- 1 root root 1177 11-27 16:00 /usr/lib/root/6.22/icons/GoBack.gif; -rw-r--r-- 1 root root 1166 11-27 16:00 /usr/lib/root/6.22/icons/GoForward.gif; ```. ### Expected behavior; I expect to see buttons with figures. ### To Reproduce; $ root alice_vsd.C. from the eve tutorials. ### Setup. 1. ROOT version: 6.22.06; 2. Operating system: Linux Gentoo; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: compiled from sources via Gentoo package manager/portage, uses external libafterimage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985:1247,down,download,1247,https://root.cern,https://github.com/root-project/root/issues/6985,1,['down'],['download']
Availability,"This causes a flood of ""NON_XML_CHAR"" etc output in Jenkins, cluttering the output and making the actual failure virtually invisible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12908:105,failure,failure,105,https://root.cern,https://github.com/root-project/root/pull/12908,1,['failure'],['failure']
Availability,"This change is introduced to fix a problem with redefinition of RooMath; when running stressRooFit in interpreted mode on some CI nodes. You can see the errors here for example:; https://github.com/root-project/root/pull/9004#issuecomment-954950871. Copy paste from the log:; ```; Processing /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx...; In file included from input_line_8:1:; In file included from /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h:25:7: error: redefinition of 'RooMath'; class RooMath {; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooGaussModel.h:21:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site in header from module 'RooFit.RooGaussModel.h'; #include ""RooMath.h""; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/module.modulemap:2717:10: note: RooFit.RooGaussModel.h defined here; module ""RooGaussModel.h"" { header ""RooGaussModel.h"" export * }; ^; /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site here; #include ""RooMath.h""; ^; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9214:153,error,errors,153,https://root.cern,https://github.com/root-project/root/pull/9214,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,This class creates a TGraph2D with asymmetric errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10347:46,error,errors,46,https://root.cern,https://github.com/root-project/root/pull/10347,1,['error'],['errors']
Availability,"This code assumed that rootcling doesn't return zero when we; print an error, but this is not the case. Let's downgrade it to; a warning that we actually still return a zero exit code. Also the method now just returns true instead of writing 'true'; twice to the same result variable and then returning that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/946:71,error,error,71,https://root.cern,https://github.com/root-project/root/pull/946,2,"['down', 'error']","['downgrade', 'error']"
Availability,"This commit adjusts the allowed deviation from the expected value so that the test passes. The reported error is (with slight variations in the exact numbers):. /builddir/build/BUILD/root-6.20.06/roofit/roostats/test/testHypoTestInvResult.cxx:24: Failure; The difference between result->UpperLimitEstimatedError() and 0.059684301 is 1.1846561807221656e-07, which exceeds 1.E-8, where; result->UpperLimitEstimatedError() evaluates to 0.05968418253438193,; 0.059684301 evaluates to 0.059684301000000002, and; 1.E-8 evaluates to 1e-08.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5867:104,error,error,104,https://root.cern,https://github.com/root-project/root/pull/5867,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:134,error,errors,134,https://root.cern,https://github.com/root-project/root/pull/13926,4,"['Error', 'error', 'failure']","['Error', 'errors', 'failures']"
Availability,This commit fixes a duplicate include error which occurs on configuring Cmake options.; This happens because the directory is included again in a few lines later.; @vgvassilev . ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:538 (add_subdirectory):; The binary directory. E:/root-build/builtins/glew. is already used to build a source directory. It cannot be used to build; source directory. E:/root/builtins/glew. Specify a unique binary directory name.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5525:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/5525,2,"['Error', 'error']","['Error', 'error']"
Availability,"This commit fixes the error received on building MathCore.pcm on Windows. ```; In file included from input_line_16:9:; In file included from C:/root-build/include\Fit/FitConfig.h:23:; C:/root-build/include\TMath.h(782,13): error G30564CF7: use of undeclared identifier '_finite' [C:\root-build\math\math; core\G__MathCore.vcxproj]; { return finite(x); }; ^; C:/root-build/include\TMath.h:571:22: note: expanded from macro 'finite'; # define finite _finite; ^; ```. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5800:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/5800,2,['error'],['error']
Availability,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139:1387,avail,available,1387,https://root.cern,https://github.com/root-project/root/pull/7139,1,['avail'],['available']
Availability,This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it.; Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. ; In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before.; This commit fixes the problem reported in ; ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3425:248,error,error,248,https://root.cern,https://github.com/root-project/root/pull/3425,1,['error'],['error']
Availability,"This commit reduces ExcludeModules, which reduces dependency on rootmap files. These modules contain global variables which conflict with users' code such as PI and ERROR. This commit also undefines them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3635:165,ERROR,ERROR,165,https://root.cern,https://github.com/root-project/root/pull/3635,1,['ERROR'],['ERROR']
Availability,"This commit removes some functions from the RooFit data classes:. * `RooAbsData::valid()` (virtual method that was overridden in; RooDataHist but not RooDataSet). * `RooDataHist::valid(std::size_t i)` and `RooDataHist::valid()`. * `RooDataHist::cacheValidEntries()`. The `cacheValidEntries` method was originally intended to be used in; `RooAbsOptTestStatistic` to mask histogram entries out of the variable; range in case of a subrange fit. The reasons why `cacheValidEntries` and; the related `valid()` methods should be removed are:. 1. It is redundant. In a subrange fit, the `RooAbsOptTestStatistic` is; creating a clone of the dataset with the subrange only using; `RooAbsData::reduce()`. So all entries are valid by definition. 2. RooDataHist and RooDataSet have inconistent implementations. For; the RooDataHist, `valid()` tells you ""if bin `i` is considered; valid within the current range definitions of all observables""; (according to the documentation). For the RooDataSet, it always; returns `true`. This inconsistency leaves plenty of room for error. 3. The masking of out-of-range entries unnessecarily increases the; `mutable` state of the RooDataHist, which can cause trouble if one; updates the observable range but then forgets to call; `cacheValidEntries()`. 4. Even the documentation said that `RooDataHist::cacheValidEntries()`; was a ""shortcut function only for RooAbsOptTestStatistic"". Why keep; it if `RooAbsOptTestStatistic` doesn't even use it in a meaningful; way anymore?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9168:365,mask,mask,365,https://root.cern,https://github.com/root-project/root/pull/9168,4,"['error', 'mask', 'redundant']","['error', 'mask', 'masking', 'redundant']"
Availability,"This commit revert the SplitApp into Splitter, it remove the bug of the TreeTable scrollbar appearing for no reason, and the bug of the breadcrumbs not creating the dropdown menu when not enough space is available.; I believe that this revert is useful if after CHEP users want to to try it, it will be more stable and more enjoyable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4591:204,avail,available,204,https://root.cern,https://github.com/root-project/root/pull/4591,1,['avail'],['available']
Availability,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5683:667,avail,available,667,https://root.cern,https://github.com/root-project/root/pull/5683,2,"['avail', 'failure']","['available', 'failure']"
Availability,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5741:674,avail,available,674,https://root.cern,https://github.com/root-project/root/pull/5741,2,"['avail', 'failure']","['available', 'failure']"
Availability,This conveniently also allows looking at columns through a `typedef` that might only be available with a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16698:88,avail,available,88,https://root.cern,https://github.com/root-project/root/pull/16698,1,['avail'],['available']
Availability,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938:1087,failure,failure,1087,https://root.cern,https://github.com/root-project/root/pull/5938,1,['failure'],['failure']
Availability,This double semicolon causes compilation with pedantic gcc settings in newer version to stop with an error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6197:101,error,error,101,https://root.cern,https://github.com/root-project/root/pull/6197,1,['error'],['error']
Availability,This error: http://cdash.cern.ch/viewBuildError.php?buildid=567476; was caused because modules couldn't merge definition of struct __pthread_internal_list,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2695:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/2695,1,['error'],['error']
Availability,"This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12956:5,failure,failure,5,https://root.cern,https://github.com/root-project/root/pull/12956,1,['failure'],['failure']
Availability,"This feature is implemented via a composite pythonizor that matches `TGraph`, `TGraph2D` and their error subclasses, and pythonises their getter methods of the X,Y,Z coordinate and error arrays, which in C++ return a pointer to double. The pythonisation consists in setting the size of the array buffer that the getter method returns, so that it is known in Python and the buffer is fully usable (its length can be obtained, it is iterable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3540:99,error,error,99,https://root.cern,https://github.com/root-project/root/pull/3540,2,['error'],['error']
Availability,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8176:412,error,error-prone,412,https://root.cern,https://github.com/root-project/root/pull/8176,1,['error'],['error-prone']
Availability,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5925:255,avail,available,255,https://root.cern,https://github.com/root-project/root/pull/5925,1,['avail'],['available']
Availability,"This fixes #12358. When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of `std::tuple` is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12532:406,error,error,406,https://root.cern,https://github.com/root-project/root/pull/12532,1,['error'],['error']
Availability,"This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8995:194,error,error,194,https://root.cern,https://github.com/root-project/root/pull/8995,9,['error'],['error']
Availability,"This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),; and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:; ```c++; std::cout << \""check\"" << std::endl; return x;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3407:138,error,error,138,https://root.cern,https://github.com/root-project/root/pull/3407,1,['error'],['error']
Availability,"This fixes ROOT-10333. Since the printValue set of functions always takes a pointer and dereferences it without any checks,; the previous implementation was attempting to valuePrint the pointee (rather than the pointer value); but this lead to a segmentation fault whenever the smart pointer was set to nullptr. Now, the valuePrinting for the smart pointers behaves the same as for regular pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4487:259,fault,fault,259,https://root.cern,https://github.com/root-project/root/pull/4487,1,['fault'],['fault']
Availability,"This fixes ROOT-10504. the script:; ```. namespace boost { namespace mpl {. // Commenting the next line make the assert failure go away; struct TTUBE {};. }}. ```; reproduce the problem with 'just' ROOT. The trigger is the auto-loading of a library that has a dictionary with has forward decl string .. which all starts with:; ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; extern int __Cling_Autoloading_Map;; ....; ```. The order of parsing is (with many ellipsis):; ```; ""<<< cling interactive line includer >>>"" : line 9 : #include “standalone.C”; standalone.C : line 1 : #pragma GCC diagnostic push; standalone.C : line 2 : #pragma GCC diagnostic ignored ""-Wuninitialized"" // Inserted in Diag map; standalone.C : line 3 : #pragma GCC diagnostic ignored ""-Wsign-conversion"" // Inserted in Diag map; standalone.C : line 8 : struct TTUBE {} ; // triggers auto-loading and thus recursive parsing. ""<<< cling interactive line includer >>>"" : line 10 : parse dict fwd declare string; input_line_9 : line 2 : #pragma clang diagnostic ignored ""-Wkeyword-compat"" // Inserted in Diag map; input_line_9 : line 3 : #pragma clang diagnostic ignored ""-Wignored-attributes"" // Inserted in Diag map; input_line_9 : line 4 : #pragma clang diagnostic ignored ""-Wreturn-type-c-linkage"" // Inserted in Diag map. end of file. standalone.C : line 12 : #pragma GCC diagnostic pop // Inserted in Diag map; ```; The last line triggers the assert because when recording the state change, it records it as being from; ```; standalone.C : line 12; ""<<< cling interactive line includer >>>"" : line 9; ```; but when recording the last one, it notices that the last state change that happened, indirectly, for the file '<<< cling interactive line includer >>>' happened at line 10 (because of the pragma in input_line_9 which is 'recorded' as being included by line 10),; which makes that the state change for ```standalone.C:12``` happens 'ealier' than the last state change as far as the pseudo-file ""<<< cling interac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4882:120,failure,failure,120,https://root.cern,https://github.com/root-project/root/pull/4882,2,['failure'],['failure']
Availability,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5463:231,down,down,231,https://root.cern,https://github.com/root-project/root/pull/5463,1,['down'],['down']
Availability,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:231,down,down,231,https://root.cern,https://github.com/root-project/root/pull/5462,1,['down'],['down']
Availability,This fixes ROOT-7608.; Move to protected also the functions of TH1 that do not make sense for TH2Poly.; Add a test for getting/setting the bin error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3568:143,error,error,143,https://root.cern,https://github.com/root-project/root/pull/3568,1,['error'],['error']
Availability,"This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. ; Now for parameter which have a very small error the step size is correctly estimated. ; The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the; confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3853:82,error,error,82,https://root.cern,https://github.com/root-project/root/pull/3853,2,['error'],['error']
Availability,"This fixes [ROOT-9322](https://sft.its.cern.ch/jira/browse/ROOT-9322). If a `TTreeReaderValue` is used to read fixed or variable size array, TTreeReader now complains and does not finish construction successfully (rather than successfully construct and read only the first element of the array). When such a (wrongly constructed) `TTreeReaderValue `is used, the following error messages are printed on screen:. ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch arr: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch arr contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you remember to call TTreeReader.Set(Next)Entry()?; ```. I could not find a way to avoid the last two `Error`s and still have `TTreeReaderValue::IsValid` return `false`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1842:372,error,error,372,https://root.cern,https://github.com/root-project/root/pull/1842,5,"['Error', 'error']","['Error', 'error']"
Availability,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8175:335,down,down,335,https://root.cern,https://github.com/root-project/root/pull/8175,1,['down'],['down']
Availability,This fixes a cmssw llvm9 plus modules issue:. error: 'ROOT::Math::ParamFunction' has different definitions in different modules; first difference is defined here found method 'SetParameters' with body. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7101:46,error,error,46,https://root.cern,https://github.com/root-project/root/pull/7101,1,['error'],['error']
Availability,This fixes a test failure on i686:. 17/593 Test #94: test-stressmathcore ........................................***Failed Error regular expression found in output. Regex=[FAILED|Error in] 3.21 sec; Beta distribution 		................ OK; Gamma distribution 		................ OK; Chisquare distribution 		................ OK; Normal distribution 		................ OK; BreitWigner distribution 		................ OK; F distribution 		................ OK; lognormal distribution 		................ OK; Exponential distribution 		................ OK; Landau distribution 		................ OK; Uniform distribution 		................ OK; ******************************************************************************; 	Test of Physics Vector (GenVector package); ******************************************************************************; XYVector creation 		................ OK; XYVector addition 		................ OK; XYVector creation 		................ OK; XYVector setting 		................ OK; XYVector -> Polar2DVector 		................ OK; Vector conversion 		................ OK; XYVector operations 		..............; Polar2DVector operations 		................ OK; XYVector delta values 		..............; Polar2DVector delta values 		................ OK; XYVector write 		................ OK; XYVector read 		................ OK; XYVector after read 		................ OK; Polar2DVector write 		................ OK; Polar2DVector read 		................ OK; Polar2DVector after read 		................ OK; XYZVector creation 		................ OK; XYZVector addition 		................ OK; XYZVector creation 		................ OK; XYZVector setting 		................ OK; XYZVector -> Polar3DVector 		................ OK; Vector conversion 		................ OK; XYZVector operations 		..............; Polar3DVector operations 		................ OK; XYZVector delta values 		..............; Polar3DVector delta values 		................ OK; XYZVector write 		................ OK; XYZ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/401,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec; tgamma(9.0) :	 OK; lgamma(0.1) :	 OK; inc_gamma(1,0.001) :	 OK; inc_gamma(100,99) :	 OK; inc_gamma_c(100,99) :	 OK; inc_gamma_c(1000,1000.1) :	 OK; erf(0.5) :	 OK; erfc(-1.0) :	 OK; beta(1.0, 5.0) :	 OK; inc_beta(1,1,1) :	 OK; inc_beta(0.5,0.1,1.0) :	 OK; assoc_laguerre(4, 2, 0.5) :	 OK; assoc_legendre(10, 1, -0.5) :	 OK; comp_ellint_1(0.50) :	 OK; comp_ellint_2(0.50) :	 OK; comp_ellint_3(0.5, 0.5) :	 OK; conf_hyperg(1, 1.5, 1) :	 OK; cyl_bessel_i(1.0, 1.0) :	 OK; cyl_bessel_j(0.75, 1.0) :	 OK; cyl_bessel_k(1.0, 1.0) :	 OK; cyl_neumann(0.75, 1.0) :	 OK; ellint_1(0.50, PI/3.0) :	 OK; ellint_2(0.50, PI/3.0) :	 OK; ellint_3(-0.50, 0.5, PI/3.0) :	 OK; expint(1.0) :	 OK; hyperg(8, -8, 1, 0.5) :	 OK; laguerre(4, 1.) :	 FAILED ; Discrepancy in laguerre(4, 1.) () :; -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16); legendre(10, -0.5) :	 OK; riemann_zeta(-0.5) :	 OK; sph_bessel(1, 10.0) :	 OK; sph_legendre(3, 1, PI/2.) :	 OK; sph_neumann(0, 1.0) :	 OK; airy_Ai(-0.5) :	 OK; airy_Bi(0.5) :	 OK; airy_Ai_deriv(-2) :	 OK; airy_Bi_deriv(-3) :	 OK; airy_zero_Ai(2) :	 OK; airy_zero_Bi(2) :	 OK; airy_zero_Ai_deriv(2) :	 OK; airy_zero_Bi_deriv(2) :	 OK; Error: Special Functions Test FAILED !!!!!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/400:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/400,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,This fixes an error when using RDataFrame with an RArrowDS with integer columns.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2479:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/2479,1,['error'],['error']
Availability,"This fixes an error when using RDataFrame with an RArrowDS with integer columns. Somehow it used to work with Long64_t, but not with Long32_t.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2478:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/2478,1,['error'],['error']
Availability,"This fixes random failures of the `R__USE_IMT` part of the `datasource-root` test on Windows, due to file name corruptions, like for example:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13469:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/13469,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/8366,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,This fixes that regex characters in the source directory path; cause the CMake configuration to fail with cryptic error messages. This happens because we interpret the source directory as a regex in a; few places in our CMake code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923:114,error,error,114,https://root.cern,https://github.com/root-project/root/pull/923,1,['error'],['error']
Availability,This fixes the ASAN failures that are related to the BatchMode. More detail can be found in the commit descriptions. Should be backported to 6.26.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11195:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/11195,1,['failure'],['failures']
Availability,"This fixes the ASAN test failure of `testLikelihoodSerial` seen in the; nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastBuild/testReport/junit/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testLikelihoodJob/. Following up on #12835.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12880:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/12880,1,['failure'],['failure']
Availability,"This fixes the error ""TorchScript requires source access in order to carry out compilation, make sure original .py files are available""; it can not be executed with exec in python. Best ; Omar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6934:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/6934,2,"['avail', 'error']","['available', 'error']"
Availability,This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3242:15,error,errors,15,https://root.cern,https://github.com/root-project/root/pull/3242,1,['error'],['errors']
Availability,"This fixes the following (potentially erroneous) error:; Error in <CloseStreamerInfoROOTFile>: Unique pointer unique_ptr<TUnuranBaseDist,default_delete<TUnuranBaseDist > > has zero data members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2910:49,error,error,49,https://root.cern,https://github.com/root-project/root/pull/2910,2,"['Error', 'error']","['Error', 'error']"
Availability,"This fixes the following compilation errors on Windows:; TGeoTessellated.cxx(385,67): error C2027: use of undefined type 'std::array<CellVec_t,1000000>'. And on MacOS:; TGeoTessellated.cxx:385:23: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<int, std::__1::allocator<int> >, 1000000>'; auto grid = new std::array<CellVec_t, ngrid * ngrid * ngrid>;; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5117:37,error,errors,37,https://root.cern,https://github.com/root-project/root/pull/5117,3,['error'],"['error', 'errors']"
Availability,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:37,error,errors,37,https://root.cern,https://github.com/root-project/root/pull/11153,2,['error'],"['error', 'errors']"
Availability,"This fixes the following error when running (for example) tmva004_RStandardScaler.C:; ```; IncrementalExecutor::executeFunction: symbol '?AddDefinesToGraph@GraphDrawing@RDF@Internal@ROOT@@YA?AV?$shared_ptr@VGraphNode@GraphDrawing@RDF@Internal@ROOT@@@std@@V56@ABVRBookedDefines@234@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@6@@Z' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_12_'!; You are probably missing the definition of class std::shared_ptr<class ROOT::Internal::RDF::GraphDrawing::GraphNode> __cdecl ROOT::Internal::RDF::GraphDrawing::AddDefinesToGraph(class std::shared_ptr<class ROOT::Internal::RDF::GraphDrawing::GraphNode>,class ROOT::Internal::RDF::RBookedDefines const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6897:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/6897,1,['error'],['error']
Availability,"This fixes the following error:; ```; error G34C21FBE: static_assert expression is not an integral constant expression; static_assert(offsetof(TEveVectorT, fZ) == offsetof(TEveVectorT, fX) + 2*sizeof(TT),; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stddef.h:42:31: note: expanded from macro 'offsetof'; #define offsetof(s,m) ((size_t)&reinterpret_cast<char const volatile&>((((s*)0)->m))); ^; TEveProjections.h:174:71: note: in instantiation of member function 'TEveVectorT<float>::Arr' requested here; virtual Float_t* GetProjectedCenter() { return fProjectedCenter.Arr(); }; ^; TEveVector.h:55:21: note: cast that performs the conversions of a reinterpret_cast is not allowed in a constant expression; static_assert(offsetof(TEveVectorT, fZ) == offsetof(TEveVectorT, fX) + 2*sizeof(TT),; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stddef.h:42:32: note: expanded from macro 'offsetof'; #define offsetof(s,m) ((size_t)&reinterpret_cast<char const volatile&>((((s*)0)->m))); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1150:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/1150,2,['error'],['error']
Availability,"This fixes the following errors:; ```; TRootDS.cxx(145): error C2668: 'std::make_unique': ambiguous call to overloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&,void>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; TRootDS.cxx(145): note: while trying to match the argument list '(std::string_view, std::string_view)'; TRootDS.cxx(145): error C2512: 'ROOT::Experimental::TDataFrame::TDataFrame': no appropriate default constructor available [TreePlayer.vcxproj]; TTrivialDS.cxx; TTrivialDS.cxx(82): error C2668: 'std::make_unique': ambiguous call to overloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&,void>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; TTrivialDS.cxx(82): note: while trying to match the argument list '(ULong64_t)'; TTrivialDS.cxx(82): error C2512: 'ROOT:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1151:25,error,errors,25,https://root.cern,https://github.com/root-project/root/pull/1151,2,['error'],"['error', 'errors']"
Availability,This fixes the following failure of the test-stresshistofit-interpreted test:. 151: Processing C:/Users/sftnight/git/master/test/stressHistoFit.cxx...; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:117:9: warning: 'FOREGROUND_BLUE' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_BLUE 1; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:35:9: note: previous definition is here; 151: #define FOREGROUND_BLUE 0x0001 // text color contains blue.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:118:9: warning: 'FOREGROUND_GREEN' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_GREEN 2; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:36:9: note: previous definition is here; 151: #define FOREGROUND_GREEN 0x0002 // text color contains green.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_RED 4; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here; 151: #define FOREGROUND_RED 0x0004 // text color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/pull/3312,1,['failure'],['failure']
Availability,This fixes the following type of error with recent versions of Visual Studio (v17.6):; ```; 800: Processing C:/root-dev/git/debug/tutorials/roofit/rf614_binned_fit_problems.C...; 800: IncrementalExecutor::executeFunction: symbol '__std_find_trivial_8' unresolved while linking [cling interface function]!; 800: You are probably missing the definition of __std_find_trivial_8; 800: Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13254:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/13254,1,['error'],['error']
Availability,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5002:525,Error,Error,525,https://root.cern,https://github.com/root-project/root/pull/5002,2,"['Error', 'error']","['Error', 'errors']"
Availability,This fixes the missing include errors occurred while building ROOT on Windows with the flag Druntime_cxxmodules=On.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5086:31,error,errors,31,https://root.cern,https://github.com/root-project/root/pull/5086,1,['error'],['errors']
Availability,This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2786:86,error,error-with-root-,86,https://root.cern,https://github.com/root-project/root/pull/2786,4,['error'],"['error', 'error-with-root-']"
Availability,"This fixes tonights nightlies with the error `Error in <DavixOpen>: can not open file ""https://root.cern/files/tmva101.root"" with davix: Failure (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4589:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/4589,3,"['Error', 'Failure', 'error']","['Error', 'Failure', 'error']"
Availability,"This fixes what was probably a typo in ROOT_GENERATE_DICTIONARY. With this fix this CMakeLists is broken: https://github.com/root-project/rootbench/pull/161/files#diff-b605e888bcff10e766b8f07a585786ad , resulting in the following build error:. ```; input_line_12:3:10: fatal error: 'inc/classes.h' file not found; #include ""inc/classes.h""; ^~~~~~~~~~~~~~~; Error: /home/eguiraud/ROOT/build_cxx17/bin/rootcling: compilation failure (/home/eguiraud/ROOT/build_rootbench/root/tree/dataframe/wmass/libSignalAnalysis81f7406343_dictUmbrella.h); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6056:236,error,error,236,https://root.cern,https://github.com/root-project/root/pull/6056,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107:54,toler,tolerance,54,https://root.cern,https://github.com/root-project/root/pull/14107,1,['toler'],['tolerance']
Availability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:423,error,errors,423,https://root.cern,https://github.com/root-project/root/pull/12503,2,['error'],['errors']
Availability,"This goes hand-in-hand with #169 . ; These were found in a different way, though: ; By creating them with their default constructor and trying to stream them to a memory buffer (the ""StreamingTest"" of https://github.com/olifre/rootStaticAnalyzer ). . This PR demotes some class-versions for classes which break when streamed (and which are not supposed to be streamed) and makes one more member transient which should be transient (in TTreeFormula). . There's one more remaining issue:. ```; Error in <TStreamerInfo::Build>: TRandom1, discarding: const unsigned int* fTheSeeds, no [dimension]; ```. I'm not sure what the ""dimension"" should be for this member - it's not so clear from the ranlux code to me. . More issues are probably still there since rootStaticAnalyzer right now excludes some classes from testing completely if their construction / destruction using the default constructor fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/170:492,Error,Error,492,https://root.cern,https://github.com/root-project/root/pull/170,1,['Error'],['Error']
Availability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:268,error,error,268,https://root.cern,https://github.com/root-project/root/pull/303,1,['error'],['error']
Availability,"This header is directly included by TObject.h and directly including; it from some other header doesn't seem to be supported. As C++ modules; with submodule visibility simulate directl including each module header,; we seem to get some errors according to the comments in this header. This patch removes it from the argument list of the; ROOT_GENERATE_DICTIONARY call which prevents it from getting directly; included in the `Core` C++ module. We can also remove it from the header; blacklist after this change. The normal dictionary won't be affected by this. This header is anyway; not supposed to contain TVersionCheck.h but only TObject.h which will; still provide it in the right way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1459:236,error,errors,236,https://root.cern,https://github.com/root-project/root/pull/1459,1,['error'],['errors']
Availability,"This introduces TStatusBitsChecker which allows to check whether there is 'Status bits' overlap in a given class hierarchy. Expectedly, there are several overlaps .... This merge request also annotate (by properly naming the enum type as EStatusBits) as needed and resolves the reported errors in core, io/io, tree/tree and hist/hist. Some overlaps can not be resolve to preserve forward compatibility and after analysis of which bit is overlapping should be 'harmless' and thus are marked to be ignored by the checker tools (by adding a enum type named EStatusBitsDupExceptions). Usage example:; ```; return TStatusBitsChecker::CheckAlClasses();. // or without EStatusBitsDupExceptions in TStreamerElement.; TStatusBitsChecker::Check(""TStreamerElement"");. Error in <TStatusBitsChecker>: In TStreamerElement class hierarchy, there are duplicates bits:; Error in <TStatusBitsChecker>: Bit 6 used in TStreamerElement as kHasRange; Error in <TStatusBitsChecker>: Bit 6 used in TObject as kCannotPick; Error in <TStatusBitsChecker>: Bit 13 used in TStreamerElement as kDoNotDelete; Error in <TStatusBitsChecker>: Bit 13 used in TObject as kInvalidObject; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/917:287,error,errors,287,https://root.cern,https://github.com/root-project/root/pull/917,6,"['Error', 'error']","['Error', 'errors']"
Availability,"This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3044:254,error,error,254,https://root.cern,https://github.com/root-project/root/pull/3044,1,['error'],['error']
Availability,This is a backport of #12025 by @hahnjo and fixes the corresponding test failure in v6-28-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212:73,failure,failure,73,https://root.cern,https://github.com/root-project/root/pull/12212,1,['failure'],['failure']
Availability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12722:657,error,error,657,https://root.cern,https://github.com/root-project/root/pull/12722,1,['error'],['error']
Availability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/13044. After merging this PR, the following RooFit commits in ROOT `master` (as of 6276954184) are the ones that are not in `v6-28-00-patches` (as of `8c19761`). ```txt; 9b93dbb7d2 [RF] Apply clang-tidy `performance-faster-string-find`; 04fbc4efb3 [RF] Don't have RooFitCuda as dependency for RooFitCore; cf653869f7 [RF] Don't bar xroofit behind `root7` anymore; e5a67bc647 [RF] More type safety and better memory management with CUDA interface; bbeb520a1a [RF] Implement `RooPower` and `RooExpPoly` in RooBatchCompute; 529ba82432 [RF] RAII management of CUDA events and streams; cc3ee9200a [RF] Only allow automatic memory management for CUDA device arrays; 77299a2c34 [RF] Reduce public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:1332,redundant,redundant-string-cstr,1332,https://root.cern,https://github.com/root-project/root/pull/13295,1,['redundant'],['redundant-string-cstr']
Availability,"This is a cherry pick of the `loader.py` in cppyy-backend version clingwrapper-1.7.2, which has the new treatment of `CLING_STANDARD_PCH` and its setting to `'none'` to prevent the PCH check by Cppyy. It should fix the new test failures that appeared last night in the experimental PyROOT builds. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/76/. A complete update will come for the three packages of Cppyy once the functionality of this PR:; https://github.com/root-project/root/pull/3579; is merged into `TCling`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:228,failure,failures,228,https://root.cern,https://github.com/root-project/root/pull/3581,1,['failure'],['failures']
Availability,This is a follow-up on 872886bcc. That commit was reordering code in the wrong way: the initialization of the `useKerasCNN` and `usePyTorchCNN` variables should have also been moved to the top. This fixes the current failures on Windows.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15295:217,failure,failures,217,https://root.cern,https://github.com/root-project/root/pull/15295,4,['failure'],['failures']
Availability,"This is a follow-up on 98ca55239, consistent with what is already done in the code for `png` and `jpeg`. Essentially, this reverts #15191 on macOS. This will fix the occasional build failures on macOS beta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15594:183,failure,failures,183,https://root.cern,https://github.com/root-project/root/pull/15594,1,['failure'],['failures']
Availability,"This is a follow-up on 98ca55239, consistent with what is already done in the code for `png` and `jpeg`. This will fix the occasional build failures on macOS beta. Backport of #15594.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15595:140,failure,failures,140,https://root.cern,https://github.com/root-project/root/pull/15595,1,['failure'],['failures']
Availability,"This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned; commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check; in `cmake/modules/SearchInstalledSoftware.cmake`:; ```cmake; if(tmva-gpu AND NOT CUDA_FOUND); set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE); endif(); ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not; used. That means that `tmva-gpu` was silently disabled, and not building; successfully (which I had wrongly concluded because of the absence of; errors). This check needs to be replaced with; `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the; `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular; `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with; `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only; `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT; itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html; * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13991:928,error,errors,928,https://root.cern,https://github.com/root-project/root/pull/13991,1,['error'],['errors']
Availability,"This is a followup to 5e424e4, where the Python finding was moved into `SearchInstalledSoftware.cmake`. However, what I missed is that there was a check in `RootBuildOptions` that disabled PyROOT by default if Python is not found, which is now not the case at that point! Therefore, ROOT builds won't have PyROOT by default anymore, which is a bad mistake. Fortunately, the check is entirely redundant and this commit suggests to remove it. There is already a check in `SearchInstalledSoftware` where PyROOT (and `tmva-pymva`) are disabled when the Python development headers where not found. Also, this kind of logic to conditionally change the defaults it bad because it doesn't go well with the ""fail on missing"" paradigm (if `fail-on-missing` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15471:392,redundant,redundant,392,https://root.cern,https://github.com/root-project/root/pull/15471,1,['redundant'],['redundant']
Availability,"This is a general refactoring of the class test/stressMathMore.cxx.; It involves using Google test for assertions, test fixtures, and general; refactoring of the code. Ping @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/586:168,Ping,Ping,168,https://root.cern,https://github.com/root-project/root/pull/586,1,['Ping'],['Ping']
Availability,"This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,; dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:; ```; CMake Error at cmake_install.cmake:132 (file):; file INSTALL cannot find; ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"".; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:136,error,error,136,https://root.cern,https://github.com/root-project/root/pull/3094,2,"['Error', 'error']","['Error', 'error']"
Availability,"This is a partial backport of the changes to `isSameEntity` from commit https://github.com/llvm/llvm-project/commit/2408f97652caadf733a879e1d7d9c0702a80d609 (which lives in a different file in LLVM 13 and was moved to `ASTContext` at a later point). The gist of the change is that during template instantiation, the constraint / requires clause also gets instantiated and potentially changed. This means that if a function with constraints is used in one module, but included as-is in another, the two of them could not be merged. This change fixes the following error seen on macOS 13 with C++20:; ```; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: error: 'std::reverse_iterator<std::string *>::operator->' from module 'std.iterator.__iterator.reverse_iterator' is not present in definition of 'std::reverse_iterator<std::string *>' in module 'std.iterator.__iterator.reverse_iterator'; constexpr pointer operator->() const; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/reverse_iterator.h:141:23: note: declaration of 'operator->' does not match; ```. Note that this particular code was recently reverted in commit https://github.com/llvm/llvm-project/commit/aeee4ebd689171c963aa5d973e14cb6e731eb147 However, as far as I can tell, this relies on the implementation of deferred concept instantiation which solves the problem from a different angle, but cannot be easily backported to our copy of LLVM: https://github.com/llvm/llvm-project/commit/babdef27c503c0bbbcc017e9f88affddda90ea4e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12811:563,error,error,563,https://root.cern,https://github.com/root-project/root/pull/12811,2,['error'],['error']
Availability,This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-5494. Fixes compilation errors and warnings in the THDFS module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/89:110,error,errors,110,https://root.cern,https://github.com/root-project/root/pull/89,1,['error'],['errors']
Availability,"This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-7541. The public (installed) header TXSocket.h #includes the private (not installed) header XrdProofConn.h. This means it can not be used in compilations:. g++ -I/usr/include/root -x c++ - <<< '#include ""TXSocket.h""'; In file included from <stdin>:1:0:; /usr/include/root/TXSocket.h:47:26: fatal error: XrdProofConn.h: No such file or directory; compilation terminated. A possible fix is provided in the attached patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/88:382,error,error,382,https://root.cern,https://github.com/root-project/root/pull/88,1,['error'],['error']
Availability,"This is a specialization of iterator::next for vector<bool> that always returns a nullptr and should never be used.; IIUC, this code only exists to avoid compilation errors when compiling I/O code for `vector<bool>`. With this patch we error out rather than silently returning a nullptr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6891:166,error,errors,166,https://root.cern,https://github.com/root-project/root/pull/6891,2,['error'],"['error', 'errors']"
Availability,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:272,error,error,272,https://root.cern,https://github.com/root-project/root/pull/5960,2,['error'],['error']
Availability,This is a workaround for the issue reported as [Another fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/another-fatal-error-c1001-internal-compiler-error/1441527),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8338:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/8338,4,['error'],"['error', 'error-']"
Availability,"This is an error title!; py vs px, not pz vs px",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5672:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/5672,1,['error'],['error']
Availability,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:959,error,errors,959,https://root.cern,https://github.com/root-project/root/pull/507,1,['error'],['errors']
Availability,"This is done for consistency with the other backports.; The old header RStringView.h is left for backwards compatibility, and it simply includes ROOT/RStringView.hxx. Due to our cmake rules this change requires a removal of $ROOTSYS/core; (or anyway a regeneration of the cmake rules for it) in build; directories used for incremental builds. I think of this PR as a ""nice to have"", and I see no downsides, but feel free to close it if you are against such a change. @vgvassilev I did not know how to update `build/unix/module.modulemap` so I left it as is, let me know if it requires changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1635:396,down,downsides,396,https://root.cern,https://github.com/root-project/root/pull/1635,1,['down'],['downsides']
Availability,"This is done to avoid a compiler warning (or an error for me, as I treated compiler warnings as errors).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8159:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/8159,2,['error'],"['error', 'errors']"
Availability,"This is done to better separate CUDA-specific code from the generic code; in RooBatchCompute. Two problems are addressed in this commit:. 1. The RooBatchCompute library had too many CUDA specific functions. The virtual RooBatchCompute interface should be backend agnostic, but; it had CUDA specific functions like `cudaMalloc()` and `cudaFree()`,; which where only implemented in the CUDA case. So an abstraction; didn't make much sense there. It's better to move the CUDA specifics; to a new `roofitcuda` library. Then, the functions from this library; are used in `batchcompute` and `roofitcore` behind preprocessor; macros when using CUDA. 2. Passing around `cudaStream_t` and `cudaEvent_t`. These types are only; available to `nvcc`, and in case gcc is used, these were forward; declared as stucts. This is a hack that should be avoided. In; particular, it can cause linker errors because the types are not the; same in the CUDA and C++ translation units. The proposed solution is to wrap the `cudaStream_t` and `cudaEvent_t`; pointers into C++ structs that are in the new CUDA support library,; and only when using `nvcc` it is allowed to unwrap these types. 3. Too specific signature of `RooAbsReal::computeBatch()`. This function; should not be too backend specific, but it took the `cudaStream_t`; directly. This parameter is removed. Now, the CUDA stream is stored; in a `RooBatchCompute::Config` struct that is passed around in the; `DataMap`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13409:717,avail,available,717,https://root.cern,https://github.com/root-project/root/pull/13409,2,"['avail', 'error']","['available', 'errors']"
Availability,This is done to reduce the feature divergence between PyROOT and C++ ROOT. Also improves code performance and robustness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16707:110,robust,robustness,110,https://root.cern,https://github.com/root-project/root/pull/16707,1,['robust'],['robustness']
Availability,"This is first attempt to provide support of custom classes in web-based canvas; For now one has to register list of such classes and provide JavaScript code where painters are implemented. . Similar approach can be implemented in the future for ROOT7 RCanvas.; Probably, such custom JS code can be ""embed"" directly into C++ code making maintenance much easier. Update JSROOT with many improvements for TGeo monitoring",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4094:336,mainten,maintenance,336,https://root.cern,https://github.com/root-project/root/pull/4094,1,['mainten'],['maintenance']
Availability,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:793,down,down,793,https://root.cern,https://github.com/root-project/root/pull/2487,1,['down'],['down']
Availability,"This is just a proposal for a simple but hopefully useful feature.; The idea is to let people check the type of a given RDF column:; ```cpp; df.GetColumnType(""x""); // returns e.g. ""int""; ```. Some usecases in which `GetColumnType` might be useful:; 1. a help to use RDF in interpreted C++ (check the type of a column, then call `df.Take<T>(""x"")` with the right type; 2. a help to write PyROOT utilities on top of RDF: often such utilities need to jit some RDF call but have no way to know what are the required template types; 3. easy way to programmatically get the type of a TTree branch (`TTree::Print` is easy but does not return anything, `TLeaf::GetTypeName` is less straightforward to use correctly, e.g. if I'm not mistaken it returns `int` for an `int[n]`). What do people think? Pinging @stwunsch @amadio @dpiparo @etejedor @Axel-Naumann",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2393:789,Ping,Pinging,789,https://root.cern,https://github.com/root-project/root/pull/2393,1,['Ping'],['Pinging']
Availability,"This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:896,avail,available,896,https://root.cern,https://github.com/root-project/root/pull/2829,1,['avail'],['available']
Availability,This is missing from the standalone build - the Error.h file has:. https://github.com/root-project/root/blob/803df004f43cfbb7c16e455ca30f2c250cc7fd8d/math/mathcore/inc/Math/Error.h#L27. But this is not being added by the standalone CMake build. It seems that this was changed from `USE_ROOT_ERROR` missing to a check for `MATHCORE_STANDALONE` (https://github.com/root-project/root/pull/2545).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4806:48,Error,Error,48,https://root.cern,https://github.com/root-project/root/pull/4806,2,['Error'],['Error']
Availability,"This is necessary to give the user a clear error message, since otherwise the build will go on and fail anyway with a cryptic message. See [ROOT-9441](https://sft.its.cern.ch/jira/browse/ROOT-9441).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2150:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/2150,1,['error'],['error']
Availability,"This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,; starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace; manipulation workflows, as it takes place at each workspace::import; call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all.; ~RooAbsArg takes care of properly breaking all the client-server links,; both uplinks and downlinks, for every object. I couldn't find a logical; case where a crash would occur if the safeDeleteList logic were to be; removed. All RooFit tests pass after this patch. No problem for my heavy; workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685:499,down,downlinks,499,https://root.cern,https://github.com/root-project/root/pull/9685,1,['down'],['downlinks']
Availability,This is revised version of #1227.; Main change is the addition of an auto adjust mode that removes the need of a final adjust.; Still limited to the 1D case. The test failure in MemberComments is due to a missing update of MemberComments.ref .; A patch for roottest is available already. . Clang-format not applied this time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305:167,failure,failure,167,https://root.cern,https://github.com/root-project/root/pull/1305,2,"['avail', 'failure']","['available', 'failure']"
Availability,This is the continuation of the campaign to slim down the public RooFit interface:. 1. Remove deprecated `RooCatType`; 2. Make `RooGenProdProj` private; 3. Get rid of `RooScaledFunc`.; 4. Remove RooAbsRootFinder; 5. Remove deprecated RooAbsString; 6. Remove internal `RooFormula` from public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12800:49,down,down,49,https://root.cern,https://github.com/root-project/root/pull/12800,1,['down'],['down']
Availability,This is the log of the failed test:; ```; Test 38: TGraph2D 1 (TRI2 and P0).................................. OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; C file result...................................... 38 FAILED; Result = 1456040; Reference = 1463263; Error = 7223 (was 7000); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/312:468,Error,Error,468,https://root.cern,https://github.com/root-project/root/pull/312,1,['Error'],['Error']
Availability,"This is the underlying issue related to a CMSSW issue:; * https://github.com/cms-sw/cmssw/issues/42979. To reproduce, download this ROOT file with a single `TH2F`:; [histo.zip](https://github.com/root-project/root/files/12886644/histo.zip). And then fit a subset of the 1D slices:; ```c++; std::unique_ptr<TFile> file{TFile::Open(""histo.root"", ""READ"")};; auto hist = file->Get<TH2>(""dxyres_vs_eta"");; hist->FitSlicesY(nullptr, 10, 21, 0, ""QNR"");; ```; You will see a Minuit2 error:; ```txt; Error in <Minuit2>: VariableMetricBuilder Initial matrix not pos.def.; ```. Note that this doesn't happen with the old Minuit, which you can select like this at the beginning of the script:; ```c++; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""Minuit"", ""Migrad"");; ```. There is something weird going on, because this happens in the fit for bin 21, but it is necessary to fit all the slices 10 to 20 before. Otherwise there is no error. In other words, fitting the TH1 from the 21th slice in isolation doesn't result in the error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852:118,down,download,118,https://root.cern,https://github.com/root-project/root/issues/13852,5,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"This is to enable the supression of file modification error and module relocation error provided by Clang. File modification error is emitted when source file is changed after implicit pcm was generated, but what we want for Clang is to just re-generate new pcm and replace it, rather than emitting errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2686:54,error,error,54,https://root.cern,https://github.com/root-project/root/pull/2686,4,['error'],"['error', 'errors']"
Availability,"This is work done by Alex Saperstein, and ANL SULI who worked with me. While working on TTreeCache learning, our Summer Intern (Alex Saperstein) observed that for simple TTrees, the basket size optimization isn’t optimal for two reasons: 1) rounding down to 512 byte blocks 2) neglecting to accommodate for ROOT offsets stored in the baskets. As a result, e.g. with simple (constant size) float array branches the basket size is to small resulting in two baskets per auto-flush. The change would be pretty straight-forward: tree/tree/src/TTree.cxx. Line; -6583 newBsize = newBsize - newBsize%512;. Should become:; +6583 if (pass) { // only on the second pass so that it doesn't interfere with scaling; +6583 Int_t nevbuf = branch->GetBasket(0)->GetNevBuf();; +6583 newBsize = newBsize + (nevbuf \* sizeof(Int_t) \* 2); // make room for meta data; +6583 newBsize = newBsize - newBsize%512 + 512; // rounds up; +6583 }. Tests on simple data show that with this the baskets end up more appropriately sized so that all the auto-flush data fits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:250,down,down,250,https://root.cern,https://github.com/root-project/root/pull/238,1,['down'],['down']
Availability,"This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto m = ROOT::Experimental::RNTupleModel::Create();; auto x = m->MakeField<int>(""x"", 42);; auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",; ""f.root"");; r->Fill();; }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");; df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();; }; ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10749:232,error,errors,232,https://root.cern,https://github.com/root-project/root/issues/10749,1,['error'],['errors']
Availability,"This issue is made as a follow-up of the discussion in: https://root-forum.cern.ch/t/tgraph2d-interpolate-returns-0/54172. The Interpolate() method on TGraph2D sometimes returns 0.0 on a perfectly interpolatable coordinates.; For example, this is how my graph looks like drawn with “colz” option:; <img src=""https://user-images.githubusercontent.com/67898371/227203785-b6fd576d-7757-496f-807e-4375156e2def.png"" width=""500"">. To reproduce the problem, please download the file attached in the above root forum post and execute:; ```; root yield_graphs.root; graph_yield_nom->Interpolate(750, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(760, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(770, 500) // this returns zero; graph_yield_nom->Interpolate(780, 500) // this returns zero; graph_yield_nom->Interpolate(790, 500) // this returns a non-zero value; graph_yield_nom->Interpolate(800, 500) // this returns zero; ```. The coordinates that return zero are within interpolation range as shown by the plot. So they should have returned non-zero values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12535:458,down,download,458,https://root.cern,https://github.com/root-project/root/issues/12535,1,['down'],['download']
Availability,"This issue only occurs when the conda environment is activated.; I followed the default install method with `conda create -c conda-forge --name <my-environment> root`. I want to use a wrapper class for TChain called [Ntuple](https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py); https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py; But I cannot initialize this class with conda environment (If I use ROOT installed from source codes, it works well).; The error message:; ```; Traceback (most recent call last):; File ""./example_ntuple.py"", line 9, in <module>; n = Ntuple(""DataTree""); File ""/Users/allen/Documents/GitHub/tuple/python/Ntuple.py"", line 29, in __init__; TChain.__init__(self, name); TypeError: none of the 2 overloaded methods succeeded. Full details:; TChain::TChain() =>; TypeError: takes at most 0 arguments (1 given); no constructor available for 'TChain'; ```; It is strange that there is no other overloaded method with 2 args",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467:479,error,error,479,https://root.cern,https://github.com/root-project/root/issues/6467,2,"['avail', 'error']","['available', 'error']"
Availability,This leads to errors due to absolute paths if ROOT is already; installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):; Header path; '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'; /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx; is not relative!; Call Stack (most recent call first):; cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY); graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3303:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/3303,2,"['Error', 'error']","['Error', 'errors']"
Availability,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14238:298,error,error,298,https://root.cern,https://github.com/root-project/root/pull/14238,3,['error'],['error']
Availability,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. (cherry picked from commit 1477d3adebf27a19f3a8b85f21c27a0a5649c7ff)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14264:298,error,error,298,https://root.cern,https://github.com/root-project/root/pull/14264,3,['error'],['error']
Availability,"This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:39,down,downloaded,39,https://root.cern,https://github.com/root-project/root/pull/404,1,['down'],['downloaded']
Availability,"This makes releasing waaay simpler, more reliable, and possibly at some point convertible to a Github action?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620:41,reliab,reliable,41,https://root.cern,https://github.com/root-project/root/pull/13620,1,['reliab'],['reliable']
Availability,This might help with some unclear Windows errors seen sporadically in the CI e.g. https://github.com/root-project/root/actions/runs/7674413699/job/20918943965?pr=14463,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472:42,error,errors,42,https://root.cern,https://github.com/root-project/root/pull/14472,1,['error'],['errors']
Availability,"This might or might not fix the failures at https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/10051/testReport/junit/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/ , but it's anyway an improvement",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9047:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/9047,1,['failure'],['failures']
Availability,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11544:232,Error,Error,232,https://root.cern,https://github.com/root-project/root/pull/11544,1,['Error'],['Error']
Availability,This new release includes some improvements:; * Improvements in the array handling in the Error Estimation Framework; * Fixed numerical stability of the pow pushforward; * Fixed handling of for-loop conditions in reverse mode; * LLVM15 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.1/docs/internalDocs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075:90,Error,Error,90,https://root.cern,https://github.com/root-project/root/pull/12075,1,['Error'],['Error']
Availability,This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2998:79,redundant,redundant,79,https://root.cern,https://github.com/root-project/root/pull/2998,1,['redundant'],['redundant']
Availability,"This option gives clean/raw Cling without any includes. This is intended; to be used for debugging purposes. ```; [yuka@yuka-arch module-release]$ bin/root.exe --pedantic. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ int a = 1;; [cling]$ a; (int) 1; [cling]$ std::vector<int> b;; input_line_7:2:7: error: no member named 'vector' in namespace 'std'; std::vector<int> b;; ~~~~~^; input_line_7:2:17: error: expected '(' for function-style cast or type construction; std::vector<int> b;; ~~~^; input_line_7:2:19: error: use of undeclared identifier 'b'; std::vector<int> b;; ^; [cling]$ #include <vector>; [cling]$ std::vector<int> b;; [cling]$ b = {1,2,3}; (std::vector &) { 1, 2, 3 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2561:418,error,error,418,https://root.cern,https://github.com/root-project/root/pull/2561,3,['error'],['error']
Availability,This otherwise leads to compilation errors when we do `::fileno`; as OpenBSD implemented fileno as a macro (which seems to be allowed).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1320:36,error,errors,36,https://root.cern,https://github.com/root-project/root/pull/1320,1,['error'],['errors']
Availability,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8841:443,avail,available,443,https://root.cern,https://github.com/root-project/root/pull/8841,1,['avail'],['available']
Availability,This patch affords trimming of redundant Jupyter notebook information contained within TCanvas .JSON objects. Specifically this includes the removing the list of TColors which reduces the size of a benchmark notebook (a compiled test notebook of Root Primer graphics) by up to 80% upon preliminary tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/760:31,redundant,redundant,31,https://root.cern,https://github.com/root-project/root/pull/760,1,['redundant'],['redundant']
Availability,This patch already landed in llvm. Clang emits error when implicit modules was relocated from the; first build directory. However this was biting our usecase where we copy; the contents of build directory to another directory in order to; distribute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/2407,1,['error'],['error']
Availability,This patch fixes a few recent runtime_cxxmodules failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331:49,failure,failures,49,https://root.cern,https://github.com/root-project/root/pull/2331,1,['failure'],['failures']
Availability,This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2977:49,failure,failures,49,https://root.cern,https://github.com/root-project/root/pull/2977,1,['failure'],['failures']
Availability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5142:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/5142,2,['error'],['error']
Availability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5067:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/5067,4,"['error', 'failure']","['error', 'failure']"
Availability,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/5054,4,['error'],"['error', 'errors']"
Availability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:812,avail,available,812,https://root.cern,https://github.com/root-project/root/pull/3267,2,"['avail', 'error']","['available', 'error']"
Availability,This patch instead prints an error with some useful debugging; information that should help identify the cause of this issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/777:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/777,1,['error'],['error']
Availability,"This patch is a complementary chenge to root-project/root@d2c0929e0d It will turn off the isOutOfDate checks for transient files with different size on disk. This is quite dangerous but we are supposed to control the build environment which prepares the distributable binaries. This should fix the cmssw issue:. StdDictionaries/src/DataFormatsStdDictionaries/a/DataFormatsStdDictionaries_all_def.xml; input_line_8:1:22: error: file '/usr/include/linux/falloc.h' from the precompiled header has been overridden; ^; rootcling: /build/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc820/lcg/root/6.17.01/root-6.17.01/interpreter/llvm/src/tools/clang/include/clang/Serialization/Module.h:72: clang::serialization::InputFile::InputFile(const clang::FileEntry*, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed. The error tells us that `falloc.h` has different file size on the build machine and; on the distribution machine. We should probably rely on an environment variable; to turn off this diagnostic selectively and more the reponsibility if something goes; wrong to the distribution team. They should have better knowledge what is safe to; be ignored anyway. cc: @davidlange6, @oshadura, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4495:420,error,error,420,https://root.cern,https://github.com/root-project/root/pull/4495,2,['error'],['error']
Availability,This patch makes the implementation reusable and ready to configure it such; that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687:100,redundant,redundant,100,https://root.cern,https://github.com/root-project/root/pull/3687,1,['redundant'],['redundant']
Availability,"This patch set enabled C++17 (C++1z) support in ROOT. This will require at least GCC 7.1.0 (soon to be released, probably in a month). GCC 7 fully implements C++17 language features. CMSSW builds using GCC 6.2.0, GCC 6.3.0 and GCC 7.0.1 are all compiled with C++17. Note that biggest issues came from `TString` and `std::string` interaction due to `std::string_view` conversion operator in `TString`. This makes mixing `TString` and `std::string` painful. Thus to avoid ambiguity errors `std::string_view` operator is now marked as explicit. Otherwise in a lot of places I had to use `static_cast<>` to pick one of conversion operators (which makes the patch bigger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522:480,error,errors,480,https://root.cern,https://github.com/root-project/root/pull/522,1,['error'],['errors']
Availability,"This prevent the inappropriate execution on a rule intent for; an inner object on the outer object('s memory space). In a case where the top level branch is:; ```; 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >; ```; which contains; ```; 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>; 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase; 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**; ```; The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough; it was not split and it did so because it did not recognize there was a branch for; it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2860:825,error,errorneously,825,https://root.cern,https://github.com/root-project/root/pull/2860,2,['error'],['errorneously']
Availability,"This prevents certain ugly error messages in case an exception is; thrown during a multi-thread event loop: before this patch, in that; case the thread's slot number was never returned to the RSlotStack; and it could result in some misleading error messages being printed on; screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6601:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/6601,4,['error'],['error']
Availability,"This problem affects multi-range fits with `RooAbsPdf::fitTo` and was; reported in Jira issue [ROOT-9530](https://sft.its.cern.ch/jira/browse/ROOT-9530). Each RooNLLVar was created with the normalization set corresponding to; the subrange, not the union range like it should be. This commit adds an; extra term to the final likelihood function to cancel this normalization; problem. The extra term doesn't have to be added for the extended fit, because; adding extension terms for the likelihoods in each range as currently; done is mathematically equivalent to applying the normalization correction term; plus adding a global extension term. I'm not sure if I should call this a bug or not. On the one hand, the result that was computed previously was not wrong, it just didn't use all the information (relative number of events in each subrange was not considered). On the other hand, the result was not the best possible estimate given the information in all sub-ranges, and users expects the maximum likelihood estimate to be the best estimate available given the information. There is also a [PDF document](https://github.com/root-project/root/files/6245069/Multi_range_likelihood_fits_in_RooFit.pdf) that explains the math behind this pull request, in particular why the normalization correction doesn't have to be applied for the extended fit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7719:1048,avail,available,1048,https://root.cern,https://github.com/root-project/root/pull/7719,1,['avail'],['available']
Availability,"This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:; * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. ; * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix; * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13109:157,toler,tolerances,157,https://root.cern,https://github.com/root-project/root/pull/13109,1,['toler'],['tolerances']
Availability,"This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/393:718,failure,failures,718,https://root.cern,https://github.com/root-project/root/pull/393,1,['failure'],['failures']
Availability,"This pull request adds an intermediate buffering mode between ""normal ROOT IO"" and the prefetching system. When enabled, it will cache a remote file to the local disk (uses the same logic as prefetching to determine what is ""remote"") for as long as it is opened and automatically cleans up afterward. This is useful in cases where you want to hide the effects of network latency (for various use cases which work poorly with `TTreeCache`, such as when an unpredictable set of branches are used or non-sequential scans) but do not want to set aside a directory to use as a persistent cache or have a cache-unfriendly workflow. The approach has been ported from CMSSW (there, it is called `lazy-download`) where it has been in use for several years.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146:693,down,download,693,https://root.cern,https://github.com/root-project/root/pull/146,1,['down'],['download']
Availability,"This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to; ```; unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase; At:; _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]; "" thrown in the test body.; ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12979:295,error,error,295,https://root.cern,https://github.com/root-project/root/pull/12979,1,['error'],['error']
Availability,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10930:302,avail,available,302,https://root.cern,https://github.com/root-project/root/pull/10930,1,['avail'],['available']
Availability,"This pull request contains the changes to add initial support for RISC-V. It was developed during the past months on a StarFive VisionFive v1 that was kindly provided to me as part of the [RISC-V Developer Boards Program](https://riscv.org/risc-v-developer-boards/). More details about the challenges are available in the form of a [blog post on my website](https://www.hahnjo.de/blog/2023/01/28/riscv-higgs.html), a [presentation at the CaaS meeting in January](https://compiler-research.org/meetings/#caas_12Jan2023), and a [recording of that talk](https://youtu.be/3PWeLGrF41g). Please note that this PR only contains the necessary changes to the build system and ROOT's configuration files and utilities. Making the interpreter actually functional requires a number of backports to ROOT's copy of LLVM 13, that are available separately in a branch (https://github.com/hahnjo/root/tree/riscv-backports).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12351:305,avail,available,305,https://root.cern,https://github.com/root-project/root/pull/12351,2,['avail'],['available']
Availability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. After this PR and https://github.com/root-project/root/pull/12853, the remaining tests that still fail are; ```; 1: Failed Tests (2):; 1: Cling :: CodeUnloading/AtExit.C; 1: Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; , which seem to have a common underlying cause: child interpreters are unable to resolve symbols defined in the parent. @hahnjo, @vgvassilev, do you have time to take a look?; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/12855,5,"['Error', 'error', 'failure']","['ErrorMacro', 'error', 'failure', 'failures']"
Availability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. This is a backport of PR #12855.; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:36,failure,failures,36,https://root.cern,https://github.com/root-project/root/pull/12856,5,"['Error', 'error', 'failure']","['ErrorMacro', 'error', 'failure', 'failures']"
Availability,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10943:229,error,errors,229,https://root.cern,https://github.com/root-project/root/pull/10943,2,"['Error', 'error']","['Error', 'errors']"
Availability,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12785:246,failure,failures,246,https://root.cern,https://github.com/root-project/root/pull/12785,1,['failure'],['failures']
Availability,"This pull request fixes the search for contour points in Minuit2. ; Three separated problems were identified (see the commit messages); - a bug in Minos for computing errors when close to the border; - an issue in finding the contour point in case the first attempt failed.; - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13918:167,error,errors,167,https://root.cern,https://github.com/root-project/root/pull/13918,1,['error'],['errors']
Availability,"This pull request introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and di",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10927:646,avail,available,646,https://root.cern,https://github.com/root-project/root/pull/10927,1,['avail'],['available']
Availability,"This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets.; 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them); 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12459:72,error,errors,72,https://root.cern,https://github.com/root-project/root/pull/12459,2,['error'],['errors']
Availability,This pull-request changes RField's `GetNormalizedType()` in order to discard cv-qualifiers. ## Changes or fixes:; - RField does not care about cv-qualifiers. Use `TClassEdit::CleanType()` to discard them in `GetNormalizedType()`. Removed the now redundant `Trim()` function.; - Improve `ntuple_types` test to cover the case described in issue #9140. ## Checklist:; - [X] tested changes locally. This PR fixes #9140.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9158:246,redundant,redundant,246,https://root.cern,https://github.com/root-project/root/pull/9158,1,['redundant'],['redundant']
Availability,"This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:; - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag.; - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`.; - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9695:40,redundant,redundant,40,https://root.cern,https://github.com/root-project/root/pull/9695,3,"['mask', 'redundant']","['mask', 'masked', 'redundant']"
Availability,"This pull-request fixes an issue ([ROOT-5219](https://sft.its.cern.ch/jira/browse/ROOT-5219)) updating the TRint prompt after incomplete input on a nested call to `TROOT::ProcessLine()`. Specifically, `TRint::ProcessLineNr()` used the output parameter `error` to tell if the collected input was incomplete (i.e., it contains unbalanced braces or the last line was terminated by a `\` character). While this works most of the time, it fails if there is a nested call to `ProcessLine()` that provides incomplete input, e.g.:; ```c++; $ root -l -b; root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n""); (long) 0; root [1] 12; root (cont'ed, cancel with .@) [2].@; root [3] .q; ```. In this case, there are two nested `ProcessLine()` calls; the inner-most has incomplete input (missing a `)`), but the `error` output parameter is ignored. The outer-most call, however, has complete input, which is what was seen by TRint. This created inconsistency between the collected input in cling's InputValidator (which was incomplete) and the ROOT prompt string, that was not showing `root (cont'ed, cancel with .@) []`. Thus, the correct behavior would have been:; ```c++; root [0] gROOT->ProcessLine(""fprintf(stdout,\""the inner is printing\""\n"");; root (cont'ed, cancel with .@) [0]);; the inner is printing; ```. ## Changes or fixes:; - Add `InputValidator::getLastResult()` and `MetaProcessor::waitingMoreInput()` which allow to query whether the collected input is incomplete, either because it contains unbalanced braces or we found a backslash-newline (the last seen token is a `\`).; - Properly implement the `TInterpreter::GetMore()` function based on `MetaProcessor::waitingMoreInput()`. Get rid of the `fMore` member (which was not even updated correctly).; - Use `gCling->GetMore()` in `TRint::ProcessLineNr()` to tell if we are waiting for more input, and thus we should show the continuation prompt. ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-5219](https://",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9733:253,error,error,253,https://root.cern,https://github.com/root-project/root/pull/9733,2,['error'],['error']
Availability,This pull-request is a backport of PR #9781; see details there. A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Checklist:; - [X] tested changes locally. This PR fixes ROOT-6095.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9789:160,avail,available,160,https://root.cern,https://github.com/root-project/root/pull/9789,1,['avail'],['available']
Availability,This pull-request makes sure that the enumerators in a (anonymous) scopeless `enum` are made visible in the enclosing scope.; A bug in DeclExtractor was preventing names introduced by an anonymous scopeless enum to become available in the parent scope. ## Changes or fixes:; - Do not skip the `InnerDC->makeDeclVisibleInContext()` call for enumerators of anonymous scopeless `enum`s. . ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-6095](https://sft.its.cern.ch/jira/browse/ROOT-6095).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9781:222,avail,available,222,https://root.cern,https://github.com/root-project/root/pull/9781,1,['avail'],['available']
Availability,"This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329:241,avail,available,241,https://root.cern,https://github.com/root-project/root/pull/5329,1,['avail'],['available']
Availability,This repairs crash seem in [testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139900/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/) on the v6.24 branches and a few additional issues seen during testing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10230:5,repair,repairs,5,https://root.cern,https://github.com/root-project/root/pull/10230,1,['repair'],['repairs']
Availability,"This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9913:402,down,down,402,https://root.cern,https://github.com/root-project/root/pull/9913,1,['down'],['down']
Availability,"This reverts commit 1e8c04dd4beff8fc3d34cfd21e45358e85ae0f79.; In this commit, main idea was to use clang binary to retrieve information; about resource-clang-dir. Sadly ROOT patched LLVM/Clang is built; without clang binary and ROOT CMake crash then with next error:. -- /home/oksana/CERN_sources/llvm-clang-root/inst/bin; CMake Error at core/clingutils/CMakeLists.txt:80 (message):; Cannot determine clang resource directory path",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:261,error,error,261,https://root.cern,https://github.com/root-project/root/pull/4259,2,"['Error', 'error']","['Error', 'error']"
Availability,"This reverts commit 2a265a3a, which caused failures in the nightlies even though the CI in #16274 was green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16278:43,failure,failures,43,https://root.cern,https://github.com/root-project/root/pull/16278,1,['failure'],['failures']
Availability,"This reverts commit 2ecf45e5a37ab3f1108c5a9068b3cf330242b9dd, and makes some extra adjustments for Davix 0.6.7 to build or provide a clear error if something is missing in the system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1907:139,error,error,139,https://root.cern,https://github.com/root-project/root/pull/1907,1,['error'],['error']
Availability,"This reverts commit 3854aa142b82202d36d066ad9ce80f57a00f8276.; It fixes:; ""While building module 'Cling_Interpreter' imported from /.../root/core/metacling/src/TClingCallbacks.h:12:; In file included from <module-includes>:11:. /.../root/interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h:13:2: error: ""This file must not be included by compiled programs."". ^; While building module 'Cling_Interpreter' imported from /.../root/core/metacling/src/TClingCallbacks.h:12:; In file included from <module-includes>:17:""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3599:319,error,error,319,https://root.cern,https://github.com/root-project/root/pull/3599,1,['error'],['error']
Availability,This reverts commit 3efc1356fcd48771c821314fab6c4427078480bd. `/mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/tutorials/hist/ContourList.C:23:19: error: expected unqualified-id; const Double_t PI = TMath::Pi();; /usr/share/R/include/R_ext/Constants.h:36:24: note: expanded from macro 'PI'; #define PI M_PI; /usr/include/math.h:777:16: note: expanded from macro M_PI; CMake Error at /mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/cmake/modules/RootTestDriver.cmake:230 (message):; error code: 1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3589:158,error,error,158,https://root.cern,https://github.com/root-project/root/pull/3589,3,"['Error', 'error']","['Error', 'error']"
Availability,"This reverts commit 5298b418eec4129351888f41cb7c3bfc90161e22. This commit was mistakenly committed. PR was opened in #1730, but it was; closed and moved to #1761. I didn't notice this and created another PR; in #1980. This change was causing 100+ failures in runtime cxxmodules nightlies.; (Eg. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29183/testReport/junit/projectroot/runtutorials/tutorial_fit_FittingDemo/); We want to have **proper** PrebuildModulesPaths which information were; extracted from LD_LIBRARY_PATH and DYLD_LIBRARY_PATH, not a random ""."". Because of this commit, we were trying to autoload libraries generated; by roottest on-demand (for example ""./h1analysisTreeReader_C.so"") This; is not an intentional behavior, these autogenerated libraries are; already loaded by roottest and what we want to do is to load **proper**; libraries like libHist.so instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2160:247,failure,failures,247,https://root.cern,https://github.com/root-project/root/pull/2160,1,['failure'],['failures']
Availability,This reverts commit 6657223efbc8d356fe3103c7010922dded6791a2.; It caused [failures](http://cdash.cern.ch/testDetails.php?test=40653603&build=483771); in gtest-tree-treeplayer-test-dataframe-snapshot (see discussion at #1800 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1813:74,failure,failures,74,https://root.cern,https://github.com/root-project/root/pull/1813,1,['failure'],['failures']
Availability,This reverts commit 87801d05a76cdf10a1cf9d7ee33540d3e0e314bf.; This should fix the failures (not understood) in dataframe_nodes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2231:83,failure,failures,83,https://root.cern,https://github.com/root-project/root/pull/2231,1,['failure'],['failures']
Availability,"This reverts commit b327dd8fd159494666842607708140c429fa4055.; This should fix the following error:; ```; Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate; ```; as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14149:93,error,error,93,https://root.cern,https://github.com/root-project/root/pull/14149,2,"['Error', 'error']","['Error', 'error']"
Availability,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16209:245,error,error,245,https://root.cern,https://github.com/root-project/root/pull/16209,1,['error'],['error']
Availability,"This reverts commit f84668d78f3911ad8a67b4ba03145cd5845f14fb.; It leads to test failures on centos7, while all other systems are ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3263:80,failure,failures,80,https://root.cern,https://github.com/root-project/root/pull/3263,1,['failure'],['failures']
Availability,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7286:669,avail,available,669,https://root.cern,https://github.com/root-project/root/pull/7286,1,['avail'],['available']
Availability,This should be done by the caller to properly handle errors and ensure lifetime longer than the `RPageSinkFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14501:53,error,errors,53,https://root.cern,https://github.com/root-project/root/pull/14501,1,['error'],['errors']
Availability,"This should fix clang's compilation error:; ""constructor for 'ROOT::TTreeProcessorMT' must explicitly initialize the const member 'fFriendInfo'""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2174:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/2174,1,['error'],['error']
Availability,This should fix failures in `test_readTotemNtuple` that started happening after the switch from `Calc` to `ProcessLine` (the access to the zero-length ReaderArrays was caught by `ProcessLine`'s instrumentation).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1938:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/1938,1,['failure'],['failures']
Availability,This should fix some of the failures observed for builds without rdataframe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13660:28,failure,failures,28,https://root.cern,https://github.com/root-project/root/pull/13660,1,['failure'],['failures']
Availability,This should fix some sporadic failures in cling's symbol resolution; in builds without runtime cxx modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8682:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/8682,1,['failure'],['failures']
Availability,This should fix the compilation failures when we build ROOT with modules; in c++17 mode. This should be solved in clang upstream.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4451:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/4451,1,['failure'],['failures']
Availability,This should fix the cuda failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4594:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/4594,1,['failure'],['failures']
Availability,This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12982:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/12982,2,['error'],['error']
Availability,"This should fix the errors LNK2019: unresolved external symbol ""const ROOT::Experimental::RHistDrawable<1>::'vftable'""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4457:20,error,errors,20,https://root.cern,https://github.com/root-project/root/pull/4457,1,['error'],['errors']
Availability,This should fix the errors we see in the nighly builds on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16253:20,error,errors,20,https://root.cern,https://github.com/root-project/root/pull/16253,2,['error'],['errors']
Availability,This should fix the failure observed when RDF is not built that one needs to not include the RTensor pythonizations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11422:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/11422,1,['failure'],['failure']
Availability,This should fix the failures in `roottest-root-tree-reader-make` that we see in the v6.14 nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2768:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/2768,1,['failure'],['failures']
Availability,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5414:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/5414,2,"['Error', 'error']","['Error', 'error']"
Availability,This should fix the following error; ```; C:\ROOT-CI\src\core\metacling\src\TCling.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14314:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/14314,2,['error'],['error']
Availability,This should fix the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16239:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/16239,1,['error'],['error']
Availability,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:32,failure,failures,32,https://root.cern,https://github.com/root-project/root/pull/16501,1,['failure'],['failures']
Availability,"This should fix the warnings with cl.exe and errors with clang_cl.exe as reported in the issue #13091: With cl.exe:; ```; graf2d\mathtext\src\mathtextencode.cxx(353,19): warning C4066: characters beyond first in wide-character constant ignored; ```; With clang_cl.exe; ```; graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type; default: _glyph = L'\U0001d538' + (_code[0] - 'A');; ```; Note that this PR doesn't make it working, since wchar_t is 16 bit on Windows and 32 bit on Linux and Mac, and to make it working with all possible characters on all platforms, one would need to use `char32_t` everywere, also in `TMathText` and `TLatex`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13132:45,error,errors,45,https://root.cern,https://github.com/root-project/root/pull/13132,2,['error'],"['error', 'errors']"
Availability,"This should fixe some sporadic failures observed in the CI builds. Before the CrossValidation class was created using the same name as in the `TestCrossValidationMultiProc.cxx`, and with the same `DataLoader` name. For this, the XML file created in the training phase was having the same name and being located in the same directory as the file created by the other tests. This was causing a conflict when the tests are run in parallel. ; This PR changes to use now different names, solving this conflict.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10018:31,failure,failures,31,https://root.cern,https://github.com/root-project/root/pull/10018,1,['failure'],['failures']
Availability,This should hopefully fix sporadic failures happening when deleting the files create in these tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9415:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/9415,1,['failure'],['failures']
Availability,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6190:185,redundant,redundant,185,https://root.cern,https://github.com/root-project/root/pull/6190,1,['redundant'],['redundant']
Availability,"This slightly changes lookup order: Namely, the system-folder ""/usr/include/postgresql""; is now preferred over ""/usr/include/"" even if both container libpq-fe.h.; This finds the correct path on a standard Gentoo installation, where ""/usr/include/postgresql""; is a symlink to the folder with all include-files for the user-selected postgresql-version,; while ""/usr/include/libpq-fe.h"" is a single symlink provided for backwards-compatibility. Since ROOT uses also e.g. ""pg_config.h"", selecting ""/usr/include/"" over ""/usr/include/postgresql""; leads to failure on Gentoo. I hope this will not break any other existing setups but I don't see how it should. ; That should prevent any downstream-patching which Gentoo is doing right now for old-style configure once it has moved to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/159:550,failure,failure,550,https://root.cern,https://github.com/root-project/root/pull/159,2,"['down', 'failure']","['downstream-patching', 'failure']"
Availability,This solves ROOT-9416. - users now do not have to take care that the head node of the dataframe remains in scope; - these kind of constructs are now allowed in python and C++:; ```c++; auto df = RDataFrame(...).Filter(...);; ```; - these kind of constructs are now allowed in python:; ```c++; df = RDataFrame(...); df = df.Filter(...); ```. EDIT:; Failures in roottests are fixed by [PR 212](https://github.com/root-project/roottest/pull/212) in roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459:348,Failure,Failures,348,https://root.cern,https://github.com/root-project/root/pull/2459,1,['Failure'],['Failures']
Availability,"This somewhat huge commit mainly demotes many class-versions to 0. . If wanted, I can for sure squash some things (right now, the commit messages contain the underlying reasoning). . In ROOT, a lot of classes were equipped with class-versions > 0 even though they are not meant for IO / streaming. ; This produces unnecessary overhead (creation of Streamer() functions) and might be misleading for users (especially if they believe streaming of these classes would be ok and then lose parts of their data). That's even more helpful when testing framework's dataobject-code. . These classes were identified by https://github.com/olifre/rootStaticAnalyzer (a new project still in early stages) and I have created this PR to fix almost all these issues. . The last commit in the series also explicitly marks two members (of TSeqCollection and THashList) as transient, even though these classes are already class-version 0. This is purely to make it more explicit that these are not streamed - and allow for programmatic testing (since then the `kTransient` bit of the `TRealData` will be set correctly). . Several issues alerted by `rootStaticAnalyzer` still remain which are probably real bugs in ROOT 6. . Examples: . ```; TMVA/PDF.h:0: error: Data object class 'TMVA::PDF' will not stream the following indirect members: members 'fConfigName, fConfigDescription, fReferenceFile' from class 'TMVA::Configurable' (class-version 0)!; ```. It seems like `TMVA::PDF` is meant for streaming, but inherits from a base which is not. . Similar to that:. ```; include/TTreeResult.h:0: error: Data object class 'TTreeResult' will not stream the following indirect members: members 'fRowCount' from class 'TSQLResult' (class-version 0)!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/169:1236,error,error,1236,https://root.cern,https://github.com/root-project/root/pull/169,2,['error'],['error']
Availability,This tutorial didn't produce the same results as the C++ equivalent.; As mentioned here:; https://root-forum.cern.ch/t/error-in-pyroot-tutorial-twoscales-py/47215/2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9110:119,error,error-in-pyroot-tutorial-twoscales-py,119,https://root.cern,https://github.com/root-project/root/pull/9110,1,['error'],['error-in-pyroot-tutorial-twoscales-py']
Availability,"This was appending ""roottest"" to the filter string, instead of *also* filtering ""roottest"".; roottest dictionaries will always have full path names, so veto ""/roottest/"".; Fixes 19 incremental failures that ceb925ae1e claimed to fix:. projectroot.roottest.root.meta.roottest_root_meta_drawing; projectroot.roottest.root.tree.split.roottest_root_tree_split_make; projectroot.roottest.root.treeformula.parse.roottest_root_treeformula_parse_make; projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make; projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make; projectroot.roottest.root.io.fakeClass.roottest_root_io_fakeClass_make; projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make; projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make; projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make; projectroot.roottest.root.treeformula.schemaEvolution.roottest_root_treeformula_schemaEvolution_make; projectroot.roottest.root.tree.evolution.roottest_root_tree_evolution_make; projectroot.roottest.root.treeformula.array.roottest_root_treeformula_array_make; projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execState; projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto; projectroot.roottest.root.collection.roottest_root_collection_execMissing; projectroot.test.test_stresstmva_interpreted; projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make; projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make; projectroot.roottest.root.tree.friend.roottest_root_tree_friend_make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3624:193,failure,failures,193,https://root.cern,https://github.com/root-project/root/pull/3624,1,['failure'],['failures']
Availability,"This was causing roottest-root-core-execStatusBitsCheck failure. TEmulatedTuple is injected to AST by creating virtual file called; `input_line_<number>`. This is the same way as we inject ""ClassDef(name,; id)"" and we need to `undef __ROOTCLING__` in that case (because it's not; ROOTCLING)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112:56,failure,failure,56,https://root.cern,https://github.com/root-project/root/pull/2112,1,['failure'],['failure']
Availability,This was causing some test failures in cxx modules and in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1841:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/1841,1,['failure'],['failures']
Availability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:21,redundant,redundant,21,https://root.cern,https://github.com/root-project/root/pull/2764,2,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8033:82,error,error,82,https://root.cern,https://github.com/root-project/root/issues/8033,3,"['Error', 'error']","['Error', 'error']"
Availability,"This was lost while migrating to newer LLVM/Clang stack. Otherwise `-std=c++11` is added to compilation lines overriding `-std=c++1z`. Thus Cling/Interpreter ends up in C++11 mode and then we get errors about `std::string_view` only being available in C++17. Compiled on Fedora 26 with `-Dminimal=ON -Dcxx17=ON`. Note, it still fails to build near the end:. ```; FAILED: html/G__Html.cxx lib/libHtml_rdict.pcm lib/libHtml.rootmap; cd /build/build/html && /usr/bin/cmake -E env LD_LIBRARY_PATH=/build/build/lib: ROOTIGNOREPREFIX=1 /build/build/bin/rootcling -rootbuild -f G__Html.cxx -s /build/build/lib/libHtml.so -excludePath /build/root -excludePath /build/build -rml libHtml.so -rmf /build/build/lib/libHtml.rootmap -I/build/root -I/build/root/interpreter/cling/include -I/build/build/include TClassDocOutput.h TDocDirective.h TDocInfo.h TDocOutput.h TDocParser.h THtml.h /build/root/html/inc/LinkDef.h. *** Break *** segmentation violation; ```. Signed-off-by: David Abdurachmanov <davidlt@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/623:196,error,errors,196,https://root.cern,https://github.com/root-project/root/pull/623,2,"['avail', 'error']","['available', 'errors']"
Availability,"This was missing in the default constructor. . Found automatically by https://github.com/olifre/rootStaticAnalyzer : . ```; include/TProtoClass.h:78: error: Streamed member 'unsigned int fCheckSum' of dataobject 'TProtoClass' not initialized by constructor!; ```. using the new test https://github.com/olifre/rootStaticAnalyzer/blob/master/src/tests/testStreamingUninitialized.cpp which identifies to-be-streamed members which are not initialized by the default constructors. ; There are likely more, but the other cases seem a bit more complex - I'm still working on improving the test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/171:150,error,error,150,https://root.cern,https://github.com/root-project/root/pull/171,1,['error'],['error']
Availability,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13599:19,avail,available,19,https://root.cern,https://github.com/root-project/root/pull/13599,1,['avail'],['available']
Availability,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13598:19,avail,available,19,https://root.cern,https://github.com/root-project/root/pull/13598,1,['avail'],['available']
Availability,"This was seen by the jupyter notebook which give the error:. ```; input_line_42:2:2: warning: 'norm' shadows a declaration with the same name in the 'std' namespace; use '::norm' to reference this declaration; TH1F *norm = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10462:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/10462,1,['error'],['error']
Availability,"This was spotted by @vepadulano. As the title suggests: RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python. Minimal repro:; ```py; >>> import ROOT; >>> ds2 = ROOT.RDF.Experimental.RDatasetSpec(""tree"", ""z.root"", (10, 7)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 5 overloaded methods succeeded. Full details:; RDatasetSpec::RDatasetSpec(ROOT::RDF::Experimental::RDatasetSpec&&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const vector<string>& fileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 2; RDatasetSpec::RDatasetSpec(const vector<pair<string,string> >& treeAndFileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: takes at most 2 arguments (3 given); RDatasetSpec::RDatasetSpec(const ROOT::RDF::Experimental::RDatasetSpec&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const string& fileNameGlob, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 3; ```; This is instead supposed to trigger:; ```cpp; RDatasetSpec::REntryRange::REntryRange(Long64_t begin, Long64_t end) : fBegin(begin), fEnd(end); {; if (fBegin > fEnd); throw std::logic_error(""The starting entry cannot be larger than the ending entry in the ""; ""creation of a dataset specification."");; }; ```; P.S. very interesting that an overload is not recognized depending on the same basic types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11051:97,error,error,97,https://root.cern,https://github.com/root-project/root/issues/11051,1,['error'],['error']
Availability,"This way, if another process requests the file from the cache while; the file is still being written/downloaded, it does not ""find"" it; and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479:101,down,downloaded,101,https://root.cern,https://github.com/root-project/root/pull/9479,2,"['down', 'failure']","['downloaded', 'failures']"
Availability,This will be replaced with a proper error message in the future; once we have a reliable way of implmenting such an error. For; now it's already an improvement if we always print a warning; when we build a module on demand.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1336:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/1336,3,"['error', 'reliab']","['error', 'reliable']"
Availability,Throw on dynamic expression error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/976:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/976,1,['error'],['error']
Availability,"Thsi fixes the following error:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7265:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/7265,2,['error'],['error']
Availability,"To avoid having to use regex to parse trailing curly brackets with/without trailing whitespaces, the code command string is cleaned with the following strategy:; - Trim whitespaces at the borders; - Get the inner command (i.e. the part between quotes); - Trim whitespaces again; - Stitch back together. This should fix the unforeseen PyTorch failures brought by PyTorch's snafu (as described and https://github.com/pytorch/pytorch/issues/49460#issuecomment-911365091) and triggered by the use of std::regex introduced in https://github.com/root-project/root/pull/14716 . This replaces https://github.com/root-project/root/pull/14716 to fix https://github.com/root-project/root/issues/14462",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14773:342,failure,failures,342,https://root.cern,https://github.com/root-project/root/pull/14773,1,['failure'],['failures']
Availability,"To have better diagnostics, `TRint::ProcessLineNr()` prepends a `#line 1 ""ROOT_prompt_xxx""` PP directive to each input line. However, this causes problems if the previous line is continued with '\\', e.g.; ```; root [0] #define m(x) printf(""%s"", \; root (cont'ed, cancel with .@) [1]x);; ROOT_prompt_0:2:2: error; '#' is not followed by a macro parameter; ^; ROOT_prompt_0:3:1: error; use of undeclared identifier 'x'; x);; ^; ```. This PR fixes issue #8762. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8772:307,error,error,307,https://root.cern,https://github.com/root-project/root/pull/8772,2,['error'],['error']
Availability,"To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8393:45,failure,failures,45,https://root.cern,https://github.com/root-project/root/pull/8393,1,['failure'],['failures']
Availability,To prevent `TypeError: aap` error in `addressof`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9075:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/9075,1,['error'],['error']
Availability,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8194:13,error,error,13,https://root.cern,https://github.com/root-project/root/issues/8194,4,"['Error', 'error']","['Error', 'error']"
Availability,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9001:14,down,download,14,https://root.cern,https://github.com/root-project/root/issues/9001,5,"['Down', 'Error', 'down']","['Downloads', 'Error', 'download']"
Availability,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11149:124,down,down,124,https://root.cern,https://github.com/root-project/root/pull/11149,1,['down'],['down']
Availability,Today I learned: returning a local variable calls the move-ctor by default if available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1224:78,avail,available,78,https://root.cern,https://github.com/root-project/root/pull/1224,1,['avail'],['available']
Availability,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:1029,redundant,redundant,1029,https://root.cern,https://github.com/root-project/root/issues/7284,1,['redundant'],['redundant']
Availability,"Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:1412,error,error,1412,https://root.cern,https://github.com/root-project/root/issues/14302,1,['error'],['error']
Availability,Try to debug Windows Debug failures / timeouts (?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16089:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/16089,1,['failure'],['failures']
Availability,"Try to fix an error when building the system PCH with cppyy's Root on Android, as described [on the forum](https://root-forum.cern.ch/t/errors-building-system-pch-with-cppyys-root-on-android/51961)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11579:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/11579,2,['error'],"['error', 'errors-building-system-pch-with-cppyys-root-on-android']"
Availability,"TupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15052,Error,Error,15052,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,Tutorial scripts uses 'rand' and 'random' keywords as a name for variables which causes many online notebooks to fail. Fixes ROOT-9030. Details:; * https://root-forum.cern.ch/t/declaration-of-trandom-object-as-rand-causes-redefinition-error-when-running-interactively/26363; * https://root.cern/doc/v610/group__tutorial__hist.html; * https://sft.its.cern.ch/jira/browse/ROOT-9030,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1484:235,error,error-when-running-interactively,235,https://root.cern,https://github.com/root-project/root/pull/1484,1,['error'],['error-when-running-interactively']
Availability,Two ClassImp statements in the same compilation unit result in a redefinition error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948:78,error,error,78,https://root.cern,https://github.com/root-project/root/issues/10948,1,['error'],['error']
Availability,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:46,error,errors,46,https://root.cern,https://github.com/root-project/root/pull/12449,3,"['error', 'rollback']","['errors', 'rollback']"
Availability,Typical copy-and-paste failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4172:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/4172,1,['failure'],['failure']
Availability,Typical problem - direct copy of self-allocated memory which will lead to error in destructor; Also adjust some assign operators where `Copy` can be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10908:74,error,error,74,https://root.cern,https://github.com/root-project/root/pull/10908,1,['error'],['error']
Availability,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11473:89,error,error,89,https://root.cern,https://github.com/root-project/root/issues/11473,1,['error'],['error']
Availability,Until failures on Linux Fedora 39 are understood. This PR is marked as emergency since all fedora39 builds are failing because of this test failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16684:6,failure,failures,6,https://root.cern,https://github.com/root-project/root/pull/16684,2,['failure'],"['failure', 'failures']"
Availability,"Until now, in the case where `VecCore` is enabled, only `BinData::fData` was padded to protect vectorized loops against memory access errors. This commit adds the same padding in the case `VecCore` is enabled to all coordinate, data and error vectors of `FitData` family; in particular:; * `FitData::fCoords[i]` (for every `i`); * `BinData::fCoordErrors[i]` (for every `i`); * `BinData::fData`, `BinData::fDataError`; * `BinData::fDataErrorHigh`; * `BinData::fDataErrorLow`; * `BinData::fBinEdge[i]` (for every `i`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/896:134,error,errors,134,https://root.cern,https://github.com/root-project/root/pull/896,2,['error'],"['error', 'errors']"
Availability,"Up to now comments were ignored:; ```; ClassDefOverride(name,version) // class comments; ```. Also fix error of accessing transient memory. Solves some test errors in #9932 . And should fix #9900.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9934:103,error,error,103,https://root.cern,https://github.com/root-project/root/pull/9934,2,['error'],"['error', 'errors']"
Availability,"Up until now, weights were ignored when computing kernel width in RooKeysPdf. . This was worked on for 6.28, but negative weights are causing evaluation errors (some weights can go negative, like sWeights). . It would be good if negative weights were allowed and cases, where they are not allowed, would throw exceptions rather than computation be attempted. Relevant forum post:; https://root-forum.cern.ch/t/roofit-keyspdf-fails-in-6-28-works-in-6-26/54440",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12639:153,error,errors,153,https://root.cern,https://github.com/root-project/root/issues/12639,1,['error'],['errors']
Availability,"Updating MethodBDT so that it can use different loss functions for regression. Edited MethodBDT.cxx, MethodBDT.h and added LossFunction.h and LossFunction.cxx to make this happen. Huber, Least Squares, and Absolute Deviation are now available for use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/243:233,avail,available,233,https://root.cern,https://github.com/root-project/root/pull/243,1,['avail'],['available']
Availability,"Uring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:24603,error,error,24603,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,Use Class_Name leads to:. error: explicit specialization of 'Class_Name' after instantiation. when compiling with modules on,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1226:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/1226,1,['error'],['error']
Availability,Use Cling Interpreter to get at run time Python executable and avoid a compilation error when running the tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10253:83,error,error,83,https://root.cern,https://github.com/root-project/root/pull/10253,1,['error'],['error']
Availability,Use RSofieReader in the PyTorch parser to Model. This avoids having some PyTorch error or warnings when generating the models that were triggering a build failure in the CI. Now in the PyTorch parser tests the ; model parsing and evaluation using SOFIE can be done all at once by using the RSofieReader class. Use .keras instead of .h5 for saving keras models in the TestRModelParserKeras to avoid a warning when building. From tensorflow 2.13 it is reccomended to use .keras for the saved keras files instead of .h5.; .h5 file are still used instead for the PyKeras tests to avoid failures seen when using .keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13533:81,error,error,81,https://root.cern,https://github.com/root-project/root/pull/13533,3,"['error', 'failure']","['error', 'failure', 'failures']"
Availability,"Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:; ```; PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib; ```; And with only the release version:; ```; PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib; ```; So the correct one will be used.; This fixes the following error when both versions are installed:; ```; CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):; The ""optimized"" argument must be followed by a library.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13013:493,error,error,493,https://root.cern,https://github.com/root-project/root/pull/13013,4,"['Error', 'error']","['Error', 'error']"
Availability,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5058:389,error,errors,389,https://root.cern,https://github.com/root-project/root/pull/5058,1,['error'],['errors']
Availability,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13576:167,error,error,167,https://root.cern,https://github.com/root-project/root/pull/13576,2,['error'],['error']
Availability,Use for bin edge comparisons an epsilon abs value that is computed a a fraction of bin width. This would give a more robust comparison test.; This PR should fix what has been suggested in ROOT-7752,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3341:117,robust,robust,117,https://root.cern,https://github.com/root-project/root/pull/3341,1,['robust'],['robust']
Availability,Use in Mathcore macros defined in Math/Error.h for reporting error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2947:39,Error,Error,39,https://root.cern,https://github.com/root-project/root/pull/2947,2,"['Error', 'error']","['Error', 'error']"
Availability,"Use the correct syntax for the `START` command, which is:; ```; START ""title"" [/D path] [options] ""command"" [parameters]; ```; This prevent the following error with the `.forum bug` command:; ```; root [0] .forum bug; The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"".; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13106:154,error,error,154,https://root.cern,https://github.com/root-project/root/pull/13106,4,"['down', 'error']","['download', 'error']"
Availability,"Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:; ```; In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:; [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]; [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,; [2020-10-05T07:25:50.968Z] ^~~~~; [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue; [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,; [2020-10-05T07:25:50.968Z] ^~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6551:152,error,error,152,https://root.cern,https://github.com/root-project/root/pull/6551,2,['error'],['error']
Availability,Use tolerance to compare floating point numbers in testGenVector.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/498:4,toler,tolerance,4,https://root.cern,https://github.com/root-project/root/pull/498,1,['toler'],['tolerance']
Availability,Used in `RCanvas::SaveAs()` method to avoid failure message when image production in ; tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13115:44,failure,failure,44,https://root.cern,https://github.com/root-project/root/pull/13115,2,"['error', 'failure']","['errors', 'failure']"
Availability,"Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:848; [/Users/user/Z/lib/libGui.so] TGMainFrame::TGMainFrame(TGWindow const*, unsigned int, unsigned int, unsigned int) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:1431; [/Users/user/Z/lib/libGui.so] TGMainFrame::TGMainFrame(TGWindow const*, unsigned int, unsigned int, unsigned int) /Users/user/Projects/ROOT/root/gui/gui/src/TGFrame.cxx:1485; [/Users/user/XXX/zevis/test/./frame.exe] main /Users/user/XXX/zevis/test/frame.cxx:81; [/usr/lib/system/libdyld.dylib] start (no debug info); ```. ### Expected behavior; No FPE. ### To Reproduce; ```; #include <TApplication.h>; #include <TGClient.h>; #include <TGFrame.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:2914,mask,masks,2914,https://root.cern,https://github.com/root-project/root/issues/6758,1,['mask'],['masks']
Availability,Uses a tolerance based on the bin width when comparing histogram axes . This fixes ROOT-10363,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4632:7,toler,tolerance,7,https://root.cern,https://github.com/root-project/root/pull/4632,1,['toler'],['tolerance']
Availability,Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10471:30,Error,Error,30,https://root.cern,https://github.com/root-project/root/pull/10471,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7967:150,error,errors,150,https://root.cern,https://github.com/root-project/root/issues/7967,1,['error'],['errors']
Availability,"Using template functions in the generated code can cause linker errors, which is avoided with this suggested commit. Backport of https://github.com/root-project/root/pull/15502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15587:64,error,errors,64,https://root.cern,https://github.com/root-project/root/pull/15587,1,['error'],['errors']
Availability,"Using template functions in the generated code can cause linker errors,; which is avoided with this suggested commit. To be backported to the 6.32 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15502:64,error,errors,64,https://root.cern,https://github.com/root-project/root/pull/15502,1,['error'],['errors']
Availability,"Using the same filename can cause races when running the tests in; parallel. I noticed because of this test failure: https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/128243/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_cluster/. And then:. ```; $ rg test_ntuple_clusters.root; tree/ntuple/v7/test/ntuple_basics.cxx; 140: FileRaii fileGuard(""test_ntuple_clusters.root"");. tree/ntuple/v7/test/ntuple_cluster.cxx; 279: FileRaii fileGuard(""test_ntuple_clusters.root"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9192:108,failure,failure,108,https://root.cern,https://github.com/root-project/root/pull/9192,1,['failure'],['failure']
Availability,"VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292:1774,error,error,1774,https://root.cern,https://github.com/root-project/root/issues/7292,1,['error'],['error']
Availability,"Various developments to prepare the `stressRooFit` executable for the; newly developed batch mode. With the `-q` option, stressRooFit will not log all the errors in a; given test, but will only report the test as FAILED when there were any; errors. Tis is useful during development, allowing the developer to see which; tests pass and fail at one glance without having to endlessly scroll; through the ouput that gets chopped up by the detailed reports on which; comparisons failed in a given test. Furthermore, this PR also introduced a `-b` option to run all fits in batch; mode. Finally, there is a little change such that all datasets in `stressRooFit` use; the vector datastore, including a bugfix in `RooAbsData` to make; `convertToVectorStore` work correctly even if the `storageType` was; wrongly defined in the dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9178:155,error,errors,155,https://root.cern,https://github.com/root-project/root/pull/9178,2,['error'],['errors']
Availability,"Vec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<Bool_t>>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x563bdc7d7910), {""Muon_tightId""}, 1, reinterpret_cast<weak_ptr<TH1D>*>(0x563bdc7d77a0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x563bdc7d7a80), reinterpret_cast<ROOT::Internal::RDF::RBookedCustomColumns*>(0x563bdc7d9150));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RVec.hxx:387:19: note: selected 'begin' function with iterator type 'ROOT::VecOps::RVec<bool>::const_iterator' (aka 'std::_Bit_const_iterator'); const_iterator begin() const noexcept { return fData.begin(); }; ^; In module 'ROOTDataFrame':; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/ActionHelpers.hxx:190:18: error: non-const lvalue reference to type 'bool' cannot bind to a temporary of type 'std::_Bit_const_iterator::const_reference' (aka 'bool'); for (auto &v : vs) {; ^ ~; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:237:33: note: in instantiation of function template specialization 'ROOT::Internal::RDF::FillHelper::Exec<ROOT::VecOps::RVec<bool>, 0>' requested here; ActionCRTP_t::GetHelper().Exec(slot, std::get<S>(fValues[slot]).Get(entry)...);; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:149:41: note: in instantiation of function template specialization 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::Exec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:4311,error,error,4311,https://root.cern,https://github.com/root-project/root/issues/6675,1,['error'],['error']
Availability,VecOps was renamed to ROOTVecOps at some point. The failure can be seen in https://github.com/root-project/root/pull/2890#issuecomment-434707107 for example,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2893:52,failure,failure,52,https://root.cern,https://github.com/root-project/root/pull/2893,1,['failure'],['failure']
Availability,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205:469,avail,available,469,https://root.cern,https://github.com/root-project/root/pull/11205,1,['avail'],['available']
Availability,Visible in test failure gtest_tree_treeplayer_test_treeprocessormt on ARM with 256 cores,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5049:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/5049,1,['failure'],['failure']
Availability,"Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:; RegQueryValueEx: returned 2: The system cannot find the file specified.; RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2678:219,error,errors,219,https://root.cern,https://github.com/root-project/root/pull/2678,1,['error'],['errors']
Availability,Visual Studio error C2026 with dictionaries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6824:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/6824,1,['error'],['error']
Availability,"We assumed that we will always have module file and unconditionally disable; header parsing on demand. However, the major use-case is gradual migration; to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),; we have a dictionary which has no module file and still relies on the old; behavior. This can realistically happen when users gradually migrate to; modules. For example, we have modules-aware ROOT and untouched third party; code. This patch enables header parsing on demand when we have no module file; available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2721:534,avail,available,534,https://root.cern,https://github.com/root-project/root/pull/2721,1,['avail'],['available']
Availability,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15833:302,robust,robust,302,https://root.cern,https://github.com/root-project/root/pull/15833,1,['robust'],['robust']
Availability,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6101:1669,Error,Error,1669,https://root.cern,https://github.com/root-project/root/pull/6101,4,"['Error', 'error']","['Error', 'error']"
Availability,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16201:571,error,error-capturing,571,https://root.cern,https://github.com/root-project/root/issues/16201,2,['error'],"['error-capturing', 'errors']"
Availability,"We currently fail to create a module for RootFit with the following error; message when merging a union in signal.h:; ```; In file included from input_line_12:67:; In file included from /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/RooErrorHandler.h:20:; In file included from /usr/include/signal.h:394:; /usr/include/bits/pthreadtypes.h:130:3: error: typedef redefinition with different types ('union pthread_cond_t' vs 'union pthread_cond_t'); } pthread_cond_t;; ^; /usr/include/sys/types.h:271:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'Hist.Foption.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:820:10: note: Hist.Foption.h defined here; module ""Foption.h"" { header ""Foption.h"" export * }; ^; /usr/include/signal.h:394:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'RooFitCore.RooErrorHandler.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:2449:10: note: RooFitCore.RooErrorHandler.h defined here; module ""RooErrorHandler.h"" { header ""RooErrorHandler.h"" export * }; ^; Error: /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/bin/rootcling: compilation failure (/build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/lib/libRooFitCorecbd7d3c40e_dictUmbrella.h); make[2]: *** [roofit/roofitcore/G__RooFitCore.cxx] Error 1; ```. This patch adds the header to the modulemap which prevents us from; trying to merge this struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1020:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/1020,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"We currently get the error below from stdlib.h as we have problems merging; these special declarations with GCC annotations. We can't add stdlib.h to; the normal libc module as this would cause a dependency cycle between the; builtin modules of clang and libc, but having this as a standalone module; seems to work for me. ```; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:8: error: reference to 'lldiv_t' is ambiguous; extern lldiv_t lldiv (long long int __numer,; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:16: error: functions that differ only in their return type cannot be overloaded; extern lldiv_t lldiv (lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1231:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/1231,1,['error'],['error']
Availability,"We currently have two ODR errors when using modules. One is when; using setjmp, the other is coming from TException. This patch; makes TException non-textual and moves it to the config module; to prevent cyclic dependencies. We also add setjmp to the; modulemap to fix the ODR errors on the setjmp struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/876,2,['error'],['errors']
Availability,"We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```; template<typename T>; class Bar {; consteval static T x() { return 5; }; public:; Bar() : a(x()) {}. private:; int a;; };. Bar<int> g();; ```; Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13700:439,error,errored,439,https://root.cern,https://github.com/root-project/root/pull/13700,1,['error'],['errored']
Availability,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121:88,failure,failure,88,https://root.cern,https://github.com/root-project/root/issues/14121,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"We do not support it at the moment, so better to raise an explicit error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12256:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/12256,1,['error'],['error']
Availability,We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries.; ; Should give 5MB improvements for modules.; ; Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043:94,failure,failure,94,https://root.cern,https://github.com/root-project/root/pull/3043,1,['failure'],['failure']
Availability,"We don't need any input_line declration from rootmap for startup time.; However it may cause a failure on tests when they have custom; dictionaries. Gives 5MB impr for modules, but still Testing!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2892:95,failure,failure,95,https://root.cern,https://github.com/root-project/root/pull/2892,1,['failure'],['failure']
Availability,"We don't need it, and with the upgrade to LLVM 16 the NVPTX target (correctly) errors that there is no (direct) JIT execution support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13482:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/13482,1,['error'],['errors']
Availability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2154:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/2154,5,"['Failure', 'error', 'failure']","['Failures', 'error', 'failures']"
Availability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/lastCompletedBuild/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:12,failure,failures,12,https://root.cern,https://github.com/root-project/root/pull/2148,5,"['Failure', 'error', 'failure']","['Failures', 'error', 'failures']"
Availability,"We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:8,failure,failures,8,https://root.cern,https://github.com/root-project/root/issues/6563,1,['failure'],['failures']
Availability,We hosted the first version of the samples on our own public EOS space but the data is now also available from the CERN Open Data portal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6109:96,avail,available,96,https://root.cern,https://github.com/root-project/root/pull/6109,1,['avail'],['available']
Availability,We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:399,redundant,redundant,399,https://root.cern,https://github.com/root-project/root/pull/3747,1,['redundant'],['redundant']
Availability,"We might be in a situation where we linked the library into an executable and; our trigger function is inside it. There is no point in trying to load rdict; and pcm files as it will fail. In that case we exit early avoiding the; invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:425,failure,failure,425,https://root.cern,https://github.com/root-project/root/pull/3896,1,['failure'],['failure']
Availability,"We need changes because of a new format for compression settings.; We can see failure on Windows. Test 2 : Check size & compression factor of a Root file........ FAILED; last =10034, comp=2.193206",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2938:78,failure,failure,78,https://root.cern,https://github.com/root-project/root/pull/2938,1,['failure'],['failure']
Availability,We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15940:389,failure,failure,389,https://root.cern,https://github.com/root-project/root/pull/15940,1,['failure'],['failure']
Availability,"We need to be able to build release binaries. This is likely somehow connected also to the new CI :-) @smuzaffar I'd be interested to hear your thoughts on this... Maybe we can address this (and still enable https://github.com/root-project/root/issues/12270) by the following sequence for the regular CI:. 1. build ROOT; 2. build the (tar.gz|rpm|deb|...) package; 4. delete build and source dir; 5. unpack the tar.gz package; 6. run roottest; 7. if release: make package available on root.cern. Installing a `.pkg` file on macOS, or an install package on Windows will be very intrusive, so maybe there we can only do steps 5 and 6 using a tar.gz / zip, but that's already better than what we have today. The goal should be to ""test what we release"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12272:471,avail,available,471,https://root.cern,https://github.com/root-project/root/issues/12272,1,['avail'],['available']
Availability,We need to have class.rules during configuration time to avoid silent error during generation of dictionary: Error in <TClass::ReadRules()>: Cannot find rules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4876:70,error,error,70,https://root.cern,https://github.com/root-project/root/pull/4876,2,"['Error', 'error']","['Error', 'error']"
Availability,We need to move LLVM in ROOT to use the new behavior of policy CMP0051; as it will be removed soon and the warning below will become an error:. CMake Deprecation Warning at interpreter/llvm/src/CMakeLists.txt:15 (cmake_policy):; The OLD behavior for policy CMP0051 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2342:136,error,error,136,https://root.cern,https://github.com/root-project/root/pull/2342,1,['error'],['error']
Availability,We often parse the output of commands to get certain system; information. This however fails as soon as the system locale changes; which results in cryptic errors where certain variables have the; wrong content on an otherwise perfectly fine working system. This patch sets LANG=C from CMake to force all subprocesses that; we run to use the stable C locale that should prevent all those; errors in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/780:156,error,errors,156,https://root.cern,https://github.com/root-project/root/pull/780,2,['error'],['errors']
Availability,"We removed the pytest shipped with roottest because the source code was from 2014 and incompatible with py3.9 (see #6597). However, this poses now the issue on MacOs with python2 that we have to install pytest. Without a virtual environment, MacOS does not allow to pip packages. Since roottest fails on configuration level without pytest, roottest is currently broken in this configuration. @axel @oshadura What should we do? Our CI always runs roottest against python3, so we currently don't see the issue in our infrastructure. I see three options:; 1. Ditch testing of python2 on MacOS and rely on the test coverage of other platforms (python2 is anyway dead); 2. Use a venv overlay in Jenkins for the MacOS nodes (haven't tested but it should work and is binary compatible with the system python); 3. We change the hard failure of roottest to a soft failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686:825,failure,failure,825,https://root.cern,https://github.com/root-project/root/issues/6686,2,['failure'],['failure']
Availability,"We should follow the shutdown procedure from FrontendAction::EndSourceFile which ensures clang is properly torn down. This patch allows us to write a module file without having to explicitly call CompilerInstance::clearOutputFiles. This is part of a patch intending to lay down some infrastructure to fix the conditional build of the clang-internal module _Builtin_intrinsics.pcm in the context of cmssw. I've found an easier way to do so, however, this is of generic importance for ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675:112,down,down,112,https://root.cern,https://github.com/root-project/root/pull/4675,2,['down'],['down']
Availability,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15168:218,redundant,redundant,218,https://root.cern,https://github.com/root-project/root/pull/15168,1,['redundant'],['redundant']
Availability,"We uncovered this bug from the changes in fail-on-missing behavior. The test uses only Vc, and uses it directly:. ```; root/test/testGenVectorVc.cxx:67:30: error: ‘Vc’ was not declared in this scope; typedef std::vector<Data, Vc::Allocator<Data>> Vector;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1988:156,error,error,156,https://root.cern,https://github.com/root-project/root/pull/1988,1,['error'],['error']
Availability,"We will probably see an increasing amount of these failures with; C++ modules as we now deserialize all declarations instead of just; the PCH ones. To safe us a lot of debugging time on where to push; the needed transaction, let's directly print the stack trace here; in the rare case that we crash here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/921:51,failure,failures,51,https://root.cern,https://github.com/root-project/root/pull/921,1,['failure'],['failures']
Availability,"We would like to have an option to reparametrise shape-factors, i.e. the per-bin normalisation factors in HistFactory. This would be useful for template fits where different histograms represent different values of some parameter, e.g. mass. Currently, it seems that only NormFactors can be reparametrised and the code crashes with a seg fault when trying to reparametrise the shape factors. See the example attached. [shapeFactorCrash.zip](https://github.com/root-project/root/files/10581134/shapeFactorCrash.zip). ### Describe the solution you'd like; We would like to be able to use HistFactory::Measurement::AddPreprocessFunction for shapefactors. ### Describe alternatives you've considered; There is a workaround by doing this reparametrisation manually, but it cumbersome and errorprone. ### Additional context; Note that even if this is not supported, the code should probably not crash with a seg fault (tested with ROOT Version: 6.27/01)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12225:338,fault,fault,338,https://root.cern,https://github.com/root-project/root/issues/12225,3,"['error', 'fault']","['errorprone', 'fault']"
Availability,WebGui - do not produce error output when chrome not installed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4880:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/4880,1,['error'],['error']
Availability,"Webgraphics: canvas displayed, but many error printed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:40,error,error,40,https://root.cern,https://github.com/root-project/root/issues/15340,1,['error'],['error']
Availability,"Well-known branch names, e.g. `master` or `v6-28-00-patches` always use the equivalent upstream roottest branch. However, we should be careful not to match a substring. Concretely, before this patch, `master-14449` was incorrectly taken as a well-known branch causing the error below.; ```; Cloning into 'roottest'...; fatal: Remote branch master-13449 not found in upstream origin; CMake Error at CMakeLists.txt:780 (message): Expected roottest at 'C:/ROOT-CI/src/roottest' (not a directory?); ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13504:272,error,error,272,https://root.cern,https://github.com/root-project/root/pull/13504,2,"['Error', 'error']","['Error', 'error']"
Availability,"When HistFactory constructs gamma parameters, they don't have initial errors.; When trying to plot the prefit model, the missing errors will make problems.; By assigning the relative errors caused by the constraint terms, pre-fit plots; will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3912:70,error,errors,70,https://root.cern,https://github.com/root-project/root/pull/3912,3,['error'],['errors']
Availability,"When PR #4279 was initially sent on Aug 25th, the search for Python was; moved to RootBuildMacros in order to avoid a build failure due ot the; search for another package and the declaration of one of the new CMake; variables.; This seem not to be a problem anymore (something changed in the; meantime?), so the search for Python can be put back to the original; place.; This could also fix the tests failing with cxx17 due to a mismatch; between Python executable and libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4686:124,failure,failure,124,https://root.cern,https://github.com/root-project/root/pull/4686,1,['failure'],['failure']
Availability,When VDT is available use for the CPU implementation the fast implementation of tanh,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2567:12,avail,available,12,https://root.cern,https://github.com/root-project/root/pull/2567,1,['avail'],['available']
Availability,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5422:250,failure,failures,250,https://root.cern,https://github.com/root-project/root/pull/5422,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5076:49,error,error,49,https://root.cern,https://github.com/root-project/root/pull/5076,3,['error'],"['error', 'error-messages-from-']"
Availability,"When asymptotically correct errors are used, the current implementation; breaks if variables don't have identical name and title. This is solved; by always using the name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5316:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/5316,2,['error'],['errors']
Availability,"When building ROOT in optimized mode, we enable fast math which then; disables errno on math functions. But this only happens in TCling,; so all modules built by rootcling_stage1 are suddenly out of sync; and we get errors like this:; ```; error: errno in math functions was enabled in PCH file but is currently disabled; ```. This patch just applies the same setting in _stage1. In theory we; should make a central place where we have these extra flags, but; that's out of scope for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229:216,error,errors,216,https://root.cern,https://github.com/root-project/root/pull/1229,2,['error'],"['error', 'errors']"
Availability,"When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3838:151,error,error,151,https://root.cern,https://github.com/root-project/root/pull/3838,1,['error'],['error']
Availability,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770:118,error,errors,118,https://root.cern,https://github.com/root-project/root/issues/12770,1,['error'],['errors']
Availability,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10578:49,error,error,49,https://root.cern,https://github.com/root-project/root/issues/10578,3,"['down', 'error']","['download-XROOTD', 'downloaded', 'error']"
Availability,"When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```; [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'; SOFIE::RModelParser_ONNX Parser;; ~~~~~~~^; ```. ```; [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found; #include ""Higgs_trained_model.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~; Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:92,error,errors,92,https://root.cern,https://github.com/root-project/root/issues/10461,3,['error'],"['error', 'errors']"
Availability,"When building with #6385 I get the following error when building with `builtin_cling=OFF`. I haven't investigated in detail so it could be something wrong on my part:. ```log; [ 96%] Generating G__Core.cxx, ../lib/Core.pcm; cd /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core && /home/conda/feedstock_root/build_artifacts/debug_1613296575343/_build_env/bin/cmake -E env LD_LIBRARY_PATH=/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib: /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/lib/libCore.so -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/externals -excludePath /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/include -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir/ginclude -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/cont/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/gui/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:45,error,error,45,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,When building with gcc49 on osx a linker assertion happens when linking interpreter module. Trial and error reveal that setting -O0 removes the linker assertion. Dan Riley found that adding the flag -fno-omit-frame-pointer also removed the linker assertion without removing other optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/64:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/64,2,['error'],['error']
Availability,"When building without root7 but with C++14, RLogger is used.; Make it available to the include directories.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5775:70,avail,available,70,https://root.cern,https://github.com/root-project/root/pull/5775,1,['avail'],['available']
Availability,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11255:595,down,down,595,https://root.cern,https://github.com/root-project/root/pull/11255,1,['down'],['down']
Availability,"When cling is compiled standalone against an external instance of LLVM and clang, cling cannot be reliably used. This is because ```createCI()``` throws an error about a non-existing clang resource directory inside the cling directories and a crash occurs shortly afterwards, when a code to be interpreted is entered. The reason of the above seems to be the inability of cling and its build system to flag properly that there is no built-in LLVM/clang and therefore cling should use the external one instead. This PR fixes it by introducing the ```LLVM_PATH``` pre-processor definition which is populated automatically by CMake with the detected LLVM directory as soon as both ```builtin_llvm``` and ```builtin_clang``` are off. If I should have done this in a different way, there are pieces of code where ```LLVM_PATH``` should be also used but it isn't (or vice versa), or you have any other comments, I'm happy to hear your suggestions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13175:98,reliab,reliably,98,https://root.cern,https://github.com/root-project/root/pull/13175,2,"['error', 'reliab']","['error', 'reliably']"
Availability,"When cling is compiled standalone without the help of the Cling Packaging Tool, errors about missing ```llvm::jitlink``` symbols may occur. For example, I could not build cling against [an external instance of LLVM + clang](https://github.com/root-project/llvm-project/tree/cling-llvm13) compiled with ```BUILD_SHARED_LIBS=ON```. This PR fixes it by updating 2 offensive CMakeLists.txt's. (Contributing to the ROOT repository rather than the cling one by request of @Axel-Naumann)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13140:80,error,errors,80,https://root.cern,https://github.com/root-project/root/pull/13140,1,['error'],['errors']
Availability,"When compiled in debug mode, RooFit was outlining a normally inlined; function, which created a linker error in a specific setup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4514:103,error,error,103,https://root.cern,https://github.com/root-project/root/pull/4514,1,['error'],['error']
Availability,"When compiled in with '-Ddev=ON', warning becomes errors. ```; In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:; tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]; 211 | assert(length == ConvertShapeToLength(fShapeC));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9341:50,error,errors,50,https://root.cern,https://github.com/root-project/root/pull/9341,3,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"When compiled with -Ddev=ON options, <cstdio> include is not provided. ```; Config.cxx:41:7: error: ‘printf’ was not declared in this scope; 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");; | ^~~~~~; /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’?; 16 | #include <thread> // std::thread::hardware_concurrency(); +++ |+#include <cstdio>; 17 | ; /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope; 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");; | ^~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9452:93,error,error,93,https://root.cern,https://github.com/root-project/root/pull/9452,2,['error'],['error']
Availability,"When compiled with latest gcc / clib, one get warnings like:; ```; /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’; ```. It is because of declaration:; ```; char ut_host[UT_HOSTSIZE]; __attribute_nonstring__; /* Hostname for remote login. */; ```. Seems to be, `ut_host` cannot be used as null-terminated string.; Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10688:97,error,error,97,https://root.cern,https://github.com/root-project/root/pull/10688,1,['error'],['error']
Availability,"When composing the expressions to jit autoparsing is redundant as we; know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of; autoparse and autoload (useful for modules); and secondly avoids deep call; chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3765:53,redundant,redundant,53,https://root.cern,https://github.com/root-project/root/pull/3765,2,"['failure', 'redundant']","['failures', 'redundant']"
Availability,"When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:345,error,error,345,https://root.cern,https://github.com/root-project/root/issues/9687,1,['error'],['error']
Availability,When constructing in Python a derived class from Fitter an error occurred caused probably of a not understanding a typedef. See issue #12391. This PR fixes #12391,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12397:59,error,error,59,https://root.cern,https://github.com/root-project/root/pull/12397,1,['error'],['error']
Availability,"When created JSON should be used outside ROOT application and without running THttpServer,; it is better to use batch mode for generation of JSON files. Places are:. 1. jupyter; 2. doxygen; 3. c1->SaveAs(""file.json""). Produced JSON is more robust and can be processed as is - how it is performed by the batch image production.; Main difference - extra JS modules directly embed into JSON. And `TF1` always store its values. Also configure `source_dir` of JSROOT when producing images. This let use local mathjax. Update JSROOT with Android/TGeo fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16783:240,robust,robust,240,https://root.cern,https://github.com/root-project/root/pull/16783,1,['robust'],['robust']
Availability,"When creating a likelihood for the batch mode, there are two distinct steps:. 1. Create the computation graph for the likelihood; 2. Instantiate a RooFitDriver instance to evaluate the likelihood. The first step will the shared with the new RooFit Automatic Differentiation (AD) backend. To make this easy, the likelihood creation for the BatchMode is refactored such that both steps listed above don't happen in the same function anymore. After this PR, it will only require small changes to make the codegen+AD backend available to `RooAbsPdf::createNLL()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12921:521,avail,available,521,https://root.cern,https://github.com/root-project/root/pull/12921,1,['avail'],['available']
Availability,"When creating the Asimov dataset, the errors in each bin were N, that; is, 100%. Now, they are set to sqrt(N).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5287:38,error,errors,38,https://root.cern,https://github.com/root-project/root/pull/5287,1,['error'],['errors']
Availability,"When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9437:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/9437,1,['error'],['error']
Availability,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5615:170,error,errors,170,https://root.cern,https://github.com/root-project/root/pull/5615,6,['error'],"['error', 'errors']"
Availability,"When doing lookup on templates, instantiation can fail.; This can be triggered during templarte instantiation somewhere; in clang, autoloading, cling-lookup - and SFINAE errors that; occurr in cling-lookup must not bubble up to clang, or else; clang will think that there was a problem (where there was; none - just e.g. ROOT trying to autoload a bogus template). In this concrete case, a template specialized with a lambda; was not found by clang, was tried to be autoloaded, TMetaUtils; produced a broken normalized type name, lookup on the broken; type name failed with a SFINAE error - and that ended up being; swallowed by a clang SFINAETrap by the topmost lookup. Instead, keep SFINAE errors to ourselves. This fixes ROOT-10754.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5609:170,error,errors,170,https://root.cern,https://github.com/root-project/root/pull/5609,3,['error'],"['error', 'errors']"
Availability,"When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15942:241,failure,failures,241,https://root.cern,https://github.com/root-project/root/pull/15942,1,['failure'],['failures']
Availability,"When fitting a TGraphErrors, with errors in the x coordinate, there is currently no support to perform the operation using milt-threads as it is currently done for TH1::Fit or TGraph::Fit. One needs to use the `TThreadExecutor` in the [`FitUtil::EvsluateEffectiveChi2](https://root.cern.ch/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html#a5c11d758b21c08a22b580747789ccdab) function. . This has been requested in https://root-forum.cern.ch/t/multithreading-on-minuit/46225/13",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10021:34,error,errors,34,https://root.cern,https://github.com/root-project/root/issues/10021,1,['error'],['errors']
Availability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . ; In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221:748,alive,alive,748,https://root.cern,https://github.com/root-project/root/pull/5221,1,['alive'],['alive']
Availability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() .; In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5230:733,alive,alive,733,https://root.cern,https://github.com/root-project/root/pull/5230,1,['alive'],['alive']
Availability,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7347:376,error,error,376,https://root.cern,https://github.com/root-project/root/pull/7347,1,['error'],['error']
Availability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:262,toler,tolerance,262,https://root.cern,https://github.com/root-project/root/pull/16099,4,"['avail', 'toler']","['available', 'tolerace', 'tolerance']"
Availability,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11698:226,failure,failure,226,https://root.cern,https://github.com/root-project/root/pull/11698,1,['failure'],['failure']
Availability,When looking up a ctor the modules infrasturcture deserializes more ctor; candidates in the body of the function causing the internal vector implementation; to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we; after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7298:234,failure,failures,234,https://root.cern,https://github.com/root-project/root/pull/7298,1,['failure'],['failures']
Availability,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12537:203,error,error,203,https://root.cern,https://github.com/root-project/root/issues/12537,2,"['Error', 'error']","['Error', 'error']"
Availability,"When passing `-DPYTHON_EXECUTABLE=/my/path/to/python2` on macOS ROOT fails to configure with newer CMake versions with a bizarre error of:; ```; -- Preferring Python version 3; -- Found Python: /Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python2.7 (found version ""2.7.15"") found components: Interpreter Development; -- Could NOT find Python (missing: Development) (found version ""2.7.15""); -- Looking for OpenGL; -- Could NOT find OpenGL (missing: OPENGL_gl_LIBRARY OPENGL_INCLUDE_DIR); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:610 (message):; OpenGL package (with GLU) not found and opengl option required; Call Stack (most recent call first):; CMakeLists.txt:167 (include); ```; Looking at the variables I see a weird mixture of python 2 and python 3:; ```; //; PYTHON_EXECUTABLE-CACHED:STRING=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python. // Path to a program.; Python_EXECUTABLE:FILEPATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python2.7. // Path to a file.; Python_INCLUDE_DIR:PATH=/usr/local/Cellar/python/3.7.6/Frameworks/Python.framework/Versions/3.7/include/python3.7m. // Path to a library.; Python_LIBRARY_DEBUG:FILEPATH=Python_LIBRARY_DEBUG-NOTFOUND. // Path to a library.; Python_LIBRARY_RELEASE:FILEPATH=/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/libpython3.7m.dylib. // Path to a file.; Python_NumPy_INCLUDE_DIR:PATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/lib/python2.7/site-packages/numpy/core/include; ```; This PR includes one way of fixing the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4832:129,error,error,129,https://root.cern,https://github.com/root-project/root/pull/4832,2,"['Error', 'error']","['Error', 'error']"
Availability,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10544:85,down,downcasting,85,https://root.cern,https://github.com/root-project/root/pull/10544,1,['down'],['downcasting']
Availability,"When registering a new specialization, we cannot assert that the; specialization is new, as in: has not been registered as a loadable; specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e.; different specialization template arguments might map to the same; ODRHash value. loadLazySpecializationsImpl() will thus load something,; and claim that the ""Specialization is already registered as lazy"",; but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will; be loaded is causing problems down the road; so far we have not observed; such problems in the wild. If so, the ODRHash must not be the lookup key,; but a mere lookup hint into a multimap or similar, where the search compares; the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g.; ```; roottest/cling/threading/clinglock.C...; Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253.; ```; on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9621:658,down,down,658,https://root.cern,https://github.com/root-project/root/pull/9621,1,['down'],['down']
Availability,When run C++17 kernel in Jupyter notebook cause some errors; due to currently clang-5.0 in https://root.cern.ch/download/cling/ is not; support c++17.; So add support to C++1z for Jupyter kernel and we can try some new; features in Jupyter notebook. for avoiding following error:. [I 05:46:38.253 NotebookApp] Kernel restarted:; d3413fa0-7046-4b63-912b-a286610eacc1; error: invalid value 'c++17' in '-std=c++17'; note: use 'c++98' or 'c++03' for 'ISO C++ 1998 with amendments' standard; note: use 'gnu++98' or 'gnu++03' for 'ISO C++ 1998 with amendments and; GNU extensions' standard; note: use 'c++11' for 'ISO C++ 2011 with amendments' standard; note: use 'gnu++11' for 'ISO C++ 2011 with amendments and GNU; extensions' standard; note: use 'c++14' for 'ISO C++ 2014 with amendments' standard; note: use 'gnu++14' for 'ISO C++ 2014 with amendments and GNU; extensions' standard; note: use 'c++1z' for 'Working draft for ISO C++ 2017' standard; note: use 'gnu++1z' for 'Working draft for ISO C++ 2017 with GNU; extensions' standard,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/952:53,error,errors,53,https://root.cern,https://github.com/root-project/root/pull/952,4,"['down', 'error']","['download', 'error', 'errors']"
Availability,When run in parallel they delete eachother's files:. cc1plus: fatal error: /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.cxx: No such file or directory compilation terminated.; /usr/bin/ld: cannot find /builddir/build/BUILD/root-6.26.08/redhat-linux-build/runtutorials/RooCFAuto000Pdf_cxx_ACLiC_dict.o: No such file or directory; collect2: error: ld returned 1 exit status,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11643:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/11643,2,['error'],['error']
Availability,"When running ccmake in a root build directory, I noticed that some variable descriptions are empty (usually one sees a one-line description stemming from cmake/modules/RootBuildOptions.cmake). This happens when their value is forced in cmake/modules/SearchInstalledSoftware.cmake. This also affects the comments in builddir/CMakeCache.txt. I claim that when forcing these variables' values, the comment is even more important than when they remain at their defaults or user-set values. In the below patch, I basically ran an editor macro retaining the values of `${opt}_description` (as set by `ROOT_BUILD_OPTION`) and adds a very brief explanation of why the value got changed (usually by inspecting the immediate control flow and/or echoing the status message that is print out anyway). The comments are sometimes sub-optimal (when values are forced to the value that the user has set themselves anyway), but … I guess it's still nice to point out ""you had no choice here"". Unrelated to the main part:. `tmva-cuda` is force set, but nowhere else used, I suspect this should've been `tmva-gpu`. In one place I replaced; ```; if (something); else(); code; ```; by; ```; if (NOT something); code; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:735,echo,echoing,735,https://root.cern,https://github.com/root-project/root/pull/2056,1,['echo'],['echoing']
Availability,"When running rootcling to produce C++ modules we currently run; into this issue that is an issue in this specific LLVM revision; we are using in ROOT. The issue was fixed by Richard upstream; in r303373. The error we fix with this patch is:; ```; While building module 'Core':; While building module 'stl' imported from input_line_1:1:; In file included from <module-includes>:5:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/ccomplex:39:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/complex:42:; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:102:23: error: use of undeclared identifier '_Tp'; struct __are_same<_Tp, _Tp>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:25: error: use of undeclared identifier '_Tp'; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:29: error: expected expression; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:329:37: error: declaration of '_Tp' must be imported from module 'stl.ccomplex' before it is required; : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:327:21: note: previous declaration is here; template<typename _Tp>; ^; ```. Original patch description:. When we enter a module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016:208,error,error,208,https://root.cern,https://github.com/root-project/root/pull/1016,2,['error'],['error']
Availability,"When setting the branch proxy, report info about a missing branch to the user. This is done in the form of a printed error. The logic is only triggered if there are no other branch names in the list of available branches that begin with the current branch name being searched. This situation could arise for example with a skeleton analysis produced by TTree::MakeProxy and a TTree with a split object. In that case the generated code will try to create a TBranchProxy for the top-level branch, even though that branch is not available from the TTree, only the sub-branches are. See for more details the discussion at https://github.com/root-project/root/pull/3746",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16377:117,error,error,117,https://root.cern,https://github.com/root-project/root/pull/16377,3,"['avail', 'error']","['available', 'error']"
Availability,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5620:144,error,error,144,https://root.cern,https://github.com/root-project/root/pull/5620,2,['error'],['error']
Availability,"When the EDM value in Migrad is NaN, it nevertheless reports convergence, because failure to converge is detected with the condition (edm > edmval) which fails (wrongly) if edm is NaN. The added code aborts the minimization at the earliest point if edm is NaN.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6415:82,failure,failure,82,https://root.cern,https://github.com/root-project/root/pull/6415,1,['failure'],['failure']
Availability,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8011:148,error,error,148,https://root.cern,https://github.com/root-project/root/issues/8011,1,['error'],['error']
Availability,"When the user passes a gradient to the `ROOT::Math::Minimizer` via inheriting from the `ROOT::Math::IMultiGradFunction`, the error level is only considered correctly if `SetFunction()` is **called after** `SetErrorDef()`, which is completely unexpected. This should either be fixed, or if not possible, the minimizer should error out if you try to set the function too early. This bug is the reason why it took me so long to figure out to use the analytical gradient provided by `clad` in the minimizer for RooFit: I just couldn't understand why the uncertainties were wrong and until now thought it was because the gradient was wrong or not handled correctly by the minimizer. But in the end, it was all just this simple configuration problem. This code reproduces the issue with the example of finding the minimum of a simple parabola:; ```C++; double eval(double x) { return x * x; }. double evalDerivative(double x) {return 2 * x; }. class MyFunc : public ROOT::Math::IMultiGenFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }. private:; double DoEval(const double *x) const override { return eval(x[0]); }; };. class MyGradFunc : public ROOT::Math::IMultiGradFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }; private:; double DoEval(const double *x) const override { return eval(x[0]); }; double DoDerivative(const double *x, unsigned int /*icoord*/) const override { return evalDerivative(x[0]); }; };. template<class Func>; void minimize(Func const& func); {; std::unique_ptr<ROOT::Math::Minimizer> m{ROOT::Math::Factory::CreateMinimizer(""Minuit2"")};; m->SetPrintLevel(1);. // Set initial value, step size, and range; m->SetLimitedVariable(0, ""x"", 10, 1, -50, 50);. // The error level will be ignored in the IMultiGradFunction case without; // any warning to the user! Swapping the next two lines ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:125,error,error,125,https://root.cern,https://github.com/root-project/root/issues/12338,2,['error'],['error']
Availability,When this tutorial is run as part of the documentation generation it fails with global name not defined errors. This results in this page being incomplete:; https://root.cern/doc/master/zdemo_8py.html. This pull reqest addresses this problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/310:104,error,errors,104,https://root.cern,https://github.com/root-project/root/pull/310,1,['error'],['errors']
Availability,"When training a PyTorch model within TMVA (during `Factory::BookMethod`), this crash happens:; ```; : Preparing the Decorrelation transformation...; : Preparing the Gaussian transformation...; TFHandler_PyTorch : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.0089276 1.0040 [ -3.1195 5.7307 ]; : var2: 0.0079596 0.99992 [ -3.1195 5.7307 ]; : var3: 0.0079663 1.0001 [ -3.1195 5.7307 ]; : var4: 0.0074148 0.99773 [ -3.1195 5.7307 ]; : -----------------------------------------------------------; TFHandler_PyTorch : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.0089276 1.0040 [ -3.1195 5.7307 ]; : var2: 0.0079596 0.99992 [ -3.1195 5.7307 ]; : var3: 0.0079663 1.0001 [ -3.1195 5.7307 ]; : var4: 0.0074148 0.99773 [ -3.1195 5.7307 ]; : -----------------------------------------------------------; : Split TMVA training data in 6400 training events and 1600 validation events; : Print Training Model Architecture; : Option SaveBestOnly: Only model weights with smallest validation loss will be stored; Program aborted due to an unhandled Error:; Unable to find target for this triple (no targets are registered) *** Break *** abort; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12170:1151,Error,Error,1151,https://root.cern,https://github.com/root-project/root/issues/12170,1,['Error'],['Error']
Availability,"When trying to build the tests using CMake 3.10, `R__DAOS_TEST_POOL` was not; getting defined correctly which caused build errors like:. ```; expected ‘)’ before ‘R__DAOS_TEST_POOL’; 5 | std::string daosUri(""daos://"" R__DAOS_TEST_POOL "":1/a947484e-e3bc-48cb-8f71-3292c19b59a4"");; | ~ ^~~~~~~~~~~~~~~~~~; | ); ```. Moving from `COMPILE_OPTIONS` to `COMPILE_DEFINITIONS` seemed to fix it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8172:123,error,errors,123,https://root.cern,https://github.com/root-project/root/pull/8172,1,['error'],['errors']
Availability,"When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>; ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ #include &lt;iostream>; [cling]$ using namespace std;; [cling]$ struct A {; [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}; [cling]$ ? int pod1, pod2;; [cling]$ ? };; [cling]$ bool operator<=(const A &lhs, const A &rhs) {; [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));; [cling]$ ? }; input_line_6:2:46: error: function definition is not allowed here; bool operator<=(const A &lhs, const A &rhs) {; ^; </pre>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9449:103,error,error,103,https://root.cern,https://github.com/root-project/root/issues/9449,2,['error'],['error']
Availability,"When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of std::tuple is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12568:385,error,error,385,https://root.cern,https://github.com/root-project/root/pull/12568,1,['error'],['error']
Availability,"When updating `cppyy-backend` to v1.7.3 in PyROOT experimental, a compilation error appears because of a missing functionality in `TCling`, in particular a method to get using declarations of namespaces. This functionality was added to Cppyy's ROOT recently, and a patch was created for it:; https://bitbucket.org/wlav/cppyy-backend/src/59a4a747d03c6e94eaaa28062daf83104334f27d/cling/patches/using_directives.diff. This PR proposes to add such functionality to mainstream ROOT. . Inviting @Axel-Naumann and @wlav to the party.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579:78,error,error,78,https://root.cern,https://github.com/root-project/root/pull/3579,1,['error'],['error']
Availability,"When user invoke `InsertPointBefore(0, x, y)` with an empty TGraph (fNpoints==0), they will receive a message: . > Error in <TGraph::TGraph>: Inserted point index should be <= -1. This is confusing. The point index can not be -1. It also prevents insertion to an empty graph. People who familiar with `std::vector` may expect the behavior likes `vec.insert(vec.end(), value)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5149:115,Error,Error,115,https://root.cern,https://github.com/root-project/root/pull/5149,1,['Error'],['Error']
Availability,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:238,error,errors,238,https://root.cern,https://github.com/root-project/root/issues/10763,1,['error'],['errors']
Availability,"When using only ```cmake ../source -DPYTHON_EXECUTABLE=/usr/bin/python3```, as suggested on the [webpage](https://root.cern/install/build_from_source/), the compiler would say that pyROOT libraries would be built for python3. When looking for the libraries at $ROOTSYS/lib, they are not there, and *import ROOT* in the python interpreter gives error. . Only after using ```cmake ../source -Dpyroot=ON -DPYTHON_EXECUTABLE=/usr/bin/python3``` that the pyROOT libraries were built and python could find them. . I'm installing ROOT on Fedora 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8095:344,error,error,344,https://root.cern,https://github.com/root-project/root/issues/8095,1,['error'],['error']
Availability,"When we add modules for system headers we are breaking this part; of the code that tries to track back via the include chain; the original header that includes this system header. In the; modules case we hit the ""module-includes:X"" include which; we then can't track down with the normal PP anymore. The reason for this code seems to be that we never know what header; is actually possible to be included and what is just some internal; (possibly non-standalone) header like ""bits/sys/types.h"". For normal rootcling informations we have to track down until; we leave the system includes or reach the top-level system; include to be sure that we can now actually include the; given path. For modules we already know when we are in the header that; is possible to be included by someone as this is the top; level module header, so we can just stop tracking once we hit the; top-level module header.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1036:267,down,down,267,https://root.cern,https://github.com/root-project/root/pull/1036,2,['down'],['down']
Availability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/14105,1,['error'],['error']
Availability,"When you try to use GenVector you get errors like this:; ```; /home/yuka/root-build/include/Math/GenVector/Cartesian3D.h:116:50: error: could not convert ‘Vc_1::operator==<double, Vc_1::VectorAbi::Avx, Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >(((const ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >*)this)->ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >::fX, Vc_1::Vector<double, Vc_1::VectorAbi::Avx>(0, 0)).Vc_1::Mask<double, Vc_1::VectorAbi::Avx>::operator&&(Vc_1::operator==<double, Vc_1::VectorAbi::Avx, Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >(((const ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >*)this)->ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >::fY, Vc_1::Vector<double, Vc_1::VectorAbi::Avx>(0, 0))).Vc_1::Mask<double, Vc_1::VectorAbi::Avx>::operator&&(Vc_1::operator==<double, Vc_1::VectorAbi::Avx, Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >(((const ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >*)this)->ROOT::Math::Cartesian3D<Vc_1::Vector<double, Vc_1::VectorAbi::Avx> >::fZ, Vc_1::Vector<double, Vc_1::VectorAbi::Avx>(0, 0)))’ from ‘Vc_1::Mask<double, Vc_1::VectorAbi::Avx>’ to ‘bool’; return (fX == Scalar(0) && fY == Scalar(0) && fZ == Scalar(0)) ? Scalar(0) : atan2(Rho(), Z());; ```. When arguments of atan2 is both 0, it's supporsed to emit error rather; than just returning Scalar(0). Thus it's better just returning atan2; without checking its arguments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1692:38,error,errors,38,https://root.cern,https://github.com/root-project/root/pull/1692,6,"['Mask', 'error']","['Mask', 'error', 'errors']"
Availability,"While I believe this class and others probably could do with a big rework, in my attempts so far to find ways to use them in their current form I have stumbled across some very annoying behaviours -- this PR fixes one of these: that the results wouldn't copy reliably at all.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12936:259,reliab,reliably,259,https://root.cern,https://github.com/root-project/root/pull/12936,1,['reliab'],['reliably']
Availability,"While attempting to debug a crash in CMS code, we ran valgrind and valgrind reported the following error. At this point, we don't know whether this is related to the crash we have seen or not. It is undefined behavior. The full error from valgrind follows:. ==15413== Source and destination overlap in memcpy(0x1ffeff0c78, 0x1ffeff0c78, 12); ==15413== at 0x40322A8: memcpy@@GLIBC_2.14 (in /cvmfs/cms-ib.cern.ch/nweek-02654/slc7_amd64_gcc820/external/valgrind/3.15.0-bcolbf2/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==15413== by 0x15A64868: void llvm::SmallVectorImpl::append<char const*, void>(char const*, char const*) (in /cvmfs/cms-ib.cern.ch/nweek-02654/slc7_amd64_gcc820/lcg/root/6.22.03-b2018e1d820c64836287b955b51776e2/lib/libCling.so); ==15413== by 0x17A3FD9F: (anonymous namespace)::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, (anonymous namespace)::RedirectingFileSystem*) (in /cvmfs/cms-ib.cern.ch/nweek-02654/slc7_amd64_gcc820/lcg/root/6.22.03-b2018e1d820c64836287b955b51776e2/lib/libCling.so); ==15413== by 0x17A40C05: (anonymous namespace)::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_deletellvm::MemoryBuffer >, void ()(llvm::SMDiagnostic const&, void), llvm::StringRef, void*, llvm::IntrusiveRefCntPtrclang::vfs::FileSystem) [clone .isra.519] (in /cvmfs/cms-ib.cern.ch/nweek-02654/slc7_amd64_gcc820/lcg/root/6.22.03-b2018e1d820c64836287b955b51776e2/lib/libCling.so); ==15413== by 0x17A40EC5: clang::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_deletellvm::MemoryBuffer >, void ()(llvm::SMDiagnostic const&, void), llvm::StringRef, void*, llvm::IntrusiveRefCntPtrclang::vfs::FileSystem) (in /cvmfs/cms-ib.cern.ch/nweek-02654/slc7_amd64_gcc820/lcg/root/6.22.03-b2018e1d820c64836287b955b51776e2/lib/libCling.so); ==15413== by 0x15A690B4: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits, std::allocator > >&) (in /cv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6792:99,error,error,99,https://root.cern,https://github.com/root-project/root/issues/6792,2,['error'],['error']
Availability,"While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:3935,error,error,3935,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability,"While debugging a fitting the console gets clogged by a lot of messages of calling constructors and destructors of TFoamVect. I set the debug level needed to 5 for the messages to appear, and leaving the more important ones (like errors) as they were, in debug level 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6835:230,error,errors,230,https://root.cern,https://github.com/root-project/root/pull/6835,1,['error'],['errors']
Availability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/issues/11955,2,"['error', 'failure']","['error', 'failure']"
Availability,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16063:733,down,downside,733,https://root.cern,https://github.com/root-project/root/pull/16063,1,['down'],['downside']
Availability,"While testing my packages which use PyROOT, I stumbled across a little problem with ROOT and pytest which I propose to fix. Assume you have this very minimal (basically empty) python package:; ```; .; ├── setup.py; └── tests; └── test_test.py. 1 directory, 2 files; ```; Content of `setup.py`:; ```python; from setuptools import setup, find_packages. setup(; name=""root_cleanup_test"",; packages=find_packages(),; setup_requires=[""pytest-runner""],; test_suite=""tests"",; ); ```; Content of `test_test.py`; ```; import unittest; import ROOT. class TestTest(unittest.TestCase):; def test_test(self):; pass; ```. Now if you run the tests with `python setup.py pytest` which gives you the warning and error I attach to the bottom of this post. I think this is maybe related to some multithreading in the pytest runner. When you run the test alone with `pytest tests/test_test.py`, you won't get the error. My setup: ROOT 6.16/00 and Python 3.7. Let me know if I can do anything else to test this! It would be great if pytest works smoothly with ROOT. ````; ========== warnings summary ==========; /usr/lib/python3.7/site-packages/ROOT.py:98: DeprecationWarning: invalid escape sequence \S; message='class \S* already in TClassTable$' ). -- Docs: https://docs.pytest.org/en/latest/warnings.html; ========== 1 passed, 1 warnings in 0.41 seconds ==========; Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/usr/lib/python3.7/site-packages/ROOT.py"", line 782, in cleanup; facade = sys.modules[ __name__ ]; KeyError: ""ROOT""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:695,error,error,695,https://root.cern,https://github.com/root-project/root/pull/3595,3,"['Error', 'error']","['Error', 'error']"
Availability,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10919:624,Error,ErrorHandler,624,https://root.cern,https://github.com/root-project/root/issues/10919,1,['Error'],['ErrorHandler']
Availability,Windows CI runs roottest despite build failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6441:39,failure,failure,39,https://root.cern,https://github.com/root-project/root/issues/6441,1,['failure'],['failure']
Availability,"Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:1038,error,errorCode,1038,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['errorCode']
Availability,"With *all* these changes, I do not see anymore failures in a local run with the ubuntu 24.10 CI image. let's see if the rest of the CI agrees. Note that one of the changes is equivalent to https://github.com/root-project/root/pull/16671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16837:47,failure,failures,47,https://root.cern,https://github.com/root-project/root/pull/16837,1,['failure'],['failures']
Availability,"With Davix not present on the machine, the tutorials tutorials/v7/ntuple/ntpl004_dimuon.C is ran and fails:; ```; ""tutorial-v7-ntuple-ntpl004_dimuon"" start time: Dec 04 11:53 CST; Output:; ----------------------------------------------------------. Processing /home/pcanal/root_working/code/root/tutorials/v7/ntuple/ntpl004_dimuon.C...; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot find plugin handler for RRawFileDavix; CMake Error at /home/pcanal/root_working/build/master-opt/RootTestDriver.cmake:237 (message):; error code: Child aborted. <end of output>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6916:466,Error,Error,466,https://root.cern,https://github.com/root-project/root/issues/6916,2,"['Error', 'error']","['Error', 'error']"
Availability,"With PCH+Module, sometimes compiler gives a hard error:; _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._; Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm.; Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680:49,error,error,49,https://root.cern,https://github.com/root-project/root/pull/2680,1,['error'],['error']
Availability,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12826:1273,error,errors,1273,https://root.cern,https://github.com/root-project/root/pull/12826,1,['error'],['errors']
Availability,"With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");; ******************************************************************************; *Tree :t : t *; *Entries : 1000 : Total = 424803 bytes File Size = 33982 *; * : : Tree compression factor = 12.78 *; ******************************************************************************; Cluster Range # Entry Start Last Entry Size; 0 0 49 10; ….; 18 900 949 10; 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range.; This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains; all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914; the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2741:617,Error,Error,617,https://root.cern,https://github.com/root-project/root/pull/2741,5,"['Error', 'error']","['Error', 'error-with-root-']"
Availability,With latest libpng versions value 0 recognized as error and; produced results are wrong,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7359:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/7359,1,['error'],['error']
Availability,With latest libpng versions value 0 recognized as error and; produced results are wrong.; Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7357:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/7357,1,['error'],['error']
Availability,With new version (1.4) of scikit-learn the bool parameters must be passed as bool and not anymore as integers. In addition in AdaBoost base_estimator was renamed to estimator. This Pull request should fix failures observed in PR builds when the new version (1.4) of scikit-learn is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14977:205,failure,failures,205,https://root.cern,https://github.com/root-project/root/pull/14977,1,['failure'],['failures']
Availability,"With opengl disabled:; ```; //Enable support for OpenGL (requires libGL and libGLU); opengl:BOOL=OFF; ```; roottest-python-regression-regression runs but fails:; ```; ======================================================================; ERROR: Try invoking TGLVertex3::operator+ twice; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/pcanal/root_working/code/root/roottest/python/regression/PyROOT_regressiontests.py"", line 512, in test1TGLVertex3OperatorPlus; from ROOT import TGLVertex3, TGLVector3; ImportError: cannot import name 'TGLVertex3' from 'ROOT' (/home/pcanal/root_working/build/master-opt/lib/ROOT/__init__.py). ======================================================================; ERROR: Check that the right constructor of TGLLine3 is called; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/pcanal/root_working/code/root/roottest/python/regression/PyROOT_regressiontests.py"", line 524, in test2TGLLine3Constructor; from ROOT import TGLLine3, TGLVertex3, TGLVector3; ImportError: cannot import name 'TGLLine3' from 'ROOT' (/home/pcanal/root_working/build/master-opt/lib/ROOT/__init__.py). ----------------------------------------------------------------------. FAILED (errors=2); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6915:239,ERROR,ERROR,239,https://root.cern,https://github.com/root-project/root/issues/6915,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6345:105,error,errors,105,https://root.cern,https://github.com/root-project/root/issues/6345,5,['error'],"['error', 'errors']"
Availability,"With the attached example, the direct case takes 23.6s while original TTreeReader version takes 34.2s. With the included changes, the TTreeReader version is down to 28.7s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216:157,down,down,157,https://root.cern,https://github.com/root-project/root/pull/3216,1,['down'],['down']
Availability,"With the bundled MS corefonts, root license isn't completely free. What I ask is to make MS corefonts optional. A patch from Fedora is also available here https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357:140,avail,available,140,https://root.cern,https://github.com/root-project/root/issues/8357,1,['avail'],['available']
Availability,"With the example below, we get:. ```; Error in <TTreeReaderArrayBase::GetBranchContentDataType()>: The branch h.fData.fPx contains a data type 9 for which the dictionary cannot be retrieved.; ```. This was seen during investigations by CMSSW team of leveraging `Double32_t` and `Float16_t` to reduce data size. Cheers,; Philippe. ```; #include ""TTree.h""; #include ""TTreeReader.h""; #include ""TTreeReaderArray.h"". struct Inside {; Double32_t fPx;; double fPy;; };. struct Holder {; std::vector<Double32_t> fValues;; std::vector<Inside> fData;; };. #ifdef __ROOTCLING__; #pragma link C++ class Inside+;; #pragma link C++ class Holder+;; #pragma link C++ class std::vector<Inside>+;; #pragma link C++ class std::vector<Double32_t>+;; #endif. void exec(); {; auto t = new TTree(""t"",""t"");; Holder h;; t->Branch(""h."", &h);; t->Fill();; t->Print();; TTreeReader r(t);; //TTreeReaderArray<Double32_t> arr1(r, ""h.fValues"");; TTreeReaderArray<Double32_t> arr2(r, ""h.fData.fPx"");; TTreeReaderArray<Double32_t> arr3(r, ""h.fData.fPy"");; r.Next();; // arr1.GetSize();; arr2.GetSize();; arr3.GetSize();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11260:38,Error,Error,38,https://root.cern,https://github.com/root-project/root/issues/11260,1,['Error'],['Error']
Availability,"With the following macro the error bars overlapped the stat box:. {; vector < float > X, Xerr;; vector < float > Y, Yerr;; for(int i=0 ; i<10 ; ++i) {; X.push_back(i*0.1); Xerr.push_back(1.);; Y.push_back(i*2.2); Yerr.push_back(1.);; }; auto g = new TGraphErrors(X.size(), &(X[0]), &(Y[0]), &(Xerr[0]), &(Yerr[0]));. auto f = new TF1(""f"",""pol1"",0.,1.); g->Fit(""f"",""QR"");; gStyle->SetOptFit(true);. g->Draw();; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1684:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/1684,1,['error'],['error']
Availability,"With the helpers for column creation introduced by #16116, memory consumption during compilation significantly increases (from ~200MB to ~600MB using clang) due to the fact that templated field types, and therefore all possible column representations are automatically instantiated. This commit prevents this automatic instantiation from happening by `extern`-alizing all `RSimpleField` template specializations and only instantiating them in `RField.cxx`, bringing down memory consumption to ~230MB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16284:466,down,down,466,https://root.cern,https://github.com/root-project/root/pull/16284,1,['down'],['down']
Availability,"With the module generation in rootcling Clang rlies on AST consumers; to do the module generation work for it. Right now this doesn't work; however with the interpreter, as we just overwrite the deserialization; listener that clang added which will cause strange errors during; the module generation (the most prompinent error is that the number; of recorded submodules will be incorrect, as this it the first thing; that Clang checks before writing a module and which is recorded by; an ASTDeserializationListener). This patch just adds a multiplexer here that allows us to keep the; old listener while also adding the one we have.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/995:263,error,errors,263,https://root.cern,https://github.com/root-project/root/pull/995,2,['error'],"['error', 'errors']"
Availability,"With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3370:146,avail,available,146,https://root.cern,https://github.com/root-project/root/pull/3370,1,['avail'],['available']
Availability,"With the patch at the end of this report, the test `roottest-root-io-issue-9899-read_cmssw_class_v3` fails with (partial output):; ```; Error in <readfile>: For entries 0 we have result=19200; ```; This is due to the fact that there is no branch for `w.fPersValue.fPersLowData.fProblems.fContent.fHolder` because the typeof `fHolder` : `RefVectorMemberPointersHolder` only has one transient member. Consequently, the line in `TBranchElement`'s `GatherArtificialElements` function:; ```; if (!foundRelatedSplit) {; continue;; }; ```; which is designed to avoid drilling through data members that are ""new"" in the current (in-memory) class layout. `fContent` also has no explicit branch (it is intentionally elided) but `fContent.fID` has a branch. Since the object (`fContent` is updated during the read, we should be running the I/O rules on its sub-objects ... but we don't. The issue can be senen by applying this patch to `roottest` and running `ctest -R issue-9899`. ```; diff --git a/root/io/issue-9899/read_cmssw_class_v3.cxx b/root/io/issue-9899/read_cmssw_class_v3.cxx; index 58b50a93..e0aef7e1 100644; --- a/root/io/issue-9899/read_cmssw_class_v3.cxx; +++ b/root/io/issue-9899/read_cmssw_class_v3.cxx; @@ -129,10 +129,8 @@ struct PersHighData {; }; int check(int slide = 1) {; int res = 0;; -#ifdef FIXED_ISSUE_99xx; for(auto &d : fPersLowData); res += d.check(slide, 0);; -#endif; for(auto &d : fLowData); res += d.check(slide * BIT(6), 10);; return res;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9924:136,Error,Error,136,https://root.cern,https://github.com/root-project/root/issues/9924,1,['Error'],['Error']
Availability,"With the upgrade to llvm-13, the JIT lost the ability to re-use existing weak symbols that the JIT had already emitted, instead only looking at dlsym. This causes a significant increase in JITted symbols, and thus a significant slow-down of cling / its JIT. This restores the old behavior, with an identical set of symbols that jet jitted. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018:233,down,down,233,https://root.cern,https://github.com/root-project/root/pull/12018,1,['down'],['down']
Availability,"With the upgrade to llvm-13, the JIT lost the ability to re-use existing weak; symbols that the JIT had already emitted, instead only looking at dlsym. This; causes a significant increase in JITted symbols, and thus a significant slow-down; of cling / its JIT. This restores the old behavior, with an identical set of symbols that jet jitted. (cherry picked from commit 23ca9fe)# This Pull request:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12163:235,down,down,235,https://root.cern,https://github.com/root-project/root/pull/12163,1,['down'],['down']
Availability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:434,down,down,434,https://root.cern,https://github.com/root-project/root/pull/11945,1,['down'],['down']
Availability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:434,down,down,434,https://root.cern,https://github.com/root-project/root/pull/12096,1,['down'],['down']
Availability,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:110,mask,masked,110,https://root.cern,https://github.com/root-project/root/pull/11517,1,['mask'],['masked']
Availability,"Without memstat support, `root -memstat` should not be available",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6410:55,avail,available,55,https://root.cern,https://github.com/root-project/root/issues/6410,1,['avail'],['available']
Availability,"Without this patch we get:. ld: Undefined symbols:; TMacOSXSystem::TMacOSXSystem(), referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; TMacOSXSystem::~TMacOSXSystem(), referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; typeinfo for TMacOSXSystem, referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; clang: error: linker command failed with exit code 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14387:673,error,error,673,https://root.cern,https://github.com/root-project/root/pull/14387,1,['error'],['error']
Availability,"Without this, I am getting a compile error because `std::function` is undefined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/704:37,error,error,37,https://root.cern,https://github.com/root-project/root/pull/704,1,['error'],['error']
Availability,Work around to silent a compiler error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2942:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/2942,1,['error'],['error']
Availability,Workaround for potential `fatal error C1001: Internal compiler error` in `RelWithDebInfo` mode and fatal `error LNK1179: invalid or corrupt file: duplicate COMDAT` in `Debug` mode. This happens with `CMAKE_CXX_STANDARD=14` only (i.e. it works fine with `CMAKE_CXX_STANDARD=17`),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10163:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/10163,3,['error'],['error']
Availability,WriteAST now correctly checks for errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/539:34,error,errors,34,https://root.cern,https://github.com/root-project/root/pull/539,1,['error'],['errors']
Availability,"X: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extensio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:1730,Error,Error,1730,https://root.cern,https://github.com/root-project/root/issues/15340,1,['Error'],['Error']
Availability,"X] Checked for duplicates. ### Description. This https://github.com/root-project/root/pull/14703 (my guess on the changes, I did not confirm that this is the case) seems to have caused issues in python projects depending on root. E.g. https://lcgapp-services.cern.ch/cdash/testDetails.php?test=23867111&build=312289 ; ```; # setting LC_ALL to ""C""; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/__init__.py"", line 29, in <module>; from .Bindings import * # noqa: F401 F403; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/Bindings.py"", line 55, in <module>; import cppyy; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/__init__.py"", line 71, in <module>; from ._cpython_cppyy import *; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/_cpython_cppyy.py"", line 18, in <module>; c = loader.load_cpp_backend(); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; ```. and many others in the list https://lcgapp-services.cern.ch/cdash/viewTest.php?onlyfailed&buildid=312289. Are we missing some required changes to build options?. ### Reproducer. On any centos7 machine with cvmfs (or use available stack for your OS); ```; source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh; python -c ""import GaudiPython""; ```. ### ROOT version. Master from tonight.; Things were fine yesterday. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. centos7, alma9, alma8, ubuntu20, ubuntu22. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:1552,avail,available,1552,https://root.cern,https://github.com/root-project/root/issues/14904,1,['avail'],['available']
Availability,"Z(const RVec<XYZTVector>& vec){; auto getItemZ = [](const XYZTVector& item) { return item.Z(); };; return Map(vec, getItemZ);; }. '''. ROOT.gInterpreter.Declare(vectors). if __name__ == ""__main__"":; ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(10, 10, 10)"").Snapshot(""Particle"", ""f1.root""); ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(20, 20, 20)"").Snapshot(""Cluster"", ""f2.root""); ROOT.RDataFrame(1).Define(""vec"", ""std::vector<XYZTVector>{XYZTVector(30, 30, 30, 30)}"").Snapshot(""Vertex"", ""f3.root""). ch1 = ROOT.TChain(""Particle""); ch1.Add(""f1.root""); ch2 = ROOT.TChain(""Cluster""); ch2.Add(""f2.root""); ch3 = ROOT.TChain(""Vertex""); ch3.Add(""f3.root""). ch1.AddFriend(ch2, ""cluster""); ch1.AddFriend(ch3, ""vertex""). df = ROOT.RDataFrame(ch1); print(df.Define(""particle_z"", ""vec.Z()"").Histo1D(""particle_z"").GetMean()); print(df.Define(""cluster_z"", ""cluster.vec.Z()"").Histo1D(""cluster_z"").GetMean()); print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); ```. which results in the error on 3rd print. Full output:. ```; 10.0; 20.0; input_line_99:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_103:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:1915,error,error,1915,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,Zmin and Zmax did not take into account the Z errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5455:46,error,errors,46,https://root.cern,https://github.com/root-project/root/pull/5455,1,['error'],['errors']
Availability,"Zmin and Zmax did not take into account the Z errors for TGrap2DErrors (X and Y axis were fine).; reproducer:; ```; {; const Int_t n = 10;; Double_t x[n], y[n], z[10];; Double_t ex[n], ey[n], ez[10];. for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2)-5;; z[i] = i;; ex[i] = i+1;; ey[i] = i+1;; ez[i] = i+1;; }. auto *gr2d = new TGraph2DErrors(n,x,y,z,ex,ey,ez);; gr2d->Draw(""P0 ERR"");; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5455:46,error,errors,46,https://root.cern,https://github.com/root-project/root/pull/5455,1,['error'],['errors']
Availability,"[ 47%] Built target rootcling_stage1; Scanning dependencies of target G__Core; [ 47%] Generating G__Core.cxx, ../lib/libCore.rootmap, ../lib/Core.pcm; Error in <CheckModuleValid>: Couldn't find module with name 'Core' in modulemap!; core/CMakeFiles/G__Core.dir/build.make:453: recipe for target 'core/G__Core.cxx' failed; make[2]: *** [core/G__Core.cxx] Error 1; CMakeFiles/Makefile2:15584: recipe for target 'core/CMakeFiles/G__Core.dir/all' failed; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; Makefile:151: recipe for target 'all' failed; make: *** [all] Error 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3577:151,Error,Error,151,https://root.cern,https://github.com/root-project/root/pull/3577,4,['Error'],['Error']
Availability,[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:36,fault,fault,36,https://root.cern,https://github.com/root-project/root/issues/12957,1,['fault'],['fault']
Availability,[6.28] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13933:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/13933,1,['error'],['error']
Availability,[6.30] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13932:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/13932,1,['error'],['error']
Availability,[BOT] Minor improvements to clang-format-bot error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/437:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/437,1,['error'],['error']
Availability,[Backport][6.18] Compilation failure on Centos7 due to xrootd5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6781:29,failure,failure,29,https://root.cern,https://github.com/root-project/root/pull/6781,2,['failure'],['failure']
Availability,[CI] S3 upload failures should not cancel the build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16742:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/16742,1,['failure'],['failures']
Availability,[CMake] Add quotes to avoid failure on Windows node (?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5271:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/pull/5271,1,['failure'],['failure']
Availability,"[CMake] Attempt to write `ClingConfig.cmake.tmp` to the external LLVM library directory, causing configuration failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:111,failure,failure,111,https://root.cern,https://github.com/root-project/root/issues/11920,1,['failure'],['failure']
Availability,"[CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std::string&) [with TRANS = xAOD::EventInfo_v1; PERS = xAOD::EventInfo_v1; std::string = std::__cxx11::basic_string<char>] while creating transient objectxAOD::EventInfo_v1/EventInfo: std::runtime_error: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj failed to get DataObject, Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 DataProxy 0 0 WARNING accessData: conversion failed for data object 45903698/EventInfo; 12:37:41 Returning NULL DataObject pointer; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR Unable to retrieve Event root object; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR declareEventRootAddress for context s: 0 e: 0 failed; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR Terminating event processing loop due to errors; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:2446,ERROR,ERROR,2446,https://root.cern,https://github.com/root-project/root/issues/16826,5,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3697:58,error,error,58,https://root.cern,https://github.com/root-project/root/pull/3697,1,['error'],['error']
Availability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296:146,down,downstream,146,https://root.cern,https://github.com/root-project/root/pull/16296,1,['down'],['downstream']
Availability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:146,down,downstream,146,https://root.cern,https://github.com/root-project/root/pull/16814,1,['down'],['downstream']
Availability,"[DF] Add """" around unknown column names in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11772:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/11772,1,['error'],['error']
Availability,[DF] Add proper error handling to TTreeProcessorMT::GetFriendEntries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9167:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/9167,1,['error'],['error']
Availability,[DF] Better error message for Vary+Fill+no Reset method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10549:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/10549,1,['error'],['error']
Availability,[DF] Better error message in case of empty input TTree for Snapshot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6603:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/6603,1,['error'],['error']
Availability,[DF] Compilation failure when a mutable lambda is passed to Foreach,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8317:17,failure,failure,17,https://root.cern,https://github.com/root-project/root/issues/8317,1,['failure'],['failure']
Availability,[DF] Error out when TTreeIndex is used in distributed mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12256:5,Error,Error,5,https://root.cern,https://github.com/root-project/root/pull/12256,1,['Error'],['Error']
Availability,[DF] Fix 32bit failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2103:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/pull/2103,2,['failure'],['failures']
Availability,"[DF] Fix ROOT-9456, ""[Jenkins][DF] Sporadic failures in test_snapshotNFiles""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2227:44,failure,failures,44,https://root.cern,https://github.com/root-project/root/pull/2227,1,['failure'],['failures']
Availability,"[DF] Fix compilation error on mac1012, XCode9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3098:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/3098,1,['error'],['error']
Availability,[DF] Fix datasource_more test failures on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8279:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/8279,1,['failure'],['failures']
Availability,[DF] Fix memleaks of dataframe nodes kept alive for jitted code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488:42,alive,alive,42,https://root.cern,https://github.com/root-project/root/pull/5488,1,['alive'],['alive']
Availability,"[DF] Fix wrong downcast in {RRange,RFilter}::GetVariedFilter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10544:15,down,downcast,15,https://root.cern,https://github.com/root-project/root/pull/10544,1,['down'],['downcast']
Availability,[DF] Keep objects used by jitted code alive until jitting time,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5381:38,alive,alive,38,https://root.cern,https://github.com/root-project/root/pull/5381,1,['alive'],['alive']
Availability,[DF] Provide a more useful error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9858:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/9858,1,['error'],['error']
Availability,[DF] Reduce precision errors for `Mean` and `StdDev`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7395:22,error,errors,22,https://root.cern,https://github.com/root-project/root/issues/7395,1,['error'],['errors']
Availability,[DF] Remove obsolete part from error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2253:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/2253,2,['error'],['error']
Availability,[DF] Remove redundant call to TTreeReaderArray::GetSize,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8592:12,redundant,redundant,12,https://root.cern,https://github.com/root-project/root/pull/8592,1,['redundant'],['redundant']
Availability,[DF] Remove redundant calls to RDefine::InitSlot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10812:12,redundant,redundant,12,https://root.cern,https://github.com/root-project/root/pull/10812,1,['redundant'],['redundant']
Availability,[DF] Spurious errors in distributed mode with RDataFrame(TTree &) constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:14,error,errors,14,https://root.cern,https://github.com/root-project/root/issues/7788,1,['error'],['errors']
Availability,[DF] Throw instead of logging an error if a file or tree is unreadable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5207:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/5207,1,['error'],['error']
Availability,[DF] Try making some RDF error messages more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5861:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/5861,1,['error'],['error']
Availability,[DF] Use TLeaf::GetFullName in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7931:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/7931,1,['error'],['error']
Availability,[DF] Use human readable type names in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2144:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/2144,2,['error'],['error']
Availability,[DF] User-friendly error in case of Fill signature mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/9895,1,['error'],['error']
Availability,[DF][NFC] Fix copy-paste error in naming a Kahan action,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10119:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/10119,1,['error'],['error']
Availability,[DF][NFC] Fix error in user guide image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6032:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/6032,2,['error'],['error']
Availability,[DF][ROOT-9463] Avoid redundant results in GetColumnNames,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443:22,redundant,redundant,22,https://root.cern,https://github.com/root-project/root/pull/2443,1,['redundant'],['redundant']
Availability,[DF][ROOT-9931] Properly check available columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3363:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/3363,1,['avail'],['available']
Availability,[DO NOT MERGE] Test windows failure in datasource root test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11326:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/pull/11326,1,['failure'],['failure']
Availability,[DO NOT MERGE] Trigger CI failure for 13787,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13791:26,failure,failure,26,https://root.cern,https://github.com/root-project/root/pull/13791,1,['failure'],['failure']
Availability,[Doc] Resolving grammatical errors and spellings in user-guides,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3816:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/3816,2,['error'],['errors']
Availability,[Draft] Debug test error in TError patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5803:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/5803,1,['error'],['error']
Availability,"[EDIT]: 2017-07-20 dropped commit (6953483). See the commit messages for detailed descriptions of the changes. In essence, when comparing some data with the KolmogorovTest an infinite loop was triggered. (bba95dd) We want to get an approximate solution to the test despite there being some bins with neg. content; (06024c8) To prevent the infinite loop in other cases, calling FillRandom with a histogram with negative content is now an error.; (6953483) The caching inside GetRandom can violate an invariant of the function. (Always return NaN when there is a bin with neg. content in the source histogram). [EDIT] Removed after discussion with Lorenzo. The recomputation of the integral here was deemed too expensive as the function is intended to be called in tight loops. Since these changes might have far reaching effects I am up for discussion whether any commits should be dropped. A reproducer in can be found [here](https://gist.github.com/ashlaban/05552ab5f5a7aa05e9c9b73229b2dba4).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705:437,error,error,437,https://root.cern,https://github.com/root-project/root/pull/705,1,['error'],['error']
Availability,[Eve-7] Fix compilation error using gcc8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9048:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/9048,1,['error'],['error']
Availability,[Exp PyROOT] Prevent error at teardown of RooPlot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3517:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/3517,1,['error'],['error']
Availability,[Exp PyROOT] Raise detailed error when Python version is different fr…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5676:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/5676,2,['error'],['error']
Availability,[For testing - DO NOT MERGE] Do not draw error bars when they are smaller than the marker.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16383:41,error,error,41,https://root.cern,https://github.com/root-project/root/pull/16383,1,['error'],['error']
Availability,[FreeBSD] cling cmake error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865:22,error,error,22,https://root.cern,https://github.com/root-project/root/issues/13865,1,['error'],['error']
Availability,[FreeBSD] davix build failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14697:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/issues/14697,1,['failure'],['failure']
Availability,[FreeBSD] recent master build failure (clad),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:30,failure,failure,30,https://root.cern,https://github.com/root-project/root/issues/14492,1,['failure'],['failure']
Availability,[GSOC][TMVA][SOFIE] Error function implemented successfully with the corresponding unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13104:20,Error,Error,20,https://root.cern,https://github.com/root-project/root/pull/13104,1,['Error'],['Error']
Availability,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/10435,1,['error'],['error']
Availability,[GUI] Silence TGFileDialog error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/14865,1,['error'],['error']
Availability,[IMT] Remove redundant call to EnableImplicitMT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5305:13,redundant,redundant,13,https://root.cern,https://github.com/root-project/root/pull/5305,1,['redundant'],['redundant']
Availability,[IO] Improve error message when no TFile::Open for remote files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11719:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/11719,1,['error'],['error']
Availability,[MATHCORE] Fix template specializations (fix compilation errors),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2690:57,error,errors,57,https://root.cern,https://github.com/root-project/root/pull/2690,1,['error'],['errors']
Availability,[MSVC] ROOT builds under msvc option /permissive- with error C4576,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13421:55,error,error,55,https://root.cern,https://github.com/root-project/root/issues/13421,1,['error'],['error']
Availability,"[MSVC] ROOT_x86 failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:45,error,error,45,https://root.cern,https://github.com/root-project/root/issues/15336,1,['error'],['error']
Availability,"[MSVC] Root is failed with error G694476FC: static_assert failed ""Unexpected size""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/15321,1,['error'],['error']
Availability,[Math] Make tolerance less strict on matrix inversion tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521:12,toler,tolerance,12,https://root.cern,https://github.com/root-project/root/pull/521,1,['toler'],['tolerance']
Availability,[Minuit2] Reduce boilerplate code by removing redundant overloads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16443:46,redundant,redundant,46,https://root.cern,https://github.com/root-project/root/pull/16443,1,['redundant'],['redundant']
Availability,[NFC] Add missing word in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5153:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/5153,1,['error'],['error']
Availability,[NFC] Clarification of error message in case of root7 option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3678:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/3678,1,['error'],['error']
Availability,[NFC][DF] Fix error message in Vary,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10619:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/10619,1,['error'],['error']
Availability,[PyROOT] Automatic downcasting of smart pointers to actual type,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16210:19,down,downcasting,19,https://root.cern,https://github.com/root-project/root/issues/16210,1,['down'],['downcasting']
Availability,[PyROOT] Error when copying a tuple into a specific position of a vector of tuples in PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8875:9,Error,Error,9,https://root.cern,https://github.com/root-project/root/issues/8875,1,['Error'],['Error']
Availability,[PyROOT] Error when looking for function template overload,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10224:9,Error,Error,9,https://root.cern,https://github.com/root-project/root/issues/10224,1,['Error'],['Error']
Availability,[PyROOT] Fix distributed RDataFrame tests due to error serialization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:49,error,error,49,https://root.cern,https://github.com/root-project/root/pull/13926,1,['error'],['error']
Availability,[PyROOT] Improve error handling for AsNumpy with unreadable objects,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/16281,1,['error'],['error']
Availability,[PyROOT] Print meaningful error message when user pythonizor fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9729:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/9729,1,['error'],['error']
Availability,[PyROOT] Produce a more meaningful error message in addressof,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9075:35,error,error,35,https://root.cern,https://github.com/root-project/root/pull/9075,1,['error'],['error']
Availability,[PyROOT] Provide an explanatory error message when pickling cross-inh…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/8476,1,['error'],['error']
Availability,[PyROOT] error handling with cppyy and overloading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9909:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/9909,1,['error'],['error']
Availability,[RF] Add recovery from invalid parameters for BatchMode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7266:9,recover,recovery,9,https://root.cern,https://github.com/root-project/root/pull/7266,1,['recover'],['recovery']
Availability,[RF] Add warnings for RooDataSet with weight errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4178:45,error,errors,45,https://root.cern,https://github.com/root-project/root/pull/4178,1,['error'],['errors']
Availability,[RF] AddressSanitizer failures in two RooFit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/issues/11221,1,['failure'],['failures']
Availability,[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8946:53,error,error,53,https://root.cern,https://github.com/root-project/root/issues/8946,1,['error'],['error']
Availability,[RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10465:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/10465,1,['error'],['errors']
Availability,[RF] Avoid overhead of tracking evaluation error messages when not needed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12328:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/12328,1,['error'],['error']
Availability,[RF] Avoid redundant copying of model in RooAbsL constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12880:11,redundant,redundant,11,https://root.cern,https://github.com/root-project/root/pull/12880,1,['redundant'],['redundant']
Availability,"[RF] Consistently do bin width correction when making RooHist from TH1. The RooPlot constructor from TH1 had an option to disable the bin width; correction, but this argument was not even used when the RooHist was; created with Poisson errors, which is the default case. The Bin width; correction was always done in this case, no matter what was the value of; `correctForBinWith`. However, when SumW2 errors are used, the `correctForBinWith` parameter; was actually considered! This caused inconsitent behavior, because when; plotting a `RooDataHist` the `correctForBinWith` parameter is hardcoded; to `false, meaning the bin width correction is done for Poisson errors; but not for SumW2 errors. This commit fixes this behavior by following the precedent set by the; more common Poisson error: the `correctForBinWith` parameter is; consistently ignored, and an exception is thrown when it's false. Consequently, the `correctForBinWith` parameter is also not hardcoded to; `false` in `RooDataHist::plotOn` anymore. The correct way to disable the bin width correction is to enable the; interpretation as a density when importing a TH1 to a RooDataHist. This commit fixes a bug reported on the forum.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10070:236,error,errors,236,https://root.cern,https://github.com/root-project/root/pull/10070,5,['error'],"['error', 'errors']"
Availability,[RF] Correctly restore the error definition in the Minimizer class after contour(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10651:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/10651,1,['error'],['error']
Availability,"[RF] Documentation updates, improvement of warning and error messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:55,error,error,55,https://root.cern,https://github.com/root-project/root/pull/5315,1,['error'],['error']
Availability,[RF] Don't throw an error if `roobatchcompute` lib was already loaded,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12696:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/12696,1,['error'],['error']
Availability,[RF] Don't use redundant `RooPlot::findObject()` in RooFit tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11555:15,redundant,redundant,15,https://root.cern,https://github.com/root-project/root/pull/11555,1,['redundant'],['redundant']
Availability,[RF] Error out for non-extendible PDFs in no-coef RooAddPdf constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11323:5,Error,Error,5,https://root.cern,https://github.com/root-project/root/pull/11323,1,['Error'],['Error']
Availability,[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11768:5,Error,Error,5,https://root.cern,https://github.com/root-project/root/issues/11768,1,['Error'],['Error']
Availability,[RF] Error out when setting out-of-range variable value instead of clipping,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10470:5,Error,Error,5,https://root.cern,https://github.com/root-project/root/pull/10470,1,['Error'],['Error']
Availability,[RF] Fitting unweighted dataset with error corrections gives inconsistent result,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11112:37,error,error,37,https://root.cern,https://github.com/root-project/root/issues/11112,1,['error'],['error']
Availability,[RF] Fix ASAN build test failures in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11192:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/11192,1,['failure'],['failures']
Availability,"[RF] Fix `xroofit` bugs in breakdown,impact,and error on histograms of RooRealSumPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13784:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/13784,1,['error'],['error']
Availability,[RF] Fix compilation error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7636:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/7636,1,['error'],['error']
Availability,[RF] Fix copy-paste error in RooAddModel constructor and modernization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8434:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/8434,1,['error'],['error']
Availability,[RF] Fix copy-paste error in `RooDataSet::binnedClone`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/11507,1,['error'],['error']
Availability,[RF] Fix copy-paste error in `rf205` tutorial and related stressRooFit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/11985,1,['error'],['error']
Availability,[RF] Fix error in RooProdPdf that comes from wrong `addOwned()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12660:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/12660,1,['error'],['error']
Availability,[RF] Fix off-by-one error in HistoToWorkspaceFactoryFast,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12707:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/12707,1,['error'],['error']
Availability,[RF] Fix remaining RooFit ASAN failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11228:31,failure,failures,31,https://root.cern,https://github.com/root-project/root/pull/11228,1,['failure'],['failures']
Availability,[RF] Fix segmentation fault in BatchMode with multithreading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754:22,fault,fault,22,https://root.cern,https://github.com/root-project/root/pull/10754,1,['fault'],['fault']
Availability,[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12459:46,error,errors,46,https://root.cern,https://github.com/root-project/root/pull/12459,1,['error'],['errors']
Availability,[RF] Fix std::regex failures on Mac10.15.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6508:20,failure,failures,20,https://root.cern,https://github.com/root-project/root/pull/6508,2,['failure'],['failures']
Availability,[RF] Fix stressRooStats failure on 32 bit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4212:24,failure,failure,24,https://root.cern,https://github.com/root-project/root/pull/4212,2,['failure'],['failure']
Availability,[RF] Fix testHistFactory compilation error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9640:37,error,error,37,https://root.cern,https://github.com/root-project/root/pull/9640,1,['error'],['error']
Availability,[RF] Improve recovery from invalid function values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401:13,recover,recovery,13,https://root.cern,https://github.com/root-project/root/pull/6401,1,['recover'],['recovery']
Availability,[RF] Improve recovery from invalid function values in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6383:13,recover,recovery,13,https://root.cern,https://github.com/root-project/root/pull/6383,1,['recover'],['recovery']
Availability,[RF] Improve sum-of-weight-squares handling with RooDataSet and bugfix for asymptotic error correction,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11282:86,error,error,86,https://root.cern,https://github.com/root-project/root/pull/11282,1,['error'],['error']
Availability,[RF] Make RooAbsTestStatistic error out if multiple ranges are passed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7827:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/7827,1,['error'],['error']
Availability,"[RF] Modernize RooSimPdfBuilder, fix a logic error and implement test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7489:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/7489,1,['error'],['error']
Availability,[RF] MultiProcess error handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/15797,1,['error'],['error']
Availability,[RF] New mechanism for logging and throwing errors in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11428:44,error,errors,44,https://root.cern,https://github.com/root-project/root/pull/11428,1,['error'],['errors']
Availability,[RF] Off-by-one error in Roofit/Histfactory/HistoToWorkspaceFactoryFast,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12704:16,error,error,16,https://root.cern,https://github.com/root-project/root/issues/12704,1,['error'],['error']
Availability,[RF] Prevent intermittent failures in testActionHelpers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7583:26,failure,failures,26,https://root.cern,https://github.com/root-project/root/pull/7583,1,['failure'],['failures']
Availability,[RF] Remove FillColor command for single curves in error band plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11204:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/11204,1,['error'],['error']
Availability,[RF] Remove entry masking feature from RooDataHist,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9168:18,mask,masking,18,https://root.cern,https://github.com/root-project/root/pull/9168,1,['mask'],['masking']
Availability,[RF] Remove error in `RooWorkspace::getSnapshot()` if no snapshot found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11584:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/11584,1,['error'],['error']
Availability,[RF] Remove redundant configuration members of `RooAbsMinimizerFcn`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:12,redundant,redundant,12,https://root.cern,https://github.com/root-project/root/pull/11695,1,['redundant'],['redundant']
Availability,[RF] Remove redundant sanity check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8432:12,redundant,redundant,12,https://root.cern,https://github.com/root-project/root/pull/8432,1,['redundant'],['redundant']
Availability,[RF] RooAbsReal::getPropagatedError: fix for case of negative parameter with zero error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12838:82,error,error,82,https://root.cern,https://github.com/root-project/root/pull/12838,1,['error'],['error']
Availability,[RF] RooAddPdf still emits unexpected errors about missing normalization sets,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11476:38,error,errors,38,https://root.cern,https://github.com/root-project/root/issues/11476,1,['error'],['errors']
Availability,[RF] RooFit Python Tutorial Errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973:28,Error,Errors,28,https://root.cern,https://github.com/root-project/root/issues/8973,1,['Error'],['Errors']
Availability,[RF] RooFit should give an error message when using different variables with same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417:27,error,error,27,https://root.cern,https://github.com/root-project/root/issues/7417,1,['error'],['error']
Availability,[RF] RooProdPdf test failure on s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:21,failure,failure,21,https://root.cern,https://github.com/root-project/root/issues/12430,1,['failure'],['failure']
Availability,[RF] Segmentation fault in ROOT 6.30 workspace creation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:18,fault,fault,18,https://root.cern,https://github.com/root-project/root/issues/14225,1,['fault'],['fault']
Availability,[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:18,fault,fault,18,https://root.cern,https://github.com/root-project/root/issues/8474,1,['fault'],['fault']
Availability,[RF] Set reasonable pre-fit errors for gammas in HistFactory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3912:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/3912,1,['error'],['errors']
Availability,[RF] String parse error in RooSimPdfBuilder.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7481:18,error,error,18,https://root.cern,https://github.com/root-project/root/issues/7481,1,['error'],['error']
Availability,[RF] Support pdf normalization with error logging in RooBatchCompute,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12677:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/12677,1,['error'],['error']
Availability,[RF] Test failure on i686 only with numpy 1.24.1 (pyunittests-pyroot-roofit-roodataset-numpy),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/issues/12162,1,['failure'],['failure']
Availability,[RF] The testRooAbsL test compares two doubles and fails due to rounding errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389:73,error,errors,73,https://root.cern,https://github.com/root-project/root/pull/12389,1,['error'],['errors']
Availability,[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12453:12,error,errors,12,https://root.cern,https://github.com/root-project/root/issues/12453,2,['error'],['errors']
Availability,[RF][HS3] improved error reporting for HistFactory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13098:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/13098,1,['error'],['error']
Availability,[RF][PyROOT] Pythonize RooFit::DataError to avoid Python 3 syntax errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9721:66,error,errors,66,https://root.cern,https://github.com/root-project/root/pull/9721,1,['error'],['errors']
Availability,"[ROOT-10518] Due to overwriting a function-local static, range strings; for multi-range fits would be lost. The full range was fitted multiple; times. This results in exactly the same coefficients as when fitting the; full range, but in different errors, as the model is fitted repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4885:247,error,errors,247,https://root.cern,https://github.com/root-project/root/pull/4885,1,['error'],['errors']
Availability,"[ROOT-10518] Due to overwriting a function-local static, range strings; for multi-range fits would be lost. The full range was fitted multiple; times. This results in exactly the same coefficients as when fitting the; full range, but in different errors, as the model is fitted repeatedly. (cherry picked from commit 4f53b0fd7e01a4ba40656940359eaa5567072d75)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4886:247,error,errors,247,https://root.cern,https://github.com/root-project/root/pull/4886,1,['error'],['errors']
Availability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:628,error,error,628,https://root.cern,https://github.com/root-project/root/pull/5062,1,['error'],['error']
Availability,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466:505,down,down,505,https://root.cern,https://github.com/root-project/root/pull/5466,1,['down'],['down']
Availability,[ROOT-10797] Seg fault and misleading error messages if system header files are missing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:17,fault,fault,17,https://root.cern,https://github.com/root-project/root/issues/14571,2,"['error', 'fault']","['error', 'fault']"
Availability,"[ROOT-10813] Markers with ""open shape"" styles cover error bars.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14549:52,error,error,52,https://root.cern,https://github.com/root-project/root/issues/14549,1,['error'],['error']
Availability,[ROOT-5236]; The RooProdPdf was leaking memory when caching values.; HistoToWorkspaceFactoryFast was keeping RooArgSets alive (hence never freeing memory arenas).; AsymptoticCalculator was leaking datasets.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3508:120,alive,alive,120,https://root.cern,https://github.com/root-project/root/pull/3508,1,['alive'],['alive']
Availability,[ROOT-5236]; The RooProdPdf was leaking memory when caching values.; HistoToWorkspaceFactoryFast was keeping RooArgSets alive (hence never freeing memory arenas).; AsymptoticCalculator was leaking datasets. (cherry picked from commit 88369955a919f6457a89b28f440599da63bd2f91),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509:120,alive,alive,120,https://root.cern,https://github.com/root-project/root/pull/3509,1,['alive'],['alive']
Availability,[ROOT-8348] Segmentation Fault in TMVA::DecisionTreeNode::Print,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14569:25,Fault,Fault,25,https://root.cern,https://github.com/root-project/root/issues/14569,1,['Fault'],['Fault']
Availability,[RS] Correct errors of asimov dataset.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5287:13,error,errors,13,https://root.cern,https://github.com/root-project/root/pull/5287,1,['error'],['errors']
Availability,[RS] Make HypoTestInverterPlot more robust against failed fits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6158:36,robust,robust,36,https://root.cern,https://github.com/root-project/root/pull/6158,1,['robust'],['robust']
Availability,[RVec] Improve error message in case of out-of-bounds access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11771:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/11771,1,['error'],['error']
Availability,[RooFit] - Set initial errors on some parameters that are missing their initial errors (norm and gamma factors),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16651:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/16651,2,['error'],['errors']
Availability,[TBranch][NFC] More expressive error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3167:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/3167,1,['error'],['error']
Availability,[TDF] Fix build failure of roottest/dataframe/test_misc.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/356:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/pull/356,1,['failure'],['failure']
Availability,[TDF] Fix compilation error when reading 66+ columns in the same node,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/740:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/740,1,['error'],['error']
Availability,[TDF] Make an error message slightly more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/984:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/984,1,['error'],['error']
Availability,[TDF] Make error message more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1009:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/1009,1,['error'],['error']
Availability,"[TMVA] Clean-up cross-validation, add error-handling and example",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/281:38,error,error-handling,38,https://root.cern,https://github.com/root-project/root/pull/281,1,['error'],['error-handling']
Availability,[TMVA] Require torch<2.5 otherwise on ARM an error is prompted,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16718:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/16718,1,['error'],['error']
Availability,[TNDArrayT] Backward incompatibility: Error reading from ROOT Files created with earlier versions - Streamer bug,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382:38,Error,Error,38,https://root.cern,https://github.com/root-project/root/issues/10382,1,['Error'],['Error']
Availability,"[TTreeProcMT] Fix missing space, add commas in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5263:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/5263,1,['error'],['error']
Availability,[TTreeReader] Error out if TTreeReaderValue is reading an array,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1842:14,Error,Error,14,https://root.cern,https://github.com/root-project/root/pull/1842,1,['Error'],['Error']
Availability,[TTreeReader] Formatting and better error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6326:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/6326,1,['error'],['error']
Availability,"[TTree] Print(""clusters"") off-by-one error in case of partial clusters",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9319:37,error,error,37,https://root.cern,https://github.com/root-project/root/issues/9319,1,['error'],['error']
Availability,"[This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp; auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());; const RFieldBase *rvecf = r->GetModel()->GetField(""v"");; // ERROR: GenerateValue is non-const, rvecf is a const pointer; auto rvecv = rvecf->GenerateValue();; ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();; ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408:439,ERROR,ERROR,439,https://root.cern,https://github.com/root-project/root/issues/10408,1,['ERROR'],['ERROR']
Availability,"[This recent forum post](https://root-forum.cern.ch/t/error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/39322) brought to my attention that ROOT-10178 can result in _silent_ reads of wrong data, so I think it might be good to backport the fix to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5590:54,error,error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names,54,https://root.cern,https://github.com/root-project/root/pull/5590,1,['error'],['error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names']
Availability,[Tree/TreeReader] Prompt errors in ill defined cases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3460:25,error,errors,25,https://root.cern,https://github.com/root-project/root/pull/3460,1,['error'],['errors']
Availability,[TreePlayer][ROOT-9713] Remove printing of error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2811:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/2811,1,['error'],['error']
Availability,[TreeReader] [ROOT-9743] Always set dictionary if available in CreateProxy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2879:50,avail,available,50,https://root.cern,https://github.com/root-project/root/pull/2879,1,['avail'],['available']
Availability,[Tree] Mention branch name in TBranchElement error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5212:45,error,error,45,https://root.cern,https://github.com/root-project/root/pull/5212,1,['error'],['error']
Availability,[Tree] Print Error message if a friend has kEntriesReshuffled set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5182:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/5182,1,['Error'],['Error']
Availability,[Tutorials] CsvDS: download csv in the macro and not in CMake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3638:19,down,download,19,https://root.cern,https://github.com/root-project/root/pull/3638,1,['down'],['download']
Availability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:86,error,error,86,https://root.cern,https://github.com/root-project/root/issues/9335,7,['error'],"['error', 'errors']"
Availability,[VecOps] Fix compilation errors in case of RVec of move-only types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11710:25,error,errors,25,https://root.cern,https://github.com/root-project/root/pull/11710,1,['error'],['errors']
Availability,[VecOps] Improve wording of an error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13120:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/13120,1,['error'],['error']
Availability,[VecOps] Masking RVec<T> is broken for non-trivially-constructible Ts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12398:9,Mask,Masking,9,https://root.cern,https://github.com/root-project/root/issues/12398,1,['Mask'],['Masking']
Availability,[WIP] Improved error handling for template instantiation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/12449,1,['error'],['error']
Availability,[WIP] Slim down man,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1544:11,down,down,11,https://root.cern,https://github.com/root-project/root/pull/1544,1,['down'],['down']
Availability,[Web Graphics] Two failures with one simple PyROOT plotter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/issues/15474,2,['failure'],['failures']
Availability,[Windows] Fix fatal error C1001: Internal compiler error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8327:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/8327,2,['error'],['error']
Availability,[bindings] doxygen errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9648:19,error,errors,19,https://root.cern,https://github.com/root-project/root/pull/9648,1,['error'],['errors']
Availability,[bug][GUI]Protection against null pointer der. and better error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:58,error,error,58,https://root.cern,https://github.com/root-project/root/pull/6714,1,['error'],['error']
Availability,[build] Format error as string in dependency_versions.py test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13617:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/13617,1,['error'],['error']
Availability,[builtins] Update Davix to latest available version: 0.7.6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7331:34,avail,available,34,https://root.cern,https://github.com/root-project/root/pull/7331,1,['avail'],['available']
Availability,[came][win32] Fix error with VS v17.10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15855:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/15855,1,['error'],['error']
Availability,[ci] A failing test is an error: [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12812:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/12812,1,['error'],['error']
Availability,[ci] Add debug information for credential failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14657:42,failure,failures,42,https://root.cern,https://github.com/root-project/root/pull/14657,1,['failure'],['failures']
Availability,[ci] Report test failures also for failed tests: [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12823:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/12823,1,['failure'],['failures']
Availability,"[cling,tcling,v6-24] Allow reporting cling diagnostics via the ROOT error handler",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10123:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/10123,1,['error'],['error']
Availability,"[cling,tcling] Allow reporting cling diagnostics via the ROOT error handler",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8737:62,error,error,62,https://root.cern,https://github.com/root-project/root/pull/8737,1,['error'],['error']
Availability,[cling-cpt] Added extra spacing between functions to get rid of E302 error code. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10976:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/10976,1,['error'],['error']
Availability,[cling-cpt] Added extra whitespace around operators to get rid of E225 error. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10977:71,error,error,71,https://root.cern,https://github.com/root-project/root/pull/10977,1,['error'],['error']
Availability,[cling-cpt] Added indentation for visual indent to get rid of E128 error code. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10979:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/10979,1,['error'],['error']
Availability,[cling-cpt] Fixed invalid escape characters to get rid of W605 error. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10978:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/10978,1,['error'],['error']
Availability,[cling-cpt] Fixed llvm_flags undefined error that occurred when --last-stable option used [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10745:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/10745,1,['error'],['error']
Availability,[cling-cpt] More splitting lines for getting rid of E501 error cont. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11011:57,error,error,57,https://root.cern,https://github.com/root-project/root/pull/11011,1,['error'],['error']
Availability,[cling-cpt] Split lines more to get rid of E501 error [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11012:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/11012,1,['error'],['error']
Availability,[cling-cpt] Split long lines to get rid of E501 error [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11010:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/11010,1,['error'],['error']
Availability,[cling] Also capture SFINAE error counts (ROOT-10754),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5609:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/5609,1,['error'],['error']
Availability,[cling] Fix a number of failures in cling tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:24,failure,failures,24,https://root.cern,https://github.com/root-project/root/pull/12855,1,['failure'],['failures']
Availability,[cling] Fix remaining test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12900:27,failure,failures,27,https://root.cern,https://github.com/root-project/root/pull/12900,1,['failure'],['failures']
Availability,[cling] Fix valgrind error in CIFactory/AddRuntimeIncludePaths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1919:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/1919,1,['error'],['error']
Availability,[cling] Flag an error-Transaction as kRolledBack (ROOT-10798):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5732:16,error,error-Transaction,16,https://root.cern,https://github.com/root-project/root/pull/5732,1,['error'],['error-Transaction']
Availability,[cling] Resolve some of the test failures on osx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13296:33,failure,failures,33,https://root.cern,https://github.com/root-project/root/pull/13296,1,['failure'],['failures']
Availability,[cling] Warn on redundant parentheses in declarators whose parsing might not match the user intent,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555:16,redundant,redundant,16,https://root.cern,https://github.com/root-project/root/pull/8555,1,['redundant'],['redundant']
Availability,[cling] `error: function definition is not allowed here` when trying to overload `operator<=`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9449:9,error,error,9,https://root.cern,https://github.com/root-project/root/issues/9449,1,['error'],['error']
Availability,"[cling][DF] `auto firstTwo = Take(v, 2)` causes error",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:48,error,error,48,https://root.cern,https://github.com/root-project/root/issues/9261,1,['error'],['error']
Availability,[cling][v6-28] Fix a number of failures in cling tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:31,failure,failures,31,https://root.cern,https://github.com/root-project/root/pull/12856,1,['failure'],['failures']
Availability,[cling][v6-28] Fix remaining test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12902:34,failure,failures,34,https://root.cern,https://github.com/root-project/root/pull/12902,1,['failure'],['failures']
Availability,[cmake] Fix cmake errors with old cmake versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5731:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/5731,1,['error'],['errors']
Availability,[cmake] Pass CMAKE_CXX_STANDARD down to llvm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10765:32,down,down,32,https://root.cern,https://github.com/root-project/root/pull/10765,1,['down'],['down']
Availability,[cmake] Reduce the redundant dependencies to onepcm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188:19,redundant,redundant,19,https://root.cern,https://github.com/root-project/root/pull/1188,1,['redundant'],['redundant']
Availability,[cmake] Remove faulty GTEST_INCLUDE_DIRS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13375:15,fault,faulty,15,https://root.cern,https://github.com/root-project/root/pull/13375,1,['fault'],['faulty']
Availability,[cmake] Tone down macOS ranlib/CMake FATAL_ERROR to WARNING:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7734:13,down,down,13,https://root.cern,https://github.com/root-project/root/pull/7734,1,['down'],['down']
Availability,[cmake] make FindMySQL.cmake more tolerant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13946:34,toler,tolerant,34,https://root.cern,https://github.com/root-project/root/pull/13946,1,['toler'],['tolerant']
Availability,[cmake][clad] Fix potential Clad build error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16239:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/16239,1,['error'],['error']
Availability,[cmake][webgui] Decrease webgui-ping timeout,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16710:32,ping,ping,32,https://root.cern,https://github.com/root-project/root/pull/16710,1,['ping'],['ping']
Availability,[cmake][win] Fix potential build error of cfitsio,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16253:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/16253,1,['error'],['error']
Availability,"[core,io] Prevent out-of-bond writing in TString and increase severity of MaxSize-related raised errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14758:97,error,errors,97,https://root.cern,https://github.com/root-project/root/pull/14758,1,['error'],['errors']
Availability,"[core/winnt/src/TWinNTSystem.cxx:996]: (error) Invalid number of character '(' when these macros are defined: 'ROOTPREFIX'.; [html/src/TDocDirective.cxx:316]: (error) Invalid number of character '{' when these macros are defined: 'R__BEPAEPSTLICHERALSDERPAPST'.; [math/mathcore/src/Delaunay2D.cxx:30]: (error) Invalid number of character '{' when these macros are defined: 'HAS_CGAL'. [graf2d/qt/src/TGQt.cxx:2817]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2818]: (error) Array 'shape[15]' accessed at index 16, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2841]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [net/http/civetweb/handle_form.inl:627]: (style) Array index 'd' is used before limits check. [roofit/roostats/src/MetropolisHastings.cxx:153]: (style) Condition 'i<1000' is always true. [graf2d/qt/src/TQtClientGuard.cxx:289]: (warning) Assert statement modifies 'thisPix'. [roofit/roofitcore/src/BidirMMapPipe.cxx:906]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:972]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1394]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1429]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception. [graf3d/eve/src/TEveElement.cxx:1745]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:76]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:97]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooClassFactory.cxx:786]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooFactoryWSTool.cxx:413]: (style) Exception should be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/1435,6,['error'],['error']
Availability,[core] Do not terminate on syntax error in TCling::Calc (ROOT-9497).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6827:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/6827,1,['error'],['error']
Availability,[core] Link clad to clang only if target available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15678:41,avail,available,41,https://root.cern,https://github.com/root-project/root/pull/15678,1,['avail'],['available']
Availability,[core] Remove redundant forward decl of std.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5300:14,redundant,redundant,14,https://root.cern,https://github.com/root-project/root/pull/5300,1,['redundant'],['redundant']
Availability,[cxxmodules] Do not emit relocation error when -fno-validate-pch is set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/2407,1,['error'],['error']
Availability,[cxxmodules] Do not trigger redundant deserializations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4409:28,redundant,redundant,28,https://root.cern,https://github.com/root-project/root/pull/4409,1,['redundant'],['redundant']
Availability,[cxxmodules] Error when building ROOT dict implicitly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1460:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/1460,1,['Error'],['Error']
Availability,[cxxmodules] Fix a compile error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1985:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/1985,1,['error'],['error']
Availability,[cxxmodules] Fix assert failure when printing fwd delcs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1087:24,failure,failure,24,https://root.cern,https://github.com/root-project/root/pull/1087,1,['failure'],['failure']
Availability,[cxxmodules] Fix assert failure with duplicate decls.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1236:24,failure,failure,24,https://root.cern,https://github.com/root-project/root/pull/1236,1,['failure'],['failure']
Availability,[cxxmodules] Fix recent failures due to VecOps namespace lookups.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1947:24,failure,failures,24,https://root.cern,https://github.com/root-project/root/pull/1947,1,['failure'],['failures']
Availability,[cxxmodules][wip] Add SetupModules call to load all available PCMs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1147:52,avail,available,52,https://root.cern,https://github.com/root-project/root/pull/1147,1,['avail'],['available']
Availability,[davix] Be helpful and state file name in open error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3373:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/3373,1,['error'],['error']
Availability,"[desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help',",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:2525,Error,Error,2525,https://root.cern,https://github.com/root-project/root/issues/8092,1,['Error'],['Error']
Availability,[df] Delete allocated node before throwing error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/15477,1,['error'],['error']
Availability,[df] Make RInterfaceBase::GetNFiles resilient to different TTree conf…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15745:36,resilien,resilient,36,https://root.cern,https://github.com/root-project/root/pull/15745,1,['resilien'],['resilient']
Availability,[do not merge] testing build failures on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14796:29,failure,failures,29,https://root.cern,https://github.com/root-project/root/pull/14796,1,['failure'],['failures']
Availability,[doc] TProfile bin error documentation is not correct,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12592:19,error,error,19,https://root.cern,https://github.com/root-project/root/issues/12592,1,['error'],['error']
Availability,[eve7] Include json_fwd.hpp if available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/11205,1,['avail'],['available']
Availability,[eve7] Include json_fwd.hpp if available [v6.26],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11225:31,avail,available,31,https://root.cern,https://github.com/root-project/root/pull/11225,1,['avail'],['available']
Availability,[eve7] repair GL scene update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4631:7,repair,repair,7,https://root.cern,https://github.com/root-project/root/pull/4631,1,['repair'],['repair']
Availability,[eve7] repair logic of mouseup handler [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7330:7,repair,repair,7,https://root.cern,https://github.com/root-project/root/pull/7330,1,['repair'],['repair']
Availability,[forest] fix occasional tutorial failure due to missing symbols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3820:33,failure,failure,33,https://root.cern,https://github.com/root-project/root/pull/3820,1,['failure'],['failure']
Availability,"[graf2d/asimage/src/libAfterImage/afterbase.c:1282]: (style) Array index 'i' is used before limits check; [graf2d/asimage/src/libAfterImage/libungif/gifalloc.c:61]: (error) Memory leak: Object; [graf2d/win32gdk/src/TGWin32.cxx:4540]: (error) Memory leak: GIFarr; [graf3d/eve/src/TEveCalo2DGL.cxx:169]: (error) Memory leak: sliceVal; [graf3d/eve/src/TEveCalo2DGL.cxx:169]: (error) Memory leak: sliceValRef; [graf3d/eve/src/TEveCalo2DGL.cxx:369]: (error) Memory leak: sliceValsUp; [graf3d/eve/src/TEveCalo2DGL.cxx:369]: (error) Memory leak: sliceValsLow; [graf3d/eve/src/TEveCalo2DGL.cxx:369]: (error) Memory leak: sliceValsUpRef; [graf3d/eve/src/TEveCalo2DGL.cxx:369]: (error) Memory leak: sliceValsLowRef; [graf3d/eve/src/TEvePointSet.cxx:354]: (error) Memory leak: subarr. [graf3d/gl/src/gl2ps.cxx:1382] -> [graf3d/gl/src/gl2ps.cxx:1382]: (style) Same expression on both sides of '|'; see http://octave.org/doxygen/3.6/d3/d9c/gl2ps_8c_source.html#1343. [hist/hist/src/TFormula.cxx:1741]: (style) Array index 'i' is used before limits check.; [hist/hist/src/TFormula.cxx:1810]: (style) Array index 'i' is used before limits check.; [hist/hist/src/TGraphSmooth.cxx:173]: (style) Array index 'imin' is used before limits check; [hist/hist/src/TPrincipal.cxx:714]: (error) Memory leak: hX; [hist/hist/src/TPrincipal.cxx:714]: (error) Memory leak: hD; [hist/hist/src/TPrincipal.cxx:714]: (error) Memory leak: hP. [hist/histpainter/src/TGraph2DPainter.cxx:416]: (style) Array index 'js' is used before limits check.; [hist/histpainter/src/TGraph2DPainter.cxx:455]: (style) Array index 'js' is used before limits check.; [interpreter/llvm/src/tools/bugpoint/ToolRunner.cpp:386]: (error) When Pos==CommandLine.size(), CommandLine[Pos] is out of bounds. +Prefer prefix ++/-- operators for non-primitive types",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239:166,error,error,166,https://root.cern,https://github.com/root-project/root/pull/1239,13,['error'],['error']
Availability,[graf2d][TTF] Improve SetTextSize error: show code and values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14603:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/14603,1,['error'],['error']
Availability,[gui] fix compile error in RWebWindowsManager.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16072:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/16072,1,['error'],['error']
Availability,[hist] Fix TH1::KolmogorovTest with option X when one histogram has zero errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13822:73,error,errors,73,https://root.cern,https://github.com/root-project/root/pull/13822,1,['error'],['errors']
Availability,[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14107:23,toler,tolerance,23,https://root.cern,https://github.com/root-project/root/pull/14107,1,['toler'],['tolerance']
Availability,"[hist] TH1::GetCumulative doesn't set the bin error for the generated histogram, but change that of the original hist instead",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11947:46,error,error,46,https://root.cern,https://github.com/root-project/root/issues/11947,1,['error'],['error']
Availability,[hist] TH1::GetCumulative: fix error setting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11948:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/11948,1,['error'],['error']
Availability,[hist] TH1::SaveAs missing default option argument causes compilation errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14863:70,error,errors,70,https://root.cern,https://github.com/root-project/root/issues/14863,1,['error'],['errors']
Availability,[http] fix failure when sending data to websocket in threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4143:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/4143,1,['failure'],['failure']
Availability,"[http] provide MIME type when downloading file, support woff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6922:30,down,downloading,30,https://root.cern,https://github.com/root-project/root/pull/6922,1,['down'],['downloading']
Availability,[io] Add error message before assert (#8387).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8461:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/8461,2,['error'],['error']
Availability,[io] Properly handle failures in custom streamers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15640:21,failure,failures,21,https://root.cern,https://github.com/root-project/root/issues/15640,1,['failure'],['failures']
Availability,[json/xml] mask out TObject::kNotDeleted & TObject::kIsOnHeap bits from text I/O,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4182:11,mask,mask,11,https://root.cern,https://github.com/root-project/root/pull/4182,1,['mask'],['mask']
Availability,[json] properly handle error when reading object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5330:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/5330,1,['error'],['error']
Availability,[llvm] Fix compilation errors with -std:c++20 on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/12523,1,['error'],['errors']
Availability,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13646:29,Error,Error,29,https://root.cern,https://github.com/root-project/root/pull/13646,1,['Error'],['Error']
Availability,[math] Minuit2 errors out with `Initial matrix not pos.def.` depending on which histograms were fitted before,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852:15,error,errors,15,https://root.cern,https://github.com/root-project/root/issues/13852,1,['error'],['errors']
Availability,[math] `ROOT::Math::Minimizer` ignores error level if set after the function in the case of analytical gradient,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:39,error,error,39,https://root.cern,https://github.com/root-project/root/issues/12338,1,['error'],['error']
Availability,"[net/monalisa/src/TMonaLisaWriter.cxx:956] -> [net/monalisa/src/TMonaLisaWriter.cxx:957]: (error) Iterator 'iter' used after element has been erased.; [proof/proofd/src/XrdProofdProofServMgr.cxx:4648] -> [proof/proofd/src/XrdProofdProofServMgr.cxx:4646]: (error) Iterator 'iter' used after element has been erased. [math/minuit2/src/Minuit2Minimizer.cxx:669] -> [math/minuit2/src/Minuit2Minimizer.cxx:669]: (style) Same expression on both sides of '||'.; [math/minuit2/src/Minuit2Minimizer.cxx:736] -> [math/minuit2/src/Minuit2Minimizer.cxx:736]: (style) Same expression on both sides of '||'.; [math/minuit2/src/Minuit2Minimizer.cxx:753] -> [math/minuit2/src/Minuit2Minimizer.cxx:753]: (style) Same expression on both sides of '||'. [tree/tree/src/TBasket.cxx:852]: (style) Redundant condition: If 'flag >= 80', the comparison 'flag' is always true.; [misc/table/src/TFileIter.cxx:467] -> [misc/table/src/TFileIter.cxx:468]: (warning) Identical condition 'thisRunNumber<runNumber', second condition is always false. [math/mathcore/src/TMath.cxx:826]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:91,error,error,91,https://root.cern,https://github.com/root-project/root/pull/1343,3,"['Redundant', 'error']","['Redundant', 'error']"
Availability,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8414:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/8414,1,['error'],['error']
Availability,[ntuple] Add iteration over all available columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12893:32,avail,available,32,https://root.cern,https://github.com/root-project/root/pull/12893,1,['avail'],['available']
Availability,[ntuple] Fix error check of ProcessLine,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16463:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/16463,1,['error'],['error']
Availability,[ntuple] Fix linker error in unit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4291:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/4291,1,['error'],['error']
Availability,[ntuple] Fix the `ntuple_show` and `rfield_vector` compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13923:63,error,errors,63,https://root.cern,https://github.com/root-project/root/pull/13923,1,['error'],['errors']
Availability,[ntuple] Improve column casting error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227:32,error,error,32,https://root.cern,https://github.com/root-project/root/pull/8227,1,['error'],['error']
Availability,[ntuple] Improve inspector error for compression setting mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15654:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/15654,1,['error'],['error']
Availability,[ntuple] Make tutorials more robust,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4415:29,robust,robust,29,https://root.cern,https://github.com/root-project/root/pull/4415,1,['robust'],['robust']
Availability,[ntuple] Off-by-one-byte error when deserializing arrays as RVecs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347:25,error,error,25,https://root.cern,https://github.com/root-project/root/issues/6347,1,['error'],['error']
Availability,[ntuple] RNTuple error when serializing TClass typedef members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:17,error,error,17,https://root.cern,https://github.com/root-project/root/issues/7861,1,['error'],['error']
Availability,[ntuple] Store streamer checksum if available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16060:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/16060,1,['avail'],['available']
Availability,[ntuple] TKey with the same name as requested RNTuple causes internal RNTupleReader errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8284:84,error,errors,84,https://root.cern,https://github.com/root-project/root/issues/8284,1,['error'],['errors']
Availability,[ntuple] TObject serialization faulty,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14808:31,fault,faulty,31,https://root.cern,https://github.com/root-project/root/issues/14808,1,['fault'],['faulty']
Availability,[ntuple] improve error message when writing fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15007:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/15007,1,['error'],['error']
Availability,[pyroot][tmva] Fix importing RTensor pythonization when RTensor is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11422:71,avail,available,71,https://root.cern,https://github.com/root-project/root/pull/11422,1,['avail'],['available']
Availability,[qt5web] accept download action,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4131:16,down,download,16,https://root.cern,https://github.com/root-project/root/pull/4131,1,['down'],['download']
Availability,"[rdf,test] Suppress Apple M1 failures due to lack of JIT exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8147:29,failure,failures,29,https://root.cern,https://github.com/root-project/root/pull/8147,1,['failure'],['failures']
Availability,"[rdf,test] Suppress Apple M1 failures due to lack of JIT exceptions. [6.24]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8139:29,failure,failures,29,https://root.cern,https://github.com/root-project/root/pull/8139,1,['failure'],['failures']
Availability,[rint] spell error fix in comments,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2882:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/2882,1,['error'],['error']
Availability,[roofit] Fix compilation error on Win64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9387:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/9387,1,['error'],['error']
Availability,[rootcling] Convert diagnostic to a proper rootcling error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5392:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/5392,1,['error'],['error']
Availability,[rootcling] Drop redundant function parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4545:17,redundant,redundant,17,https://root.cern,https://github.com/root-project/root/pull/4545,1,['redundant'],['redundant']
Availability,[rootcling] Fix typo in error message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5404:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/5404,1,['error'],['error']
Availability,[rootcling] Remove redundant flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4270:19,redundant,redundant,19,https://root.cern,https://github.com/root-project/root/pull/4270,1,['redundant'],['redundant']
Availability,[rootcling] Treat warnings coming from ROOT as errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6095:47,error,errors,47,https://root.cern,https://github.com/root-project/root/pull/6095,1,['error'],['errors']
Availability,[roottest] openSUSE Tumbleweed single test failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:43,failure,failure,43,https://root.cern,https://github.com/root-project/root/issues/8187,1,['failure'],['failure']
Availability,[skip-ci] Fix compilation error of constructors.cxx on Win64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9255:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/9255,1,['error'],['error']
Availability,[skip-ci] Fix unresolved external symbol errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7645:41,error,errors,41,https://root.cern,https://github.com/root-project/root/pull/7645,1,['error'],['errors']
Availability,[skip-ci] Remove link to rawgit as it will shut down,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15225:48,down,down,48,https://root.cern,https://github.com/root-project/root/pull/15225,1,['down'],['down']
Availability,[skip-ci] Xml tutorials generate errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10490:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/10490,1,['error'],['errors']
Availability,[skip-ci] improve error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11235:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/11235,1,['error'],['error']
Availability,[skip-ci]; In notebook this script generates:; ```; Error in <TXMLEngine::ParseFile>: Unexpected end of xml file; ```; This patch deactivate the notebook generation as this error seems to be the last one preventing to have; the ref guide build green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10483:52,Error,Error,52,https://root.cern,https://github.com/root-project/root/pull/10483,2,"['Error', 'error']","['Error', 'error']"
Availability,[skip-ci][cling][cpt]Move declarations up to fix faulty logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5834:49,fault,faulty,49,https://root.cern,https://github.com/root-project/root/pull/5834,1,['fault'],['faulty']
Availability,[skip-ci][doc] TProfile: clarify error calculation formula,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14724:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/14724,1,['error'],['error']
Availability,[skip-ci][v6-28][windows] Fix the webgui ping test on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12807:41,ping,ping,41,https://root.cern,https://github.com/root-project/root/pull/12807,1,['ping'],['ping']
Availability,[skip-ci][win64] Fix fatal compilation error on Windows 64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10710:39,error,error,39,https://root.cern,https://github.com/root-project/root/pull/10710,1,['error'],['error']
Availability,[skip-ci][windows] Fix the webgui ping test on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12806:34,ping,ping,34,https://root.cern,https://github.com/root-project/root/pull/12806,1,['ping'],['ping']
Availability,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11852:258,Error,Error,258,https://root.cern,https://github.com/root-project/root/issues/11852,1,['Error'],['Error']
Availability,[tclingg] Do not link libCoreEntitlements (macOS 12 error in ACLiC).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9085:52,error,error,52,https://root.cern,https://github.com/root-project/root/pull/9085,1,['error'],['error']
Availability,"[thstack] fix error in options decoding, fix gcc10 warnings",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5881:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/5881,1,['error'],['error']
Availability,"[thstack] fix error in options decoding, v6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5898:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/5898,1,['error'],['error']
Availability,[tmva] Avoid calling TMVA::Python_Executable() when Pymva is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10253:65,avail,available,65,https://root.cern,https://github.com/root-project/root/pull/10253,1,['avail'],['available']
Availability,[tmva] Fix compilation error in a Cuda kernel,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14118:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/14118,1,['error'],['error']
Availability,[tmva] Fix tutorials for failures seen in CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11185:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/11185,1,['failure'],['failures']
Availability,[tmva][sofie-gnn] Increase tolerance for sofie-gnn tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13608:27,toler,tolerance,27,https://root.cern,https://github.com/root-project/root/pull/13608,1,['toler'],['tolerance']
Availability,[tmva][sofie] Fix error message in Tanh operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11030:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/11030,1,['error'],['error']
Availability,[tree] Clarify error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13386:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/13386,1,['error'],['error']
Availability,[tree] Fix typo in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12215:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/12215,1,['error'],['error']
Availability,[tree] Possible error in TLeaf::GetLeafCounter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7507:16,error,error,16,https://root.cern,https://github.com/root-project/root/issues/7507,1,['error'],['error']
Availability,[tree] Print error in case of branch kind mismatch in CopyAddresses,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/8314,1,['error'],['error']
Availability,[tree] Print error in case of branch kind mismatch in CopyAddresses (v6.24),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8350:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/8350,1,['error'],['error']
Availability,[tree] raise error instead of crash when trying to access null GetTree,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15283:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/15283,1,['error'],['error']
Availability,"[treeplayer] Fix conversion error, thanks clang10!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6124:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/6124,1,['error'],['error']
Availability,[treereader] Clearer error message in SetEntriesRange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/10705,1,['error'],['error']
Availability,[unix] No linked so does not mean failure on MacOS:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5864:34,failure,failure,34,https://root.cern,https://github.com/root-project/root/pull/5864,1,['failure'],['failure']
Availability,[urgent] Properly fix the nightly failures due to RInterface.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8851:34,failure,failures,34,https://root.cern,https://github.com/root-project/root/pull/8851,1,['failure'],['failures']
Availability,[v6-26] Fix CMake error with the latest version of Arrow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11684:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/11684,1,['error'],['error']
Availability,[v6-28] Make FindMySQL.cmake more tolerant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13961:34,toler,tolerant,34,https://root.cern,https://github.com/root-project/root/pull/13961,1,['toler'],['tolerant']
Availability,[v6-30] Make FindMySQL.cmake more tolerant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13963:34,toler,tolerant,34,https://root.cern,https://github.com/root-project/root/pull/13963,1,['toler'],['tolerant']
Availability,[v6-32][cmake][clad] Fix potential Clad build error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16247:46,error,error,46,https://root.cern,https://github.com/root-project/root/pull/16247,1,['error'],['error']
Availability,[v6-32][cmake][win] Fix potential build error of cfitsio,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16254:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/16254,1,['error'],['error']
Availability,[v6-32][win32] Fix error with VS v17.10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15860:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/15860,1,['error'],['error']
Availability,[v628] Backports to fix TMVA nightly errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777:37,error,errors,37,https://root.cern,https://github.com/root-project/root/pull/13777,1,['error'],['errors']
Availability,[v632][RF] MultiProcess error handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15956:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/15956,1,['error'],['error']
Availability,[v7 tutorials] fix error in draw_mt.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4526:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/4526,1,['error'],['error']
Availability,[web] Disable test-webgui-ping on macOS < 13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15128:26,ping,ping,26,https://root.cern,https://github.com/root-project/root/pull/15128,1,['ping'],['ping']
Availability,[webcanv] Clearly indicate error in the canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16424:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/16424,1,['error'],['error']
Availability,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:58,ping,ping,58,https://root.cern,https://github.com/root-project/root/pull/7839,1,['ping'],['ping']
Availability,[webgui] add ping.cxx to tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7901:13,ping,ping,13,https://root.cern,https://github.com/root-project/root/pull/7901,1,['ping'],['ping']
Availability,[webgui] detect available browser when producing image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13097:16,avail,available,16,https://root.cern,https://github.com/root-project/root/pull/13097,1,['avail'],['available']
Availability,[webgui] increase startup time of ping test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10800:34,ping,ping,34,https://root.cern,https://github.com/root-project/root/pull/10800,1,['ping'],['ping']
Availability,[webgui] increase startup time of ping test [6.26],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10801:34,ping,ping,34,https://root.cern,https://github.com/root-project/root/pull/10801,1,['ping'],['ping']
Availability,"[webgui] let run ping.cxx from any place, update jsroot [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7888:17,ping,ping,17,https://root.cern,https://github.com/root-project/root/pull/7888,1,['ping'],['ping']
Availability,[webgui] suppress error messages from browsers [6.32],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15358:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/15358,1,['error'],['error']
Availability,"[webgui] use `--single-process` for chrome, improve ping.cxx test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8574:52,ping,ping,52,https://root.cern,https://github.com/root-project/root/pull/8574,1,['ping'],['ping']
Availability,[win64] Fix pointer formatting and test failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9964:40,failure,failure,40,https://root.cern,https://github.com/root-project/root/pull/9964,1,['failure'],['failure']
Availability,[win] echo without newline in `root-config.bat`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15233:6,echo,echo,6,https://root.cern,https://github.com/root-project/root/pull/15233,1,['echo'],['echo']
Availability,[windows] Fix compilation error with VS 2019,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15787:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/15787,1,['error'],['error']
Availability,[windows] Prevent JIT error with VS 2022 v17.9.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14783:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/14783,1,['error'],['error']
Availability,"[x] Checked for duplicates. ### Describe the bug; Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior; ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce; Load a dynamic library with ; `gROOT->ProcessLine("".L path_to_library.dylib"")`; or equivalent. ### Setup; 1. ROOT 6.27/01; 2. macOS 11.4; 3. built from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9697:50,Error,Error,50,https://root.cern,https://github.com/root-project/root/issues/9697,2,['Error'],['Error']
Availability,[xmlparser] print line where error is observed (ROOT-8142),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6490:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/6490,1,['error'],['error']
Availability,"\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:2977,error,error,2977,https://root.cern,https://github.com/root-project/root/pull/5627,2,['error'],['error']
Availability,"\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:1286,error,error,1286,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability,"\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:3984,error,error,3984,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: [ FAILED ] AxisTest.Labels (53 ms); 77: [ RUN ] AxisTest.SameBinning; 77: [ OK ] AxisTest.SameBinning (0 ms),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:12423,error,error,12423,https://root.cern,https://github.com/root-project/root/pull/5054,2,['error'],['error']
Availability,"\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1520,error,error,1520,https://root.cern,https://github.com/root-project/root/issues/10875,1,['error'],['error']
Availability,"\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2407,error,error,2407,https://root.cern,https://github.com/root-project/root/issues/9487,1,['error'],['error']
Availability,"] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5138,error,error,5138,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"] main /Users/user/color.cxx:89; [/usr/lib/system/libdyld.dylib] start (no debug info); [<unknown binary>] (no debug info); ```. ## Expected behavior; No FPEs. ## To Reproduce. Code:; ```; //; // main.cxx. #include <iostream>; #include <stdlib.h>. #include <TColor.h>; #include <TRandom.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:1485,mask,masks,1485,https://root.cern,https://github.com/root-project/root/issues/6373,1,['mask'],['masks']
Availability,"](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not filled correctly in the Asimov data that is created by; // AsymptoticCalculator::GenerateAsimovData(). But this is a completely; // different issue.; ```; Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10761:1842,error,errors,1842,https://root.cern,https://github.com/root-project/root/pull/10761,2,['error'],['errors']
Availability,"]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root version: 6.25/01; Operating system: Ubuntu 20.04; How you obtained ROOT: built it from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7805:2737,down,download,2737,https://root.cern,https://github.com/root-project/root/issues/7805,1,['down'],['download']
Availability,"]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:81: error: expected ';' at end of declaration; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; ;; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/sma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:1346,error,error,1346,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:5979,error,error,5979,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits> // For __void_t, is_convertible; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // Brings in std::declval too.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:26553,error,error,26553,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:12928,error,error,12928,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:4667,error,error,4667,https://root.cern,https://github.com/root-project/root/issues/8642,1,['error'],['error']
Availability,"_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value of the variables at the line in question (null ptrs).; > ; > I would greatly appreciate some guidance or direct help in further debugging this situation. At this point, I'm not sure whether art is using ROOT poorly, or if this is a different issue. Please let me know if it would work best to meet via Zoom.; > ; > Thanks very much,; > Kyle; > ; >",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:8256,error,error,8256,https://root.cern,https://github.com/root-project/root/issues/6939,2,['error'],['error']
Availability,"_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 's",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8069,error,error,8069,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"_TYPE=RelWithDebInfo -Dsoversion=ON -Droofit=yes; make -j8; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8178:1043,error,error,1043,https://root.cern,https://github.com/root-project/root/issues/8178,1,['error'],['error']
Availability,"_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:7216,error,error,7216,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:19548,error,error,19548,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"__device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:9428,error,error,9428,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:8082,error,error,8082,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"_is_complete_or_unbounded(__type_identity<_Tp>{}),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; root [2]; ```; The error vanishes if the assertion is first applied to another class belonging to the same dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<OtherClass>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; (const bool) true; root [3]; ```; but not on a class from another dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<TH1F>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_pair.h:391:3: note: in instantiation of template class 'std::__and_<std::is_copy_assignable<int>, std::is_copy_assignable<MyClass> >' requested here; __and_<is_copy_assignable<_T1>,; ^; ./OtherClass.h:9:27: note: in instantiation of template class 'std::pair<int, MyClass>' requested here; std::pair<int, MyClass> c;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1058:14: note: in instantiation of template class 'std::__is_copy_assignable_impl<MyClass, true>' requested here; : public __is_copy_assignable_impl<_Tp>::type; ^; ROOT_prompt_2:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1057:12: note: definition of 'std::is_copy_assignable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:4615,error,error,4615,https://root.cern,https://github.com/root-project/root/issues/10512,1,['error'],['error']
Availability,"_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second offset= 0 type=300 ,stl=365, ctype=365,. **root 6.22,24**. root [3] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f558",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1610,Error,Error,1610,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Error'],['Error']
Availability,"_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_multiprocess=ON -Droofit_hs3_yml=ON -DCMAKE_PREFIX_PATH=/home/cburgard/Physics/root/zmq . ```. ```; In file included from /home/cburgard/Physics/root/build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:67,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.h:22,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:17:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx: In member function ‘void PDFTest::compareFixedValues(double&, bool, bool, bool, unsigned int)’:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:355:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 355 | EXPECT_GT(sumDiffs/outputsScalar.size(), -toleranceCompare) << ""Batch outputs biased towards negative."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:356:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 356 | EXPECT_LT(sumDiffs/outputsScalar.size(), toleranceCompare) << ""Batch outputs biased towards positive."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:357:25: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsig",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12006:1538,error,error,1538,https://root.cern,https://github.com/root-project/root/issues/12006,1,['error'],['error']
Availability,_obj > {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_object_pointer.h:35:78: error: no type named '__is_obj' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_obj > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:456:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_compound.h:14:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_fundamental.h:38:38: error: missing '#include <__type_traits/is_arithmetic.h>'; declaration of 'is_arithmetic' must be imported from module 'std.type_traits.is_arithmetic' before it is required; is_arithmetic<_Tp>::value> {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_arithmetic.h:23:50: note: previous declaration is here; template <class _Tp> struct _LIBCPP_TEMPLATE_VIS is_arithmetic; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:476:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:53: error: use of undeclared identifi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:7136,error,error,7136,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8894,error,error,8894,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 10 2023, 10:38:00 |; | From tags/v6-28-04@v6-28-04 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Built with alibuild. ### Operating system. CentOS 7, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:9829,down,down,9829,https://root.cern,https://github.com/root-project/root/issues/13314,1,['down'],['down']
Availability,"` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:3719,avail,available,3719,https://root.cern,https://github.com/root-project/root/issues/9070,1,['avail'],['available']
Availability,"`#include <foo.h>` isn't looked up again after calling `gInterpreter->AddIncludePath()`. We also need a test for a file that gets included, isn't found, is then created by the user, and must then be successfully included (i.e. lookup failure must not be cached.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12778:234,failure,failure,234,https://root.cern,https://github.com/root-project/root/issues/12778,1,['failure'],['failure']
Availability,"`&obj2 - &obj1` is truncated to integer -- previous logic was assuming floating point values were possible. This fixes a rare failure in `dataframe_snaphot --gtest_filter=""*ClonesArray""` as well as possible crashes in user applications. This fixes ROOT-10822.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5787:126,failure,failure,126,https://root.cern,https://github.com/root-project/root/pull/5787,1,['failure'],['failure']
Availability,`-Dmonalisa=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15307:58,error,error,58,https://root.cern,https://github.com/root-project/root/pull/15307,1,['error'],['error']
Availability,"`-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has; ```cmake; target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc); ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15308:57,error,error,57,https://root.cern,https://github.com/root-project/root/pull/15308,1,['error'],['error']
Availability,"`. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this?. Here's a [link](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193) to a ROOT forum thread which describes the same problem (but does not provide any more information than is stated above).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:2392,error,error-conflicting-types-alpine-linux,2392,https://root.cern,https://github.com/root-project/root/issues/9253,1,['error'],['error-conflicting-types-alpine-linux']
Availability,"`; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1362,error,error,1362,https://root.cern,https://github.com/root-project/root/issues/10203,1,['error'],['error']
Availability,`EnableThreadSafety()` is called in `_batchgenerator.py` making another call for it redundant and `class RBatchGenerator` depends to Internal namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14860:84,redundant,redundant,84,https://root.cern,https://github.com/root-project/root/pull/14860,1,['redundant'],['redundant']
Availability,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10679:135,avail,available,135,https://root.cern,https://github.com/root-project/root/pull/10679,2,['avail'],['available']
Availability,"`Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:; ```cpp; auto h = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); .Vary(; ""x"",; [](int x) {; return ROOT::RVecI{x - 1, x + 1};; },; {""x""}, 2); .Stats<int>(""x"");; ROOT::RDF::Experimental::VariationsFor(h); // logic error:; // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10545:354,error,error,354,https://root.cern,https://github.com/root-project/root/issues/10545,1,['error'],['error']
Availability,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:940,error,error,940,https://root.cern,https://github.com/root-project/root/pull/11687,1,['error'],['error']
Availability,"`TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H << std::endl;; TFile h(H); h.Close(); ok(H);. std::cout << ""List temporary directory tree:"" << std::endl;; std::system(""tree"");. fs::current_path(prev);; fs::remove_all(tmp);; if (not fs::exists(tmp)); std::cout << ""Temporary directory deleted"" << std::endl;; else; std::cerr << ""Failed to delete temporary directory"" << std::endl;; return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15141:1526,Error,Error,1526,https://root.cern,https://github.com/root-project/root/pull/15141,1,['Error'],['Error']
Availability,`TRandom::Poisson(double mu)` returns an 32 bit integer.; When passing a value `mu>=int_max` (i.e. ~ 2.E9) it returns -2147483648. Also this happens when my is a NaN. ; This can create confusions. ; I think an error message should be produced such that users needs to take actions and protect it. ; In addition one the function return value could be changed from int to unsigned long . To reproduce: . ```; cout << gRandom->Poisson(1.E10) << endl;; cout << gRandom->Poisson(TMath::QuietNaN()) << endl;; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6927:210,error,error,210,https://root.cern,https://github.com/root-project/root/issues/6927,1,['error'],['error']
Availability,`TTree::SaveAs` should error out when using with unsupported format.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10024:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/10024,1,['error'],['error']
Availability,`XrdSecEntity::Reset()` is only available in newer versions of XRootD. Fixes [ROOT-9595](https://sft.its.cern.ch/jira/browse/ROOT-9595).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2570:32,avail,available,32,https://root.cern,https://github.com/root-project/root/pull/2570,1,['avail'],['available']
Availability,"``; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:1351,error,error,1351,https://root.cern,https://github.com/root-project/root/issues/14171,1,['error'],['error']
Availability,"```-- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/roots; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/proofserv; -- Installing: /workspace/install/ROOT/HEAD/x86_64-centos7-gcc7-opt/bin/xproofd; CMake Error at cmake_install.cmake:111 (file):; file INSTALL cannot find; ""/workspace/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/include/RConfigOptions.h"":; No such file or directory.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450:252,Error,Error,252,https://root.cern,https://github.com/root-project/root/pull/5450,1,['Error'],['Error']
Availability,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:1934,Error,Error,1934,https://root.cern,https://github.com/root-project/root/issues/15221,6,"['Error', 'avail']","['Error', 'available']"
Availability,"```; .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':; .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]; 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;; | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':; .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]; 156 | << "" is not of type RooAbsReal, fatal error"" << endl;; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':; .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]; 131 | Int_t n = event->GetNVariables();; | ~~~~~~~~~~~~~~~~~~~~^~; In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,; from .../tmva/tmva/inc/TMVA/Tools.h:58,; from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,; from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,; from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,; from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:; .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'; 88 | UInt_t GetNVariables() const;; | ^~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8368:328,ERROR,ERROR,328,https://root.cern,https://github.com/root-project/root/pull/8368,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"```; .../root_build/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysDNS.cc: In ; static member function 'static char* XrdSysDNS::Peername(int, sockaddr*, char**); ': ; .../root_build/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysDNS.cc:704:50: error: invalid conversion from 'int*' to 'socklen_t*' {aka 'unsigned int*'} [-fpermissive]; 704 | if (getpeername(snum, (struct sockaddr *)sap, &addrlen) < 0); | ^~~~~~~~; | |; | int*; ```. XrdSysDNS was deprecated in xrootd. Perhaps either add cast to socklen_t* on the third parameter or update to xrootd 5.3.2?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173:234,error,error,234,https://root.cern,https://github.com/root-project/root/issues/9173,1,['error'],['error']
Availability,"```; //; // main.cxx. #include <iostream>; #include <stdlib.h>. #include <TColor.h>; #include <TRandom.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TColor* c= new TColor();; TRandom* r= new TRandom();; float rgb[3];; //c->SetRGB(212.467392, 0.529984, 9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:1608,mask,mask,1608,https://root.cern,https://github.com/root-project/root/issues/6373,1,['mask'],['mask']
Availability,```; CMake Error at interpreter/cling/docs/CMakeLists.txt:60 (include):; include could not find requested file:. AddSphinxTarget; ```. when configuring with. `cmake -DLLVM_ENABLE_SPHINX=ON`. Affects `master` and latest v6.28/06 / `v6-28-00-patches`. Reported on the forum: https://root-forum.cern.ch/t/cmake-failed-w-dllvm-enable-sphinx-on/56260,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13597:11,Error,Error,11,https://root.cern,https://github.com/root-project/root/issues/13597,1,['Error'],['Error']
Availability,"```; In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,; from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?; 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));; | ^~~~~~; | wmemcpy; gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1; ```. # This Pull request:. ## Changes or fixes:. Add #include \<cstring\> for std::memcpy. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10116:419,error,error,419,https://root.cern,https://github.com/root-project/root/pull/10116,2,"['Error', 'error']","['Error', 'error']"
Availability,"```; In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,; from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?; 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));; | ^~~~~~; | wmemcpy; gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1; ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10594:419,error,error,419,https://root.cern,https://github.com/root-project/root/pull/10594,2,"['Error', 'error']","['Error', 'error']"
Availability,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424:596,down,download,596,https://root.cern,https://github.com/root-project/root/issues/8424,2,['down'],['download']
Availability,"```; oksana@oksana-ThinkPad-E470:~/CERN_sources/root$ file graf3d/eve/src/TEveTrans.cxx ; graf3d/eve/src/TEveTrans.cxx: C source, ISO-8859 text; ```. Tiny fix for sending coverage data to coveralls.io (Error: ""source sequence is illegal/malformed utf-8""): https://github.com/okkez/coveralls-lcov/issues/12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1502:202,Error,Error,202,https://root.cern,https://github.com/root-project/root/pull/1502,1,['Error'],['Error']
Availability,"```; rulevisCorr.cxx:173:43: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ^; rulevisCorr.cxx:173:21: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 20; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11702:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/11702,1,['error'],['error']
Availability,"```; rulevisCorr.cxx:173:43: error: ‘snprintf’ output may be truncated before the last format character [-Werror=format-truncation=]; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ^; rulevisCorr.cxx:173:21: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 20; 173 | snprintf( cn, 20, ""rulecorr%d_"", countCanvas+1 );; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```; (backport from master). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11928:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/11928,1,['error'],['error']
Availability,"```cpp; #include <TFile.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ULong64_t x[3] = {1ull, 2ull, 3ull};; t.Branch(""x"", &x, ""x[3]/l"");; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; // this works:; TTreeReaderArray<ULong64_t> x(r, ""x"");; // this does not:; TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;; }; ```. produces the following (bad) error message:. ```; Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>.; ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9758:470,error,error,470,https://root.cern,https://github.com/root-project/root/issues/9758,2,"['Error', 'error']","['Error', 'error']"
Availability,"```valgrind --suppressions=/build/vvassilev/root-release-master/etc/valgrind-root.supp root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -q -l -b assertSparseSelection.C; ==22765== Memcheck, a memory error detector; ==22765== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==22765== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:896,error,error,896,https://root.cern,https://github.com/root-project/root/issues/11385,1,['error'],['error']
Availability,`can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:58,failure,failure,58,https://root.cern,https://github.com/root-project/root/issues/13568,1,['failure'],['failure']
Availability,"`from ROOT import *` leads to a segmentation violation when used with Python 3.6. One could try fixing it instead of disabling it but the code which is used to install the lookup handler in the module `RootModule::SetRootLazyLookup` depends on internal CPython implementation details of the dict class which are not part of the public API. As a consequence keeping this alive will lead to very; fragile code, require continuous effort to adapt to internal changes and cause a lot of #ifdef handling. (as a matter of fact, Python 3.7 would probably already require new changes to this code already). . Also there's a statement in the bug report that `from ROOT import *` is broken in Python 3 so I don't understand why it's not disabled as it will only confuse users: https://sft.its.cern.ch/jira/browse/ROOT-8931. As such I would propose to instead have a clear error message that `from ROOT import *` does not work. This pr adds an `ImportError` which is easy to handle but cannot be just ignored by the user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/825:370,alive,alive,370,https://root.cern,https://github.com/root-project/root/pull/825,2,"['alive', 'error']","['alive', 'error']"
Availability,"`gtest-roofit-roostats-test-testSPlot` fails with; ```; 253: ==1900901==ERROR: AddressSanitizer: heap-use-after-free on address 0x6150001aed68 at pc 0x7ff68c0e1c43 bp 0x7fff1ea4ee10 sp 0x7fff1ea4ee00; 253: READ of size 8 at 0x6150001aed68 thread T0; 253: #0 0x7ff68c0e1c42 in __gnu_cxx::__normal_iterator<RooAbsArg* const*, std::vector<RooAbsArg*, std::allocator<RooAbsArg*> > >::__normal_iterator(RooAbsArg* const* const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_iterator.h:784:20; 253: #1 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::begin() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:708:16; 253: #2 0x7ff68c0e1c42 in std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >::empty() const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:895:16; 253: #3 0x7ff68c0e1c42 in RooAbsCollection::empty() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsCollection.h:254:18; 253: #4 0x7ff68c0e1c42 in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:97:46; 253: #5 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::retrieveValue(RooAbsReal const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:369:17; 253: #6 0x7ff68c0e1c42 in RooTemplateProxy<RooAbsReal>::operator double() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooTemplateProxy.h:221:12; 253: #7 0x7ff68c0e1c42 in RooLinearVar::evaluate() const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooLinearVar.cxx:115:10; 253: #8 0x7ff68be02e42 in RooAbsReal::traceEval(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:334:18; 253: #9 0x7ff68be02ce7 in RooAbsReal::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsReal.cxx:256:14; 253: #10 0x7ff68cd94a6b in RooAbsReal::getVal(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221:72,ERROR,ERROR,72,https://root.cern,https://github.com/root-project/root/issues/11221,1,['ERROR'],['ERROR']
Availability,`int error = fSocket->Send(fMessage) <= 0` is evaluated as ; `int error = (fSocket->Send(fMessage) <= 0)` and not as; `(int error = fSocket->Send(fMessage)) <= 0`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/267:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/267,3,['error'],['error']
Availability,"`mtbb201_parallelHistoFill.C` fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14854:83,error,error,83,https://root.cern,https://github.com/root-project/root/pull/14854,2,['error'],['error']
Availability,"`rootfit/CMakeLists.txt` does not check whether `HistFactory` is on, despite hs3 depending on it. This happens e.g. if there's no libxml2. See https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10103:188,error,error-on-ubuntu,188,https://root.cern,https://github.com/root-project/root/issues/10103,1,['error'],['error-on-ubuntu']
Availability,`rootls` should not show errors when seeing a branch of class without dictionary,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11675:25,error,errors,25,https://root.cern,https://github.com/root-project/root/issues/11675,1,['error'],['errors']
Availability,"`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:1008,error,error,1008,https://root.cern,https://github.com/root-project/root/pull/11687,1,['error'],['error']
Availability,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:2232,down,download,2232,https://root.cern,https://github.com/root-project/root/issues/8745,1,['down'],['download']
Availability,"a-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunctio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1686,error,error,1686,https://root.cern,https://github.com/root-project/root/issues/16553,1,['error'],['error']
Availability,a. Fix the test/stress failure when using the built-in zlib; b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7274:23,failure,failure,23,https://root.cern,https://github.com/root-project/root/pull/7274,2,"['avail', 'failure']","['available', 'failure']"
Availability,"a/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lgermantok"" ""-lThaiTokenizer"" ""-lChineseTokenizer"" ""-lcmph"" ""-lutil"" ""-lapp_launch_measurement"" ""-lxslt.1"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:4644,Down,Downloads,4644,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,a/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:81: error: expected ';' at end of declaration; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; ;; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:82: error: expected unqualified-id; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'; # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/config/detail/suffix.hpp:965:26: note: expanded from macro 'BOOST_NOEXCEPT'; # define BOOST_NOEXCEPT noexcept; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:2163,error,error,2163,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:8868,error,error,8868,https://root.cern,https://github.com/root-project/root/issues/15738,1,['error'],['error']
Availability,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:53712,fault,fault,53712,https://root.cern,https://github.com/root-project/root/issues/15970,1,['fault'],['fault']
Availability,"able or not. ### Reproducer. I'm using C++14 library that provide [`vccc::views::iota`](https://github.com/visualcamp/vccc/blob/6080acb71122f984293c38f17412ceb085f43b02/include/vccc/__ranges/views/iota_view.hpp#L434-L445) that models [`std::views::iota`](https://en.cppreference.com/w/cpp/ranges/iota_view).; The standard defines that It returns different type for sentinel if it models unbounded `iota_view`. Anyway, detailed description is not really necessary because the fix is really simple and intuitive. #### Input line; ```c++; vccc::views::iota(10) | vccc::views::take(4); ```; #### Output; ```c++; In file included from input_line_11:1:; In file included from /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:16:; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:224:7: error: 'auto' deduced as 'counted_iterator<I>' (aka 'counted_iterator<vccc::ranges::iota_view<int, vccc::unreachable_sentinel_t>::iterator>') in declaration of 'iter' and deduced as 'sentinel<true>' in declaration of 'iterEnd'; auto iter = obj->begin(), iterEnd = obj->end();; ^ ~~~~~~~~~~~~ ~~~~~~~~~~; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:241:39: note: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; return collectionPrinterInternal::printValue_impl(obj);; ^; /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:49:39: note: in instantiation of function template specialization 'cling::printValue<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; bundle[""text/plain""] = cling::printValue(&value);; ^; input_line_24:2:2: note: in instantiation of function template specialization 'xcpp::mime_bundle_repr<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; mime_bundle_repr(*(*(vccc::ranges::take_view<vccc::ranges::iota_view<int, vccc::unreachable_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14966:1232,error,error,1232,https://root.cern,https://github.com/root-project/root/issues/14966,1,['error'],['error']
Availability,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); >#include <new>; > ^; >input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'; >Warning in cling::IncrementalParser::CheckABICompatibility():; > Failed to extract C++ standard library version.; >'at_quick_exit' not defined; ><<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt; >Failed to load module libc; >Failed to load module std; >Failed to load module _Builtin_intrinsics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:2717,error,error,2717,https://root.cern,https://github.com/root-project/root/issues/7055,1,['error'],['error']
Availability,acts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx && source xxxx; source /home/conda/recipe_root/build.sh; make Core VERBOSE=1 -j1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:7556,Error,Error,7556,https://root.cern,https://github.com/root-project/root/issues/7206,3,"['Error', 'error']","['Error', 'error']"
Availability,"ad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. ## Expected behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:2956,mask,masks,2956,https://root.cern,https://github.com/root-project/root/issues/6449,1,['mask'],['masks']
Availability,add a function to retrieve the number of logical cores available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4684:55,avail,available,55,https://root.cern,https://github.com/root-project/root/pull/4684,1,['avail'],['available']
Availability,"ader ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8224,error,error,8224,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10693:2394,error,error,2394,https://root.cern,https://github.com/root-project/root/issues/10693,1,['error'],['error']
Availability,"ady released as part of exception handling. See behavior below:; ```c++; root [0] .x pointer_not_allocated_error.cc; free(): double free detected in tcache 2; ```. In principle, this seems to be dependent on NRVO. Crash seems to be avoided either by _(i)_ commenting out; ```c++; histograms.push_back(h);; ```; ; or _(ii)_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:1227,error,error,1227,https://root.cern,https://github.com/root-project/root/issues/11494,2,['error'],['error']
Availability,agma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/ty,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:12039,error,error,12039,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"akeFiles/TextInput.dir/src/Getline.cxx.o ; /usr/bin/c++ -I/home/maxnoe/Downloads/root-6.28.04/core/textinput/inc -I/home/maxnoe/Downloads/root-6.28.04/core/textinput/src -I/home/maxnoe/Downloads/root-6.28.04/core/base/inc -I/home/maxnoe/Downloads/root-6.28.04/core/clib/inc -I/home/maxnoe/Downloads/root-6.28.04/core/meta/inc -I/home/maxnoe/Downloads/root-6.28.04/core/cont/inc -I/home/maxnoe/Downloads/root-6.28.04/core/gui/inc -I/home/maxnoe/Downloads/root-6.28.04/core/thread/inc -I/home/maxnoe/Downloads/root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1184,Down,Downloads,1184,https://root.cern,https://github.com/root-project/root/issues/13529,1,['Down'],['Downloads']
Availability,"akeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:9041,error,error,9041,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"al characters to original symbols refused by database encoding (UTF8 by default).; e.g. for CREATE TABLE test ( d bytea NOT NULL );; ```; TSQLStatement* stmt = my_db->Statement(""insert into test(d) values ($1)"");; int d = 8332;; stmt->NextIteration();; stmt->SetBinary(0, &d, sizeof(int));; stmt->Process();; ...; stmt = my_db->Statement(""select d from test"");; stmt->Process();; stmt->StoreResult();; while (stmt->NextResultRow()) {; void* mem = 0; Long_t size_mem = 0;; stmt->GetBinary(0, mem, size_mem);; int* val = new int;; memcpy(val, mem, size_mem);; cout<<""Binary size: ""<<size_mem<<"". Int value: ""<<*val<<endl;; }; ```; PostgreSQL 8 works well:. > 8c2000 // before PQescapeBytea; > \\\\214 \\\\000\\\\000 // before PQunescapeBytea; > 5c323134205c3030305c303030 // after PQunescapeBytea; > Binary size: 4. Int value: 8332 // original value. but PostgreSQL 12 refuses to write data:. > 8c2000 // before PQescapeBytea; > \214 \000\000 // before PQunescapeBytea; > 8c2000 // after PQunescapeBytea; > Error in <TPgSQLStatement::Process>: Code: 7 Msg: ERROR: invalid byte sequence for encoding ""UTF8"": 0x8c. I see 3 possible solutions:; 1. Check PostgreSQL version, and if it is higher or equal than 9.3, then exclude; `unsigned char* binary_ptr = PQunescapeBytea((const unsigned char*)escape_ptr, &mxsz);`; Without unescaping bytea data are saved well.; 2. Check PostgreSQL version, and if it is higher or equal than 9.3, then add second backslash, as it was done in PostgreSQL 8 (or vice versa, if Postgresql version is less than 9.3, delete second backslashes and remove PQunescapeBytea).; 3. Rewrite TPgSQLStatement in a such way that binary data are transferred not as a string, but as binary in this function (fParamFormats):; ```; fStmt->fRes= PQexecPrepared(fStmt->fConn,""preparedstmt"",fNumBuffers,; (const char* const*)fBind,; 0,//fParamLengths,; 0,//fParamFormats,; 0);; ```. Can you advice solution and what to do with the problems?. ### Setup; ROOT 6, master branch; Ubuntu 20.10; ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127:2333,Error,Error,2333,https://root.cern,https://github.com/root-project/root/issues/7127,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"al integration builds (https://github.com/cms-sw/cmsdist/pull/6746/files ) but looks like pyROOT fails/hangs for some special dictionaries. . While building cmssw , we use https://github.com/cms-sw/cmssw/blob/master/FWCore/Utilities/scripts/edmCheckClassVersion to check for root dictionaries class versions. This works for most of our dictionaries e.g following two run fine ( https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_hlt.xml, https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_1.xml ); ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_hlt.xml; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_1.xml; ```; but it fails/hangs for https://github.com/cms-sw/cmssw/blob/master/DataFormats/TauReco/src/classes_def_2.xml; ```; > src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x src/DataFormats/TauReco/src/classes_def_2.xml; ```; Most of the times the above command just hangs with error https://muzaffar.web.cern.ch/root624/err1.log but once I was able to get this error https://muzaffar.web.cern.ch/root624/err.log . Can you please look in to it and see if this log helps? . In case you want to try it yourself then you go to cmsdev25 and do; ```; >cd /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100; >cmsenv; >/build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/FWCore/Utilities/scripts/edmCheckClassVersion -l libDataFormatsTauReco.so -x /build/muz/r624/w/tmp/BUILDROOT/ea8220342d406ab7dbc2d210a1e9351b/opt/cmssw/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT624_X_2021-03-25-1100/src/DataFormats/TauReco/src/classes_def_2.xml; ```. FYI @mrodozov @makortel @Dr15Jones",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718:1284,error,error,1284,https://root.cern,https://github.com/root-project/root/issues/7718,2,['error'],['error']
Availability,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9340,error,error,9340,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Error', 'error']","['Error', 'error']"
Availability,"al-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2405,error,error,2405,https://root.cern,https://github.com/root-project/root/issues/10203,1,['error'],['error']
Availability,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:14103,error,error,14103,https://root.cern,https://github.com/root-project/root/issues/12429,3,"['Error', 'error']","['Error', 'error']"
Availability,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15147,error,error,15147,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"alculations (like 3-dimensional fits), but mostly I use pure Python for high-level data analysis, and it would be useful to combine PyPy and ROOT for middle-hard calculations. ; I'm also developing an architectural framework for data analysis in Python, and I'm curious whether PyPy + ROOT will ever be possible (it would be a good combination for speeding up Python). I'm interested in the possibility to use PyPy with ROOT. When I launched that, there was an error. > $ pypy; > \>\>\>\> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110:1298,error,error,1298,https://root.cern,https://github.com/root-project/root/issues/8110,1,['error'],['error']
Availability,"alifornia & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape.; [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:3064,Down,Downloads,3064,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,"all-branches | --branches bname1 [bname2 ...] | --branches-regex bregex1 [bregex2 ...]); [--threads nthreads]; [--tasks-per-worker ntasks]; rootreadspeed (--help|-h); ; Use -h for usage help, --help for detailed information. Arguments:; Specifying files and trees:; --files fname1 [fname2...]; The list of ROOT files to read from. --trees tname1 [tname2...]; The list of TTrees to read from the files.; If only one TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:1432,error,error,1432,https://root.cern,https://github.com/root-project/root/pull/14039,1,['error'],['error']
Availability,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:1858,error,error,1858,https://root.cern,https://github.com/root-project/root/issues/7199,1,['error'],['error']
Availability,"alue.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:4142,error,error,4142,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ame, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) returned a result with an exception set. ak_array_in = <Array [[[1.1], [2.2]], [[3.3], ...]] type='2 * var * var * float64'>; ak_array_out = <Array [{x: [[1.1], [2.2]]}, {...}] type='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:3701,Error,Error,3701,https://root.cern,https://github.com/root-project/root/issues/11602,1,['Error'],['Error']
Availability,"amed 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8677,error,error,8677,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"amer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:3492,error,error,3492,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"amer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:4924,error,error,4924,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"an run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python. >>> import ROOT; >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]); >>> rdf; {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True], dtype=object)}; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Conda:; ```; - root=6.24.0=py39hde0f152_0; - root_base=6.24.0=py39h9c0239e_0; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |; | From tag , 14 April 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. Operating system (running inside singularity); ```; (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=20.10; DISTRIB_CODENAME=groovy; DISTRIB_DESCRIPTION=""Ubuntu 20.10""; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8639:1790,down,download,1790,https://root.cern,https://github.com/root-project/root/issues/8639,1,['down'],['download']
Availability,and 'fatal' typo leading to valgrind error on 32 bits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1666:37,error,error,37,https://root.cern,https://github.com/root-project/root/pull/1666,1,['error'],['error']
Availability,"and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3566,error,errors,3566,https://root.cern,https://github.com/root-project/root/pull/12905,1,['error'],['errors']
Availability,"ang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updated automatically on each release.; # You may update your local copy by issuing a `git pull` command from within `root_src/`.; $ git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; $ mkdir root_build root_install && cd root_build; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src # && check cmake configuration output for warnings or errors; $ cmake --build . -- install -j4 # if you have 4 cores available for compilation; $",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:3345,error,error,3345,https://root.cern,https://github.com/root-project/root/issues/13450,3,"['Error', 'error']","['Error', 'error']"
Availability,"anvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:7118,Error,Error,7118,https://root.cern,https://github.com/root-project/root/issues/11430,1,['Error'],['Error']
Availability,"aps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cxx; index fc93cc8b82..0e77517729 100644; --- a/geom/geompainter/src/TGeoChecker.cxx; +++ b/geom/geompainter/src/TGeoChecker.cxx; @@ -1193,7 +1193,7 @@ TGeoOverlap *TGeoChecker::MakeCheckOverlap(const char *name, TGeoVolume *vol1, T; /// Check illegal overlaps for volume VOL within a limit OVLP by sampling npoints; /// inside the volume shape. -void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t /* ovlp */, Int_t npoints) const; +void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t ovlp, Int_t npoints) const; {; Int_t nd = vol->GetNdaughters();; if (nd < 2); @@ -1268,7 +1268,7 @@ void TGeoChecker::CheckOverlapsBySampling(TGeoVolume *vol, Double_t /* ovlp */,; }; // The point is inside 2 or more daughters, check safety; safe = shape->Safety(local, kTRUE);; - // if (safe < ovlp) continue;; + if (safe < ovlp) continue;; // We really have found an overlap -> store the point in a container; iovlp++;; if (!novlps) {; ```. 3. Recompile/Reinstall and Re-run: big overlaps unchanged as expected, known overlaps of size ~0.4 still there with low threshold but masked with sufficient threshold, overlap of size ~10^-8 cut in all cases as expected. ### ROOT version. Original observation with `v6.22` to `v6.26`; Cross-check with current master, given source commit probably present from `v5-19-04` until current master. ### Installation method. Built from source within Fairsoft, built from source standalone. ### Operating system. Ubuntu 20.04, Debian 10 and 11. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:4816,mask,masked,4816,https://root.cern,https://github.com/root-project/root/issues/14675,1,['mask'],['masked']
Availability,"ar const*, TInterpreter::EErrorCode*) + 0xdb4 from /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550417514c in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) + 0xe8 from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:2998,Error,Error,2998,https://root.cern,https://github.com/root-project/root/issues/13845,1,['Error'],['Error']
Availability,"ard<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. {code}; interp SnapshotImpl calls; interp std::make_shared<ROOT::Detail::RDF::RLoopManager …; interp std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all interpreted.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; interp std::make_shared<ROOT::RDF::RInterface …; interp std::allocate_shared<ROOT::RDF::RInterface …; interp std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. I.e. the major difference is that we have the shared_ptr constructor (which contains std::forward) being",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:1582,down,down,1582,https://root.cern,https://github.com/root-project/root/pull/2158,1,['down'],['down']
Availability,"around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle()) ||; +			 (treeNames[0] != fChain->GetListOfFiles()->At(0)->GetName()) )); + ) {; MakeChain(treeNames, fileNames, friendInfo, nEntries, friendEntries);; + }; ; std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:1177,error,error,1177,https://root.cern,https://github.com/root-project/root/issues/7143,1,['error'],['error']
Availability,"assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' request",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:1471,error,error,1471,https://root.cern,https://github.com/root-project/root/issues/13656,1,['error'],['error']
Availability,"assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```; Benchmark #1: ./mwe ../data/D0_sample_5.root; Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]; Range (min … max): 1.321 s … 1.349 s 10 runs; ```; ```; Benchmark #1: python3 mwe.py ../data/D0_sample_5.root; Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]; Range (min … max): 423.9 ms … 436.5 ms 10 runs; ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7273:1127,Down,Download,1127,https://root.cern,https://github.com/root-project/root/issues/7273,1,['Down'],['Download']
Availability,"asurement meas(name.c_str(), name.c_str());; meas.SetOutputFilePrefix((name + ""/WS"").c_str());; meas.SetPOI(""mu"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");; meas.SetExportOnly(true);; RooStats::HistFactory::Channel chan(""SR"");; chan.SetData("""", """");; RooStats::HistFactory::Sample sample(""samp"");; sample.SetHistoName(""myHist"");; sample.SetInputFile(""myFile.root"");; sample.AddNormFactor(""mu"", 1, 0, 100);; chan.AddSample(sample);; meas.AddChannel(chan);; meas.CollectHistograms();; //if(name == ""ws2""); //delete RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```; 2. Validate the file sizes:; ```bash; ls -lah ws1 ws2; ```; 4. Try to open the second workspace with any ROOT 6.28 version:; ```bash; root ws2/WS_combined_ws2_model.root -b -q -e ""combined->GetName()""; ```. There will be errors such as:; ```; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 2 of the class RooAbsReal, object skipped at offset 6484979; Error in <TBufferFile::CheckByteCount>: object of class RooAbsReal read too few bytes: 2 instead of 336; ```. ## Information on the origin of the problem. The first bad commit in the 6.26 branch is 00ca5ca9b23f2 from the PR https://github.com/root-project/root/pull/10215.; The comes from a backport of https://github.com/root-project/root/pull/9486 to the 6.26 patch release branch. Before that commit, when you run the reproducer script above, the `ws1` and `ws2` files are compatible:; ```bash; ls -lah ws1 ws2; ```; ```txt; ws1:; total 88K; drwxr-xr-x 2 rembserj rembserj 4.0K May 7 23:31 .; drwxr-xr-x 4 rembserj rembserj 4.0K May 7 23:31 ..; -rw-r--r-- 1 rembserj rembserj 36K May 7 23:31 WS_combined_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 14 May 7 23:31 WS_results.table; -rw-r--r-- 1 rembserj rembserj 34K May 7 23:31 WS_SR_ws1_model.root; -rw-r--r-- 1 rembserj rembserj 423 May 7 23:31 WS_ws1.root. ws2:; total 88K; drwxr-xr-x 2 rembserj rembserj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12783:1969,error,errors,1969,https://root.cern,https://github.com/root-project/root/issues/12783,3,"['Error', 'error']","['Error', 'errors']"
Availability,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:2773,error,error,2773,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"ata.root"" HistoName=""inits_shape_factor_0"" HistoPath="""" />; </Sample>. <Sample Name=""sample_1"" HistoPath="""" HistoName=""histchannel_0_sample_1"" InputFile=""data/data.root"" NormalizeByTheory=""True"" >; <NormFactor Name=""poi"" Val=""1"" High=""10"" Low=""0"" Const=""False"" />; </Sample>. </Channel>; ```. and when I run this through `hist2workspace`, I get the following error:. ```; $ hist2workspace meas.xml. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#2] INFO:HistFactory -- hist2workspace is less verbose now. Use -v and -vv for more details. ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute InputFile of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoName of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoPath of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; [#2] ERROR:HistFactory -- Loading of xml document ""./meas_channel_0.xml"" failed; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```. which is correctly erroring, but also somewhat confusing. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:4003,error,error,4003,https://root.cern,https://github.com/root-project/root/issues/13287,1,['error'],['error']
Availability,"ataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1081,error,error,1081,https://root.cern,https://github.com/root-project/root/issues/11515,1,['error'],['error']
Availability,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:2915,error,error,2915,https://root.cern,https://github.com/root-project/root/issues/11494,1,['error'],['error']
Availability,"ate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1331,avail,available,1331,https://root.cern,https://github.com/root-project/root/issues/6557,1,['avail'],['available']
Availability,"ath-exampleFunction-py (Failed); Errors while running CTest; ```; With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:; ```; 99% tests passed, 17 tests failed out of 1232; Label Time Summary:; longtest = 540.69 sec*proc (27 tests); multithreaded = 678.83 sec*proc (2 tests); python_runtime_deps = 60.39 sec*proc (11 tests); tutorial = 3802.05 sec*proc (786 tests); Total Test time (real) = 2732.59 sec; The following tests FAILED:; 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed); 	 57 - pyunittests-pyroot-pyz-rtensor (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while running CTest; ```; For both lists the proposed change in #10308 was applied. ### Expected behavior. Ideally there should be no test failures. ### To Reproduce. Steps to reproduce the behaviour:; 1. build root for s390x.; 2. run the unit tests. ### Setup; 1. ROOT version 6.26.02.; 2. Fedora rawhide for s390x. The list of failures is similar for other Fedora and EPEL releases. ; 3. Build from source (during package build for Fedora/EPEL). ### Additional context. [The log](https://github.com/root-project/root/files/8501663/s390x.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:3839,Error,Errors,3839,https://root.cern,https://github.com/root-project/root/issues/10409,3,"['Error', 'failure']","['Errors', 'failures']"
Availability,"ath/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx; [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape; Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so; ld: library not found for -lCheckFix; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:3192,error,error,3192,https://root.cern,https://github.com/root-project/root/issues/7249,3,"['Down', 'Error', 'error']","['Downloads', 'Error', 'error']"
Availability,"atic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TList', class='TList', size=2; OBJ: TStreamerInfo	MyClass	; OBJ: TStreamerInfo	OtherClass	. Reading 2nd (updated) file; Processing testFile.C(""outv2.root"")...; Error in <TBufferFile::CheckByteCount>: object of class MyClass read too many bytes: 12 instead of 6; Warning in <TBufferFile::CheckByteCount>: MyClass::Streamer() not in sync with data on file outv2.root, fix Streamer(); printing GetStreamerInfoList()->Print() for outv2.root; Collection name='TList', class='TList', size=1; OBJ: TStreamerInfo	OtherClass	; ```. ### Reproducer. Unzip attached file [bug.zip](https://github.com/root-project/root/files/13544360/bug.zip); and run the shell script`runTest.sh`. ### ROOT version. 6.28/04; gcc (GCC) 12.2.0. ### Installation method. build from source. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:2157,Error,Error,2157,https://root.cern,https://github.com/root-project/root/issues/14171,1,['Error'],['Error']
Availability,"ation is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:2453,error,error,2453,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability,atomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:81: error: expected ';' at end of declaration; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; ;; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:82: error: expected unqualified-id; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'; # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/config/detail/suffix.hpp:965:26: note: expanded from macro 'BOOST_NOEXCEPT'; # define BOOST_NOEXCEPT noexcept; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: error: exp,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:2480,error,error,2480,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"atus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Arch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:6489,error,error,6489,https://root.cern,https://github.com/root-project/root/issues/15413,1,['error'],['error']
Availability,"aussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d-d78474d7e0e1.png). And this is just after adding it, completely 'reset':. ![image](https://user-images.githubusercontent.com/10653970/180316839-3bc72bb9-7146-45c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11021:1159,ERROR,ERROR,1159,https://root.cern,https://github.com/root-project/root/issues/11021,1,['ERROR'],['ERROR']
Availability,"ave anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558:1286,avail,available,1286,https://root.cern,https://github.com/root-project/root/issues/14558,1,['avail'],['available']
Availability,"aviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The output file of TFileMerger is never deleted, thus all the merging can happen correctly.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinput_2.root; Fill: Switching to new file: filemergeroutput_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0) at waitpid.c:38; #2 0x00007fb64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:1597,down,download,1597,https://root.cern,https://github.com/root-project/root/issues/6640,1,['down'],['download']
Availability,avoid error bar clipping,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6697:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/6697,1,['error'],['error']
Availability,avoid error when copy&pasting code from doxygen,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/268:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/268,1,['error'],['error']
Availability,"ay's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The provided reproducer's ""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1352,down,download,1352,https://root.cern,https://github.com/root-project/root/issues/9583,1,['down'],['download']
Availability,"ay([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:1939,RELIAB,RELIABILITY,1939,https://root.cern,https://github.com/root-project/root/issues/13895,1,['RELIAB'],['RELIABILITY']
Availability,"ayload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1234,error,errorDev,1234,https://root.cern,https://github.com/root-project/root/issues/6791,1,['error'],['errorDev']
Availability,"b/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:8: error: reference to 'lldiv_t' is ambiguous; extern lldiv_t lldiv (long long int __numer,; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:16: error: functions that differ only in their return type cannot be overloaded; extern lldiv_t lldiv (long long int __numer,; ~~~~~~~ ^; /usr/include/stdlib.h:742:16: note: previous declaration is here; extern lldiv_t lldiv (long long int __numer,; ~~~~~~~ ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:194:11: error: reference to 'lldiv_t' is ambiguous; using ::lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1231:1900,error,error,1900,https://root.cern,https://github.com/root-project/root/pull/1231,2,['error'],['error']
Availability,"been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fea7e19b48a in wait4 () from /usr/lib/libc.so.6; #1 0x00007fea7e10d09b in do_system () from /usr/lib/libc.so.6; #2 0x00007fea7ea7fdac in TUnixSystem::Exec (this=0x5593666eb200, shellcmd=0x559368e19160 ""/home/blue/ROOT/master/cmake-build-foo/etc/gdb-backtrace.sh 538334 1>&2"") at ../core/unix/src/TUnixSystem.cxx:2108; #3 0x00007fea7ea8069e in TUnixSystem::StackTrace (this=0x5593666eb200) at ../core/unix/src/TUnixSystem.cxx:2399; #4 0x00007fea7e911bc1 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fea7d7ab1b5 ""TFileMerger::RecursiveRemove"", msg=0x55936842c8a0 ""Output file of the TFile Merger (targeting Run2012B_SingleMu10x.root) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TErrorDefaultHandler.cxx:174; #5 0x00007fea7e9ee212 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fea7d7ab1b5 ""TFileMerger::RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcad78dbb0) at ../core/foundation/src/TError.cxx:152; #6 0x00007fea7e92a7de in TObject::DoError (this=0x7ffcad78f2b0, level=6000, location=0x7fea7f1cb532 ""RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcad78dbb0) at ../core/base/src/TObject.cxx:860; #7 0x00007fea7e92acd1 in TObject::Fatal (this=0x7ffcad78f2b0, location=0x7fea7f1cb532 ""RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TObject.cxx:925; #8 0x00007fea7ef90e56 in TFileMerger::RecursiveRemove (this=0x7ffcad78f2b0, obj=0x559367a40820) at ../io/io/src/TFileMerger.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x55936",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:2368,Error,ErrorHandler,2368,https://root.cern,https://github.com/root-project/root/issues/10102,1,['Error'],['ErrorHandler']
Availability,"before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:1554,error,errors,1554,https://root.cern,https://github.com/root-project/root/issues/6421,1,['error'],['errors']
Availability,"bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -->. Further discussion available at https://mattermost.web.cern.ch/root/pl/zszko6zhwjnsprxjk54gu5ye6h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7786:3091,avail,available,3091,https://root.cern,https://github.com/root-project/root/issues/7786,1,['avail'],['available']
Availability,"bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:2605,error,error,2605,https://root.cern,https://github.com/root-project/root/issues/15091,1,['error'],['error']
Availability,"bination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile: . I tried to run the tests, but they failed at files having nothing to do with my implementation. There seem to be a few problem in the master branch which would explain why the nightly build failed. I will try to investigate more. If you encounter any problems, please contact me and I will try to resolve them. All the best,; Simon Spies. ![example](https://user-images.githubusercontent.com/5320187/53024715-dfa23d80-345f-11e9-9fd4-cae2ef3d11a1.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:5406,error,error,5406,https://root.cern,https://github.com/root-project/root/pull/3449,1,['error'],['error']
Availability,"boost_align and boost_python have umbrella header design, however we cannot use that specifier because then it warns about all the rest of boost not being part of the particular module. This patch just adds align.hpp and python.hpp in the module. This may lead to some duplicates which we will hunt down and fix if needed. The patch should fix cmssw. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6244:299,down,down,299,https://root.cern,https://github.com/root-project/root/pull/6244,1,['down'],['down']
Availability,build failure because of `nlohmann_json`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11236:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/11236,1,['failure'],['failure']
Availability,build failure with `mysql 8.3`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14376:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/14376,1,['failure'],['failure']
Availability,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:1388,error,error,1388,https://root.cern,https://github.com/root-project/root/issues/7704,2,['error'],['error']
Availability,"build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:13053,error,error,13053,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:476:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:53: error: use of undeclared identifier '__remove_cv_t'; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_member > {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:75: error: no type named '__is_member' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_member > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:485:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_nothrow_destructible.h:16:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_scalar.h:51:51: error: missing '#include <cstddef>'; declaration of 'nullptr_t' must be imported from module 'std.compat.cstddef' before it is required; template <> struct _LIBCPP_TEMPLATE_VIS is_scalar<nullptr_t> : public true_type {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstddef:59:9: note: prev,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:8386,error,error,8386,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,but add a comment to the jitted code in order to obtain a clear error message if; the user tries to use this type in a jitted action/transformation later in the chain.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/2558,1,['error'],['error']
Availability,"but there are still other additions that could really help a user trying to use targets:. | New target | Usage |; |---|---|; | `ROOT::Libraries` | This is the target equivalent of `ROOT_LIBRARIES`, and links all common and requested components. |; | ~~`ROOT::Flags`~~ | ~~The target equivalent of `ROOT_*_FLAGS`, `ROOT_DEFINITIONS`, and `ROOT_EXE_LINKER_FLAGS`. Adds the flags that ROOT recommends; this is a smart target and will add `C`, `CXX`, and `FORTRAN` flags as needed depending on the target you link to.~~ |. ~~I have added `_LIST` versions of `FLAGS` variables, since CMake expects the flags to be a real list in most cases (really everywhere except in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:1223,error,error,1223,https://root.cern,https://github.com/root-project/root/pull/1959,1,['error'],['error']
Availability,"by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d-d78474d7e0e1.png). And this is just after adding it, completely 'reset':. ![image](https://user-images.githubusercontent.com/10653970/180316839-3bc72bb9-7146-45ca-8133-5322e69ebeca.png). ### To Reproduce; ```cpp; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; TH",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11021:1254,ERROR,ERROR,1254,https://root.cern,https://github.com/root-project/root/issues/11021,1,['ERROR'],['ERROR']
Availability,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13898:116,avail,available,116,https://root.cern,https://github.com/root-project/root/pull/13898,1,['avail'],['available']
Availability,"by using TClass instead of the interpreter. As a side effect, the whole process is much faster. This fixes an incarnation of #14156, mitigating the overall effect of the highlighted behaviour. NOTE: A test is available but not yet pushed to this PR and will be added in stressgraphics.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14960:209,avail,available,209,https://root.cern,https://github.com/root-project/root/pull/14960,1,['avail'],['available']
Availability,"by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/interpreter/llvm/src/include/llvm/Support/Error.h:782!. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; 44	 return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;; (gdb) . ```; I will try with dwarf-5 for everything, let's see if that helps. At least GDB didn't crash this time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:2868,Failure,Failure,2868,https://root.cern,https://github.com/root-project/root/pull/11882,2,"['Error', 'Failure']","['Error', 'Failure']"
Availability,"c'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1771,error,error,1771,https://root.cern,https://github.com/root-project/root/issues/11515,1,['error'],['error']
Availability,"c++ standard gets downgraded during the compilation, because while compiling the `RRangeCast.hxx` it no longer recognize `std::span`. I am able to compile short C++ code involving `std::span`. This is the full error i get:. ```; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:27: error: ‘span’ is not a member of ‘std’; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:32: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:33: error: expected unqualified-id before ‘>’ token; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:26: error: ‘span’ is not a member of ‘std’; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:31: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:32: error: expected unqualified-id before ‘>’ token; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; make[2]: *** [core/imt/CMakeFiles/Imt.dir/build.make:132: core/imt/CMakeFiles/Imt.dir/src/RTaskArena.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32924: core/imt/CMakeFiles/Imt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. ### Reproducer. My [CMakeCache.txt](https://github.com/root-project/root/files/12080083/CMakeCache.txt) used for the build. ### ROOT version. ROOT 6.28.04. ### Installation method. build from source. ### Operating system. Ubuntu 20.04 running under WSL2. ### Additional context. Trying to build from source ROOT 6.28.04 with gcc 10.3 on WSL2 running ubuntu 20.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13270:1249,error,error,1249,https://root.cern,https://github.com/root-project/root/issues/13270,5,"['Error', 'error']","['Error', 'error']"
Availability,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:9123,avail,available,9123,https://root.cern,https://github.com/root-project/root/issues/11765,1,['avail'],['available']
Availability,"c/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~~~~~~; | kSplitIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~; | kIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’; 79 | {});; | ^; In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:; /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:1025,error,error,1025,https://root.cern,https://github.com/root-project/root/issues/13103,1,['error'],['error']
Availability,"c/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8401,error,error,8401,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"c/TGFrame.cxx:1485; [/Users/user/XXX/zevis/test/./frame.exe] main /Users/user/XXX/zevis/test/frame.cxx:81; [/usr/lib/system/libdyld.dylib] start (no debug info); ```. ### Expected behavior; No FPE. ### To Reproduce; ```; #include <TApplication.h>; #include <TGClient.h>; #include <TGFrame.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:3306,mask,masks,3306,https://root.cern,https://github.com/root-project/root/issues/6758,1,['mask'],['masks']
Availability,"c/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:17415,error,error,17415,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"c/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. Commented the body of the whole function. Got another error. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-para",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:3547,error,error,3547,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"c<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; Traceback (most recent call last):; File ""test.py"", line 39, in <module>; print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); cppyy.gbl.std.runtime_error: Template method resolution failed:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state.; ```. ### Expected behavior. Expected behavior that identical branch names don't interfere as they accessed with different tree aliases `cluster.vec` and `vertex.vec` and should be distinguished with the following output:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:4972,error,error,4972,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,"c_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:1574,error,error,1574,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"cale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. ... Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================; ...; ```; This PR fixes #14302",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:3163,error,error,3163,https://root.cern,https://github.com/root-project/root/pull/14335,3,"['Error', 'error']","['Error', 'error']"
Availability,"cat LinkDef.h:; ```cpp; #ifndef LinkDef_h; #define LinkDef_h. #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. using namespace ROOT::VecOps;. #include ""TwoInts.h"". #ifdef __CLING__; #pragma link C++ class TwoInts+;; #pragma link C++ class ROOT::VecOps::RVec<TwoInts>+;; #pragma link C++ class ROOT::VecOps::RVec<ROOT::VecOps::RVec<TwoInts>>+;; #pragma link C++ class ROOT::VecOps::RVec<ROOT::VecOps::RVec<int>>+;; #pragma link C++ class ROOT::VecOps::RVec<ROOT::VecOps::RVec<ROOT::VecOps::RVec<int>>>+;; #endif. #endif /* LinkDef_h */; ```. TwoInts.h:; ```c++; #ifndef TwoInts_h; #define TwoInts_h. #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>. using namespace ROOT::VecOps;. struct TwoInts {; int a, b;; };. #endif /* TwoInts_h */; ```. ROOT version 6.24/06. ```; rootcling -f mydict.cxx -rmf libmydict.rootmap -rml libmydict.so LinkDef.h; clang++ -shared -o libmydict.so mydict.cxx `root-config --cflags —libs; ```. The second command would fail with an error: no member named 'VecOps' in namespace ‘ROOT’ if LinkDef.h has includes, but TwoInts.h does not. Is that a feature or a bug?. cc: @ianna",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9920:977,error,error,977,https://root.cern,https://github.com/root-project/root/issues/9920,1,['error'],['error']
Availability,"category, and a RooSimultaneous pdf. The sim pdf does not contain a pdf for each value of the category, because some values are to be ignored in that stage of the fit. ; In ROOT 6.26 this segfaults, either in prepareSimultaneousModelForBatchMode (when batchmode is on) or in RooAbsData::split (when batchmode is off).; The issue in both functions is that they iterate over the values of the index category, and assume that each value has a corresponding pdf inside the RooSimultaneous. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No crash, the sim pdf fits the pdfs for the index it contains and ignores the rest. This used to work in ROOT 6.24 and earlier. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; void test_roosimcrash() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; RooThresholdCategory catThr(""cat"", """", rnd, ""v2"", 2);; catThr.addThreshold(1./3, ""v0"", 0);; catThr.addThreshold(2./3, ""v1"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""v0"");; sim.addPdf(g, ""v1"");; ; sim.fitTo(*ds, RooFit::Save(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; Broken in 6.26 from LCG dev4; Works in 6.24.06 from LCG_101. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10473:2292,down,download,2292,https://root.cern,https://github.com/root-project/root/issues/10473,1,['down'],['download']
Availability,cation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(deriv.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(eval.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(lt1-init.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(integ.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(error.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(stream.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(strerror.o): relocation R_X86_64_32S against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(qag.o): relocation R_X86_64_32S against symbol `gsl_integration_qk15' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgsl.a(qagp.o): relocation R_X86_64_32S against symbol `gsl_integration_qk21' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1996:1351,error,error,1351,https://root.cern,https://github.com/root-project/root/pull/1996,1,['error'],['error']
Availability,"cations to both RooFit and non-RooFit code were made as well:. 1. In `Minuit2`:; 1. We added a subclass of the AnalyticalGradientCalculator called the ExternalInternalGradientCalculator. Whereas the AGC assumes that the gradient that is passed to it (from outside of Minuit2) is in normal parameter space, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compati",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:2066,error,errors,2066,https://root.cern,https://github.com/root-project/root/pull/8294,1,['error'],['errors']
Availability,"ccepts a C-style string. In most cases, cppyy will just; tell you that the arguments don't match the function signature, but; there are corner cases in which an uninterpretable stack trace is; created. Here is a reproducer for that, inspired by the; RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python; import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>; MyClass(Args_t&&... args); : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }; {; _dataset->Print();; }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y); helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet); ```. This change should not break much user code, because a; `std::string_view` can also be implicitely constructed from a C-style; string or a TString. There is one problem if one passed a `nullptr` before, a; `std::string_view` can't be constructed from a `nullptr`. But a; `nullptr` for name and title is a mistake anyway, so it can be expected; from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14; standard, the `TString` to `string_view` conversion does not work.; However, this problem is solved by templated constructors that take; `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:; ```Python; import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000); dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \; .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.); x.setBins(10); y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)); rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); rooDataSet.GetPtr().Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8614:1555,error,error,1555,https://root.cern,https://github.com/root-project/root/pull/8614,1,['error'],['error']
Availability,"ccess ((__write_only__, 1, 3));. /* Append SRC to DEST, possibly with truncation to keep the total size; below N. */; extern size_t strlcat (char *__restrict __dest,; 		 const char *__restrict __src, size_t __n); __THROW __nonnull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration 'size_t strlcat(char*, const char*, size_t)'; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; ~~~. ### Reproducer. Compile root on a system using the latest dev version of glibc, e.g. Fedora Rawhide. ### ROOT version. 6.28.04. ### Installation method. RPM package build (uses mock, i.e. a cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:1357,error,error,1357,https://root.cern,https://github.com/root-project/root/issues/13156,1,['error'],['error']
Availability,"ce to ‘RDFInternal’ is ambiguous; RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};; ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;; namespace RDFInternal = ROOT::Internal::RDF;; ^; In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,; from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:; /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;; namespace RDFInternal = ROOT::Internal::RDF;; ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:; * Inside of namespace `ROOT::RDF` within RResultPtr.hxx; * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included; ```; using namespace ROOT::Detail::RDF;; using namespace ROOT::RDF;; ```; For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is disambiguated as follows:; * Removed all `using namespace` declarations.; * In headers, use `using Namespace::Class` sparingly, and introduce `namespace RDFDetail` and similar wherever possible.; * If only a few occurences are needed, use th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12981:1516,error,errors,1516,https://root.cern,https://github.com/root-project/root/pull/12981,1,['error'],['errors']
Availability,"ceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classificatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6989,Error,Error,6989,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Error'],['Error']
Availability,"ch y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4309,error,error,4309,https://root.cern,https://github.com/root-project/root/pull/3449,1,['error'],['error']
Availability,"ch y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the ind",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:3570,error,error,3570,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['error']
Availability,"ch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1436,error,error,1436,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"chain workflow. The first step creates an RNTuple that is read by the second step. We throw on the very first event of the second step, seemingly related to reading an empty top-level field, e.g. (the messages need to be improved but that's independent):. ```; 12:37:41 ERROR (pool):; 12:37:41 Unknown Source> field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo; 12:37:41 At:; 12:37:41 ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; 12:37:41 ; 12:37:41 EventData(xAOD::EventInfo_v1/EventInfo)> Cannot open ROOT container(Tree/Branch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std::string&) [with TRANS = xAOD::EventInfo_v1; PERS = xAOD::EventInfo_v1; std::string = std::__cxx11::basic_string<char>] while creating transient objectxAOD::EventInfo_v1/EventInfo: std::runtime_error: POOL read fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:1022,ERROR,ERROR,1022,https://root.cern,https://github.com/root-project/root/issues/16826,2,['ERROR'],['ERROR']
Availability,"char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```. ### To Reproduce; Steps to reproduce the behavior:; 1. I am building root through the CMake program with the command as recommended:; ```; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:2539,error,error,2539,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"cin is not seekable. Temporary stringstream is created to store cin. This patch fixes the error. But I am afraid using intermediate stringstream is not an efficient way, especially it costs a lot of memory if the input file is large. Any suggestion? @bbockelm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/84,1,['error'],['error']
Availability,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:490,Error,Error,490,https://root.cern,https://github.com/root-project/root/pull/13542,2,"['Error', 'avail']","['Error', 'available']"
Availability,"ckaging Guidelines some time ago added a section on packaging javascript files. This section says that minified scripts should be treated as compiled code. And like for programs written in other languages, pre-compiled code that is part of the sources must not be used in packaging, but must be regenerated from sources during the package build. I recently implemented these guidelines in the root package and found some issues. This pull request has three commits. 1) The word ""default"" is a reserved word in the language, and when used as a key in a dictionary it must be quoted. The yuicompressor minifier complains about this:; ```; $ yuicompressor etc/notebook/JsMVA/js/DecisionTree.js ; [ERROR] in etc/notebook/JsMVA/js/DecisionTree.js; 57:24:invalid property id; ```; 2. In one place (and one place only) in the script a construct from a very new version of the javascript standard is used for defining default values to function parameters. This unnecessarily makes the code incompatible with old browsers. It also makes it hard to run the minification during the package build as both yuicompressor and uglufyjs choke on it.; ```; $ yuicompressor etc/notebook/JsMVA/js/NeuralNetwork.js ; [ERROR] in etc/notebook/JsMVA/js/NeuralNetwork.js; 509:75:missing ) after formal parameters; ```; ```; $ uglifyjs etc/notebook/JsMVA/js/NeuralNetwork.js -c -m; Parse error at etc/notebook/JsMVA/js/NeuralNetwork.js:509,73; = function (divid, netobj, oldStructure=false) {; ^; SyntaxError: Unexpected token operator «=», expected punc «,»; ```; 3. The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some porting is needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520:1211,ERROR,ERROR,1211,https://root.cern,https://github.com/root-project/root/pull/1520,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"cked for duplicates. ### Description. When using Python in interactive mode, the web window does not launch properly (see screenshot). It works from a C++ macro. One can also save canvas contents in ROOT batch mode. ![image](https://github.com/root-project/root/assets/1557360/2181f05e-27bd-4473-9151-b28a90773900). ### Reproducer. ```python; import ROOT; import numpy as np. def main():; voltages = np.array([1,2,3], dtype=np.uint32); capacitances = np.array([4,5,6], dtype=np.float32). #ROOT.gROOT.SetBatch(True); df = ROOT.RDF.FromNumpy({'voltages': voltages, 'capacitances': capacitances}); df = df.Define('inv', '1/(capacitances*capacitances)'). c = ROOT.TCanvas(); graph = df.Graph('voltages', 'inv'); graph.Draw('APL'). c.SaveAs(""graph.pdf""). if __name__ == ""__main__"":; main(); ```; Output:; ```bash; $ python3 -i repro.py ; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9449; Opening in existing browser session.; [102887:102898:0312/160727.268507:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.Properties.Get: object_path= /org/freedesktop/portal/desktop: org.freedesktop.DBus.Error.InvalidArgs: No such interface “org.freedesktop.portal.FileChooser”; [102887:102898:0312/160727.268546:ERROR:select_file_dialog_linux_portal.cc(285)] Failed to read portal version property; [102887:102887:0312/160727.306050:ERROR:policy_logger.cc(156)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.; 13986 bytes written to file /home/jakob/Documents/CERN/ROOT/demo/graph.pdf; Info in <ProduceImage>: PDF file graph.pdf with 1 pages has been created; >>> ; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14943:1173,Error,Error,1173,https://root.cern,https://github.com/root-project/root/issues/14943,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"ckward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8783d361d25c13e2c65 is reverted (the commit mentions some fixes though); - CMake checks for `builtin_llvm=OFF` and sets the dir accordingly; - Some other path is found that prevents the issues mentioned in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 (maybe `CLING_BINARY_DIR`?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build from master with `builtin_llvm=OFF`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. git master, Debian Sid. ### Additional context; <!--; Add any other context about the problem here.; -->. /cc @hahnjo @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:2714,down,download,2714,https://root.cern,https://github.com/root-project/root/issues/12151,1,['down'],['download']
Availability,"clang-14 complains:; ```; warning: 'RFieldCallbackInjector' defined as a struct here but previously declared as a class; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11877:161,error,errors,161,https://root.cern,https://github.com/root-project/root/pull/11877,1,['error'],['errors']
Availability,"clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:4386,error,error,4386,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,clarify error message with bash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/11530,1,['error'],['error']
Availability,cling caches lookup failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12778:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/issues/12778,1,['failure'],['failure']
Availability,cling error recovery issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:6,error,error,6,https://root.cern,https://github.com/root-project/root/issues/7970,2,"['error', 'recover']","['error', 'recovery']"
Availability,cling: changes needed on MacOS to avoid G__Core.cxx generation failures complaining about time_point,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494:63,failure,failures,63,https://root.cern,https://github.com/root-project/root/pull/16494,1,['failure'],['failures']
Availability,"cloudpickle is the pickling package, which is used in dask and PySpark to serialize and distribute the work, e.g., functions or lambdas. The following reproducer breaks with cloudpickle (but is fine with the standard pickle) and throws the error `TypeError: cannot pickle 'ROOTFacade' object`, which is highly confusing. ```python; import ROOT; import cloudpickle. def foo():; ROOT.TH1F(); return 42. import cloudpickle as pickle # breaks with cloudpickle; #import pickle # works fine with the standard pickle. with open('f.pkl', 'wb') as f:; pickle.dump(foo, f); ```. A workaround is moving the `import ROOT` line inside the function `foo`, which seems to omit the underlying issue in cloudpickle. We have submitted a bug report to the cloudpickle repository, see cloudpipe/cloudpickle#397.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6764:240,error,error,240,https://root.cern,https://github.com/root-project/root/issues/6764,1,['error'],['error']
Availability,"clude <TROOT.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. void workload(TTreeReader &r) {; TTreeReaderArray<double> ra(r, ""truthCaloPt"");; while (r.Next()); ra.GetSize();; }. int main() {; ROOT::EnableImplicitMT(2);; ROOT::TTreeProcessorMT mt({""f1.root"", ""f2.root"", ""f3.root"", ""f4.root"", ""f5.root""}, ""t"");; mt.Process(workload);; }; ```. With these files: [files.zip](https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:1072,failure,failure,1072,https://root.cern,https://github.com/root-project/root/issues/10357,1,['failure'],['failure']
Availability,"clude <new>; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:17197,error,error,17197,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"clude/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous decl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:3949,error,error,3949,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"cluded from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous; byte * pNetworkData,; ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; root [1]; ```; To illustrate this, compiling this code:; ```; #include <iostream>; using namespace std;; #include <atlstr.h>. int main() {; std::cout << ""hello world!"" << std::endl;; return 0;; }; ```; is enough to generate the errors:; ```; C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx; atlstr.cxx; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:2473,error,error,2473,https://root.cern,https://github.com/root-project/root/issues/14602,2,['error'],"['error', 'errors']"
Availability,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11706:73,Error,Error,73,https://root.cern,https://github.com/root-project/root/pull/11706,2,['Error'],['Error']
Availability,cmake: clad config failures shown on CMake 3.14+,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6816:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/6816,1,['failure'],['failures']
Availability,"cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6725,error,error,6725,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,"code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). mu = ROOT.RooRealVar(""mu"", """", 0.5, 0, 1); gx = ROOT.RooGaussian(""gx"", """", x, mu, ROOT.RooFit.RooConst(0.2)); gy = ROOT.RooGaussian(""gy"", """", y, mu, ROOT.RooFit.RooConst(0.2)); g = ROOT.RooProdPdf(""g"", '', [gx, gy]). # works; condg1 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = (gy, {y})); condg2 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, y)); condg3 = ROOT.RooProdPdf(""g"", '', {gx}, Conditional = ({gy}, {y})). data = g.generate({x,y}, NumEvents = 10000). # often segfaults, valgrind reports problems; g.fitTo(data, Minos = {mu}, PrintLevel = -1). # both of these work; g.fitTo(data, ROOT.RooFit.Minos({mu}), PrintLevel = -1); g.fitTo(data, Minos = ROOT.RooArgSet(mu), PrintLevel = -1). # works; constr = ROOT.RooGaussian('c', '', mu, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.01)); g.fitTo(data, ExternalConstraints = {constr}, PrintLevel = -1). # works; gWithConstr = ROOT.RooProdPdf('gWC', '', [g, constr]); gWithConstr.fitTo(data, Constrain = {mu}, PrintLevel = -1). frame = x.frame(). # works; g.plotOn(frame, Components = {g}). # segfault/valgrind errors; g.plotOn(frame, Slice = {y}). # segfault/valgrind errors; g.plotOn(frame, Project = {y}). fitres = g.fitTo(data, PrintLevel = -1, Save = True); g.plotOn(frame, VisualizeError = (fitres, {x})). # valgrind reports problems; g.paramOn(frame, Parameters = {mu}). # segfault; datax = data.reduce(SelectVars = {x}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.07 from LCG dev4; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421:2949,error,errors,2949,https://root.cern,https://github.com/root-project/root/issues/11421,3,"['down', 'error']","['download', 'errors']"
Availability,"command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: Command not found; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The cause seems to be the `sed` substitutions at https://github.com/root-project/root/blob/aee48761f0c4a4d91d0a16c367ca3b66a597a484/graf2d/asimage/src/libAfterImage/configure#L2834 (thanks @chrisburr ). @dennisklein mentioned that in homebrew they work around the issue with [this patch](https://github.com/FairRootGroup/homebrew-fairsoft/blob/a0d012d9138c3673af171644340a58c7bd5cbc99/Formula/fairsoft%4020.11.rb#L105-L111). @amadio suggested we should ""use / as separator and escape the slashes that are part of the patterns themselves."". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build ROOT with built-in libafterimage in a directory with a path that contains a `@`. ### Additional context; <!--; Add any other context about the problem here.; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7786:2064,Error,Error,2064,https://root.cern,https://github.com/root-project/root/issues/7786,1,['Error'],['Error']
Availability,"commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler fla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1777,error,error,1777,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['error']
Availability,compilation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/14902,1,['error'],['error']
Availability,compile error using gcc 11 on 6.24.06,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9285:8,error,error,8,https://root.cern,https://github.com/root-project/root/issues/9285,1,['error'],['error']
Availability,"const*, int)':; TFile.cxx:(.text+0x5ddc): undefined reference to `__atomic_fetch_add_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesRead()':; TFile.cxx:(.text+0xb370): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesWritten()':; TFile.cxx:(.text+0xb390): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesRead(long long)':; TFile.cxx:(.text+0xb430): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesWritten(long long)':; TFile.cxx:(.text+0xb470): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileCounter()':; TFile.cxx:(.text+0xb4c0): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::IncrementFileCounter()':; TFile.cxx:(.text+0xb4f4): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; io/io/CMakeFiles/RIO.dir/build.make:599: recipe for target 'lib/libRIO.so' failed; make[3]: *** [lib/libRIO.so] Error 1; CMakeFiles/Makefile2:21040: recipe for target 'io/io/CMakeFiles/RIO.dir/all' failed; make[2]: *** [io/io/CMakeFiles/RIO.dir/all] Error 2; CMakeFiles/Makefile2:21052: recipe for target 'io/io/CMakeFiles/RIO.dir/rule' failed; make[1]: *** [io/io/CMakeFiles/RIO.dir/rule] Error 2; Makefile:5971: recipe for target 'RIO' failed; make: *** [RIO] Error 2; ```. Note that I had to add `${ROOT_ATOMIC_LIBS}` in a few more places than I would've liked. Ideally the linking against `libatomic` should've trickled down to almost all ROOT libraries from `libRIO`. I'm not sure why it didn't. :confused:. I was also wondering about possibly adding a platform / CPU check to the code, but in the end this seemed the safest. That if `libatomic` is available for the build, then the code would explicitly use it independent of what platform it is being ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561:2579,error,error,2579,https://root.cern,https://github.com/root-project/root/pull/4561,1,['error'],['error']
Availability,copy and pasting the tgraph example from doxygen i ran into two minor errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/268:70,error,errors,70,https://root.cern,https://github.com/root-project/root/pull/268,1,['error'],['errors']
Availability,copy&paste error in cmake comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/172:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/172,1,['error'],['error']
Availability,correct for Logx when drawing histogram errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4755:40,error,errors,40,https://root.cern,https://github.com/root-project/root/pull/4755,1,['error'],['errors']
Availability,"couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8164,error,error,8164,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,coverity 94012: removed redundant unreachable return statement			89a4a67; coverity 82573: fixed copy paste error fXaxis to fZaxis			1f8f137; coverity 82274: fixed uninitialised class members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/384:24,redundant,redundant,24,https://root.cern,https://github.com/root-project/root/pull/384,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Welcome to t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:1688,failure,failure,1688,https://root.cern,https://github.com/root-project/root/issues/16638,1,['failure'],['failure']
Availability,"cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:; compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8563:17,avail,available,17,https://root.cern,https://github.com/root-project/root/pull/8563,2,"['avail', 'error']","['available', 'error']"
Availability,"crash. I then managed to reproduce the crash on CentOS 7. I investigated the error, and it seems that std::stable_sort assumes that it can decrement and invalid pointer to get a pointer to the last array of an element. However, TTreeReaderArray invalidates the iterator by setting fArray=0 when fIndex is incremented to fIndex>=fSize. This means that the information about the associated array is lost, and the subsequent decrement and dereference will fail. I would assume this could be fixed by marking an invalid iterator with a special value for fIndex (instead of setting fArray=0). So my question would be if TTreeReaderArray is supposed to be sortable, or if I am trying something that's outside of the scope of the implementation?. I know my reproducer requires ALICE O2. ### Reproducer. I encountered the bug with a tree that holds classes from the ALICE O2 framework. I wrote a minimal macro `sortbug.C` that fails when run in compiled mode in an O2 root environment. Data files are available from https://cernbox.cern.ch/s/ypjoEC6awvYpjwR. The command is root `sortbug.C+`. The macro content is:; ```; #if !defined(__CLING__) || defined(__ROOTCLING__). #include <iostream>; //std::cout << ""including header files"" << std::endl;. #include <DataFormatsTRD/Digit.h>; #include <DataFormatsTRD/Tracklet64.h>. #include <TFile.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. #endif. /// comparison function to order digits by det / row / MCM / -channel; bool comp_digit(const o2::trd::Digit& a, const o2::trd::Digit& b); {; if (a.getDetector() != b.getDetector()); return a.getDetector() < b.getDetector();. if (a.getPadRow() != b.getPadRow()); return a.getPadRow() < b.getPadRow();. if (a.getROB() != b.getROB()); return a.getROB() < b.getROB();. if (a.getMCM() != b.getMCM()); return a.getMCM() < b.getMCM();. // sort channels in descending order, to ensure ordering of pad columns; if (a.getChannel() != b.getChannel()); return a.getChannel() > b.getChannel();. return true;; }; bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:1225,avail,available,1225,https://root.cern,https://github.com/root-project/root/issues/13314,1,['avail'],['available']
Availability,"critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:69; #12 0x00007ffff63e9939 in hep::concurrency::QueuedTask<hep::concurrency::SerialTaskQueueChain::passDown(unsigned int, const T&) [with T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6132,error,error,6132,https://root.cern,https://github.com/root-project/root/issues/6939,1,['error'],['error']
Availability,"cs/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:2361,error,error,2361,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,"cted Volume. ### Expected behavior; After alignment of the nodes, all volumes/nodes are offset/rotated with their other properties valid.; Or if not possible due to performance, a warning should be printout with hint of the proper way to restore/recompute these values. A temporary fix was introduced for now in FairRoot, which is to simply do the recompute for all TGeoVolumeAssembly in the geometry tree, which seems to be fast enough that we do not have to try to track affected Volumes to be more selective. ; This may however not be the case later when applied to complete geometries for experiments like CBM. ### To Reproduce; Steps to reproduce the behavior with the attached files (includes ""ROOT-only"" examples both for problem and for macro-level fix):; 1. Compile a copy of ROOT 6.22.08 (done with FairSoft apr21p2 and FairRoot v18.6.7, should work with any older versions of each and with recent versions of FairRoot, as well as with a standalone version of ROOT); 1. Download [BboxAlignPb_example_2023_02_07.zip](https://github.com/root-project/root/files/10674368/BboxAlignPb_example_2023_02_07.zip) and unzip the macro, the standard container dictionary header and the two root files in a folder; 1. Go to this folder, load your ROOT environment; 1. Run; ```; root -l -b; root [0] .L alignment_map_def.h+; root [1] .x BboxAlignBug.C(""mcbm_beam_2022_05_23_nickel.geo.root"", ""AlignmentMatrices_mcbm_beam_2022_05_23_nickel.root""); ```; Of the 3 transformations visible in the printout; - Two are applied to TGeoVolumeAssembly objects and lead to these assembly having zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0` and `/cave_1/sts_v22e_mcbm_0/Station01_1`); - One is applied to a Node and leads to 2 TGeoVolumeAssembly higher in the hierarchy to have zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0/Station02_2/Ladder10_2/HalfLadder10d_2/HalfLadder10d_Module04_2`); <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:2283,Down,Download,2283,https://root.cern,https://github.com/root-project/root/issues/12242,1,['Down'],['Download']
Availability,"cted behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Events"", ""D.root"", colNames);; std::cout << c.GetValue() << std::endl;; """"""); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Any recent root version should behave the same. This was first seen in 6.18, 6.20... now confirmed still present in 6.25 (.../dev3/Sun/... build), as obtained via the LCG stack.; ```; export SCRAM_ARCH=slc7_amd64_gcc830; source /cvmfs/sft.cern.ch/lcg/views/dev3/Sun/x86_64-centos7-gcc8-opt/setup.sh; ```; Reproduced on lxplus (CC7). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500:2191,down,download,2191,https://root.cern,https://github.com/root-project/root/issues/7500,1,['down'],['download']
Availability,"cted behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:3079,mask,mask,3079,https://root.cern,https://github.com/root-project/root/issues/6449,1,['mask'],['mask']
Availability,"ctor Name=""poi"" Val=""1"" High=""10"" Low=""0"" Const=""False"" />; </Sample>. </Channel>; ```. and when I run this through `hist2workspace`, I get the following error:. ```; $ hist2workspace meas.xml. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#2] INFO:HistFactory -- hist2workspace is less verbose now. Use -v and -vv for more details. ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute InputFile of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoName of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoPath of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; [#2] ERROR:HistFactory -- Loading of xml document ""./meas_channel_0.xml"" failed; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```. which is correctly erroring, but also somewhat confusing. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS (13.0.1 (22A400)). ### Additional context. This comes out of scikit-hep/pyhf#2247 (please read that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:4208,error,error,4208,https://root.cern,https://github.com/root-project/root/issues/13287,1,['error'],['error']
Availability,"cts/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16613:1546,error,error,1546,https://root.cern,https://github.com/root-project/root/issues/16613,1,['error'],['error']
Availability,"cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: note: '__nvvm_atom_sys_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:192:18: error: static declaration of '__exp10f' follows non-static declaration; __DEVICE__ float __exp10f(float __a) { return __nv_fast_exp10f(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:114:1: note: previous declaration is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:4824,error,error,4824,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725:144,error,error,144,https://root.cern,https://github.com/root-project/root/pull/7725,1,['error'],['error']
Availability,"d /reproducer; + git clone -b master --depth 1 http://github.com/root-project/root source; Cloning into 'source'...; (...skip...); + git -C source log; commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1606,error,errors,1606,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['errors']
Availability,"d `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception?. ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz); * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz); * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:2550,error,error,2550,https://root.cern,https://github.com/root-project/root/issues/9583,1,['error'],['error']
Availability,"d by; transaction created during the callbacks executed during the; ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':; ```; int main(int argc, char ** argv); {; char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";; auto const result [[gnu::unused]] = TClass::GetClass(class_string);; return 0;; }; ```; which is a representation of real use case (in a more complex setup) in ART.; We were getting:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; (*(TStreamerInfo**)ret) = new TStreamerInfo();; return;; }; else {; new TStreamerInfo();; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented!; Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:731,Error,Error,731,https://root.cern,https://github.com/root-project/root/pull/2776,6,['Error'],['Error']
Availability,"d during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:2044,Failure,Failure,2044,https://root.cern,https://github.com/root-project/root/issues/11515,1,['Failure'],['Failure']
Availability,"d for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:11041,error,error,11041,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"d for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295:942,Error,Error,942,https://root.cern,https://github.com/root-project/root/issues/7295,2,['Error'],['Error']
Availability,d from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; Whi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:2188,error,error,2188,https://root.cern,https://github.com/root-project/root/issues/16486,1,['error'],['error']
Availability,"d from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; W",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:2451,error,error,2451,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:4245,Error,Error,4245,https://root.cern,https://github.com/root-project/root/issues/7936,4,"['Error', 'error']","['Error', 'error']"
Availability,"d"" executor for ROOT, that takes an execution policy as a parameter and initializes the corresponding data member executor to execute on. ```cpp; ROOT::Internal::TExecutor x1{}; // defaults to multithreaded if IMT enabled, otherwise sequential; ROOT::EnableImplicitMT();; ROOT::Internal::TExecutor x2{};; ROOT::Internal::TExecutor x3(ROOT::Internal::ExecutionPolicy::kMultithread, 20); // will actually have ROOT::GetPoolSize() threads; ROOT::Internal::TExecutor x4(ROOT::Internal::ExecutionPolicy::kMultiprocess, 8);; ROOT::Internal::TExecutor x5(ROOT::Internal::ExecutionPolicy::kSerial, 8); //nProcessing units is ignored in this case. x1.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; x2.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x3.Map([](){return 1;}, 20); // runs TThreadExecutor::Map; x4.Map([](){return 1;}, 20); // runs TProcessExecutor::Map; x5.Map([](){return 1;}, 20); // runs TSequentialExecutor::Map; ```. * If ROOT is compiled with the flag `IMT=OFF`, kMultithread will not be available as an execution policy. In this case we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:1111,avail,available,1111,https://root.cern,https://github.com/root-project/root/pull/6327,1,['avail'],['available']
Availability,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10680:1776,error,error,1776,https://root.cern,https://github.com/root-project/root/issues/10680,3,['error'],['error']
Availability,"d); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2603,ERROR,ERROR,2603,https://root.cern,https://github.com/root-project/root/issues/7936,1,['ERROR'],['ERROR']
Availability,"d-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:2082,error,error,2082,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability,"d.dir/src/TStructNodeEditor.cxx.o; In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function.; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:1176,error,error,1176,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"d/release/roottest/root/dataframe/test_ctors_C.dll; 1306: In file included from input_line_9:9:; 1306: In file included from C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C:4:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDataFrame.hxx:20:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/RInterface.hxx:15:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/ActionHelpers.hxx:25:; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1434:36: error: use of undeclared identifier 'M_PI'; 1306: T DeltaPhi(T v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:1568,error,error,1568,https://root.cern,https://github.com/root-project/root/pull/6727,1,['error'],['error']
Availability,"d; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here; #include <initializer_list>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // common_type_t, make_signed_t; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Sof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:24927,error,error,24927,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"d>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; none of the 3 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; ```. This is because instead of `ROOT.RDF.RNode`, one should use `ROOT.RDF.AsRNode`. It would be great if the documentation can be updated (or the method updated so that it does not throw error). ### ROOT version. 6.30/04. ### Installation method. LCG (Swan). ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:2786,error,error,2786,https://root.cern,https://github.com/root-project/root/issues/15040,1,['error'],['error']
Availability,"d>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in spec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:29406,Error,Error,29406,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Error'],['Error']
Availability,"d\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:2226,error,error,2226,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability,"d_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:17072,error,error,17072,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"da --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:1384,error,error,1384,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,dataframe_concurrency LLVM valgrind error: SelectionDAG::Combine,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/8899,1,['error'],['error']
Availability,"de <chrono>. void foo() {; std::chrono::time_point<std::chrono::system_clock,; std::chrono::nanoseconds> tp;; std::chrono::floor<std::chrono::seconds>(tp);; }; ```; Trying to build; ```; $ c++ $(root-config --cflags) -std=c++17 -c a.cpp ; In file included from a.cpp:1:; In file included from /Users/telzhov/opt/root/include/Vc/vector.h:32:; /Users/telzhov/opt/root/include/Vc/scalar/../common/../sse/../scalar/vector.h:50:5: error: static_assert failed due to requirement 'std::is_arithmetic<std::chrono::duration<long long, std::ratio<1, 1>>>::value' ""Vector<T> only accepts arithmetic builtin types as template parameter T.""; static_assert(std::is_arithmetic<T>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/chrono:1427:67: note: in instantiation of template class 'Vc_1::Vector<std::chrono::duration<long long>, Vc_1::VectorAbi::Scalar>' requested here; return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/chrono:1427:44: note: while substituting deduced template arguments into function template 'floor' [with T = std::chrono::duration<long long>]; return time_point<_Clock, _ToDuration>{floor<_ToDuration>(__t.time_since_epoch())};; ^; a.cpp:7:18: note: in instantiation of function template specialization 'std::chrono::floor<std::chrono::duration<long long>, std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>>' requested here; std::chrono::floor<std::chrono::seconds>(tp);; ^; 1 error generated.; ```; Try to comment out the line which includes Vc/vector.h, and you'll find that it works; ### Setup; 1. ROOT version: **6.26/10**; 2. Operating system: **macOS 12.6.1, clang 14.0.0 (clang-1400.0.29.202)**; 3. How you obtained ROOT: **binary download** (root_v6.26.10.macos-12.6-x86_64-clang140.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11934:2884,error,error,2884,https://root.cern,https://github.com/root-project/root/issues/11934,2,"['down', 'error']","['download', 'error']"
Availability,"de an additional test. This test fails on Intel 32 bit Fedora Linux: The error is: symbol '__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/modules/RootTestDriver.cmake:237 (message):; error code: 1; ```; ### Expected behavior; Successful test on all architectures. ### To Reproduce; 1. Compile root 6.22.04 for ix32; 2. Run unit tests. ### Setup; 1. ROOT version: 6.22.04; 2. Operating system: F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:1288,ERROR,ERROR,1288,https://root.cern,https://github.com/root-project/root/issues/6813,1,['ERROR'],['ERROR']
Availability,de bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1246; /opt/root_src/core/base/src/TDirectory.cxx:1260:21: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1180; 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1180; 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1183; 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577; 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577; 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577; 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568; 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577; 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1183; 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300; 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248; 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248; 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248; 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300; 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300; 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1184; 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:107320,mask,mask,107320,https://root.cern,https://github.com/root-project/root/issues/7412,1,['mask'],['mask']
Availability,"de that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, true)); // in theory the same as pdf1; RooProdPdf pdf3(""pdf3"", """", RooArgSet(errPdf), Conditional(decayPdf, xErr, false)); // wrong, normalizes decay in xErr and not in x; ; auto data = pdf1.generate(RooArgSet(x, xErr), NumEvents(10000));; ; // works with BatchMode = ""cpu"", because depsAreCond is false; pdf1.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // bad fit, actually normalizes as if decayPdf was normalized in xErr (ignores depsAreCond); tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // works without batchmode; tau.setVal(0.4);; pdf2.fitTo(*data; , Save(true); //, BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; ; // same as pdf2 with BatchMode; tau.setVal(0.4);; pdf3.fitTo(*data; , Save(true); , BatchMode(""cpu""); , PrintLevel(-1); )->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master, from LCG dev3; ROOT 6.26.07 from LCG dev4; works in ROOT 6.24.06 from LCG 101. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332:3091,down,download,3091,https://root.cern,https://github.com/root-project/root/issues/11332,1,['down'],['download']
Availability,"de/Rtypes.h:29:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/stl_algobase.h> // std::copy, std::fill_n; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:21100,error,error,21100,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,de/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/find.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwchar:112:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwctype:56:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/wctype.h:68:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_wctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 's,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:11645,error,error,11645,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"de/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: error: reference to __device__ function '__nvvm_atom_add_gen_f' in __host__ function; return __nvvm_atom_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:195:10: note: '__nvvm_atom_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:7643,error,error,7643,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"de\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:1537,error,error,1537,https://root.cern,https://github.com/root-project/root/issues/16638,1,['error'],['error']
Availability,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:1790,error,error,1790,https://root.cern,https://github.com/root-project/root/issues/11797,1,['error'],['error']
Availability,"ded from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -writeEmptyRootPCM -D -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:13730,Error,Error,13730,https://root.cern,https://github.com/root-project/root/issues/11381,1,['Error'],['Error']
Availability,"delete operators. ### Expected behavior. Failures like these should not happen:. ```; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1262,Error,Error,1262,https://root.cern,https://github.com/root-project/root/issues/10203,1,['Error'],['Error']
Availability,"des>:5:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/ccomplex:39:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/complex:42:; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:102:23: error: use of undeclared identifier '_Tp'; struct __are_same<_Tp, _Tp>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:25: error: use of undeclared identifier '_Tp'; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:29: error: expected expression; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:329:37: error: declaration of '_Tp' must be imported from module 'stl.ccomplex' before it is required; : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:327:21: note: previous declaration is here; template<typename _Tp>; ^; ```. Original patch description:. When we enter a module within a linkage specification, switch the linkage; specification and the TU to the new module. This is necessary to get the module ownership correct for entities that we; temporarily hang off the TranslationUnitDecl, such as template parameters and; function parameters. git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@303373 91177308-0d34-0410-b5e6-96231b3b80d8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016:1343,error,error,1343,https://root.cern,https://github.com/root-project/root/pull/1016,2,['error'],['error']
Availability,"desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; Error in <DavixOpen>: can not open file ""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root"" with davix: Result HTTP 401 : Authentification Error after 3 attempts (14); [desilva@lxplus7107 rootTest]$ echo $?; 1; [desilva@lxplus7107 rootTest]$ ; ```. note that xrootd access works for LCG_100 even though webdav fails above; eg:; ```; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""root://xrootd.lcg.triumf.ca:1094//atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 14 2021, 14:33:50 |; | From tags/v6-24-00@v6-24-00 |; | With g++ (GCC) 8.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; Processing ./read_file.C...; root://xrootd.lcg.triumf.ca:1094",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:2712,Error,Error,2712,https://root.cern,https://github.com/root-project/root/issues/8092,2,"['Error', 'echo']","['Error', 'echo']"
Availability,"device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:20: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:245:16: error: static declaration of '__finitef' follows non-static declaration; __DEVICE__ int __finitef(float __a) { return __nv_finitef(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h:33:1: note: previous declaration is here; __MATHDECL_1 (int, __finite,, (_Mdouble_ __value)) __attribute__ ((__const__));; ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:9889,error,error,9889,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,dictionary payload parsing diagnostics: no more error message when header not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:48,error,error,48,https://root.cern,https://github.com/root-project/root/issues/6791,1,['error'],['error']
Availability,"ding module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:1815,error,error,1815,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"dio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. ... Assertion failed: !m_Unloading && ""Must not nest within unloading trans",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:2485,error,error,2485,https://root.cern,https://github.com/root-project/root/pull/14335,2,['error'],['error']
Availability,"dir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0xe4ba401e in ?? (); #41 0xf11db85c in cling::IncrementalExecutor::executeWrapper () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:217; #42 0xf1160628 in cling::Interpreter::RunFunction () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1180; #43 0xf11639fe in cling::Interpreter::EvaluateInternal () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1432; #44 0xf116431c in cling::Interpreter::echo () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1082; #45 0xf1246c9d in operator() () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:7614,echo,echo,7614,https://root.cern,https://github.com/root-project/root/issues/15738,2,['echo'],['echo']
Availability,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106:1800,error,errors,1800,https://root.cern,https://github.com/root-project/root/issues/9106,4,"['Error', 'avail', 'error']","['Error', 'available', 'error', 'errors']"
Availability,"dom"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:2452,Error,Errors,2452,https://root.cern,https://github.com/root-project/root/issues/7567,1,['Error'],['Errors']
Availability,"ds/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] std::span<int> s; (std::span<int> &) {}; root [1] ; ```; which looks wrong to me. ### What is the expected behaviour?. `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce?. from lxplus.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'; module ""span"" {; ^; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here; #include <span>; ^; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed.; ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032:2166,error,error,2166,https://root.cern,https://github.com/root-project/root/issues/13032,1,['error'],['error']
Availability,"dule 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:14893,error,error,14893,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10898:4948,failure,failures,4948,https://root.cern,https://github.com/root-project/root/issues/10898,1,['failure'],['failures']
Availability,"dy. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1016,avail,available,1016,https://root.cern,https://github.com/root-project/root/pull/5151,1,['avail'],['available']
Availability,dynamically ask cuDNN about available number of algorithms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6150:28,avail,available,28,https://root.cern,https://github.com/root-project/root/pull/6150,1,['avail'],['available']
Availability,"e 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build directory` of your ROOT checkout, run:. ```; ""C:\Program Files\CMake\bin\cmake.exe"" ..; ""C:\Program Files\CMake\bin\cmake.exe"" --build .; ""C:\Program Files\CMake\bin\cmake.exe"" --build . --target package; ```. This creates a `.exe` installer file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:1443,Mainten,Maintenence,1443,https://root.cern,https://github.com/root-project/root/pull/1680,1,['Mainten'],['Maintenence']
Availability,"e <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invok",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8379,error,error,8379,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"e = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::List",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4201,error,error,4201,https://root.cern,https://github.com/root-project/root/issues/11602,1,['error'],['error']
Availability,"e C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:3727,error,error,3727,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability,"e TGraphPainter class. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimens",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4065,error,errors,4065,https://root.cern,https://github.com/root-project/root/pull/3449,1,['error'],['errors']
Availability,"e are a number of trivial operations that users often want to perform on dataframes that are surprisingly hard to get right, for example adding several `Define`s in a loop or conditionally adding a `Filter` depending on a runtime boolean (both use-cases are challenging in C++, trivial in python). The way I see it, difficulties boil down to the fact that different dataframe nodes have different types (because their types incorporate e.g. the type of the callable passed to a `Filter` and the type of their parent node in the computation graph). In this PR I propose to add a common base class `ROOT::RDF::RNode` to all nodes of the graph (except leaves a.k.a results, which have a completely different interface),; so that users can, for example:; * take any dataframe node by reference in non-template functions as `RNode&`; * `emplace_back` dataframe nodes in ~`std::vector<RNode>`~ `vector<RInterface<RNode>>`; * have non-const pointers to dataframe nodes. and so on. For example, conditionally adding a `Range` do a dataframe now looks like this:. ```c++; auto maybe_ranged = [&df, mustAddRange] { ; return mustAddRange ? ROOT::RDF::RNode(d.Range(1)); : ROOT::RDF::RNode(d); ; }(); ; ```. while before this PR one would have to add fake `Filter(""true"")` filters to normalize the return type of the lambda, involving the interpreter for no reason. Internal `RDataFrame` code is also simplified by the introduction of this common base class.; The only downside I can think of is that if this mechanism is abused users might end up with extra, unnecessary virtual calls in their event loop -- on the other hand, this mechanism should only be used in situations that required either complex template magic or dirty and slow tricks before. Questions:; * can we come up with a better name than `ROOT::RDF::ToCommonNodeType` for the function that upcasts any dataframe object to the same type?; * should this cast only be explicit through an upcasting function call or should we allow implicit casts?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182:1461,down,downside,1461,https://root.cern,https://github.com/root-project/root/pull/2182,1,['down'],['downside']
Availability,"e configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2180,failure,failures,2180,https://root.cern,https://github.com/root-project/root/issues/9436,1,['failure'],['failures']
Availability,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669:1571,avail,available,1571,https://root.cern,https://github.com/root-project/root/issues/7669,2,"['avail', 'down']","['available', 'download']"
Availability,"e histogram and with its error (`fSumw2`) set, and should not change the original histogram. However, it turns out that it doesn't set the error for the new histogram, but (incorrectly) modify the bin error of the original histogram into the value that should have been assigned to the generated histogram. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The `TH1::GetCumulative()` method generates the corresponding cumulative histogram with `fSumw2` set (when the original histogram has its `fSumw2` set) while keeping the original histogram intact. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; In the ROOT interactive prompt,; ```; root [0] TH1 *h1 = new TH1D(""h1"", ""h1"", 8, 0., 8.);; root [1] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [2] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [3] h1->GetBinError(1); (double) 0.70710678; root [4] h1->GetBinError(2); (double) 0.70710678; root [5] sqrt(2) / 2; (double) 0.70710678; root [6] TH1 *h1Cumu = h1->GetCumulative(false);; root [7] h1Cumu->GetBinError(1); (double) 0.0000000; root [8] h1Cumu->GetBinError(2); (double) 0.0000000; root [9] h1->GetBinError(1); (double) 2.0000000; root [10] h1->GetBinError(2); (double) 1.8708287; ```. ### Setup. 1. ROOT Version: 6.26/08; 2. Built for linuxx8664gcc (NixOS) on Jan 01 1980, 00:00:00; 3. From [Nixpkgs](https://github.com/NixOS/nixpkgs). ### Additional context; <!--; Add any other context about the problem here.; -->. The error may be caused by ; https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L2619; and; https://github.com/root-project/root/blob/master/hist/hist/src/TH1.cxx#L2633; where the cumulative error is assigned to the `fSumw2` of the original histogram.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11947:2269,error,error,2269,https://root.cern,https://github.com/root-project/root/issues/11947,2,['error'],['error']
Availability,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:2460,down,download,2460,https://root.cern,https://github.com/root-project/root/issues/7788,1,['down'],['download']
Availability,"e provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception?. ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz); * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz); * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:2176,Error,Error,2176,https://root.cern,https://github.com/root-project/root/issues/9583,1,['Error'],['Error']
Availability,"e statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2382,error,error,2382,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['error']
Availability,"e system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1243,Error,Error,1243,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability,"e the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When building with native LLVM (with CMake flag `-Dbuiltin_llvm=OFF`) with Nix and Nixpkgs, the builder tries to place `lib/cmake/cling/ClingConfig.cmake.tmp` under the read-only `/path/to/native/llvm/lib/`, and gets System Error. Not sure if this issue is reproducible on other platforms. Partial command line output:; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:1338,Error,Error,1338,https://root.cern,https://github.com/root-project/root/issues/11920,1,['Error'],['Error']
Availability,"e there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. I hope you fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4523,Error,Errors,4523,https://root.cern,https://github.com/root-project/root/pull/3449,3,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:2136,down,download,2136,https://root.cern,https://github.com/root-project/root/issues/8942,1,['down'],['download']
Availability,"e':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:4196,error,error,4196,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"e() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libTree.so; #8 0x00007f5acebeb4f8 in THashList::Delete(char const*) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #9 0x00007f5aceb37e7a in TROOT::EndOfProcessCleanups() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #10 0x00007f5acec9161f in TUnixSystem::Exit(int, bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-proje",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:9547,Error,Error,9547,https://root.cern,https://github.com/root-project/root/issues/8857,1,['Error'],['Error']
Availability,"e); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8783d361d25c13e2c65 is reverted (the commit mentions some fixes though); - CMake checks for `builtin_llvm=OFF` and sets t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:1072,Error,Error,1072,https://root.cern,https://github.com/root-project/root/issues/12151,3,['Error'],['Error']
Availability,"e.h:46:; /usr/include/c++/13/bits/utility.h:219:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp>>'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; /usr/include/c++/13/bits/stl_pair.h:62:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.bits/stl_pair.h'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /opt/root_build/etc/cling/std.modulemap:505:10: note: std.bits/stl_pair.h defined here; module ""bits/stl_pair.h"" {; ^; /usr/include/c++/13/bits/memory_resource.h:46:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.memory_resource'; # include <bits/utility.h> // index_sequence; ^; /opt/root_build/etc/cling/std.modulemap:257:10: note: std.memory_resource defined here; module ""memory_resource"" [optional] {; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:1525,error,error,1525,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,"e/<user>/root_install; Compiler GNU 13.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:4517,Error,Error,4517,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability,"e/GaudiKernel/ChronoEntity.h:19:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7950:1581,error,error,1581,https://root.cern,https://github.com/root-project/root/issues/7950,1,['error'],['error']
Availability,"e/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/io/CMakeFiles/G__RIO.dir/build.make:146: io/io/G__RIO.cxx] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:25435,error,error,25435,https://root.cern,https://github.com/root-project/root/issues/11381,6,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failure']"
Availability,"e/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:217:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 217 | auto TExecutorCRTP<SubC>::Map(F func, std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecuto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:4864,error,error,4864,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,"e/base/inc -I/home/maxnoe/Downloads/root-6.28.04/core/clib/inc -I/home/maxnoe/Downloads/root-6.28.04/core/meta/inc -I/home/maxnoe/Downloads/root-6.28.04/core/cont/inc -I/home/maxnoe/Downloads/root-6.28.04/core/gui/inc -I/home/maxnoe/Downloads/root-6.28.04/core/thread/inc -I/home/maxnoe/Downloads/root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1398,Down,Downloads,1398,https://root.cern,https://github.com/root-project/root/issues/13529,1,['Down'],['Downloads']
Availability,"e/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1811,error,error,1811,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"e/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:17645,error,error,17645,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"e/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:17809,error,error,17809,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"e/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:3086,error,error,3086,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,"e/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #17 0x00007fa76af8a0bc in HandleInterpreterException (metaProcessor=0x243df60, input_line=0x7fff0771e079 ""sortbug()"", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:8911,error,error,8911,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,"e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1277,Error,Error,1277,https://root.cern,https://github.com/root-project/root/issues/11787,1,['Error'],['Error']
Availability,"e; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; // Create a model from the input tree; auto model = RNTupleModel::CreateBare();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; // The dynamic cast to TBranch should never fail for GetListOfBranches(); assert(b);. // We assume every branch has a single leaf; a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:10836,error,error,10836,https://root.cern,https://github.com/root-project/root/issues/13996,1,['error'],['error']
Availability,e;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:238:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/stdexcept:46:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstdlib:144:9: error: no member named 'at_quick_exit' in the global namespace; using ::at_quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstdlib:145:9: error: no member named 'quick_exit' in the global namespace; using ::quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Develop,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:11421,error,error,11421,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"eCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\git",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2161,error,error,2161,https://root.cern,https://github.com/root-project/root/issues/9487,1,['error'],['error']
Availability,eMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6180,error,error,6180,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,e_cxxmodules shared sqlite ssl tmva tmva-cpu spectrum vdt xml xrootd; -- Configuring done (6.2s); -- Generating done (2.2s); -- Build files have been written to: /Users/marcomeyer/Software/root/build; ```. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:421:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/invoke.h:23:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_object_pointer.h:35:56: error: use of undeclared identifier '__remove_cv_t'; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_obj > {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_object_pointer.h:35:78: error: no type named '__is_obj' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_obj > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:456:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_compound.h:14:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_funda,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:6028,error,error,6028,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"ead #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44; frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195; frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154; frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378; frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107; frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11; frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:2766,Error,Error,2766,https://root.cern,https://github.com/root-project/root/issues/14075,1,['Error'],['Error']
Availability,"eader 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:2791,error,error,2791,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"eady----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context; This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:4429,down,down,4429,https://root.cern,https://github.com/root-project/root/issues/11784,1,['down'],['down']
Availability,"eck duplicate issues. - [X] Checked for duplicates. ### Description. When having fields with mixed STL types sometimes you run into issues when trying to fill them. I've attached an example below. ### Reproducer. This is a minimal script that shows that issue. ```cpp; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriter.hxx>; ; #include <TSystem.h>; ; #include <vector>; #include <variant>; #include <optional>; ; using RNTupleModel = ROOT::Experimental::RNTupleModel;; using RNTupleWriter = ROOT::Experimental::RNTupleWriter;; ; void ntpl_issue(); {; auto model = RNTupleModel::Create();; ; auto fldVvar = model->MakeField<std::vector<std::variant<std::optional<int>,float>>>(""vvar"");; ; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""F"", ""ntpl_issue.root"");; ; for (int i = 0; i < 10; i++) {; fldVvar->clear();; ; for (int j = 0; j < 5; ++j) {; std::variant<std::optional<int>,float> var(1.0);; fldVvar->emplace_back(var);; }; ; ntuple->Fill();; }; }; ```. And this is the error that it produces.; ```; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 2432 of `.../root_src/tree/ntuple/v7/src/RField.cxx'; aborting; ```. Another way to get it to fail is by using `std::vector<std::variant<std::atomic<int>,float>>`. ### ROOT version. 6.33/01 (commit eef2244). ### Installation method. Built from source. ### Operating system. macOS. ### Additional context. I found this issue while trying to generate `std::variant` types in an invalid state by doing something like this. ```cpp; struct S {; operator int() { throw 42; }; };. std::variant<int,float> var;; try {; var = S();; } catch (int) {}; fldVvar->emplace_back(var);; ```. The spec indicates that invalid states are supported, as shown in the line below. I wanted to ask what's the reason for them being supported given that they are not really supposed to be ""legal"", and it seems like one can't successfully generate an RNTuple with an invalid state. It either ends up initializing the first variant or it c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534:1003,error,error,1003,https://root.cern,https://github.com/root-project/root/issues/15534,1,['error'],['error']
Availability,"eck failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT version. master. ### Installation method. hand build. ### Operating system. Alma9 . ### Additional context. Node is VM with 128GB of RAM and is access via Jupyter notebook.; ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ uname -a; Linux jupyter-pcanal-rootdevel 6.3.12-200.fc38.x86_64 #1 SMP PREEMPT_DYNAMIC Thu Jul 6 04:05:18 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; CPU(s): 127; On-line CPU(s) list: 0-126; Vendor ID: AuthenticAMD; Model name: AMD EPYC 7543 32-Core Processor; CPU fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:4630,ERROR,ERROR,4630,https://root.cern,https://github.com/root-project/root/issues/16552,1,['ERROR'],['ERROR']
Availability,"eckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Int",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:1453,error,error,1453,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"eclaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:3149,error,error,3149,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability,ectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TMacOSXSystem.h TUnixSystem.h /Users/josiahlee/WORK/Tools/root-6.32.04/core/base/inc/LinkDef.h; 1.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:319:5: current parser token 'using'; 2.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:33:1: parsing namespace 'cling'; 3.	/Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimePrintValue.h:318:3: in compound statement ('{}'); Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Reproducer. build from source. ### ROOT version. 6.32.04. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:17439,fault,fault,17439,https://root.cern,https://github.com/root-project/root/issues/16498,4,"['Error', 'fault']","['Error', 'fault']"
Availability,"ected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:1037,error,error,1037,https://root.cern,https://github.com/root-project/root/issues/15413,1,['error'],['error']
Availability,"ectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:3105,error,error,3105,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"ectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:4537,error,error,4537,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"ects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:12234,down,download,12234,https://root.cern,https://github.com/root-project/root/issues/8578,1,['down'],['download']
Availability,"ecutable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for your help!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:4881,Error,Error,4881,https://root.cern,https://github.com/root-project/root/issues/14479,5,['Error'],['Error']
Availability,"ed object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:4188,error,error,4188,https://root.cern,https://github.com/root-project/root/pull/12449,2,['error'],['error']
Availability,"edef unsigned char byte;; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; In file included from ROOT_prompt_0:1:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous; byte * pNetworkData,; ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; root [1]; ```; To illustrate this, compiling this code:; ```; #include <iostream>; using namespace std;; #include <atlstr.h>. int main() {; std::cout << ""hello world!"" << std::endl;; return 0;; }; ```; is enough to generate the errors:; ```; C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx; atlstr.cxx; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:2190,error,error,2190,https://root.cern,https://github.com/root-project/root/issues/14602,1,['error'],['error']
Availability,"edfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/redhat-release. CentOS Linux release 7.8.2003 (Core); ```. CMSSW setup to obtain ROOT:; ```; cmsrel CMSSW_10_6_5; cd CMSSW_10_6_5/src; cmsenv; ```. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:2313,Error,Error,2313,https://root.cern,https://github.com/root-project/root/issues/11372,4,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"eed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:2464,error,errors,2464,https://root.cern,https://github.com/root-project/root/issues/16070,1,['error'],['errors']
Availability,"efault); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:23384,error,error,23384,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"efinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:625:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. ... Assertion failed: !m_Unloading && ""Must not nest within unloading transaction"", file C:\root-dev\git\master\interpreter\cling\lib\Interpreter\Transaction.cpp, line 98; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================; ...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14346:3163,error,error,3163,https://root.cern,https://github.com/root-project/root/pull/14346,3,"['Error', 'error']","['Error', 'error']"
Availability,"elated to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:1202,error,error,1202,https://root.cern,https://github.com/root-project/root/issues/14163,1,['error'],['error']
Availability,"elfReferenceDict.rootmap \; --rootmap-lib=libSelfReferenceDict.so --library=libSelfReferenceDict.so --select=selection.xml; c++ -pthread -std=c++17 -m64 -I/software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/include -fPIC -c -o SelfReferenceDict.o SelfReferenceDict.cpp; c++ -o libSelfReferenceDict.so -shared -m64 -L/software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -Wl,-rpath,/software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib -pthread -lm -ldl -rdynamic SelfReferenceDict.o; [bash][atspot01]:self-reference > ./test.py ; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f052580ec3a in __GI___wait4 (pid=34047, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f052580ebfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f052577df67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f0525fc2afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:7105,error,error,7105,https://root.cern,https://github.com/root-project/root/issues/12358,1,['error'],['error']
Availability,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1667,recover,recover,1667,https://root.cern,https://github.com/root-project/root/issues/8518,1,['recover'],['recover']
Availability,"en building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot!; ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:1116,error,error,1116,https://root.cern,https://github.com/root-project/root/issues/9487,1,['error'],['error']
Availability,"endl;; 	df3.Snapshot(""tree2"", pathFileOut, {""TestVar2""});; 	std::cerr << ""Snapshotting df3 {TestVar1} as tree1 into the output file"" << std::endl;; 	df3.Snapshot(""tree1"", pathFileOut, {""TestVar1""});; 	std::cerr << ""Closing the input file"" << std::endl;; 	tfIn->Close();; 	std::cerr << ""Complete!"" << std::endl;; }. int main(int argc, char* argv[]) {; 	if (argc > 1) {; 		reproduce(argv[1], argv[2]);; 	} else {; 		reproduce();; 	}; }; ```. 2. Run:; ```console; $ root -l -q 'gen_tree.C++()'; $ root -l -q 'reproduce.C++()'; ```. 3. See outputs and errors.; * Duplicated column names; ```; Columns: {TestVar2, TestVar1, TestVar3, TestVar1.fUniqueID, TestVar1.fBits, TestVar1.fP, TestVar1.fE, TestVar1, nTestVar1, }; ```; * Incorrect `GetSize()`; ```; Generating histogram hTest3 with TestVar3 in df3; TestVar1.GetSize(): 1000 n: 5; TestVar1.GetSize(): 1000 n: 1; TestVar1.GetSize(): 1000 n: 7; TestVar1.GetSize(): 1000 n: 0; ```; * ~Snapsht error happens to `TestVar1`, but not `TestVar2` or `TestVar3`~; Snapshot error happens to both `TestVar1` and `TestVar2`, but not `TestVar3`; * Full outputs:. ```console; $ root -l -q 'gen_tree.C++()'. Processing gen_tree.C++()...; Info in <TUnixSystem::ACLiC>: creating shared library /run/media/root/data-btrfs/shamrock-shared/targets/Research_LL/ctau-proper/lxplus_HTcondor/preselect/redefine_custom_vector.root/./gen_tree_C.so; Warning in <TTree::Bronch>: Using split mode on a class: TLorentzVector with a custom Streamer; jEntry: 0	nVar: 5	size: 5; (0.780836, 0.994304, 0.974700, -1.584510) (0.888099, 0.785263, 0.905259, -1.305239) (0.862221, 0.008688, 0.320079, -0.430004) (0.508159, 0.227104, 0.549878, -0.729431) (0.994887, 0.949317, 0.458636, -1.254915) ; jEntry: 1	nVar: 5	size: 5; (0.651535, 0.070535, 0.859432, -0.669713) (0.848072, 0.268093, 0.718520, -1.046939) (0.307848, 0.268393, 0.240499, -0.365170) (0.243093, 0.434697, 0.190251, -0.532397) (0.339955, 0.912194, 0.890578, -1.272495) ; jEntry: 2	nVar: 5	size: 5; (0.703626, 0.856803, 0.4593",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:6029,error,error,6029,https://root.cern,https://github.com/root-project/root/issues/9240,2,['error'],['error']
Availability,"ental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Found TTree: O2fdd_001; Convert leaf fIndexBCs [Int_t] --> field fIndexBCs [std::int32_t]; Convert leaf fChargeA [Int_t] --> field fChargeA [std::int32_t]; Convert leaf fChargeC [Int_t] --> field fChargeC [std::int32_t]; Convert leaf fTimeA [Float_t] --> field fTimeA [float]; Convert leaf fTimeC [Float_t] --> field fTimeC [float]; Convert leaf fTriggerMask [UChar_t] --> field fTriggerMask [std::uint8_t]; Warning in <[ROOT.NTuple] Warning /Users/ktf/src/sw/SOURCES/ROOT/186ec88ba4/0/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; =================================================================; ==5670==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x00010b2300b0 in thread T0; #0 0x106a86ce0 in wrap_free+0x98 (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0); #1 0x1062d3ed8 in ROOT::Experimental::REntry::~REntry() REntry.cxx:25; #2 0x1046a7cf4 in std::__1::default_delete<ROOT::Experimental::REntry>::operator()[abi:v160006](ROOT::Experimental::REntry*) const unique_ptr.h:65; #3 0x1046a7c68 in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::reset[abi:v160006](ROOT::Experimental::REntry*) unique_ptr.h:297; #4 0x1046a7b7c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #5 0x10469cb0c in std::__1::unique_ptr<ROOT::Experimental::REntry, std::__1::default_delete<ROOT::Experimental::REntry>>::~unique_ptr[abi:v160006]() unique_ptr.h:263; #6 0x10469a73c in main ao2dToAO2NT.cxx:163; #7 0x186307f24 (<unknown module>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:5669,ERROR,ERROR,5669,https://root.cern,https://github.com/root-project/root/issues/13996,1,['ERROR'],['ERROR']
Availability,"eous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only gauss; c1.setIndex(0); s2.plotOn(frame, ProjWData = ({c1, c2}, proto)) # only uniform; frame.Draw(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12652:2330,down,download,2330,https://root.cern,https://github.com/root-project/root/issues/12652,1,['down'],['download']
Availability,"er generator via `gsl_rng_alloc()`. When the `GSLMCIntegrator` instance goes out of scope, its dtor is invoked which deletes the `GSLRngWrapper` pointer and thus invokes its dtor as well. However, `~GSLRngWrapper()` frees the allocated memory only if `fOwn` pointer is set to true, which is only set so in the assignment operator, but not in the `Allocate()` member function. Therefore, the `GSLMCIntegrator` class is leaking memory. This poses a problem, when doing a large number of integrations inside a for loop. The leak was discovered by running valgrind and inspecting the code. Minimal example:; ```cpp; #include <Math/GSLMCIntegrator.h> // ROOT::Math::GSLMCIntegrator. /* built with:. g++ -ggdb3 -Og `root-config --cflags` mcintegrator.cpp -o mcintegrator \; `root-config --libs` -lMathMore. */. int; main(); {; for(unsigned i = 0; i < 20000; ++i); {; ROOT::Math::GSLMCIntegrator vegas(""vegas"", 0., 1.e-1, 10);; }; return 0;; }; ```. Before fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==12320== Memcheck, a memory error detector; ==12320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==12320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==12320== Command: ./mcintegrator; ==12320==; ==12320==; ==12320== HEAP SUMMARY:; ==12320== in use at exit: 100,655,858 bytes in 44,260 blocks; ==12320== total heap usage: 67,782 allocs, 23,522 frees, 101,539,078 bytes allocated; ==12320==; ==12320== 99,089,984 (319,984 direct, 98,770,000 indirect) bytes in 19,999 blocks are definitely lost in loss record 3,515 of 3,515; ==12320== at 0x4C2BE7F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==12320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:1220,error,errors,1220,https://root.cern,https://github.com/root-project/root/pull/928,1,['error'],['errors']
Availability,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8791:2391,error,error,2391,https://root.cern,https://github.com/root-project/root/issues/8791,3,['error'],['error']
Availability,"erReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 10804: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\Attrs.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangAttrClasses.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 10813: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\64198d3f4073834b8d7f82bf3cf1c3a5\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\746a45ea92bc2e9ad69718879e4e65a6\ClangAttrParsedAttrImpl.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Sema\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 10815: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\1a199f8322b476da8cfc5f8115a36770\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\f2ed7ba7151716ed97c7afea24c3e5f7\ClangAttrParserStringSwitches.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Parse\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:2933,error,error,2933,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"erpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:3880,error,error,3880,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,error in root-generated code for cubic spline (TSpline3),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13441:0,error,error,0,https://root.cern,https://github.com/root-project/root/issues/13441,1,['error'],['error']
Availability,error on ROOT VM download,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158:0,error,error,0,https://root.cern,https://github.com/root-project/root/issues/12158,2,"['down', 'error']","['download', 'error']"
Availability,"error when creating a python class inheriting from a ROOT class, 6.22/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:0,error,error,0,https://root.cern,https://github.com/root-project/root/issues/6856,1,['error'],['error']
Availability,"error: reference to 'Experimental' is ambiguous; Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};; ^; ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'; namespace Experimental {; ^; ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'; namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8492:0,error,error,0,https://root.cern,https://github.com/root-project/root/pull/8492,1,['error'],['error']
Availability,"error: std::map<std::basic_string<char>, double, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, double> > >' has different definitions in different modules; first difference is defined here found end of class\n/usr/lib/gcc/aarch64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/stl_map.h:941:9: note: but in 'std.bits/stl_map.h' found friend declaration\n operator==(const map<_K1, _T1, _C1, _A1>&,\n ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nroot.exe: ../../../../../../../../root/interpreter/cling/lib/Interpreter/Transaction.cpp:138: void cling::Transaction::append(cling::Transaction::DelayCallInfo): Assertion getState() == kCollecting && Cannot append declarations in current state.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4520:0,error,error,0,https://root.cern,https://github.com/root-project/root/pull/4520,1,['error'],['error']
Availability,error: stray ‘\303’ in program in dictionary generation on paths with accent,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837:0,error,error,0,https://root.cern,https://github.com/root-project/root/issues/6837,1,['error'],['error']
Availability,"error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. Commented the body of the whole function. Got another error. ```; /opt/root/src/roofit/hs3/src/JSONFactor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:3027,error,error,3027,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"es go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:1401,echo,echo,1401,https://root.cern,https://github.com/root-project/root/issues/14186,1,['echo'],['echo']
Availability,"es. - [X] Checked for duplicates. ### Description. When using Python in interactive mode, the web window does not launch properly (see screenshot). It works from a C++ macro. One can also save canvas contents in ROOT batch mode. ![image](https://github.com/root-project/root/assets/1557360/2181f05e-27bd-4473-9151-b28a90773900). ### Reproducer. ```python; import ROOT; import numpy as np. def main():; voltages = np.array([1,2,3], dtype=np.uint32); capacitances = np.array([4,5,6], dtype=np.float32). #ROOT.gROOT.SetBatch(True); df = ROOT.RDF.FromNumpy({'voltages': voltages, 'capacitances': capacitances}); df = df.Define('inv', '1/(capacitances*capacitances)'). c = ROOT.TCanvas(); graph = df.Graph('voltages', 'inv'); graph.Draw('APL'). c.SaveAs(""graph.pdf""). if __name__ == ""__main__"":; main(); ```; Output:; ```bash; $ python3 -i repro.py ; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9449; Opening in existing browser session.; [102887:102898:0312/160727.268507:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.Properties.Get: object_path= /org/freedesktop/portal/desktop: org.freedesktop.DBus.Error.InvalidArgs: No such interface “org.freedesktop.portal.FileChooser”; [102887:102898:0312/160727.268546:ERROR:select_file_dialog_linux_portal.cc(285)] Failed to read portal version property; [102887:102887:0312/160727.306050:ERROR:policy_logger.cc(156)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.; 13986 bytes written to file /home/jakob/Documents/CERN/ROOT/demo/graph.pdf; Info in <ProduceImage>: PDF file graph.pdf with 1 pages has been created; >>> ; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14943:1018,ERROR,ERROR,1018,https://root.cern,https://github.com/root-project/root/issues/14943,1,['ERROR'],['ERROR']
Availability,"es/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481:1708,error,error,1708,https://root.cern,https://github.com/root-project/root/issues/15481,1,['error'],['error']
Availability,"es/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:15668,error,error,15668,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"es/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:2743,error,error,2743,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"es/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11587:1427,error,error,1427,https://root.cern,https://github.com/root-project/root/issues/11587,1,['error'],['error']
Availability,"espace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:1376,error,error,1376,https://root.cern,https://github.com/root-project/root/issues/13574,1,['error'],['error']
Availability,"essor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/sakib/root/lib/libCling.so; #26 0x00007ff62b940b4e in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #27 0x00007ff62b9417da in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #28 0x00007ff6302ed70a in TApplication::ExecuteFile(char const*, int*, bool) () from /home/sakib/root/lib/libCore.so.6.24; #29 0x00007ff6302ee443 in TApplication::ProcessLine(char const*, bool, int*) () from /home/sakib/root/lib/libCore.so.6.24; #30 0x00007ff630666166 in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/sakib/root/lib/libRint.so.6.24; #31 0x00007ff63066656a in TRint::HandleTermInput() () from /home/sakib/root/lib/libRint.so.6.24; #32 0x00007ff630441b62 in TUnixSystem::CheckDescriptors() () from /home/sakib/root/lib/libCore.so.6.24; #33 0x00007ff630443828 in TUnixSystem::DispatchOneEvent(bool) () from /home/sakib/root/lib/libCore.so.6.24; #34 0x00007ff630353669 in TSystem::Run() () from /home/sakib/root/lib/libCore.so.6.24; #35 0x00007ff6302eb443 in TApplication::Run(bool) () from /home/sakib/root/lib/libCore.so.6.24; #36 0x00007ff630667c0e in TRint::Run(bool) () from /home/sakib/root/lib/libRint.so.6.24; #37 0x000055b5825ea180 in main (); ===========================================================; ```. ### Describe the bug; tried to execute a code, crashes. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. ; ```; {; g = new TGraph();; ; for(i=0; i<12; i++) {; g->SetPoint(i, i, i*i + 4*i + 7);; }; ; g->SetMarkerStyle(49);; ; g->Draw(""ALP"");; }; ```; 2. .x graph2.C. ### Setup; 1. ROOT version 6.24.00; 2. Operating system ubuntu 20.04; 3. How you obtained ROOT-> binary download . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367:6070,down,download,6070,https://root.cern,https://github.com/root-project/root/issues/8367,1,['down'],['download']
Availability,est of a Composite Object (containing Vector's and Matrices); ******************************************************************************; Test Using CINT library; TrackD creation 		................ OK; TrackD addition 		................ OK; TrackD write 		................ OK; TrackD read 		................ OK; TrackD after read 		................ OK; TrackD32 creation 		................ OK; TrackD32 addition 		................ OK; TrackD32 write 		................ OK; TrackD32 read 		................ OK; TrackD32 after read 		................ OK; TrackD32 Double32 test 		................ OK; TrackErrD creation 		................ OK; TrackErrD addition 		................ OK; TrackErrD write 		................ OK; TrackErrD read 		................ OK; TrackErrD after read 		................ OK; TrackErrD32 creation 		................ OK; TrackErrD32 addition 		................ OK; TrackErrD32 write 		................ OK; TrackErrD32 read 		................ OK; TrackErrD32 after read 		................ OK; TrackErrD32 Double32 test 		................ OK; VecTrack<TrackD> creation 		................ OK; VecTrack<TrackD> addition 		................ OK; VecTrack<TrackD> write 		................ OK; VecTrack<TrackD> read 		................ OK; VecTrack<TrackD> after read 		................ OK; VecTrack<TrackErrD> creation 		................ OK; VecTrack<TrackErrD> addition 		................ OK; VecTrack<TrackErrD> write 		................ OK; VecTrack<TrackErrD> read 		................ OK; VecTrack<TrackErrD> after read 		................ OK; ******************************************************************************; stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds; ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06; *******************************************************************************; stressMathCore Test Failed !!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:11403,Error,Error,11403,https://root.cern,https://github.com/root-project/root/pull/401,2,"['Error', 'error']","['Error', 'error']"
Availability,"est/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9762,Error,Error,9762,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,"estBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 53: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 54: 'skipnode' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 55: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 56: Assuming 'current' is equal to 'skipnode' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 57: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 58: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 59: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:643; 60: Assuming 'i' is < 'level' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 61: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:645; 62: The left operand of '!=' is a garbage value in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:646; /opt/root_src/geom/geom/src/TGeoNavigator.cxx:739:13: warning: Value stored to 'snext' during it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:43153,down,downwards,43153,https://root.cern,https://github.com/root-project/root/issues/7428,1,['down'],['downwards']
Availability,"estVar1.fP, TestVar1.fE, TestVar1, nTestVar1, }; Generating histogram hTest3 with TestVar3 in df3; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 3; TestVar1.GetSize(): 1000	n: 0; TestVar1.GetSize(): 1000	n: 1; TestVar1.GetSize(): 1000	n: 7; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 0; TestVar1.GetSize(): 1000	n: 2; Closing the output file; Snapshotting df3 {TestVar3} as tree3 into the output file; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 3; TestVar1.GetSize(): 1000	n: 0; TestVar1.GetSize(): 1000	n: 1; TestVar1.GetSize(): 1000	n: 7; TestVar1.GetSize(): 1000	n: 5; TestVar1.GetSize(): 1000	n: 0; TestVar1.GetSize(): 1000	n: 2; Snapshotting df3 {TestVar2} as tree2 into the output file; TestVar1.GetSize(): 1000	n: 5; Error in <TTree::Branch>: The class requested (ROOT::VecOps::RVec<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> > >) for the branch ""TestVar2"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (ROOT::VecOps::RVec<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> > >) to avoid to write corrupted data.; RDataFrame::Run: event loop was interrupted; terminate called after throwing an instance of 'std::logic_error'; what(): Trying to insert a null branch address. ```. ### Setup; 1. ROOT version: 6.25/01, built against commit 24ea49d4702ba0aa9b1ea5521950520154ee151c on the master branch.; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20211006_53e4794`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:9612,Error,Error,9612,https://root.cern,https://github.com/root-project/root/issues/9240,1,['Error'],['Error']
Availability,"etClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCoun",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:1175,Error,Error,1175,https://root.cern,https://github.com/root-project/root/issues/12710,1,['Error'],['Error']
Availability,"eter\llvm\src\tools\clang\include\clang\Sema\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 10815: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\1a199f8322b476da8cfc5f8115a36770\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\f2ed7ba7151716ed97c7afea24c3e5f7\ClangAttrParserStringSwitches.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Parse\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 10820: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticGroups.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticGroups.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 10840: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticCommon.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 10842: 193>C:\Progra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:4123,error,error,4123,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"eturned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_vie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6965,error,error,6965,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"eturning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic err",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2955,error,error,2955,https://root.cern,https://github.com/root-project/root/pull/3452,2,['error'],['error']
Availability,"ev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:2060,error,error,2060,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"evelopment NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.18; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR); -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR); -- Could NOT find PNG (missing: PNG_LIBRARY PNG_PNG_INCLUDE_DIR); -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR); -- Building AfterImage library included in ROOT itself; -- Looking for LibXml2; -- Downloading and building XROOTD version; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:2612,Down,Downloading,2612,https://root.cern,https://github.com/root-project/root/issues/8097,1,['Down'],['Downloading']
Availability,"ew>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: ***",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2570,error,error,2570,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,"example makefile from tutorials/tmva should use the same c++ standard as; root (otherwise one faces errors from string views in the root headers; when building the tutorials). Note:; - I also changed in the global CMakeLists.txt `tutorial_file` into `artifact_file`, (which looks like a renaming variable mistake to me, but didn't go through the history); - This causes `tutorials/tmva/makefile` to not appear in artifact_files_builddir and thus the dependencies of move_artifacts. → I am not sure if I broke dependencies here. (WIP struggeling to install the configured makefile)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2547:100,error,errors,100,https://root.cern,https://github.com/root-project/root/pull/2547,1,['error'],['errors']
Availability,"exception on OSX 10.15 with XCode11 (and others).; ```; 317.486847 427.758362 53.922855; 212.467392 0.529984 94.476196. *** Break *** floating point exception; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [<unknown binary>] (no debug info); [/Users/user/Projects/xxx/root/lib/libCore.6.22.so] TColor::SetRGB(float, float, float) (no debug info); [/Users/user/./color] main /Users/user/color.cxx:89; [/usr/lib/system/libdyld.dylib] start (no debug info); [<unknown binary>] (no debug info); ```. ## Expected behavior; No FPEs. ## To Reproduce. Code:; ```; //; // main.cxx. #include <iostream>; #include <stdlib.h>. #include <TColor.h>; #include <TRandom.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:1089,mask,masks,1089,https://root.cern,https://github.com/root-project/root/issues/6373,1,['mask'],['masks']
Availability,"existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8783d361d25c13e2c65 is reverted (the commit mentions some fixes though); - CMake checks for `builtin_llvm=OFF` and sets the dir accordingly; - Some other path is found that prevents the issues mentioned in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 (maybe `CLING_BINARY_DIR`?). ### To Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:1256,error,error,1256,https://root.cern,https://github.com/root-project/root/issues/12151,1,['error'],['error']
Availability,"existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; At least I could not find any obvious ones that described the same problem. But it might be a more general problem in the python bindings which I have missed. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Defining new `TColor`s in python seems to pick the wrong constructor. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In previous versions of ROOT (up to 6.20/04) the right constructor was picked here. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT as r. color_index = r.TColor.GetFreeColorIndex(); print(type(color_index), color_index) # just to be sure that color_index is indeed an int. # This seems to be chosing the TColor(float, float, float, float) constructor; # instead of the TColor(int, float, float, float, const char*, float); color = r.TColor(color_index, 0.1, 0.2, 0.3). # This should be 0.1, 0.2, 0.3, but will actually be the color index, 0.1, 0.2; print(color.GetRed(), color.GetBlue(), color.GetGreen()). # Explicitly passing an empty string to the constructor helps in picking the correct constructor; color = r.TColor(color_index + 1, 0.1, 0.2, 0.3, """"); print(color.GetRed(), color.GetBlue(), color.GetGreen()) # now is 0.1, 0.2, 0.3; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6.22/08 (built with system gcc 9.3.0 and python 3.8.5) on Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7790:2003,down,download,2003,https://root.cern,https://github.com/root-project/root/issues/7790,1,['down'],['download']
Availability,"ext color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here; 151: SetConsoleTextAttribute(; 151: ^; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:2245,Error,Error,2245,https://root.cern,https://github.com/root-project/root/pull/3312,2,['Error'],['Error']
Availability,"f fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2735,error,errors,2735,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['errors']
Availability,"f the super-category, and it does so by checking the super-category servers. ; However, recently `RooSuperCategory` was changed to contain a `RooMultiCategory` internally, and the only reported direct server is the internal multi-category. This leads to a wrong generation (the prototype data is ignored, the gen context refers to the current labels). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Proto data works even with nested RooSimultaneous. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); for i in range(100):; proto.add({c1, c2}). proto.table(c1).Print(""V""); proto.table(c2).Print(""V""). ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO). # correct; context = s1.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context.Print(). # not a RooSimGenContext; context = s2.genContext(ROOT.RooArgSet(x), proto, ROOT.nullptr, True); print(context.ClassName()); context.Print(). # internal super-cat; print(s2.indexCat().GetName(), s2.indexCat().ClassName()). # the server is the internal multi-cat; print([cat.GetName() for cat in s2.indexCat().servers()]); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Head of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12020:2594,down,download,2594,https://root.cern,https://github.com/root-project/root/issues/12020,1,['down'],['download']
Availability,"f undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:4359,error,error,4359,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"fer, ; GLX_MESA_multithread_makecurrent, GLX_MESA_query_renderer, ; GLX_MESA_swap_control, GLX_OML_swap_method, GLX_OML_sync_control, ; GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, ; GLX_SGIX_visual_select_group, GLX_SGI_make_current_read, ; GLX_SGI_swap_control, GLX_SGI_video_sync; GLX version: 1.2; GLX extensions:; GLX_ARB_get_proc_address, GLX_ARB_multisample, GLX_EXT_import_context, ; GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_MESA_query_renderer, ; GLX_OML_swap_method, GLX_SGIS_multisample, GLX_SGIX_fbconfig, ; GLX_SGI_make_current_read; Extended renderer info (GLX_MESA_query_renderer):; Vendor: VMware, Inc. (0xffffffff); Device: llvmpipe (LLVM 10.0.0, 256 bits) (0xffffffff); Version: 20.0.8; Accelerated: no; Video memory: 7279MB; Unified memory: no; Preferred profile: core (0x1); Max core profile version: 3.3; Max compat profile version: 3.1; Max GLES1 profile version: 1.1; Max GLES[23] profile version: 3.1; ... Full error:; Error in <TEveViewer::SpawnGLViewer>: Insufficient support from the graphics hardware. Aborting.; *** Break *** segmentation violation; Generating stack trace...; 0x00007fd360487563 in TEveViewer::SpawnGLViewer(TGedEditor*, bool, bool) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveViewer.cxx:182 from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360430693 in TEveManager::SpawnNewViewer(char const*, char const*, bool) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveManager.cxx:327 (discriminator 4) from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360433458 in TEveManager::TEveManager(unsigned int, unsigned int, bool, char const*) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveManager.cxx:175 (discriminator 1) from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6774:2203,error,error,2203,https://root.cern,https://github.com/root-project/root/issues/6774,2,"['Error', 'error']","['Error', 'error']"
Availability,"ff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynam",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:4806,error,error-skeleton,4806,https://root.cern,https://github.com/root-project/root/issues/10676,1,['error'],['error-skeleton']
Availability,"ff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1672; #17 0x00007ffff7facf9d in TRint::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:696; #18 0x00007ffff7b0b37d in TApplication::ProcessLine (this=0x482000, line=0x7fffffffb589 "".q"", sync=false, err=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1334; #19 0x00007ffff7fad334 in TRint::ProcessLineNr (this=0x482000, filestem=0x7ffff7fbd6cf ""ROOT_prompt_"", line=0x7fffffffb589 "".q"", error=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:766; #20 0x00007ffff7facab4 in TRint::HandleTermInput (this=0x482000) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:612; #21 0x00007ffff7faa5c5 in TTermInputHandler::Notify (this=0x1381dc0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:132; #22 0x00007ffff7fae98f in TTermInputHandler::ReadNotify (this=0x1381dc0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:124; #23 0x00007ffff7c8fa8a in TUnixSystem::CheckDescriptors (this=0x42a800) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:1322; #24 0x00007ffff7c8eec6 in TUnixSystem::DispatchOneEvent (this=0x42a800, pendingOnly=false); at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:1077; #25 0x00007ffff7b7e773 in TSystem::InnerLoop (this=0x42a800) at /home/matevz/root-dev/dev-1/core/base/src/TSystem.cxx:406; #26 0x00007ffff7b7e519 in TSystem::Run (this=0x42a800) at /home/matevz/root-dev/dev-1/core/base/src/TSystem.cxx:356; #27 0x00007ffff7b0c963 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767:2660,error,error,2660,https://root.cern,https://github.com/root-project/root/issues/8767,1,['error'],['error']
Availability,"ffer only in their return type cannot be overloaded; 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here; 151: SetConsoleTextAttribute(; 151: ^; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:2826,Error,Error,2826,https://root.cern,https://github.com/root-project/root/pull/3312,2,['Error'],['Error']
Availability,"first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2546,error,error,2546,https://root.cern,https://github.com/root-project/root/pull/3452,2,['error'],"['error', 'errors']"
Availability,fix doxygen errors in gui hist and graf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9603:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/9603,1,['error'],['errors']
Availability,fix https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173434/testReport/projectroot/test/test_stressgraphics_interpreted/. The relevant part of the output is:; ```; Test 28: TGraph 3 (Fitting and log scales)......................... OK; PDF output......................................... 28 FAILED; Result = 16465; Reference = 16889; Error = 424 (was 400); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12728:358,Error,Error,358,https://root.cern,https://github.com/root-project/root/pull/12728,1,['Error'],['Error']
Availability,fixed 2 more coverity errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/385:22,error,errors,22,https://root.cern,https://github.com/root-project/root/pull/385,1,['error'],['errors']
Availability,fixed copy/paste error in stressLinear; fixed resource leak in ruleVisHists,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/524:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/524,1,['error'],['error']
Availability,fixed error running TorchScript code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6934:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/6934,1,['error'],['error']
Availability,"fixes the following:; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:48:14: error: #elif with no expression; 48 | #elif DNNCUDA; | ^; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:51:2: error: #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; 51 | #error ""This should not happen. Can only compile with CPU or CUDA implementations.""; | ^~~~~; ```; and; ```; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx: In member function ‘size_t TMVA::TestMethodDNNValidationSize::GetProcessedValidationOption(TString)’:; /build/root/src/root-6.22.00-cuda/tmva/tmva/test/Method/TestMethodDNNValidationSize.cxx:54:80: error: ‘defualtOptions’ was not declared in this scope; 54 | IMethod *m = fFactory->BookMethod(fDataLoader.get(), Types::kDNN, ""DNN"", defualtOptions + options);; | ^~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6148:122,error,error,122,https://root.cern,https://github.com/root-project/root/pull/6148,5,['error'],['error']
Availability,"flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:4795,Error,Error,4795,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability,"flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3739,error,error,3739,https://root.cern,https://github.com/root-project/root/issues/16552,1,['error'],['error']
Availability,"fo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:3133,error,error,3133,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,following https://root-forum.cern.ch/t/error-using-tcolor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5499:39,error,error-using-tcolor,39,https://root.cern,https://github.com/root-project/root/pull/5499,1,['error'],['error-using-tcolor']
Availability,"for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:18537,error,error,18537,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538:1936,down,download,1936,https://root.cern,https://github.com/root-project/root/issues/10538,1,['down'],['download']
Availability,"forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707:3365,Error,Error,3365,https://root.cern,https://github.com/root-project/root/issues/11707,2,"['Error', 'error']","['Error', 'error']"
Availability,"forward and reverse mode, coupled with source code transformation and AST; constant fold. In mathematics and computer algebra, automatic differentiation (AD) is a; set of techniques to numerically evaluate the derivative of a function; specified by a computer program. AD exploits the fact that every computer; program, no matter how complicated, executes a sequence of elementary; arithmetic operations (addition, subtraction, multiplication, division, etc.); and elementary functions (exp, log, sin, cos, etc.). By applying the chain; rule repeatedly to these operations, derivatives of arbitrary order can; be computed automatically, accurately to working precision, and using at; most a small constant factor more arithmetic operations than the original; program. AD is an alternative technique to symbolic and numerical differentiation.; These classical methods run into problems: symbolic differentiation leads; to inefficient code (unless done carefully) and faces the difficulty of; converting a computer program into a single expression, while numerical; differentiation can introduce round-off errors in the discretization; process and cancellation. Both classical methods have problems with; calculating higher derivatives, where the complexity and errors increase.; Finally, both classical methods are slow at computing the partial; derivatives of a function with respect to many inputs, as is needed for; gradient-based optimization algorithms. Automatic differentiation solves; all of these problems, at the expense of introducing more software; dependencies. This patch allows ROOT to interoperate with clad. Namely, users can ask; the interpreter to produce a derivative or a gradient to a known function. An illustrative example code for first order derivative:. root [0] #include ""Math/CladDerivator.h""; root [1] double my_pow2(double x) { return x*x; }; root [2] auto derivative_meta_obj = clad::differentiate(my_pow2, /*wrt 1-st argument*/0);; root [3] derivative_meta_obj.dump();",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378:1246,error,errors,1246,https://root.cern,https://github.com/root-project/root/pull/2378,1,['error'],['errors']
Availability,"from a standalone C++ project including ROOTTPython libs. Side note:; Is there any way to make TPython work outside ROOT, in a C++ project?. `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7370:195,error,error,195,https://root.cern,https://github.com/root-project/root/pull/7370,1,['error'],['error']
Availability,"from https://github.com/root-project/root/issues/11130#issuecomment-1207464193; ```; [ 91%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSumL.cxx.o; In file included from /build/root/src/root-6.26.06/graf3d/eve7/src/REveBoxSet.cxx:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130:316,error,error,316,https://root.cern,https://github.com/root-project/root/issues/11130,1,['error'],['error']
Availability,"from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:2434,ERROR,ERROR,2434,https://root.cern,https://github.com/root-project/root/issues/13895,1,['ERROR'],['ERROR']
Availability,"fs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:9632,error,error,9632,https://root.cern,https://github.com/root-project/root/pull/13295,1,['error'],['error']
Availability,"fund(); input_line_40:3:14: error: no matching constructor for initialization of 'tuple<vector<int>, vector<string> >' (aka 'tuple<vector<int>,; vector<basic_string<char> > >'); self = new tuple<vector<int>,vector<string> >{_1, _0};; ^ ~~~~~~~~; /usr/include/c++/13/tuple:1460:2: note: candidate constructor template not viable: no known conversion from 'const std::vector<string>' (aka; 'const vector<basic_string<char> >') to 'allocator_arg_t' for 1st argument; tuple(allocator_arg_t __tag, const _Alloc& __a); ^ ~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1331:2: note: candidate constructor template not viable: no known conversion from 'const vector<string,; allocator<std::basic_string<char>>>' to 'const vector<int, allocator<int>>' for 1st argument; tuple(const _T1& __a1, const _T2& __a2); ^ ~~~~~~~~~~~~~~~; /usr/include/c++/13/tuple:1338:2: note: candidate template ignored: requirement '_TupleConstraints<true, std::vector<int, std::allocator<int> >,; std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >,; std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >; >::__is_explicitly_constructible()' was not satisfied [with _Dummy = true]; tuple(const _T1& __a1, const _T2& __a2); ^; /usr/include/c++/13/tuple:1345:2: note: candidate template ignored: requirement '_TupleConstraints<true, std::vector<int, std::allocator<int> >,; std::vector<std::basic_string<char, std::char_traits<char>, std::allocator<char> >,; std::allocator<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >; >::__is_implicitly_constructible()' was not satisfied [with _U1 = const std::vector<string> &, _U2 =",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16506:342,error,error,342,https://root.cern,https://github.com/root-project/root/issues/16506,1,['error'],['error']
Availability,"g Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:5301,error,errors,5301,https://root.cern,https://github.com/root-project/root/issues/7654,1,['error'],['errors']
Availability,"g `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::Lex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:1080,error,error,1080,https://root.cern,https://github.com/root-project/root/issues/7704,1,['error'],['error']
Availability,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5571,echo,echo,5571,https://root.cern,https://github.com/root-project/root/pull/14039,1,['echo'],['echo']
Availability,"g module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:5259,error,error,5259,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,g++: error: linux-vdso64.so.1: No such file or directory. The list of names filtered out by TCling is incomplete.; The vdso(7) man page gives the following list:. user ABI vDSO name; ─────────────────────────────; aarch64 linux-vdso.so.1; arm linux-vdso.so.1; ia64 linux-gate.so.1; mips linux-vdso.so.1; ppc/32 linux-vdso32.so.1; ppc/64 linux-vdso64.so.1; riscv linux-vdso.so.1; s390 linux-vdso32.so.1; s390x linux-vdso64.so.1; sh linux-gate.so.1; i386 linux-gate.so.1; x86-64 linux-vdso.so.1; x86/x32 linux-vdso.so.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6887:5,error,error,5,https://root.cern,https://github.com/root-project/root/pull/6887,1,['error'],['error']
Availability,"g.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:21586,error,error,21586,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"g/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:5046,error,error,5046,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"g12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:81: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ROOT_prompt_0:1:1: error: must use 'class' tag to refer to type 'MyClass' in this scope; MyClass c;; ^; class ; ROOT_prompt_0:1:1: note: class 'MyClass' is hidden by a non-type declaration of 'MyClass' here; ROOT_prompt_0:1:9: error: variable has incomplete type 'MyClass'; MyClass c;; ^; libMyLibrary dictionary forward declarations' payload:5:62: note: forward declaration of 'MyClass'; class __attribute__((annotate(""$clingAutoload$MyClass.h""))) MyClass;; ^; root [1]; ```. ## Expected behavior. When using the same demonstrator code on Linux, everything goes as expected. ```; [bash][Legolas]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:9550,Error,Error,9550,https://root.cern,https://github.com/root-project/root/issues/6454,2,['Error'],['Error']
Availability,"g2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14450,error,error,14450,https://root.cern,https://github.com/root-project/root/issues/9595,1,['error'],['error']
Availability,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:6760,error,error,6760,https://root.cern,https://github.com/root-project/root/issues/10861,1,['error'],['error']
Availability,"g::Value*, cling::Transaction**, unsigned long) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #15 0x00007fa76b0675ea in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #16 0x00007fa76b142c97 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #17 0x00007fa76af8a0bc in HandleInterpreterException (metaProcessor=0x243df60, input_line=0x7fff0771e079 ""sortbug()"", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:8408,error,error,8408,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,"g; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:1345,error,errors,1345,https://root.cern,https://github.com/root-project/root/issues/7982,1,['error'],['errors']
Availability,"gcc 4.8.5 says the template overload is ambiguous:; ```; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':; .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous; return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]; auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = Count",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8407:680,error,error,680,https://root.cern,https://github.com/root-project/root/pull/8407,1,['error'],['error']
Availability,"gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2008,error,error,2008,https://root.cern,https://github.com/root-project/root/issues/11920,1,['error'],['error']
Availability,"gcc11 uses the `no_unique_address` attribute in its implementation of `std::tuple`; (which is then used by `std::unique_ptr`). However, it spells it; `__no_unique_address__`, which cling doesn't recognize. This can result; in having differing memory layouts for structures in compiled code versus; cling, which will cause mysterious failures. Patch cling to recognize `__no_unique_address__` as a synonym; for no_unique_address. See issue #8071. This should probably also go to 6.24-patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8221:333,failure,failures,333,https://root.cern,https://github.com/root-project/root/pull/8221,1,['failure'],['failures']
Availability,"ge.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: error: no matching function for call to ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data()’; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: template argument deduction/substitution failed:; /usr/include/c++/11/bits/unique_ptr.h:321:11: note: candidate expects 2 arguments, 0 provided; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:1998,error,error,1998,https://root.cern,https://github.com/root-project/root/issues/10984,1,['error'],['error']
Availability,"ge1; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:14544,error,error,14544,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"ghts of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1200,error,error,1200,https://root.cern,https://github.com/root-project/root/issues/11333,1,['error'],['error']
Availability,"gistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running mai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:4372,Failure,Failure,4372,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,"git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git. # build with gcc; mkdir build_gcc && cd build_gcc && cmake ../root && make -j8. ## Google bench; cd; # Check out the library.; git clone https://github.com/google/benchmark.git; # Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.; git clone https://github.com/google/googletest.git benchmark/googletest. # Go to the library root directory; cd benchmark ; mkdir build_gcc; cd build_gcc ; cmake -DCMAKE_BUILD_TYPE=Release ../root && make -j8. # XGBoost; cd; git clone --recursive https://github.com/dmlc/xgboost; cd xgboost; mkdir build_gcc; cd build_gcc; cmake -DCMAKE_BUILD_TYPE=Release ../. # Setup aliases; echo ""alias bdt='cd ~/root/tmva/tmva/src/BDT'"" >> ~/.bashrc; source .bashrc. # Add the folders missing from github (add them directly in github?) ; cd; bdt ; git checkout backend/FastInference; mkdir build. # For ROOT; echo 'export ROOTSYS=""~/root/""' >> ~/.bashrc; echo 'export ROOTBUILD=""~/build_gcc/""' >> ~/.bashrc; echo 'source $ROOTBUILD/bin/thisroot.sh' >> ~/.bashrc. echo 'export XGBOOST_ROOT=""~/xgboost""' >> ~/.bashrc. echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/xgboost/lib/' >> ~/.bashrc. source .bashrc; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:3857,echo,echo,3857,https://root.cern,https://github.com/root-project/root/pull/4351,6,['echo'],['echo']
Availability,"github.io/) native support on GitHub). As RooFit is also effectively absorbed into ROOT (I hope this is safe to say given the [development history on the `rootfit` module in ROOT](https://github.com/root-project/root/tree/master/roofit) and that the [RooFit development GitHub org](https://github.com/roofit-dev) does their development in a fork of ROOT) and any development as a [solo project on SourceForge](https://sourceforge.net/projects/roofit/) has long halted, the banner is a recurring pain point and nuisance for many users. The banner can be [disabled at runtime](https://github.com/root-project/root/commit/43b6c775123c371bf02fe7d744e0be8612499f27) through adding `RooFit.Banner: no` to `.rootrc`. ```console; $ python -c 'from ROOT import RooFit' # Get banner. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. $ echo 'RooFit.Banner: no' > ~/.rootrc; $ python -c 'from ROOT import RooFit' # No banner now; ```. or [permanently disabled by passing the compile flag `-D__ROOFIT_NOBANNER` **to RooFit** at compile time](https://root-forum.cern.ch/t/how-to-switch-off-roofit-banner/6357/4) and if building ROOT with CMake you can [pass this flag to RooFit through the `CMAKE_CXX_FLAGS` option](https://root-forum.cern.ch/t/roofit-nobanner-on-cmake-option-seems-to-have-no-effect/48828). Disabling the RooFit banner with. ```; -DCMAKE_CXX_FLAGS=-D__ROOFIT_NOBANNER; ```. as a default and finding a more constructive and useful form of attribution to the RooFit developers seems like a much better solution then continuing to keep it around as a default. (Altering the `.rootrc` seems like a nice way to deal with legacy versions of ROOT, but is not a good reason to keep the banner.). ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Make the",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9954:2125,echo,echo,2125,https://root.cern,https://github.com/root-project/root/issues/9954,1,['echo'],['echo']
Availability,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11170,error,error,11170,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"gn'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here; class MVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here; class PVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar; gument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:6698,error,error,6698,https://root.cern,https://github.com/root-project/root/issues/8642,1,['error'],['error']
Availability,"gs . ***********************************************************************************. # Previous behaviour; Previous to this PR, the number of threads was limited during the lifetime of the tbb scheduler, kept alive by TPoolManager as a ```std::shared_ptr``` as long as references to it existed, to the value set on its initialization. ```cpp; //We initialize the scheduler with 4 threads; ROOT::EnableIMT(4);; { ; //The scheduler is active, so the value passed to TThreadExecutor; //is overriden with the number of threads the scheduler has been; //initialized with (4); TThreadExecutor executor(9);; }; ROOT::DisableIMT();. //The scheduler is not alive at this point, ; //so we initialize it with 2 threads; ROOT::EnableIMT(2);; ROOT::TThreadExecutor executor(8);; ROOT::DisableIMT();. executor.MapReduce(...); //Runs on two threads!. ROOT::EnableIMT(3);; //Still two threads! TThreadExecutor instance was keeping the scheduler alive; ```; This also implies that given two co-existent instances of TThreadExecutor initialized with a different number of threads, the first one to be initialized forces on the second one the number of threads to work with. ```cpp; ROOT::TThreadExecutor executor(4);; ROOT::TThreadExecutor executor2(8); //will run limited to two threads!!; ```; This setup was useful [to avoid undefined behaviours between the implicit and explicit parallelism modes of ROOT](https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf). . # New behaviour; With this PR, we can separate this two modes of execution. We support the co-existance of several TThreadExecutors, each handling a different number of threads, by initializing the scheduler with the [default number of threads](tbb::task_scheduler_init::default_num_threads) and using a ```tbb::task_arena``` per TThreadExecutor to work with a subset of them instead. ```cpp. //Each of the executor manages its own tbb::task_arena,; //which allows the co-existance of TThreadExecut",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389:1549,alive,alive,1549,https://root.cern,https://github.com/root-project/root/pull/2389,1,['alive'],['alive']
Availability,"gs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__currentType = EmptyHeader.group(1). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in __transformOneGroup(self, firstLine); 226 if j != 0:; 227 processed_lines += 1; --> 228 self.iterLines.next(); 229 tmp_str += ""<tr>""; 230 if DatasetName or NumEvents or VariableMeanHeader:. AttributeError: 'range_iterator' object has no attribute 'next'; ```. ### Setup; <!--; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:2378,error,error,2378,https://root.cern,https://github.com/root-project/root/issues/6657,1,['error'],['error']
Availability,"gs::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:12097,failure,failure,12097,https://root.cern,https://github.com/root-project/root/issues/11515,1,['failure'],['failure']
Availability,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/5591,3,"['Error', 'error']","['Error', 'errors']"
Availability,gutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\; s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\; ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\; n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\; joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\; nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/zip/inc -I/home/joe/local2/bench/mgarepo/ro\; ot/BUILD/root-6.24.06/core/thread/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/textinput/inc -I/home/joe/local2/bench/mgarepo/root/BUI\; LD/root-6.24.06/core/base/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundation/v7/inc -I/home/joe/local2/bench/mgarepo/root/BUIL\; D/root-6.24.06/core/unix/inc valarray /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h; In file included from input_line_6:1:; In file included from /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/src/valarrayLinkdef.h:1:; /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/valarray:1215:5: error: exception specification in declaration does not match previous decla\; ration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/lib/gcc/x86_64-mageia-linux/11/../../../../include/c++/11/bits/range_access.h:107:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; ```. ### Expected behavior; should comple. ### To Reproduce. compile 6.24.06 with latest gcc11 on mageia; 6.24.04 seems to work,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9285:2739,error,error,2739,https://root.cern,https://github.com/root-project/root/issues/9285,1,['error'],['error']
Availability,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:4424,error,error,4424,https://root.cern,https://github.com/root-project/root/pull/12681,8,['error'],['error']
Availability,"h T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w Mixi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6563,error,error,6563,https://root.cern,https://github.com/root-project/root/issues/6939,1,['error'],['error']
Availability,h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:8240,error,error,8240,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:3141,error,errors,3141,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['errors']
Availability,"h this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.RandomAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:7978,Error,Error,7978,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,"h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // Brings in std::declval too.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:27611,error,error,27611,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"h. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://root.cern/forum; 2187: Only if you are really convinced it is a bug in ROOT then please submit a; 2187: report at https://root.cern/bugs Please post the ENTIRE stack trace; 2187: from above as an attachment in addition to anything else; 2187: that might help us fixing this issue.; 2187: ===========================================================; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:8097,error,error,8097,https://root.cern,https://github.com/root-project/root/issues/11867,2,['error'],['error']
Availability,"hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:1929,Error,Error,1929,https://root.cern,https://github.com/root-project/root/issues/11372,1,['Error'],['Error']
Availability,hadd fast tear down,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4525:15,down,down,15,https://root.cern,https://github.com/root-project/root/pull/4525,1,['down'],['down']
Availability,hadd fast tear down v2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4571:15,down,down,15,https://root.cern,https://github.com/root-project/root/pull/4571,1,['down'],['down']
Availability,hadd fast tear down v618,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4578:15,down,down,15,https://root.cern,https://github.com/root-project/root/pull/4578,2,['down'],['down']
Availability,"har **, bool) E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:4927:0; #39 0x00007ffef58759d9 ROOT_rootcling_Driver E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\core\dictgen\src\rootcling_impl.cxx:6171:0; #40 0x00007ff6481b2635 main E:\vcpkg_folders\new_master\buildtrees\root\src\57b00fa7ea-10a10c16cc\main\src\rootcling.cxx:44:0; #41 0x00007ff6481b2ae9 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:79:0; #42 0x00007ff6481b298e __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0; #43 0x00007ff6481b284e __scrt_common_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:331:0; #44 0x00007ff6481b2b7e mainCRTStartup D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_main.cpp:17:0; #45 0x00007fffb4f47604 (C:\Windows\System32\KERNEL32.DLL+0x17604); #46 0x00007fffb6de26a1 (C:\Windows\SYSTEM32\ntdll.dll+0x526a1); ```; ### Expected behavior; Build succeeds. ### To Reproduce. (if you know how to use vcpkg & git); checkout https://github.com/microsoft/vcpkg/pull/31161; bootstrap vcpkg; vcpkg install root. ### Setup; 1. Ref: 6438fdb78a7d0cc06e2f3dd2dd5bf057b00fa7ea; 2. Windows 10; VS 17.5.4. ### Additional context; I tried debugging the problem and the only thing I found is that in `io\io\src\TStreamerInfoWriteBuffer.cxx:` the call; `proxy->GetFunctionCreateIterators(/*read = */ kFALSE)(obj, &begin, &end, proxy);` returns a start iterator which is higher then the end iterator leading later to a read access violation when trying to (infinitely) iterate over it. So I assume `obj` is somehow bogus but without knowing what that actually should be further steps back are not possible., The error is reproducible but seems to occur at different times of execution if retried (number of breakpoint hits vary). ; The release build however seems fine. ; If you need a full configure/build log I can provide it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738:22300,error,error,22300,https://root.cern,https://github.com/root-project/root/issues/12738,1,['error'],['error']
Availability,"har>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name of real 'variable' seen as: 'fContent.'; string=set for writing; value=11; ```; </details>. ## Env. compiler is clang; ```; > clang -v; clang version 12.0.0; Target: x86_64-unknown-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:2038,Error,Error,2038,https://root.cern,https://github.com/root-project/root/issues/8187,2,['Error'],['Error']
Availability,"har_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto actionPtr = BuildAction<BranchTypes...>(bl, std::move(rOnHeap), nSlots, std::move(prevNodePtr), ActionTag{},; ^; input_line_35:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase, TH1D>' requested here; ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, ROOT::VecOps::RVec<Bool_t>>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x563bdc7d7910), {""Muon_tightId""}, 1, reinterpret_cast<weak_ptr<TH1D>*>(0x563bdc7d77a0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x563bdc7d7a80), reinterpret_cast<ROOT::Internal::RDF::RBookedCustomColumns*>(0x563bdc7d9150));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RVec.hxx:387:19: note: selected 'begin' function with iterator type 'ROOT::VecOps::RVec<bool>::const_iterator' (aka 'std::_Bit_const_iterator'); const_iterator begin() const noexcept { return fData.begin(); }; ^; terminate called after throwing an instance of 'std::runtime_error'; what(): ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state.; ```. It's ROOT from conda (6.22/02). You can download the file here (http://opendata.web.cern.ch/record/12353#).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:8221,error,error,8221,https://root.cern,https://github.com/root-project/root/issues/6675,2,"['down', 'error']","['download', 'error']"
Availability,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10585:27,down,downloading,27,https://root.cern,https://github.com/root-project/root/pull/10585,1,['down'],['downloading']
Availability,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10674:27,down,downloading,27,https://root.cern,https://github.com/root-project/root/pull/10674,1,['down'],['downloading']
Availability,"hat the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11017:2265,down,download,2265,https://root.cern,https://github.com/root-project/root/issues/11017,1,['down'],['download']
Availability,"havior; No FPE. ### To Reproduce; ```; #include <TApplication.h>; #include <TGClient.h>; #include <TGFrame.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TApplication* theApp = new TApplication(""App"", &argc, argv);; auto *G= new TGMainFrame(gClient->GetRoot(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:3429,mask,mask,3429,https://root.cern,https://github.com/root-project/root/issues/6758,1,['mask'],['mask']
Availability,"he TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:1580,error,error,1580,https://root.cern,https://github.com/root-project/root/pull/3452,7,['error'],"['error', 'errors']"
Availability,"he correct value, it's just the integral which uses the wrong one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Integral uses correct parameters. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testIntegralDesync() {; using namespace RooFit;; RooRealVar x(""x"", """", 0, 1);; ; RooRealVar par(""par"", """", -0.005, -5, 5);; RooProduct par_mod(""par_mod"", """", RooArgSet(par, RooConst(10)));; ; // RooPolyVar fn(""fn"", """", x, RooArgList(RooConst(1), par_mod));; // RooRealSumPdf pdf(""pdf"", """", fn, RooConst(1));; ; RooGaussModel gm(""gm"", """", x, RooConst(0), RooConst(0.001));; RooFormulaVar formula(""formula"", ""exp(-@0/@1)"", RooArgList(x, par_mod));; auto fn = gm.convolution(&formula, &x);; RooRealSumPdf pdf(""pdf"", """", *fn, RooConst(1));; ; auto data = pdf.generate(x, NumEvents(1));; ; auto nllBase = pdf.createNLL(*data);; auto nllBatch = pdf.createNLL(*data, BatchMode(""cpu""));; ; gm.verboseEval(10); // printout helps showing the exact problem, since it prints the parameter; ; double nllBaseVal = nllBase->getVal();; double nllBatchVal = nllBatch->getVal();; clog << ""Before changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl;; ; par.setVal(-0.1);; nllBaseVal = nllBase->getVal();; nllBatchVal = nllBatch->getVal(); ; clog << ""After changing: "" << nllBaseVal << "" vs "" << nllBatchVal << endl; ; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->; I tested this with a `RooRealSumPdf` but I'm not sure it is the only one affected or if it is anything with an internal integral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578:2883,down,download,2883,https://root.cern,https://github.com/root-project/root/issues/11578,1,['down'],['download']
Availability,"header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:4843,error,error,4843,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"hen please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; To avoid it the Simplex builder should not be called for the case when there are no free parameters but instead, ModularFunctionMinimizer::Minimize() should call FCn just once and return ""current state"". And yes, just preempting a question about a fit with zero free parameters. Yes, it is very useful. ; Imagine a set of different models fitted to the data using the same codebase. Some ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:2590,toler,toler,2590,https://root.cern,https://github.com/root-project/root/issues/6775,1,['toler'],['toler']
Availability,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406:419,error,errors,419,https://root.cern,https://github.com/root-project/root/issues/12406,1,['error'],['errors']
Availability,"hia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_multiprocess=ON -Droofit_hs3_yml=ON -DCMAKE_PREFIX_PATH=/home/cburgard/Physics/root/zmq . ```. ```; In file included from /home/cburgard/Physics/root/build/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:67,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.h:22,; from /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:17:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx: In member function ‘void PDFTest::compareFixedValues(double&, bool, bool, bool, unsigned int)’:; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:355:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 355 | EXPECT_GT(sumDiffs/outputsScalar.size(), -toleranceCompare) << ""Batch outputs biased towards negative."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:356:21: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 356 | EXPECT_LT(sumDiffs/outputsScalar.size(), toleranceCompare) << ""Batch outputs biased towards positive."";; | ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~; | | |; | ROOT::Math::KahanSum<> std::vector<double>::size_type {aka long unsigned int}; /home/cburgard/Physics/root/src/roottest/root/roofitstats/vectorisedPDFs/VectorisedPDFTests.cxx:357:25: error: no match for ‘operator/’ (operand types are ‘ROOT::Math::KahanSum<>’ and ‘std::vector<double>::size_type’ {aka ‘long unsigned int’}); 357 | EXPECT_LT(sqrt(sumVars/outputsScalar.size()), toleranceCompare) << ""High standard deviation for batch results vs ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12006:1727,toler,toleranceCompare,1727,https://root.cern,https://github.com/root-project/root/issues/12006,1,['toler'],['toleranceCompare']
Availability,"hich defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_LIBBSD` (in addition to `HAS_STRLCPY`) that triggers the inclusion of bsd/string.h in clib/inc/strlcpy.h in the `#else` case of `#ifndef HAS_STRLCPY`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. git master, `builtin_llvm=OFF`, #12151 fixed via `${CLING_BINARY_DIR}` instead of `${LLVM_BINARY_DIR}`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. master, Debian Sid, LLVM 13.0.1-11, gcc 12.2.0-3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:11602,down,download,11602,https://root.cern,https://github.com/root-project/root/issues/12152,1,['down'],['download']
Availability,"his=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6969,error,error,6969,https://root.cern,https://github.com/root-project/root/issues/6939,2,['error'],['error']
Availability,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:25306,Error,Error,25306,https://root.cern,https://github.com/root-project/root/issues/15799,2,"['Error', 'error']","['Error', 'error']"
Availability,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8933:3653,down,download,3653,https://root.cern,https://github.com/root-project/root/issues/8933,1,['down'],['download']
Availability,"home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:6746,error,error,6746,https://root.cern,https://github.com/root-project/root/issues/6977,1,['error'],['error']
Availability,"hrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: error: reference to __device__ function '__nvvm_atom_cta_add_gen_i' in __host__ function; __nvvm_atom_cta_add_gen_i(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:362:3: note: '__nvvm_atom_cta_add_gen_i' declared here; cling: fatal error: too many errors emitted, stopping now [-ferror-limit=]; cling: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:12693,error,error,12693,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1054,error,error,1054,https://root.cern,https://github.com/root-project/root/issues/10875,1,['error'],['error']
Availability,"https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,; from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:; [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8610:328,error,error,328,https://root.cern,https://github.com/root-project/root/issues/8610,2,['error'],['error']
Availability,"https://github.com/root-project/root/pull/16768 seems to have unexpected consequence on ATLAS workflow, see https://github.com/root-project/root/pull/16768#discussion_r1829743338. Per @amete :. > This is in a mutli-chain workflow. The first step creates an RNTuple that is read by the second step. We throw on the very first event of the second step, seemingly related to reading an empty top-level field, e.g. (the messages need to be improved but that's independent):. ```; 12:37:41 ERROR (pool):; 12:37:41 Unknown Source> field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo; 12:37:41 At:; 12:37:41 ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; 12:37:41 ; 12:37:41 EventData(xAOD::EventInfo_v1/EventInfo)> Cannot open ROOT container(Tree/Branch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:485,ERROR,ERROR,485,https://root.cern,https://github.com/root-project/root/issues/16826,1,['ERROR'],['ERROR']
Availability,"https://github.com/root-project/root/pull/1966 didn't help to remove warning visible with Clang 8.0.0:. /.../root/net/http/civetweb/civetweb.c:2701:8:warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]. (void)pthread_setname_np(pthread_self(), threadName);. Changing order of else-statements help to provide a right solution for the case of clang/linux combination, where pthread_setname_np() is not available but in the same time _GNU_SOURCE is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581:463,avail,available,463,https://root.cern,https://github.com/root-project/root/pull/2581,1,['avail'],['available']
Availability,"https://root.cern/doc/master/classTAxis.html#afc19787e727c9e3c85be72eba03338da. Currently this method's doxygen contains:; ```; <p>Define new text attributes for the label number ""labNum"". </p>; <p>It allows to do a fine tuning of the labels. All the attributes can be changed, even the label text itself.</p>; <dl class=""params""><dt>Parameters</dt><dd>; . [in] | labNum | Number of the label to be changed, negative numbers start from the end; -- | -- | --; [in] | labAngle | New angle value; [in] | labSize | New size (0 erase the label); [in] | labAlign | New alignment value; [in] | labColor | New label color; [in] | labFont | New label font; [in] | labText | New label text. </dd>; </dl>; <p>If an attribute should not be changed just give the value ""-1"".</p>; <p>If labnum=0 the list of modified labels is reset. </p>; ```. Things which can be improved:; A note that 'deleting' a label is accomplished via setting the label size to 0; A note that the empty string is the '-1'/'do not change' for the label itself. Although the author might have felt it was obvious being the default value, to someone looking to modify labels, they might actually try to use an empty string to delete the label.; A note that you cannot change label sizes or alignments or rotations one-by-one, only one value takes precedence (whether first or last, probably last I'd expect, since one might only modify a single bin). . ### Setup; 1. ROOT version = master (March 30, 2022); 2. Operating system = CentOS7; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. = LCG release",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10279:1553,down,download,1553,https://root.cern,https://github.com/root-project/root/issues/10279,1,['down'],['download']
Availability,"https://starlight.hepforge.org/ . I found the error which run make but I can't fix that. ; ![Screenshot 2022-11-12 141541](https://user-images.githubusercontent.com/116489914/201471628-4dc9d225-537d-40da-a2da-e8d6d4922a79.png); ![Screenshot 2022-11-12 141807](https://user-images.githubusercontent.com/116489914/201471631-aca47583-d887-475b-a267-5f21d44ee3d9.png); ![Screenshot 2022-11-12 141825](https://user-images.githubusercontent.com/116489914/201471634-b3fc3b8d-aa65-4afa-983c-5d1ad9fc7909.png). Please, I need help.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11694:46,error,error,46,https://root.cern,https://github.com/root-project/root/issues/11694,1,['error'],['error']
Availability,"hysics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:23254,error,error,23254,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,ib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:8631,error,error,8631,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:7098,error,error,7098,https://root.cern,https://github.com/root-project/root/issues/11765,1,['error'],['error']
Availability,"ibe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed.; [1] 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7362:1011,Error,Error,1011,https://root.cern,https://github.com/root-project/root/issues/7362,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"ic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. All the best,; Simon Spies. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile:; ![example](https://user-images.githubusercontent.com/5320187/53051016-15b0e300-349b-11e9-90d6-af75f21654a0.png); ![example]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:3866,error,error,3866,https://root.cern,https://github.com/root-project/root/pull/3452,2,['error'],"['error', 'errors']"
Availability,"icates. ### Description. Hello! Sorry for the newbie issue, but I can't seem to work around it...!; After upgrading from ubuntu 22 to ubuntu 23, my root stopped working. I would try to run my old macros and the system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1058,Error,Error,1058,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:2665,down,download,2665,https://root.cern,https://github.com/root-project/root/issues/8292,2,['down'],['download']
Availability,"id Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x). i, f(i), f(i+0.1), avg[i,i+0.1]. 10, 0.004, 0.00404, 0.00402; 10.1, 0.00404, 0.00408, 0.02456 <--; 10.2, 0.00408, 0.00412, 0.0041; 10.3, 0.00412, 0.00416, 0.02464 <--; 10.4, 0.00416, 0.0042, 0.00418; 10.5, 0.0042, 0.00424, 0.00422; 10.6, 0.00424, 0.00428, 0.02576 <--; 10.7, 0.00428, 0.00432, 0.0043; 10.8, 0.00432, 0.00436, 0.02584 <--; 10.9, 0.00436, 0.0044, 0.00438; 11, 0.0044, 0.00444, 0.00442; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.24/06; Built for linuxx8664gcc; From tags/v6-24-06@v6-24-06; Installed manually within WSL Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->; I first encountered this behaviour when calculating the chi^2 between a fitted RooCurve and data, where the data had bin sizes of 0.1, and the RooCurve was taking steps of 1. The chi^2 value of the RooCurve far exceeded what could be expected based on the fit residuals with respect to the data. Increasing the amount of curve points by increasing the precision of the `plotOn()` call resolved this issue. A potential fix for this bug could be to check to see if the `xFirstPt` and `xLastPt` used for averaging remain within the averaging interval when shifting them upwards or downwards, leading to inversion of the averaging boundaries. If this occurs taking the interpolated y-value at the violated boundary instead of the shifted value might resolve this issue.; Otherwise warning the user that this is occurring, and recommending increasing the precision used when calling `plotOn()` to prevent this scenario from occurring to begin with.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:3809,down,downwards,3809,https://root.cern,https://github.com/root-project/root/issues/9838,1,['down'],['downwards']
Availability,"iers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1822,error,error,1822,https://root.cern,https://github.com/root-project/root/issues/10875,2,"['Error', 'error']","['Error', 'error']"
Availability,"if imt is not specified, this tutorial should not be run as a test. # This Pull request:; Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13712:238,error,errors,238,https://root.cern,https://github.com/root-project/root/pull/13712,1,['error'],['errors']
Availability,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:3325,avail,available,3325,https://root.cern,https://github.com/root-project/root/issues/8999,1,['avail'],['available']
Availability,"ight"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:1309,fault,fault,1309,https://root.cern,https://github.com/root-project/root/issues/15970,1,['fault'],['fault']
Availability,"ignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. ERROR: Class info for instantiation is not valid!; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Info: ClassInfo is not valid; Name ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:1772,error,error,1772,https://root.cern,https://github.com/root-project/root/issues/8187,1,['error'],['error']
Availability,"ild module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:7921,error,error,7921,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ild/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:481; #14 0x00007f3f00eba9fd in CPyCppyy::tpp_vectorcall (pytmpl=0x7f3e9b93ef70, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /usr/include/c++/14/bits/shared_ptr_base.h:1666; #15 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #16 0x00007f3f141ca25d in method_vectorcall () from /lib64/libpython3.13.so.1.0; #17 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #18 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #19 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #20 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #21 0x00007f3f14173ef1 in _PyEval_EvalFrameDefault () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:3546,error,errors,3546,https://root.cern,https://github.com/root-project/root/issues/15799,4,['error'],['errors']
Availability,"ild/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:22001,error,error,22001,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"ild\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:1787,error,error,1787,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability,"ild_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:6452,error,error,6452,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"ile ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 819, in save_list; self._batch_appends(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 846, in _batch_appends; save(tmp[0]); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 633, in save_reduce; save(cls); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unbound method with explicit self; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 1330, in save_type; StockPickler.save_global(pickler, obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 960, in save_global; (obj, module_name, name)) from None; _pickle.PicklingError: Can't pickle <class '_pythonization.compose_method.<locals>.composition_pythonizor'>: it's not found as _pythonization.compose_method.<locals>.composition_pythonizor; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT versions from LCG_94 to LCG_97a; 2. centos7, lxplus7.cern.ch ; 3. LCG-releases via cvmfs ; . ## Additional context; <!--; Add any other context about the problem here.; -->. I've opened the issue also for `dill` project: https://github.com/uqfoundation/dill/issues/356",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:6786,down,download,6786,https://root.cern,https://github.com/root-project/root/issues/6370,1,['down'],['download']
Availability,"ile 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Oct 07 2024, 17:23:18 |; | From tags/6-32-06@6-32-06 |; | With MSVC 19.41.34120.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Welcome to the ROOT tutorials. Type "".x demos.C"" to get a toolbar from which to execute the demos. Type "".x demoshelp.C"" to see the help window. ==> Man",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:1888,error,error,1888,https://root.cern,https://github.com/root-project/root/issues/16638,1,['error'],['error']
Availability,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9857,error,error,9857,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"iles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:15049,error,error,15049,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"iles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:21505,error,error,21505,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"ils.py. ### Setup script for ubuntu 18.04; It sets up a new machine, installing everything in the home folder. Please modify for your needs.; ```bash; #!/bin/bash; cd; # can be ran with yes | bash this_file.sh # to say yes when prompted. sudo apt update ; yes | sudo apt upgrade. # Install all the stuff with apt. sudo apt install clang # to use clang; sudo apt install g++-7 gcc-7 # to use gcc; sudo apt install libx11-dev build-essential cmake ; sudo apt install git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git. # build with gcc; mkdir build_gcc && cd build_gcc && cmake ../root && make -j8. ## Google bench; cd; # Check out the library.; git clone https://github.com/google/benchmark.git; # Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.; git clone https://github.com/google/googletest.git benchmark/googletest. # Go to the library root directory; cd benchmark ; mkdir build_gcc; cd build_gcc ; cmake -DCMAKE_BUILD_TYPE=Release ../root && make -j8. # XGBoost; cd; git clone --recursive https://github.com/dmlc/xgboost; cd xgboost; mkdir build_gcc; cd build_gcc; cmake -DCMAKE_BUILD_TYPE=Release ../. # Setup aliases; echo ""alias bdt='cd ~/root/tmva/tmva/src/BDT'"" >> ~/.bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:2890,echo,echo,2890,https://root.cern,https://github.com/root-project/root/pull/4351,4,['echo'],['echo']
Availability,"ils.py:466, in NotebookDraw(); 464 DrawGeometry(); 465 DrawCanvases(); --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(); 458 def DrawRCanvases():; --> 459 rdrawers = GetRCanvasDrawers(); 460 for drawer in rdrawers:; 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(); 429 def GetRCanvasDrawers():; 430 if not RCanvasAvailable(): return []; --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(); 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>; ValueError: nullptr result where temporary expected; ```. # Attempted Debugging; * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected.; * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``.; * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all.; * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT.; ```; root [0] new ROOT::Experimental::RCanvas();; IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:2569,error,errors,2569,https://root.cern,https://github.com/root-project/root/issues/14587,1,['error'],['errors']
Availability,"imeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:16644,error,error,16644,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:3815,error,error,3815,https://root.cern,https://github.com/root-project/root/issues/14062,7,"['Error', 'error']","['Error', 'error']"
Availability,"implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:1468,error,errors,1468,https://root.cern,https://github.com/root-project/root/pull/3452,2,['error'],"['error', 'errors']"
Availability,"in CIFactory:; - Add -fno-threadsafe-statics flag (for Windows only), to prevent potential unresolved symbols at run-time. in MetaProcessor::readInputFromFile:; - add required std::ifstream::binary flag when opening the std::ifstream; - add missing backslashes. in PlatformWin:; - properly format error messages; - in IsDLL(): check and return false if the file size is 0; - fix _CxxThrowException symbol name (not fully understood - to be reviewed); - filter out a couple of system dlls when looking for symbols",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607:297,error,error,297,https://root.cern,https://github.com/root-project/root/pull/1607,1,['error'],['error']
Availability,"in Defines and Filters.; When dealing with very large computation graphs with many Define/Filter; transformations defined with jitted strings, the time for matching; column names to strings was non negligible. The previous mechanism to discover the columns present in the strings; to be jitted was based on regular expressions. The new approach is based; on a lexer, lexertk. The idea is to extract identifiers from; the string and then compare them with the column names available; in the DF.; This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324:472,avail,available,472,https://root.cern,https://github.com/root-project/root/pull/3324,1,['avail'],['available']
Availability,"in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:3944,error,error-skeleton,3944,https://root.cern,https://github.com/root-project/root/issues/10676,1,['error'],['error-skeleton']
Availability,"in case keys could not be recovered, the file was made a Zombie; and caused the system to crash.; Relates to https://github.com/root-project/roottest/pull/217",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2583:26,recover,recovered,26,https://root.cern,https://github.com/root-project/root/pull/2583,1,['recover'],['recovered']
Availability,"in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::ena",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:2486,error,error,2486,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:837,error,error,837,https://root.cern,https://github.com/root-project/root/issues/16601,1,['error'],['error']
Availability,"include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether the TMapFile will be created; 5. Assuming the ""hisprod"" works and creates a ""hsimple.map"" file, run ""./hisplot"" in a new Terminal to check whether the TMapFile and TApplication could work together. In the Makefile, it is required to have the link of -lNew or --new for running TMapFile. With different combinations of ROOT and operating versions, the error message might be different. . ### ROOT version. Ubuntu 20.04.2 LTS; ROOT 6.12.06 to 6.28.04. ### Installation method. both of compiling and binary package. ### Operating system. Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:2565,error,error,2565,https://root.cern,https://github.com/root-project/root/issues/13511,1,['error'],['error']
Availability,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8831,error,error,8831,https://root.cern,https://github.com/root-project/root/issues/16451,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no te",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:7093,error,error,7093,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:1838,error,error,1838,https://root.cern,https://github.com/root-project/root/pull/6143,2,['error'],['error']
Availability,"indings. https://github.com/root-project/root/blob/a940bdbc40d9a0cdac8975c287e1cb7ada0d0c65/builtins/xrootd/CMakeLists.txt#L43. given 2c23502137acd9276fc21da300ab3d562278d57f (from @peremato in 2015). I am unclear on the specifics of explicitly disabling the Python bindings from being built as there is no associated PR for the commit. If there is not a modern reason for this to stay disabled (my assumption is that there is and I am missing it), updating to XRootD `v5.4.1` would allow for the Python bindings to be optionally enabled and to be build safely with the improvements to the Python bindings build process (and also bring along new features and bug fixes). If there are reasons to keep XRootD below `v5.4.X` then this Issue can get closed. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Make a PR similar to PR #7335 that would update the builtin to XRootD [`v5.4.1`](https://github.com/xrootd/xrootd/releases/tag/v5.4.1). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. There isn't a bug explicitly here, but for a discussion on the Python 3 binding and modern `setuptools` issue that was resolved in XRootD `v5.4.1` see the links in additional context. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Not relevant for this issue, but all instances related to the XRootD issues were tested in ROOT `v6.24/06`. ### Additional context; <!--; Add any other context about the problem here.; -->. * https://github.com/xrootd/xrootd/issues/1579; * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/58; * https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:2589,down,download,2589,https://root.cern,https://github.com/root-project/root/issues/9967,1,['down'],['download']
Availability,"ine __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:46: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:5653,error,error,5653,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"ing for Python; -- Found GCC. Major version 9, minor version 3; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'RelWithDebInfo' (flags = '-O3 -g'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:1825,Error,Error,1825,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Error'],['Error']
Availability,"ing module 'Core':; While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:20256,error,error,20256,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"ing) Identical condition 'thisRunNumber<runNumber', second condition is always false. [math/mathcore/src/TMath.cxx:826]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:1908,error,error,1908,https://root.cern,https://github.com/root-project/root/pull/1343,1,['error'],['error']
Availability,"ing.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:19 [opt]; frame #22: 0x0000000110404d20 libCore.6.22.06.so`ROOT::Internal::GetROOT2() at TROOT.cxx:385:22 [opt]; frame #23: 0x000000011042f4ef libCore.6.22.06.so`TEnv::Getvalue(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:3678,Error,ErrorIgnoreLevel,3678,https://root.cern,https://github.com/root-project/root/issues/7418,1,['Error'],['ErrorIgnoreLevel']
Availability,"ing/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:7247,error,error,7247,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:; 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4907,Error,Error,4907,https://root.cern,https://github.com/root-project/root/issues/6597,1,['Error'],['Error']
Availability,"inging other bugs (see simple patch in **Reproducer**).; => This seems to work for me locally with a fresh copy of the master under Ubuntu 20.04; - or at least update the documentation to indicate that the parameter `ovlp` is used only in standard mode and ignored in sampling mode. --------------------------------; Potential related bug: some of these really small overlaps appear only when the number of samples is increased but disappear if it is further increased.; However for a given number the list of overlaps is stabled over re-running the macro (new ROOT session at each time).; The new overlaps also appear mostly in the ""last volumes in the geometry"" to be tested.; So it could be that something is not so stable in the sequence of random points:; - first volume getting always mostly the same points independent of the number of samples ; - while last volume getting set of points depending highly on number of samples. I did not manage to reliably reproduce it however so I would create a separate issue if I find the time to test and confirm it later. ### Reproducer. Files in archive: examine_mcbm_beam_2019_03.geo.root, check_overlaps.C, root_overlaps_samp_thr.patch; [check_overlaps.tar.gz](https://github.com/root-project/root/files/14261529/check_overlaps.tar.gz). 1. Run once the macro with master: some big overlaps, some known overlaps of size ~0.4, some overlap of size ~10^-8 only if higher number of samples provided, overlap threshold does not have an effect in sampling mode calls. 2. Apply following patch; ```diff; diff --git a/geom/geompainter/src/TGeoChecker.cxx b/geom/geompainter/src/TGeoChecker.cxx; index fc93cc8b82..0e77517729 100644; --- a/geom/geompainter/src/TGeoChecker.cxx; +++ b/geom/geompainter/src/TGeoChecker.cxx; @@ -1193,7 +1193,7 @@ TGeoOverlap *TGeoChecker::MakeCheckOverlap(const char *name, TGeoVolume *vol1, T; /// Check illegal overlaps for volume VOL within a limit OVLP by sampling npoints; /// inside the volume shape. -void TGeoChecker::Chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:3044,reliab,reliably,3044,https://root.cern,https://github.com/root-project/root/issues/14675,1,['reliab'],['reliably']
Availability,"inkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor NotifyFreed;. // NB! `LinkedObjects` needs to be destroyed before `NotifyFreed` because; // `~ConcreteLinkedObject` calls `NotifyFreed`; std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146:1307,Error,Error,1307,https://root.cern,https://github.com/root-project/root/issues/11146,1,['Error'],['Error']
Availability,"inux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:2538,ERROR,ERROR,2538,https://root.cern,https://github.com/root-project/root/issues/13895,1,['ERROR'],['ERROR']
Availability,io: Add version number to missing StreamerInfo record error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4374:54,error,error,54,https://root.cern,https://github.com/root-project/root/pull/4374,1,['error'],['error']
Availability,ion. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:; ```; root [0] #include <atlstr.h>; In file included from ROOT_prompt_0:1:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous; typedef byte cs_byte;; ^; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'; typedef unsigned char byte;; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; In file included from ROOT_prompt_0:1:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:1016,error,error,1016,https://root.cern,https://github.com/root-project/root/issues/14602,1,['error'],['error']
Availability,"ion. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```; -> root --web; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:1097,Error,Error,1097,https://root.cern,https://github.com/root-project/root/issues/15340,1,['Error'],['Error']
Availability,"ional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)ne",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:10414,error,error,10414,https://root.cern,https://github.com/root-project/root/issues/13996,1,['error'],['error']
Availability,"ional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st posted in root-forum: https://root-forum.cern.ch/t/cppyy-user-side-breaks-root/54393",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:1577,error,error,1577,https://root.cern,https://github.com/root-project/root/issues/12635,1,['error'],['error']
Availability,"ions.h:198:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_f' in __host__ function; return __nvvm_atom_cta_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:198:10: note: '__nvvm_atom_cta_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-projec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:8520,error,error,8520,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"iple fields defined as fixed-length single-dimensional `std::array` of `float`, e.g. `std::array<float,6> covMatrix` in `edm4hep::TrackerHit` [1]. When data is written with these fields, it is not readable with ROOT, and an error is returned. This is reported under EDM4hep as well, at https://github.com/key4hep/EDM4hep/issues/262, but it appears this is an issue in ROOT, not EDM4hep. [1]: https://github.com/key4hep/EDM4hep/blob/60ad463c5474b51115345446edb5e90bf9dc33f5/edm4hep.yaml#L348. ### Reproducer. To reproduce the issue with the input file [edm4hep_events.root.gz](https://github.com/root-project/root/files/14365763/edm4hep_events.root.gz) (38K), use the follwing steps. ### In ROOT interpreter:; ```; ROOT::RDataFrame df(""events"", ""edm4hep_events.root""); df.Describe(); ```; returns; ```; root [0] ROOT::RDataFrame df(""events"", ""edm4hep_events.root""); (ROOT::RDataFrame &) A data frame built on top of the events dataset.; root [1] df.Describe(); Error in <TRint::HandleTermInput()>: std::runtime_error caught: TTree leaf TrackerHitPlanes.covMatrix[6] has both a leaf count and a static length. This is not supported.; ```. ### In Python interpreter:; ```; import ROOT; df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); df.Describe(); ```; returns; ```; In [1]: import ROOT; ...: df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); ...: df.Describe(); ...: ; Installed ROOT event loop hook.; ---------------------------------------------------------------------------; runtime_error Traceback (most recent call last); Cell In[1], line 3; 1 import ROOT; 2 df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); ----> 3 df.Describe(). runtime_error: ROOT::RDF::RDFDescription ROOT::RDF::RInterfaceBase::Describe() =>; runtime_error: TTree leaf TrackerHitPlanes.covMatrix[6] has both a leaf count and a static length. This is not supported.; ```. ### Generation of the input file. To generate the input file [edm4hep_events.root.gz](https://github.com/root-project/root/files/143657",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14790:1128,Error,Error,1128,https://root.cern,https://github.com/root-project/root/issues/14790,1,['Error'],['Error']
Availability,"ir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11984,Error,Error,11984,https://root.cern,https://github.com/root-project/root/issues/12372,1,['Error'],['Error']
Availability,"irly easy to reproduce. It seems that one can not provide `-isystem` and `-D` command line options to `genreflex` in any order. Specifying `-D` flags after `-isystem` flags seems to not work. ### Reproducer. Take the following file, called `header.h`:. ```c++; #ifndef HEADER_H; #define HEADER_H. // Require the preprocessor definition.; #ifndef DO_NOT_FAIL; #error ""Preprocessor definition not set!""; #endif. /// Dummy type; struct TypeWithDictionary {; int foo;; };. #endif; ```. With the following additional `selection.xml` file:. ```xml; <lcgdict>; <class name=""TypeWithDictionary"" />; </lcgdict>; ```. With these two, I can run the following happily:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_success.cpp -D DO_NOT_FAIL -isystem /some/path; [bash][atspot01]:root-dict-isystem > head test_dict_success.cpp ; // Do NOT change. Changes will be lost next time file is generated. #define R__DICTIONARY_FILENAME test_dict_success; #define R__NO_DEPRECATION. /*******************************************************************/; #include <stddef.h>; #include <stdio.h>; #include <stdlib.h>; #include <string.h>; [bash][atspot01]:root-dict-isystem >; ```. But the following fails:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_fail.cpp -isystem /some/path -D DO_NOT_FAIL; input_line_7:8:2: error: ""Preprocessor definition not set!""; #error ""Preprocessor definition not set!""; ^; Error: rootcling: compilation failure (./test_dict_fail5dde80a7de_dictUmbrella.h); [bash][atspot01]:root-dict-isystem >; ```. My guess is that `-isystem` in general is not taken correctly into account, but as I wrote in the description, I couldn't clearly demonstrate that thing just yet... ### ROOT version. Tried `6.26.06` and `v6-28-00-patches`. ### Installation method. Does not play a role here. ### Operating system. `x86_64-ubuntu2004-gcc9-opt`, `x86_64-el9-gcc13-opt`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13207:2270,error,error,2270,https://root.cern,https://github.com/root-project/root/issues/13207,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"is here; __MATHCALL (exp10,, (_Mdouble_ __x));; ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:237:1: note: expanded from here; __exp10f; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:193:18: error: static declaration of '__expf' follows non-static declaration; __DEVICE__ float __expf(float __a) { return __nv_fast_expf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:95:1: note: previous declaration is here; __MATHCALL_VEC (exp,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:216:1: note: expanded from here; __expf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:5968,error,error,5968,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:4110,Error,Error,4110,https://root.cern,https://github.com/root-project/root/issues/7936,1,['Error'],['Error']
Availability,"is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The exit status of `root --help` is 1, not 0. The [exit status](https://en.wikipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1122,echo,echo,1122,https://root.cern,https://github.com/root-project/root/issues/11977,1,['echo'],['echo']
Availability,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:1637,error,error,1637,https://root.cern,https://github.com/root-project/root/pull/5054,4,['error'],['error']
Availability,is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:5945,error,error,5945,https://root.cern,https://github.com/root-project/root/pull/5054,1,['error'],['error']
Availability,"is:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2workspace` runs but the parameter for `NP_norm` disappears from the fit results. ### Setup; ROOT 6.24/06 in a container built with Debian 10. ### Additional context; none",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:4230,ERROR,ERROR,4230,https://root.cern,https://github.com/root-project/root/issues/9070,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"is=0x7ffdab5e2070, entry=0) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:191; #15 0x0000561d87cc8829 in TTreeReader::Next (this=0x7ffdab5e2070) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:183; #16 0x0000561d87cc863b in main () at repro_treereader.cpp:42; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <TChain.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTree.h>; #include <TFile.h>; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; {; // write a TTree and its friend to the same file:; // when t1 is read back, it automatically also loads its friend; TFile f(""f.root"", ""recreate"");; TTree t1(""t1"", ""t1"");; TTree t2(""t2"", ""t2"");; int x = 42;; t2.Branch(""x"", &x);; t1.Fill();; t2.Fill();; t1.AddFriend(&t2);; t1.Write();; t2.Write();; f.Close();; }. {; // reading t2.x via chain->SetBranchAddress works; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; int x = 0;; c.SetBranchAddress(""t2.x"", &x);; c.GetEntry(0);; std::cout << x << '\n'; // prints 42; }. {; // reading t2.x via TTreeReader segfaults; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; TTreeReader r(&c);; TTreeReaderValue<int> rv(r, ""t2.x"");; r.Next();; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@b694869108 (v6.23). ### Additional context; <!--; Add any other context about the problem here.; -->. This blocks #6741 . Using TTree directly instead of passing through TChain works:. ```c++; { ; TFile f(""f.root""); ; auto *t = f.Get<TTree>(""t1""); ; TTreeReader r(t); ; TTreeReaderValue<int> rv(r, ""t2.x""); ; r.Next();; std::cout << *rv << std::endl; // prints 42 ; } ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:3415,down,download,3415,https://root.cern,https://github.com/root-project/root/issues/6993,1,['down'],['download']
Availability,"ised (through pickle), and all its children are serialised with it (and their children, recursively). This behaviour leads to recursion limits hit by pickle after a certain amount of operations is requested, I could reproduce it with 200 operations:. ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. from dask.distributed import Client, LocalCluster. def many_defines(df):; # Maximum recursion depth exceeded at 200 iterations; for i in range(200):; df = df.Define(f""col_{i}"", f""{i}""). print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); df = RDataFrame(100, daskclient=client); many_defines(df); ```; Which raises the following; ```; _pickle.PicklingError: Could not pickle object as excessively deep recursion required.; ```. # Update. Fixing just the serialisation issue of the reproducer above unveiled another limitation of the current implementation. The distrdf graph locally needs to be pruned before being sent to the distributed scheduler. The pruning algorithm is also a recursive function, which by default have a limit of 1000 calls in Python. The reproducer above, when run with `990` Define nodes in the `many_defines` function, returns; ```; $: python test_many_defines.py; File ""/home/vpadulan/programs/rootproject/rootbuild/distrdf-percentage-ranges-distrdf-debug/lib/DistRDF/Node.py"", line 177, in graph_prune; if not n.graph_prune():; [Previous line repeated 988 more times]; RecursionError: maximum recursion depth exceeded; ```. ### Expected behavior. No error, as with local RDF:. ```python; import ROOT. def many_defines(df):; for i in range(1000):; df = df.Define(f""col_{i}"", f""{i}""); print(f""Total entries: {df.Count().GetValue()}""). if __name__ == ""__main__"":; df = ROOT.RDataFrame(100); many_defines(df); ```; ```; $: python rdf_many_defines.py ; Total entries: 100; ```. ### Setup; Fedora 35; ROOT >= 6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10449:1914,error,error,1914,https://root.cern,https://github.com/root-project/root/issues/10449,1,['error'],['error']
Availability,"issues. - [ ] Checked for duplicates. ### Description. ```; [100%] Linking CXX shared library ../../lib/libPyMVA.so; Undefined symbols for architecture x86_64:; ""_libintl_bind_textdomain_codeset"", referenced from:; __locale_bind_textdomain_codeset in libpython3.10.a(_localemodule.o); ""_libintl_bindtextdomain"", referenced from:; __locale_bindtextdomain in libpython3.10.a(_localemodule.o); ""_libintl_dcgettext"", referenced from:; __locale_dcgettext in libpython3.10.a(_localemodule.o); ""_libintl_dgettext"", referenced from:; __locale_dgettext in libpython3.10.a(_localemodule.o); ""_libintl_gettext"", referenced from:; __locale_gettext in libpython3.10.a(_localemodule.o); ""_libintl_setlocale"", referenced from:; __locale_setlocale in libpython3.10.a(_localemodule.o); __locale_localeconv in libpython3.10.a(_localemodule.o); ""_libintl_textdomain"", referenced from:; __locale_textdomain in libpython3.10.a(_localemodule.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libPyMVA.so] Error 1; make[1]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make: *** [all] Error 2; ```. ### Reproducer. `cmake --build mybuild --target install -j4 -v`. ### ROOT version. master branch from 12.02.2024:. ```; root -b -q ; ------------------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 13 2024, 09:47:07 |; | From heads/ianna/call_to_implicitly-deleted_copy_constructor_fix@5d76922a0f |; | With Apple clang version 13.0.0 (clang-1300.0.29.30) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------------------. ```. ### Installation method. fixation step-by-step instructions. ### Operating system. MacOS 11.6. ### Additional context. Python's build is detectin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14672:1000,error,error,1000,https://root.cern,https://github.com/root-project/root/issues/14672,1,['error'],['error']
Availability,"issues. - [X] Checked for duplicates. ### Description. This problem was discovered during a build through Spack that was using the Spack build cache. In this build cache Spack ; has elected to reset the modification time of ***all*** headers files to be 0 linux time. It turns out in that case, Cling/Clang/LLVM refused to actually uses any of the system headers coming from the spack-provided compiler build. So nothing is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was firs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:889,error,error,889,https://root.cern,https://github.com/root-project/root/issues/14372,1,['error'],['error']
Availability,"issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When passing a argument to a formula based RooFit function (e.g. `RooFormulaVar` or `RooGenericPdf`), RooFit will search for all occurrences of the object name in the formula and replace them with an ordinal parameter (needed for the underling `TFormula`). However, when the argument is a `RooConst` the name is just a string containing the value and this can break if there are numeric literals inside the formula.; For example; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```; becomes inside the `TFormula`; ```; x[0].7*x[0]; ```; because the name 2 of the `RooConst` matched the 2 of the numeric literal. This of course breaks during formula compilation. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The variables do not replace numeric literals no matter the name. Possibly `RooConst`s should be matched only by index?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; HEAD of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->; `RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.7))` creates `x[0]*x[0]`, which is mostly fine but may break if servers are redirected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992:1810,down,download,1810,https://root.cern,https://github.com/root-project/root/issues/11992,1,['down'],['download']
Availability,"isysroot influences where clang will pick up libc++. Without this, and with; Xcode 14.3, cling will use libc++ from Xcode (or the command line tools) rather; than stdc++ from the macOS SDK, as clang would normally use. Passing the isysroot; (which point to the SDK) fixes this. This solves build errors such as:; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:309:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:1: error: cannot template a using declaration; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:21: error: C++ requires a type specifier for all declarations; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:68: error: use of undeclared identifier '_Val'; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:462:73: error: expected '(' for function-style cast or type construction; using _BoolConstant _LIBCPP_NODEBUG_TYPE = integral_constant<bool, _Val>;; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12626:296,error,errors,296,https://root.cern,https://github.com/root-project/root/pull/12626,5,['error'],"['error', 'errors']"
Availability,it has similar name as field in TAttLine and produces duplicated members; in JSON. This makes impossible to correctly read it back. Solves https://root-forum.cern.ch/t/error-restoring-tstyle-from-json/44879/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181:168,error,error-restoring-tstyle-from-json,168,https://root.cern,https://github.com/root-project/root/pull/8181,1,['error'],['error-restoring-tstyle-from-json']
Availability,"it within the ROOT prompt in 6.28 and master.; In ROOT master and 6,28 it seems the vector is initialised with the values used the first time and not with the new ones. ; It works fine in 6.26, where the second time the vector passed to the DummyBroadCast function is initialised correctly. . ```; .L testBroadCast.hxx; Test1::Session s1;; Test2::Session s2;; ```. Here is the code : `testBroadCast.hxx`. ```; #include <iostream>; #include <vector>. template<class T>; void DummyBroadCast(const T* data, std::vector<size_t> shape, std::vector<size_t> targetShape) {. std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;. }. namespace Test1 {. struct Session {; ; std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(64);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 4, 4 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);. }. };; }. namespace Test2 {. struct Session {. std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(100);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 5, 5 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);; // DummyBroadCast(tensor_conv0bias, { 4 , 1 , 1 }, { 2 , 4 , 5, 5 });. }. };; }; ```; ; This affects some failures seen in SOFIE test like ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroot.tmva.sofie/test/gtest_tmva_sofie_test_TestSofieModels/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164:1791,failure,failures,1791,https://root.cern,https://github.com/root-project/root/issues/12164,1,['failure'],['failures']
Availability,"its between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1709,down,down,1709,https://root.cern,https://github.com/root-project/root/issues/6557,2,"['down', 'error']","['down', 'errors']"
Availability,"its/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/stl_algobase.h> // std::copy, std::fill_n; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:21646,error,error,21646,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"ity; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.10/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py"", line 145, in test_ignoring_out_of_range; self.assertEqual(dataset_numpy.numEntries(), n_in_range); AssertionError: 42 != 0; ----------------------------------------------------------------------; Ran 6 tests in 1.621s; FAILED (failures=1); ~~~. ### Expected behavior. No failure. This test did not fail with numpy 1.23. ### To Reproduce. 1. The failing test is part of the source distribution. ### Setup. 1. ROOT version 6.26.10; 2. Operating system Fedora Rawhide i686; 3. How you obtained ROOT - package build from source. ### Additional context. Package build from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:2326,failure,failures,2326,https://root.cern,https://github.com/root-project/root/issues/12162,2,['failure'],"['failure', 'failures']"
Availability,"ive of a function; specified by a computer program. AD exploits the fact that every computer; program, no matter how complicated, executes a sequence of elementary; arithmetic operations (addition, subtraction, multiplication, division, etc.); and elementary functions (exp, log, sin, cos, etc.). By applying the chain; rule repeatedly to these operations, derivatives of arbitrary order can; be computed automatically, accurately to working precision, and using at; most a small constant factor more arithmetic operations than the original; program. AD is an alternative technique to symbolic and numerical differentiation.; These classical methods run into problems: symbolic differentiation leads; to inefficient code (unless done carefully) and faces the difficulty of; converting a computer program into a single expression, while numerical; differentiation can introduce round-off errors in the discretization; process and cancellation. Both classical methods have problems with; calculating higher derivatives, where the complexity and errors increase.; Finally, both classical methods are slow at computing the partial; derivatives of a function with respect to many inputs, as is needed for; gradient-based optimization algorithms. Automatic differentiation solves; all of these problems, at the expense of introducing more software; dependencies. This patch allows ROOT to interoperate with clad. Namely, users can ask; the interpreter to produce a derivative or a gradient to a known function. An illustrative example code for first order derivative:. root [0] #include ""Math/CladDerivator.h""; root [1] double my_pow2(double x) { return x*x; }; root [2] auto derivative_meta_obj = clad::differentiate(my_pow2, /*wrt 1-st argument*/0);; root [3] derivative_meta_obj.dump();; The code is: double my_pow2_darg0(double x) {; return (1. * x + x * 1.);; }; root [5] derivative_meta_obj.execute(1) // no iterations, at the cost of function call.; (double) 2.0000000. Learn more about clad at https",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2378:1402,error,errors,1402,https://root.cern,https://github.com/root-project/root/pull/2378,1,['error'],['errors']
Availability,"iz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time on some experiments (data + code available on demand from Auger group, ask me). I am available for help in testing and possibly integrating and maintaining this addition, just let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:1710,avail,available,1710,https://root.cern,https://github.com/root-project/root/pull/40,4,['avail'],['available']
Availability,"ized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174; #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152; #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857; #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922; #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:3449,Error,ErrorHandler,3449,https://root.cern,https://github.com/root-project/root/issues/6640,1,['Error'],['ErrorHandler']
Availability,"j]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating sy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1689,error,error,1689,https://root.cern,https://github.com/root-project/root/issues/10875,1,['error'],['error']
Availability,jectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6037,error,error,6037,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,json: fix error with converting std::unordered_map,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3682:10,error,error,10,https://root.cern,https://github.com/root-project/root/pull/3682,1,['error'],['error']
Availability,json: fix error with converting std::unordered_map 6.16,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3684:10,error,error,10,https://root.cern,https://github.com/root-project/root/pull/3684,1,['error'],['error']
Availability,"k ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:3210,Error,Errors,3210,https://root.cern,https://github.com/root-project/root/issues/7567,1,['Error'],['Errors']
Availability,"k since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce; * On ROOT version 6.22/08; ```; $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] Take(v, 2); (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }; root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);; root [3] firstTwo; (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; root [4] auto firstTwo2 = Take(v, 2);; ROOT_prompt_4:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'; |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>; | |-DeclStmt 0x38829b8 <line:1:1, col:28>; | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'; | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2; | `-NullStmt 0x38829d0 <line:2:1>; |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:1210,error,error,1210,https://root.cern,https://github.com/root-project/root/issues/9261,2,['error'],['error']
Availability,"k-build-htsa7u5/ginclude -I/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/core/clib/res -I/opt/spack/opt/spack/monterey/nlohmann-json/3.11.2/onfre7c/include ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h /var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src/io/io/inc/LinkDef.h; In file included from <built-in>:433:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 1; ^; ```. ### Expected behavior. The `-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:6468,error,error,6468,https://root.cern,https://github.com/root-project/root/issues/11312,1,['error'],['error']
Availability,"k/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:3067,error,error,3067,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"kEntryBeyondEnd is what is expected to be set at the end of a `while(r.Next())` event loop. This change is not backward-compatible if anyone relied on `kEntryNotFound` being set even at the end of a well-behaved event loop. On the other hand, the second usage example in TTreeReader's docs (https://root.cern/doc/master/classTTreeReader.html) as well as the names of the enum values seem to indicate that `kEntryNotFound` is an error state and `kEntryBeyondEnd` is what indicates a normal completion of the event loop. P.S.; to be clear, the problem I'm trying to solve is that in the current state it's hard (maybe impossible) to distinguish between a TTreeReader event loop that ended well and one that ended because an entry that was supposed to be there was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8747:428,error,error,428,https://root.cern,https://github.com/root-project/root/pull/8747,1,['error'],['error']
Availability,"ke -GNinja -S source -B build -Dxrootd=OFF; cmake --build build. ```; ```console; ❯ singularity --version; singularity version 3.8.7-1.fc35; ❯ singularity build -f reproducer.sif reproducer.def; (...skip...); + mkdir /reproducer; + cd /reproducer; + git clone -b master --depth 1 http://github.com/root-project/root source; Cloning into 'source'...; (...skip...); + git -C source log; commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1343,error,errors,1343,https://root.cern,https://github.com/root-project/root/issues/10478,2,['error'],"['error', 'errors']"
Availability,"keLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 10840: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticCommon.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 10842: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandList.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandList.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 10860: 217>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\StmtDataCollectors.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\StmtDataCollectors.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; ```. **Error log:**; [ROOT_build.log](https://github.com/root-project/root/files/10216877/ROOT_build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:5873,error,error,5873,https://root.cern,https://github.com/root-project/root/issues/11881,2,"['Error', 'error']","['Error', 'error']"
Availability,"l Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #include ""TGeoMatrix.h""; #include ""TGeoMedium.h""; #include ""TGeoNavigator.h""; #include ""TGeoNode.h""; #include ""TGeoOpticalSurface.h""; #include ""TGeoPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:2809,error,error,2809,https://root.cern,https://github.com/root-project/root/issues/14302,1,['error'],['error']
Availability,"l attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocato",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:3153,error,error,3153,https://root.cern,https://github.com/root-project/root/pull/12449,1,['error'],['error']
Availability,"l&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:5856,error,error,5856,https://root.cern,https://github.com/root-project/root/issues/9424,1,['error'],['error']
Availability,"l/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315; #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119; #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96; #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false); at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434; #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578; #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888); at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:12369,error,error,12369,https://root.cern,https://github.com/root-project/root/issues/13034,2,['error'],['error']
Availability,"l=""1"" High=""10"" Low=""0"" Const=""False"" />; </Sample>. </Channel>; ```. and when I run this through `hist2workspace`, I get the following error:. ```; $ hist2workspace meas.xml. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#2] INFO:HistFactory -- hist2workspace is less verbose now. Use -v and -vv for more details. ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute InputFile of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoName of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoPath of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; [#2] ERROR:HistFactory -- Loading of xml document ""./meas_channel_0.xml"" failed; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```. which is correctly erroring, but also somewhat confusing. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS (13.0.1 (22A400)). ### Additional context. This comes out of scikit-hep/pyhf#2247 (please read that for some context).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:4363,ERROR,ERROR,4363,https://root.cern,https://github.com/root-project/root/issues/13287,2,"['ERROR', 'error']","['ERROR', 'erroring']"
Availability,"lain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TRO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:1013,avail,available,1013,https://root.cern,https://github.com/root-project/root/issues/12635,1,['avail'],['available']
Availability,"lang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 10804: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\Attrs.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangAttrClasses.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 10813: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\64198d3f4073834b8d7f82bf3cf1c3a5\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\746a45ea92bc2e9ad69718879e4e65a6\ClangAttrParsedAttrImpl.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Sema\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 10815: 187>C:\Program Files (x86)\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:2377,error,error,2377,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"lar expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/string_view:88:41: note: previous initialization is here; static constexpr size_type npos = size_type(-1);; ^; terminate called after throwing an instance of 'std::runtime_error'; what(): ; An error occurred while jitting in Snapshot. The lines above might indicate the cause of the crash. CMake Error at /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/RootTestDriver.cmake:238 (message):; error code: Child aborted. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:2191,error,error,2191,https://root.cern,https://github.com/root-project/root/pull/4437,3,"['Error', 'error']","['Error', 'error']"
Availability,"lass.; The function TGraphMultiErrors::PaintReverse serves the same purpose as TGraphPainter::PaintReverse and should be deleted too if the class becomes part of ROOT.; The function TGraphMultiErrors::PaintGraphMultiErrors performs the actual painting and would have to be included in the TGraphPainter class. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:3694,error,error,3694,https://root.cern,https://github.com/root-project/root/pull/3449,2,['error'],['error']
Availability,"late<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:8531,error,error,8531,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"lated to the discussion in [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971), this commit improves the situation by diagnosing the shadowing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`.; See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:; - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file.; - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use.; ```; +-------------------------+-------------------------------+; | Redeclaration kind | Time (us) for 1000000 lookups |; +-------------------------+-------------------------------+; | ForVisibleRedeclaration | 27617 |; | NotForRedeclaration | 717458 |; +-------------------------+-------------------------------+; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9788:1041,avail,available,1041,https://root.cern,https://github.com/root-project/root/pull/9788,1,['avail'],['available']
Availability,"lation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task from the RDF point of view runs sequentially:. ```; (gdb) info threads; Id Target Id Frame ; 1 Thread 0x7f1370756740 (LWP 34502) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f131020075c) at futex-internal.c:57; 2 Thread 0x7f135fbff640 (LWP 34504) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f13622926e0 <thread_status+96>) at futex-internal.c:57; 3 Thread 0x7f135f3fe640 (LWP 34505) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:2683,Failure,Failure,2683,https://root.cern,https://github.com/root-project/root/issues/11515,2,"['Failure', 'error']","['Failure', 'errorCode']"
Availability,"ld not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6686,error,error,6686,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ld/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7649,error,error,7649,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,"ld/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:21108,error,error,21108,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"ld/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:7530,error,error,7530,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':; TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':; TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':; TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':; TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':; TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'; /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow; collect2: error: ld returned 1 exit status; gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14102:3775,error,error,3775,https://root.cern,https://github.com/root-project/root/issues/14102,4,"['Error', 'error']","['Error', 'error']"
Availability,"ld](https://github.com/root-project/root/actions/runs/8568832804/job/23483489958) it can be clearly seen that the segfault happens when a `RModel` instance is read from a ROOT file.; The stack trace is the following:; ``` ; TMVA SOFIE Operator Conv: asymmetric padding not supported. Assume an average padding ; ; *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared() (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libROOTTMVASofie.so] TMVA::Experimental::SOFIE::RModel::Streamer(TBuffer&) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TKey::ReadObjectAny(TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/lib/libRIO.so] TDirectoryFile::GetObjectChecked(char const*, TClass const*) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] EmitModel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) (no debug info); [/Users/sftnight/ROOT-CI/build/tmva/sofie/test/emitFromROOT] main (no debug info); [/usr/lib/dyld] start (no debug info); make[2]: *** [SofieCompileModels_ROOT] Error 139; make[1]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ROOT.dir/all] Error 2; make: *** [all] Error 2; ```. This bug could be affecting other ROOT branches (for sure at least master). Moreover, the I/O of those objects might be corrupt ( the class is in the `Experimental` namespace, but this issue is definitively blocking the promotion to ROOT proper). ### Reproducer. It's enough to do some IO of `TMVA::Experimental::SOFIE::RModel` instances. ### ROOT version. master and 6.32 but likely also other versions are affected. ### Installation method. from sources. ### Operating system. mac, but likely others. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15156:1710,Error,Error,1710,https://root.cern,https://github.com/root-project/root/issues/15156,3,['Error'],['Error']
Availability,ld_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6905,error,error,6905,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,"ldd has problems with linking tmva due to this function in the header. Outlining it fixes it. ```; /usr/bin/ld: error: can't create dynamic relocation R_X86_64_TLSLD against symbol: TMVA::BDTEventWrapper::GetVarIndex()::fVarIndex in readonly segment; recompile object files with -fPIC; >>> defined in CMakeFiles/TMVA.dir/src/DecisionTree.cxx.o; >>> referenced by BDTEventWrapper.h:64 (/home/axel/build/root/branches/v6-10/cmake/include/TMVA/BDTEventWrapper.h:64); >>> CMakeFiles/TMVA.dir/src/DecisionTree.cxx.o:(void std::__introsort_loop<__gnu_cxx::__normal_iterator<TMVA::BDTEventWrapper*, std::vector<TMVA::BDTEventWrapper, std::allocator<TMVA::BDTEventWrapper> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<TMVA::BDTEventWrapper*, std::vector<TMVA::BDTEventWrapper, std::allocator<TMVA::BDTEventWrapper> > >, __gnu_cxx::__normal_iterator<TMVA::BDTEventWrapper*, std::vector<TMVA::BDTEventWrapper, std::allocator<TMVA::BDTEventWrapper> > >, long, __gnu_cxx::__ops::_Iter_less_iter) (.isra.194)); ```. While it'd be great to submit a reproducer to lld (I didn't manage to create one within the few minutes I invested), this change might be a cheap workaround. Unless it's a hot function where outlining is a real cost?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1256:112,error,error,112,https://root.cern,https://github.com/root-project/root/pull/1256,1,['error'],['error']
Availability,"lding module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:16066,error,error,16066,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"lding module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /Users/marcomeyer/Software/root/build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:26717,error,error,26717,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"le - Generate a C++ module.; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Split the dictionary into two parts: one containing the IO (ClassDef)information and another the interactivity support.; Choose verbosity level:; -v - Show errors (default).; -v0 - Show only fatal errors.; -v1 - Show errors (the same as -v).; -v2 - Show warnings.; -v3 - Show notes.; -v4 - Show information.; ```; ; This patch deprecates:; 1) +P, +V, +STUB, -gccxml, -cint, -reflex -- they are old CINT legacy options which had no meaning in rootcling.; 2) -p, -c -- remove old options used by rootcling -generate-pch as now the build system does not export its lists of flags directly to roocling.; ; The implementation of 2) was quite permissive as it tried to send all possible unknown options directly to rootcling. As a side effect of reworking of 2) we can restrict the options being sent and unknown options are not sent to rootcling anymore, improving encapsulation.; ; If there is a need to do so please contact us or use the EXTRA_CLING_ARGS env option. PS: The end goal is fixing the incremental builds when -Druntime_cxxmodules=On. We will have something like `rootcling --bare-cling=""-fmodules -fno-implicit-module-maps -fmodule-map-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:2155,error,errors,2155,https://root.cern,https://github.com/root-project/root/pull/4171,1,['error'],['errors']
Availability,"le building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared ide",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:3790,error,error,3790,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"le included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:19813,error,error,19813,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"le included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2869,error,error,2869,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,"le-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:12220,Failure,Failure,12220,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,"le;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 10840: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticCommon.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 10842: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandList.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandList.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 10860: 217>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\StmtDataCollectors.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\StmtDataCollectors.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; ```. **Error log:**; [ROOT_build.log](",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:5290,error,error,5290,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"leGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; 12:37:41 ; 12:37:41 EventData(xAOD::EventInfo_v1/EventInfo)> Cannot open ROOT container(Tree/Branch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std::string&) [with TRANS = xAOD::EventInfo_v1; PERS = xAOD::EventInfo_v1; std::string = std::__cxx11::basic_string<char>] while creating transient objectxAOD::EventInfo_v1/EventInfo: std::runtime_error: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj failed to get DataObject, Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=00000977",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:1751,avail,available,1751,https://root.cern,https://github.com/root-project/root/issues/16826,1,['avail'],['available']
Availability,"lete<TInterpreterValue> >::pointer) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core In",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:4034,Error,Error,4034,https://root.cern,https://github.com/root-project/root/issues/10984,1,['Error'],['Error']
Availability,"lete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:2028,error,error,2028,https://root.cern,https://github.com/root-project/root/issues/16601,1,['error'],['error']
Availability,libNew is a custom memory allocator used in ROOT to output more information about memory pressure. It essentially overrides the new and delete operators. The functionality of libNew is only available in *rootn.exe* and libNew is statically linked to the binary. In root-project/root#4717 we discovered that dlopening libNew at random time can trigger earthquakes because it allows the dynamic linker to *sometimes* resolve new and delete to the symbols from libNew and libc++. Since libNew was not designed to be dlopened we should make it a static library to enforce this protocol more strongly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722:190,avail,available,190,https://root.cern,https://github.com/root-project/root/pull/4722,1,['avail'],['available']
Availability,"libOracle.so is compiled with stdc++ and on OS X we're always; compiling with libc++. To prevent linking errors between libOracle.so; and the generated ROOT code in the STL symbols, we just disable; Oracle on this platform.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/563:105,error,errors,105,https://root.cern,https://github.com/root-project/root/pull/563,1,['error'],['errors']
Availability,"lice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:7002,error,error,7002,https://root.cern,https://github.com/root-project/root/issues/6977,1,['error'],['error']
Availability,"licitMT(). infileName = ""Zee_Sh221-0.root"" ; treeName = ""Nominal"" ; cutString = ""sample==\""Zbl\"""" ; distName = ""MET"" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:1630,error,error-for-selection-on-string-branch-in-filter-method,1630,https://root.cern,https://github.com/root-project/root/issues/7169,1,['error'],['error-for-selection-on-string-branch-in-filter-method']
Availability,"line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:9570,error,error,9570,https://root.cern,https://github.com/root-project/root/issues/15738,1,['error'],['error']
Availability,"line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:4537,error,error,4537,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:2011,avail,available,2011,https://root.cern,https://github.com/root-project/root/issues/12729,2,"['avail', 'down']","['available', 'download']"
Availability,"ling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:22495,error,error,22495,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"ling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6; #36 0x00007f06031781a7 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #37 0x00007f0602e677f7 in HandleInterpreterException (metaProcessor=0x308b020, input_line=0x4194ba0 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/proj; #40 0x00007f060b14a763 in TRint::ProcessLineNr (this=0x200fe60, filestem=0x7f060b15c757 ""ROOT_prompt_"", line=0x419af40 ""#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projec; #41 0x00007f060b149fa1 in TRint::HandleTermInput (this=0x200fe60) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:648; #42 0x00007f060b1477cd in TTermInputHandler::Notify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:133; #43 0x00007f060b14c187 in TTermInputHandler::ReadNotify (this=0x413b570) at /build/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:10130,error,error,10130,https://root.cern,https://github.com/root-project/root/issues/15511,1,['error'],['error']
Availability,"ling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:1322,error,error,1322,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2300,Error,Error,2300,https://root.cern,https://github.com/root-project/root/issues/10203,1,['Error'],['Error']
Availability,"lity.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here; #include <initializer_list>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:23893,error,error,23893,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"ll [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1687,error,error,1687,https://root.cern,https://github.com/root-project/root/issues/6791,1,['error'],['error']
Availability,"loat; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [ RUN ] RColumnElementEndian.Int16; [ OK ] RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWith",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:4576,Failure,Failure,4576,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,"lock are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. All the best,; Simon Spies. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile:; ![example](htt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:3817,error,error,3817,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['error']
Availability,loper/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:75: error: no type named '__is_member' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_member > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:485:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_nothrow_destructible.h:16:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_scalar.h:51:51: error: missing '#include <cstddef>'; declaration of 'nullptr_t' must be imported from module 'std.compat.cstddef' before it is required; template <> struct _LIBCPP_TEMPLATE_VIS is_scalar<nullptr_t> : public true_type {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstddef:59:9: note: previous declaration is here; using ::nullptr_t;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:510:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:34:2: error: is_trivially_destructible is not implemented; #error is_trivially_destructible is not implem,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:9243,error,error,9243,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"low argument and return types to be specified independently of the callable type (this means types don't have to match exactly and implicit conversions between float and double, etc are possible); (Specification of Define result type independent from inferred function return type may facilitate future optimizations related to suppressing dynamic memory allocation.); - support for callables with overloaded operator() as long as argument types are explicitly specified; - reduced copying/moving of callable. New features from pythonization of Define:; - support for free functions, static class member functions, and bound class member functions, with or without additional template arguments, and compatible with overloaded functions transparently from pyroot.; - support for expression strings, and a complete lambda expression passed as a string; - automatic inference of types from the graph (which don't have to exactly match the callable argument types as long as implicit conversion is available); - automatic inference of column names from callables in case column names are not explicitly provided (but only when available and unambiguous); - all variations are jitted with fully templated types for maximum possible inlining. given the following defined in c++; ```cpp; float squared(float x) { return x*x; }. double squared(double x) { return x*x; }. template<typename T>; T squared(T x) { return x*x; }. float squared2(float x) { return x*x; }. double squared2(double y) { return y*y; }. class Callable {; public:; float operator() (float x) { return x*x; }; double operator() (double x) { return x*x; }. template<typename T>; T operator() (T x) { return x*x; }. float squared(float x) { return x*x; }. double squared(double x) { return x*x; }. template<typename T>; T squared(T x) { return x*x; }. static float mul(float x, float y) { return x*y; }. };; ```. then in python one can do; ```python. d = ROOT.ROOT.RDataFrame(chain). #overload resolved by type of column; d = d.Define(""ove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:1197,avail,available,1197,https://root.cern,https://github.com/root-project/root/pull/9174,2,['avail'],['available']
Availability,"ls/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *.........................",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9634,error,error,9634,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,lude <cstddef>'; declaration of 'nullptr_t' must be imported from module 'std.compat.cstddef' before it is required; template <> struct _LIBCPP_TEMPLATE_VIS is_scalar<nullptr_t> : public true_type {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstddef:59:9: note: previous declaration is here; using ::nullptr_t;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:510:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:34:2: error: is_trivially_destructible is not implemented; #error is_trivially_destructible is not implemented; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:40:53: error: no template named 'is_trivially_destructible'; inline constexpr bool is_trivially_destructible_v = is_trivially_destructible<_Tp>::value;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:238:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/stdexcept:46:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstdlib:144:9: error: no member named 'at_quick_exit' in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:10189,error,error,10189,https://root.cern,https://github.com/root-project/root/issues/14337,2,['error'],['error']
Availability,"lude/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:10424,error,error,10424,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"ludes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:2265,error,error,2265,https://root.cern,https://github.com/root-project/root/issues/8518,1,['error'],['error']
Availability,"lumn will raise an error. . Reproducer:; ```; import ROOT; import numpy as np; rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}); rdf = rdf.Redefine(""bar"", ""bar + 1""); rdf.Snapshot(""output"", ""output.root""); ```. This gives:; ```; TypeError: Template method resolution failed:; none of the 3 overloaded methods succeeded. Full details:; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233:1711,Error,Error,1711,https://root.cern,https://github.com/root-project/root/issues/10233,1,['Error'],['Error']
Availability,"lved-symbols=ignore-in-object-files interpreter/llvm/src/lib/libclingInterpreter.a interpreter/llvm/src/lib/libclingUtils.a interpreter/llvm/src/lib/libclangCodeGen.a interpreter/llvm/src/lib/libclangRewriteFrontend.a interpreter/llvm/src/lib/libclangFrontend.a interpreter/llvm/src/lib/libclangDriver.a interpreter/llvm/src/lib/libclangParse.a interpreter/llvm/src/lib/libclangRewrite.a interpreter/llvm/src/lib/libclangSerialization.a interpreter/llvm/src/lib/libclangSema.a interpreter/llvm/src/lib/libclangAnalysis.a interpreter/llvm/src/lib/libclangASTMatchers.a interpreter/llvm/src/lib/libclangEdit.a -ldl interpreter/llvm/src/lib/libclangAST.a interpreter/llvm/src/lib/libclangLex.a interpreter/llvm/src/lib/libclangBasic.a /usr/lib/llvm-13/lib/libLLVM-13.so.1 && :; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; ```. Digging a bit deeper with the `-Wl,--verbose` linker flag:. ```; <<snip>>; attempt to open /usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise descriptio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:8917,error,error,8917,https://root.cern,https://github.com/root-project/root/issues/12152,2,['error'],['error']
Availability,"ly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:3591,error,error,3591,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ly_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:26164,error,error,26164,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"m /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:28919,error,error,28919,https://root.cern,https://github.com/root-project/root/issues/10528,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"m build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:4953,error,error,4953,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"m the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface.; All commands must be preceded by a . (dot), except; for the evaluation statement { } and the ?.; ===========================================================================; > [file] : output redirection to [file]; 2> [file] : error redirection to [file]; >& [file] : output&error redirection to [file]; Help: ? : help; help : help; /[keyword] : search keyword in help information; Shell: ![shell] : execute shell command; Source: v <[line]>: view source code <around [line]>; V [stack] : view source code in function call stack; t : show function call stack; f [file] : select file to debug; T : turn on/off trace mode for all source; J [stat] : Set warning level [0-5]; A [1|0] : allowing automatic variable on/off; trace <classname> : turn on trace mode for class; deltrace <classname> : turn off trace mode for class; Evaluation: p [expr] : evaluate expression (no declaration/loop/condition); Evaluation: s [expr] : step into expression (no declaration/loop/condition); Evaluation: S [expr] : step over expression (no declaration/loop/condition); {[statements]} : evaluate statement (any kind); x [file] : load [file] and execute function [file](w/o extension); xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension); X [file] : load [file] and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declaration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:2258,error,error,2258,https://root.cern,https://github.com/root-project/root/issues/10191,2,['error'],['error']
Availability,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12820:1927,down,download,1927,https://root.cern,https://github.com/root-project/root/issues/12820,1,['down'],['download']
Availability,"m.Z(); };; return Map(vec, getItemZ);; }. '''. ROOT.gInterpreter.Declare(vectors). if __name__ == ""__main__"":; ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(10, 10, 10)"").Snapshot(""Particle"", ""f1.root""); ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(20, 20, 20)"").Snapshot(""Cluster"", ""f2.root""); ROOT.RDataFrame(1).Define(""vec"", ""std::vector<XYZTVector>{XYZTVector(30, 30, 30, 30)}"").Snapshot(""Vertex"", ""f3.root""). ch1 = ROOT.TChain(""Particle""); ch1.Add(""f1.root""); ch2 = ROOT.TChain(""Cluster""); ch2.Add(""f2.root""); ch3 = ROOT.TChain(""Vertex""); ch3.Add(""f3.root""). ch1.AddFriend(ch2, ""cluster""); ch1.AddFriend(ch3, ""vertex""). df = ROOT.RDataFrame(ch1); print(df.Define(""particle_z"", ""vec.Z()"").Histo1D(""particle_z"").GetMean()); print(df.Define(""cluster_z"", ""cluster.vec.Z()"").Histo1D(""cluster_z"").GetMean()); print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); ```. which results in the error on 3rd print. Full output:. ```; 10.0; 20.0; input_line_99:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_103:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:1987,error,error,1987,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,"m64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:16569,error,error,16569,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,m::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtgtt; ```. ### ROOT version. master. ### Installation method. sources. ### Operating system. macOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:2290,Error,Error,2290,https://root.cern,https://github.com/root-project/root/issues/15340,3,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability,"mIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:3488,error,error,3488,https://root.cern,https://github.com/root-project/root/pull/13295,1,['error'],['error']
Availability,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11112:1906,error,error,1906,https://root.cern,https://github.com/root-project/root/issues/11112,5,"['Error', 'error']","['Error', 'error']"
Availability,"maes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is working:; ```; .L tutorials/fit/cmaesGausFit.C++g; cmaesGausFit(); ```. Please see instructions and links from PR #40 for more tests, performance checks, etc... Once everything is fine, I'll be able to squash all commits into a single one if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:1247,error,error,1247,https://root.cern,https://github.com/root-project/root/pull/507,3,"['Error', 'error']","['Error', 'error']"
Availability,make error on FreeBSD13.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:5,error,error,5,https://root.cern,https://github.com/root-project/root/issues/11430,1,['error'],['error']
Availability,"makeFlags = [; ""-Drpath=ON""; ""-DCMAKE_INSTALL_BINDIR=bin""; ""-DCMAKE_INSTALL_LIBDIR=lib""; ""-DCMAKE_INSTALL_INCLUDEDIR=include""; ""-Dbuiltin_llvm=OFF""; ""-Dbuiltin_nlohmannjson=OFF""; ""-Dbuiltin_openui5=OFF""; ""-Dalien=OFF""; ""-Dbonjour=OFF""; ""-Dcastor=OFF""; ""-Dchirp=OFF""; ""-Dclad=OFF""; ""-Ddavix=ON""; ""-Ddcache=OFF""; ""-Dfail-on-missing=ON""; ""-Dfftw3=OFF""; ""-Dfitsio=OFF""; ""-Dfortran=OFF""; ""-Dimt=ON""; ""-Dgfal=OFF""; ""-Dgviz=OFF""; ""-Dhdfs=OFF""; ""-Dhttp=ON""; ""-Dkrb5=OFF""; ""-Dldap=OFF""; ""-Dmonalisa=OFF""; ""-Dmysql=OFF""; ""-Dodbc=OFF""; ""-Dopengl=ON""; ""-Doracle=OFF""; ""-Dpgsql=OFF""; ""-Dpythia6=OFF""; ""-Dpythia8=OFF""; ""-Drfio=OFF""; ""-Droot7=OFF""; ""-Dsqlite=OFF""; ""-Dssl=ON""; ""-Dtmva=ON""; ""-Dvdt=OFF""; ""-Dwebgui=OFF""; ""-Dxml=ON""; ""-Dxrootd=OFF""; ]; ++ lib.optional (stdenv.cc.libc != null) ""-DC_INCLUDE_DIRS=${lib.getDev stdenv.cc.libc}/include""; ++ lib.optionals stdenv.isDarwin [; ""-DOPENGL_INCLUDE_DIR=${OpenGL}/Library/Frameworks""; ""-DCMAKE_DISABLE_FIND_PACKAGE_Python2=TRUE"". # fatal error: module map file '/nix/store/<hash>-Libsystem-osx-10.12.6/include/module.modulemap' not found; # fatal error: could not build module '_Builtin_intrinsics'; ""-Druntime_cxxmodules=OFF""; ];. NIX_LDFLAGS = lib.optionalString (stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU) ""-lgcc"";. postInstall = ''; for prog in rootbrowse rootcp rooteventselector rootls rootmkdir rootmv rootprint rootrm rootslimtree; do; wrapProgram ""$out/bin/$prog"" \; --set PYTHONPATH ""$out/lib"" \; --set ${lib.optionalString stdenv.isDarwin ""DY""}LD_LIBRARY_PATH ""$out/lib""; done. # Make ldd and sed available to the ROOT executable; wrapProgram ""$out/bin/root"" --prefix PATH : ""${lib.makeBinPath [; gnused # sed; stdenv.cc # c++ ld etc.; stdenv.cc.libc # ldd; ]}"". # Patch thisroot.{sh,csh,fish}. # The main target of `thisroot.sh` is ""bash-like shells"",; # but it also need to support Bash-less POSIX shell like dash,; # as they are mentioned in `thisroot.sh`. # `thisroot.sh` would include commands `lsof` and `procps` since ROOT 6.28.; # S",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:7055,error,error,7055,https://root.cern,https://github.com/root-project/root/issues/11920,1,['error'],['error']
Availability,"master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1544,error,errors,1544,https://root.cern,https://github.com/root-project/root/pull/15272,1,['error'],['errors']
Availability,"mbinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:1151,error,error,1151,https://root.cern,https://github.com/root-project/root/issues/13511,3,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"mensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile: . I tried to run the tests, but they failed at files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4664,error,error,4664,https://root.cern,https://github.com/root-project/root/pull/3449,2,['error'],"['error', 'errors']"
Availability,"mentVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_103:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_104:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; Traceback (most recent call last):; File ""test.py",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:3355,error,error,3355,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,metic' must be imported from module 'std.type_traits.is_arithmetic' before it is required; is_arithmetic<_Tp>::value> {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_arithmetic.h:23:50: note: previous declaration is here; template <class _Tp> struct _LIBCPP_TEMPLATE_VIS is_arithmetic; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:476:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:53: error: use of undeclared identifier '__remove_cv_t'; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_member > {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_pointer.h:35:75: error: no type named '__is_member' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_member > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:485:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_nothrow_destructible.h:16:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_tra,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:8126,error,error,8126,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,minor typo errors solved... # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14206:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/14206,1,['error'],['errors']
Availability,"mintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ...; 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:24022,error,error,24022,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:2104,Error,Error,2104,https://root.cern,https://github.com/root-project/root/pull/9035,3,"['Error', 'error']","['Error', 'Errors', 'error']"
Availability,"mnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5232,error,error,5232,https://root.cern,https://github.com/root-project/root/issues/12426,1,['error'],['error']
Availability,"module of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here; # include <experimental/string_view>; ^; /home/root-build/include/ROOT/RStringView.hxx:37:48: error: no template named 'char_traits' in namespace 'std'; template<class _CharT, class _Traits = std::char_traits<_CharT> >; ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:38:37: error: no member named 'experimental' in namespace 'std'; using basic_string_view = ::std::experimental::basic_string_view<_CharT,_Traits>;; ~~~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:41:12: error: no template named 'basic_string_view'; typedef basic_string_view<char> string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:42:12: error: no template named 'basic_string_view'; typedef basic_string_view<char16_t> u16string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:43:12: error: no template named 'basic_string_view'; typedef basic_string_view<char32_t> u32string_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:44:12: error: no template named 'basic_string_view'; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:7717,error,error,7717,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builtins/xrootd/CMakeLists.txt` to it inclusion point in `SearchInstalledSoftware.cmake`; 4. Add an error if `builtin_xrootd` is ON while `ssl` is OFF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16374:2095,error,error,2095,https://root.cern,https://github.com/root-project/root/issues/16374,1,['error'],['error']
Availability,"move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here; class PVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar; gument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here; class WVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:7681,error,error,7681,https://root.cern,https://github.com/root-project/root/issues/8642,1,['error'],['error']
Availability,mp101_singleCore.root was (of course) also use by mp101_fillNtuples.C. This will prevent the errors:; ```; Processing /data/sftnight/workspace/manual/root/tutorials/multicore/mp101_fillNtuples.C...; Error in <TFile::TFile>: file mp101_singleCore.root already exists; Error in <TROOT::WriteTObject>: The current directory (Rint) is not associated with a file. The object (singleCore) has not been written.; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5671:93,error,errors,93,https://root.cern,https://github.com/root-project/root/pull/5671,3,"['Error', 'error']","['Error', 'errors']"
Availability,"mplateFunctionWrapper (1 ms); [ RUN ] TClingCallFunc.FunctionWrapperIncompleteReturnType; [ OK ] TClingCallFunc.FunctionWrapperIncompleteReturnType (1 ms); [ RUN ] TClingCallFunc.MemberMethodWrapper; [ OK ] TClingCallFunc.MemberMethodWrapper (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperNodiscard; [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr; [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3497,Failure,Failure,3497,https://root.cern,https://github.com/root-project/root/issues/14512,1,['Failure'],['Failure']
Availability,"mported from /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /Users/marcomeyer/Software/root/build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ```. ### Reproducer. ```; cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:26908,error,error,26908,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,ms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. Mac OS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:4251,error,error,4251,https://root.cern,https://github.com/root-project/root/issues/16486,1,['error'],['error']
Availability,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('; 2548 | while (CurPtr+16 <= BufferEnd &&; | ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:6949,error,error,6949,https://root.cern,https://github.com/root-project/root/issues/9424,1,['error'],['error']
Availability,"mselves generate some warning), we just now started to teach our build system to provide include paths separately with `-I` and `-isystem` to the dictionary generation commands. (See: https://gitlab.cern.ch/atlas/atlasexternals/-/merge_requests/1028). As it happens, this didn't solve our original issue with an older version of [TBB](https://github.com/oneapi-src/oneTBB), but that I did not manage to reproduce with a standalone example yet, so let's ignore that one for now. (You can find some more info in: https://gitlab.cern.ch/atlas/athena/-/merge_requests/64172). But one issue that I found during this development is fairly easy to reproduce. It seems that one can not provide `-isystem` and `-D` command line options to `genreflex` in any order. Specifying `-D` flags after `-isystem` flags seems to not work. ### Reproducer. Take the following file, called `header.h`:. ```c++; #ifndef HEADER_H; #define HEADER_H. // Require the preprocessor definition.; #ifndef DO_NOT_FAIL; #error ""Preprocessor definition not set!""; #endif. /// Dummy type; struct TypeWithDictionary {; int foo;; };. #endif; ```. With the following additional `selection.xml` file:. ```xml; <lcgdict>; <class name=""TypeWithDictionary"" />; </lcgdict>; ```. With these two, I can run the following happily:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_success.cpp -D DO_NOT_FAIL -isystem /some/path; [bash][atspot01]:root-dict-isystem > head test_dict_success.cpp ; // Do NOT change. Changes will be lost next time file is generated. #define R__DICTIONARY_FILENAME test_dict_success; #define R__NO_DEPRECATION. /*******************************************************************/; #include <stddef.h>; #include <stdio.h>; #include <stdlib.h>; #include <string.h>; [bash][atspot01]:root-dict-isystem >; ```. But the following fails:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_fail.cpp -isystem /some/path -D DO_NOT_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13207:1233,error,error,1233,https://root.cern,https://github.com/root-project/root/issues/13207,1,['error'],['error']
Availability,"mtbb201_parallelHistoFill.C fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14936:81,error,error,81,https://root.cern,https://github.com/root-project/root/pull/14936,1,['error'],['error']
Availability,"mva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior; Project build successfully. ### To Reproduce; 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 4. mkdir build_amd64 && cd build_amd64; 5. pip install pytest; 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON ..; 6. cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:2650,error,error,2650,https://root.cern,https://github.com/root-project/root/issues/9487,1,['error'],['error']
Availability,"n [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10784:1948,Down,Download,1948,https://root.cern,https://github.com/root-project/root/issues/10784,2,"['Down', 'down']","['Download', 'download']"
Availability,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:1614,recover,recover,1614,https://root.cern,https://github.com/root-project/root/issues/8444,1,['recover'],['recover']
Availability,"n ix86 and x86_64. The test failure:. ```; Start 207: gtest-math-matrix-test-testMatrixTSparse; 243/1265 Test #207: gtest-math-matrix-test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. - Build root with gcc 14 on Fedora 40 on aarch64, ppc64le or s390x; - Run the test. ### ROOT versi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:980,Failure,Failure,980,https://root.cern,https://github.com/root-project/root/issues/14446,1,['Failure'],['Failure']
Availability,"n... "" << std::endl;; c->SetOwner(false);; auto iter = c->MakeIterator();; while (auto element = iter->Next()); {; deleteTCollections(element);; }; delete iter;; delete c;; }; else; {; delete obj;; }; }. void test(); {; int bins{10}, min{0}, max{10};; TObjArray *main = new TObjArray();; main->SetOwner(false);. auto *collectionInside = new TList();; collectionInside->SetOwner(true);. TH1I *histo1DinsideCollection = new TH1I(""histo 1d"", ""histo 1d"", bins, min, max);; histo1DinsideCollection->Fill(2);; collectionInside->Add(histo1DinsideCollection);. main->Add(collectionInside);; std::cout << "" ====== Listing elements in lists... ====== "" << std::endl;; for (int i = 0; i < main->GetEntries(); ++i); {; std::cout << ""main["" << i << ""] = "" << main->At(i) << "" is a: "" << main->At(i)->ClassName() << "" with title: "" << ((TNamed *)(main->At(i)))->GetTitle() << std::endl;; }; for (int i = 0; i < collectionInside->GetEntries(); ++i); {; std::cout << ""\t collectionInside["" << i << ""] = "" << collectionInside->At(i) << "" is a: "" << collectionInside->At(i)->ClassName() << "" with title: "" << ((TNamed *)(collectionInside->At(i)))->GetTitle() << std::endl;; }; std::cout << "" ====== Deleting... ====== "" << std::endl;; deleteTCollections(main);; return;; }; ```. ### ROOT version. ```; ROOT v6.30/01; Built for linuxx8664gcc on Jan 30 2024, 16:24:12; From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8; With c++ (GCC) 12.2.0; Binary directory: /ssd_data/builds/latest/sw/ubuntu2204_x86-64/ROOT/526782cfe8-local1/bin; ```. ### Installation method. aliBuild. ### Operating system. Ubuntu 22.04.01. ### Additional context. ```bash; $> uname -ra; Linux <hostname> 6.2.0-39-generic #40~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Nov 16 10:53:04 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; $> lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.3 LTS; Release:	22.04; Codename:	jammy; ```. [test.txt](https://github.com/root-project/root/files/14112818/test.txt). CC: @ktf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504:3007,avail,available,3007,https://root.cern,https://github.com/root-project/root/issues/14504,1,['avail'],['available']
Availability,"n.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. Inside the ROOT interpreter; ```ROOT; TBrowser tb; ```; 5. Since the `tutorials` is a symlink to `/nix/store/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-root-6.18.04/tutorials`, `TBrowser` will follow the symlink, try to expand `/nix/store` (where all the packages are stored), and get stuck there.; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.18/04; Built for linuxx8664gcc on Sep 11 2019, 15:38:23; From tags/v6-18-04@v6-18-04. Installed using nix package manager on NixOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213:2480,down,download,2480,https://root.cern,https://github.com/root-project/root/issues/7213,1,['down'],['download']
Availability,"n.exe and llvm-tblgen.exe being ran. How to disable run these two exes. Thanks in advance. Versions and configuration; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.20). **Repro steps:**; 1. Open a VS 2019 x64 Native Tools Command Prompt; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone hhttps://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec_a && cd build_arm64ec_a; 6. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharact",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:1160,error,error,1160,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:3517,Error,Error,3517,https://root.cern,https://github.com/root-project/root/issues/14155,1,['Error'],['Error']
Availability,"n/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:3418,error,error,3418,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"n:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 8.36115e-22; NCalls = 47; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; <end of output>; Test time = 0.32 sec; ----------------------------------------------------------; Test Fail Reason:; Error regular expression found in output. Regex=[: error:]; ""tutorial-fit-exampleFit3D"" end time: Mar 28 16:08 CDT; ""tutorial-fit-exampleFit3D"" time elapsed: 00:00:00; ----------------------------------------------------------. ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:2823,error,error,2823,https://root.cern,https://github.com/root-project/root/issues/15091,3,"['Error', 'error']","['Error', 'error']"
Availability,"n; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:1008,error,error,1008,https://root.cern,https://github.com/root-project/root/issues/7788,1,['error'],['error']
Availability,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:5527,Error,Error,5527,https://root.cern,https://github.com/root-project/root/issues/8518,4,['Error'],['Error']
Availability,"n](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a == 0) {}; ```. It shows that there are many threads in flight (`21`!), even if the distributed task from the RDF point of view runs sequentially:. ```; (gdb) info threads; Id Target Id Frame ; 1 Thread 0x7f1370756740 (LWP 34502) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f131020075c) at futex-internal.c:57; 2 Thread 0x7f135fbff640 (LWP 34504) ""python"" __futex_absti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:2178,Failure,Failure,2178,https://root.cern,https://github.com/root-project/root/issues/11515,1,['Failure'],['Failure']
Availability,"n_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 's",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:7279,error,error,7279,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"napshot(""Vertex"", ""f3.root""). ch1 = ROOT.TChain(""Particle""); ch1.Add(""f1.root""); ch2 = ROOT.TChain(""Cluster""); ch2.Add(""f2.root""); ch3 = ROOT.TChain(""Vertex""); ch3.Add(""f3.root""). ch1.AddFriend(ch2, ""cluster""); ch1.AddFriend(ch3, ""vertex""). df = ROOT.RDataFrame(ch1); print(df.Define(""particle_z"", ""vec.Z()"").Histo1D(""particle_z"").GetMean()); print(df.Define(""cluster_z"", ""cluster.vec.Z()"").Histo1D(""cluster_z"").GetMean()); print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); ```. which results in the error on 3rd print. Full output:. ```; 10.0; 20.0; input_line_99:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_103:2:142: error: no matching function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; input_line_104:2:142: error: no matching function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:2671,error,error,2671,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,"nating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.c:51); ==22765== by 0x544D92D: abort (abort.c:100); ==22765== by 0x4E9E0A8: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9505: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA9570: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x4EA97F4: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29); ==22765== by 0x6C99676: cling_runtime_internal_throwIfInvalidPointer.cold (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DFF3CC: ???; ==22765== by 0x1FFEFFBB3F: ???; ==22765== by 0xB60A6A5548AF56FF: ???; ==22765== by 0x6E83C9F: ??? (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x4DEB03F: ???; ==22765== ; ==22765== HEAP SUMMARY:; ==22765== in use at exit: 66,909,576 bytes in 172,570 blocks; ==22765== total heap usage: 645,966 allocs, 473,396 frees, 231,012,668 bytes allocated; ==22765== ; ==22765== LEAK SUMMARY:; ==22765== definitely lost: 0 bytes in 0 blocks; ==22765== indirectly lost: 0 bytes in 0 blocks; ==22765== possibly lost: 7,728 bytes in 66 blocks; ==22765== still reachable: 66,622,884 bytes in 169,043 blocks; ==22765== of which reachable via heuristic:; ==22765== stdstring : 111 bytes in 1 blocks; ==22765== multipleinheritance: 7,776 bytes in 10 blocks; ==22765== suppressed: 278,964 bytes in 3,461 blocks; ==22765== Rerun with --leak-check=full to see details of leaked memory; ==22765== ; ==22765== Use --track-origins=yes to see where uninitialised values come from; ==22765== For lists of detected and suppressed errors, rerun with: -s; ==22765== ERROR SUMMARY: 237 errors from 1 contexts (suppressed: 185 from 20); Aborted (core dumped); ```. That seems an important issue to fix. We should also probably run valgrind on all the tests to get a feeling of where we stand. And, yes I know it can take days or weeks but I think it is worth it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:8623,error,errors,8623,https://root.cern,https://github.com/root-project/root/issues/11385,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"nce it fetches the range from a range name that does not exist. . ### To Reproduce; In PyROOT, the issue can be reproduced using; ```Python; import ROOT. ws_cat1 = ROOT.RooWorkspace(""ws_cat1""); ws_cat1.factory(""Gaussian::pdf_cat1(x_cat1[0,10],mu_cat1[4,0,10],sigma_cat1[1.0,0.1,10.0])""); pdf_cat1 = ws_cat1.pdf(""pdf_cat1""); x_cat1 = ws_cat1.var(""x_cat1""); x_cat1.setRange(""SideBandLo_cat1"", 0, 2); x_cat1.setRange(""SideBandHi_cat1"", 6, 10); ds_cat1 = pdf_cat1.generate(ROOT.RooArgSet(x_cat1), 11000). ws_cat2 = ROOT.RooWorkspace(""ws_cat2""); ws_cat2.factory(""Gaussian::pdf_cat2(x_cat2[0,10],mu_cat2[6,0,10],sigma_cat2[1.0,0.1,10.0])""); pdf_cat2 = ws_cat2.pdf(""pdf_cat2""); x_cat2 = ws_cat2.var(""x_cat2""); x_cat2.setRange(""SideBandLo_cat2"", 0, 4); x_cat2.setRange(""SideBandHi_cat2"", 8, 10); ds_cat2 = pdf_cat2.generate(ROOT.RooArgSet(x_cat2), 11000). index_cat = ROOT.RooCategory(""cat"", ""cat""); index_cat.defineType(""cat1""); index_cat.defineType(""cat2""). sim_pdf = ROOT.RooSimultaneous(""sim_pdf"", """", index_cat); sim_pdf.addPdf(pdf_cat1, ""cat1""); sim_pdf.addPdf(pdf_cat2, ""cat2""). ROOT.gInterpreter.GenerateDictionary(""std::map<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); ROOT.gInterpreter.GenerateDictionary(""std::pair<std::string, RooDataSet*>"", ""map;string;RooDataSet.h""); dsmap = ROOT.std.map('string, RooDataSet*')(); dsmap.keepalive = list(); dsmap.keepalive.append(ds_cat1); dsmap.keepalive.append(ds_cat2); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat1"", ds_cat1)); dsmap.insert(dsmap.begin(), ROOT.std.pair(""const string, RooDataSet*"")(""cat2"", ds_cat2)); combData = ROOT.RooDataSet(""combData"", """", ROOT.RooArgSet(x_cat1, x_cat2),; ROOT.RooFit.Index(index_cat),; ROOT.RooFit.Import(dsmap)). nll = sim_pdf.createNLL(combData, ROOT.RooFit.Range(""SideBandLo,SideBandHi""), ROOT.RooFit.SplitRange()); ```; The last step raises the error ""runtime_error: Error in RooAbsPdf::createNLL! The ranges SideBandLo,SideBandHi are overlapping!"" when using ROOT 6.26+.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11396:2458,error,error,2458,https://root.cern,https://github.com/root-project/root/issues/11396,2,"['Error', 'error']","['Error', 'error']"
Availability,"nce the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:1274,fault,fault,1274,https://root.cern,https://github.com/root-project/root/issues/15197,1,['fault'],['fault']
Availability,"nches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ```. Note: the last call should give the equivalent result than any other previous call, but it refuses to read the tree since only a single file is passed to the TChain.; Note, that the code works well if the TChain is initialized with 2 or more files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:3341,Error,Errors,3341,https://root.cern,https://github.com/root-project/root/issues/7567,10,"['Error', 'error']","['Error', 'Errors', 'errors']"
Availability,nclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unkno,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:17578,error,error,17578,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"nclude/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected parameter declarator; template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:75: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:6559,error,error,6559,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"ncludes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:30:12: note: submodule of top-level module 'std' implicitly imported here;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6431,error,error,6431,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"nction ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’?; socket->set(zmq::sockopt::linger, PERIOD);; ^~~; send; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared; socket->set(zmq::sockopt::linger, PERIOD);; ^~~~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type; using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;; ^~~~~~~~~~; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:1422,error,error,1422,https://root.cern,https://github.com/root-project/root/issues/10107,1,['error'],['error']
Availability,"ndidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:4868,down,download,4868,https://root.cern,https://github.com/root-project/root/issues/10984,1,['down'],['download']
Availability,"ne 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using K",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7009,Error,Error,7009,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Error'],['Error']
Availability,"ne; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_LIBBSD` (in addition to `HAS_STRLCPY`) that triggers the inclusion of bsd/string.h in clib/inc/strlcpy.h in the `#else` case of `#ifndef HAS_STRLCPY`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. git master, `builtin_llvm=OFF`, #12151 fixed via `${CLING_BINARY_DIR}` instead of `${LLVM_BINARY_DIR}`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. master, Debian Sid, LLVM 13.0.1-11, gcc 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:10698,down,downstream,10698,https://root.cern,https://github.com/root-project/root/issues/12152,1,['down'],['downstream']
Availability,"ng ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; ```. You can find the details in https://gitlab.cern.ch/atlas/athena/-/merge_requests/59648, but the problem is luckily fairly easy to reproduce in a completely ""standalone"" way as well. ### Expected behavior. We would like to be able to write and read `std::vector<std::array<T, N> >` variables (and ideally even more complicated combinations of `std::vector` and `std::array` types) using `TTree` branches. ### To Reproduce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:1374,Error,Error,1374,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability,"ng function for call to 'getArrZ'; ...= [](ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& var0){return getArrZ(var0); ^~~~~~~; input_line_42:10:15: note: candidate function not viable: no known conversion from 'ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,; ROOT::Math::DefaultCoordinateSystemTag>' (aka 'DisplacementVector3D<Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>') to; 'const RVec<ROOT::Math::XYZTVector>' (aka 'const RVec<LorentzVector<PxPyPzE4D<double> > >') for 1st argument; RVec <double> getArrZ(const RVec<XYZTVector>& vec){; ^; Traceback (most recent call last):; File ""test.py"", line 39, in <module>; print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); cppyy.gbl.std.runtime_error: Template method resolution failed:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:4507,error,error,4507,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,"ng is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36:24 |; | From heads/master@9645b3aa |; | With g++ (Spack GCC) 13.1.0 |. ### Installation method. SPACK with build Cache (but technically any). ### Operating system. Linux but likely any. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1435,error,error,1435,https://root.cern,https://github.com/root-project/root/issues/14372,1,['error'],['error']
Availability,"ng'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:3484,error,error,3484,https://root.cern,https://github.com/root-project/root/pull/12449,1,['error'],['error']
Availability,"ng/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:5680,error,error,5680,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"ng: In file included from input_line_4:36:; In file included from /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-9.3.0/gcc-10.2.0-nd7xsa2anuya7be46rjsaxbiobtgguod/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/cassert:44:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:13198,error,error,13198,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"ng: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x7fc2238521d0>; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```python; >>> ROOT.__version__; '6.26/06'; >>> ak.__version__; '2.0.0rc1'; ```; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:5561,down,download,5561,https://root.cern,https://github.com/root-project/root/issues/11602,1,['down'],['download']
Availability,"ng::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; ===========================================================; gmake[2]: Leaving directory '/builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build'; gmake[2]: *** [CMakeFiles/hsimple.dir/build.make:82: tutorials/hsimple.root] Error 129; gmake[2]: *** Deleting file 'tutorials/hsimple.root'; gmake[1]: *** [CMakeFiles/Makefile2:11941: CMakeFiles/hsimple.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ```. Looking att the code here:. https://github.com/root-project/root/blob/00693233c08b5c63f684717a15115b96d5e60417/io/io/src/TBufferFile.cxx#L40-L47. The `USE_BSWAPCPY` is only used if `defined(__i386__)`, i.e. on 32 bit intel only. The asm code in the `Bswapcpy.h` header seems to be intented to work for both ix86 and x86_64 though. So I don't know why it is only used for ix86 here. I have worked around this by replacing linr 40-41 with `#if 0`, i.e. not using the asm code on ix86 either, which gets rid of the crash. I didn't mak a PR of this change because I don't know if this is the preferred way to fix it. ### Reproducer. Build ROOT 6.32.00 on ix86. ### ROOT version. 6.32.00. ### Installation method. Package build on Fedora ix86 from source. ### Operating system. Fedora Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:18527,Error,Error,18527,https://root.cern,https://github.com/root-project/root/issues/15738,2,['Error'],['Error']
Availability,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:14423,Error,Error,14423,https://root.cern,https://github.com/root-project/root/issues/8487,3,"['Error', 'down']","['Error', 'download']"
Availability,"ngInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:1358,error,error,1358,https://root.cern,https://github.com/root-project/root/issues/8292,1,['error'],['error']
Availability,"ngPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.B",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:2541,error,error,2541,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability,"nges of the backfilled fields are 0 for the first cluster.; * `RNTupleReader::PrintInfo` with `kStorageDetails` may reports incorrect information for columns belonging to the backfilled fields.; * When opening the RNTuple in the browser, attempting to draw a histogram for a backfilled collection field causes an entry-index-out-of-bounds crash. This happens both in situations where the total number of collection elements (so the sum of elements over all fields) is less and greater than the number of entries, and this issue does not appear for non-backfilled fields (with the same types and contents). #### Apparent cause. Upon reading, the metadata for columns belonging to backfilled fields gets synthesized for the clusters that do not actually contain these columns, through [`RClusterDescriptorBuilder::AddDeferredColumnRanges`](https://github.com/root-project/root/blob/4215ae1461a5a11f0ae82447ada7f6b39ff9907b/tree/ntuple/v7/src/RNTupleDescriptor.cxx#L555). The construction of the column ranges is faulty in two regards:. * It uses the default initialized compression settings, which is 0, meaning there is no distinction between uncompressed columns and columns that were not compressed because they never existed on disk.; * The columns belonging to subfields of backfilled fields are not properly recognized as deferred, so those column ranges are always zero-initialized. ### Reproducer. ```cpp; using ROOT::Experimental::ENTupleInfo;; using ROOT::Experimental::RNTupleInspector;; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. void modelextension() {; {; auto model = RNTupleModel::Create();. auto fld = model->MakeField<float>(""fld"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"",; ""modelext.root"");. ntuple->Fill();; ntuple->CommitCluster();. auto modelUpdater = ntuple->CreateModelUpdater();. modelUpdater->BeginUpdate();; auto extField = modelUpdater->MakeField<std::vector<f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15661:1573,fault,faulty,1573,https://root.cern,https://github.com/root-project/root/issues/15661,1,['fault'],['faulty']
Availability,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:22299,Error,Error,22299,https://root.cern,https://github.com/root-project/root/issues/12715,1,['Error'],['Error']
Availability,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:4380,down,download,4380,https://root.cern,https://github.com/root-project/root/issues/10572,1,['down'],['download']
Availability,"nion; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:85:8: error: unknown type name 'size_t'; size_t fLength{0};; ^; /home/root-build/include/ROOT/RStringView.hxx:88:47: error: unknown type name 'size_t'; explicit TStringView(const char *cstr, size_t len) : fData(cstr), fLength(len) {}; ^; While building module 'Core':; While building module 'ROOT_Foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:9683,error,error,9683,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"nnel( chan0 ); meas.AddChannel( chan1 ). meas.CollectHistograms(); meas.PrintTree(); meas.PrintXML(); ```. One of the output XML files produced is `meas_channel_0.xml` below:. ```xml; <!--; This xml file created automatically on:; 2023-7-19; -->; <!DOCTYPE Channel SYSTEM 'HistFactorySchema.dtd'>. <Channel Name=""channel_0"" InputFile="""" >. <Data HistoName=""histchannel_0_data"" InputFile=""data/data.root"" HistoPath="""" />. <StatErrorConfig RelErrorThreshold=""0.05"" ConstraintType=""Poisson"" />. <Sample Name=""sample_0"" HistoPath="""" HistoName=""histchannel_0_sample_0"" InputFile=""data/data.root"" NormalizeByTheory=""True"" >; <ShapeFactor Name=""shape_factor_0"" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath="""" />; </Sample>. <Sample Name=""sample_1"" HistoPath="""" HistoName=""histchannel_0_sample_1"" InputFile=""data/data.root"" NormalizeByTheory=""True"" >; <NormFactor Name=""poi"" Val=""1"" High=""10"" Low=""0"" Const=""False"" />; </Sample>. </Channel>; ```. and when I run this through `hist2workspace`, I get the following error:. ```; $ hist2workspace meas.xml. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#2] INFO:HistFactory -- hist2workspace is less verbose now. Use -v and -vv for more details. ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute InputFile of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoName of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoPath of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; [#",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:3390,error,error,3390,https://root.cern,https://github.com/root-project/root/issues/13287,1,['error'],['error']
Availability,"not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3345,error,error,3345,https://root.cern,https://github.com/root-project/root/issues/16242,1,['error'],['error']
Availability,"not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:1781,Error,Error,1781,https://root.cern,https://github.com/root-project/root/issues/8292,1,['Error'],['Error']
Availability,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:13604,error,error,13604,https://root.cern,https://github.com/root-project/root/issues/11381,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"nother error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:2702,error,error,2702,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"nput_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. It works ok with either TH1F or TH2F. It also worked with root 6.20.06. This is low priority. It showed up in ATLAS code, but the code in question is long obsolete and probably; best just removed. Submitting it now just to document the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6345:1296,error,error,1296,https://root.cern,https://github.com/root-project/root/issues/6345,2,['error'],['error']
Availability,"ns::RColumnRepresentations()’; 110 | RColumnRepresentations();; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:110:7: note: candidate expects 0 arguments, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&)’; 107 | class RColumnRepresentations {; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations&&)’; /opt/root/install/include/ROOT/RField.hxx:107:10: note: candidate expects 1 argument, 2 provided; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:524: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:36193: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ```. No header inclusion helped; it's really strange why 32 bit fields from the very same structure (enumeration) are visible, and 64 are not...; Had to comment out . > // {EColumnType::kSplitIndex64}, {EColumnType::kIndex64},. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had several problems while installing ROOT from source today (submitted bugs). Hope this is not because of my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:3270,Error,Error,3270,https://root.cern,https://github.com/root-project/root/issues/13103,2,['Error'],['Error']
Availability,"nson (Failed); 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed); 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed); 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed); 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed); 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed); 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed); 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed); 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed); 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed); 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed); 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed); 	252 - gtest-roofit-roostats-test-testSPlot (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-basics (Failed); 	406 - gtest-tree-ntuple-v7-test-ntuple-merger (Failed); 	412 - gtest-tree-ntuple-v7-test-ntuple-serialize (Failed); 	420 - gtest-tree-ntuple-v7-test-ntuple-minifile (Failed); 	423 - gtest-tree-ntuple-v7-test-ntuple-extended (Failed); 	870 - tutorial-roofit-rf612_recoverFromInvalidParameters (Failed); 	1077 - tutorial-dataframe-df006_ranges-py (Failed); 	1106 - tutorial-math-exampleFunction-py (Failed); Errors while running CTest; ```; With the proposed change in #10303 to not fail on the warning about RooNaNPacker not being implemented for big endian, the list of failures is shorter:; ```; 99% tests passed, 17 tests failed out of 1232; Label Time Summary:; longtest = 540.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:2422,Error,Errors,2422,https://root.cern,https://github.com/root-project/root/issues/10409,2,"['Error', 'failure']","['Errors', 'failures']"
Availability,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157:5105,error,error,5105,https://root.cern,https://github.com/root-project/root/issues/8157,1,['error'],['error']
Availability,"nt NDim() const override { return 1; }. private:; double DoEval(const double *x) const override { return eval(x[0]); }; };. class MyGradFunc : public ROOT::Math::IMultiGradFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }; private:; double DoEval(const double *x) const override { return eval(x[0]); }; double DoDerivative(const double *x, unsigned int /*icoord*/) const override { return evalDerivative(x[0]); }; };. template<class Func>; void minimize(Func const& func); {; std::unique_ptr<ROOT::Math::Minimizer> m{ROOT::Math::Factory::CreateMinimizer(""Minuit2"")};; m->SetPrintLevel(1);. // Set initial value, step size, and range; m->SetLimitedVariable(0, ""x"", 10, 1, -50, 50);. // The error level will be ignored in the IMultiGradFunction case without; // any warning to the user! Swapping the next two lines fixes it, but it's; // very dangerous that the minimizer only does the right thing if you call; // things in a secret order!; m->SetFunction(func);; m->SetErrorDef(0.5);. m->Minimize();; }. void reproduceMinimizerIssue(); {; minimize(MyFunc{});; minimize(MyGradFunc{});; }; ```. The output is:; ```; Minuit2Minimizer: Minimize with max-calls 305 convergence for edm < 0.01 strategy 1; Minuit2Minimizer : Valid minimum - status = 0; FVAL = 1.76273540829637293e-12; Edm = 1.76273540831862199e-12; Nfcn = 19; x	 = -1.32768e-06	 +/- 0.707083	(limited); Minuit2Minimizer: Minimize with max-calls 305 convergence for edm < 0.01 strategy 1; Warning in <Minuit2>: MnHesse Analytical calculator 	[ -0.0001327679869]	 numerical 	[ -0.0001327679869]	 g2 	[ 4999.999999]	; Minuit2Minimizer : Valid minimum - status = 0; FVAL = 1.76273383488941203e-12; Edm = 1.76273383508741455e-12; Nfcn = 17; x	 = -1.32768e-06	 +/- 0.999933	(limited); ```. Only swapping the calls to `SetFunction()` and `SetErrorDef()` will make the error for the second case with the `MyGradFunc` correctly respect the error level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:3008,error,error,3008,https://root.cern,https://github.com/root-project/root/issues/12338,2,['error'],['error']
Availability,"nt precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:1094,error,error,1094,https://root.cern,https://github.com/root-project/root/issues/16638,1,['error'],['error']
Availability,nt.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6619,error,error,6619,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,"nu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are controlled by the package manager), and that this makes a string substitution command fail, likely because of lack of quoting some variable. I set `asserts` to `OFF` in the command line, though. Ideally, if something is exposed as an option to users, like `-Dasserts=ON` is, and it's set to `OFF` on the command line, it should not be altered by the build system, as that is surprising behavior. In any case, empty default flags (or even build type) is not something that should break configuration. Note that in multi-configuration generators, `CMAKE_BUILD_TYPE` is *always* empty, so the build system cannot assume it has any value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:4807,Error,Error,4807,https://root.cern,https://github.com/root-project/root/issues/8193,2,['Error'],['Error']
Availability,"nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stag",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6112,Error,Error,6112,https://root.cern,https://github.com/root-project/root/issues/13453,1,['Error'],['Error']
Availability,"nux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary down",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:29200,Error,Error,29200,https://root.cern,https://github.com/root-project/root/issues/10528,1,['Error'],['Error']
Availability,"nversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; #include <TAxis.h>; #include ""TCanvas.h""; #include ""TDatime.h""; #include ""TFrame.h""; #include ""TGraph.h""; #include ""TMultiGraph.h""; #include ""TRootCanvas.h"". #include ""TODBCServer.h""; // TMVA seems to compile only when before TODBCServer.h; #include ""TMVA/Factory.h"". ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:1415,error,error,1415,https://root.cern,https://github.com/root-project/root/issues/16638,2,['error'],['error']
Availability,"nversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Foundation_Stage1.dir/build.make:90: core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:23284: core/foundation/CMakeFiles/Foundation_Stage1.dir/all] Error 2; make: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:1314,error,error,1314,https://root.cern,https://github.com/root-project/root/issues/8281,1,['error'],['error']
Availability,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12090,error,error,12090,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Error', 'error']","['Error', 'error']"
Availability,"o correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y projection; # if the pdf supported 2D integrals, there would be no numerical integrals at all; integral = D2.createIntegral({y}, NormSet = {x,y}); print('Projection is', integral, flush = True). # numerical integral over y2 in the 2D normalization (expected, like above); # numerical integral in the y projection (unwanted); frame = x.frame(); dt.plotOn(frame); D2.plotOn(frame); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:2528,down,download,2528,https://root.cern,https://github.com/root-project/root/issues/12646,1,['down'],['download']
Availability,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Columns of type `double` with values read from the csv file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the following macro with `root`; ```; {; std::ofstream outfile;; outfile.open(""./toydata.csv"");; outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";; outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);; auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});; auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});; auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;; df1.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;; df2.Display()->Print();; std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;; df3.Display()->Print();; std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;; df4.Display()->Print();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; *ROOT Version:* 6.28/00; *Operating system:* macosx 10.15.7; *ROOT obtained from:* conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12520:1956,down,download,1956,https://root.cern,https://github.com/root-project/root/issues/12520,1,['down'],['download']
Availability,"o the ntuple model. This will also create a memory location attached; // to the model's default entry, that will be used to place the data supposed to be written; model->AddField(std::move(field));; }; auto ntuple = RNTupleWriter::Append(std::move(model), name2, *out);; auto entry = ntuple->GetModel()->CreateEntry();. for (auto b : TRangeDynCast<TBranch>(*tree->GetListOfBranches())) {; auto l = static_cast<TLeaf*>(b->GetListOfLeaves()->First());; // We connect the model's default entry's memory location for the new field to the branch, so that we can; // fill the ntuple with the data read from the TTree; void* fieldDataPtr = entry->GetValue(l->GetName()).GetRawPtr();; tree->SetBranchAddress(b->GetName(), fieldDataPtr);; }; auto nEntries = tree->GetEntries();; for (decltype(nEntries) i = 0; i < nEntries; ++i) {; tree->GetEntry(i);; ntuple->Fill(*entry);. if (i && i % 100000 == 0) {; std::cout << ""Wrote "" << i << "" entries"" << std::endl;; }; }; }; }; out->cd();; }; }; }; ```. you can then compile it with . ```; c++ -std=c++17 -g ao2dToAO2NT.cxx -I$ROOTSYS/include -L$ROOTSYS/lib `root-config --libs` -lROOTNTuple -fsanitize=address`; ```. and run it on the downloaded test file:. ```bash; curl -O http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/174/AO2D.root; ./a.out AO2D.root; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Nov 01 2023, 10:33:00 |; | From tags/v6-28-04-alice3@v6-28-04-3-g186ec88ba4 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:13632,down,downloaded,13632,https://root.cern,https://github.com/root-project/root/issues/13996,1,['down'],['downloaded']
Availability,"o::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$clingAutoload$instGood.cxx""))) Outer;; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner with content:. #line 1 ""inst2lib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class Inner<int> with content:. #line 1 ""inst2lib dictionary payload"". #define ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:1288,error,error,1288,https://root.cern,https://github.com/root-project/root/issues/8187,3,"['Error', 'error']","['Error', 'error']"
Availability,"oRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. RooRealVar mean2(mean);. gauss.replaceServer(mean, mean2, true, false);; gauss.Print(""v"");. std::cout << ""x : "" << &gauss.getX() << std::endl;; std::cout << ""mean : "" << &gauss.getMean() << std::endl;; std::cout << ""sigma: "" << &gauss.getSigma() << std::endl;; ```. Here, the proxy for `mean` will still point to the original `mean`, but; the server was redirected to the copy `mean2`. This is dangerous, and; desyncing of the proxy and server list are actually the underlying; reason for a set of RooFit problems. The safter `RooAbsArg::redirectServers()` should always be used,; becauese that one is also updating the proxies. Therefore, the; `replaceServer()` interface is now marked as dangerous everywhere; possible: in a printout when you use it, in the docs, and with the; `R__SUGGEST_ALTERNATIVE` macro. Internally, the `replaceServer()` was also used in `redirectServers()`.; But this was also causing problems: `replaceServer()` always adds the; new server at the end of the server list, which means the list gets; reordered. This can confuse usercode that rely on the server list being; ordered (yes, that's not a good idea anyway, but there are many codes; that do this). This reordering can also be seein in the example code; above. Therefore, the `redirectServers()` function is now rewritten to replace; the server without changing its position in the server list. This also; means that the original server list doesn't need to be copied, as not; iterators are invalidated. Furthermore, the `redirectServers()` is more optimized now. Before, it; redundantly figured out whether a server was a value and/or shape; server. Now, this is figured out only once when removing the original; server from the client. In summary: this PR makes RooFit code safer and faster by changing; `RooAbsArg::redirectServers()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12040:1941,redundant,redundantly,1941,https://root.cern,https://github.com/root-project/root/pull/12040,1,['redundant'],['redundantly']
Availability,"oaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *...............",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9961,avail,available,9961,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Down', 'avail']","['Download', 'available']"
Availability,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:4280,error,error,4280,https://root.cern,https://github.com/root-project/root/pull/5960,3,['error'],['error']
Availability,"ode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:948,error,error,948,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"odule 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:3108,error,error,3108,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"odule 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:19871,error,error,19871,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"oe/Downloads/root-6.28.04/core/textinput/src -I/home/maxnoe/Downloads/root-6.28.04/core/base/inc -I/home/maxnoe/Downloads/root-6.28.04/core/clib/inc -I/home/maxnoe/Downloads/root-6.28.04/core/meta/inc -I/home/maxnoe/Downloads/root-6.28.04/core/cont/inc -I/home/maxnoe/Downloads/root-6.28.04/core/gui/inc -I/home/maxnoe/Downloads/root-6.28.04/core/thread/inc -I/home/maxnoe/Downloads/root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1316,Down,Downloads,1316,https://root.cern,https://github.com/root-project/root/issues/13529,1,['Down'],['Downloads']
Availability,"of C++ code, they are in fact not insulated one-offs of evaluating the code in some context. They introduce code and leak (they even leak beyond the basic introduction of more code). There also does not appear any alternative that does provide the one-off behavior that the name `Calc` suggests. Start on the ROOT side, with `TCling::Calc` (and `ProcessLine` etc.). If the Cling evaluation returns something non-void, a `cling::Value` is stored in `fTemporaries`, which is destroyed on application shutdown. This behavior means that a developer using these functions will see their code leak (and application crash if it runs out of memory), but leak checkers will report nothing. Pretty bad in itself, in particular since the developer can't do anything about it (there is no reset or access to `pop_back` on `fTemporaries`). A better implementation would transfer ownership responsibilities to the caller, if so desired. Also, the code only checks for `valRef.isVoid()`, whereas integer types with sizes smaller than that of `long` can be returned without a need to store the `cling::Value`. (Aside, the final cast to `long` rather than to e.g. `intptr_t` means that this code breaks many applications on Win64.). Next, `cling::evaluate` leaves a transaction behind. This is a good chunk of the leak, albeit not all. Using `unload(1)` one can get rid of the transaction, but there appears to be no way to indicate that the transaction should not be committed in the first place. The code also does not work with transaction RAIIs and there is no way to tell `evaluate` that the caller-side wants to take over the transaction. Finally, beyond temporaries and left-behind leaks, there is still another leak (in fact, the major part) unaccounted for that I've been unable to determine. It's another one, like above, that gets cleaned out on application shutdown, so hard to track down. Heap checker suggests it is in the `MachineFunctionPass`, but I could not pinpoint it. Presumably more saved state.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201:2258,down,down,2258,https://root.cern,https://github.com/root-project/root/issues/7201,1,['down'],['down']
Availability,"oject_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:1375,error,error,1375,https://root.cern,https://github.com/root-project/root/issues/9370,1,['error'],['error']
Availability,"oken.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); >>>; ```. ### Reproducer. On lxplus:. ```bash; $ source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh; $ cp /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.04/x86_64-almalinux9.4-gcc114-opt/tutorials/hsimple.root /eos/user/c/cburr/hsimple.root; $ EOS_MGM_URL=root://eoshome-c.cern.ch eos token --path /eos/user/c/cburr/hsimple.root --permission=rx --expires=$(date +%s -d ""30 minutes"") > token.txt; $ kdestroy; $ python3; ```. ```python; Python 3.9.18 (main, Aug 23 2024, 00:00:00); [GCC 11.4.1 20231218 (Red Hat 11.4.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> url = 'root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root?xrd.wantprot=unix&authz=' + open(""token.txt"").read().strip(); >>> ROOT.TFile.Open(url).ls(); TNetXNGFile**		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; TNetXNGFile*		root://eosuser.cern.ch//eos/user/c/cburr/hsimple.root	Demo ROOT file with histograms; KEY: TH1F	hpx;1	This is the px distribution; KEY: TH2F	hpxpy;1	py vs px; KEY: TProfile	hprof;1	Profile of pz versus px; KEY: TNtuple	ntuple;1	Demo ntuple; >>> df = ROOT.RDataFrame(""ntuple"", url); Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; *** Break *** segmentation violation; ```. ### ROOT version. 6.32.04. ### Installation method. sft.cern.ch. ### Operating system. Linux (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475:2149,Error,Error,2149,https://root.cern,https://github.com/root-project/root/issues/16475,1,['Error'],['Error']
Availability,"ol testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context; None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:2828,down,download,2828,https://root.cern,https://github.com/root-project/root/issues/9370,1,['down'],['download']
Availability,"ol:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>; | |-DeclStmt 0x2b442a0 <line:1:1, col:28>; | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'; | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2; | `-NullStmt 0x2b442b8 <line:2:1>; |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [2] .q. ```. ### Setup. 1. ROOT version; * 6.22/08. ```; ROOT Version: 6.22/08; Built for linuxx8664gcc on Mar 10 2021, 14:20:04; From tags/v6-22-08@v6-22-08; ```. * 6.25/01; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```. 2. Operating system: NixOS, a linux distribution; * `nix-info -m`; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20211006_53e4794`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; * The `6.22/08` is from the [Nixpkgs nixos-21.05 branch](https://github.com/NixOS/nixpkgs/tree/nixos-21.05) revision [8b0b81dab17753ab344a44c04be90a61dc55badf](https://github.com/NixOS/nixpkgs/tree/8b0b81dab17753ab344a44c04be90a61dc55badf); * The `6.22/08` is from a custom nix expression based on ROOT branch master (revision 24ea49d4702ba0aa9b1ea5521950520154ee151c) and [NixOS/Nixpkgs master](https://NixOS/nixpkgs). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:11899,down,download,11899,https://root.cern,https://github.com/root-project/root/issues/9261,1,['down'],['download']
Availability,"olation; 304: ******************************************************************; 304: * SYS: FreeBSD hack 13.2-RELEASE-p1 FreeBSD 13.2-RELEASE-p1 GENERIC; 304: ******************************************************************; 304: ******************************************************************; 304: * ROOTMARKS =4262.5 * Root6.29/01 20221221/1150; 304: ******************************************************************; 304: Time at the end of job = 18.882812 seconds; 304: Generating stack trace...; 304: 0x0000000826fefe68 in _ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_1 at /usr/include/c++/v1/__hash_table:2070 from /home/mkrzewic/build/root/lib/libTree.so; 304: 0x0000000830314f3e in TClass::TDeclNameRegistry::AddQualifiedName(char const*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x0000000830315169 in TClass::InsertTClassInRegistryRAII::~InsertTClassInRegistryRAII() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x000000083032618c in TClass::SetUnloaded() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008302d88cb in ROOT::RemoveClass(char const*, TClass*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008303344d7 in ROOT::TGenericClassInfo::~TGenericClassInfo() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: CMake Error at /home/mkrzewic/build/root/RootTestDriver.cmake:232 (message):; 304: error code: 129; 304:; 304:; 1/1 Test #304: test-stressroofit-batchmode-cpu ...***Failed 22.19 sec; ```. ### Reproducer. ctest -V -R test-stressroofit-batchmode-cpu. ### ROOT version. master. ### Installation method. source. ### Operating system. freeBSD 13.2p1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13200:2241,Error,Error,2241,https://root.cern,https://github.com/root-project/root/issues/13200,2,"['Error', 'error']","['Error', 'error']"
Availability,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:2108,error,errors,2108,https://root.cern,https://github.com/root-project/root/pull/6128,1,['error'],['errors']
Availability,"ole; ❯ cat reproducer.def; Bootstrap: docker; From: fedora:36. %post; dnf -y update; dnf -y install git make cmake gcc-c++ gcc binutils ninja-build \; libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel; dnf -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; gcc --version; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build. ```; ```console; ❯ singularity --version; singularity version 3.8.7-1.fc35; ❯ singularity build -f reproducer.sif reproducer.def; (...skip...); + mkdir /reproducer; + cd /reproducer; + git clone -b master --depth 1 http://github.com/root-project/root source; Cloning into 'source'...; (...skip...); + git -C source log; commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1000,error,errors,1000,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['errors']
Availability,"ollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:3828,error,error,3828,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"ollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:5260,error,error,5260,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"om /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=off -Dhttp=off -Dimt=OFF -Dmathmore=OFF -Dminuit2=OFF -Dmlp=OFF -Dopengl=OFF -Dpyroot=OFF -Dpythia8=OFF -Droofit=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:3354,Error,Error,3354,https://root.cern,https://github.com/root-project/root/issues/13845,2,"['Error', 'error']","['Error', 'errors']"
Availability,"om the top directory of the repository. There are several options to customize the build, the main ones are:. | Option | Description |; |----------------------|-------------|; | -DCOVERAGE=1 | Enables test coverage analysis with gcov; | -DMEMCHECK=1 | Enables memory checking with valgrind; | -DSTATIC_ANALYSIS=1 | Enables static analysis with clang-tidy; | -DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:1250,failure,failure,1250,https://root.cern,https://github.com/root-project/root/pull/14999,2,['failure'],['failure']
Availability,"omAccess (229 ms); [ RUN ] RNTuple.LargeFile1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8200,Failure,Failure,8200,https://root.cern,https://github.com/root-project/root/issues/12426,2,"['Error', 'Failure']","['Error', 'Failure']"
Availability,"omas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:60:40:; /usr/include/c++/14/bits/atomic_base.h:477:25: warning: ‘void __atomic_store_1(volatile void*, unsigned char, int)’ writing 1 byte into a region of size 0 overflows the destination [-Wstringop-overflow=]; 477 | __atomic_store_n(&_M_i, __i, int(__m));; | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; In function ‘void tbb::detail::r1::clear_address_waiter_table()’:; cc1plus: note: destination object is likely at address zero; gmake[4]: *** [CMakeFiles/Makefile2:134: src/tbb/CMakeFiles/tbb.dir/all] Error 2; gmake[3]: *** [Makefile:156: all] Error 2; ```. ### Reproducer. See above. ### ROOT version. ROOT master (October 11, 9 am CERN time), commit hash: 9f8c9ca67224c283652d5db45b81e66cb6aad8a9. ### Installation method. build from source. ### Operating system. Ubuntu 24.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16654:2560,Error,Error,2560,https://root.cern,https://github.com/root-project/root/issues/16654,2,['Error'],['Error']
Availability,"ome/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:2797,error,error,2797,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"omething we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Prepare the reproduction code; `Reproduce.C`; ```c++; #include<TCanvas.h>; #include<TPad.h>; #include<TFile.h>; #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {; TCanvas::MakeDefCanvas();; TFile *tfIn = TFile::Open(pathFileIn);; TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));; hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");; hpxLongTitle->Draw();; gPad->Print(""hpxLongTitle.svg"");; tfIn->Close();; }. int main(int argc, char* argv[]) {; if ( argc > 1 ) {; Reproduce(argv[1]);; } else {; Reproduce();; }; }; ```. 2. Run by. ```console; $ root -l -q 'Reproduce.C++(""path/to/hsimple.root"")'; ```. or by. ```; $ g++ $(root-config --glibs --cflags) -o Reproduce.o Reproduce.C; $ ./Reproduce.o ""path/to/hsimple.root""; ```. 3. See the generated `hpxLongTitle.svg`; 4. Open with a text editor and scroll to the bottom (pressing `G` for vim); 5. See the broken XML tag. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT Version: 6.25/01, built for linuxx8664gcc on Jan 01 1980, 00:00:00; 2. Operating System: NixOS; 3. Build with Nix package manager from master, revision 7821ed1e81a419fda484f01e4d14ce52cb372128. ### Additional context; <!--; Add any other context about the problem here.; -->; The actual content of that supercali-title in my use case is a JSON string without any space character. The generated SVG file (add the .txt suffix to workaround GitHub's limitation):; [hpxLongTitle.svg.txt](https://github.com/root-project/root/files/7831387/hpxLongTitle.svg.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9514:2469,down,download,2469,https://root.cern,https://github.com/root-project/root/issues/9514,1,['down'],['download']
Availability,"ommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:18475,failure,failures,18475,https://root.cern,https://github.com/root-project/root/issues/12372,1,['failure'],['failures']
Availability,"ompute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:3479,error,error,3479,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['error']
Availability,"on is always false. [math/mathcore/src/TMath.cxx:826]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possibl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:1977,error,error,1977,https://root.cern,https://github.com/root-project/root/pull/1343,1,['error'],['error']
Availability,"on script through `ROOT.gSystem.CompileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxreside",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774:1118,down,down,1118,https://root.cern,https://github.com/root-project/root/issues/7774,1,['down'],['down']
Availability,"on, since the ABI stability always allowed us to do so (provided we override the compiler installation with one which was compiled on the runtime platform). This worked fine until v6.30.01. With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. C7 r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14272:1174,error,error,1174,https://root.cern,https://github.com/root-project/root/issues/14272,1,['error'],['error']
Availability,"onary build twice.; See the result of $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap""; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". With this change, G__Imt.cxx has only one target:; $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". This fixes sporadic build problems due to two targets creating the same output file concurrently:; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; Scanning dependencies of target G__Imt; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; [ 73%] Building CXX object core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o; g++: error: /mnt/build/workspace/lcg_release_tar/BUILDTYPE/Debug/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-6.16.00/src/ROOT-6.16.00-build/core/imt/G__Imt.cxx: No such file or directory; g++: fatal error: no input files; compilation terminated.; core/imt/CMakeFiles/Imt.dir/build.make:106: recipe for target 'core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o' failed; make[5]: *** [core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o] Error 1; [ 73%] Built target G__Imt; make[5]: Target 'core/imt/CMakeFiles/Imt.dir/build' not remade because of errors.; CMakeFiles/Makefile2:18311: recipe for target 'core/imt/CMakeFiles/Imt.dir/all' failed; make[4]: *** [core/imt/CMakeFiles/Imt.dir/all] Error 2. (cherry picked from commit a3e7a3c535b80c3a6cf0883a0bf8de66eca7d93f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3636:1408,error,error,1408,https://root.cern,https://github.com/root-project/root/pull/3636,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"onda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expect",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1987,error,error,1987,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"ons.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: note: '__nvvm_vote_ballot' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:69:18: error: static declaration of '__cosf' follows non-static declaration; __DEVICE__ float __cosf(float __a) { return __nv_fast_cosf(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathcalls.h:62:1: note: previous declaration is here; __MATHCALL_VEC (cos,, (_Mdouble_ __x));; ^; /usr/include/math.h:266:3: note: expanded from macro '__MATHCALL_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:1820,error,error,1820,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"oodJob enabled. In detail, this PR changes the following:. - Increased precision:; * Per-component offsets: instead of one offset for the total LikelihoodWrapper, we switched to a vector of offsets: one for each likelihood component. This makes a difference only for RooSumL fits, i.e. simultaneous PDF fits or fits with constraint or global observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:1521,toler,tolerance,1521,https://root.cern,https://github.com/root-project/root/pull/12202,1,['toler'],['tolerance']
Availability,"oot/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/stl_algobase.h> // std::copy, std::fill_n; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:22011,error,error,22011,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758:1190,redundant,redundantly,1190,https://root.cern,https://github.com/root-project/root/issues/8758,1,['redundant'],['redundantly']
Availability,"oot\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:20982,error,error,20982,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"oot\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:14044,error,error,14044,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"op-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:2949,error,error,2949,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"oper/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1920:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/iterator:684:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/common_iterator.h:30:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/variant:473:24: error: use of undeclared identifier 'is_trivially_destructible'; did you mean 'is_trivially_destructible_v'?; {__trait<_Types, is_trivially_destructible, is_destructible>...});; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:40:23: note: 'is_trivially_destructible_v' declared here; inline constexpr bool is_trivially_destructible_v = is_trivially_destructible<_Tp>::value;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineToo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:15118,error,error,15118,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"opping now [-ferror-limit=]; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:26322,error,error,26322,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:19999,error,error,19999,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"or consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will be addressed in a follow-up PR. ## Tests. Corresponding `roottest` PR: https://github.com/root-project/roottest/pull/1178. Tests for Windows have been disabled, due to permission denied-errors related to trying to recreate currently open TFiles. The regular snapshot tests have also been disabled for Windows, presumably for the same reason.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750:2916,error,errors,2916,https://root.cern,https://github.com/root-project/root/pull/15750,1,['error'],['errors']
Availability,"or version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:2270,Error,Error,2270,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Error'],['Error']
Availability,"or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPackage; , fetchFromGitHub; , fetchpatch; , makeWrapper; , cmake; , coreutils; , git; , davix; , ftgl; , gl2ps; , glew; , gnugrep; , gnused; , gsl; , lapack; , libX11; , libXpm; , libXft; , libXext; , libGLU; , libGL; , libxcrypt; , libxml2; , llvm_13; , lsof; , lz4; , xz; , man",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:3130,avail,available,3130,https://root.cern,https://github.com/root-project/root/issues/11920,1,['avail'],['available']
Availability,"or: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2513,down,download,2513,https://root.cern,https://github.com/root-project/root/issues/11920,1,['down'],['download']
Availability,"or: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updated automatically on each release.; # You may update your local copy by issuing a `git pull` command from within ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:3011,error,error,3011,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,"orDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. All the best,; Simon Spies. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile:; ![example](https://user-images.githubusercontent.com/5320187/53051016-15b0e300-349b-11e9-90d6-af75f21654a0.png); ![example](https://user-images.githubusercontent.com/5320187/53085326-e7ff8480-3502-11e9-8945-59e025f46cf8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:4084,error,error,4084,https://root.cern,https://github.com/root-project/root/pull/3452,2,['error'],['error']
Availability,"orType’ does not name a type; 01:46:28 XReqErrorType LowWrite(XPClientRequest *, const void *, int);; 01:46:28 ^; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:47:0:; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘entity’ [-Wunused-parameter]; 01:46:28 virtual bool PostProcess(XrdSecEntity &entity,; 01:46:28 ^; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘einfo’ [-Wunused-parameter]; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was no",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:1324,error,error,1324,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"ore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.cxx.o; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:160: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RDFActionHelpers.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:30359: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; ~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8178:1265,error,error,1265,https://root.cern,https://github.com/root-project/root/issues/8178,4,"['Error', 'error']","['Error', 'error']"
Availability,orted from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <ctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_types/_wctrans_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1804:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/find.h:31:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cwchar:112:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file include,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:10107,error,error,10107,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"orted from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:31:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /U",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:5675,error,error,5675,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:1611,down,download,1611,https://root.cern,https://github.com/root-project/root/issues/8474,1,['down'],['download']
Availability,"ost of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue?. It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem?; I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:; ```; root [0] new TWebCanvas();; ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'; new TWebCanvas();; ^~~~~~~~~~; /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'; class TWebCanvas;; ```; This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reproducer. In a Jupyter notebook with ipython kernel:; ```import ROOT```; In interactive ROOT:; ```new ROOT::Experimental::RCanvas();```; or:; ```new TWebCanvas();```. ### ROOT version. ``` ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 02 2023, 00:00:00 |; | From heads/master@tags/v6-30-02 |; | With g++ (GCC) 11.4.1 20230605 (Red Hat 11.4.1-2) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:7311,error,error,7311,https://root.cern,https://github.com/root-project/root/issues/14587,1,['error'],['error']
Availability,"ot updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:; `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior; E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382:469,error,error,469,https://root.cern,https://github.com/root-project/root/issues/10382,9,"['Error', 'error']","['Error', 'error']"
Availability,"ot\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d83",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:3478,error,error,3478,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"ote: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:1711,Error,Error,1711,https://root.cern,https://github.com/root-project/root/issues/13101,1,['Error'],['Error']
Availability,"ote: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:296:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T>&, R)’; 296 | auto TExecutorCRTP<SubC>::MapReduce(F func, const std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:17580,error,error,17580,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,"ould ever become part of ROOT the first two are to be deleted, cause there are similar functions in the class TGraphPainter and the last one is supposed to be included in the TGraphPainter class. The function TGraphMultiErrors::Paint is similar to TGraph::Paint and TGraphPainter::PaintHelper and can be deleted if the class should become part of root and TGraphMultiErrors::PaintGraphMultiErrors is being included in the TGraphPainter class.; The function TGraphMultiErrors::PaintReverse serves the same purpose as TGraphPainter::PaintReverse and should be deleted too if the class becomes part of ROOT.; The function TGraphMultiErrors::PaintGraphMultiErrors performs the actual painting and would have to be included in the TGraphPainter class. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:3285,error,error,3285,https://root.cern,https://github.com/root-project/root/pull/3449,2,['error'],"['error', 'errors']"
Availability,"ound' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 36: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:557; 37: Calling 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 38: Calling 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 39: Assuming the condition is false in /opt/root_src/core/base/inc/TObject.h:187; 40: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 41: Returning from 'TObject::TestBit' in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 42: Returning zero, which participates in a condition later in /opt/root_src/geom/geom/inc/TGeoNode.h:103; 43: Returning from 'TGeoNode::IsOffset' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 44: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:594; 45: Calling 'TGeoNavigator::CrossBoundaryAndLocate' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:595; 46: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 47: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:612; 48: Assuming 'i' is >= field 'fLevel' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 49: Loop condition is false. Execution continues on line 618 in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:613; 50: Assuming 'current' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 51: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:626; 52: 'downwards' is false in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 53: Taking false branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:627; 54: 'skipnode' is non-null in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 55: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:640; 56: Assuming 'current' is equal to 'skipnode' in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 57: Taking true branch in /opt/root_src/geom/geom/src/TGeoNavigator.cxx:641; 58: 'down",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:42623,down,downwards,42623,https://root.cern,https://github.com/root-project/root/issues/7428,1,['down'],['downwards']
Availability,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1275,error,errors,1275,https://root.cern,https://github.com/root-project/root/issues/16553,1,['error'],['errors']
Availability,"ovides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:1906,Error,Error,1906,https://root.cern,https://github.com/root-project/root/issues/14163,1,['Error'],['Error']
Availability,"ow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here is the docker file:. ```; FROM archlinux:base-devel. RUN pacman -Syu --noconfirm \; && pacman --noconfirm -S \; curl cmake ninja gcc libjpeg \; python python-numpy gsl git li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1867,Down,Downloads,1867,https://root.cern,https://github.com/root-project/root/issues/13529,1,['Down'],['Downloads']
Availability,"owing directory; ```; : ls; file1.cxx file2.cxx; ```; With; ```cpp; // file1.cxx; namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx; namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE; ```. If I do the following:; 1. Open Python session; 2. Run gSystem.CompileMacro on the first file; 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open; 4. Run gSystem.CompileMacro on the second file. Then the following happens; ```python; Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> ROOT.gSystem.CompileMacro(""file1.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so; 1; >>> for filename in os.listdir():; ... if filename.startswith(""file1""):; ... os.remove(filename); ... ; >>> os.listdir(); ['file2.cxx']; >>> ROOT.gSystem.CompileMacro(""file2.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so; sh: -c: line 1: unexpected EOF while looking for matching `""'; sh: -c: line 2: syntax error: unexpected end of file; Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;; [... a lot of compilation flags here ...]; ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed!; 0; ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup; ROOT 6.26.02 from conda; Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10640:1333,error,error,1333,https://root.cern,https://github.com/root-project/root/issues/10640,3,"['Error', 'error']","['Error', 'error']"
Availability,"p; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:5513,error,error,5513,https://root.cern,https://github.com/root-project/root/issues/9424,1,['error'],['error']
Availability,"p>::type; ^; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1057:12: note: definition of 'std::is_copy_assignable<MyClass>' is not complete until the closing '}'; struct is_copy_assignable; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""dict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h""; #include ""OtherClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1060:7: error: static_assert failed ""template argument must be a complete class or an unbounded array""; static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; root [2]; ```; The error vanishes if the assertion is first applied to another class belonging to the same dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<OtherClass>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; (const bool) true; root [3]; ```; but not on a class from another dictionary:; ```bash; $ root; root [0] .L libDict.so ; root [1] std::is_copy_assignable<TH1F>::value; (const bool) true; root [2] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:3574,error,error,3574,https://root.cern,https://github.com/root-project/root/issues/10512,2,['error'],['error']
Availability,"p_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:2136,toler,toler,2136,https://root.cern,https://github.com/root-project/root/issues/6775,1,['toler'],['toler']
Availability,"part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);; RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);; RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);; RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);; RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);; RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));; std::cout<<Func.getNorm()<<std::endl;; Func1.fitTo(*Data, Range(1000,1600));; Func1.plotOn(frame);; std::cout<<Func.getNorm()<<std::endl;; //Normalization(2500000,RooAbsReal::NumEvent); Func1.paramOn(frame);; frame->Draw();; }; ```. Sorry, its ugly code, but I am not really good at programming. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Root Version 6.26/06 and 6.24/06; Operating System: MacOS Monterey and Linux respectively; Obtained via homebrew. ### Additional context; <!--; Add any other context about the problem here.; -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760:3220,down,download,3220,https://root.cern,https://github.com/root-project/root/issues/11760,1,['down'],['download']
Availability,"pes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/config",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:29555,error,errors,29555,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['errors']
Availability,"pilation error with gcc 13. ## Changes or fixes:; ~~~; In file included from .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.cxx:1: .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:40:24: error: 'uint32_t' does not name a type; 40 | namespace SG { typedef uint32_t sgkey_t; }; | ^~~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:6:1: note: 'uint32_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; 5 | #include <vector>; +++ |+#include <cstdint>; 6 |; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: error: 'uint8_t' does not name a type; 43 | uint8_t m_nbits, m_nmantissa;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: error: 'uint8_t' does not name a type; 45 | uint8_t m_flags;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:46:8: error: 'sgkey_t' in namespace 'SG' does not name a type; 46 | SG::sgkey_t m_sgkey = 123;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: error: 'uint8_t' does not name a type; 47 | const uint8_t c_uint = 10;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; gmake[2]: *** [tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/build.make:79: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/CustomStruct.cxx.o] Error 1; gmake[2]: Leaving directory '.../root-6.26.10/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:53506: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12065:1173,error,error,1173,https://root.cern,https://github.com/root-project/root/pull/12065,4,"['Error', 'error']","['Error', 'error']"
Availability,"pile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:1683,error,errors,1683,https://root.cern,https://github.com/root-project/root/issues/6421,1,['error'],['errors']
Availability,"plate<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:136:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T>&, R)’; 136 | template<class F, class T, class R, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:134:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::initializer_list<T>, R)’; ```. ### Expected behavior; a clean compilation without errors. ### To Reproduce; ```; setup kokkos (with CUDA backend), root, gcc, cmake; git clone git@github.com:cgleggett/FCS-GPU.git src; mkdir bld; cd bld; cmake ../src/FastCaloSimAnalyzer/ -DENABLE_XROOTD=Off -DENABLE_GPU=on -DINPUT_PATH=/tmp -DCMAKE_CXX_STANDARD=17 -DUSE_KOKKOS=ON -DCMAKE_CXX_EXTENSIONS=Off; make -j; ```. ### Setup; root: v6.24 - v6.26; CUDA: 11.6, 11.7 (OK with 11.5); gcc: 9.3 - 11.2; OS: Centos 7; ROOT was built with:; ```; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-06_gcc112_c17 -Dx11=OFF -Dtbb=OFF -Dopengl=OFF -Dgviz=OFF -Dimt=OFF -Ddavix=OFF -Dvdt=OFF -Dxrootd=OFF ../src; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11511:19755,error,errors,19755,https://root.cern,https://github.com/root-project/root/issues/11511,1,['error'],['errors']
Availability,pol1 fit fails in TGraphErrors when x-errors>y-errors and slope<0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:38,error,errors,38,https://root.cern,https://github.com/root-project/root/issues/13895,2,['error'],['errors']
Availability,"ported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:32:10: note: submodule of top-level module 'std' implicitly imported here; #include <vector>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:6090,error,error,6090,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time with respect to some reference point far back in time (e.g. astrophysics, finance, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16687:1190,Error,Error,1190,https://root.cern,https://github.com/root-project/root/issues/16687,1,['Error'],['Error']
Availability,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:2669,robust,robust,2669,https://root.cern,https://github.com/root-project/root/issues/8952,2,"['error', 'robust']","['errors', 'robust']"
Availability,"project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup; 1. ROOT version: master; 2. Oper",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:1624,error,error,1624,https://root.cern,https://github.com/root-project/root/issues/9370,2,"['avail', 'error']","['available', 'error']"
Availability,"provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip); Doing:; ```; make; root.exe -b -l -q macro.cc; ```; leads to:; ```. Loading A.sl. Processing macro.cc...; In file included from ADictUX dictionary payload:6:; ./B.h:5:18: error: base class has incomplete type; class B : public A {; ~~~~~~~^; ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'; class A {; ^; In file included from ADictUX dictionary payload:6:; ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'; B(int arg) : A(arg) {}; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx; +++ b/core/dictgen/src/rootcling_impl.cxx; @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,; i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:1054,Error,Error,1054,https://root.cern,https://github.com/root-project/root/issues/13034,2,['Error'],['Error']
Availability,"ps://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `GetLeaf(branchname, leafname)` seems to ignore the `branchname` argument if friend trees are present -- or in any case, it returns a non-null pointer even for a bogus `branchname` argument, but only if friend trees are present. Note that depending on the situation this might result in wrong data being read. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `GetLeaf(branchname, leafname)` should return the same pointer whether a friend tree is present or not. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int x = 42;; t.Branch(""x"", &x);; t.Fill();; t.Write();; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints 0 as expected. TFile f2(""f.root"");; auto *t2 = f2.Get<TTree>(""t"");; t->AddFriend(t2);; std::cout << t->GetLeaf(""asdklj"", ""x"") << '\n'; // prints the address of leaf `x`, unexpected. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I am using master@a7cceb7478e . ### Additional context; <!--; Add any other context about the problem here.; -->. This seems to be the root cause of #6944 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6964:1872,down,download,1872,https://root.cern,https://github.com/root-project/root/issues/6964,1,['down'],['download']
Availability,"pt/root_src/gui/gui/src/TGClient.cxx:701; #18 0x00007fab917f905a in TGInputHandler::Notify (this=0x5569341ed2f0) at /opt/root_src/gui/gui/src/TGClient.cxx:117; #19 0x00007faba5b6fe1f in TUnixSystem::DispatchOneEvent (this=0x55692f74e7c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1055; #20 0x00007faba5a55eb5 in TSystem::InnerLoop (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:406; #21 0x00007faba5a55c4a in TSystem::Run (this=0x55692f74e7c0) at /opt/root_src/core/base/src/TSystem.cxx:356; #22 0x00007faba59dde87 in TApplication::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1607; #23 0x00007faba608fc5d in TRint::Run (this=0x55692f7a6f00, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:473; #24 0x000055692efa10fe in main (argc=1, argv=0x7ffd300c4218) at /opt/root_src/main/src/rmain.cxx:83; ===========================================================; ```. Here is where QtCreator says the problem is:; ![image](https://user-images.githubusercontent.com/10653970/151455316-7c909fe1-07f9-491d-94d4-58ce3a90e562.png). And going a bit up, the value of fUser[2] looks a bit suspicious:; ![image](https://user-images.githubusercontent.com/10653970/151457862-217f1be9-be1e-4752-a81d-61410b91a653.png). ### Expected behavior; Zooming and unzooming works without crashing or artefacts. ### To Reproduce; - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip); - root -l test_zoom.cpp+. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 27 2022, 21:50:22 |; | From heads/master@v6-25-01-3005-g36dc424df9 |; | With g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9740:7237,Down,Download,7237,https://root.cern,https://github.com/root-project/root/issues/9740,1,['Down'],['Download']
Availability,"put file; TwoInts ti(1, 2);; TFile out_f(""f.root"", ""recreate"");; out_f.WriteObjectAny(&ti, ""TwoInts"", ""ti"");; std::cout << ""Written TwoInts("" << ti.GetA() << "", "" << ti.GetB() << "")\n"";; }. // read back the `ti` object from the file; TFile in_f(""f.root"");; auto *tiptr = in_f.Get<TwoInts>(""ti"");; std::cout << ""Read TwoInts("" << tiptr->GetA() << "", "" << tiptr->GetB() << "")\n"";. return 0;; }; ```. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ nestedclasses;; #pragma link C++ class TwoInts;. #endif // __CLING__; ```. ```cmake; # CMakeLists.txt; cmake_minimum_required(VERSION 3.9); project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp LINKDEF LinkDef.h). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp twoints_dict.cxx); target_link_libraries(readwrite_twoints ROOT::RIO). # These lines should not be necessary:; configure_file(twoints.hpp twoints.hpp COPYONLY) # This is necessary for out-of-source builds; add_dependencies(readwrite_twoints twoints_dict) # This ensures that the dictionary is generated before the executable; ```. The last two lines, especially the `configure_file`, should not be needed, ideally. `ROOT_GENERATE_DICTIONARY` should add the source directory to the include directories automatically, or at the very least it should make it possible to add it manually via `target_include_directories(twoints_dict.cxx PRIVATE .)`, which currently does not work:. ```; CMake Error at CMakeLists.txt:12 (target_include_directories):; Cannot specify include directories for target ""twoints_dict.cxx"" which is; not built by this project.; ```. The end result is that `ROOT_GENERATE_DICTIONARY` is unnecessarily tricky to use correctly (in fact I don't think we document the correct usage anywhere). . More discussion can be found at https://mattermost.web.cern.ch/root/pl/ofzcxfxh3pfxdp4bzda319ftke .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308:2496,Error,Error,2496,https://root.cern,https://github.com/root-project/root/issues/8308,1,['Error'],['Error']
Availability,"put_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:2995,error,error,2995,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability,"put_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:15293,error,error,15293,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen; [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 73%] Linking CXX executable src/rootcling_stage1; [ 73%] Built target rootcling_stage1; [ 73%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:1275,error,error,1275,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability,"python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporarily unavailable; 616574:sh: fork: retry: Resource temporarily unavailable; 616575:sh: fork: retry: Resource temporarily unavailable; 616576:sh: fork: retry: Resource temporarily unavailable; 616577:sh: fork: Resource temporarily unavailable; ```. ### ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3989,error,errors,3989,https://root.cern,https://github.com/root-project/root/issues/16552,1,['error'],['errors']
Availability,"pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:4491,failure,failures,4491,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1115,error,error,1115,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The exit status of `root --help` is 1, not 0. The [exit status](https://en.wikipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1178,echo,echo,1178,https://root.cern,https://github.com/root-project/root/issues/11977,1,['echo'],['echo']
Availability,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.18/04; Operating system: Linux (lxplus); ROOT installed via conda . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:1962,down,download,1962,https://root.cern,https://github.com/root-project/root/issues/7393,1,['down'],['download']
Availability,"r below from stdlib.h as we have problems merging; these special declarations with GCC annotations. We can't add stdlib.h to; the normal libc module as this would cause a dependency cycle between the; builtin modules of clang and libc, but having this as a standalone module; seems to work for me. ```; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:8: error: reference to 'lldiv_t' is ambiguous; extern lldiv_t lldiv (long long int __numer,; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:16: error: functions that differ only in their return type cannot be overloaded; extern lldiv_t lldiv (long long int __numer,; ~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1231:973,error,error,973,https://root.cern,https://github.com/root-project/root/pull/1231,1,['error'],['error']
Availability,"r errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afteri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2207,error,errors,2207,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['errors']
Availability,"r experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:1074,Error,Error,1074,https://root.cern,https://github.com/root-project/root/issues/14595,1,['Error'],['Error']
Availability,"r fixes:. Modifications to `SavePrimitive` members of `TPad` and `TCanvas` to count instances and renumerate written object variable names. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . ### Example. Consider MWE; ```c++; {; TH1I * h1 = new TH1I(""h1"", ""h1"", 10, -5, 5);; TH1I * h2 = new TH1I(""h2"", ""h2"", 10, -5, 5);. h1->FillRandom(""gaus"", 1000);; h2->FillRandom(""gaus"", 1000);. TCanvas * can = new TCanvas(""c_pads_test"", ""c_pads_test"", 800, 400);. can->cd(0);; TPad * p1 = new TPad(""p1"", ""p1"", 0, 0.3, 0.5, 1.0);; p1->Draw();; p1->cd();; TRatioPlot ratio1(h1, h2);; ratio1.Draw();. can->cd(0);; TPad * p2 = new TPad(""p2"", ""p2"", 0.5, 0.3, 1.0, 1.0);; p2->Draw();; p2->cd();; TRatioPlot ratio2(h2, h1);; ratio2.Draw();. can->cd(0);; TPad * p3 = new TPad(""p3"", ""p3"", 0.0, 0.0, 1.0, 0.3);; p3->Draw();; p3->cd();; h1->Draw();; h2->Draw(""same"");. can->Draw();. can->SaveAs("".C"");; }; ```; Run the macro and then try to run resulting `c_pads_test.C`. The output will be:. ```; Processing c_pads_test.C...; In file included from input_line_10:1:; /home/rlalik/c_pads_test.C:229:10: error: redefinition of 'upper_pad'; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:27:10: note: previous definition is here; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:303:10: error: redefinition of 'lower_pad'; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0.3);; ^; /home/rlalik/c_pads_test.C:103:10: note: previous definition is here; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0.3);; ^; /home/rlalik/c_pads_test.C:359:10: error: redefinition of 'top_pad'; TPad *top_pad = new TPad(""top_pad"", """",0.0035,0.0025,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:159:10: note: previous definition is here; TPad *top_pad = new TPad(""top_pad"", """",0.0035,0.0025,0.9965,0.9975);; ^; root [1] ; ```; Proposed changes fix this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12349:1468,error,error,1468,https://root.cern,https://github.com/root-project/root/pull/12349,3,['error'],['error']
Availability,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:2187,down,download,2187,https://root.cern,https://github.com/root-project/root/issues/8902,1,['down'],['download']
Availability,"r,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2180,error,error,2180,https://root.cern,https://github.com/root-project/root/pull/11153,1,['error'],['error']
Availability,"r.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:2470,error,error,2470,https://root.cern,https://github.com/root-project/root/pull/12449,1,['error'],['error']
Availability,"r.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or a potential bug in ROOT we haven't discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:5969,error,error,5969,https://root.cern,https://github.com/root-project/root/issues/11128,3,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"r/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:515:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/boyer_moore_searcher.h:25:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:530:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__node_handle:65:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:228:29: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; template <class _Tp, bool = is_trivially_destructible<_Tp>::value>; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:19168,error,error,19168,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"r/shared_ptr.hpp:1099:33: error: expected parameter declarator; template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:81: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:81: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _B",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:8729,error,error,8729,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"r/src/TFile.cxx.o: In function `TFile::GetFileBytesRead()':; TFile.cxx:(.text+0xb370): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileBytesWritten()':; TFile.cxx:(.text+0xb390): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesRead(long long)':; TFile.cxx:(.text+0xb430): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::SetFileBytesWritten(long long)':; TFile.cxx:(.text+0xb470): undefined reference to `__atomic_store_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::GetFileCounter()':; TFile.cxx:(.text+0xb4c0): undefined reference to `__atomic_load_8'; CMakeFiles/RIO.dir/src/TFile.cxx.o: In function `TFile::IncrementFileCounter()':; TFile.cxx:(.text+0xb4f4): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; io/io/CMakeFiles/RIO.dir/build.make:599: recipe for target 'lib/libRIO.so' failed; make[3]: *** [lib/libRIO.so] Error 1; CMakeFiles/Makefile2:21040: recipe for target 'io/io/CMakeFiles/RIO.dir/all' failed; make[2]: *** [io/io/CMakeFiles/RIO.dir/all] Error 2; CMakeFiles/Makefile2:21052: recipe for target 'io/io/CMakeFiles/RIO.dir/rule' failed; make[1]: *** [io/io/CMakeFiles/RIO.dir/rule] Error 2; Makefile:5971: recipe for target 'RIO' failed; make: *** [RIO] Error 2; ```. Note that I had to add `${ROOT_ATOMIC_LIBS}` in a few more places than I would've liked. Ideally the linking against `libatomic` should've trickled down to almost all ROOT libraries from `libRIO`. I'm not sure why it didn't. :confused:. I was also wondering about possibly adding a platform / CPU check to the code, but in the end this seemed the safest. That if `libatomic` is available for the build, then the code would explicitly use it independent of what platform it is being built on. Though of course I have not tried the build of this branch of mine on every possible platform...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561:2725,Error,Error,2725,https://root.cern,https://github.com/root-project/root/pull/4561,6,"['Error', 'avail', 'down']","['Error', 'available', 'down']"
Availability,"r: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:1045,error,error,1045,https://root.cern,https://github.com/root-project/root/pull/15044,1,['error'],['error']
Availability,"r::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1412,error,error,1412,https://root.cern,https://github.com/root-project/root/issues/10732,1,['error'],['error']
Availability,"rInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:2136,error,error,2136,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"rage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here; class WVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:8715,error,error,8715,https://root.cern,https://github.com/root-project/root/issues/8642,1,['error'],['error']
Availability,"ranch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std::string&) [with TRANS = xAOD::EventInfo_v1; PERS = xAOD::EventInfo_v1; std::string = std::__cxx11::basic_string<char>] while creating transient objectxAOD::EventInfo_v1/EventInfo: std::runtime_error: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj failed to get DataObject, Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 DataProxy 0 0 WARNING accessData: conversion failed for data object 45903698/EventInfo; 12:37:41 Returning NULL DataObject pointer; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR Unable to retrieve Event root object; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR declareEventRootAddress for context s: 0 e: 0 f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:1797,ERROR,ERROR,1797,https://root.cern,https://github.com/root-project/root/issues/16826,1,['ERROR'],['ERROR']
Availability,"rary/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1920:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/iterator:684:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__iterator/common_iterator.h:30:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/variant:473:24: error: use of variable template 'is_trivially_destructible_v' requires template arguments; {__trait<_Types, is_trivially_destructible, is_destructible>...});; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:40:23: note: template is declared here; inline constexpr bool is_trivially_destructible_v = is_trivially_destructible<_Tp>::value;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:17099,error,error,17099,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"ratedcode.cpp""). d = ROOT.RDataFrame(10); r = ROOT.Foo(ROOT.RDF.AsRNode(d)). print(""second CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp"") # crashes. if __name__ == ""__main__"":; main(); ```. results in:. ```; ~/S/d/optimized_template_helper python repro_crash_compilemacro.py (cern-root) ; first CompileMacro; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; second CompileMacro; Info in <ACLiC>: modified script has already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:1197,error,error,1197,https://root.cern,https://github.com/root-project/root/issues/7199,1,['error'],['error']
Availability,rator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h ROOT/RIntegerSequence.hxx ROOT/RMakeUnique.hxx ROOT/RNotFn.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TMacOSXSystem.h TUnixSystem.h root_std_complex.h TClingRuntime.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /opt/fairsoft/source/nov20/build/Source/root/core/base/inc/LinkDef.h ; Segmentation fault; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ### Expected behavior. Running rootcling-stage1 should find the correct target triple which is arm-apple-darwin20.1.0. This triple is already found by llvm. . interpreter/llvm/src/cmake/config.guess; arm-apple-darwin20.1.0; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. ### To Reproduce. Remove the build directory and start with a new compilation. ### Setup. 1. ROOT version: 6.20.08; 2. Operating system: macosx 11.0; 3. How you obtained ROOT: git clone from github,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6839:6214,fault,fault,6214,https://root.cern,https://github.com/root-project/root/issues/6839,4,"['Error', 'fault']","['Error', 'fault']"
Availability,"rawers = GetRCanvasDrawers(); 460 for drawer in rdrawers:; 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(); 429 def GetRCanvasDrawers():; 430 if not RCanvasAvailable(): return []; --> 431 lOfC = ROOT.Experimental.RCanvas.GetCanvases(); 432 return [NotebookDrawer(can.__smartptr__().get()) for can in lOfC if can.IsShown() or can.IsUpdated()]. ValueError: static const vector<shared_ptr<ROOT::Experimental::RCanvas> > ROOT::Experimental::RCanvas::GetCanvases() =>; ValueError: nullptr result where temporary expected; ```. # Attempted Debugging; * On a separate machine running EL7 and ROOT 6.24/08 everything works as expected.; * Running the same code interactively outside of Jupyter works as expected most of the time without producing errors. E.g. inside ``ipython`` or ``root``.; * Running ``grep -ri ""RCanvas"" /usr/lib64/root/*.so`` produces no output at all.; * Trying to declare anything with ``RCanvas()`` constructor gives even more errors, in both Python and C++ ROOT.; ```; root [0] new ROOT::Experimental::RCanvas();; IncrementalExecutor::executeFunction: symbol '_ZTIN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:2773,error,errors,2773,https://root.cern,https://github.com/root-project/root/issues/14587,1,['error'],['errors']
Availability,"rc/TFileIter.cxx:467] -> [misc/table/src/TFileIter.cxx:468]: (warning) Identical condition 'thisRunNumber<runNumber', second condition is always false. [math/mathcore/src/TMath.cxx:826]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:1845,error,error,1845,https://root.cern,https://github.com/root-project/root/pull/1343,1,['error'],['error']
Availability,"rc/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14845,error,error,14845,https://root.cern,https://github.com/root-project/root/issues/9595,1,['error'],['error']
Availability,"rc/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1; make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior; `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context; There exist reports on xrootd, but not connected to this variable.; I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292:2023,Error,Error,2023,https://root.cern,https://github.com/root-project/root/issues/7292,4,"['Down', 'Error']","['Download', 'Error']"
Availability,"rce code build fails at build target G__Gviz3d with the following error messages:; ```; [ 96%] Built target G__Gviz3d; [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o; In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function.; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:990,error,error,990,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"rch_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #9 0x00007f5aceb37e7a in TROOT::EndOfProcessCleanups() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #10 0x00007f5acec9161f in TUnixSystem::Exit(int, bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:9834,error,errors,9834,https://root.cern,https://github.com/root-project/root/issues/8857,1,['error'],['errors']
Availability,"re, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:2888,error,error,2888,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability,"re.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. Commented the body of the whole function. Got another error. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:3219,error,error,3219,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,re/foundation/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/base/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:17439,error,error,17439,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"re\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:2208,error,error,2208,https://root.cern,https://github.com/root-project/root/pull/6143,2,['error'],['error']
Availability,"reak the existing documentation nor do add new warnings to it. You can still build the documentation as an external project, like is done now. ## Status. Draft, still work to do on the notebook / tutorial part. ## History. This supersedes the old PR https://github.com/root-project/root/pull/9966 that I just closed. The goals were:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [x] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953 in combination with https://github.com/ammaraskar/gcc-problem-matcher; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [x] Update rootspi scripts to build docu in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15160:1155,mainten,maintenance,1155,https://root.cern,https://github.com/root-project/root/pull/15160,1,['mainten'],['maintenance']
Availability,recovering cmake option descriptions when forcing values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:0,recover,recovering,0,https://root.cern,https://github.com/root-project/root/pull/2056,1,['recover'],['recovering']
Availability,"redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:524:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:532:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:2055,error,error,2055,https://root.cern,https://github.com/root-project/root/pull/5627,2,['error'],['error']
Availability,required to suppress warning/error when compiling with -Werror=effc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/109:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/109,1,['error'],['error']
Availability,"rget ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; Whil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:1863,error,error,1863,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"rloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&,void>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; TRootDS.cxx(145): note: while trying to match the argument list '(std::string_view, std::string_view)'; TRootDS.cxx(145): error C2512: 'ROOT::Experimental::TDataFrame::TDataFrame': no appropriate default constructor available [TreePlayer.vcxproj]; TTrivialDS.cxx; TTrivialDS.cxx(82): error C2668: 'std::make_unique': ambiguous call to overloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&,void>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; TTrivialDS.cxx(82): note: while trying to match the argument list '(ULong64_t)'; TTrivialDS.cxx(82): error C2512: 'ROOT::Experimental::TDataFrame::TDataFrame': no appropriate default constructor available [TreePlayer.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1151:1153,error,error,1153,https://root.cern,https://github.com/root-project/root/pull/1151,3,"['avail', 'error']","['available', 'error']"
Availability,"rmineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ../../../etc/cling//plugins/lib/libcladDifferentiator.a: member ../../../etc/cling//plugins/lib/libcladDifferentiator.a(MultiplexExternalRMVSource.cpp.o) in archive is not an object; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libCling.so] Error 1; make[1]: *** [core/metacling/src/CMakeFiles/Cling.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; In file included from input_line_3:1:; In file included from /home/root-build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:36:; In file included from /usr/include/features.h:399:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/root-build/include/Rtypes.h:23:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; /home/root-build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While buildin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:6044,Error,Error,6044,https://root.cern,https://github.com/root-project/root/issues/13453,1,['Error'],['Error']
Availability,"rn |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f45adc81985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1683,Error,Error,1683,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Error'],['Error']
Availability,"rn.ch/t/tchain-parallel-reading-more-than-1-branch/42348/13).; For this TTree (the file is linked from the forum post):. ```; root [12] DmpMCEvtNtup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:1431,Error,Error,1431,https://root.cern,https://github.com/root-project/root/issues/6881,1,['Error'],['Error']
Availability,roduce. - Install dependencies via `apt`; - N.B. `python` and `python-dev` do not exist on Ubuntu22; use `python3` and `python-is-python3` instead; likewise `libglew1.5-dev` should now be `libglew-dev`; - Download and unpack `root_v6.26.10.Linux-ubuntu22-x86_64-gcc11.3.tar.gz` in `/opt`; - `cd /opt/root; source bin/thisroot.sh`; - Then I get the following:. ```; ➜ which root; /opt/root/bin/root; ➜ root; input_line_1:1:2: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/opt/root/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Module libc not found.; Failed to load module std; <<< cling interactive line includer >>>: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module '_Builtin_intrinsics' in '/opt/root/lib/_Builtin_intrinsics.pcm'; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:1577,error,error,1577,https://root.cern,https://github.com/root-project/root/issues/11901,1,['error'],['error']
Availability,"rograms but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:1161,error,error,1161,https://root.cern,https://github.com/root-project/root/issues/9031,1,['error'],['error']
Availability,"roject/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::pair<char,std::int64_t> is in state: 2 and has: ; OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752; char first offset= 0 type= 1 Emulation ; long second offset= 8 type= 4 Emulation ; i= 0, first type= 1, offset= 0, len=1, method=0; i= 1, second type= 4, offset= 8, len=1, method=0; unknown file: Failure; C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>; ```; ### Stack trace from GDB; (When the above snippet is not included); ```; #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445; #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...); at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936; #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070; #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", ; typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084:2388,Failure,Failure,2388,https://root.cern,https://github.com/root-project/root/issues/14084,1,['Failure'],['Failure']
Availability,"rom /mnt/root-build-ubuntu/lib/libCling.so; 0x000000550417514c in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) + 0xe8 from /mnt/root-build-ubuntu/lib/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:3078,error,errors,3078,https://root.cern,https://github.com/root-project/root/issues/13845,1,['error'],['errors']
Availability,"rom /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updated automatically on each release.; # You may update your local copy by issuing a `git pull` command from within `root_src/`.; $ git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; $ mkdir root_build root_install && cd root_build; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src # && check cmake configuration output for warnings or errors; $ cmake --build . -- install -j4 # if you have 4 cores available for compilation; $ source ../root_install/bin/thisroot.sh # or thisroot.{fish,csh}; ```. ### ROOT version. Latest from github : `$ git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src`. ### Installation method. building from source . ### Operating system. linux fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:3853,Error,Error,3853,https://root.cern,https://github.com/root-project/root/issues/13450,3,"['Error', 'avail', 'error']","['Error', 'available', 'errors']"
Availability,"rom the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r =",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:1603,mask,mask,1603,https://root.cern,https://github.com/root-project/root/issues/6677,1,['mask'],['mask']
Availability,roofit/roofitcore/src/RooVectorDataStore.cxx: In member function; ‘virtual Double_t RooVectorDataStore::weightError(RooAbsData::ErrorType); const’:; roofit/roofitcore/src/RooVectorDataStore.cxx:574:15:; warning: ‘lo’ may be used uninitialized in this function; [-Wmaybe-uninitialized]; 574 | return (lo+hi)/2 ;; | ~~~^~~~; roofit/roofitcore/src/RooVectorDataStore.cxx:574:15: warning: ‘hi’ may; be used uninitialized in this function [-Wmaybe-uninitialized],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6176:128,Error,ErrorType,128,https://root.cern,https://github.com/root-project/root/pull/6176,1,['Error'],['ErrorType']
Availability,"root 6.14.04 just ignored ""unknown argument"" errors from clang. They appeared in the log, but the makepch.py script succeeded:; ```; [ 98%] Generating etc/allDict.cxx.pch; /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.04/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.04/builddir/include; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; ```; root 6.14.06 no longer ignores such errors and makepch.py fails:; ```; [ 98%] Generating etc/allDict.cxx.pch; /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 /usr/bin/python3 /builddir/build/BUILD/root-6.14.06/etc/dictpch/makepch.py etc/allDict.cxx.pch -I/builddir/build/BUILD/root-6.14.06/builddir/include; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; error: unknown argument: '-fstack-clash-protection'; error: unknown argument: '-fcf-protection'; Error: Parsing Linkdef file etc/dictpch/allLinkDefs.h; ```; This PR tells clang to ignore these errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2933:45,error,errors,45,https://root.cern,https://github.com/root-project/root/pull/2933,12,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,root ACLiC compile with cmath error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:30,error,error,30,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,root-6.26.06/core/foundation/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/base/inc -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -I/usr/include -I/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/core/clib/res ROOT/RRawFile.hxx ROOT/RRawFileUnix.hxx ROOT/RIoUring.hxx ROOT/TBufferMerger.hxx TArchiveFile.h TBufferFile.h TBufferText.h TBufferIO.h TBufferJSON.h TCollectionProxyFactory.h TContainerConverters.h TEmulatedMapProxy.h TEmulatedCollectionProxy.h TDirectoryFile.h TFileCacheRead.h TFileMerger.h TFree.h TFileCacheWrite.h TFilePrefetch.h TFile.h TFPBlock.h TGenCollectionStreamer.h TGenCollectionProxy.h TKey.h TKeyMapFile.h TLockFile.h TMemFile.h TMapFile.h TMakeProject.h TStreamerInfoActions.h TVirtualCollectionIterators.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TY,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:7650,error,error,7650,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:9872,error,error,9872,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; [29/2579] Building CXX object core/unix/CMakeFiles/Unix.dir/src/TUnixSystem.cxx.o; ```. ### Reproducer. If needed, I'll provide a Dockerfile, but error looks pretty straight forward. Edit: here i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1581,error,error,1581,https://root.cern,https://github.com/root-project/root/issues/13529,2,"['Down', 'error']","['Downloads', 'error']"
Availability,"root.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:2301,down,download,2301,https://root.cern,https://github.com/root-project/root/issues/8435,1,['down'],['download']
Availability,root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6762,error,error,6762,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability,"root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. Commented the body of the whole function. Got another error. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~^~~~; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<doubl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:3946,Error,Error,3946,https://root.cern,https://github.com/root-project/root/issues/13101,1,['Error'],['Error']
Availability,root/treeformula/clones: failure of runNestedClones.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8744:25,failure,failure,25,https://root.cern,https://github.com/root-project/root/issues/8744,1,['failure'],['failure']
Availability,"root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:17556,error,error,17556,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,rootcling --cxxmodule exits with zero status code on error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13675:53,error,error,53,https://root.cern,https://github.com/root-project/root/issues/13675,1,['error'],['error']
Availability,"rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.cxx:2104; #3 0x00002b4bd1d23cfd in TUnixSystem::StackTrace (this=0x7472d0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/unix/src/TUnixSystem.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:1269,error,error,1269,https://root.cern,https://github.com/root-project/root/issues/12771,1,['error'],['error']
Availability,rootcling does not error out when failing to read dependent PCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788:19,error,error,19,https://root.cern,https://github.com/root-project/root/issues/12788,1,['error'],['error']
Availability,rootcling/root-io error loading std::filesystem::path,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:18,error,error,18,https://root.cern,https://github.com/root-project/root/issues/13574,1,['error'],['error']
Availability,"ror: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:3404,error,error,3404,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"round it...!; After upgrading from ubuntu 22 to ubuntu 23, my root stopped working. I would try to run my old macros and the system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1120,Error,Error,1120,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability,"rpreter/llvm/src/lib/libclangBasic.a /usr/lib/llvm-13/lib/libLLVM-13.so.1 && :; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; ```. Digging a bit deeper with the `-Wl,--verbose` linker flag:. ```; <<snip>>; attempt to open /usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:9634,error,error,9634,https://root.cern,https://github.com/root-project/root/issues/12152,1,['error'],['error']
Availability,"rray('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:3931,error,error,3931,https://root.cern,https://github.com/root-project/root/issues/16070,1,['error'],['error']
Availability,"rror message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error); Error:; ```; CustomBuild:; ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel.""; Generating etc/allDict.cxx.pch; ; Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer; ; =================================================================; ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes; #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141); #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308); #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37); #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6); #4 0x67ddd547 in l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:1627,ERROR,ERROR,1627,https://root.cern,https://github.com/root-project/root/issues/9445,1,['ERROR'],['ERROR']
Availability,"rror message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: *** [CMakeFiles/Makefile2:62828: tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. `cmake ../src -DCMAKE_BUILD_TYPE=RelWithDebInfo -Droofit=on -Dmysql=off -Dpgsql=off -Droostats=on -Dfortran=off -Dhistfactory=on -Dtmva=on -Dminuit2=on -Droottest=on -Droot7=on -Dtesting=on -Dbuiltin_llvm=on -Dbuiltin_tbb=off -Dbuiltin_nlohmannjson=on -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=$(which python) -Dfail-on-missing=on -Doracle=off -Dpythia6=off -Dpythia8=off -Dgfal=off -Dvdt=off -Ddavix=off -Droofit_hs3_yml=ON -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON`. ### ROOT version. ROOT Version: 6.29/01; Built for linuxx8664gcc on Jul 03 2023, 09:06:02; From heads/master@v6-29-01-1847-g7f288f1ca8e. ### Installation method. compiled with cmake from master. ### Operating system. archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:2001,Error,Error,2001,https://root.cern,https://github.com/root-project/root/issues/13155,2,['Error'],['Error']
Availability,"rror: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function.; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:1342,error,error,1342,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"rrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:2396,error,error,2396,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,rs.h TStreamerInfo.h TZIPFile.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; While building module 'RIO':; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; input_line_7:1:9: error: macro name must be an identifier; #ifndef -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:18140,error,error,18140,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"rs:. ```; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; ```. You can find the details in https://gitlab.cern.ch/atlas/athena/-/merge_requests/59648, but the problem is luckily fairly easy to reproduce in a completely ""standalone"" way as well. ### Expected behavi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:1155,Error,Error,1155,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:9340,error,error,9340,https://root.cern,https://github.com/root-project/root/issues/15738,1,['error'],['error']
Availability,"rted from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:33:10: note: submodule of top-level module 'std' implicitly imported here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:6508,error,error,6508,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"rters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess; nb.cells[index], resources = self.preprocess_cell(cell, resources, index); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell; raise CellExecutionError.from_cell_and_msg(cell, out); nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:; ------------------; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:2590,avail,available,2590,https://root.cern,https://github.com/root-project/root/issues/10430,1,['avail'],['available']
Availability,runtime_cxxmodules_builtin_debug$ (cd /Users/vvassilev/workspace/builds/root_runtime_cxxmodules_builtin_debug/bindings/tpython && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -I/Users/vvassilev/workspace/sources/root/bindings/tpython/inc -I/Users/vvassilev/workspace/builds/root_runtime_cxxmodules_builtin_debug/include -I/Users/vvassilev/workspace/sources/root/bindings/tpython -I/usr/include/python2.7 -I/Users/vvassilev/workspace/sources/root/bindings/pyroot_experimental/cppyy/CPyCppyy/inc -I/Users/vvassilev/workspace/sources/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src -std=c++1z -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -g -fPIC -Wno-register -Wno-deprecated-register -std=c++1z -o CMakeFiles/ROOTTPython.dir/src/TPyClassGenerator.cxx.o -c /Users/vvassilev/workspace/sources/root/bindings/tpython/src/TPyClassGenerator.cxx); In file included from /Users/vvassilev/workspace/sources/root/bindings/tpython/src/TPyClassGenerator.cxx:26:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/sstream:174:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ostream:138:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/ios:216:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/__locale:514:15: error: C++ requires a type specifier for all; declarations; char_type toupper(char_type __c) const; ^; /usr/include/python2.7/pyport.h:731:29: note: expanded from macro 'toupper'; #define toupper(c) towupper(btowc(c)); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5037:2209,error,error,2209,https://root.cern,https://github.com/root-project/root/pull/5037,1,['error'],['error']
Availability,"ry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything above should be enough. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built from source on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505:2986,down,download,2986,https://root.cern,https://github.com/root-project/root/issues/8505,1,['down'],['download']
Availability,"s 'std::ranges'; namespace ranges; ^; ```. ### What is the expected behaviour?. I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce?. From lxplus9.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>; In file included from ROOT_prompt_0:1:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous; concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;; ^; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'; namespace ranges; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'; namespace ranges; ^; ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001:2316,error,error,2316,https://root.cern,https://github.com/root-project/root/issues/13001,1,['error'],['error']
Availability,"s certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); =====================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:1021,Error,Error,1021,https://root.cern,https://github.com/root-project/root/issues/10920,1,['Error'],['Error']
Availability,"s compiled with clang and high optimization level emit floating point exceptions in the simplest codes. ### Expected behavior; No FPEs. ### To Reproduce; Compile the code below using clang; ```; clang++ -D_FORTIFY_SOURCE=2 -O4 -pipe -g -Wall -D_REENTRANT -D_GLIBCXX_ASSERTIONS -std=c++1y -o color5.exe color5.cxx; ```; and run ; ```; ./color5.exe; ```; Output of the reproducer. ```; msum 0.300000 0.100000; Floating point exception (core dumped); ```. The same compilation with ``-O1`` produces a working executable. Please note that this code is a reproducer obtained from the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:1088,mask,masks,1088,https://root.cern,https://github.com/root-project/root/issues/6677,1,['mask'],['masks']
Availability,"s for certain parameter range around `c1=-0.5` and `c2=-0.55`. ; These negative values are then handled differently in different versions of ROOT; ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png); ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. ; Is it possible to avoid the negative values in RooChebychev in the first place?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The code which produces the plots above:; ```; import ROOT; canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500); #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__; mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53); frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)); c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1); c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1); bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)); bkg.plotOn(frame); canvas.cd(); frame.Draw(); canvas.Draw(); canvas.Update(); canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'); input(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12452:2346,down,download,2346,https://root.cern,https://github.com/root-project/root/issues/12452,1,['down'],['download']
Availability,s in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Form function; 5bf591928a [tmva] avoid Form usage in tests; a18373ec99 [tmva] fix wrong Form usage in remaining classes; c251183d62 [tmva] reduce usage of Form; a50b03c9b7 [tmva] fix multiple places where Form is wrongly used twice is same call; 20fa3a3b4d [tmva] fix wrong Form usage is several next classes; 9eba38ba7a [tmva] fix wrong usage of Form in several classes; 9b3e9dc4e0 [tmva] replace Form by TString::Format in several classes; a6c9608215 [tmva] avoid Form usage in Classification.cxx; 50bd755c37 [tmva] fix Form usage in MethodTMlpANN; befd36fdb1 Fix yet another assertion failure on Windows; fb94e0b032 [tmva] Fix RTensor::ExpandDims(); 99378cfba9 Fix Lenght typos (#13281); 8786fa4392 Added cpp files for RBatchGenerator; 3f55b20888 feat: added tutorial links; c432106115 feat: include link for sofie onnx parser; cf5449bd63 fix: email id for communication; 4f8a5972df docs: Update SOFIE documentation; cdb4a81f87 Error function implemented successfully with the corresponding unit tests; 8157df1a22 [cmake] Remove usage of LLVM_VERSION in tree; b9ff1db6bd [tmva] Fix default weight directory name used in DataLoder; 1bc8c0657a [tmva] Fix drawing of progressbar for nevt<100; 8303abd18e Fix: The Gemm Operator can accept standalone Matmul operator as well as MatMul + Add operator (#12894); 3296ff0600 [GSOC][TMVA][SOFIE] Swish Activation function implemented in the Keras Parser (#12918); b7b8646c53 [tmva][cmake] Fix issue introduced accidentally in PR #12751; 4fd50f0dd8 [cmake] Ensure TMVA emitFromXYZ uses libs from current ROOT build.; c6e6d4d59a feat: Resize method for RTensor; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 9c3a4ad1a9 Remove unnecessary includes propagated by the libCore target; cc6248b3bd feat: GetValueFromDict method for handling dictionary access; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:2900,failure,failure,2900,https://root.cern,https://github.com/root-project/root/pull/13783,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"s in an RDataFrame computation graph can introduce serious overheads both in terms of performance and memory usage. In extreme (but very realistic) cases, this leads to OOM crashes. . A flamegraph (attached) can highlight that the main culprit is the allocation/deallocation of very large STL containers (std::map, std::vector), which happens in the machinery of the `RColumnRegister` class. This class has a copy-on-write policy, introduced by https://github.com/root-project/root/pull/10899 and further explained at https://github.com/root-project/root/pull/11297 . ![many_defines_original](https://github.com/root-project/root/assets/15638895/298b9fb4-b18c-4fb8-a103-8a7fccf225a7). For large graphs (O(10K) nodes), we start seeing multiple GBs of memory used just to make the `Define` calls, and a large portion of the total runtime being spent in the destruction of the RDataFrame itself (i.e. at the end of the application the user is stuck at the terminal). The copy-on-write policy is there for a reason. This way, any new branch of the computation graph can share the information about the columns defined (available) for that branch, without being contaminated by information coming from other branches of the graph (this is the cause of the CI errors in https://github.com/root-project/root/pull/14490 for example). We need to rethink about a way to keep the same functionality that does not incur in the performance/memory usage penalties. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>. #include <string>; #include <iostream>. int main(); {. ROOT::RDataFrame df(1);. auto node = df.Define(""col_0"",; [](); { return 42; });. // Increase the number of iterations for a more evident effect; for (std::size_t i = 0; i < 10000; i++); {; node = node.Define(""col_"" + std::to_string(i + 1),; [](); { return 42; });; }. std::cout << ""End of main\n"";; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14510:1219,avail,available,1219,https://root.cern,https://github.com/root-project/root/issues/14510,2,"['avail', 'error']","['available', 'errors']"
Availability,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:3714,error,errors,3714,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['errors']
Availability,"s of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/mat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:1227,down,download,1227,https://root.cern,https://github.com/root-project/root/issues/7881,1,['down'],['download']
Availability,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:4197,avail,available,4197,https://root.cern,https://github.com/root-project/root/pull/11049,2,['avail'],['available']
Availability,"s there is an issue with (ROOT's) cppyy's handling of SFINAE functions with variadic template arguments. . ### Reproducer. ```py; import ROOT; import cppyy. cppyy.cppdef('''; template <typename T> struct TestSfinae {; template <typename U, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_single(U arg) {; std::cout << ""good"" << std::endl;; return 0;; }; template <typename... Args, typename V = T,; std::enable_if_t<std::is_arithmetic_v<V>, bool> = false>; auto test_pack(Args... args) {; std::cout << ""good"" << std::endl;; return 0;; }; };; '''). # call from cling; cppyy.cppdef('''auto testing = TestSfinae<float>();'''); cppyy.cppdef('''auto single_call = testing.test_single(1);''') # good; cppyy.cppdef('''auto pack_call = testing.test_pack(1,2,3);''') # good. # call from bindings; testing = cppyy.gbl.TestSfinae['float'](); testing.test_single(1) # good; testing.test_pack(1,2,3) # fails; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Sep 17 2023, 12:38:14 |; | From heads/latest-stable@7745d36d |; | With Apple clang version 14.0.3 (clang-1403.0.22.14.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. ```; input_line_24:6:70: error: no matching member function for call to 'test_pack'; new (ret) (int) (((TestSfinae<float>*)obj)->TestSfinae<float>::test_pack<int, int, int, float, false>(*(int*)args[0], *(int*)args[1],; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_18:11:8: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Args'; auto test_pack(Args... args) {; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14016:1671,error,error,1671,https://root.cern,https://github.com/root-project/root/issues/14016,1,['error'],['error']
Availability,"s%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; in root interpreter, we may:; ``` c++; root [0] unsigned long a=5;; ```; and then; ```c++; root [1] b=a;; ```; and it returns a number; ```; (unsigned long) 140055251333128; ```; which is totally unexpected.; <!--. -->. ### Expected behavior; we expect to yield:; ```; (unsigned long)5; ```. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; code generally described above. ; you just need to: ; start root interpretor; ```bash; $root; ```; and run the lines in it; ```c++; root [0] unsigned long a=5;; (unsigned long) 5; root [1] b=a;; ```; note other unsigned integer types also bug.; ``` c++; root [2] unsigned int c; (unsigned int) 0; root [3] d=c; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression. root [4] unsigned char e=5; (unsigned char) '0x05'; root [5] f=e; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression; ```. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; splash screen; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812:1081,Error,Error,1081,https://root.cern,https://github.com/root-project/root/issues/6812,2,"['Error', 'error']","['Error', 'error']"
Availability,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:2661,error,error,2661,https://root.cern,https://github.com/root-project/root/issues/7971,2,"['down', 'error']","['download', 'error']"
Availability,"s(this=0x0000000100a0e3b0, input=""threadsh2()"", V=0x00007fff5fbfbde0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:684; frame #50: 0x0000000103e552a5 libCling.so`cling::MetaProcessor::process(this=0x0000000100b65aa0, input_line=(Data = ""threadsh2()"", Length = 11), compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0, disableValuePrinting=false) at MetaProcessor.cpp:341; frame #51: 0x000000010397bd63 libCling.so`HandleInterpreterException(metaProcessor=0x0000000100b65aa0, input_line=""threadsh2()"", compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0) at TCling.cxx:2053; frame #52: 0x000000010397a16e libCling.so`TCling::ProcessLine(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:2170; frame #53: 0x0000000103984436 libCling.so`TCling::ProcessLineSynch(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:3044; frame #54: 0x00000001001f3133 libCore.so`TApplication::ExecuteFile(file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1143; frame #55: 0x00000001001f19e0 libCore.so`TApplication::ProcessFile(this=0x0000000100b113e0, file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1015; frame #56: 0x00000001001f138f libCore.so`TApplication::ProcessLine(this=0x0000000100b113e0, line="".x threadsh2.C+"", sync=false, err=0x00007fff5fbfd694) at TApplication.cxx:988; frame #57: 0x000000010009878d libRint.so`TRint::ProcessLineNr(this=0x0000000100b113e0, filestem=""ROOT_cli_"", line="".x threadsh2.C+"", error=0x00007fff5fbfd694) at TRint.cxx:756; frame #58: 0x0000000100097daf libRint.so`TRint::Run(this=0x0000000100b113e0, retrn=false) at TRint.cxx:416; frame #59: 0x00000001000027a4 root.exe`main(argc=1, argv=0x00007fff5fbff780) at rmain.cxx:30; frame #60: 0x00007fffaafdb235 libdyld.dylib`start + 1. thread #12; frame #0: 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:9431,error,error,9431,https://root.cern,https://github.com/root-project/root/pull/1573,1,['error'],['error']
