quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,The last failure may be related to the LLVM 16 upgrade (maybe),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13900#issuecomment-1867017695:47,upgrade,upgrade,47,https://root.cern,https://github.com/root-project/root/pull/13900#issuecomment-1867017695,1,['upgrade'],['upgrade']
Deployability,"The last three commits are for Cling's CUDA support. It still doesn't fully work on my machine, but the errors are the same as `master` with LLVM 9 (complains about not finding symbols from `libcudart.so` even though that has been loaded; could be related to the CUDA version?) *without* assertions that I see tripping on `master`. Do we know which setup used to work for these tests? Maybe I'll have to install older versions of CUDA...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1092999970:404,install,install,404,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1092999970,1,['install'],['install']
Deployability,The last update is just to make clang-format happy. I applied the difference between my clang-format and Travis by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058#issuecomment-332759598:9,update,update,9,https://root.cern,https://github.com/root-project/root/pull/1058#issuecomment-332759598,1,['update'],['update']
Deployability,"The latest LCG release already has externals for Python 3, no? We could use that. As for CMake and Python, we can discuss in the next meeting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1512#issuecomment-357899118:15,release,release,15,https://root.cern,https://github.com/root-project/root/pull/1512#issuecomment-357899118,1,['release'],['release']
Deployability,"The latest PR integrates the layer as `ROOT.RDF.Experimental.Distributed`. A user can type; ```; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; df = RDataFrame(""mytree"",""myfile.root""); ```; To get an RDataFrame that can run its computation graph distributedly on a Spark cluster. A generic implementation of the injection of python modules into ROOT or its namespaces will be done in another PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-778289815:14,integrat,integrates,14,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-778289815,1,['integrat'],['integrates']
Deployability,"The latest commit fixes the PYSPARK_PYTHON issue by setting the environment variable in the ctest invocation, tutorial is green on mac11 (the only label that runs tutorial by default and has pyspark installed at the same time) https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112683/testReport/projectroot/runtutorials/tutorial_dataframe_distrdf001_spark_connection_py/ . I just noticed I need to change this line and this is good to go. ```suggestion; - h_poisson = df_1.Histo1D((""poisson"", ""Exponential distribution"", 50, 0, 30), ""poisson""); + h_poisson = df_1.Histo1D((""exponential"", ""Exponential distribution"", 50, 0, 30), ""exponential""); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7698#issuecomment-810830992:199,install,installed,199,https://root.cern,https://github.com/root-project/root/pull/7698#issuecomment-810830992,1,['install'],['installed']
Deployability,"The latest force push should fix build configuration on Windows, which was the only remaining failing build. The cause seems to have been the extra `m` in `LIBRARIES` in the `ROOT_ADD_GTEST` statement for `testLikelihoodSerial`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-916220665:39,configurat,configuration,39,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-916220665,1,['configurat'],['configuration']
Deployability,"The latest update of the commit removes the need for the extra swap of the internal RDF dataset with an empty one, improving on the first design. On my machine I can see the worker properly freeing up memory at the end of the execution of the analysis. It is still not ready for merging but we should now begin testing on SWAN+HTCondor to confirm the preliminary tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2250232441:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2250232441,1,['update'],['update']
Deployability,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13112:51,continuous,continuously,51,https://root.cern,https://github.com/root-project/root/pull/13112,1,['continuous'],['continuously']
Deployability,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238:51,continuous,continuously,51,https://root.cern,https://github.com/root-project/root/pull/12238,1,['continuous'],['continuously']
Deployability,"The limitation right now is: RooAbsArgs that are in different channels of the RooSimultaneous and depend on data are not allowed to have the same name (by the RooAbsArgs I don't only mean the top-level channel pdf but also anything that is serving that pdf). In your initial example, there was a Gaussian ""g"" in each channel. But I hope to eliminate this limitation by the next patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991#issuecomment-1189509380:378,patch,patch,378,https://root.cern,https://github.com/root-project/root/issues/10991#issuecomment-1189509380,2,"['patch', 'release']","['patch', 'release']"
Deployability,"The link system to the notebooks was modified to appear in the brief description. The brief description and link to source files were removed from the documentation for files type ""file"". Several tutorials were updated to create notebooks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/202:211,update,updated,211,https://root.cern,https://github.com/root-project/root/pull/202,1,['update'],['updated']
Deployability,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7208#issuecomment-779300307:116,update,updated,116,https://root.cern,https://github.com/root-project/root/pull/7208#issuecomment-779300307,1,['update'],['updated']
Deployability,The llvm patched is tracked in [D39002](https://reviews.llvm.org/D39002).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1189#issuecomment-337261502:9,patch,patched,9,https://root.cern,https://github.com/root-project/root/pull/1189#issuecomment-337261502,1,['patch'],['patched']
Deployability,The llvm upgrade broke users builds because it double finds the llvm external; project cling. Remove the overspecification. Note that if there is still an issue with the incrementals one needs to delete; CMakeCache.txt file in the main directory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/620:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/620,1,['upgrade'],['upgrade']
Deployability,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287:333,patch,patch,333,https://root.cern,https://github.com/root-project/root/pull/14287,1,['patch'],['patch']
Deployability,"The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList; for RooAbsData objects, as the namePtr mechanism allows to track; renaming and therefore avoids false negatives that result in; linear scans of the collection. In turn, this improves significantly the run-time of large workspace; imports (x2 to x4), which were dominated by embeddedData() calls.; This patch is based on the JSON tool use-case, but presumably will; significantly also improve other heavy uses of workspace import, such; as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low; price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9684:418,patch,patch,418,https://root.cern,https://github.com/root-project/root/pull/9684,1,['patch'],['patch']
Deployability,The loopback option has been removed in January release.; The change in #14136 allows to disable loopback in REveManager.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14779:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/14779,1,['release'],['release']
Deployability,"The macos1014 failure is due to CMake not finding NumPy and Development for Python3, to be solved by installing them in the node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5764#issuecomment-638014286:101,install,installing,101,https://root.cern,https://github.com/root-project/root/pull/5764#issuecomment-638014286,1,['install'],['installing']
Deployability,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:621,release,release,621,https://root.cern,https://github.com/root-project/root/pull/6223,1,['release'],['release']
Deployability,The main change is the renaming from `RBookedDefines` to `RColumnRegister`:; we already abuse this class to also keep track of aliases.; Soon we will also keep track of defined systematic variations here.; With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9466:216,patch,patch,216,https://root.cern,https://github.com/root-project/root/pull/9466,1,['patch'],['patch']
Deployability,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930:172,configurat,configuration,172,https://root.cern,https://github.com/root-project/root/pull/15930,1,['configurat'],['configuration']
Deployability,"The many unrelated formatting changes make it harder to review this PR.; @dpiparo @imaxoi could we maybe commit a `clang-format` pass to master first, and then rebase this PR on it, so that all those formatting changes go away? This would make master and v6.14 diverge a bit though :/. EDIT: note that some of these formatting changes we probably do not want, such as ; ```patch; - void Initialize() { /* noop */}; + void Initialize(); + { /* noop */; + }; ; - void Finalize() { /* noop */}; + void Finalize(); + { /* noop */; + }; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2259#issuecomment-400944697:373,patch,patch,373,https://root.cern,https://github.com/root-project/root/pull/2259#issuecomment-400944697,1,['patch'],['patch']
Deployability,"The marker size in Quartz was using fixed value 1, ignoring that the size must be scaled for retina displays. # This Pull request:; Propagates the scaled marker size to the CGContextFillRect method in charge of the actual drawing. ## Changes or fixes:; Fixes (among others) the wrong ray-tracing output mentioned in #12035. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12055:375,update,updated,375,https://root.cern,https://github.com/root-project/root/pull/12055,1,['update'],['updated']
Deployability,"The marker styles 3, 5 and 31 were draw different depending on whether they were drawn by a class based on TVirtualX or based on TVirtualPS as it can be seen in this picture:; ![temp](https://user-images.githubusercontent.com/5320187/72254803-64142680-3605-11ea-8255-40dd13038c80.jpg); Furthermore, the marker styles 9-19 were treated differently (In TVirtualX classes they were treated like marker style 1 and in TVirtualPS classes they were treated like marker style 20). This patch changes the drawing of TVirtualPS based classes to the drawing of TVirtualX based classes like for example TGX11. The updated classes are TPDF, TPostscript, TImageDump and TSVG. Since this slightly changes the corresponding file output, some reference values for testing had to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4762:479,patch,patch,479,https://root.cern,https://github.com/root-project/root/pull/4762,3,"['patch', 'update']","['patch', 'updated']"
Deployability,The matrix whitelist doesn't allow selecting the node that's running asan in the nightlies.; https://github.com/root-project/jenkins-pipelines/blob/8a7cb74059e70c550a70691f4c7c2d6fff8f0fc9/src/cern/root/pipeline/BuildConfiguration.groovy#L11-L35. Maybe ubuntu19 ist still there?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056657350:133,pipeline,pipelines,133,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056657350,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,The meta-data envelope will not be part of the v1.0 specification. It will likely come later as a minor format update. Note that this change breaks forward compatibility.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16345:111,update,update,111,https://root.cern,https://github.com/root-project/root/pull/16345,1,['update'],['update']
Deployability,The minimum dask version in requirements.txt was updated to 2022.02 by https://github.com/root-project/root/pull/11371. Also update it when looking for a dask installation in the cmake configuration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11452:49,update,updated,49,https://root.cern,https://github.com/root-project/root/pull/11452,4,"['configurat', 'install', 'update']","['configuration', 'installation', 'update', 'updated']"
Deployability,The most common way to deal with columns containing collections in an; RDataFrame execution is through RVec. The changes in this commit allow; reading on-disk std::array fields as RVecs in memory. A new RArrayAsRVec; RField subclass is implemented with this aim. UPDATE:; Tests are present for:; 1. `std::array`; 2. Combinations of `std::array` and `ROOT::RVec` up to 4 levels of nestedness; 3. Custom classes containing `std::array` and combinations with `ROOT::RVec` in the data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13040:263,UPDATE,UPDATE,263,https://root.cern,https://github.com/root-project/root/pull/13040,1,['UPDATE'],['UPDATE']
Deployability,"The motivtion of this update is the following:. It would be nice to be able to use ROOT compied with c++14 in projects that require c++ 17.; Right now it is not possible because of this header even if everything was compiled with the same compiller.; e.g. that is the case for recent Fedora builds, where root is build with gcc11 (default c++17) but with c++14 standard. An alternative is to be able regulate this behaviour with a flag, i.e.; ```; #if defined( R__HAS_STD_STRING_VIEW) || ( ROOT_IGNORE_RCONFIGURE && ( (defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L ) ). #else. ```; Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108:22,update,update,22,https://root.cern,https://github.com/root-project/root/pull/8108,1,['update'],['update']
Deployability,The name of the d3 library included with jsroot was changed from d3.v3; to just d3. This updates JsMVA to use the new name. Note: Not sure if more changes are required to propagate to SWAN and notebook environment. Please advise :),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353:89,update,updates,89,https://root.cern,https://github.com/root-project/root/pull/2353,1,['update'],['updates']
Deployability,"The name of the most up-to-date `sonnet` packge is actually `dm-sonnet`:. https://github.com/google-deepmind/sonnet. The old `sonnet` can't be used, because it maximally supports Python 3.8. With ROOT, we want to support all Python versions starting from 3.8. Follows up on 7d83c00605c4. I tested locally that the GNN tests work in the updated Python environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15605:336,update,updated,336,https://root.cern,https://github.com/root-project/root/pull/15605,1,['update'],['updated']
Deployability,The new CI is able to trigger this kind of error in distrdf tests; ```; Error in <TROOT::WriteTObject>: The current directory (PyROOT) is not associated with a file. The object (x) has not been written.; ```. Which (hopefully) stems from the fact we open the file in the RDF constructor without a `TDirectory::TContext` to save the state of the previous directory. I'll update the code to use TContext. The real problem is that Jenkins is unable to trigger this error....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1658478151:370,update,update,370,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1658478151,1,['update'],['update']
Deployability,"The new class, RooDSShape, has not been release yet, so I think it is still fine to change and mention in the doc. ; Of course we cannot break code using RooCBShape",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7257#issuecomment-794077930:40,release,release,40,https://root.cern,https://github.com/root-project/root/pull/7257#issuecomment-794077930,1,['release'],['release']
Deployability,"The new code is indeed broken. The ancient version of I/O is not well supported as the new version (`TStreamerInfo`) is faster and has more features). In your linkdef file replace:; ```; #pragma link C++ class CytStatInfo;; ```; with (adding a trailing `+`); ```; #pragma link C++ class CytStatInfo+;; ```; In addition update the line ; ```; ClassDef(CytStatInfo, number);; ```; to; ```; ClassDef(CytStatInfo, number + 1);; ```; in case you will need to schema evolve the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1534925513:319,update,update,319,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1534925513,1,['update'],['update']
Deployability,"The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:; 1) Replace gROOTMutex by a TRWMutexImp; 2) Add R__READLOCKGUARD; 3) Add a TListWithRWLock and THashListWithRWLock; 4) Use those in TROOT; 5) Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6) Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7) Introduce scalability test on RecursiveRemove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/676:382,Update,Update,382,https://root.cern,https://github.com/root-project/root/pull/676,2,"['Update', 'update']","['Update', 'update']"
Deployability,"The new release includes some improvements in Reverse mode:; * Reduce the quadratic cloning complexity to linear.; * Support variable reassignments pontentially depending on control flow.; * Support operators `+=`, `-=`, `*=`, `/=`, `,`, `++`, `--`.; * Allow assignments to array subscripts.; * Support nested assignments in expressions `a = b * ((c ? d : e) = f = g);`; * Enable differentiation of for-loops. See more at: https://github.com/vgvassilev/clad/blob/v0.6/docs/ReleaseNotes.md. This patch enables us to upgrade to llvm9. Clad supports from clang5 to clang9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5282:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/5282,4,"['Release', 'patch', 'release', 'upgrade']","['ReleaseNotes', 'patch', 'release', 'upgrade']"
Deployability,The new release includes some improvements in both Forward and; Reverse mode:; * Better correctness of C++ constructs -- handle scopes properly; allow proper; variable shadowing; and preserve namespaces.; * Efficient evaluation in forward mode.; * Reduced cloning complexity.; * Handle more C++ constructs -- variable reassignments and for loops. See more at: https://github.com/vgvassilev/clad/blob/v0.3/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2714:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/2714,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"The new release includes some improvements in both Forward and; Reverse mode:; * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely.; * Enable recursive differentiation.; * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3652:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/3652,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,"The new release includes some improvements in both Forward and; Reverse mode:; * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`; in forward mode.; * Reduce emission of unused expressions; * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which; contain derivatives; * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2918:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/2918,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,The new release includes some improvements:; * Implement #pragma clad ON/OFF/DEFAULT to control regions where clad is active; * Add getCode() interface for interactive use. See more at: https://github.com/vgvassilev/clad/blob/v0.8/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8275:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/8275,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,The new release includes some improvements:; * Implement hessian matrices via the clad::jacobian interface. See more at: https://github.com/vgvassilev/clad/blob/v0.7/docs/ReleaseNotes.md. This patch should be the last part of the fix for ROOT-10886.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346:8,release,release,8,https://root.cern,https://github.com/root-project/root/pull/6346,3,"['Release', 'patch', 'release']","['ReleaseNotes', 'patch', 'release']"
Deployability,"The newly integrated cross validation has suffered two seemingly random failures. Reported [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15871/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/) and [here](https://epsft-jenkins.cern.ch/job/root-incremental-master-noimt/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/1803/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/). The root cause is still not properly understood, but this patch addresses two issues discovered by valgrind and which may be related.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:10,integrat,integrated,10,https://root.cern,https://github.com/root-project/root/pull/1568,2,"['integrat', 'patch']","['integrated', 'patch']"
Deployability,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15330:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/15330,6,"['patch', 'release']","['patch', 'release']"
Deployability,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15299:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/15299,4,"['patch', 'release']","['patch', 'release']"
Deployability,"The non-modules system iterates over all available rootmap files and adds their libraries as potential dependencies to the library which ACLiC builds. The built library relies on the explicit linking to load its dependencies when it is dlopened. This is necessary because we have no other way to resolve symbols. Fortunately, the modules dynamic linker has superior symbol resolution. We can rely on it when loading a shared library. This patch fixes failing tests on OSX when runtime_cxxmodules are on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:439,patch,patch,439,https://root.cern,https://github.com/root-project/root/pull/4742,1,['patch'],['patch']
Deployability,The old code didn't query the modules if the identifier is updated. This caused some checks to fail such as CheckABICompatibility().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/558:59,update,updated,59,https://root.cern,https://github.com/root-project/root/pull/558,1,['update'],['updated']
Deployability,The one test failure is due to removal of the TString to std::string_view conversion. A small patch to roottest is ready to go.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1155#issuecomment-334969829:94,patch,patch,94,https://root.cern,https://github.com/root-project/root/pull/1155#issuecomment-334969829,1,['patch'],['patch']
Deployability,"The only test failure happens for very obscure reasons only when LLVM is built in release mode. We use the linkage cache which is for some reason computed as internal. We can fix the problem by removing the `using` clause. ```cpp; #include ""ROOT/TDataFrame.hxx"" ; using namespace ROOT::Experimental; // The using clause causes the misbehavior. void test_readTotemNtuple() {; TDataFrame d(0);; auto validate_x = [](){ };; d.Foreach(validate_x);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-376315166:82,release,release,82,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-376315166,1,['release'],['release']
Deployability,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3971#issuecomment-502662245:50,install,installed,50,https://root.cern,https://github.com/root-project/root/pull/3971#issuecomment-502662245,2,['install'],['installed']
Deployability,"The operations done by the LookupHelper are costly in both memory and; performance. Almost every operation requires memory allocation and parsing; of often non-trivial C++ code. Unfortunately, the LookupHelper is used very intensively by rootcling and; ROOT. The callers usually do not use any caching mechanisms and redo the; expensive operations over and over even though the answer is known to be; the same as before. For instance, building the dictionary of shows:. ```; MathCore:; Cached entries: 217; Total parse requests: 54051; Cache hits: 53834; TreePlayer:; Cached entries: 183; Total parse requests: 57697; Cache hits: 57514; ```. This patch introduces the first set of caching functionality. In; particular, each LookupHelper::find* function allocates a memory buffer; which is then stored in the clang::SourceManager. We hash the buffer; content and keep a mapping between a hash and FileID and next time we; encounter the same content we do not allocate a new FileID but reuse the; old one. We see decrease in memory footprint by 7% for non-cxxmodules ROOT. For cxxmodules we see significant reduction of the pcm sizes (by half); which translates into rss improvements:. ```; master before:; cpu time = 0.291462 seconds; sys time = 0.064409 seconds; res memory = 345.816 Mbytes; vir memory = 573.508 Mbytes; master after:; cpu time = 0.235828 seconds; sys time = 0.098327 seconds; res memory = 260.012 Mbytes; vir memory = 377.945 Mbytes; ```. Patch by Yuka Takahashi and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483:647,patch,patch,647,https://root.cern,https://github.com/root-project/root/pull/2483,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"The option ""G"" for RedrawAxis did not work for multigraphs. This patch fixes this and restructure this method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4789:65,patch,patch,65,https://root.cern,https://github.com/root-project/root/pull/4789,1,['patch'],['patch']
Deployability,"The option `dataframe_distpyspark` is superseded by `test_distrdf_pyspark`, to clarify that finding pyspark and its dependencies (like Java) during configuration is strictly needed only for the tests. Generally speaking, pyspark (and Java) are optional runtime dependencies that interest only users of the distributed RDataFrame python module with the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7413:148,configurat,configuration,148,https://root.cern,https://github.com/root-project/root/pull/7413,1,['configurat'],['configuration']
Deployability,"The option was deprecated in ROOT 6.32 and should be removed for the next release, as anticipated by the deprecation warnings in 6.32. Follows up on https://github.com/root-project/root/pull/14395.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15159:74,release,release,74,https://root.cern,https://github.com/root-project/root/pull/15159,1,['release'],['release']
Deployability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12853:486,update,updated,486,https://root.cern,https://github.com/root-project/root/pull/12853,1,['update'],['updated']
Deployability,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. This PR is a backport of https://github.com/root-project/root/pull/12853 to v6.28. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12854:569,update,updated,569,https://root.cern,https://github.com/root-project/root/pull/12854,1,['update'],['updated']
Deployability,"The output is as the following:. $ root-config --cxx; icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>; wrote:. > Hi,; > I am not sure this is a bug in ROOT, but it could be some configuration; > problems on your system or a problem in root-config.; > I see you are using a build done with the Intel compiler. If I am not; > mistaken libguide is a library needed when using the Intel compiler.; > Are you sure you have set up correctly the environment (e.g.; > LD_LIBRARY_PATH) to use the Intel compiler ?; > What is the output of root-config --cxx ?; >; > Lorenzo; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904#issuecomment-743974360:209,configurat,configuration,209,https://root.cern,https://github.com/root-project/root/issues/6904#issuecomment-743974360,1,['configurat'],['configuration']
Deployability,"The output using [this build script](https://github.com/peter-jansson/appnuc/blob/eeb736f4137591f86a2070231f3fb1e8b3d7c8a9/scripts/install-root.sh) is available [here](https://github.com/peter-jansson/appnuc/runs/5468207882?check_suite_focus=true). The log indicated more error log information in a XROOTD build log file, which is copy/pasted below. It is indeed v5.4.1 but some other error compared to before in this issue thread. Perhaps the pthread libraries shipped with Alpine Linux is missing `pthread_rwlockattr_setkind_np` et.c.?. ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] Using the user supplied version: v5.4.1; [I] src/XrdVersion.hh successfully generated; In file included from /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/XrdSys/XrdSysE2T.cc:35:; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In constructor 'XrdSysRWLock::XrdSys; RWLock(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:357:30: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 357 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:356:22: error: 'pthread_rwlockattr_se; tkind_np' was not declared in this scope; did you mean 'pthread_rwlockattr_setpshared'?; 356 | pthread_rwlockattr_setkind_np(&attr,; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; | pthread_rwlockattr_setpshared; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh: In member function 'void XrdSysRWLoc; k::ReInitialize(XrdSysRWLock::PrefType)':; /.../root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD/src/./XrdSys/XrdSysPthread.hh:373:22: error: 'PTHREAD_RWLOCK_PREFER; _WRITER_NONRECURSIVE_NP' was not declared in this scope; 373 | PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP);; | ^~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9173#issuecomment-1062037565:131,install,install-root,131,https://root.cern,https://github.com/root-project/root/issues/9173#issuecomment-1062037565,1,['install'],['install-root']
Deployability,The patch hasn't been reviewed since I updated it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7336#issuecomment-789447788:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/7336#issuecomment-789447788,2,"['patch', 'update']","['patch', 'updated']"
Deployability,The patch is a side-effect of addressing your comments in https://github.com/root-project/root/pull/8770,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8776:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/8776,1,['patch'],['patch']
Deployability,"The patch is exactly the same, I force-pushed a new version of the test that uses a `vector<XYZTVector>` instead of the previous hack with a `std::pair`. ~~However that causes a bunch of (seemingly harmless) I/O warnings that I don't understand -- I'll see with Philippe before merging.~~ Understood, all good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11216#issuecomment-1232003317:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/11216#issuecomment-1232003317,1,['patch'],['patch']
Deployability,"The patch is fine. Maybe we should add also as a comment that PxPyPxEVector and XYZTVector are the same type, just a different name",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4424#issuecomment-535514084:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/4424#issuecomment-535514084,1,['patch'],['patch']
Deployability,"The patch is in fact working quite well and one of our users just found a case where it is needed because our original solution was too coarse. We covered it on our side (cf pinged PR on FairRoot) as our adoption of new ROOT releases is typically quite slow, but I think it would indeed be a nice feature to have it done automatically on refresh (as far as I could test it will not hurt even if for some transition period in the future we have it executed once both in ROOT and FairRoot)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242#issuecomment-1499201970:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/issues/12242#issuecomment-1499201970,2,"['patch', 'release']","['patch', 'releases']"
Deployability,The patch is semantically wrong (the new code should have been after the `TFile::Close` but I also can see why it would lead to the error ... and I can not reproduce it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13793#issuecomment-1771755592:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/13793#issuecomment-1771755592,1,['patch'],['patch']
Deployability,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1946#issuecomment-385909893:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/1946#issuecomment-385909893,1,['patch'],['patch']
Deployability,The patch release happened now and the issue can be closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10112#issuecomment-1097645262:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/issues/10112#issuecomment-1097645262,2,"['patch', 'release']","['patch', 'release']"
Deployability,The patch teaches cling to print the proper address of C++ objects with overloaded address-of operator.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1716:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/1716,1,['patch'],['patch']
Deployability,"The patch that disables the initializer list pythonization should in principle not be necessary. @aaronj0, let's see which tests were actually failing because of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/16338,1,['patch'],['patch']
Deployability,"The patch which I suggested on https://sft.its.cern.ch/jira/browse/ROOT-8056.; If the user uses GREP_OPTIONS which add characters to the output of grep (colors, but also filenames or line numbers), root cannot be started anymore. Ideally users would prefer an alias for `grep` over `GREP_OPTIONS` but the crash can also be avoided on the root side.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/144:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/144,1,['patch'],['patch']
Deployability,The patch wouldn't suffice though because we have a few places in e.g. TCling where we need the ROOT_MODULES defined.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/944#issuecomment-327101004:4,patch,patch,4,https://root.cern,https://github.com/root-project/root/pull/944#issuecomment-327101004,1,['patch'],['patch']
Deployability,The pipeline failed because of a merged conflict. This time I tried rebase instead of merge. Could you try rebuild again?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8958#issuecomment-919100747:4,pipeline,pipeline,4,https://root.cern,https://github.com/root-project/root/pull/8958#issuecomment-919100747,1,['pipeline'],['pipeline']
Deployability,"The plugin system is refactored such that one integrator plugin does not necessarily need to be implemented by separate classes. Like this, we can use in the future more general implementations of the integrators for different plugins, e.g., we don't need to implement separate RooIntegrator1D and RooIntegrator2D classes. The `RooIntegratorBinding` is only supposed to be an implementation; detail of the `RooIntegrator2D` and the `RooSegmentedIntegrator2D` to; wrap the integrator for the second dimension. It's better to remove it from the public user interface. It is also; changed such that it takes ownership of the integrator, avoiding the; need for ownership management in the 2D integrator classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13350:46,integrat,integrator,46,https://root.cern,https://github.com/root-project/root/pull/13350,5,['integrat'],"['integrator', 'integrators']"
Deployability,"The portfile has; ```; OPTIONS_RELEASE; ""-Dwinrtdebug=off""; OPTIONS_DEBUG; ""-Dwinrtdebug=on""; ```; according to the debug configure log that setting is working:; ```; System Windows-10.0.20348; Processor 16 core AMD EPYC 7763 64-Core Processor (AMD64); Build type Debug; Install path D:/packages/root_x64-windows/debug; Compiler MSVC 19.35.32217.1; Compiler flags:; C -nologo -ID:/buildtrees/root/src/4777595a60-bb02050ae7.clean/build/win -FIw32pragma.h -FIsehmap.h -MDd -EHsc- -W3 -D_WIN32 -wd4267 -D_WIN64 -DNOMINMAX -Od -Z7; C++ -nologo -ID:/buildtrees/root/src/4777595a60-bb02050ae7.clean/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -std:c++17 -MDd -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -wd4146 -wd4250 -wd4624 -D_WIN32 -wd4267 -D_WIN64 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING -D_SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING -Od -Z7; Linker flags:; Executable /machine:x64; Module /machine:x64 -ignore:4049,4206,4217,4221 -incremental:no; Shared /machine:x64 -ignore:4049,4206,4217,4221 -incremental:no. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 builtin_unuran clad dataframe exceptions fftw3 fitsio gdml http imt mathmore mlp minuit2 odbc opengl roofit webgui root7 rpath shared tmva tmva-cpu spectrum unuran winrtdebug; ```; (I am a bit salty that root nukes `CMAKE_<LANG>_FLAGS` but that is another issue, first solve the build itself); Checking the build log only shows path to external libs which start with `installed\x64-windows\debug\lib` so linking with the wrong CRT is not the case. vcpkg also enforces consistent CRT linkage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738#issuecomment-1532932304:271,Install,Install,271,https://root.cern,https://github.com/root-project/root/issues/12738#issuecomment-1532932304,2,"['Install', 'install']","['Install', 'installed']"
Deployability,The pr has been integrated w/o waiting any more for the scheduled reviews.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2549#issuecomment-480175656:16,integrat,integrated,16,https://root.cern,https://github.com/root-project/root/pull/2549#issuecomment-480175656,1,['integrat'],['integrated']
Deployability,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11076:19,patch,patches,19,https://root.cern,https://github.com/root-project/root/pull/11076,2,['patch'],"['patch', 'patches']"
Deployability,"The previous implementation required TGeoTessellated shapes to be read attached to a TGeoManager. This removes the limitation, and allows also reading geometry files containing shapes converted to VecGeom corresponding solids. # This Pull request:. ## Changes or fixes:; * Restructured the `TGeoFacet` helper class, eliminating referencing vertices stored in the associated `TGeoTessellated` object, since this required calling a specific method `TGeoTessellated::AfterStreamer` to fix all the facet objects. The new version moves all vertex operations from TGeoFacet to the TGeoTessellated class, making the latter readable from a root file even if not connected to a `TGeoManager`; * Added persistency to the class `TGeoVGShape` which interfaces `TGeoShape` to `vecgeom::VPlacedVolume`. This allows to write/read geometry files after being converted to VecGeom. Upon reading, a check is made that the current root version was also compiled with VecGeom support, and if this is not the case a `Fatal` exception is fired. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14283",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14327:1073,update,updated,1073,https://root.cern,https://github.com/root-project/root/pull/14327,1,['update'],['updated']
Deployability,The problem is present in SFT nightly builds too (at least in a build from Friday 2024-02-24). I know they build from Docker containers and I'll check with them which version of system gcc is installed in their images so that we can confirm that the problem comes from an inconsistency between build time and run time.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789#issuecomment-1963879642:192,install,installed,192,https://root.cern,https://github.com/root-project/root/issues/14789#issuecomment-1963879642,1,['install'],['installed']
Deployability,"The problem is that LLVM ships with zlib. Since recently, we meld the header files of the PCH in a zip in it (fa9a2eee8376a0d4c4393b8f94fa3f841455c32d). Clang uses zlib [here](https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp#L1302) and [here](https://github.com/root-project/root/blob/master/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp#L2052) when building the PCH in `-fmodules-embed-all-files` mode. IIUC, the issue is the way the JIT resolves symbols. Currently, cling's JIT gives a preference to the local content to itself, i.e. resolves symbols from libCling.so first. This would mean that even if we link another version of zlib to libCore, cling will still find the symbols from llvm's library. And that's by design, because we want to resolve the embedded in ROOT LLVM symbols first. Otherwise cling will start picking up random LLVM symbols introducing a lot of compatibility and versioning issues. I'd propose we try to solve this in two steps. First we should try disabling LLVM's zlib from `interpreter/CMakeLists.txt` instead of the current patch. I suspect that LLVM will be able to find and use the system's zlib (in that case we should make sure LLVM links to the version of zlib we expect: @oshadura has a nice test case for it). If that doesn't work we should investigate how we can configure ROOT's LLVM with a custom zlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1149#issuecomment-335419847:1141,patch,patch,1141,https://root.cern,https://github.com/root-project/root/pull/1149#issuecomment-335419847,1,['patch'],['patch']
Deployability,"The problem is that `find_library` just looks in the system library location finds the library and makes ROOT link against it. So something like `if version < 5` around this `find_library` call would probably already solve the issue. I.e., from the opening post this finds xrootd version 5.3.1 from where we put it, but then just adds `/usr/lib64/libXrdClient.so` into the mix; ```; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11750#issuecomment-1339409384:449,install,install,449,https://root.cern,https://github.com/root-project/root/issues/11750#issuecomment-1339409384,2,['install'],['install']
Deployability,"The problem seems to be an update of glibc-devel, in particular this file `/usr/include/bits/floatn.h` (it is the last file that is loaded before the assertion according to `strace`). lxplus-arm; ```; glibc-devel-2.34-83.el9_3.7.aarch64 : Object files for development using standard C libraries.; Repo : @System; Matched from:; Filename : /usr/include/bits/floatn.h; ```; [Our docker container](gitlab-registry.cern.ch/sft/docker/alma9:aarch64); ```; glibc-devel-2.34-60.el9_2.7.aarch64 : Object files for development using standard C libraries.; Repo : @System; Matched from:; Filename : /usr/include/bits/floatn.h. ```; Updating glibc-devel in our docker container reproduces the issue. Updating gcc does not reproduce the issue. There are some differences in the file like ; ```diff; - # if !__GNUC_PREREQ (7, 0) || defined __cplusplus; + # if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789#issuecomment-1976486042:27,update,update,27,https://root.cern,https://github.com/root-project/root/issues/14789#issuecomment-1976486042,1,['update'],['update']
Deployability,The problem seems to be caused by using an existing installation of `vecgeom` (i.e. it was caused by -Dvecgeom=On.; I will check if it works using a new `vecgeom` version built for the new architecture.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687#issuecomment-1021105263:52,install,installation,52,https://root.cern,https://github.com/root-project/root/issues/9687#issuecomment-1021105263,1,['install'],['installation']
Deployability,"The problem with the test is that on those platforms `TDavixFile` is used, while on my laptop `TWebFile` is used instead so I only applied the fix there. Now patching `TDavixFile`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11321#issuecomment-1239548188:158,patch,patching,158,https://root.cern,https://github.com/root-project/root/pull/11321#issuecomment-1239548188,1,['patch'],['patching']
Deployability,"The proposed root --web does not help, I am getting as before; Authorization required, but no authorization protocol specified; when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:; > home: null; > network: null; > opengl: null; > x11: null; > desktop: null; > desktop-legacy: null; > removable-media: null; > shared-memory:; > private: true; > layout:. you probably have to add ; > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146760092:297,install,installation,297,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146760092,1,['install'],['installation']
Deployability,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063:876,release,release,876,https://root.cern,https://github.com/root-project/root/pull/11063,1,['release'],['release']
Deployability,"The pull request blur is good description of the change. Could it be added (if not already) to either a commit log, the releases notes or the documentation? [If not already done]. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182#issuecomment-396386894:120,release,releases,120,https://root.cern,https://github.com/root-project/root/pull/2182#issuecomment-396386894,1,['release'],['releases']
Deployability,"The recent commit `565e9aa19a` updated the `getPropagatedError` with; some additional checks, but these checks caused segfaults in some; specifit usecases:. * where the `RooAbsReal` is a parameter in the fit result itself. * where the `RooAbsReal` is a variable unrelated to the fit result. * where the `RooAbsReal` depends only on some of the parameters in the; fit result. This commit fixes these usecases again. A unit test that checks that these usecases don't fail anymore is now; implemented in `testRooAbsReal`. This PR also adds some other new unit tests that cover recent PRs and issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11445:31,update,updated,31,https://root.cern,https://github.com/root-project/root/pull/11445,1,['update'],['updated']
Deployability,"The recently introduced pythonizations for the RDataFrame API allow passing; Python callables to operations such as Define and Filter, but there is no; support for other operations. For now, hide this functionality for the 6.28; release cycle, it will be available once all common operations are supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12053:229,release,release,229,https://root.cern,https://github.com/root-project/root/pull/12053,1,['release'],['release']
Deployability,"The related issues for the original 6.28.00 release:; 1. https://github.com/root-project/root/issues/11856. # 6.28.02. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/12178; - [x] https://github.com/root-project/root/pull/12125; - [x] https://github.com/root-project/root/pull/12236; - [x] https://github.com/root-project/root/pull/12250; - [x] https://github.com/root-project/root/pull/12305; - [x] https://github.com/root-project/root/pull/12287. The backports were grouped in a few PRs to `v6-28-00-patches`:. 1. https://github.com/root-project/root/pull/12321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12319:44,release,release,44,https://root.cern,https://github.com/root-project/root/issues/12319,2,"['patch', 'release']","['patches', 'release']"
Deployability,The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.02 patch release:. - [x] https://github.com/root-project/root/pull/9984; - [x] https://github.com/root-project/root/pull/9981; - [x] https://github.com/root-project/root/pull/10053; - [x] https://github.com/root-project/root/pull/10051; - [x] https://github.com/root-project/root/pull/9986; - [x] https://github.com/root-project/root/pull/10070; - [x] https://github.com/root-project/root/pull/10093; - [x] https://github.com/root-project/root/pull/10082; - [x] https://github.com/root-project/root/pull/10105; - [x] https://github.com/root-project/root/pull/10111; - [x] https://github.com/root-project/root/pull/10158; - [x] https://github.com/root-project/root/pull/10104; - [x] https://github.com/root-project/root/pull/10100; - [x] https://github.com/root-project/root/pull/10229; - [x] https://github.com/root-project/root/pull/10256; - [x] https://github.com/root-project/root/pull/10213; - [x] https://github.com/root-project/root/pull/10270; - [x] https://github.com/root-project/root/pull/10263; - [x] https://github.com/root-project/root/pull/10269; - [x] https://github.com/root-project/root/pull/10352; - [x] https://github.com/root-project/root/pull/10359; - [x] https://github.com/root-project/root/pull/10362; - [x] https://github.com/root-project/root/pull/10293. The backports were grouped in a few PRs to `v6-26-00-patches`:; 1. https://github.com/root-project/root/pull/10114; 2. https://github.com/root-project/root/pull/10252; 3. https://github.com/root-project/root/pull/10367; 4. https://github.com/root-project/root/pull/10376,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10112:41,release,releases,41,https://root.cern,https://github.com/root-project/root/issues/10112,4,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112. The bugfix PRs that need to be backported in this order to the 6.26 branch before the 6.26.04 patch release:. - [x] https://github.com/root-project/root/pull/10467; - [x] https://github.com/root-project/root/pull/10477; - [x] https://github.com/root-project/root/pull/10485; - [x] https://github.com/root-project/root/pull/10495; - [x] https://github.com/root-project/root/pull/10501; - [x] https://github.com/root-project/root/pull/10499; - [x] https://github.com/root-project/root/pull/10516; - [x] https://github.com/root-project/root/pull/10525; - [x] https://github.com/root-project/root/pull/9956; - [x] https://github.com/root-project/root/pull/10550; - [x] https://github.com/root-project/root/pull/10590; - [x] https://github.com/root-project/root/pull/10612; - [x] https://github.com/root-project/root/pull/10553; - [x] https://github.com/root-project/root/pull/10627. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10513; 2. https://github.com/root-project/root/pull/10554; 3. https://github.com/root-project/root/pull/10613; 4. https://github.com/root-project/root/pull/10667,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10493:41,release,releases,41,https://root.cern,https://github.com/root-project/root/issues/10493,4,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename?. Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M; -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14103:4,release,release,4,https://root.cern,https://github.com/root-project/root/issues/14103,3,['release'],"['release', 'release-', 'releases']"
Deployability,The relevant highlights are:. * Support better Windows (thanks to Bertrand Bellenot!);. * Disabled automatic discovery of system LLVM -- clad should only; search for LLVM at DCLAD_PATH_TO_LLVM_BUILD. On some platforms; (discovered by Oksana Shadura via rootbench) clad discovers the; system LLVM which is compatible in principle but this is not what; we want for ROOT. * Implemented -CLAD_BUILD_STATIC_ONLY -- this covers the ROOT usecase; where we do not need shared objects but link the libraries against; another shared object (libCling.so). This allows platforms which have; disabled LLVM_ENABLE_PLUGINS to still build clad and use it. Such; example is CYGWIN and Windows. See more at: https://github.com/vgvassilev/clad/releases/tag/v0.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2462:725,release,releases,725,https://root.cern,https://github.com/root-project/root/pull/2462,1,['release'],['releases']
Deployability,"The remaining errors on mac1014/cxx17 :. https://github.com/root-project/root/pull/4766#issuecomment-573734088. are due to the the fact that some Python2.7 headers (e.g. https://github.com/python/cpython/blob/2.7/Include/unicodeobject.h#L534) still use the `register` keyword, which is not supported anymore in cxx17. Since Python2 is not maintained anymore, those headers will not be updated to support cxx17. Therefore, users of Python2.7 should either not compile with cxx17 or migrate to Python3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4766#issuecomment-573750464:385,update,updated,385,https://root.cern,https://github.com/root-project/root/pull/4766#issuecomment-573750464,1,['update'],['updated']
Deployability,The remaining failures should be gone when the docker image for the Linux platforms is updated tonight with the `onnx` Python package included:; https://github.com/root-project/root/pull/14685,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15288#issuecomment-2067716150:87,update,updated,87,https://root.cern,https://github.com/root-project/root/pull/15288#issuecomment-2067716150,1,['update'],['updated']
Deployability,"The same reasoning goes for RConfigOptions.h. That said, the probably don't have to be in $ROOTSYS/include itself (but they must be somewhere in the installed version)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5450#issuecomment-619067605:149,install,installed,149,https://root.cern,https://github.com/root-project/root/pull/5450#issuecomment-619067605,1,['install'],['installed']
Deployability,"The search for a candidate repository and branch for `roottest` now works as follows: ; - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync.; - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit.; - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12975:161,patch,patches,161,https://root.cern,https://github.com/root-project/root/pull/12975,2,['patch'],"['patches', 'patchset']"
Deployability,"The second cases you report seem unrelated at a first look:; ```; In module 'Vc':; /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Vc/1.4.2/x86_64-centos7-gcc11-opt/include/Vc/common/simdarray.h:501:18: error: 'Vc_1::SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>::SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>' from module 'Vc' is not present in definition of 'SimdArray<type-parameter-0-0, N, type-parameter-0-2, N>' in module 'Vc'; Vc_INTRINSIC SimdArray(private_init_t, VectorType &&x) : data(std::move(x)) {}; ^; ```. and. ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' is out of date and needs to be rebuilt: signature mismatch; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Tue/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/MathCore.pcm'; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015627319:129,install,install,129,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015627319,1,['install'],['install']
Deployability,"The source of information for `ACLiC` is the generated `compiledata.h`. We need the update the generation (done via CMake) to include `-Wl,-rpath,$ROOTSYS/lib` when needed (instead of changing `CompileMacro` itself).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13737#issuecomment-1738371160:84,update,update,84,https://root.cern,https://github.com/root-project/root/pull/13737#issuecomment-1738371160,1,['update'],['update']
Deployability,"The standard `bool`, `true`, and `false` have been used in new RooFit; code for a few years now, and it's better to update also the old code; for consistency. This helps also for doxygen, when the a function with; one way of specifying the boolean is referenced by a signature that uses; the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10532:116,update,update,116,https://root.cern,https://github.com/root-project/root/pull/10532,1,['update'],['update']
Deployability,"The standard `double` was used in new RooFit code for a few years now,; and it's better to update also the old code for consistency. This helps; also for doxygen, when the a function with one way of specifying the; double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10592:91,update,update,91,https://root.cern,https://github.com/root-project/root/pull/10592,1,['update'],['update']
Deployability,"The string-based fit options are officially deprecated with this commit,; to finally remove them in the next release (ROOT v6.28). This will give us more flexibility when refactoring the RooMinimizer to; integrate new features like the batch mode, the new likelihood classes,; or automatic differentiation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9907:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/9907,2,"['integrat', 'release']","['integrate', 'release']"
Deployability,"The string-based fit options were deprecated for a long time, and now is; a good time to remove the support for this completely. This will give us more flexibility when refactoring the RooMinimizer to; integrate new features like the batch mode, the new likelihood classes,; or automatic differentiation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9890:202,integrat,integrate,202,https://root.cern,https://github.com/root-project/root/pull/9890,1,['integrat'],['integrate']
Deployability,"The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated; accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3962:303,update,updated,303,https://root.cern,https://github.com/root-project/root/pull/3962,1,['update'],['updated']
Deployability,"The sum of weight, weight square and weigth * x used for statistics computation where not update when adding/merging THnBase classes. This fixes #11333",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11407:90,update,update,90,https://root.cern,https://github.com/root-project/root/pull/11407,1,['update'],['update']
Deployability,The support for aggregate constructors is linked to enabling the pythonization currently disabled by [this](https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Disable-initializer-style-construction.patch) patch. Landing https://github.com/root-project/root/pull/16338 should fix this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16469#issuecomment-2360730850:179,patch,patches,179,https://root.cern,https://github.com/root-project/root/issues/16469#issuecomment-2360730850,3,['patch'],"['patch', 'patches']"
Deployability,The system integrity protection (SIP) on osx blocks 'dangerous' env variables when spawning a new process. The MetaProcessor command `.!` which calls the shell does not propagate (DY)LD_LIBRARY_PATH variables which prevents cling from finding the modules. This patch introduces a new env variable CLING_PREBUILT_MODULE_PATH which contains the prebuilt modules' location where cling should look for modules. Patch by Alexander Penev (@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4516:261,patch,patch,261,https://root.cern,https://github.com/root-project/root/pull/4516,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,The test failure is due to #4988 which was a hotfix for 09934e9d6a2a55248efca3ad9659e684850b2426,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4987#issuecomment-586209411:45,hotfix,hotfix,45,https://root.cern,https://github.com/root-project/root/pull/4987#issuecomment-586209411,1,['hotfix'],['hotfix']
Deployability,The test failure of centos7/gcc49 is because that platform is lacking a BLAS installation and cannot run DNN. Should I remove the DNN from the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514#issuecomment-358025605:77,install,installation,77,https://root.cern,https://github.com/root-project/root/pull/1514#issuecomment-358025605,1,['install'],['installation']
Deployability,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519#issuecomment-701711449:56,configurat,configuration,56,https://root.cern,https://github.com/root-project/root/pull/6519#issuecomment-701711449,1,['configurat'],['configuration']
Deployability,"The test failures seems to come from a slightly difference in the Poisson implementation between TMath::Poisson(n,mu) and ROOT::Math::poisson_pdf(n,mu) for n = 0.; In teh first case it was computing 1./exp(mu) while in the second exp(-mu). For small mu (e.g. mu= 0.001) the results is different at one bit level. exp(-mu) is more correct and I think we should then update the tests reference files",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5477#issuecomment-620689786:365,update,update,365,https://root.cern,https://github.com/root-project/root/pull/5477#issuecomment-620689786,1,['update'],['update']
Deployability,The test hit a timeout (***Timeout 3600.04 sec)... I hope it's not related to this patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1352#issuecomment-346394726:83,patch,patch,83,https://root.cern,https://github.com/root-project/root/pull/1352#issuecomment-346394726,1,['patch'],['patch']
Deployability,"The test of using the code in the RooFit AD backend is not enabled yet, because it doesn't seem to work with the current version of Clad in ROOT. However, the code is reused also for the normal `evaluate()` function, which is tested by `testRooCrystalBall.cxx`. So it would be good to integrate this change now, such that we can easily test in the CI if the `RooCBShape` works with a future version of Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15449:285,integrat,integrate,285,https://root.cern,https://github.com/root-project/root/pull/15449,1,['integrat'],['integrate']
Deployability,"The test output is; ```; cd /mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc; /mnt/build/jenkins/workspace/root-pullrequests-build/build/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gROOT->SetMacroPath(""/mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/roottest/root/aclic/misc"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/jenkins/workspace/root-pullrequests-build/build/externals//mnt/build/jenkins/workspace/root-pullrequests-build/install/include"")' -q -l -b /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C; -- BEGIN TEST OUTPUT --. Processing /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/runrelpath.C...; In file included from <<< cling interactive line includer >>>:1:; /mnt/build/jenkins/workspace/root-pullrequests-build/roottest/root/aclic/misc/script.C:4:10: fatal error: 'nested_dir1.h' file not found; #include ""nested_dir1.h""; ^~~~~~~~~~~~~~~; ```. Just cd-ing there, starting ROOT and running the script might reproduce it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352393921:1324,install,install,1324,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352393921,1,['install'],['install']
Deployability,"The test should be just removed since the initial reason for having that test is now void. The reason was to have *some way* to check that the packages we thought we had on our CI machines were actually there, since the Jenkins node didn't have any environment management. Now with the github actions CI our environment is more properly managed, at least for Linux. MacOS should get the same treatment at some point, but we can now more safely say ""we know which packages are installed on the CI"" than before.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15286:476,install,installed,476,https://root.cern,https://github.com/root-project/root/pull/15286,1,['install'],['installed']
Deployability,"The test should reuse the prebuilt modules in the module cache. However, due to a mismatch between the module-related flags exported by FindROOT. There is a mismatch between the -D passed by cmake. This patch make sure that the build arguments match more closely the build setup of ROOT. Thus we can reuse the already built module files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2545:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/2545,1,['patch'],['patch']
Deployability,The testing should happen indeed on all platforms. We can also have 1 build/released platform which is fully GPL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14648#issuecomment-1938200127:76,release,released,76,https://root.cern,https://github.com/root-project/root/pull/14648#issuecomment-1938200127,1,['release'],['released']
Deployability,The tests now passed both with and without `roofit_multiprocess`. just pushed again with a little documentation update that doesn't need to be tested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003#issuecomment-1892045270:112,update,update,112,https://root.cern,https://github.com/root-project/root/pull/14003#issuecomment-1892045270,1,['update'],['update']
Deployability,"The tests won't be merged, and I had tested that installing works on my machine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633#issuecomment-486678842:49,install,installing,49,https://root.cern,https://github.com/root-project/root/pull/3633#issuecomment-486678842,1,['install'],['installing']
Deployability,The three failed JupyROOT tests have nothing to do with this PR (a node configuration problem).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8528#issuecomment-867648403:72,configurat,configuration,72,https://root.cern,https://github.com/root-project/root/pull/8528#issuecomment-867648403,1,['configurat'],['configuration']
Deployability,"The title says it all, needs to be backported to the 6.26 branch where I forgot to add such release notes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10086:92,release,release,92,https://root.cern,https://github.com/root-project/root/pull/10086,1,['release'],['release']
Deployability,"The travis-ci fails on the piece of code which was not affected by my patch, apparently the RootClingMain has a general potential problem of dereferencing of a nullptr:; ````; +RESULT_OUTPUT='/home/travis/build/root-project/root/core/dictgen/src/rootcling_impl.cxx:4892:7: error: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. modGen.WriteRegistrationSource(*dictStream, fwdDeclnArgsToKeepString, headersClassesMapString, fwdDeclsString,. ^; ````",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609401998:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609401998,1,['patch'],['patch']
Deployability,"The tutorial was updated, and now allows for naming and easier bookkeeping of parameters. The resulting plot now looks like this:; ![Screenshot from 2020-08-24 11-34-14](https://user-images.githubusercontent.com/16205615/91028743-2f863580-e5fe-11ea-9cf6-13108783eb7c.png); Note that the parameters in the box on the right now have easy-to-interpret names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6021#issuecomment-679021022:17,update,updated,17,https://root.cern,https://github.com/root-project/root/pull/6021#issuecomment-679021022,1,['update'],['updated']
Deployability,"The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:250,update,updated,250,https://root.cern,https://github.com/root-project/root/pull/10192,1,['update'],['updated']
Deployability,"The unittest works as intended, as do the requirements at `requirements.txt`. ROOT does not enforce any build-time Python dependencies (except for `numpy`) and the packages listed in `requirements.txt`. The unittest is merely checking that our test suite will find the packages it needs for the *optional*, *runtime* dependencies that we want to test ourselves. What happened is the following:; 1. There was the necessity to start testing a certain subset of TMVA, which was never tested before (see https://github.com/root-project/root/issues/15197); 2. The packages were added to `requirements.txt` so that the docker images built for Linux runners of the new CI infrastructure could pick them up (the images are built nightly and they install in the virtual environment of the docker container all the packages in `requirements.txt` available in `master` at the time of building the image).; 3. Jenkins has been disabled since more than a week now so these packages were not manually installed on the Linux nodes of the old Jenkins instance. So I will close this issue as everything was working as intended. Jenkins builds should not longer appear for PRs as far as I am aware. If there is the necessity, a member of the team can manually install those packages on the Jenkins nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2050606767:738,install,install,738,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2050606767,3,['install'],"['install', 'installed']"
Deployability,The update for the commit message was not there yet! Oh well,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/803#issuecomment-317826143:4,update,update,4,https://root.cern,https://github.com/root-project/root/pull/803#issuecomment-317826143,1,['update'],['update']
Deployability,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:4,update,update,4,https://root.cern,https://github.com/root-project/root/pull/5042,2,['update'],['update']
Deployability,The updated version should be closer to what is currently in llvm upstream...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750535781:4,update,updated,4,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750535781,1,['update'],['updated']
Deployability,"The upgrade to oneTBB is now done, thanks to @dpiparo:. * https://github.com/root-project/root/pull/13724",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11179#issuecomment-1739875993:4,upgrade,upgrade,4,https://root.cern,https://github.com/root-project/root/issues/11179#issuecomment-1739875993,1,['upgrade'],['upgrade']
Deployability,The user might use utilities which print on cout and expects the output; to be shown immediately. This patch automatically flushes std::cout after each execution of a wrapper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3533:103,patch,patch,103,https://root.cern,https://github.com/root-project/root/pull/3533,1,['patch'],['patch']
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10758:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/10758,8,"['patch', 'release']","['patch', 'patches', 'release', 'releases']"
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11059:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/11059,10,"['patch', 'release']","['patch', 'release', 'releases']"
Deployability,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.10. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758; 5. https://github.com/root-project/root/issues/11059. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11760. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11566; - [x] https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/10873; - [x] https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous.; - [x] https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; - [x] https://github.com/root-project/root/pull/12119; - [x] https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization.; - [x] https://github.com/root-project/root/pull/12696; - [x] https://github.com/root-project/root/pull/12707; - [x] https://github.com/root-project/root/pull/12867; - [x] https://github.com/root-project/root/pull/12969; - [x] https://github.com/root-project/root/pull/12973. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11748; 2. https://github.com/root-project/root/pull/11848; 3. https://github.com/root-project/root/pull/11961; 4. https://github.com/root-project/root/pull/12322; 5. https://github.com/root-project/root/pull/12709; 6. https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11534:70,patch,patch,70,https://root.cern,https://github.com/root-project/root/issues/11534,7,"['patch', 'release']","['patch', 'release', 'releases']"
Deployability,"The variable contains the path to installation_directory/lib, where the; python packages are installed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5471:93,install,installed,93,https://root.cern,https://github.com/root-project/root/pull/5471,1,['install'],['installed']
Deployability,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276:807,patch,patch,807,https://root.cern,https://github.com/root-project/root/pull/14276,1,['patch'],['patch']
Deployability,"The warning seems to be a false positive since the referenced object is a std::type_info, which should always have static lifetime. This patch somehow silences it. Possibly related gcc bug report: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13045:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/pull/13045,1,['patch'],['patch']
Deployability,"The way to run:. ```; cmake CMakeLists.txt -DCMAKE_INSTALL_PREFIX=where/to/install; make; make install; where/to/install/bin/zevis; ```; Then just move some of the internal pads. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692145845:75,install,install,75,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692145845,3,['install'],['install']
Deployability,"The window error are about git gc's failing to run:; ```; 18:55:18 error: Unable to create 'C:/build/workspace/root-pullrequests-build_2/root/.git/logs/HEAD.lock': File exists.; 18:55:18 ; 18:55:18 Another git process seems to be running in this repository, e.g.; 18:55:18 an editor opened by 'git commit'. Please make sure all processes; 18:55:18 are terminated then try again. If it still fails, a git process; 18:55:18 may have crashed in this repository earlier:; 18:55:18 remove the file manually to continue.; ```; which seems to already have been forseen but the work-around was not extended enough?; ```; 18:54:57 -- Cleaning up possible lock files [rm -f .git/HEAD.lock] in C:/build/workspace/root-pullrequests-build_2/root; ```. Any way ... in the end the build actually suceeded:; ```; 20:45:01 ; 20:45:01 Processing hsimple.C...; 20:45:01 hsimple : Real Time = 0.30 seconds Cpu Time = 0.22 seconds; 20:45:01 (TFile *) 0xa21a568; 20:45:01 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:01 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:02 Building Custom Rule C:/build/workspace/root-pullrequests-build_2/root/CMakeLists.txt; 20:45:02 CMake does not need to re-run because C:/build/workspace/root-pullrequests-build_2/build/CMakeFiles/generate.stamp is up-to-date.; 20:45:03 Command exited with the value: 0; 20:45:03 MakeCommand:""C:\Program Files\CMake\bin\cmake.exe"" --build . --config ""Release"" -- /maxcpucount; 20:45:03 0 Compiler errors; 20:45:03 50 or more Compiler warnings; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4239#issuecomment-522708844:1536,Release,Release,1536,https://root.cern,https://github.com/root-project/root/pull/4239#issuecomment-522708844,1,['Release'],['Release']
Deployability,The windows/python errors are unrelated (seems to be a mismatch installation of python 2/3),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11516#issuecomment-1275258253:64,install,installation,64,https://root.cern,https://github.com/root-project/root/pull/11516#issuecomment-1275258253,1,['install'],['installation']
Deployability,There are Ubuntu 22 binaries for https://root.cern/releases/release-62602/ but not for 6.24/06,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518#issuecomment-1118495820:51,release,releases,51,https://root.cern,https://github.com/root-project/root/issues/10518#issuecomment-1118495820,2,['release'],"['release-', 'releases']"
Deployability,There are a few errors left. Do they need an update of the test (and/or reference file) or a fix in rootlcing/genreflex?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/831#issuecomment-321348145:45,update,update,45,https://root.cern,https://github.com/root-project/root/pull/831#issuecomment-321348145,1,['update'],['update']
Deployability,"There are even more fixes for Python 3.11 compatibility, this was exactly my point; I found at least; * https://github.com/root-project/root/pull/11457; * https://github.com/root-project/root/pull/12857. Again, the question is why we need to support new versions of Python with a (legacy) release of ROOT...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13990#issuecomment-1787418057:289,release,release,289,https://root.cern,https://github.com/root-project/root/pull/13990#issuecomment-1787418057,1,['release'],['release']
Deployability,"There are lots of configuration errors on this branch on different platforms, unrelated to this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310#issuecomment-457908756:18,configurat,configuration,18,https://root.cern,https://github.com/root-project/root/pull/3310#issuecomment-457908756,1,['configurat'],['configuration']
Deployability,"There are three ways to get the code of latest-stable:; a) git clone as suggested by https://root.cern/install/: 1.4GiB; b) git clone with --depth=20: 673MiB; c) unpacking the zip file download from github: 477MiB. I think for 99% of the users, option a offers no benefits over option b. If you are testing or writing feature branches, it might not be worth figuring out how to fetch only the relevant parts (--shallow-exclude?). And if you were writing a paper on the history of ROOT, you will want the full version history. . Option c has some serious downsides as well. github just calls the directory root-latest-stable, which is a lot less specific than what you would get from a versioned tarball. (Apparently, the version is in build/version_number). Furthermore, lack of a git repository is bad for anyone who might change stuff locally -- reunpacking the zip file and running diff -r is a lot less fun than using git diff. . I would thus argue that option b is the way to go by default: it reduces the space requirements by some 53% while also retaining the ability to make changes and easily contribute them, should the need arise. . Of course, many users will not care about space requirements as any --human-readable output not containing by the Si prefix P is considered small fries anyhow. But for grad students working on their own laptops, or anyone fetching root with limited bandwidth, the difference might still matter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10238:103,install,install,103,https://root.cern,https://github.com/root-project/root/issues/10238,1,['install'],['install']
Deployability,There is 2 PR to cherry pick. I did on my local 620-patches branch. But then I cannot push:. Pushing to ssh://github.com/root-project/root.git; remote: error: GH006: Protected branch update failed for refs/heads/v6-20-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4818#issuecomment-576259300:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/4818#issuecomment-576259300,3,"['patch', 'update']","['patches', 'update']"
Deployability,"There is a `if(clad)` in the CMakeLists.txt to disable clad if there is no internet connection. However, it doesn't work right now, because it's after `include(RootBuildOptions)`, meaning the `clad` flag is not even set yet (only if explicitly set by the user, but not if we go with the default `clad=ON`). This logic error is fixed by this commit. To be backported to the 6.32 release branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15488:378,release,release,378,https://root.cern,https://github.com/root-project/root/pull/15488,1,['release'],['release']
Deployability,"There is a configuration failure in 32 bits, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6313#issuecomment-688765130:11,configurat,configuration,11,https://root.cern,https://github.com/root-project/root/pull/6313#issuecomment-688765130,1,['configurat'],['configuration']
Deployability,"There is a dependency problem between the RooFit packages that will; start to annoy us soon. Right now, RooFitHS3 depends on both RooFitCore,; RooFit, and RooStats. But to really have nice interfaces for the JSON IO that can be used from; the workspace directly (like `ws.writeToFile(""ws.json"")`), RooFitHS3; needs to be merged with RooFitCore at some point. As of now, this would not work, because then there would be a circular; dependency between RooStats and RooFitCore. This can be avoided by moving the `RooStats::ModelConfig` class from; RooStats to RooFitCore, avoiding the dependency of RooFitHS3 on; RooStats. Some arguments to make for this case:. * The ModelConfig is strongly connected to the RooWorkspace, because; people often use it to save model ""metadata"" in the workspace. * RooFit is often said to be for ""model building"" and RooStats for; statisitcal procedures. Specifying model details in the; configuration object is part of model building. * Also HistFactory depends on RooStats, but only for the ModelConfig; and the Asimov dataset generation. By moving the ModelConfig to; RooFit, we are also half way done avoiding the dependency of; HistFactory on RooStats. * The only thing that people use from RooStats is often only the; ModelConfig anyway, because it lets them specify analysis details in; the workspace, and then the analysis is done with other frameworks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12578:917,configurat,configuration,917,https://root.cern,https://github.com/root-project/root/pull/12578,1,['configurat'],['configuration']
Deployability,"There is a problem in moving to https. Several systems (notably Macs) install curl without support for SSL, so if we move to https then all `-Dbuiltin_*` options will break.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499#issuecomment-358929888:70,install,install,70,https://root.cern,https://github.com/root-project/root/pull/1499#issuecomment-358929888,1,['install'],['install']
Deployability,"There is a side-effect to this patch: the global print level remains different after the VariableMetricBuilder ran. The fact, that there is a global print level at all while there is also a local print level in VariableMetricBuilder, shows that the logging in MINUIT2 is only half-way done. Properly fixing that requires more involved patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2305#issuecomment-405347314:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/pull/2305#issuecomment-405347314,2,['patch'],"['patch', 'patches']"
Deployability,"There is also a. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooExponential read from file ./exponentialPdf.root; has the same version (=1) as the active class but a different checksum.; You should update the version to ClassDef(RooExponential,2).; Do not try to write objects with the current class definition,; the files will not be readable.; ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623525016:227,update,update,227,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623525016,1,['update'],['update']
Deployability,"There is an alternative way to get this using meta path finders. <details><summary>Click to show diff</summary>; <p>. This would need to be polished and checked that it actually follows the `Loader`/`MetaPathFinder` interface correctly but it shows the general idea. If anyone picks this up I'd suggest checking the implementation of `six.moves` to see if there are any edge cases that are missing (especially if Python 2 support is still needed). ```diff; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 113e778cda..21c8aa7454 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -48,7 +48,65 @@ _is_ipython = hasattr(builtins, '__IPYTHON__'); # Configure ROOT facade module; import sys; from ._facade import ROOTFacade; -sys.modules[__name__] = ROOTFacade(sys.modules[__name__], _is_ipython); +xxx = ROOTFacade(sys.modules[__name__], _is_ipython); +__getattr__ = xxx._getattr; +__setattr__ = xxx._setattr; +; +# Configure meta-path finder for ROOT namespaces; +import importlib.abc; +from importlib.util import spec_from_loader; +; +class RootNamespaceLoader(importlib.abc.Loader):; + def __init__(self):; + self._module_cache = {}; +; + def is_package(self, fullname):; + if fullname in self._module_cache:; + return True; + if not fullname.startswith(""ROOT.""):; + raise ImportError(""This loader only loads ROOT.*""); + module = xxx; + partial_name = ""ROOT""; + for part in fullname.split(""."")[1:]:; + partial_name += f"".{part}""; + module = getattr(module, part, None); + if module is None:; + raise NotImplementedError(f""No module named {partial_name}""); + # HACK: There is a probably a better way to do this; + if ""namespace"" not in str(module):; + raise ImportError(f""{partial_name} is not a namespace (type={type(module)})""); + self._module_cache[fullname] = module; + return True; +; + def create_module(self, spec):; + self.is_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14097#issuecomment-1824949593:468,a/b,a/bindings,468,https://root.cern,https://github.com/root-project/root/issues/14097#issuecomment-1824949593,2,['a/b'],['a/bindings']
Deployability,"There is an error here that was introduced in `dc65afe`:. https://github.com/root-project/root/blob/6abb8e90d9bea276269f375a67855c4065813343/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L760-L762. This error should only be thrown when the number of observables is not 1, 2 or 3, but currently fires if the number is equal to 3. See the change from `dc65afe` here where the mistake is evident:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. The conditional should be; `if (fObsNameVec.empty() || fObsNameVec.size() > 3)`. This needs to be backported to ROOT 6.26 and 6.28 to make it into the next patch releases. Thanks to @CoffeeIntoScience for reporting this bug!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12707:727,patch,patch,727,https://root.cern,https://github.com/root-project/root/pull/12707,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:1000,upgrade,upgrade,1000,https://root.cern,https://github.com/root-project/root/pull/15106,1,['upgrade'],['upgrade']
Deployability,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6607#issuecomment-1155497705:110,update,updated,110,https://root.cern,https://github.com/root-project/root/issues/6607#issuecomment-1155497705,1,['update'],['updated']
Deployability,"There is indeed a missing protection/warning message. We currently do not support storing `std::array` as a top level objects. Instead you need to wrap it into a struct. For example, this can be done in your example by adding:; ```; #ifdef __ROOTCLING__; #pragma link C++ class std::vector<std::vector<int>>+;; #pragma link C++ class Binner+;; #endif; ```; to a linkdef file (or your script if you load it via ACLiC). and writing with ; ```; fout->WriteObject(this,""binner""); // i.e. you using don't need to give the class name, the compiler can pass enough information.; ```; and read with:; ```; auto binner = f->Get<Binner>(""binner""); // Not casting needed here, binner will be a `Binner*`; ```. With the updated version of the script I get:; [example.C.txt](https://github.com/root-project/root/files/10025600/example.C.txt). ```; $ root.exe -b -l; root [0] .L example.C+; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/pcanal/Downloads/./example_C.so; root [1] finderBinner(); Creating std::array<std::array<std::vector<std::vector<Int_t>>, LAYER1>, LAYER2> in FinderBinning.root; root [2] loadFinderBinning(); Loading FinderBinning.root; root [3] ; ```. Cheers,. Philippe. PS. Side note the example.C contained:; ```; mBinsS = castedBinsS;; ```; which ended up copying all the data from castedBinsS to mBinsS which was wastefull. See my alternative in the updated script.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722#issuecomment-1317651615:708,update,updated,708,https://root.cern,https://github.com/root-project/root/issues/11722#issuecomment-1317651615,2,['update'],['updated']
Deployability,"There is no Xcode12 binaries here https://root.cern.ch/releases/release-62202/ so I cannot test that quick.; CI with root by Xcode11 has this crash in zevis. Versions match there.; I see this crash locally with Xcode10. Again, no mismatch.; That makes sense to open a separate issue on this. Meanwhile, is that is not possible run zevis on specific mac, maybe you have linux around?. Best regards,; Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-694232545:55,release,releases,55,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-694232545,2,['release'],"['release-', 'releases']"
Deployability,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15404#issuecomment-2092457591:713,install,installing,713,https://root.cern,https://github.com/root-project/root/pull/15404#issuecomment-2092457591,2,['install'],['installing']
Deployability,"There is no equivalent 'gsl' option, so since mathcore is the main; consumer of GSL, it makes sense to enable the builtin version when; the user requests to build mathmore rather than disabling mathmore.; The behavior is still to fail when mathmore is ON and builtin_gsl is OFF,; however. The previous behavior was to turn OFF mathmore instead. We also have a problem in some build nodes where GSL is installed,; but is not found.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/751:401,install,installed,401,https://root.cern,https://github.com/root-project/root/pull/751,1,['install'],['installed']
Deployability,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:693,update,update,693,https://root.cern,https://github.com/root-project/root/pull/15402,1,['update'],['update']
Deployability,"There is side effect when resizing web browser. I saw situation when both buttons - ""Enter full screen"" and ""Exit full screen"" appears at the same time. Just toggle ""full screen"", then made web browser smaller (main page hides) and then again web browser bigger. Please check logic here. And also name ""full screen"" is misleading. Wider or thinner",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-576355570:158,toggle,toggle,158,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-576355570,1,['toggle'],['toggle']
Deployability,"There is still the possibility that installation, etc, may have an issue, but I think that for the most part this should be ready to go. Thanks a lot for working on it!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-536930712:36,install,installation,36,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-536930712,1,['install'],['installation']
Deployability,"There is two ways to work-around the problem. (a) Fix the file. With the old release setup.; ```; auto f = TFile::Open(filename, ""UPDATE"");; TClass::GetClass(missingClassName)->GetStreamerInfo()->ForceWriteInfo();; delete f;; ```; (b) Create a fixit file that would then need to be loaded as part of any jobs that needs this type of broken file:; ```; auto f = TFile::Open(""fixitfile.root"", ""NEW"");; TClass::GetClass(missingClassName)->GetStreamerInfo()->ForceWriteInfo();; delete f;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11436#issuecomment-1258467674:77,release,release,77,https://root.cern,https://github.com/root-project/root/issues/11436#issuecomment-1258467674,2,"['UPDATE', 'release']","['UPDATE', 'release']"
Deployability,There seems to be infrastructure issues :( : ; ```; 07:41:59 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200610-1234/Update.xml; 07:41:59 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds; 07:41:59 Problems when submitting via HTTP; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-642024757:171,Update,Update,171,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-642024757,1,['Update'],['Update']
Deployability,There was an update to Pythia8 8.310 with my fix for compatibility with C++20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14216:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/14216,1,['update'],['update']
Deployability,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```; Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V ; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Add coverage exclude regular expressions.; SetCTestConfiguration:CMakeCommand:/usr/bin/cmake; UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl; Test project /scratchnvme/bendavid/rootdev2/build; Constructing a list of tests; Ignore test: roottest-cling-parsing-semicolon; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 76; Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake""; 76: Environment variables: ; 76: ROOT_HIST=0; 76: Test timeout computed to be: 1500; 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc; 76: [==========] Running 104 tests from 3 test suites.; 76: [----------] Global test environment se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:588,Update,UpdateCTestConfiguration,588,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,2,['Update'],['UpdateCTestConfiguration']
Deployability,There you go. I wanted to push some more commits to finish the integration with the fitter interfaces but I think that can be done in a following minor PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-322499618:63,integrat,integration,63,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-322499618,1,['integrat'],['integration']
Deployability,"There's a bug in the server-mode reader in MSVC that causes extended minimum required strings to fail. This hopefully will be fixed, but for now, this improves compatibility with MSVC in server mode. Also bumping maximum verified version of CMake to 3.12, since that has been released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2338:276,release,released,276,https://root.cern,https://github.com/root-project/root/pull/2338,1,['release'],['released']
Deployability,"There's a bug on 32-bit non-intel such as armv7l where root-config lists `-lROOTDataFrame` because it passes the check this patch adjusts, but libROOTDataFrame is not built on any 32-bit due to https://github.com/root-project/root/blob/v6-16-00-patches/tree/dataframe/CMakeLists.txt#L7 . Old check only hid DataFrame on i686; this patch changes the check to have the exact same conditions as the check for building DataFrame itself to prevent build failures in apps using root-config.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3442:124,patch,patch,124,https://root.cern,https://github.com/root-project/root/pull/3442,3,['patch'],"['patch', 'patches']"
Deployability,Therewith removing all the intermittent failures in the integration builds for this branch.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15099:56,integrat,integration,56,https://root.cern,https://github.com/root-project/root/pull/15099,1,['integrat'],['integration']
Deployability,"These 3 small patches I am using for ROOT + Intel QuickAssist Technology (QAT). QAT provides HW-accelerated (de)compression and crypto (incl. hashing). For easy integration Intel provides zlib-shim and openssl-shim, support the most common interfaces (but not everything). Note, that QAT also has software fallback mechanism. More details are available in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/523:14,patch,patches,14,https://root.cern,https://github.com/root-project/root/pull/523,2,"['integrat', 'patch']","['integration', 'patches']"
Deployability,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13634:82,update,update,82,https://root.cern,https://github.com/root-project/root/pull/13634,1,['update'],['update']
Deployability,These are changes for 5-34-00-patches branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/23:30,patch,patches,30,https://root.cern,https://github.com/root-project/root/pull/23,1,['patch'],['patches']
Deployability,"These are the libs from failed job:; ```; name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdXml.so.2 (6 segments); ```. and these are the libs from a job that was successful:. ```; name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdClient.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2 (6 segments); name=/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdXml.so.2 (6 segments); ```. yes, they are the same, so it's not a problem with loading a wrong version of xrootd client.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-748197821:121,Install,InstallArea,121,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-748197821,8,['Install'],['InstallArea']
Deployability,"These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. Fixes https://github.com/root-project/root/issues/13543. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13902:349,update,updated,349,https://root.cern,https://github.com/root-project/root/pull/13902,1,['update'],['updated']
Deployability,"These changes are on top of the first draft that I submitted, that was merged as part of [PR13929](https://github.com/root-project/root/pull/13929). The requested changes can be tracked in my personal drafts repo [here](https://github.com/QuillPusher/QP_Drafts/pull/3). Changes:. - RooFit intro before AD support -> already covered in ""Overview on RooFit implementation details..."" section by @guitargeek. - **Extracting free functions** to a separate header file is **optional**, re-wrote it as one of the two currently recommended approaches. - changed to ""Support **Code Generation**"" instead of ""AD Support"" in most places. - minor formatting and spelling errors changed. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14018:771,update,updated,771,https://root.cern,https://github.com/root-project/root/pull/14018,1,['update'],['updated']
Deployability,"These commands, bound respectively to `ESC l` and `ESC u`, should {lower,upper}case the next word; however, only the first character was changed. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10144:197,update,updated,197,https://root.cern,https://github.com/root-project/root/pull/10144,1,['update'],['updated']
Deployability,"These differences were not there when last time we updated to v6.24 branch commit b802a6b (see https://github.com/cms-sw/cmsdist/pull/6730#issuecomment-799704333 and https://cmssdt.cern.ch/SDT/jenkins-artifacts/baseLineComparisons/CMSSW_11_3_X_2021-03-14-2300+963134/41710/validateJR.html ). . It could be that some of latest cmssw changes might have caused these differences, I am re-running the tests based on latest cmssw release now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811685526:51,update,updated,51,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811685526,2,"['release', 'update']","['release', 'updated']"
Deployability,"These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```; core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; extern char *getenv ();; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13764:568,update,updated,568,https://root.cern,https://github.com/root-project/root/pull/13764,1,['update'],['updated']
Deployability,These once should be all for TMVA!. @lmoneta and me had a closer look to the classes and updated the PR accordingly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3856#issuecomment-495225938:89,update,updated,89,https://root.cern,https://github.com/root-project/root/pull/3856#issuecomment-495225938,1,['update'],['updated']
Deployability,"They are red, it is expected because the installation of the package in the containers should happen the next day.; We need to see the results tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15236#issuecomment-2058945191:41,install,installation,41,https://root.cern,https://github.com/root-project/root/pull/15236#issuecomment-2058945191,1,['install'],['installation']
Deployability,"They have the same name. We would probably ""just"" need to also tag roottest as `latest_stable`, and update the tag whenever we update root.git's `latest_stable`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8783#issuecomment-924973605:100,update,update,100,https://root.cern,https://github.com/root-project/root/issues/8783#issuecomment-924973605,2,['update'],['update']
Deployability,They should not be part of the `v6-34-00-patches` branch. This reverts commit 24da4ed1e3e03203cf6dcaf9c3d1c26a66c3eccc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16835:41,patch,patches,41,https://root.cern,https://github.com/root-project/root/pull/16835,1,['patch'],['patches']
Deployability,This *was* an issue in llvm9 that's fixed by one of our patches. But that wouldn't have anything to do with ROOT 6.16.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9517#issuecomment-1010178893:56,patch,patches,56,https://root.cern,https://github.com/root-project/root/pull/9517#issuecomment-1010178893,1,['patch'],['patches']
Deployability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:298,update,update,298,https://root.cern,https://github.com/root-project/root/pull/2321,1,['update'],['update']
Deployability,"This PR adds a new callback to the PyKeras method.; I've build ROOT without any errors and run the ctests and all of them passed. . You can try out this new callback with:; `sudo pip install keras --upgrade`; `sudo pip install tensorflow --upgrade`. And then run: `python tutorials/tmva/keras/ClassificationKeras.py`. The callback will create a new directory called 'logs'.; Then you can call while or after training tensorboard: `tensorboard --logdir=./logs`; Now you can open the link from your terminal and visualize the network and training. ; The `ClassificationKeras.py` script, seems to be not compatible with the Keras 2.x API right now, therefore you can revert the changes of this PR in this specific script after testing. More information on TensorBoard: https://www.tensorflow.org/get_started/summaries_and_tensorboard. Also pointing to the author of the PyKeras implementation: @stwunsch. Thanks in advance for reviewing this PR!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1353:183,install,install,183,https://root.cern,https://github.com/root-project/root/pull/1353,4,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"This PR adds a new data source for `RDataFrame` that is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:618,integrat,integration,618,https://root.cern,https://github.com/root-project/root/pull/2322,1,['integrat'],['integration']
Deployability,"This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12475:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/12475,1,['update'],['updated']
Deployability,"This PR adds branch type inference to Histo1D with weights, as well as Histo2D, Histo3D, Profile1D and Profile2D both with and without weights.; Code has been simplified. Docs have been updated. A related PR in roottest introduces testing for the new functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/532:186,update,updated,186,https://root.cern,https://github.com/root-project/root/pull/532,1,['update'],['updated']
Deployability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12395:219,update,updated,219,https://root.cern,https://github.com/root-project/root/pull/12395,1,['update'],['updated']
Deployability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12396:219,update,updated,219,https://root.cern,https://github.com/root-project/root/pull/12396,1,['update'],['updated']
Deployability,"This PR adds support for `std::multimap` and `std::unordered_multimap` fields. The on-disk representation is exactly the same as `std::(unordered)_map`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16331:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/16331,1,['update'],['updated']
Deployability,"This PR adds support for `std::multiset` and `std::unordered_multiset` fields. The on-disk representation is exactly the same as `std::(unordered)_set`, so the only addition is the type name resolution for type-erased fields and the `RField` template specializations. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16330:319,update,updated,319,https://root.cern,https://github.com/root-project/root/pull/16330,1,['update'],['updated']
Deployability,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11065:267,integrat,integrate,267,https://root.cern,https://github.com/root-project/root/pull/11065,1,['integrat'],['integrate']
Deployability,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11055:162,update,updated,162,https://root.cern,https://github.com/root-project/root/pull/11055,1,['update'],['updated']
Deployability,This PR adds support for the latest changes in clad gradient. Please do not merge till a new version (0.9) of clad is released and the version number for clad in ROOT is set to that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8830:118,release,released,118,https://root.cern,https://github.com/root-project/root/pull/8830,1,['release'],['released']
Deployability,"This PR adds the `RNTupleDescriptor::GetColumnIterable()` method, which returns an iterator over all (logical) columns of the RNTuple (without having to specify a field). Some questions to still consider:; 1. The original `RNTupleDescriptor::GetColumnIterable(const RFieldDescriptor &field)` method returns an iterator over the _logical_ columns. Would it make more sense to return physical columns for this method or should we stay consistent across methods? For the `RNTupleInspector`, we're interested in physical columns but if we have the logical columns we could filter out the non-physical ones.; 2. The original method only returns the columns for the specified field, without considering its potential sub-fields. Would it be useful to add a flag to toggle whether the columns for sub-fields should be included (in a separate PR)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12893:759,toggle,toggle,759,https://root.cern,https://github.com/root-project/root/pull/12893,1,['toggle'],['toggle']
Deployability,This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14099:456,update,updated,456,https://root.cern,https://github.com/root-project/root/pull/14099,1,['update'],['updated']
Deployability,This PR adds the changes and new implementations in TMVA SOFIE in the release notes for version 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14019:70,release,release,70,https://root.cern,https://github.com/root-project/root/pull/14019,1,['release'],['release']
Deployability,"This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13715:592,update,updated,592,https://root.cern,https://github.com/root-project/root/pull/13715,1,['update'],['updated']
Deployability,"This PR adds the following fixes and improvements to `RNTupleInspector::GetPageSizeDistribution`:; * When the provided column type is not present in the RNTuple being inspected, an empty histogram is returned.; * When a provided column ID is not present in the RNTuple being inspected, an exception is thrown.; * Default axis titles have been added.; * An overloaded method to provide multiple column IDs at once has been added. The method taking only one ID has been adapted to use this overload.; * The option to provide multiple column types at once has been added. Here, a `THStack` is returned rather than a `TH1D`. The method taking only one type has been adapted to use this overload. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14323:743,update,updated,743,https://root.cern,https://github.com/root-project/root/pull/14323,1,['update'],['updated']
Deployability,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15985:781,update,updated,781,https://root.cern,https://github.com/root-project/root/pull/15985,1,['update'],['updated']
Deployability,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919:409,install,install,409,https://root.cern,https://github.com/root-project/root/pull/5919,2,['install'],['install']
Deployability,"This PR and their roottest sibling PR contain fixes for the following tests:. Roottest python basic tests:; - roottest-python-basic-basic; - roottest-python-basic-overload. Roofit tutorials fixed by the addition of a pythonisation to get the using declarations of `RooAbsData` into `RooDataHist`. This pythonisation will not be needed anymore when a general solution is provided by the bindings, mainly by merging this Cppyy patch into ROOT: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff; - tutorial-roofit-rf106_plotdecoration-py; - tutorial-roofit-rf610_visualerror-py; - pyunittests-pyroot-pyz-roodatahist-ploton; - tutorial-roofit-rf315_projectpdf-py; - tutorial-roofit-rf402_datahandling-py. Related to https://bitbucket.org/wlav/cppyy/issues/66/cppoverload-addmethod-cppoverload-clears; - tutorial-roofit-rf307_fullpereventerrors-py; - tutorial-roofit-rf706_histpdf-py. Some fixes for the following test, although it still can't be re-enabled due to https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; - roottest-python-basic-datatype. Some fixes for the following test, but still can't be re-enabled (more issues to investigate):; - roottest-python-regression-regression",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4294:425,patch,patch,425,https://root.cern,https://github.com/root-project/root/pull/4294,2,['patch'],"['patch', 'patches']"
Deployability,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11161:92,update,updateCoefficients,92,https://root.cern,https://github.com/root-project/root/pull/11161,1,['update'],['updateCoefficients']
Deployability,This PR back ports fixes from these PR's:. - #9499; - #9513 ; - #9718 (in Math); - #9776 (release notes),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9806:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/9806,1,['release'],['release']
Deployability,This PR backports in 6.26 some fixes from master in the build configuration for SOFIE. . - backport fix from #PR 11481 (movie some Sofie parser definition in implementation); - backport fix from #PR 11545 (fix some issues with no rt modules); - backport fix from the tests #11529 (apply some fixes in the building of SOFIE tests),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11576:62,configurat,configuration,62,https://root.cern,https://github.com/root-project/root/pull/11576,1,['configurat'],['configuration']
Deployability,"This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13726:630,update,updated,630,https://root.cern,https://github.com/root-project/root/pull/13726,1,['update'],['updated']
Deployability,This PR contains some follow-up changes to https://github.com/root-project/root/pull/8700 and https://github.com/root-project/root/pull/9078:. * avoid using `std::shared_ptr` for return values; * change copyright of roofitcore/TestStatistics to `(c) CERN` (requested by @Axel-Naumann in https://github.com/root-project/root/pull/8700#discussion_r738407080); * I used now the same copyright headers from https://github.com/root-project/root/pull/9078 also for the TestStatistics; * fix a build warning in non-debug mode; * don't install zmq.hpp header from builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9345:528,install,install,528,https://root.cern,https://github.com/root-project/root/pull/9345,1,['install'],['install']
Deployability,"This PR continues the work started in #4019 . The discussed changes have been applied. . Regarding the usage of a header just for the Python version of the tutorial, for the moment the name of the header has been extended with ""_python"". Plus, the comments at the top already stressed the fact that it is declared in the Python version. Of course the C++ version could be refactored in order to declare the header as well, at the moment the only main difference would be that in C++ some filtering functions are written as lambdas, while in Python they have been added as free functions in the header and then get declared to the interpreter. In general, the following suggested changes have been applied:; 1. The tutorial is now PEP8 compliant; 2. The header has been updated with the latest version of the C++ tutorial ([commit](https://github.com/root-project/root/commit/bd821cc6ec7ce18d0105ca97959a7ed9fb0a7004)); 3. Weights are now passed as formatted strings of constant values to the `Histo1D` functions; 4. Path to the header *should* be platform independent. Further suggestions are deeply appreciated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4071:769,update,updated,769,https://root.cern,https://github.com/root-project/root/pull/4071,1,['update'],['updated']
Deployability,This PR could also be used to update the reference file for [roottest_root_core_recursive_recursivewarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/182593/testReport/projectroot.roottest.root.core/recursive/roottest_root_core_recursive_recursivewarning/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1682668527:30,update,update,30,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1682668527,1,['update'],['update']
Deployability,"This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist.; 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:; a. looking at the merge commit create by github; b. extracting the parents commit (from base and from the incoming branch); c. checkout the incoming branch commit; d. rebasing the base branch onto it. An alternative implementation could have been; e. checkout the commit merge; f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14052:126,update,update,126,https://root.cern,https://github.com/root-project/root/pull/14052,2,['update'],['update']
Deployability,"This PR duplicates one of the commits in PR #1520 (that PR in addition addresses two more issues in JsMVA not related to the d3 change). As written in the description of PR #1520:. > The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some porting is needed. This PR does not introduce any other changes than changing the name of the js file in the two places where it is referenced in the code, just as PR #1520 does. The API of d3 v4 is not fully backward compatible with d3 v3. Did you go through the code and check that nothing else needs to be changed? In jsroot itself there were many other changes to the code to adapt to the changed API when the d3.js file was updated to v4 as seen in the commit:. https://github.com/root-project/jsroot/commit/c156b8956f77d1aef4b70cd8609c4b1f2036f94f#diff-26681b69718507c05077030d69e5ba58. One more comment: In addition to the change that changes the name of the d3.js file, this PR also proposes changes to some error messages in jsroot. These proposed changes should be proposed to jsroot upstream (https://github.com/root-project/jsroot), otherwise they will be overwritten next time root's bundled copy of jsroot is updated by copying files from upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353#issuecomment-409446728:205,update,updated,205,https://root.cern,https://github.com/root-project/root/pull/2353#issuecomment-409446728,4,['update'],['updated']
Deployability,This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14089:135,update,updated,135,https://root.cern,https://github.com/root-project/root/pull/14089,1,['update'],['updated']
Deployability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:1214,install,install,1214,https://root.cern,https://github.com/root-project/root/pull/394,2,['install'],['install']
Deployability,"This PR fixes #15617, where the number of files is incorrectly returned by `RInterfaceBase`/`RDFDescription` for RDF's constructed from an `RDataSource`. It involves the addition of `GetNFiles` to the public interface of `RDataSource` and calling it in the relevant places. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15653:325,update,updated,325,https://root.cern,https://github.com/root-project/root/pull/15653,1,['update'],['updated']
Deployability,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177:77,update,updated,77,https://root.cern,https://github.com/root-project/root/pull/16177,2,['update'],"['update', 'updated']"
Deployability,"This PR fixes ROOT-10081. ; When calling TRandom1::SetSeed(seed ) a different initialization was done respect to calling ; TRandom1::SetSeeds( { seed, 0}, 0); With this PR the same initialization is now performed . In addition the documentation is updated for TRandom2::SetSeed. In that case the store seed value is not the same passed and the user needs to store by himself the seed value in order to reproduce the generated sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4925:248,update,updated,248,https://root.cern,https://github.com/root-project/root/pull/4925,1,['update'],['updated']
Deployability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:50,update,update,50,https://root.cern,https://github.com/root-project/root/pull/453,2,['update'],['update']
Deployability,"This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14141:194,update,updated,194,https://root.cern,https://github.com/root-project/root/pull/14141,1,['update'],['updated']
Deployability,This PR fixes teh usage in ROOT of TF1::IntegralError when running in MT; In this case the global TVirtualFitter object is not existing and one needs to pass the covariance matrix from TFitResult. Update error message when using TF1::IntegralError when running in MT . Update also documentation to indicate this case,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5702:197,Update,Update,197,https://root.cern,https://github.com/root-project/root/pull/5702,2,['Update'],['Update']
Deployability,"This PR fixes the incorrect calculation of the compressed size by the `RNTupleInspector`. Because the vector of compressed page sizes is not cleared after each loop iteration, the accumulation needs to happen only after the loop has finished. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14316:279,update,updated,279,https://root.cern,https://github.com/root-project/root/pull/14316,1,['update'],['updated']
Deployability,This PR fixes the incorrect fetching of the type for branches containing split collections of user-defined classes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12073:167,update,updated,167,https://root.cern,https://github.com/root-project/root/pull/12073,1,['update'],['updated']
Deployability,"This PR fixes tons of memory leaks in RooFitHS3 by never using manual memory allocation in RooFitHS3. To facilitate this, an overload of `RooAbsArg::addOwnedComponents` was added that takes transfers the ownership via smart pointers (otherwise one would have to use raw owning pointers or `std::unique_ptr<T>::release()` which I want to avoid). If the CI passes, I'll squash the second and third commit and add commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9690:310,release,release,310,https://root.cern,https://github.com/root-project/root/pull/9690,1,['release'],['release']
Deployability,"This PR follows up on https://github.com/root-project/root/pull/7723, which introduced the pythonization of `RooAbsReal::plotOn`. However, the unit test that came with #7723 also assumed pythonizations of `RooAbsPdf::plotOn` and `RooAbsData::plotOn`. This was not noticed before since the unit tests were not run in the continuous integration. This PR refactors the RooFit pythonization code to easily pythonize also `RooAbsPdf::plotOn` and `RooAbsData::plotOn` such that the unit tests pass. I need to figure out what needs to be done to run the pythonization unit tests in the bot tests for the future. Please take a look @Harshalzzzzzzz, this should be interesting for you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753:320,continuous,continuous,320,https://root.cern,https://github.com/root-project/root/pull/7753,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"This PR for now fixes #14748, but IMO down the line we might need a more tailored representation for friends (at least in how they are presented to the user). Friends are (virtually) represented as untyped records. To properly create them as fields (neede e.g. for `Show` and `PrintInfo`), we artificially bind them to an untyped `RRecordField`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14749:397,update,updated,397,https://root.cern,https://github.com/root-project/root/pull/14749,1,['update'],['updated']
Deployability,"This PR handles the case in Minos when a lower function value is found. ; The iteration to find the crossing function point (in MnFunctionCross) is stopped and the new found point state with lower function value is returned. ; The Minuit2Minimizer then handles the case by re-minimizing t he function from the new point and then run again Minos from the new found minimum. In the case of TMinuit this was handles, although maybe not in the optimal case. . Fix also when a new Minimum is found that both in Minimizer and Fitter that the result with the new minimum is updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4782:567,update,updated,567,https://root.cern,https://github.com/root-project/root/pull/4782,1,['update'],['updated']
Deployability,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1359215581:256,update,updated,256,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581,2,['update'],['updated']
Deployability,This PR has been updated to support function overload/class templates. :-); Please review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-527507842:17,update,updated,17,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-527507842,1,['update'],['updated']
Deployability,"This PR improves VecCore integration into ROOT. Before we copied all VecCore and Vc headers into the build directory, since rootcling did not get the right includes when Vc or VecCore were builtin. Now the right includes are propagates by calling `set_property()` with the necessary include directories. Ideally, in the future we should take the includes not from the `DIRECTORY` property, but from the target dependencies for each subcomponent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830:25,integrat,integration,25,https://root.cern,https://github.com/root-project/root/pull/830,1,['integrat'],['integration']
Deployability,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11171:960,update,updated,960,https://root.cern,https://github.com/root-project/root/pull/11171,1,['update'],['updated']
Deployability,"This PR includes the commits of; * PR #833 ; * a fix (dependent on #833) for task-unsafety in TDataFrame's TColumnValue; * PR #828 ; * a patch for task-unsafety in TDataFrame's thread-slot distribution by @dpiparo (commit 2787af2). If we want to push these commits little by little, PR #833 and PR #828 should be merged first, then I can open a third PR with the second (and fourth?) fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/835:137,patch,patch,137,https://root.cern,https://github.com/root-project/root/pull/835,1,['patch'],['patch']
Deployability,"This PR integrates recently developed `RNTupleMerger` (#13858) into `TFileMerger` so that it can be used via `hadd` etc. For the time being, the PR is in draft mode to facilitate the discussion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398:8,integrat,integrates,8,https://root.cern,https://github.com/root-project/root/pull/14398,1,['integrat'],['integrates']
Deployability,"This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8463:8,integrat,integrates,8,https://root.cern,https://github.com/root-project/root/pull/8463,1,['integrat'],['integrates']
Deployability,"This PR introduces a new format option for `RNTupleReader::Show()` that shows all fields if no model is specified, and only the fields present in the model if there is one. It also changes the default show format to this option. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). Fixes #12031.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026:280,update,updated,280,https://root.cern,https://github.com/root-project/root/pull/12026,1,['update'],['updated']
Deployability,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8784:438,release,release,438,https://root.cern,https://github.com/root-project/root/pull/8784,2,['release'],['release']
Deployability,"This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567:438,update,updated,438,https://root.cern,https://github.com/root-project/root/pull/8567,1,['update'],['updated']
Deployability,"This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12486:828,update,updated,828,https://root.cern,https://github.com/root-project/root/pull/12486,1,['update'],['updated']
Deployability,"This PR is a backport of #12781. The change in this PR fixes a segfault when defining a C++20 concept if definition shadowing is enabled.; In principle, for a `TemplateDecl`, `isDefinition()` issues a recursive call passing the templated decl as a parameter. A `ConceptDecl`, however, should always be considered a definition. Also, update the DeclShadowing test incorporating a C++20 concept. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #12779.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12782:333,update,update,333,https://root.cern,https://github.com/root-project/root/pull/12782,2,['update'],"['update', 'updated']"
Deployability,"This PR is a backport of #9965 (see #9954) for 6.26. Optional, but it would be nice to avoid patching conda-forge root https://github.com/conda-forge/root-feedstock/issues/160.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9999:93,patch,patching,93,https://root.cern,https://github.com/root-project/root/pull/9999,1,['patch'],['patching']
Deployability,This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12472:182,update,updated,182,https://root.cern,https://github.com/root-project/root/pull/12472,1,['update'],['updated']
Deployability,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:173,patch,patched,173,https://root.cern,https://github.com/root-project/root/pull/9078,3,"['patch', 'release']","['patch', 'patched', 'released']"
Deployability,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15775:167,release,release,167,https://root.cern,https://github.com/root-project/root/pull/15775,2,"['install', 'release']","['installing-root-with-cuda-support-in-a-conda-environment', 'release']"
Deployability,This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14090:22,update,update,22,https://root.cern,https://github.com/root-project/root/pull/14090,1,['update'],['update']
Deployability,This PR is a part of #10294. I think we can close it now as most of these patches are now gone thanks to the work of @reikdas that landed in llvm upstream.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8173#issuecomment-1186212603:74,patch,patches,74,https://root.cern,https://github.com/root-project/root/pull/8173#issuecomment-1186212603,1,['patch'],['patches']
Deployability,"This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724:483,update,updated,483,https://root.cern,https://github.com/root-project/root/pull/13724,1,['update'],['updated']
Deployability,"This PR is probably no longer needed, as doxygen was very quick to fix the bug: https://github.com/doxygen/doxygen/pull/9068. I would suggest to update doxygen and trigger a rebuild to see if it runs well, before closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9649#issuecomment-1019566675:145,update,update,145,https://root.cern,https://github.com/root-project/root/pull/9649#issuecomment-1019566675,1,['update'],['update']
Deployability,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8722:397,update,updated,397,https://root.cern,https://github.com/root-project/root/pull/8722,1,['update'],['updated']
Deployability,This PR is shipping updated minimized version of RenderCore (v14).; It has minor changes in the projected geo shape outlines and minor changes in geo_cms.C demo. Here is the reference to the change in RenderCore: ; https://github.com/UL-FRI-LGM/RenderCore/pull/19,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15514:20,update,updated,20,https://root.cern,https://github.com/root-project/root/pull/15514,1,['update'],['updated']
Deployability,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8412:1238,update,updated,1238,https://root.cern,https://github.com/root-project/root/pull/8412,1,['update'],['updated']
Deployability,This PR is trying to merge the v5-34 patches branch with the master which probably not what you meant :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11680#issuecomment-1309677365:37,patch,patches,37,https://root.cern,https://github.com/root-project/root/pull/11680#issuecomment-1309677365,1,['patch'],['patches']
Deployability,"This PR modifies the TBufferMerger callback (that CMS requested) so that it wraps the merge operation--the callback is passed the function to perform the merge and is responsible for calling it. The motivation for this change is that the merge operation is taking enough CPU time that we need it to be executed in the CMSSW framework's TBB task arena so that we don't overrun our CPU commitment. With this change, we can use a callback like. ```; mergeExec_ = [this](const std::function<void()> &f){; std::promise<void> barrier;; auto fwrap = [&]() { ; auto set_value = [](decltype(barrier)* b) { b->set_value(); };; std::unique_ptr<decltype(barrier), decltype(set_value)> release(&barrier, set_value);; f();; };; taskArena_->enqueue(fwrap);; barrier.get_future().wait();; };; ```. to queue the merge operation to our task arena and wait for it to complete. This also ensures that any IMT operations invoked by the merge operation are also executed in our task arena. Since the callback can still perform any operations it wants after executing the merge operation, this is a superset of the previous callback functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:673,release,release,673,https://root.cern,https://github.com/root-project/root/pull/1706,1,['release'],['release']
Deployability,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:1412,patch,patch,1412,https://root.cern,https://github.com/root-project/root/pull/1769,1,['patch'],['patch']
Deployability,This PR provides some optimisation for Cuda. In particular: . - optimise update weights/gradient of SGD and ADAM/ ; - We avoid now creating temporary matrices in SGD ; - For ADAM it is more efficient defining three new updates functions which will blenched on the GPU. This also avoid creating temporaries . These changes speed-up by almost a factor of 2 the code in GPU for dense layer when using ADAM and restore the previous performances for SGD. - optimise also computation of convolutional weight gradients. ; In this case we can just simply use the ScaleAdd function. A speed up of ~ 20% is obtained . This PR also adds a commit that remove the computation of correlation matrix in case of large number of variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2502:73,update,update,73,https://root.cern,https://github.com/root-project/root/pull/2502,2,['update'],"['update', 'updates']"
Deployability,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15084:1182,update,updated,1182,https://root.cern,https://github.com/root-project/root/pull/15084,1,['update'],['updated']
Deployability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:732,release,release,732,https://root.cern,https://github.com/root-project/root/pull/6841,1,['release'],['release']
Deployability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:927,update,updated,927,https://root.cern,https://github.com/root-project/root/pull/16090,1,['update'],['updated']
Deployability,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569:618,update,updated,618,https://root.cern,https://github.com/root-project/root/pull/8569,1,['update'],['updated']
Deployability,"This PR removes some remnants of the previous PR, preventing proper installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3095:68,install,installation,68,https://root.cern,https://github.com/root-project/root/pull/3095,1,['install'],['installation']
Deployability,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:169,update,updated,169,https://root.cern,https://github.com/root-project/root/pull/12565,1,['update'],['updated']
Deployability,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:34,Integrat,Integrates,34,https://root.cern,https://github.com/root-project/root/pull/4911,1,['Integrat'],['Integrates']
Deployability,"This PR roots our llvm vendor drop to the LLVM's 5.0 release. Updating llvm will enable C++17 support in ROOT. There are many advantages of doing that such as relying on a release which is very thoroughly tested. After many years, this update removes practically all cling/ROOT-specific patches from llvm which means that technically we can link against vanilla llvm. Note that we still have (a reduced) set of patches in clang. Note this comes with a few issues (thus the do-not-merge label):; * We have two failures in cling's testsuite (visible when building with -Dclingtest=On) -- they seem to be coming from a stack-corruption when the JIT is supposed to throw an exception;; * A few roottest failures which I want to make sure it is the same set as on my own system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:53,release,release,53,https://root.cern,https://github.com/root-project/root/pull/1218,5,"['patch', 'release', 'update']","['patches', 'release', 'update']"
Deployability,"This PR serves the same purpose as this one: #4695 ; However, I think that older PR was never merged, because it was opened before the hotfix #4698 and therefore was not able to compile. In this PR I simply format all code that has been added for the TGraphMultiErrors class using clang-format and the format settings file provided by ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4777:135,hotfix,hotfix,135,https://root.cern,https://github.com/root-project/root/pull/4777,1,['hotfix'],['hotfix']
Deployability,"This PR should be merged after `TSlotStack` is upgraded to not use static thread-local storage,; and one test case is expected to fail until this happens.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2238:47,upgrade,upgraded,47,https://root.cern,https://github.com/root-project/root/pull/2238,1,['upgrade'],['upgraded']
Deployability,"This PR solves ROOT-8873 ""Reinforce the mechanism to detect non existing branches"". All transformations and actions now throw an exception right when called if at least one of the columns they will work on is not present in the data nor is a custom column (created via `Define`). `test_missingBranches` is expected to start failing -- a PR in roottest will update the reference file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/775:357,update,update,357,https://root.cern,https://github.com/root-project/root/pull/775,1,['update'],['update']
Deployability,"This PR supersedes #2899. We need to make sure the ROOT C++ kernel of Jupyter runs with the same Python version that ROOT was built with. Since running the kernel with a particular Python installation cannot be enforced by the user by setting the `$PATH` variable (Jupyter ignores that variable and picks Python from the system), we need to enforce it from the kernel file. We can't define a full path to the right Python binary in the kernel.json file because that path could be different in the machine where ROOT is built and the machine where the C++ kernel runs.; The best we can do is include the major and minor version in the kernel.json file, so that we make sure the kernel is not executed with an incompatible version, which would likely lead to a crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2906:188,install,installation,188,https://root.cern,https://github.com/root-project/root/pull/2906,1,['install'],['installation']
Deployability,"This PR supersedes #3424. The reference counting is greatly improved and the data is kept alive until the datasource dies, which gets delete at the end of the lifetime of the computational graph. See here for the use-case:. ```python; import ROOT; import numpy. data = {; ""x"": numpy.array([1, 2, 3]),; ""y"": numpy.array([4, 5, 6]); }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df = df.Define(""z"", ""x + y""). print(df.Mean(""z"").GetValue()) # Returns 7.0; ```. The feature plays well along with the `RDataFrame.AsNumpy` feature:. ```python; import ROOT. df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""(int)rdfentry_""); data = df.AsNumpy(). df2 = ROOT.ROOT.RDF.MakeNumpyDataFrame(data); df2.Snapshot(""tree"", ""file.root""); ```. TODO:. - [x] Figure out how to install the header needed for the `NumyDataSource`; - [x] How to call the header (current name `MakeNumpyDataFrame.hxx`)? We should put it in a scope.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3669:752,install,install,752,https://root.cern,https://github.com/root-project/root/pull/3669,1,['install'],['install']
Deployability,"This PR supersedes https://github.com/root-project/root/pull/15476 since there were changes to be made also in roottest, available at https://github.com/root-project/roottest/pull/1127. From the original PR:. # This Pull request:; Update the distributed RDataFrame to use the HeadNode _localrdf to keep track of transform operations, and add the ability to call GetColumnNames on a NodeProxy object. . ## Changes or fixes:; - Add GetColumnNames method to NodeProxy which calls the HeadNode GetColumnNames method; - Propagate transform operations to the HeadNode _localrdf, mainly to keep track of user-defined columns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15672:231,Update,Update,231,https://root.cern,https://github.com/root-project/root/pull/15672,1,['Update'],['Update']
Deployability,This PR tries to make progress with upstreaming our lazy template specialization patch lives only in our llvm forks ( https://reviews.llvm.org/D41416) in favor of re-implementing it in a way that we can upstream it (llvm/llvm-project#76774),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495:81,patch,patch,81,https://root.cern,https://github.com/root-project/root/pull/14495,1,['patch'],['patch']
Deployability,"This PR updates Cppyy and adapts experimental PyROOT to the changes. It also re-enables a few tests. The following PRs merged and issues fixed in Cppyy are incorporated by this update:. https://bitbucket.org/wlav/cpycppyy/pull-requests/24/fixes-for-memoryregulator-recursiveremove; https://bitbucket.org/wlav/cpycppyy/pull-requests/25/proposal-for-setting-hooks-for-custom. https://bitbucket.org/wlav/cppyy/issues/113/assignment-to-c-global-from-python-does; https://bitbucket.org/wlav/cppyy/issues/115/instantiation-for-c-float-picked-when; https://bitbucket.org/wlav/cppyy/issues/121/dir-does-not-return-auto-instantiated; https://bitbucket.org/wlav/cppyy/issues/131/problem-constructing-object-of-templated; https://bitbucket.org/wlav/cppyy/issues/138/crash-when-deleting-an-object-of-a-python; https://bitbucket.org/wlav/cppyy/issues/139/wrong-overload-picked-when-passing-object. There is still one more pending issue, introduced recently in Cppyy, which affects a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; Those tests have been disabled temporarily. Once a bug fix is available it will be ported right away to experimental PyROOT's Cppyy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/4264,2,['update'],"['update', 'updates']"
Deployability,This PR updates Cppyy to the following versions:; - cppyy to 1.4.2; - cppyy-backend to clingwrapper-1.9.0; - CPyCppyy to 1.8.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4051:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/4051,1,['update'],['updates']
Deployability,"This PR updates the Cppyy copy of experimental PyROOT, in particular with:; - cppyy v1.4.1; - cppyy_backend v1.7.0 (clingwrapper); - CPyCppyy v1.5.1. This update brings in, among other things:; * A few fixes in Cppyy for Windows.; * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/; * A fix for `addressof` in Cppyy.; * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit.; * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/3322,3,['update'],"['update', 'updates']"
Deployability,"This PR updates the Cppyy packages to the following versions:; - cppyy 1.4.7; - cppyy-backend 1.8.1 (clingwrapper); - CPyCppyy 1.7.1. This update brings several fixes/features, including:; - @bellenot 's fixes for Windows; - Fixes for overload resolution when implicit conversion can be applied; - Improved template support; - Fixes to remove compiler warnings; - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3664:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/3664,4,"['patch', 'update']","['patch', 'update', 'updated', 'updates']"
Deployability,This PR updates the documentation for TMVA SOFIE.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13095:8,update,updates,8,https://root.cern,https://github.com/root-project/root/pull/13095,1,['update'],['updates']
Deployability,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8770:451,update,updated,451,https://root.cern,https://github.com/root-project/root/pull/8770,1,['update'],['updated']
Deployability,"This Pull request adds Google Test fixture functionality in the RNTuple DAOS test suite, enabling automatic storage cleanup when running unit tests with real DAOS clusters. ## Changes or fixes:. - Introduces a fixture class for the test suite and registers all five existing tests under it through the `TEST_F` macro. ; - Consolidates shared functionality in the fixture definition. Namely, pool and container label data and expected diagnostics messages from `ROOT::TestSupport`. ; - Uses the `TearDownTestSuite()` call to automatically destroy DAOS containers created for the unit tests when all of them are completed.; - Replaces some duplicated string literals that specify ntuples and models for variables.; - Introduces preproc definition `R__DAOS_TEST_MOCK` to CMake to bypass container destruction system call if using the mock library as underlying storage. ## Pending:. - One error message is not currently suppressed, as it is not emitted by ROOT's exception diagnostics: `client ERR src/client/api/container.c:148 daos_cont_create_with_label() daos_cont_create label=test-multiple-ntuples failed, DER_EXIST(-1004): 'Entity already exists'`. This is the (normal) output of `RDaosContainer` attempting to create a container by default, and ignoring the error if it already exists in the DAOS pool. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12106:1359,update,updated,1359,https://root.cern,https://github.com/root-project/root/pull/12106,1,['update'],['updated']
Deployability,"This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:; ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8540:474,update,updated,474,https://root.cern,https://github.com/root-project/root/pull/8540,1,['update'],['updated']
Deployability,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10944:1669,update,updated,1669,https://root.cern,https://github.com/root-project/root/pull/10944,1,['update'],['updated']
Deployability,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10889:706,update,updated,706,https://root.cern,https://github.com/root-project/root/pull/10889,1,['update'],['updated']
Deployability,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873:200,configurat,configuration,200,https://root.cern,https://github.com/root-project/root/pull/8873,2,['configurat'],['configuration']
Deployability,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:1161,update,updated,1161,https://root.cern,https://github.com/root-project/root/pull/12109,1,['update'],['updated']
Deployability,This Pull request makes the conversion of stl vectors to RVec optional when using Snapshot() . ## Changes or fixes:; Propagating the relevant flag to the Snapshot() call. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15503,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15895:222,update,updated,222,https://root.cern,https://github.com/root-project/root/pull/15895,1,['update'],['updated']
Deployability,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:1066,update,update,1066,https://root.cern,https://github.com/root-project/root/pull/10795,2,['update'],"['update', 'updated']"
Deployability,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10982:1244,update,updated,1244,https://root.cern,https://github.com/root-project/root/pull/10982,1,['update'],['updated']
Deployability,This Pull request updates the ROOT::Math::Minimizer reference documentation and adds the list of all Minimizer plugins that are available in ROOT. . This PR fixes the JIRA issue [3452](https://sft.its.cern.ch/jira/browse/ROOT-3452),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12819:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/12819,1,['update'],['updates']
Deployability,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/8963,2,['update'],"['updated', 'updates']"
Deployability,This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:133,update,updated,133,https://root.cern,https://github.com/root-project/root/pull/10435,1,['update'],['updated']
Deployability,This Pull request: updates `CladDerivator.h` to follow Clad custom derivative where all functions are based on pushforwards and pullbacks. ## Changes: [CladDerivator.h](https://github.com/root-project/root/blob/master/math/mathcore/inc/Math/CladDerivator.h); ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary): not required. This PR fixes # https://github.com/vgvassilev/clad/issues/510,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/12021,2,['update'],"['updated', 'updates']"
Deployability,This addresses the rest of the comments of root-project/root#4717. Patch by Alexander Penev (@alexander-penev) and me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5637:67,Patch,Patch,67,https://root.cern,https://github.com/root-project/root/pull/5637,1,['Patch'],['Patch']
Deployability,"This adds a new standalone Minuit2 build system built in CMake to replace the old one that no longer works. The following features are part of the design:. * Full featured CMake build, based on https://github.com/GooFit/Minuit2; - Only requires CMake 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:328,install,installing,328,https://root.cern,https://github.com/root-project/root/pull/1680,2,"['install', 'integrat']","['installing', 'integrated']"
Deployability,"This adds back commit ff557b3, but this time we release the merge lock before calling a registered callback. That way, if the callback itself triggers another Merge(), it does not deadlock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1751:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/1751,1,['release'],['release']
Deployability,"This adds gdb pretty printers for a few objects such as TString and TNamed, as well; as a couple of RooFit objects. gdb can automatically load them if `add-auto-load-safe-path`; is set to ROOT's lib directory.; The printers should only be installed during debug builds. A couple of things are still unclear:; - `file(COPY ...` is used to copy the printers into the build directory. This will only run when cmake is run, but not during make. The pretty-printers will therefore not get updated. Is that a problem? A solution should be to create targets that are being kept up-to-date by make.; - Is it correct to use `install(FILES ...)` to install?; - I added a roottest that starts root.exe in gdb, and tries to load the printers. This may fail; o With old gdbs; o With release builds. gdb should fail to load the printers because they are not installed. Probably, the test should be disabled during release builds. Let's see if it fails as expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633:239,install,installed,239,https://root.cern,https://github.com/root-project/root/pull/3633,7,"['install', 'release', 'update']","['install', 'installed', 'release', 'updated']"
Deployability,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12453:999,release,releases,999,https://root.cern,https://github.com/root-project/root/issues/12453,1,['release'],['releases']
Deployability,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8576:23,release,releases,23,https://root.cern,https://github.com/root-project/root/pull/8576,2,['release'],"['release', 'releases']"
Deployability,This allows to interactively adjust histogram parameters before; performing a projection to a lower dimensional representation. This patch implements ROOT-4515. A unit test is being added in root-mirror/roottest/pull/6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212:133,patch,patch,133,https://root.cern,https://github.com/root-project/root/pull/212,1,['patch'],['patch']
Deployability,This allows us to create daily releases and binaries for arbitrary tags (not just `x.yy.zz` as currently allowed by `build/version_number`),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3104:31,release,releases,31,https://root.cern,https://github.com/root-project/root/pull/3104,1,['release'],['releases']
Deployability,This allows us to use a single modulemap file across multiple libstdc++ versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our gcc 4.8 builds where codecvt and cuchar header files do not exist.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4394:144,patch,patch,144,https://root.cern,https://github.com/root-project/root/pull/4394,1,['patch'],['patch']
Deployability,"This allows us to use a single modulemap file across multiple libstdc++; versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our; gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7303:145,patch,patch,145,https://root.cern,https://github.com/root-project/root/pull/7303,1,['patch'],['patch']
Deployability,"This almost broke me... I've been trying to find for days why ROOT would not build correctly in one particular (fairly complicated) setup for me. I just couldn't figure out why I wouldn't get the files meant for the `etc/` directory in my installation. Turns out that it was because in this weird setup I put the ROOT source code into a directory inside of another CMake project, into a directory that had `/CMakeFiles/` as part of its path. And would you know, macOS still comes with a case insensitive file system, so this exclusion rule was triggering for the full contents of the `etc/` directory in this setup. After realising this, I modified my project's setup to put the ROOT source code into a safer location. But this update should still help people avoid a similar situation later on... P.S. I checked in a simple standalone example that this formalism should do the right thing. (Took me some tries to find ""just the right"" incantation.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1625:239,install,installation,239,https://root.cern,https://github.com/root-project/root/pull/1625,2,"['install', 'update']","['installation', 'update']"
Deployability,This also affects ROOT 6.30 right? So it's not related to the recent PyROOT developments like the cppyy upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16178#issuecomment-2271643579:104,upgrade,upgrade,104,https://root.cern,https://github.com/root-project/root/issues/16178#issuecomment-2271643579,1,['upgrade'],['upgrade']
Deployability,"This also broke configuration without Python, fix in https://github.com/root-project/root/pull/13292",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12485#issuecomment-1643754616:16,configurat,configuration,16,https://root.cern,https://github.com/root-project/root/pull/12485#issuecomment-1643754616,1,['configurat'],['configuration']
Deployability,"This avoids the following warning when building `rootbench` (gcc 13.2.1):. ```txt; In file included from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RInterface.hxx:15,; from /home/rembserj/spaces/master/root/src/build/include/ROOT/RDataFrame.hxx:21,; from /home/rembserj/spaces/master/root/src/root/rootbench/root/tree/dataframe/RDataFrameBenchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14044:530,Update,UpdateCArraysPtrs,530,https://root.cern,https://github.com/root-project/root/pull/14044,1,['Update'],['UpdateCArraysPtrs']
Deployability,"This behaviour is expected since TGeoTessellated does NOT provide navigation functionality on its own, if this is called it just behaves as its bounding box. There is the possibility to convert the geometry in memory to VecGeom as described in this [post](https://root-forum.cern.ch/t/tessellated-volume-behave-like-box-after-transporting-with-geant-3-and-4-after-converting-cad-to-root-geometry/57083) , this requires compiling ROOT with VecGeom support. Summarizing:. - install VecCore with SIMD support:; ```; DIR=`pwd` && git clone https://github.com/root-project/veccore.git && mkdir veccore/build && cd veccore/build && cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_VC=ON -DCUDA=ON -DCMAKE_INSTALL_PREFIX=$DIR/veccore_install && make -j install && cd $DIR; ```; - install VecGeom:; ```; DIR=`pwd` && git clone https://gitlab.cern.ch/VecGeom/VecGeom.git && mkdir VecGeom/build && cd VecGeom/build && cmake .. -DVECGEOM_BACKEND=vc -DVECGEOM_VECTOR=native -DCMAKE_INSTALL_PREFIX=$DIR/VecGeom_install && make -j install && cd $DIR; ```; - configure ROOT to use VecGeom (use the ROOT master which contains some converter and persistency fixes related to this):; ```; cmake $ROOT_SOURCE -Dvecgeom=ON -DVecGeom_DIR=<use_above_install_directory>/VecGeom_install; ```; - Add the following code AFTER `gGeoManager->CloseGeometry()`:; ```; auto converter = TVirtualGeoConverter::Instance(gGeoManager);; if (!converter) {; printf(""It looks like your ROOT version is missing VecGeom support\n"");; } else {; converter->ConvertGeometry();; }; ```; - at this point all ROOT shapes will be converted to VecGeom ones, including the tessellated, and the navigation will be dispatched to those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13039#issuecomment-1911655704:472,install,install,472,https://root.cern,https://github.com/root-project/root/issues/13039#issuecomment-1911655704,5,"['Release', 'install']","['Release', 'install']"
Deployability,"This bug report:; ![obraz_2021-01-05_030717](https://user-images.githubusercontent.com/483575/103598565-36ee1180-4f03-11eb-891b-2a66e7bb2062.png). Reference from tutorial: https://root.cern.ch/doc/master/alice__vsd_8C.html; ![image](https://user-images.githubusercontent.com/483575/103598652-6e5cbe00-4f03-11eb-9716-f77d792b80e9.png). ### Describe the bug; By running one of the ROOT tutorials:. $ root alice_vsd.C. I do not see any button to change events (see the image above). Apparently, from the log:. > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoBack.gif> (null); > Warning in <TASImage::GetMask>: No image; > gif2ASImage():2300:</usr/lib/root/6.22/icons/GoForward.gif> (null); > Warning in <TASImage::GetMask>: No image. however:; ```; $ ls -all /usr/lib/root/6.22/icons/GoBack.gif /usr/lib/root/6.22/icons/GoForward.gif; -rw-r--r-- 1 root root 1177 11-27 16:00 /usr/lib/root/6.22/icons/GoBack.gif; -rw-r--r-- 1 root root 1166 11-27 16:00 /usr/lib/root/6.22/icons/GoForward.gif; ```. ### Expected behavior; I expect to see buttons with figures. ### To Reproduce; $ root alice_vsd.C. from the eve tutorials. ### Setup. 1. ROOT version: 6.22.06; 2. Operating system: Linux Gentoo; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: compiled from sources via Gentoo package manager/portage, uses external libafterimage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985:1229,install,install,1229,https://root.cern,https://github.com/root-project/root/issues/6985,1,['install'],['install']
Deployability,"This can be fixed working on the commandline arguments. Presenly the `-moduleMapFile...` flag passed to genreflex is translated to `-m oduleMapFile...` to rootcling, which is the bug in the current master/6.30-patches. Assigning to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9448#issuecomment-1925347564:210,patch,patches,210,https://root.cern,https://github.com/root-project/root/issues/9448#issuecomment-1925347564,1,['patch'],['patches']
Deployability,"This causes a flood of ""NON_XML_CHAR"" etc output in Jenkins, cluttering the output and making the actual failure virtually invisible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12908:229,update,updated,229,https://root.cern,https://github.com/root-project/root/pull/12908,1,['update'],['updated']
Deployability,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13901:670,update,updated,670,https://root.cern,https://github.com/root-project/root/pull/13901,1,['update'],['updated']
Deployability,This change (removing TBuffer.h from TDirectory.h) has a very high probably of breaking user code. This is cleaner so unless @Axel-Naumann objects it should go in but we need to call it clearly in (the beginning of) the release notes (the other header moves should probably be called there too).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597126662:220,release,release,220,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597126662,2,['release'],['release']
Deployability,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876:671,update,updated,671,https://root.cern,https://github.com/root-project/root/pull/13876,1,['update'],['updated']
Deployability,"This change is done in order to avoid that the pythonizations modules; depend on methods defined in TPython. This commit can be descarded when we will update to CPyCppyy-1.9.7,; since TPython::CPPInstance_FromVoidPtr will become; CPyCppyy::CPPInstance_FromVoidPtr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4643:151,update,update,151,https://root.cern,https://github.com/root-project/root/pull/4643,1,['update'],['update']
Deployability,"This change is just for ROOT-5998, but I think that the build system for the Python stuff in `bindings/pyroot` needs a more thorough rework to fix the problem that it doesn't update if you update the source directory (reported to me by Massimiliano). The problem is with using `file(COPY ...)`, which has no notion it needs to be rerun if the file to be copied is newer. We need a custom target or (the better choice) to write a setup.py or equivalent Python native build, then use CMake to just call `python setup.py` or equivalent. This would make it easy to install ROOT with several Python versions since you'd just have to call the installation procedure with each Python interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-494527469:175,update,update,175,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-494527469,4,"['install', 'update']","['install', 'installation', 'update']"
Deployability,"This change is redesign of REveDataCollection to visualize heavy events using DigitSets or REveCaloData elements.; This change also makes online tooltips in calorimeters possible.; Note: In macro collection_proxies.C is an example of REveDigitSet using REveDataCollection. The demo has calorimeters included, but are not yet integrated in collections, e.g. individual towers can't be queried in table view.; ![caloyellow](https://user-images.githubusercontent.com/2516492/96306020-b844a080-0fb3-11eb-953f-0de383b61517.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6656:325,integrat,integrated,325,https://root.cern,https://github.com/root-project/root/pull/6656,1,['integrat'],['integrated']
Deployability,"This change reflects the nature of vecops, which have nothing to do with treeplayer in principle. In addition, this refactoring paves the way for the future evolution of vecops, for example in the context of an integration with VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1827:211,integrat,integration,211,https://root.cern,https://github.com/root-project/root/pull/1827,1,['integrat'],['integration']
Deployability,"This code is outdated and needs to be updated. But we anyway don't use or; test this code in any way, so let's send it to the git history were dead; code belongs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1461:38,update,updated,38,https://root.cern,https://github.com/root-project/root/pull/1461,1,['update'],['updated']
Deployability,"This code; ```; #include ""TROOT.h""; #include ""TInterpreter.h""; #include <thread>; void clinglock() {; ROOT::EnableThreadSafety();; auto w = [&](){gInterpreter->ProcessLine(""gInterpreterMutex->Lock();gInterpreterMutex->UnLock();"");};; std::thread t(w);; t.join();; }; ```; works both before and after my patch, both compiled and interpreted, both as a parameter to root.exe and as "".x"". I.e. I still don't know what I'm fixing :-(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/892#issuecomment-325180681:303,patch,patch,303,https://root.cern,https://github.com/root-project/root/pull/892#issuecomment-325180681,1,['patch'],['patch']
Deployability,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:164,configurat,configurations,164,https://root.cern,https://github.com/root-project/root/pull/13926,2,['configurat'],['configurations']
Deployability,"This commit removes some functions from the RooFit data classes:. * `RooAbsData::valid()` (virtual method that was overridden in; RooDataHist but not RooDataSet). * `RooDataHist::valid(std::size_t i)` and `RooDataHist::valid()`. * `RooDataHist::cacheValidEntries()`. The `cacheValidEntries` method was originally intended to be used in; `RooAbsOptTestStatistic` to mask histogram entries out of the variable; range in case of a subrange fit. The reasons why `cacheValidEntries` and; the related `valid()` methods should be removed are:. 1. It is redundant. In a subrange fit, the `RooAbsOptTestStatistic` is; creating a clone of the dataset with the subrange only using; `RooAbsData::reduce()`. So all entries are valid by definition. 2. RooDataHist and RooDataSet have inconistent implementations. For; the RooDataHist, `valid()` tells you ""if bin `i` is considered; valid within the current range definitions of all observables""; (according to the documentation). For the RooDataSet, it always; returns `true`. This inconsistency leaves plenty of room for error. 3. The masking of out-of-range entries unnessecarily increases the; `mutable` state of the RooDataHist, which can cause trouble if one; updates the observable range but then forgets to call; `cacheValidEntries()`. 4. Even the documentation said that `RooDataHist::cacheValidEntries()`; was a ""shortcut function only for RooAbsOptTestStatistic"". Why keep; it if `RooAbsOptTestStatistic` doesn't even use it in a meaningful; way anymore?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9168:1201,update,updates,1201,https://root.cern,https://github.com/root-project/root/pull/9168,1,['update'],['updates']
Deployability,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10827:154,patch,patch,154,https://root.cern,https://github.com/root-project/root/pull/10827,1,['patch'],['patch']
Deployability,"This ctor makes the following buggy code compile, but we would prefer it to rather not compile:. ```cpp; TList mylist = new TList();; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) - added to deprecation list",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451:190,update,updated,190,https://root.cern,https://github.com/root-project/root/pull/15451,1,['update'],['updated']
Deployability,"This definitely exists since the beginning of time, and I completely understand the situation with the release. In fact, the same thing happened with 6.26 and then 6.28. Just allow me to say that just because it's an old bug it does not make it less evil :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7713#issuecomment-1783069033:103,release,release,103,https://root.cern,https://github.com/root-project/root/issues/7713#issuecomment-1783069033,1,['release'],['release']
Deployability,"This does not match what is in `requirements.txt` in the `master` branch; in particular the built Linux container images don't have `tensorflow` and `torch` installed. For that reason, all v6.28 builds are currently red (FYI @martamaja10)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15236#issuecomment-2058940914:157,install,installed,157,https://root.cern,https://github.com/root-project/root/pull/15236#issuecomment-2058940914,1,['install'],['installed']
Deployability,This enables ROOT to run without requiring to source thisroot.sh and also run from installed public locations (via gnuinstall). Patch by Oksana Shadura and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4519:83,install,installed,83,https://root.cern,https://github.com/root-project/root/pull/4519,2,"['Patch', 'install']","['Patch', 'installed']"
Deployability,"This ensures that each thread-local TChain knows which tree contains; which global entry number without having to open all intermediate; files to check how many entries they contain, resulting in much; less contention in TTreeProcessorMT when multiple threads are loading; the right file to process. An artificial example running on 342 files of about 2MB each, with 8 cores, release build of ROOT, has the following timings:; * current master, 8 cores: ~10s; * with this fix, 8 cores: ~3.5s; * no imt (current master and with the fix): ~1s. To merge after #2115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116:376,release,release,376,https://root.cern,https://github.com/root-project/root/pull/2116,1,['release'],['release']
Deployability,"This extends ""98ee7a19d0 [cling] Fix clang::CodeGen EH assert on MacOS:"".; Just as for BeginEH, EndEH might not see the complete picture of an already; evaluated EST from a different Decl in the redecl chain. Teach it to look; at the most recent. This assert hits when:; - a deserialized decl with unevaluated EST is emitted, but a later redecl has the EST evaluated;; - during the emission, CompleteRedeclChain() is not triggered, and the emitted decl does not get; an updated EST; In EmitEndEHSpec, the decl thus still has EST unevaluated, despite EmitBeginEHSpec having looked; at an evaluated EST from the most recent decl. This fixes e.g. ./tree/dataframe/test/dataframe_ranges in ROOT on MacOS 10.15 with C++17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6139:470,update,updated,470,https://root.cern,https://github.com/root-project/root/pull/6139,1,['update'],['updated']
Deployability,"This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12956:530,update,updated,530,https://root.cern,https://github.com/root-project/root/pull/12956,1,['update'],['updated']
Deployability,"This feature, originally added in commit 22b1606f, was reverted to make the LLVM upgrade to version 13 easier. This commit adds back all functionality as it was just before the LLVM upgrade. Edit: Unfortunately, still doesn't work with embedded debugging info:; ```; epsftws build $ env CLING_DEBUG=1 EXTRA_CLING_ARGS='-gdwarf-5 -gembed-source' gdb -- bin/root.exe; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:81,upgrade,upgrade,81,https://root.cern,https://github.com/root-project/root/pull/11882,4,"['configurat', 'upgrade']","['configuration', 'upgrade']"
Deployability,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5925:32,patch,patch,32,https://root.cern,https://github.com/root-project/root/pull/5925,2,['patch'],"['patch', 'patches']"
Deployability,This fixed ROOT-10630 for 6.20 patches and is a backport of #4909,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5262:31,patch,patches,31,https://root.cern,https://github.com/root-project/root/pull/5262,1,['patch'],['patches']
Deployability,"This fixes #11907. Inadvertently a previous commit (79a669b) disabled the ability to cleanup the thread local gDirectory in other; threads when the TFile they pointed to is deleted. Also fix a set of rare race conditions:. Fix race condition between RegisterContext and gDirectory cleanup. Description of the race conditions:. (1) thread one create TFile, gDirectory now points to that file.; (2) thread two delete TFile, the destructor calls CleanTargets which has 4 distinct phase; (a) take the TFile spin lock and update all the TContext that points to the file; (b) still hold the spin lock, clean the other thread's directory.; (c) deal with the TContext that were being destructed at the same time; (d) update the local gDirectory. If between (2)(a) and (2)(b), thread (1) starts the creation of a TContext, and; is held at the start of RegisterContext after thread 2 release the spin lock,; thread 1 might awaken only after the TFile object has been deleted and thus; RegisterContext would access delete memory. If during the destruction of the TFile by thread 2, thread (1) starts the; creation of a TContext, but is suspended right before the start of RegisterContext,; when it comes back it will use deleted memory to try to acquire the spin lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908:517,update,update,517,https://root.cern,https://github.com/root-project/root/pull/11908,12,"['release', 'update']","['release', 'update']"
Deployability,This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12499:188,upgrade,upgraded,188,https://root.cern,https://github.com/root-project/root/pull/12499,1,['upgrade'],['upgraded']
Deployability,"This fixes #14372. During the upgrade to LLVM16, the check for validity of the existing `FileEntry` was removed:. ```; - if (UFE.isValid() &&; - llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE.ModTime) {; + if (llvm::sys::toTimeT(Status.getLastModificationTime()) == UFE->ModTime) {; ```. In praticed this resulted in the usage of the zero-initialized `FileEntry` for files with mtime equal zero. The check for the mod time is a ROOT specific patch introduced by commit 8d492b6b9ca359294d018995d097736f762866c8 we the commit log:. Make sure the inode did not get updated since we read it. During the upgrade to LLVM svn revision 214630, the code was sub-optimally merged with the new related code:. ```; + if (UFE.isValid()) { // Already have an entry with this inode, return it.; +; + // FIXME: this hack ensures that if we look up a file by a virtual path in; + // the VFS that the getDir() will have the virtual path, even if we found; + // the file by a 'real' path first. This is required in order to find a; + // module's structure when its headers/module map are mapped in the VFS.; + // We should remove this as soon as we can properly support a file having; + // multiple names.; + if (DirInfo != UFE.Dir && Data.IsVFSMapped); + UFE.Dir = DirInfo;; + }; if (UFE.isValid() && Data.ModTime == UFE.ModTime) {; - // Already have an entry with this inode, return it.; - // If the stat process opened the file, close it to avoid a FD leak.; - if (F); - delete F;; -; return &UFE;; }; ```. where the new code (top part) should also have not been executed unless the UFE was actually returned. This also made meger the LLVM code more challenged were one the change was:; ```; - if (UFE.isValid()) { // Already have an entry with this inode, return it.; + if (ReusingEntry) { // Already have an entry with this inode, return it. ```; this lead to the inadvertent removal of `UFE.isValid() conditional` in the patched part (and the forgetting of adding `ReusingEntry conditional`). This pat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14373:30,upgrade,upgrade,30,https://root.cern,https://github.com/root-project/root/pull/14373,4,"['patch', 'update', 'upgrade']","['patch', 'updated', 'upgrade']"
Deployability,"This fixes #14425 (the reproducer is added as test). Note that the patch comes straight from upstream cppyy https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 even though it's a patch in TCling. I open this PR as a draft to start the discussion as to how we can integrate this change, since it's necessary to fix a bug that also affects usage of ROOT classes via PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426:67,patch,patch,67,https://root.cern,https://github.com/root-project/root/pull/14426,3,"['integrat', 'patch']","['integrate', 'patch']"
Deployability,This fixes ROOT-9068 issue.; Tests in roottest have also been updated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1238:62,update,updated,62,https://root.cern,https://github.com/root-project/root/pull/1238,1,['update'],['updated']
Deployability,"This fixes a bug recently introduced by commit bdf7502. Fixes issue https://github.com/root-project/root/issues/8474. Thank you so much @VanyaBelyaev for using ROOT master, which was crucial for me to fix this bug before it made it into any release!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8486:241,release,release,241,https://root.cern,https://github.com/root-project/root/pull/8486,1,['release'],['release']
Deployability,"This fixes a bug visible only in runtime_cxxmodules where the include guards; are ignored. This can happen when we are building a two modules which need; the same definition. In this case the usual include guards will only work if; we call a proper `#include ""something""` and this something should be defined; in a modulemap. There is no better solution for this at the moment. This is a rare case which; will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place; a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me!. This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3990:684,Patch,Patch,684,https://root.cern,https://github.com/root-project/root/pull/3990,1,['Patch'],['Patch']
Deployability,"This fixes a bug when a parameter is ""released"" when it was not ""fixed"" before. Without the fix, the internal consistency of MnUserParameterState is destroyed when a user calls Release() on a parameter that is not fixed, since the call appends a wrong index to fIntParameters. The issue was discovered by an iminuit user and I tracked down the source, see https://github.com/scikit-hep/iminuit/issues/648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8175:38,release,released,38,https://root.cern,https://github.com/root-project/root/pull/8175,2,"['Release', 'release']","['Release', 'released']"
Deployability,This fixes a display issue on TBrowser on the mac (compiled to coca) where items in the list that had checkboxes against them have their text erroneously displayed that the top of the list rather than next to the item. Please can we backport this fix as well into the patch releases. Thanks!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11535:268,patch,patch,268,https://root.cern,https://github.com/root-project/root/pull/11535,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"This fixes a race condition in which a TTreeReader and its; TTreeReaderValues could be deleted concurrently:; Thread #1) a task ends and pushes back processing slot; Thread #2) a task starts and overwrites thread-local TTreeReaderValues; Thread #1) first task deletes TTreeReader. I have not run a stress-test on this PR yet, to check for rare crashes. Will update as soon as I do.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:358,update,update,358,https://root.cern,https://github.com/root-project/root/pull/837,1,['update'],['update']
Deployability,"This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7287:98,update,updates,98,https://root.cern,https://github.com/root-project/root/pull/7287,1,['update'],['updates']
Deployability,"This fixes and cleans up the Travis runner; most notably, things like modern CMake and clang 5.0 now come by default (since last December). In theory, this should build much faster since several minutes per job was being spent waiting for apt-get to work. This moves the scripts in `.travis` to `.ci/*`. * CMake 3.9 is now installed by default on Travis: https://docs.travis-ci.com/user/build-environment-updates/2017-12-12/; * Clang 5.0 (and clang-format, clang-tidy) are now installed on Travis; * Move extensive setup to .ci/*; * Fix usage of yaml keys; * Avoid if statements by using build matrix entries; * Note clearly that one block of code will not run; * Remove comments about interleaved macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:323,install,installed,323,https://root.cern,https://github.com/root-project/root/pull/1775,3,"['install', 'update']","['installed', 'updates']"
Deployability,This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12517:30,install,installing,30,https://root.cern,https://github.com/root-project/root/pull/12517,2,"['install', 'update']","['installing', 'updated']"
Deployability,This fixes https://sft.its.cern.ch/jira/browse/ROOT-8702. The fix is taken from Fedora's patch to their LLVM package:. http://pkgs.fedoraproject.org/cgit/rpms/llvm.git/tree/0001-Fix-R_AARCH64_MOVW_UABS_G3-relocation.patch. This is in turn based on the changes from the upstream change:. https://reviews.llvm.org/D27609,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/430:89,patch,patch,89,https://root.cern,https://github.com/root-project/root/pull/430,2,['patch'],['patch']
Deployability,"This fixes random failures of the `R__USE_IMT` part of the `datasource-root` test on Windows, due to file name corruptions, like for example:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13469:433,INSTALL,INSTALL,433,https://root.cern,https://github.com/root-project/root/pull/13469,1,['INSTALL'],['INSTALL']
Deployability,This fixes that regex characters in the source directory path; cause the CMake configuration to fail with cryptic error messages. This happens because we interpret the source directory as a regex in a; few places in our CMake code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923:79,configurat,configuration,79,https://root.cern,https://github.com/root-project/root/pull/923,1,['configurat'],['configuration']
Deployability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:1090,upgrade,upgrade,1090,https://root.cern,https://github.com/root-project/root/pull/813,1,['upgrade'],['upgrade']
Deployability,This fixes the errors in #3222. Patch by Oksana and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3242:32,Patch,Patch,32,https://root.cern,https://github.com/root-project/root/pull/3242,1,['Patch'],['Patch']
Deployability,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:240,release,release,240,https://root.cern,https://github.com/root-project/root/pull/11153,3,['release'],['release']
Deployability,"This fixes the results of multi-range fits where the shape of the pdf; depends on the normalization set, e.g. with a multidimenstional; `RooProdPdf`. A unit test was implemented to test that the result of such a 2D; multi-range fit is compatible with the fit result over the full range.; It is expected that if the union of the ranges is the full range, the; result will exactly match the full-range fit. This has already been; checked so far in the 1D case. The `stressRooFit` reference file has been updated, because there is; such a 2D multi-range fits in the tests (see also the; rf312_multirangefit tutorial).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150:502,update,updated,502,https://root.cern,https://github.com/root-project/root/pull/9150,1,['update'],['updated']
Deployability,"This fixes warnings such as these:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; ```; # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10145:1248,update,updated,1248,https://root.cern,https://github.com/root-project/root/pull/10145,1,['update'],['updated']
Deployability,"This fixes:; - The installation of `libJupyROOTX_Y`; - The compilation, at installation time, of the Python source files of the various PyROOT packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5363:19,install,installation,19,https://root.cern,https://github.com/root-project/root/pull/5363,2,['install'],['installation']
Deployability,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:648,update,updated,648,https://root.cern,https://github.com/root-project/root/pull/13197,1,['update'],['updated']
Deployability,"This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11790:240,update,updated,240,https://root.cern,https://github.com/root-project/root/pull/11790,1,['update'],['updated']
Deployability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:1554,release,released,1554,https://root.cern,https://github.com/root-project/root/pull/12503,1,['release'],['released']
Deployability,"This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making ; the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3009:59,integrat,integration,59,https://root.cern,https://github.com/root-project/root/pull/3009,1,['integrat'],['integration']
Deployability,This guarantees valid patch files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12892:22,patch,patch,22,https://root.cern,https://github.com/root-project/root/pull/12892,1,['patch'],['patch']
Deployability,This happened when we moved the cxxmodules code before the add_subdirectory; which where responsible for filling the variable that contains the generated; contents. With this patch we wait with writing the variable contents to the; file until the variable actually contains the whole modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/470:175,patch,patch,175,https://root.cern,https://github.com/root-project/root/pull/470,1,['patch'],['patch']
Deployability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:81,integrat,integration,81,https://root.cern,https://github.com/root-project/root/pull/303,2,['integrat'],['integration']
Deployability,"This has been fixed in the meanwhile, e.g. on lxplus for ROOT 6.32.06, the version currently installed there.; ![image](https://github.com/user-attachments/assets/5fb80fa5-faae-4049-8024-e17ba1d263a5)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13016#issuecomment-2441676228:93,install,installed,93,https://root.cern,https://github.com/root-project/root/issues/13016#issuecomment-2441676228,1,['install'],['installed']
Deployability,"This header is directly included by TObject.h and directly including; it from some other header doesn't seem to be supported. As C++ modules; with submodule visibility simulate directl including each module header,; we seem to get some errors according to the comments in this header. This patch removes it from the argument list of the; ROOT_GENERATE_DICTIONARY call which prevents it from getting directly; included in the `Core` C++ module. We can also remove it from the header; blacklist after this change. The normal dictionary won't be affected by this. This header is anyway; not supposed to contain TVersionCheck.h but only TObject.h which will; still provide it in the right way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1459:290,patch,patch,290,https://root.cern,https://github.com/root-project/root/pull/1459,1,['patch'],['patch']
Deployability,"This helps when python modules are not in the default library path, e.g. when installed in the default system location for python modules like /usr/lib64/pythonX.X/site-packages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/569:78,install,installed,78,https://root.cern,https://github.com/root-project/root/pull/569,1,['install'],['installed']
Deployability,"This hotfixes the crashes seen in the recent PR builds. However, having to use `std::move` in pyROOT is quite unpythonic and we; should think about an improved interface for creating RooFit datasets; from RDataFrame in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8768:5,hotfix,hotfixes,5,https://root.cern,https://github.com/root-project/root/pull/8768,1,['hotfix'],['hotfixes']
Deployability,"This implements a proof of concept of a new histogram auto binning mode designed to produced mergeable histograms when run in multi-threaded / multi-process mode. The algorithm chooses powers of 2 to chose the boundaries, ranges and number of bins. The idea is described in the following document: https://docs.google.com/document/d/1TEntRbVnRzZRLio8JhND51FTNqqTAvu0ngnhLGneahg/edit?usp=sharing. A method to adjust the final looking of the histogram is also included in the patch. Two multicore tutorials illustrate the usage: mt303_fillHistosAutobin.C and mt301_fillHistos.C .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1227:474,patch,patch,474,https://root.cern,https://github.com/root-project/root/pull/1227,1,['patch'],['patch']
Deployability,"This includes to patches reported at the root forum for compilation of root 5 using gcc 9 and 10. * gcc 9 patchset: https://root-forum.cern.ch/t/root-5-compilation-with-gcc-9/33981; * gcc 10 patchset: https://root-forum.cern.ch/t/root-5-compilation-with-gcc-10-2/43258/3. I know root 5 is now longer maintained, but if any of the admins could shortly have a glance and think about including these, I would be very thankful.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7089:17,patch,patches,17,https://root.cern,https://github.com/root-project/root/pull/7089,3,['patch'],"['patches', 'patchset']"
Deployability,This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2914:5,integrat,integrates,5,https://root.cern,https://github.com/root-project/root/pull/2914,1,['integrat'],['integrates']
Deployability,"This is CPyCppyy upstream's commit:; https://github.com/wlav/CPyCppyy/commit/64fd89050a66bf8cb119f236cadd365efa07b005. If I backport this commit to root, I still get the same failures in some test during the Python garbage collection as when I use my attempted patch above. Are there other changes from upstream that are relevant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799#issuecomment-1174770897:261,patch,patch,261,https://root.cern,https://github.com/root-project/root/issues/10799#issuecomment-1174770897,1,['patch'],['patch']
Deployability,"This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3044:228,configurat,configuration,228,https://root.cern,https://github.com/root-project/root/pull/3044,2,['configurat'],['configuration']
Deployability,"This is a again the same problem which appeared before, see https://github.com/root-project/root/pull/14716; The conflict between std::regexp and pytorch jit. ; Either we can avoid using in pytorch or we somehow try to live with this issue hoping at some point it will be fixed in pytorch.; We don't see in the new CI because pytorch is not installed in the ubuntu nodes. I will add it before retiring the old CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2051252566:341,install,installed,341,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2051252566,1,['install'],['installed']
Deployability,"This is a backport from llvm revision 278983:; ""PR18417: Increase -ftemplate-depth to the value 1024 recommended; by the C++ standard's Annex B"". Motivation: the current template instantiation depth limit (256) makes; it impossible to move-construct std::tuple's of size equal or greater than 17. Thanks @vgvassilev for pointing me to the right llvm patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/478:350,patch,patch,350,https://root.cern,https://github.com/root-project/root/pull/478,1,['patch'],['patch']
Deployability,This is a backport of #12025 by @hahnjo and fixes the corresponding test failure in v6-28-00-patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12212:93,patch,patches,93,https://root.cern,https://github.com/root-project/root/pull/12212,1,['patch'],['patches']
Deployability,"This is a backport of #2116.; Changes are mostly refactorings that prepare for the last commit, ""Pass number of entries when building friend chains"", which is the actual fix for ROOT-9437. An artificial example running on 342 files of about 2MB each, with 8 cores, BUILD_TYPE=Release, has the following timings:. * current master, 8 cores: ~10s; * with this fix, 8 cores: ~3.5s; * no imt (current master and with the fix): ~1s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2136:276,Release,Release,276,https://root.cern,https://github.com/root-project/root/pull/2136,1,['Release'],['Release']
Deployability,"This is a backport of #7031 to the 6-24-00-patches branch. I cherry-picked two of the three commits.; I left the test suite out, as it finally should go to roottest.git, as far as I understood it. This is basically to get the thing started. cc: @pcanal, @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7794:43,patch,patches,43,https://root.cern,https://github.com/root-project/root/pull/7794,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9683; 2. https://github.com/root-project/root/pull/9734. I would have liked to collect more PRs, but the second one is urgently needed to fix a compiler warning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9749:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9749,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9721; 2. https://github.com/root-project/root/pull/9795; 3. https://github.com/root-project/root/pull/9767; 4. https://github.com/root-project/root/pull/9799",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9800:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9800,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` edit to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9881 (only first commit); 2. https://github.com/root-project/root/pull/9896",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9901:88,patch,patches,88,https://root.cern,https://github.com/root-project/root/pull/9901,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last two weeks to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9478; 2. https://github.com/root-project/root/pull/9504; 3. https://github.com/root-project/root/pull/9458; 4. https://github.com/root-project/root/pull/9553; 5. https://github.com/root-project/root/pull/9447; 6. https://github.com/root-project/root/pull/9552",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9559:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/9559,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/8784; 2. https://github.com/root-project/root/pull/9177; 3. https://github.com/root-project/root/pull/8595; 4. https://github.com/root-project/root/pull/9444",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9614:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/9614,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` in the last week to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9456; 2. https://github.com/root-project/root/pull/9640; 3. https://github.com/root-project/root/pull/9482; 4. https://github.com/root-project/root/pull/9690; 5. https://github.com/root-project/root/pull/9700; 6. https://github.com/root-project/root/pull/9680; 7. https://github.com/root-project/root/pull/9685; 8. https://github.com/root-project/root/pull/9684",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9710:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/9710,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10111; 2. https://github.com/root-project/root/pull/10158; 3. https://github.com/root-project/root/pull/10104; 4. https://github.com/root-project/root/pull/10100; 5. https://github.com/root-project/root/pull/10229; 6. https://github.com/root-project/root/pull/10256; 7. https://github.com/root-project/root/pull/10213; 8. https://github.com/root-project/root/pull/10270; 9. https://github.com/root-project/root/pull/10263; 10. https://github.com/root-project/root/pull/10269",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10252:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10252,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10293",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10376:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10376,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10352; 2. https://github.com/root-project/root/pull/10359; 3. https://github.com/root-project/root/pull/10362",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10367:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10367,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10467; 2. https://github.com/root-project/root/pull/10477; 3. https://github.com/root-project/root/pull/10485; 4. https://github.com/root-project/root/pull/10495; 5. https://github.com/root-project/root/pull/10501; 6. https://github.com/root-project/root/pull/10499",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10513:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10513,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516; 2. https://github.com/root-project/root/pull/10525; 3. https://github.com/root-project/root/pull/10550",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10554:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10554,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956; 2. https://github.com/root-project/root/pull/10590; 3. https://github.com/root-project/root/pull/10612",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10613:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10613,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9984; 2. https://github.com/root-project/root/pull/9981; 3. https://github.com/root-project/root/pull/10053; 4. https://github.com/root-project/root/pull/10051; 5. https://github.com/root-project/root/pull/9986; 6. https://github.com/root-project/root/pull/10070; 7. https://github.com/root-project/root/pull/10093; 8. https://github.com/root-project/root/pull/10082; 9. https://github.com/root-project/root/pull/10105",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10114:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/10114,1,['patch'],['patches']
Deployability,"This is a backport of all the RooFit PRs that were merged to `master` yesterday to `v6-26-00-patches` (if the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9716; 2. https://github.com/root-project/root/pull/9727; 3. https://github.com/root-project/root/pull/9715; 4. https://github.com/root-project/root/pull/9720; 5. https://github.com/root-project/root/pull/9723; 6. https://github.com/root-project/root/pull/9717; 7. https://github.com/root-project/root/pull/9728",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9746:93,patch,patches,93,https://root.cern,https://github.com/root-project/root/pull/9746,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11940; 2. https://github.com/root-project/root/pull/11941; 3. https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; 4. https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; 5. https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11960:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11960,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11969; 2. https://github.com/root-project/root/pull/11962; 3. https://github.com/root-project/root/pull/11970; 4. https://github.com/root-project/root/pull/11966. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11979:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11979,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11984; 2. https://github.com/root-project/root/pull/11986; 3. https://github.com/root-project/root/pull/11841; 4. https://github.com/root-project/root/pull/11985; 5. https://github.com/root-project/root/pull/11988. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11993:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/11993,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11995; 2. https://github.com/root-project/root/pull/11999; 3. https://github.com/root-project/root/pull/12000; 4. https://github.com/root-project/root/pull/12010; 5. https://github.com/root-project/root/pull/12011. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12014:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12014,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12017; 2. https://github.com/root-project/root/pull/12022; Only the commits 1, 2, 5, and 6 that are relevant to fix the problem and testing; 3. https://github.com/root-project/root/pull/12024; 4. https://github.com/root-project/root/pull/12029; 5. https://github.com/root-project/root/pull/12030; 6. https://github.com/root-project/root/pull/12033; 7. https://github.com/root-project/root/pull/12039; 8. https://github.com/root-project/root/pull/12046; 9. https://github.com/root-project/root/pull/12051. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12057:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12057,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12048; 2. https://github.com/root-project/root/pull/12061; 3. https://github.com/root-project/root/pull/12071; Only the first commit that is not a fixup to a recent typo is `master`. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12083:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12083,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12089; 2. https://github.com/root-project/root/pull/12022; Commits 3 and 4 that have not been backported yet, as the next PR in this list depends on that change (everything is backported from that PR now except the last commit); 4. https://github.com/root-project/root/pull/12079; 5. https://github.com/root-project/root/pull/12040. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12092:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12092,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12114; 2. https://github.com/root-project/root/pull/12066; 3. https://github.com/root-project/root/pull/12001. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12115:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12115,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12119; 2. https://github.com/root-project/root/pull/12056; 3. https://github.com/root-project/root/pull/12103. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12120:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12120,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12160; 2. https://github.com/root-project/root/pull/12157; 3. https://github.com/root-project/root/pull/12161; 4. https://github.com/root-project/root/pull/12129. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12169:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12169,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12178; 2. https://github.com/root-project/root/pull/12125; 3. https://github.com/root-project/root/pull/12236; 4. https://github.com/root-project/root/pull/12250; 5. https://github.com/root-project/root/pull/12305; 6. https://github.com/root-project/root/pull/12287. Related to https://github.com/root-project/root/issues/12319.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12321:98,patch,patches,98,https://root.cern,https://github.com/root-project/root/pull/12321,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553; 2. https://github.com/root-project/root/pull/10627",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10667:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10667,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10884; 2. https://github.com/root-project/root/pull/10885; 3. https://github.com/root-project/root/pull/10832; 4. https://github.com/root-project/root/pull/10921; 5. https://github.com/root-project/root/pull/10909",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10986:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10986,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11133:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11133,4,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11401; 2. https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11402:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11402,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; 2. https://github.com/root-project/root/pull/11417; 3. https://github.com/root-project/root/pull/11419; 4. https://github.com/root-project/root/pull/10842",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11427:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11427,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11505:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11505,2,"['patch', 'update']","['patches', 'updates']"
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11507; 2. https://github.com/root-project/root/pull/10811; 3. https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11528:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11528,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9423; 2. https://github.com/root-project/root/pull/10736; 3. https://github.com/root-project/root/pull/10740; 4. https://github.com/root-project/root/pull/10754; 5. https://github.com/root-project/root/pull/10802",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10803:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/10803,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9912; 2. https://github.com/root-project/root/pull/10989; 3. https://github.com/root-project/root/pull/11018; 4. https://github.com/root-project/root/pull/11023",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11057:108,patch,patches,108,https://root.cern,https://github.com/root-project/root/pull/11057,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10873; 2. https://github.com/root-project/root/pull/11455; Only the third commit that fixes a problem with the `RooBinSamplingPdf`, backporting the full multi-range fit implementation is way too dangerous. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11848:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11848,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11566; 2. https://github.com/root-project/root/pull/11584; Only the first commit that is not code modernization. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11748:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11748,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11912; Only the second and third commit about the `RooBinIntegrator`; 2. https://github.com/root-project/root/pull/10574; 3. https://github.com/root-project/root/pull/9542. The final two PRs are backported to resolve the clang warnings that appear in the CI. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11961:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/11961,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12119; 2. https://github.com/root-project/root/pull/12305; Only the first commit that is not code modernization. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12322:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/12322,1,['patch'],['patches']
Deployability,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to master to v6-26-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12696; 2. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/11534.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12709:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/12709,1,['patch'],['patches']
Deployability,"This is a backport of commit 68509691, fixing bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907). Do you guys plan to release a new patch to the v6.12 series?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310:130,release,release,130,https://root.cern,https://github.com/root-project/root/pull/3310,2,"['patch', 'release']","['patch', 'release']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 0. https://github.com/root-project/root/pull/12459; 1. https://github.com/root-project/root/pull/12518; 2. https://github.com/root-project/root/pull/12556; 3. https://github.com/root-project/root/pull/12578; 4. https://github.com/root-project/root/pull/12577; 5. https://github.com/root-project/root/pull/12595; 6. https://github.com/root-project/root/pull/12608; Only the second commit that does not remove deprecated functionality; 7. https://github.com/root-project/root/pull/12594. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12630:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12630,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `aa270ad60b`) are the ones that are not in `v6-28-00-patches` (as of `44db6e0`). ```txt; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12723,2,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12722:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12722,3,"['Update', 'patch']","['Update', 'patches']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/11942; 2. https://github.com/root-project/root/pull/9539; The final commit with the code modernization (others have already been backported in #11960); 3. https://github.com/root-project/root/pull/11963; 4. https://github.com/root-project/root/pull/12015; 5. https://github.com/root-project/root/pull/12022; Only the last one about throwing the exception in `RooAbsArg::redirectServers (the other commits have been backported already in #12057 and #12092); 6. https://github.com/root-project/root/pull/12180; 7. https://github.com/root-project/root/pull/12223; 8. https://github.com/root-project/root/pull/12232; 9. https://github.com/root-project/root/pull/12219; Except for the first and last commit that relate to the RooFit AD work; 10. https://github.com/root-project/root/pull/12304; 11. https://github.com/root-project/root/pull/12442; Only the first two commits that were not already backported; 12. https://github.com/root-project/root/pull/12447. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12590,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12227; 2. https://github.com/root-project/root/pull/12016; Only the commits 1, 2, 5, 6, 8 that don't change the definition of `RooNumber::infinity()`; 3. https://github.com/root-project/root/pull/12328; 4. https://github.com/root-project/root/pull/12330; 5. https://github.com/root-project/root/pull/12207. Related to https://github.com/root-project/root/issues/12319.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12618,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12392; 2. https://github.com/root-project/root/pull/12340; 3. https://github.com/root-project/root/pull/12399; 4. https://github.com/root-project/root/pull/12413; Except for commits 5 and 6 that are unrelated to RooFitHS3; 6. https://github.com/root-project/root/pull/12467; 7. https://github.com/root-project/root/pull/12471; 8. https://github.com/root-project/root/pull/12470; 9. https://github.com/root-project/root/pull/12487; 10. https://github.com/root-project/root/pull/12490; 11. https://github.com/root-project/root/pull/12504. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12620:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12620,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12640; 2. https://github.com/root-project/root/pull/12638; 3. https://github.com/root-project/root/pull/12636; 4. https://github.com/root-project/root/pull/12614; 5. https://github.com/root-project/root/pull/12643; 6. https://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12681,4,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12682; 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12708,3,"['Update', 'patch']","['Update', 'patches']"
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12725; 2. https://github.com/root-project/root/pull/12141. Related to https://github.com/root-project/root/issues/12319.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12733:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12733,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12768; Only the first commit that fixes a compiler warning; 2. https://github.com/root-project/root/pull/12809; 3. https://github.com/root-project/root/pull/12835; 4. https://github.com/root-project/root/pull/12741; 5. https://github.com/root-project/root/pull/12880; 6. https://github.com/root-project/root/pull/12891. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of 21f97bd1ee) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 21f97bd1ee [RF][HF] Fix memory leaks in HistFactory from RooAbsArg::getComponents; 70535a7426 [RF][HS3] Support a few more pdfs in RooFit HS3; d10b28bfbb [RF] Consistent proxy names in RooGamma; b9cfff2e71 [RF][HF] More efficient creation of combined dataset in HistFactory; 8ca8d848ae [RF][HS3] Necessary tweaks to pass tests also with `rapidyaml` backend; 66615833e5 [RF][HS3] Add IO of external constrains from/to ModelConfig; 2607947ee3 [RF][HF] Add missing LinkDefs for systematics classes in HistFactory; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; 1b886c3e77 [RF] Improve Copy Constructor of HypoTestResult; 2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12905,2,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877; 2. https://github.com/root-project/root/pull/12896; 3. https://github.com/root-project/root/pull/12838; 4. https://github.com/root-project/root/pull/12909; 5. https://github.com/root-project/root/pull/12916; 6. https://github.com/root-project/root/pull/12921; 7. https://github.com/root-project/root/pull/12927; 8. https://github.com/root-project/root/pull/12925; 9. https://github.com/root-project/root/pull/12928; 10. https://github.com/root-project/root/pull/12938; 11. https://github.com/root-project/root/pull/12936; 12. https://github.com/root-project/root/pull/12969; 13. https://github.com/root-project/root/pull/12962; 14. https://github.com/root-project/root/pull/12973; 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from publi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/12971,1,['patch'],['patches']
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12961; 2. https://github.com/root-project/root/pull/12934; Excluding the 2nd commit that fixes a problem only present in `master`, and excluding the 4th commit that updates the tutorials; 3. https://github.com/root-project/root/pull/12998; Only the first commit that is not related to AD; 4. https://github.com/root-project/root/pull/12987; 5. https://github.com/root-project/root/pull/13020; 6. https://github.com/root-project/root/pull/13025; 7. https://github.com/root-project/root/pull/13033; 8. https://github.com/root-project/root/pull/12970; 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooSca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13044:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13044,3,"['patch', 'update']","['patches', 'updates']"
Deployability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/13044. After merging this PR, the following RooFit commits in ROOT `master` (as of 6276954184) are the ones that are not in `v6-28-00-patches` (as of `8c19761`). ```txt; 9b93dbb7d2 [RF] Apply clang-tidy `performance-faster-string-find`; 04fbc4efb3 [RF] Don't have RooFitCuda as dependency for RooFitCore; cf653869f7 [RF] Don't bar xroofit behind `root7` anymore; e5a67bc647 [RF] More type safety and better memory management with CUDA interface; bbeb520a1a [RF] Implement `RooPower` and `RooExpPoly` in RooBatchCompute; 529ba82432 [RF] RAII management of CUDA events and streams; cc3ee9200a [RF] Only allow automatic memory management for CUDA device arrays; 77299a2c34 [RF] Reduce public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13295,2,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13111; - https://github.com/root-project/root/pull/14176; - https://github.com/root-project/root/pull/14248; - https://github.com/root-project/root/pull/14249; - https://github.com/root-project/root/pull/14251; - https://github.com/root-project/root/pull/14257; - https://github.com/root-project/root/pull/14253; - https://github.com/root-project/root/pull/14265; * at least the first commit that is not applying to new developments after 6.30; - https://github.com/root-project/root/pull/14266; - https://github.com/root-project/root/pull/14236. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14167,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14252:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14252,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13812; - https://github.com/root-project/root/pull/13784; - https://github.com/root-project/root/pull/13853; - https://github.com/root-project/root/pull/13813. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; *None*,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13870:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13870,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13822; - https://github.com/root-project/root/pull/14058; - https://github.com/root-project/root/pull/14289. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14252,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14407:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14407,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13879; - https://github.com/root-project/root/pull/13881; - https://github.com/root-project/root/pull/13883; - https://github.com/root-project/root/pull/12390; - https://github.com/root-project/root/pull/7539; - https://github.com/root-project/root/pull/13894; - https://github.com/root-project/root/pull/7993; - https://github.com/root-project/root/pull/5361; - https://github.com/root-project/root/pull/7687. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13870,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13891:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13891,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13890; - https://github.com/root-project/root/pull/13896. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13891,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13909:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13909,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13911; - https://github.com/root-project/root/pull/13914; - https://github.com/root-project/root/pull/13109; - https://github.com/root-project/root/pull/13905; - https://github.com/root-project/root/pull/13925; - https://github.com/root-project/root/pull/13912; - https://github.com/root-project/root/pull/13915. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13909,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13930:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13930,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/13918; - https://github.com/root-project/root/pull/13931; - https://github.com/root-project/root/pull/13929. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13930,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13940:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/13940,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021; - https://github.com/root-project/root/pull/14043; - https://github.com/root-project/root/pull/14044; - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - https://github.com/root-project/root/pull/14026; - https://github.com/root-project/root/pull/13863; - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13940,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14047:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14047,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14164; - https://github.com/root-project/root/pull/14185; - https://github.com/root-project/root/pull/14174. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14047,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14167:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14167,1,['patch'],['patches']
Deployability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14759; - https://github.com/root-project/root/pull/14762; - https://github.com/root-project/root/pull/14814. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/14407,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14768:86,patch,patches,86,https://root.cern,https://github.com/root-project/root/pull/14768,1,['patch'],['patches']
Deployability,This is a backport of the release notes updates contained in #7680 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7689:26,release,release,26,https://root.cern,https://github.com/root-project/root/pull/7689,2,"['release', 'update']","['release', 'updates']"
Deployability,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:; ```; [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:; /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’; extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()); ^; In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’; void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"); ^~~~~~~~~~~~~; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’; /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4160#issuecomment-519477877:979,install,install,979,https://root.cern,https://github.com/root-project/root/pull/4160#issuecomment-519477877,1,['install'],['install']
Deployability,This is a change too massive to be introduced into v6.28/00 at this point. We will backport it to a patch release of v6-28-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1400682950:100,patch,patch,100,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1400682950,3,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This is a cherry pick of the `loader.py` in cppyy-backend version clingwrapper-1.7.2, which has the new treatment of `CLING_STANDARD_PCH` and its setting to `'none'` to prevent the PCH check by Cppyy. It should fix the new test failures that appeared last night in the experimental PyROOT builds. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/76/. A complete update will come for the three packages of Cppyy once the functionality of this PR:; https://github.com/root-project/root/pull/3579; is merged into `TCling`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:363,update,update,363,https://root.cern,https://github.com/root-project/root/pull/3581,1,['update'],['update']
Deployability,"This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:; - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups; - Cleanups, such as removing unnecessary overrides, dead files; - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5213:55,update,update,55,https://root.cern,https://github.com/root-project/root/pull/5213,1,['update'],['update']
Deployability,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11783:189,integrat,integration,189,https://root.cern,https://github.com/root-project/root/pull/11783,4,['integrat'],"['integrated', 'integration']"
Deployability,"This is a duplicate of https://github.com/root-project/root/issues/14163, and it was fixed yesterday by https://github.com/root-project/root/pull/14178 (you'll need to wait for 6.30.04 or .06 release I guess)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195#issuecomment-1846115457:192,release,release,192,https://root.cern,https://github.com/root-project/root/issues/14195#issuecomment-1846115457,1,['release'],['release']
Deployability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56528/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56529/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/115:43,update,updated,43,https://root.cern,https://github.com/root-project/root/pull/115,2,['update'],['updated']
Deployability,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56546/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56547/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116:43,update,updated,43,https://root.cern,https://github.com/root-project/root/pull/116,2,['update'],['updated']
Deployability,"This is a follow-up on 8c9c1a3fbe3a1c5704635f8941abeb9596104c77. At the moment, the derived class StreamerInfo contains the base class version number :(; This means we need to update the derived class version number when the base class number increases ... This solves the problem seen at: https://root-forum.cern.ch/t/problem-in-opening-past-rootfile-tclonesarray-with-th1s-with-root-v6-16-and-ubuntu18/33293/1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619:176,update,update,176,https://root.cern,https://github.com/root-project/root/pull/3619,3,['update'],['update']
Deployability,"This is a followup to commit 2f7936a, using range-based loops or at; least the `begin()` and `end()` member functions for RooLinkedLists; everywhere in RooFit/RooStats. This is not an important update but just a small technical change, which I found in some of my older development branches but forgot to open a PR so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9177:194,update,update,194,https://root.cern,https://github.com/root-project/root/pull/9177,1,['update'],['update']
Deployability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:468,integrat,integration,468,https://root.cern,https://github.com/root-project/root/pull/11619,1,['integrat'],['integration']
Deployability,This is a forward port of the 6.24 release notes update. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; (cherry picked from commit 0d49f6f399cb9ae95b0b3471f4ed918de723baef). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7459:35,release,release,35,https://root.cern,https://github.com/root-project/root/pull/7459,2,"['release', 'update']","['release', 'update']"
Deployability,"This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,; dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:; ```; CMake Error at cmake_install.cmake:132 (file):; file INSTALL cannot find; ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"".; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:119,patch,patch,119,https://root.cern,https://github.com/root-project/root/pull/3094,3,"['INSTALL', 'install', 'patch']","['INSTALL', 'install', 'patch']"
Deployability,This is a minor clarification in the README installation instructions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8119:44,install,installation,44,https://root.cern,https://github.com/root-project/root/pull/8119,1,['install'],['installation']
Deployability,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:28,patch,patch,28,https://root.cern,https://github.com/root-project/root/pull/5541,5,"['patch', 'update']","['patch', 'patches', 'updated']"
Deployability,This is a preparation because we want to ship module configuration; files in the future in the cling resource directory (Clang VFS overlay; files and modulemaps). This means that we will need to know this path; in a few other places (e.g. where we specify the -ivfsoverlayPATH; arguments and potential -fmodule-map-file=PATH args). It also makes this giant function a bit easier on the eyes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/922:53,configurat,configuration,53,https://root.cern,https://github.com/root-project/root/pull/922,1,['configurat'],['configuration']
Deployability,"This is a proof of concept for a part of a TMVA GUI replacement. The basic ideas:; - Make it modular, no monolithic tool; - Provide tight integration with RDataFrame. I copy below the tutorial that I've added in the PR. Known issues:; - The automatic range for the histos is very weird.; - Naming of the class is not optimal. ```cpp; void tmva005_RVariablePlotter(); // Initialize ROOT dataframes from signal and background datasets; const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";; ROOT::RDataFrame sig1(""TreeS"", filename);; ROOT::RDataFrame bkg1(""TreeB"", filename);. // Apply transformations on the datasets to be included in the study; auto transform = [](auto df) { return df.Define(""var5"", ""var1 * var2""); };; auto sig2 = transform(sig1);; auto bkg2 = transform(bkg1);; auto sig3 = sig2.Filter(""var1 > 0"");. // Create a variable plotter object giving the dataframes and the class labels.; RVariablePlotter plotter({sig2, bkg2, sig3},; {""Signal"", ""Background"", ""Signal (var1 > 0)""});. // Create a canvas with four pads for plotting; auto c = new TCanvas("""", """", 1200, 800);; c->Divide(3, 2);. // Place plots on the pads of the canvas; const std::vector<std::string> variables = {""var1"", ""var2"", ""var3"", ""var4"", ""var5""};; for (unsigned int i = 0; i < variables.size(); i++) {; c->cd(i + 1);; plotter.Draw(variables[i]);; }; c->cd(6);; plotter.DrawLegend();; c->DrawClone();; }; ```. ![x](https://user-images.githubusercontent.com/6951222/63058987-7b33d880-beee-11e9-974d-264d06ea0869.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4211:138,integrat,integration,138,https://root.cern,https://github.com/root-project/root/pull/4211,1,['integrat'],['integration']
Deployability,"This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611:26,update,update,26,https://root.cern,https://github.com/root-project/root/pull/9611,1,['update'],['update']
Deployability,This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-5494. Fixes compilation errors and warnings in the THDFS module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/89:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/89,1,['patch'],['patch']
Deployability,"This is a pull request based on the patch in https://sft.its.cern.ch/jira/browse/ROOT-7541. The public (installed) header TXSocket.h #includes the private (not installed) header XrdProofConn.h. This means it can not be used in compilations:. g++ -I/usr/include/root -x c++ - <<< '#include ""TXSocket.h""'; In file included from <stdin>:1:0:; /usr/include/root/TXSocket.h:47:26: fatal error: XrdProofConn.h: No such file or directory; compilation terminated. A possible fix is provided in the attached patch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/88:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/88,4,"['install', 'patch']","['installed', 'patch']"
Deployability,"This is a pull request based on the patches in https://sft.its.cern.ch/jira/browse/ROOT-7457. There are two problem with the code. Looking at a hexdump of a Type 1 font:. ```; 00000000 80 01 fb 15 00 00 25 21 50 53 2d 41 64 6f 62 65 |......%!PS-Adobe|; 00000010 46 6f 6e 74 2d 31 2e 30 3a 20 53 74 61 6e 64 61 |Font-1.0: Standa|; [ ... ]; 00008390 30 30 30 30 30 30 30 30 30 30 30 30 30 30 0d 63 |00000000000000.c|; 000083a0 6c 65 61 72 74 6f 6d 61 72 6b 0a 80 03 |leartomark...|; ```. The code currently reads beyond the 80 03 at the end of the file by trying to determing the length of the following block - but an end of file block does not have a length, the file ends right after the end of file block tag 08 03. The length is in little endian format - as can be seen in the beginning of the file. The ascii block tag 80 01 is followed by fb 15 00 00 which is little endian for 000015fb. So it is big endian architectures that needs to do a byte swap, not little endian ones as in the current code. The first attached patch addresses these issues. The second patch implements returning the fontname for Type 1 embedding.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/90:36,patch,patches,36,https://root.cern,https://github.com/root-project/root/pull/90,3,['patch'],"['patch', 'patches']"
Deployability,"This is a request for backport of https://github.com/root-project/root/pull/7035; to 6-22 patches because of this ClassDef change:; ` ClassDef(TF1, 11) // The Parametric 1-D function` (previous was 10); which we are checking in this test:; https://github.com/cms-sw/cmssw/blob/master/DQMServices/Components/test/testSchemaEvolution.cpp#L44; and should have one or the other version, and we better use this fix in 6-22 anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7193:90,patch,patches,90,https://root.cern,https://github.com/root-project/root/pull/7193,1,['patch'],['patches']
Deployability,"This is a smart observation @ferdymercury . From the project's perspective it is hard to think we'll use compilers older than that the ones we use to integrate ROOT 6.32 today, except very special cases that we can treat as such if they appear...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16234#issuecomment-2288708724:150,integrat,integrate,150,https://root.cern,https://github.com/root-project/root/pull/16234#issuecomment-2288708724,1,['integrat'],['integrate']
Deployability,"This is a specialization of iterator::next for vector<bool> that always returns a nullptr and should never be used.; IIUC, this code only exists to avoid compilation errors when compiling I/O code for `vector<bool>`. With this patch we error out rather than silently returning a nullptr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6891:227,patch,patch,227,https://root.cern,https://github.com/root-project/root/pull/6891,1,['patch'],['patch']
Deployability,This is a testing PR to unveil all other possible remaining time bombs; in TMVA that blow off once some requirements are installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306:121,install,installed,121,https://root.cern,https://github.com/root-project/root/pull/15306,1,['install'],['installed']
Deployability,"This is a updated pull request from #59 The same experiments have been run and performance results are shown here:. | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 11.74 MB/s | 131.06 MB/s | 181 MB |; | lzma | 0.86 MB/s | 17.36 MB/s | 157 MB |; | lz4 | 5.22 MB/s | 143.81 MB/s | 221 MB |. The following performance is from the root file @pcanal's ticket (https://root.cern.ch/files/CMS_7250E9A5-682D-DF11-8701-002618943934.root). The file is 1.9 GB large, and I tried to decompressed it and it seems its original size is 6.4 GB. The following compression/decompression speeds are calculated by dividing 6.4 GB by the time each test run. @bbockelm , we could discuss implementation details of my tests tomorrow. . | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 15.83 MB/s | 63.23 MB/s | 1.6 GB |; | lzma | 1.28 MB/s | 22.62 MB/s | 1.2 GB |; | lz4 | 8.32 MB/s | 66.53 MB/s | 1.8 GB |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81:10,update,updated,10,https://root.cern,https://github.com/root-project/root/pull/81,1,['update'],['updated']
Deployability,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:299,pipeline,pipeline,299,https://root.cern,https://github.com/root-project/root/pull/8329,2,['pipeline'],['pipeline']
Deployability,"This is a workaround for https://bugs.python.org/issue21591 which; affect Python 2 versions before 2.7.9. This includes Python 2.7.5; which is the Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:766,install,install,766,https://root.cern,https://github.com/root-project/root/pull/5960,1,['install'],['install']
Deployability,"This is a workaround until we decide how to handle builtin externals; that have headers used by ROOT at runtime from the build directory.; If ROOT is installed, or if Vc/VecCore are external, no workaround is; needed, as ROOT finds the headers at runtime without problems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/865:150,install,installed,150,https://root.cern,https://github.com/root-project/root/pull/865,1,['install'],['installed']
Deployability,"This is achieved by parallelizing the weight update process. This PR does not fix the code quality issues mentioned by @Axel-Naumann or the warnings, since these issues are handled by #2321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2386:45,update,update,45,https://root.cern,https://github.com/root-project/root/pull/2386,1,['update'],['update']
Deployability,"This is actually due to a GCC bug https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82906 - lld does ""the right thing"". I'll compare the stressTMVA time with and without this patch before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1256#issuecomment-345757893:170,patch,patch,170,https://root.cern,https://github.com/root-project/root/pull/1256#issuecomment-345757893,1,['patch'],['patch']
Deployability,This is actually from @pzhristov and it's needed to be able to build with ALICE patched versions of ROOT which we tag with `<official-root-tag>-alice<X>` where `<X>` is a number. Any better idea?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5394:80,patch,patched,80,https://root.cern,https://github.com/root-project/root/pull/5394,1,['patch'],['patched']
Deployability,"This is an RPM packaged root. It is split into several packages in order to be flexible so that users can install the parts they need. So someone who installs the pyroot package does not necessarily install also the distrdf package, so it can be missing in their user installation. They should still be able to use the non-distrdf part of ROOT.RDF namespace.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12407#issuecomment-1452157710:106,install,install,106,https://root.cern,https://github.com/root-project/root/pull/12407#issuecomment-1452157710,4,['install'],"['install', 'installation', 'installs']"
Deployability,"This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:; Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13698",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13722:383,update,updated,383,https://root.cern,https://github.com/root-project/root/pull/13722,1,['update'],['updated']
Deployability,"This is an alternative approach to solve the problem of colliding LLVM symbols, if other libraries bring in their own LLVM.; The original approach was to force other LLVM libraries to be compiled with -fvisibility=hidden or being opened with dlopen after TROOT::InitInterpreter(). This patch solves the issue on the ROOT side, which seems to me the much cleaner approach because we do not pose any limitations on 3rd party libraries. I tried it locally and it works for me. Marked as ""Work in Progress"", since this might need some more thought, in particular for other OS, and for old glibc versions that do not support RTLD_DEEPBIND.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668:286,patch,patch,286,https://root.cern,https://github.com/root-project/root/pull/4668,1,['patch'],['patch']
Deployability,"This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3361:254,install,installed,254,https://root.cern,https://github.com/root-project/root/pull/3361,1,['install'],['installed']
Deployability,This is an attempt to fix https://github.com/root-project/root/issues/16774 once the next release is created.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16775:90,release,release,90,https://root.cern,https://github.com/root-project/root/pull/16775,1,['release'],['release']
Deployability,"This is an overhaul of the optimize baskets algorithm, primarily done by Ilija Vukotic and extended by David Smith. Goal of this algorithm is to minimize overall memory size when writing and number of baskets in a cluster. Since this work predates ROOT moving to GitHub, it appears the patches primarily are floating around in various people's inbox. This is my attempt to ""capture"" the knowledge and ideas, even if we don't decide to go this direction. @pcanal @smithdh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/657:286,patch,patches,286,https://root.cern,https://github.com/root-project/root/pull/657,1,['patch'],['patches']
Deployability,This is an update of https://github.com/root-project/root/pull/134 to work compile on MacOS and rename TSigHandling into TSignalManager. This is a work in progress as the new TSignalManager no longer calls TSystem::StackTrace but is also only implementing support for unix systems. @zzxuanyuan Could you update the code to support at least MacOS (and attempt to support Windows)?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1053:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/1053,2,['update'],['update']
Deployability,This is an update to #5798 which had to be reverted due to its incompatibility with CMake 3.12 and below. . @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5903:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/5903,1,['update'],['update']
Deployability,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/507,1,['update'],['update']
Deployability,"This is an updated PR of #507 that is an update of #40. . As a reminder, this PR integrates a new minimizer in ROOT, CMA-ES see https://github.com/beniz/libcmaes/ . It rebases the new commits from @beniz to the current master and fixes the Eigen configuration issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7044:11,update,updated,11,https://root.cern,https://github.com/root-project/root/pull/7044,4,"['configurat', 'integrat', 'update']","['configuration', 'integrates', 'update', 'updated']"
Deployability,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13953:67,configurat,configuration,67,https://root.cern,https://github.com/root-project/root/pull/13953,2,['configurat'],['configuration']
Deployability,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13988:67,configurat,configuration,67,https://root.cern,https://github.com/root-project/root/pull/13988,1,['configurat'],['configuration']
Deployability,This is causing `hadd` to ignore the compression options when merging RNTuples. We didn't catch this bug because the unit tests were bypassing TFileMerger and calling directly into RNTupleMerger. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16700:247,update,updated,247,https://root.cern,https://github.com/root-project/root/pull/16700,1,['update'],['updated']
Deployability,"This is critical because we might load who knows what into the frameworks. But because the fix is rather intrusive, and the OP has a simple workaround, I'll *not* backport the fixes to our existing release branches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955#issuecomment-856839812:198,release,release,198,https://root.cern,https://github.com/root-project/root/issues/7955#issuecomment-856839812,2,['release'],['release']
Deployability,This is currently the only tutorial calling `RCanvas::SaveAs()` and it fails very often (more than 90% of the time) on fedora38 and fedora39 since the last update of chromium.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750:156,update,update,156,https://root.cern,https://github.com/root-project/root/pull/14750,1,['update'],['update']
Deployability,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14425#issuecomment-1935515180:35,patch,patch,35,https://root.cern,https://github.com/root-project/root/issues/14425#issuecomment-1935515180,4,['patch'],['patch']
Deployability,"This is dev4, so ROOT 6.26-patches branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11921#issuecomment-1357895516:27,patch,patches,27,https://root.cern,https://github.com/root-project/root/pull/11921#issuecomment-1357895516,1,['patch'],['patches']
Deployability,"This is done because the manual memory management in the `rs101_limitexample` tutorial deleted the object in the wrong way. For example, it deleted the workspace first, and then the `lrinterval` object that pointed to the PDF stored in the workspace. This caused crashes in configurations that are sentitive to the resulting dangling pointers, like in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11834:274,configurat,configurations,274,https://root.cern,https://github.com/root-project/root/pull/11834,1,['configurat'],['configurations']
Deployability,"This is done for consistency with the other backports.; The old header RStringView.h is left for backwards compatibility, and it simply includes ROOT/RStringView.hxx. Due to our cmake rules this change requires a removal of $ROOTSYS/core; (or anyway a regeneration of the cmake rules for it) in build; directories used for incremental builds. I think of this PR as a ""nice to have"", and I see no downsides, but feel free to close it if you are against such a change. @vgvassilev I did not know how to update `build/unix/module.modulemap` so I left it as is, let me know if it requires changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1635:501,update,update,501,https://root.cern,https://github.com/root-project/root/pull/1635,1,['update'],['update']
Deployability,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:345,update,updated,345,https://root.cern,https://github.com/root-project/root/pull/10546,1,['update'],['updated']
Deployability,"This is done to avoid this compiler warning that I get when compiling; ROOT with gcc:. ```; core/base/inc/TStorage.h:131:37: warning: declaration of ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’ with attribute ‘noinline’ follows inline declaration [-Wattributes]; 131 | R__NEVER_INLINE void TStorage::UpdateIsOnHeap(volatile const UInt_t &uniqueID, volatile UInt_t &bits) {; | ^~~~~~~~; core/base/inc/TStorage.h:91:20: note: previous declaration of ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’ here; 91 | static void UpdateIsOnHeap(volatile const UInt_t &uniqueID, volatile UInt_t &bits);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500:172,Update,UpdateIsOnHeap,172,https://root.cern,https://github.com/root-project/root/pull/10500,4,['Update'],['UpdateIsOnHeap']
Deployability,"This is expected, `builtin_llvm=OFF` can only be used with a patched version of LLVM from https://github.com/vgvassilev/llvm/commits/cling-patches. Same for `builtin_clang=OFF`, where Cling needs quite a number of patches on top of ""vanilla"" Clang: https://github.com/vgvassilev/clang/commits/cling-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146#issuecomment-1208035287:61,patch,patched,61,https://root.cern,https://github.com/root-project/root/issues/11146#issuecomment-1208035287,4,['patch'],"['patched', 'patches']"
Deployability,This is final 7.5.0 release.; Branch 7.5 will be used as base for ROOT 6.30,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13810:20,release,release,20,https://root.cern,https://github.com/root-project/root/pull/13810,1,['release'],['release']
Deployability,"This is finally resolved and uploaded to the branch patches for 6.20, 6.22, 6.24 and will be part of 6.26/00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-1029303057:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-1029303057,1,['patch'],['patches']
Deployability,"This is first attempt to provide support of custom classes in web-based canvas; For now one has to register list of such classes and provide JavaScript code where painters are implemented. . Similar approach can be implemented in the future for ROOT7 RCanvas.; Probably, such custom JS code can be ""embed"" directly into C++ code making maintenance much easier. Update JSROOT with many improvements for TGeo monitoring",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4094:361,Update,Update,361,https://root.cern,https://github.com/root-project/root/pull/4094,1,['Update'],['Update']
Deployability,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:1199,update,updated,1199,https://root.cern,https://github.com/root-project/root/pull/2487,1,['update'],['updated']
Deployability,"This is fixed in master and v6-26-00-patches (aka the upcoming v6.26.06) for the case of a jitted Snapshot call (i.e. when no template parameters are specified, so the most common case). @andrzejnovak please let us know if you still have issues with the current master branch or that release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6932#issuecomment-1193238577:37,patch,patches,37,https://root.cern,https://github.com/root-project/root/issues/6932#issuecomment-1193238577,2,"['patch', 'release']","['patches', 'release']"
Deployability,This is fixed in master and v6-26-00-patches (aka the upcoming v6.26.06). @vlisovsk please let us know if you still have issues with the current master branch or that release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920#issuecomment-1193238438:37,patch,patches,37,https://root.cern,https://github.com/root-project/root/issues/10920#issuecomment-1193238438,2,"['patch', 'release']","['patches', 'release']"
Deployability,This is fixed in the current binary releases. Do not hesitate to re-open if this issue appears again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901#issuecomment-1861760432:36,release,releases,36,https://root.cern,https://github.com/root-project/root/issues/11901#issuecomment-1861760432,1,['release'],['releases']
Deployability,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3984#issuecomment-504428513:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/3984#issuecomment-504428513,2,"['release', 'update']","['release', 'update']"
Deployability,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507#issuecomment-2002034945:115,update,update,115,https://root.cern,https://github.com/root-project/root/pull/14507#issuecomment-2002034945,2,"['patch', 'update']","['patches', 'update']"
Deployability,This is in prepare for the upcoming llvm upgrade. The future orc jit compile; layer needs a std::shared_ptr<llvm::Module>. The current design passes a; llvm::Module* around and any conversions to a shared_ptr cause the; destruction of the llvm::Module which is a long-lived object in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1047:41,upgrade,upgrade,41,https://root.cern,https://github.com/root-project/root/pull/1047,1,['upgrade'],['upgrade']
Deployability,"This is in reference to this forum post - https://root-forum.cern.ch/t/feature-request-make-uninstall/32663. This is but a naive implementation of make uninstall (https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake). This feature does have some issues.. quoting from the forum post - ""One of the problems could be the removal of files that were installed independently of ROOT. """,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405:381,install,installed,381,https://root.cern,https://github.com/root-project/root/pull/3405,1,['install'],['installed']
Deployability,This is just a cherry-pick of the Davix update from #2829. @amadio I'm not sure what you meant by dropping the commit. So I just opened another branch with only this one commit instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2833:40,update,update,40,https://root.cern,https://github.com/root-project/root/pull/2833,1,['update'],['update']
Deployability,"This is just my guess, but by reading the README at the link you mention it looks like that VM was made for the purpose of that particular training (5 years ago) and not with a wider scope in mind. You can surely create your own VM with the Linux flavor of your choice (probably a Fedora image would be easier to use), then install ROOT normally when you launch that VM. Otherwise, you can take a look at ROOT Docker containers for a possibly even easier experience at https://hub.docker.com/r/rootproject/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158#issuecomment-1408273211:324,install,install,324,https://root.cern,https://github.com/root-project/root/issues/12158#issuecomment-1408273211,1,['install'],['install']
Deployability,This is just to align the release notes file with the master branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12135:26,release,release,26,https://root.cern,https://github.com/root-project/root/pull/12135,1,['release'],['release']
Deployability,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9600#issuecomment-1018559183:676,configurat,configuration,676,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183,2,['configurat'],['configuration']
Deployability,"This is looking good! We will need it for 6.22 in conda-forge, since the patch I wrote for old PyROOT to do the above in a non-general way is no longer applicable, and conda-forge packages cannot be linked to Python. I can also use this in homebrew, as I've never been able to install ROOT.py into site-packages because homebrew has a linter that doesn't allow anything in site packages to be linked to python. We currently get around it by not installing into site-packages, and then forcing all python users to run `thisroot.*`. @chrisburr should also be aware of this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643#issuecomment-637715268:73,patch,patch,73,https://root.cern,https://github.com/root-project/root/pull/5643#issuecomment-637715268,3,"['install', 'patch']","['install', 'installing', 'patch']"
Deployability,"This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:113,update,update,113,https://root.cern,https://github.com/root-project/root/pull/2829,5,"['configurat', 'release', 'update']","['configuration', 'release', 'update']"
Deployability,"This is minimal changes to make ROOT working with that nlohmann/json.hpp version of parser; Same patch will be applied for v6-22-00-patches branch to resolve problem in ROOT-10993. Later one have to provide way to use external version of the parser.; But this requires significant changes in build system and in source code,; therefore will be provided later and only for master branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6663:97,patch,patch,97,https://root.cern,https://github.com/root-project/root/pull/6663,2,['patch'],"['patch', 'patches']"
Deployability,"This is more complicated that I thought. The legacy classes are still used in standard RooFit in the custom streamers for backwards compatibility. That's why it doesn't really make sense to separate out RooFitLegacy, because compiling ROOT without it would break backwards compatibility of RooFit which we don't want to happen in any build configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8759#issuecomment-1117367076:340,configurat,configuration,340,https://root.cern,https://github.com/root-project/root/issues/8759#issuecomment-1117367076,1,['configurat'],['configuration']
Deployability,"This is necessary to avoid ROOT's installed cmake modules to point to the build directory when using builtin GSL, since `$GSL_LIBRARIES` is the full path to `<BINARY_DIR>/lib/libgsl.so` when using builtin GSL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4050:34,install,installed,34,https://root.cern,https://github.com/root-project/root/pull/4050,1,['install'],['installed']
Deployability,This is needed also in v6-28-00-patches for building with GCC 13 since adding the `memory_resource` header in commit f7adbd2b04. (cherry picked from commit e9a8c48e4f207d7015bbd212116486bbecbac066 and commit aae1cd064679f440ad80f39e4ee56bb0c1d9d396). Backport of the following two PRs:; * https://github.com/root-project/root/pull/12765; * https://github.com/root-project/root/pull/12793,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12901:32,patch,patches,32,https://root.cern,https://github.com/root-project/root/pull/12901,1,['patch'],['patches']
Deployability,This is needed so that the new RooBrowser doesn't need to access the private collision grid of the TPad. These additional options allow the placement of the box with choice of priority over directions as well as option to place within the margins of the pad. . Wanted for 6.28 release too!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12066:277,release,release,277,https://root.cern,https://github.com/root-project/root/pull/12066,1,['release'],['release']
Deployability,"This is not intended to enter master (as of now at least). I am sharing a patch to produce taskstream for RunTreeProcessorMT. The RLoopManager produces a raw data, that can very easily be given to this small program that does the magic:; ```py; import pandas as pd; samples = pd.read_csv('test.csv'). startTime = min(samples['StartTime']) # the earliest ; allEntries = sum(samples['EntriesProcessed']); samples['StartTime'] -= startTime; samples['EndTime'] -= startTime; samples['Duration'] = samples['EndTime'] - samples['StartTime']; samples['EntriesPercentProc'] = samples['EntriesProcessed']/allEntries*100. import altair as alt; import altair_saver. chart = alt.Chart(samples[['Slot','ThreadID','CoreID',; 'StartTime','EndTime','EntriesProcessed', 'EntriesPercentProc', 'Duration']]).mark_bar(; cornerRadiusTopLeft=2,; cornerRadiusTopRight=2,; cornerRadiusBottomLeft=2,; cornerRadiusBottomRight=2; ).encode(; x='StartTime',; x2='EndTime',; y='ThreadID',; tooltip=['Slot', 'CoreID', 'EntriesProcessed', 'EntriesPercentProc', 'Duration']; ).properties(width=1200).interactive(). chart.save('taskstream.html'); ```; Requirements are pandas, altair and altair_saver. Example resulting taskstream is in this draft PR: https://github.com/root-project/root/blob/2dffbaab2ef3c280cc1b5a98fe8123250353d35e/tutorials/dataframe/dashboard/taskstream.html. Any suggestions for improvements are welcome :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11620:74,patch,patch,74,https://root.cern,https://github.com/root-project/root/pull/11620,1,['patch'],['patch']
Deployability,"This is now fixed in the main branch and the patch branch for 6.22, 6.24 and 6.26.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9939#issuecomment-1065717331:45,patch,patch,45,https://root.cern,https://github.com/root-project/root/issues/9939#issuecomment-1065717331,1,['patch'],['patch']
Deployability,This is now fixed in v6-26-00-patches. Sorry for not backporting the fixes earlier.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11728#issuecomment-1318835742:30,patch,patches,30,https://root.cern,https://github.com/root-project/root/issues/11728#issuecomment-1318835742,1,['patch'],['patches']
Deployability,"This is obviously not expected:; 1. If it is incompatible, it should detect this when CMake runs; 2. If if is known to be incompatible, it should be mentioned in the documenation. Compare https://root.cern/install/build_from_source/#all-build-options; > builtin_cling | Build bundled copy of Cling. Only build with an external cling if you know what you are doing: associating ROOT commits with cling commits is tricky. > builtin_clang | Build bundled copy of Clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146#issuecomment-1208043364:206,install,install,206,https://root.cern,https://github.com/root-project/root/issues/11146#issuecomment-1208043364,1,['install'],['install']
Deployability,This is only 2 release back (The last tag was recent 28 Nov 2023). Did we stop maintaining that release?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10188#issuecomment-1896982055:15,release,release,15,https://root.cern,https://github.com/root-project/root/pull/10188#issuecomment-1896982055,2,['release'],['release']
Deployability,"This is presumbaly a bit controversial. safeDeleteList remove elements in order in a RooAbsCollection,; starting with the ones that only have clients and no servers. This is a slow process, and takes 25% of CPU time on large workspace; manipulation workflows, as it takes place at each workspace::import; call. It can also lead to slow ~RooWorkspace. The point is, I don't think this logic is needed at all.; ~RooAbsArg takes care of properly breaking all the client-server links,; both uplinks and downlinks, for every object. I couldn't find a logical; case where a crash would occur if the safeDeleteList logic were to be; removed. All RooFit tests pass after this patch. No problem for my heavy; workspace manipulation worflows either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9685:668,patch,patch,668,https://root.cern,https://github.com/root-project/root/pull/9685,1,['patch'],['patch']
Deployability,"This is probably a fix:. ```patch; diff --git a/core/foundation/src/TClassEdit.cxx b/core/foundation/src/TClassEdit.cxx; index a45b431a5d..bb3d06b4b5 100644; --- a/core/foundation/src/TClassEdit.cxx; +++ b/core/foundation/src/TClassEdit.cxx; @@ -560,8 +560,8 @@ int TClassEdit::STLArgs(int kind); static const char stln[] =// min number of container arguments; // vector, list, deque, map, multimap, set, multiset, bitset,; { 1, 1, 1, 1, 3, 3, 2, 2, 1,; - // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap; - 1, 3, 3, 4, 4};; + // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap, ROOT::RVec; + 1, 3, 3, 4, 4, 1};. return stln[kind];; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821329259:28,patch,patch,28,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821329259,1,['patch'],['patch']
Deployability,"This is ready for review, the last update keeps a constant resource consumption and doesn't inflate the buffer usage of the non-IMT case anymore (IMT of course uses more memory because it needs buffers for the uncompressed and compressed / sealed pages). I'm still not entirely happy because I noticed that `SealPage` allocates a temporary buffer if the element is not mappable, but that's not for this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14193#issuecomment-1853872721:35,update,update,35,https://root.cern,https://github.com/root-project/root/pull/14193#issuecomment-1853872721,1,['update'],['update']
Deployability,This is required to build LLVM18.; This version of CMake was eleased in March 2021 https://github.com/Kitware/CMake/releases/tag/v3.20.0. Associated PR in roottest https://github.com/root-project/roottest/pull/1184,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16396:116,release,releases,116,https://root.cern,https://github.com/root-project/root/pull/16396,1,['release'],['releases']
Deployability,This is required to build LLVM18.; This version of CMake was eleased in March 2021; https://github.com/Kitware/CMake/releases/tag/v3.20.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16397:117,release,releases,117,https://root.cern,https://github.com/root-project/root/pull/16397,1,['release'],['releases']
Deployability,This is revised version of #1227.; Main change is the addition of an auto adjust mode that removes the need of a final adjust.; Still limited to the 1D case. The test failure in MemberComments is due to a missing update of MemberComments.ref .; A patch for roottest is available already. . Clang-format not applied this time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1305:213,update,update,213,https://root.cern,https://github.com/root-project/root/pull/1305,2,"['patch', 'update']","['patch', 'update']"
Deployability,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16007:77,release,release,77,https://root.cern,https://github.com/root-project/root/pull/16007,1,['release'],['release']
Deployability,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp; #include <ROOT/TBufferMerger.hxx>; #include <ROOT/RVec.hxx>; #include <TTree.h>; #include <TFile.h>; #include <iostream>. int main(); {; // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; TFile f(""standardwrite.root"", ""recreate"");; TTree t(""t"", ""t"", 99, &f);; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv);; t.Fill();; f.Write();; }. std::cout << ""***** standard write ******"" << std::endl;; auto f2 = TFile::Open(""standardwrite.root"");; for (auto e : *f2->GetStreamerInfoList()) {; std::cout << e->GetName() << std::endl;; }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist; {; ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");; auto f = bm.GetFile();; TTree t(""t"", ""t"", 99, f.get());; ROOT::RVec<float> rv{1, 2, 3};; t.Branch(""v"", &rv);; t.Fill();; f->Write();; }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;; auto f = TFile::Open(""buffermerger.root"");; for (auto e : *f->GetStreamerInfoList()) {; std::cout << e->GetName() << std::endl;; }. return 0;; }; ```. and its output:. ```; g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs); ***** standard write ******; TNamed; TObject; TList; TSeqCollection; TCollection; ROOT::VecOps::RVec<float>; TTree; TAttLine; TAttFill; TAttMarker; ROOT::TIOFeatures; TBranchElement; TBranch; TLeafElement; TLeaf; TString; TBranchRef; TRefTable; TObjArray; listOfRules. ***** TBufferMerger ******; TNamed; TObject; TList; TSeqCollection; TCollection; TTree; TAttLine; TAttFill; TAttMarker; ROOT::TIOFeatures; TBranchElement; TBranch; TLeafElement; TLeaf; TString; TBranchRef; TRefTable; TObjArray; listOfRules; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6611#issuecomment-1071191823:49,update,update,49,https://root.cern,https://github.com/root-project/root/issues/6611#issuecomment-1071191823,1,['update'],['update']
Deployability,"This is still an issue, there are some problems already at configuration time:. ```; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 105: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 106: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 107: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 108: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 109: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 110: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 111: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 113: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 118: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 122: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 123: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 124: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 125: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 126: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 127: ${COMPILEDATA}.tmp: ambiguous redirect; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 128: ${COMPILEDATA}.tmp: ambiguous redirect; Running /home/blue/ROOT/root sources/build/unix/compiledata.sh; Making /home/blue/ROOT/root sources/cmake-build-foo/ginclude/compiledata.h; /home/blue/ROOT/root sources/build/unix/compiledata.sh: line 131: [: /home/blue/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7311#issuecomment-1070972448:59,configurat,configuration,59,https://root.cern,https://github.com/root-project/root/issues/7311#issuecomment-1070972448,1,['configurat'],['configuration']
Deployability,This is the complete set of patches used by ALICE on top of v6-20-02. AFAICT they are all in master already. Any chance we can get them included in the next v6-20-XX tag?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5407:28,patch,patches,28,https://root.cern,https://github.com/root-project/root/pull/5407,1,['patch'],['patches']
Deployability,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:110,configurat,configuration,110,https://root.cern,https://github.com/root-project/root/pull/5725,2,['configurat'],['configuration']
Deployability,"This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string; interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp; - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago.; - Removing of RVec version of printValue which wasn't used at all; - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:191,patch,patch,191,https://root.cern,https://github.com/root-project/root/pull/2698,1,['patch'],['patch']
Deployability,"This is the gdb output in Release mode:. ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff7f8fb80 (LWP 20703) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562a4138) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 2 Thread 0x7fffa4c86700 (LWP 20736) ""runGUI"" 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa4c86700 (LWP 20736)):; #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555573d87fc) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x5555573d8880, cond=0x5555573d87d0) at pthread_cond_wait.c:502; #2 __pthread_cond_wait (cond=0x5555573d87d0, mutex=0x5555573d8880) at pthread_cond_wait.c:655; #3 0x00007ffff537d8fe in TThread::XARequest(char const*, int, void**, int*) () from /opt/root/lib/libThread.so; #4 0x00007ffff537dadd in TThread::Printf(char const*, ...) () from /opt/root/lib/libThread.so; #5 0x00007ffff7ba899d in RThread::Stop (this=0x5555568eb150) at /home/user/Desktop/zdt/gui/RThread.cpp:119; #6 0x00007ffff7bb776e in MainWindow::DoStopDAQ (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:1250; #7 0x00007ffff7bb5164 in MainWindow::SaveAndExit (this=0x7ffffffdd1f0) at /home/user/Desktop/zdt/gui/MainWindow.cpp:848; #8 0x00007fffa43c802a in ?? (); #9 0x0000000000000000 in ?? (). Thread 1 (Thread 0x7ffff7f8fb80 (LWP 20703)):; #0 0x00007ffff6b46ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:26,Release,Release,26,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['Release'],['Release']
Deployability,"This is the result of m2->Map(""forcomp"");. for 6.30.04 ubu22 binary release (left) vs this branch ubu22 debug build (right). ![image](https://github.com/root-project/root/assets/10653970/9069407e-74cf-4444-b57f-b7b3247dea1d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14747#issuecomment-1967916745:68,release,release,68,https://root.cern,https://github.com/root-project/root/pull/14747#issuecomment-1967916745,1,['release'],['release']
Deployability,"This is the second attempt for merging the bulk IO APIs (hidden inside the ROOT::Internal namespace); original version was in #943; this is a large rebase and update (particularly, removing the buffer sharing between the ROOT and the user). The initial goal here is to get another round of @pcanal attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:159,update,update,159,https://root.cern,https://github.com/root-project/root/pull/2519,1,['update'],['update']
Deployability,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:278,integrat,integrator,278,https://root.cern,https://github.com/root-project/root/pull/8611,2,"['Integrat', 'integrat']","['Integration', 'integrator']"
Deployability,"This is to avoid the following warning at configuration time when building ROOT with `cuda` enabled:. ```; CMake Warning (dev) at cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package):; Policy CMP0146 is not set: The FindCUDA module is removed. Run ""cmake; --help-policy CMP0146"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:1705 (find_package); CMakeLists.txt:347 (include); This warning is for project developers. Use -Wno-dev to suppress it.; ```. Indeed, FindCUDA is deprecated since CMake 3.10:; https://cmake.org/cmake/help/latest/module/FindCUDA.html. The minimum required CMake version by ROOT is 3.16, so it should be no problem to use the suggested new alternative: call the enable_language() command with CUDA. Similar to `enable_language(Fortran)`, this is now done in `CheckCompiler.cmake`. Also, some logic of managing the configuration flags was moved from `SearchInstalledSoftware.cmake` to `RootBuildOptions.cmake` where it belongs. What remains in `SearchInstalledSoftware.cmake` is only the code to find the CuDNN library. Also, since CUDA is now registered as a language in CMake, we can use the official `CMAKE_CUDA_COMPILER` variable in `RootConfiguration.cmake` when invoking nvcc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13437:42,configurat,configuration,42,https://root.cern,https://github.com/root-project/root/pull/13437,2,['configurat'],['configuration']
Deployability,"This is to get rid of deprecation warninigs when building on Ubuntu; 22.04. Should cause no backwards compatibility poblems, as the functions that; are used now are around at least since OpenSSL 1.0.2:; https://www.openssl.org/docs/man1.0.2/man3/EVP_DigestInit_ex.html. This patch was already applied to upstream civet:; https://github.com/civetweb/civetweb/pull/1072",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380:275,patch,patch,275,https://root.cern,https://github.com/root-project/root/pull/10380,1,['patch'],['patch']
Deployability,"This is to test a potential fix to a recent regression in llvm wrt exposing symbols to the JIT from dlopened with RTLD_LOCAL libraries. This regression forced ROOT to revert this patch, adding one more patch to the list of llvm patches. We want to check if D33529 fixes our issue and make sure it goes in the next llvm release (coming soon). @marsupial, I failed to apply D33657 on top and D33658. They are marked as dependencies but it looks like they do not apply cleanly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744:179,patch,patch,179,https://root.cern,https://github.com/root-project/root/pull/744,4,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5100:138,patch,patch,138,https://root.cern,https://github.com/root-project/root/pull/5100,1,['patch'],['patch']
Deployability,"This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, ; only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3194:223,integrat,integration,223,https://root.cern,https://github.com/root-project/root/pull/3194,1,['integrat'],['integration']
Deployability,"This is what's available on CentOS 6, unfortunately:; ```; =======================================================================================================================; Package Arch Version Repository Size; =======================================================================================================================; Installing:; cmake3 x86_64 3.6.1-3.el6 epel 6.2 M; ```. On CentOS 7, CMake 3.12.1 is available after `yum install epel-release`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2636#issuecomment-422434617:339,Install,Installing,339,https://root.cern,https://github.com/root-project/root/pull/2636#issuecomment-422434617,3,"['Install', 'install', 'release']","['Installing', 'install', 'release']"
Deployability,"This issue is fixed by migrating to the new-style buffer interface:. ```cpp; if (PyObject_CheckBuffer(pyobject)) {; Py_buffer bufinfo;; memset(&bufinfo, 0, sizeof(Py_buffer));; ```; ; Where we update the check to perform ; ```cpp; if (check && bufinfo.itemsize != size); ```; determine incompatibility between the bit size of declared nd.array dtypes and the subscripted type in `cppyy.gbl.std.vector('type')` in CPyCppyy/src/Utility.cxx. @vepadulano",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12230#issuecomment-1940884154:193,update,update,193,https://root.cern,https://github.com/root-project/root/issues/12230#issuecomment-1940884154,1,['update'],['update']
Deployability,"This issue only occurs when the conda environment is activated.; I followed the default install method with `conda create -c conda-forge --name <my-environment> root`. I want to use a wrapper class for TChain called [Ntuple](https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py); https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py; But I cannot initialize this class with conda environment (If I use ROOT installed from source codes, it works well).; The error message:; ```; Traceback (most recent call last):; File ""./example_ntuple.py"", line 9, in <module>; n = Ntuple(""DataTree""); File ""/Users/allen/Documents/GitHub/tuple/python/Ntuple.py"", line 29, in __init__; TChain.__init__(self, name); TypeError: none of the 2 overloaded methods succeeded. Full details:; TChain::TChain() =>; TypeError: takes at most 0 arguments (1 given); no constructor available for 'TChain'; ```; It is strange that there is no other overloaded method with 2 args",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467:88,install,install,88,https://root.cern,https://github.com/root-project/root/issues/6467,2,['install'],"['install', 'installed']"
Deployability,This latest version of the patch displays fine for me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9994#issuecomment-1054372717:27,patch,patch,27,https://root.cern,https://github.com/root-project/root/pull/9994#issuecomment-1054372717,1,['patch'],['patch']
Deployability,This leads to errors due to absolute paths if ROOT is already; installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):; Header path; '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'; /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx; is not relative!; Call Stack (most recent call first):; cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY); graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3303:63,install,installed,63,https://root.cern,https://github.com/root-project/root/pull/3303,1,['install'],['installed']
Deployability,"This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123:269,patch,patch,269,https://root.cern,https://github.com/root-project/root/pull/13123,1,['patch'],['patch']
Deployability,"This line:; https://github.com/root-project/root/blob/7aab9a2be02967dc75342b4fb3c01c98f2a5a2c9/hist/hist/src/TH2.cxx#L485. Should be `fTsumwxy += z * x * y;` instead, as in the other versions `TH2::Fill`.; This was changed by 4465976d5da9b6c18adff75c430958112e79bf94, previously `fTsumwxy` was updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11746:294,update,updated,294,https://root.cern,https://github.com/root-project/root/issues/11746,1,['update'],['updated']
Deployability,"This looks like a regression from https://github.com/root-project/root/commit/7a1cc8ffe576490b2f977ba2c262e10ec53a797a#diff-93558e500b17901f800fbb40a2c2fdfd6ee229077db63413bd4a91ee7ec66ea7. It seems like interpreter/llvm-project/llvm/tools/clang would not be a thing, while a following compilation error is observed with builtin_llvm=OFF:. In file included from interpreter/cling/lib/Utils/AST.cpp:12:; In file included from interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:18:; interpreter/llvm-project/clang/include/clang/AST/ASTFwd.h:21:10: fatal error: 'clang/AST/DeclNodes.inc' file not found; #include ""clang/AST/DeclNodes.inc""; ^~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14238:789,update,updated,789,https://root.cern,https://github.com/root-project/root/pull/14238,1,['update'],['updated']
Deployability,This makes `check-cling` clean on `v6-28-00-patches`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13318:44,patch,patches,44,https://root.cern,https://github.com/root-project/root/pull/13318,1,['patch'],['patches']
Deployability,"This makes it possible to drop our custom `CompilerInvocation::addOverlay` functionality (but the rest of the patch that introduced it is still needed with LLVM 13, so it cannot be reverted for now).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13222:110,patch,patch,110,https://root.cern,https://github.com/root-project/root/pull/13222,1,['patch'],['patch']
Deployability,"This makes it unnecessary to veto these files in case RooFit is not enabled, and also makes it easier to consider the `man` and `etc` files when building RooFit standalone. I checked the build and install directories that everything is still where it should be.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16597:197,install,install,197,https://root.cern,https://github.com/root-project/root/pull/16597,1,['install'],['install']
Deployability,"This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10682:354,upgrade,upgrade,354,https://root.cern,https://github.com/root-project/root/pull/10682,1,['upgrade'],['upgrade']
Deployability,This mapping should be fixed before shipping the RDF Numba execution pipeline to users,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16413:69,pipeline,pipeline,69,https://root.cern,https://github.com/root-project/root/pull/16413,1,['pipeline'],['pipeline']
Deployability,This means that we won't have to install any headers from xrootd when using `builtin_xrootd=ON`. This makes systems that have both XRootD standalone and ROOT with builtin XRootD installed more stable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16660:33,install,install,33,https://root.cern,https://github.com/root-project/root/pull/16660,2,['install'],"['install', 'installed']"
Deployability,"This might fix e.g. `-mmacosx-version-min=12.6` not being passed to ACLiC, causing linker warnings about incompatible deployment targets. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12139:118,deploy,deployment,118,https://root.cern,https://github.com/root-project/root/pull/12139,2,"['deploy', 'update']","['deployment', 'updated']"
Deployability,This needs https://github.com/root-project/roottest/pull/448 for reference updates.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5012#issuecomment-587923261:75,update,updates,75,https://root.cern,https://github.com/root-project/root/pull/5012#issuecomment-587923261,1,['update'],['updates']
Deployability,"This needs to be tested locally, as I do not think we have MPI installed in the externals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689#issuecomment-380147293:63,install,installed,63,https://root.cern,https://github.com/root-project/root/pull/1689#issuecomment-380147293,1,['install'],['installed']
Deployability,This new release includes performance and stability improvements. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14654:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/14654,2,['release'],"['release', 'releases']"
Deployability,This new release includes several fixes helping to scale the RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15030:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/15030,2,['release'],"['release', 'releases']"
Deployability,This new release includes several fixes helping to simplify RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14794:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/14794,2,['release'],"['release', 'releases']"
Deployability,"This new release includes some improvements:; * Add experimental support for forward vector mode; * Add pushforwards for std::floor and std::ceil; * Improve AD function interfaces with bitmasked options. For example:; clad::differentiate<<clad::order::first, clad::opts::vector_mode>(f) will; be equivalent to clad::differentiate<<1, clad::opts::vector_mode>(f) and; will request the first order derivative of f in forward vector mode.; * LLVM16 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.2/docs/internalDocs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13269:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/13269,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11544:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/11544,4,"['Integrat', 'Release', 'release', 'update']","['Integration', 'ReleaseNotes', 'release', 'updated']"
Deployability,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8848:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/8848,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,This new release includes some improvements:; * Improvements in the array handling in the Error Estimation Framework; * Fixed numerical stability of the pow pushforward; * Fixed handling of for-loop conditions in reverse mode; * LLVM15 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.1/docs/internalDocs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/12075,2,"['Release', 'release']","['ReleaseNotes', 'release']"
Deployability,This one: https://root.cern/releases/release-63006/#source-distribution,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15178#issuecomment-2049094927:28,release,releases,28,https://root.cern,https://github.com/root-project/root/issues/15178#issuecomment-2049094927,2,['release'],"['release-', 'releases']"
Deployability,"This option gives clean/raw Cling without any includes. This is intended; to be used for debugging purposes. ```; [yuka@yuka-arch module-release]$ bin/root.exe --pedantic. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ int a = 1;; [cling]$ a; (int) 1; [cling]$ std::vector<int> b;; input_line_7:2:7: error: no member named 'vector' in namespace 'std'; std::vector<int> b;; ~~~~~^; input_line_7:2:17: error: expected '(' for function-style cast or type construction; std::vector<int> b;; ~~~^; input_line_7:2:19: error: use of undeclared identifier 'b'; std::vector<int> b;; ^; [cling]$ #include <vector>; [cling]$ std::vector<int> b;; [cling]$ b = {1,2,3}; (std::vector &) { 1, 2, 3 }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2561:137,release,release,137,https://root.cern,https://github.com/root-project/root/pull/2561,1,['release'],['release']
Deployability,This patch actually loads the modulemap as previously it wrongly detected; it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3695:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3695,1,['patch'],['patch']
Deployability,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8841:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/8841,3,"['patch', 'release', 'update']","['patch', 'release', 'updated']"
Deployability,"This patch adds a few IO benchmarks. Some of them were hosted by @amadio in an external repository. The nature of some of the benchmarks is to create multiple times files on disk. Running repeatedly, this can wear out machines disk drives. For that reason we extend the `TFileMerger` to work with `TFile*` directly. Passing an externally created `TFile*` allows us to pass a `TMemFile`. Being able to benchmark based on in-memory files gives us another advantage: we can emulate very fast drives or certain delay patterns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1062:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1062,1,['patch'],['patch']
Deployability,"This patch adds deprecation messages in the pq2 steering main, in rootd, proofd, ssh2rpd, and in all related man pages. Part of the agreed deprecation campaign.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1755:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1755,1,['patch'],['patch']
Deployability,This patch affords trimming of redundant Jupyter notebook information contained within TCanvas .JSON objects. Specifically this includes the removing the list of TColors which reduces the size of a benchmark notebook (a compiled test notebook of Root Primer graphics) by up to 80% upon preliminary tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/760:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/760,1,['patch'],['patch']
Deployability,This patch allows TFileMerger to work with externally created TFile-s. Being; able to control the creation of the TFile objects give us a chance to use; in-memory files. This is very helpful in benchmarking when we want to simulate; fast disks or we just want to avoid disk wearout.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1073,1,['patch'],['patch']
Deployability,This patch allows to tell vectorized from scalar evaluations and will fix the multidimensional scalar evaluation of a vectorized TF1 on non-SIMD data.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/827:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/827,1,['patch'],['patch']
Deployability,This patch allows us to resolve system-specific header search directories such as the location of libc. This patch fixes experimental runtime_cxxmodules on OSX where libc is in /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/. cc: @oshadura,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4659:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4659,2,['patch'],['patch']
Deployability,"This patch already landed in https://reviews.llvm.org/rL336660 in Clang. This was biting us to enable runtime modules in CMSSW. Detailed desciption:; https://bugs.llvm.org/show_bug.cgi?id=37878. lookupModule was falling back to loadSubdirectoryModuleMaps when it couldn't; find ModuleName in (proper) search paths. This was causing iteration over all; files in the search path subdirectories for example ""/usr/include/foobar"" in; bugzilla case. Users don't expect Clang to load modulemaps in subdirectories implicitly, and; also the disk access is not cheap. if (AllowExtraModuleMapSearch) true with ObjC with @import ModuleName.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2307,1,['patch'],['patch']
Deployability,This patch already landed in llvm. Clang emits error when implicit modules was relocated from the; first build directory. However this was biting our usecase where we copy; the contents of build directory to another directory in order to; distribute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2407,1,['patch'],['patch']
Deployability,This patch also applies cleanly to v6-22-00-patches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950#issuecomment-744513234:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6950#issuecomment-744513234,2,['patch'],"['patch', 'patches']"
Deployability,This patch also fixes an accidental merge problem where we essentially; added the same content of the modulemap twice. cc @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6075:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6075,1,['patch'],['patch']
Deployability,"This patch also instruct the build system to not copy {libc,std}.modulemap in OSX because the standard libraries are already modularized. Fixes a regression introduced by root-project/root@603a1c3e96",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5244:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5244,1,['patch'],['patch']
Deployability,This patch also reports the branch name when a class cannot be loaded by the importer to make debugging easier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12019:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/12019,1,['patch'],['patch']
Deployability,This patch also untangles the generation code of PCMs and PCHs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/504:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/504,1,['patch'],['patch']
Deployability,"This patch came from Sean Benson and Wouter Verkerke, and is needed; to allow LHCb's P2VV-style analyses to have different time acceptances; for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3776:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3776,1,['patch'],['patch']
Deployability,"This patch consolidates the symbol resolution facilities throughout TCling into; a new singleton class Dyld part of the cling's DynamicLibraryManager. The new dyld is responsible for:; * Symlink resolution -- it implements a memory efficient representation of; the full path to shared objects allowing search at constant time O(1). This; also fixes issues when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4717,1,['patch'],['patch']
Deployability,"This patch disables default building proofd and proofx modules, the PROOF ones requiring XRootD. The possibility to build these modules is provided as legacy and controlled by the switch 'xproofd' (-Dxproofd=ON). Note that these modules require XRootD v4 and the xrootd-private-devel RPM installed (or equivalent on Debian systems). Or -Dbuiltin_xrootd=ON . The patch also fixes a possible segv introduced last February.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5432:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5432,3,"['install', 'patch']","['installed', 'patch']"
Deployability,This patch enables the module file to mmap the rdict memory region before the; request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3967:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3967,1,['patch'],['patch']
Deployability,This patch fixes a few recent runtime_cxxmodules failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2331,1,['patch'],['patch']
Deployability,This patch fixes a few recent runtime_cxxmodules failures. Fixes ROOT-9709.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2977:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2977,1,['patch'],['patch']
Deployability,This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3802:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3802,1,['patch'],['patch']
Deployability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-16/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5142:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5142,1,['patch'],['patch']
Deployability,This patch fixes the following error:. In file included from input_line_12:3:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/include\TGWin32.h:24:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdk.h:30:; In file included from C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdkcc.h:4:; C:/build/night/LABEL/windows10/SPEC/default/V/6-18/root/graf2d/win32gdk/gdk/src\gdk/gdktypes.h:32:10: fatal error: 'glib.h' file not found; #include <glib.h>; ^~~~~~~~; CUSTOMBUILD : error : C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/rootcling.exe: compilation failure (C:/build/night/LABEL/windows10/SPEC/default/V/6-18/build/bin/libWin32gdk1fec221199_dictUmbrella.h) [C:\build\night\LABEL\windows10\SPEC\default\V\6-18\build\graf2d\win32gdk\G__Win32gdk.vcxproj],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5067:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5067,1,['patch'],['patch']
Deployability,"This patch fixes the histhistv7testUnit test, which was failing with the following errors:. 77: [ OK ] AxisTest.Irregular (0 ms); 77: [ RUN ] AxisTest.Labels; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5054,1,['patch'],['patch']
Deployability,This patch gives us control over the addition in subfolders in cmake.; It is necessary ingredient for the root package manager where it needs; to control precisely how the build is confugured and possibly ignore; some of the non-requested components.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2406,1,['patch'],['patch']
Deployability,"This patch hasn't landed in 5.0, so the LLVM upgrade overwrote this; patch without bringing in the upstreamed fixed version. Original commit message:. The default VFS for the FileManager should be created from the CompilerInvocation; instead of assuming there is none.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1274:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1274,3,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,This patch improves the previous check whether the current compiler; is using an incompatible libstdc++ version or not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/460:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/460,1,['patch'],['patch']
Deployability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3267,2,['patch'],['patch']
Deployability,"This patch installs python modules to python site-dir standard location (see some doc here:https://docs.python.org/2/library/site.html), see https://sft.its.cern.ch/jira/browse/ROOT-3316. It avoids to have to set PYTHONPATH when installing to a system folder /usr or /usr/local, and even the user site-dir ~/.local. Packaging may have to be reworked though (https://www.debian.org/doc/packaging-manuals/python-policy/ch-python.html#s-paths)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/73,3,"['install', 'patch']","['installing', 'installs', 'patch']"
Deployability,This patch instead prints an error with some useful debugging; information that should help identify the cause of this issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/777:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/777,1,['patch'],['patch']
Deployability,This patch is a backport of; https://reviews.llvm.org/rG638d84b60b7e7b7fa9099939ab4de2ec1e0c52c3. Fixes #8060.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8085:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/8085,1,['patch'],['patch']
Deployability,"This patch is a complementary chenge to root-project/root@d2c0929e0d It will turn off the isOutOfDate checks for transient files with different size on disk. This is quite dangerous but we are supposed to control the build environment which prepares the distributable binaries. This should fix the cmssw issue:. StdDictionaries/src/DataFormatsStdDictionaries/a/DataFormatsStdDictionaries_all_def.xml; input_line_8:1:22: error: file '/usr/include/linux/falloc.h' from the precompiled header has been overridden; ^; rootcling: /build/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc820/lcg/root/6.17.01/root-6.17.01/interpreter/llvm/src/tools/clang/include/clang/Serialization/Module.h:72: clang::serialization::InputFile::InputFile(const clang::FileEntry*, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed. The error tells us that `falloc.h` has different file size on the build machine and; on the distribution machine. We should probably rely on an environment variable; to turn off this diagnostic selectively and more the reponsibility if something goes; wrong to the distribution team. They should have better knowledge what is safe to; be ignored anyway. cc: @davidlange6, @oshadura, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4495:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4495,1,['patch'],['patch']
Deployability,"This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3291:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3291,2,['patch'],['patch']
Deployability,This patch is a workaround once again for the poor LCG design where we have all header files (and modulemaps) installed in the same folder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6104:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6104,2,"['install', 'patch']","['installed', 'patch']"
Deployability,This patch is backported from https://reviews.llvm.org/D91983; also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9398:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9398,1,['patch'],['patch']
Deployability,This patch is backported from https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297. cc: @smuzaffar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9380,1,['patch'],['patch']
Deployability,This patch is the only one I have around (the PR title is too generic because it pre-dates the introduction of more deprecated methods in RDataSource).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9521#issuecomment-1375930838:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9521#issuecomment-1375930838,1,['patch'],['patch']
Deployability,"This patch is to find out why this is still needed as we could not understand (see phab review). If this was mostly for unloading, then the test failures are telling us we might need this for something else. We want to build a clang-repl test out of that something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10696#issuecomment-1146203166:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10696#issuecomment-1146203166,1,['patch'],['patch']
Deployability,This patch is to fix a warning by duplicated definitions of SIGSYS in signal.h; and in TUnixSystem.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3287:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3287,1,['patch'],['patch']
Deployability,"This patch is to verify if we really need to store identifiers that; are namespace in GlobalModuleIndex, which greatly increase the maximum; memory pressure. Send this to trigger ROOT's CI so we can have a full; test, and will be closed if the direction is wrong. **No need for code review or merge**. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10969:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10969,1,['patch'],['patch']
Deployability,This patch makes it more difficult for people to avoid the 'automatic' memory; ownership done by TMemFile. It forces people to explicitly construct the; data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3977:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3977,1,['patch'],['patch']
Deployability,This patch makes the implementation reusable and ready to configure it such; that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3687:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3687,1,['patch'],['patch']
Deployability,This patch makes the include paths related to the given target. The side effect is that rootcling gets significantly less -I flags because cmake scans for the content of the INCLUDE_DIRECTORIES which now contains less and more relevant information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2529:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2529,1,['patch'],['patch']
Deployability,This patch might not be needed anymore (or should take a different shape) now that we have #5552,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4174#issuecomment-627328677:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4174#issuecomment-627328677,1,['patch'],['patch']
Deployability,This patch moves code which does similar things into standalone routines. This; way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3865,1,['patch'],['patch']
Deployability,This patch on a M1 machine is working.; The “periodic” example does not crash anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8746#issuecomment-916906421:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/8746#issuecomment-916906421,1,['patch'],['patch']
Deployability,This patch prepares the infrastructure to be able to work with a; global module index.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3444:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3444,1,['patch'],['patch']
Deployability,"This patch provides the method TGDMLWrite::WriteGDMLfile allowing to write the gdml corresponding to a volume hierarchy (like a detector). A geometry can be therefore exported in pieces, and the gdml parser was modified to avoid duplication of materials and other components upon reading.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1445:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1445,1,['patch'],['patch']
Deployability,"This patch reduces loaded libraries to half, nearly the same amount of pch's.; ; What I did is:; 1. Change DeclCollector and Transaction to collect clang::Decls, not; clang::Modules so that we still have decls information after finishing; deserialization.; 2. In TClingCallbacks, we check if the decl is ""isUsed()"" or not. If; not, we don't want to load corresponding libararies. ```; w/o; yuka@yukadesk:~/module-release$ lsof -p 25477 | grep so | wc -l; 88; with; yuka@yukadesk:~/module-release$ lsof -p 23676 | grep so | wc -l ; 37. PCH; yuka@yukadesk:~/root-release$ lsof -p 9664 | grep so | wc -l; 32. w/o; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes. with; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.05 seconds Cpu Time = 0.05 seconds; (TFile *) 0x55c8a399bfa0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.371789 seconds; sys time = 0.069116 seconds; res memory = 273.5 Mbytes; vir memory = 461.43 Mbytes. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2009,4,"['patch', 'release']","['patch', 'release']"
Deployability,This patch reduces the code bloat in TClingCallFunc trying to make the code more readable. cc: @sudo-panda,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10850:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10850,1,['patch'],['patch']
Deployability,This patch reduces the duplicate content in the GenVector.pcm thus reducing; the amount of decl merging.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2881:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2881,1,['patch'],['patch']
Deployability,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/96,3,['patch'],['patch']
Deployability,"This patch reimplements the broken patch in clang: ""Fix fwddecls of templates; with tmplt arg defauls coming from dictionaries (CMS / std::less). (#849)"". And partially reimplements:""Disable diags of dupe default args (func, templt); temporarily."". It also fixes the failing cling test Autoloading/AutoForwarding.C which; is visible when building root with -Dclingtest=On.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1268:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1268,2,['patch'],['patch']
Deployability,"This patch removes a wrongly implemented copy constructor, which lost the fUseGrad setting (if it was `true` in the original, the copy had `false`), effectively replacing it with the default copy ctor, which is perfectly fine here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6761:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6761,1,['patch'],['patch']
Deployability,"This patch removes an unnecessary assert, which is probably a left-over from early debugging. Asserts are a way to document certain runtime assumptions that the code makes. They should be only used if the code cannot run correctly if the condition is not fulfilled. This assert here does not serve that purpose. Starting the minimization iteration with an invalid initial state is fine as far as the algorithm is concerned, because it does not make use of that property. Edit: This is not a cosmetic change, because this assert triggers an abort in one of the iminuit tests if the code is compiled in debug mode, while the test runs fine in release mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6762:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/6762,2,"['patch', 'release']","['patch', 'release']"
Deployability,This patch seems to be a good performance enhancement (skipping some work that will not be used) but I am confused on how it helps with the increase in autoloading as I would have expected that in the case where this patch is active (i.e. autoloading is disabled) the net effect would have been the same (i.e. autoloading not activated). What am I missing?. i.e. this patch looks good to me as-is but does not seem to fully address the problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1864902070:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1864902070,3,['patch'],['patch']
Deployability,"This patch series should finish up the cleanup of `core/zip` (well, for now...). Beyond fixing up some variable names and compiler warnings, this separates out the implementation of reading the ROOT framing format (the magic 9 byte headers) from the inflate implementation for the old compression algorithm..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1254:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/1254,1,['patch'],['patch']
Deployability,"This patch set enabled C++17 (C++1z) support in ROOT. This will require at least GCC 7.1.0 (soon to be released, probably in a month). GCC 7 fully implements C++17 language features. CMSSW builds using GCC 6.2.0, GCC 6.3.0 and GCC 7.0.1 are all compiled with C++17. Note that biggest issues came from `TString` and `std::string` interaction due to `std::string_view` conversion operator in `TString`. This makes mixing `TString` and `std::string` painful. Thus to avoid ambiguity errors `std::string_view` operator is now marked as explicit. Otherwise in a lot of places I had to use `static_cast<>` to pick one of conversion operators (which makes the patch bigger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/522:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/522,3,"['patch', 'release']","['patch', 'released']"
Deployability,This patch should fix ROOT-10272.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4215:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4215,1,['patch'],['patch']
Deployability,This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/3873,2,['patch'],['patch']
Deployability,This patch should fix root-project/root#7125 and root-project/root#8959,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9056:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9056,1,['patch'],['patch']
Deployability,"This patch should simplify the cmssw modules setup. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4660:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4660,1,['patch'],['patch']
Deployability,This patch teaches cling to detect if the essential libraries have modulemaps and if necessary it adds an overlay around libc and std. This tightens the implementation and makes cling standalone easier to run in -fmodules mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4563:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4563,1,['patch'],['patch']
Deployability,This patch tells cmake not to call rootcling ... -m cppyy3_7.pcm as if cppyy has a dictionary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5447:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5447,1,['patch'],['patch']
Deployability,This patch tightens the implementation of the collection of modulemap files. It still gathers all 'system' modulemaps necessary for cling to run if -fno-implicit-module-maps is specified. This patch should unbreak our osx builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4562:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4562,2,['patch'],['patch']
Deployability,This patch was applied to civetweb repository: https://github.com/civetweb/civetweb/pull/652,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2584#issuecomment-418889152:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/2584#issuecomment-418889152,1,['patch'],['patch']
Deployability,This patch was developed as part of an llvm upgrade in 2015. This patch is not needed anymore considering that the LLVM JIT has advanced significantly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10964:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/10964,3,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-280571695:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-280571695,6,['patch'],"['patch', 'patches']"
Deployability,This patch was written by Wouter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9338#issuecomment-979267184:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/9338#issuecomment-979267184,1,['patch'],['patch']
Deployability,"This patch will not work out as it is for ROOT, since it has too many side effects. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-570200742:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-570200742,1,['patch'],['patch']
Deployability,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green (@chissg) this patch should resolve ROOT-10677.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5423:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5423,2,['patch'],['patch']
Deployability,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5424:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/pull/5424,2,['patch'],['patch']
Deployability,"This patch; https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694; had an unintended side-effect. The code to check the external gradient against the numerical gradient when `CheckGradient()` returns `true` is now never executed. Whether the user provides an analytical gradient or not, only this implementation is called; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L42; while the other implementation is now never executed; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L103. I suggest to revert https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694, because it also confused iminuit users, see https://github.com/scikit-hep/iminuit/issues/644. People usually use the analytical gradient only when the calculation of the likelihood is extremely expensive, and then it is undesired that some gradients are still computed numerically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8716:5,patch,patch,5,https://root.cern,https://github.com/root-project/root/issues/8716,1,['patch'],['patch']
Deployability,This patches should solve the observed failures in LCG/dev3 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3095#issuecomment-444213232:5,patch,patches,5,https://root.cern,https://github.com/root-project/root/pull/3095#issuecomment-444213232,1,['patch'],['patches']
Deployability,"This patchset should be ready now :rocket:! @Axel-Naumann, @hahnjo, @vgvassilev Could you review when you have some spare time?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565#issuecomment-1708291497:5,patch,patchset,5,https://root.cern,https://github.com/root-project/root/pull/13565#issuecomment-1708291497,1,['patch'],['patchset']
Deployability,"This prevents certain ugly error messages in case an exception is; thrown during a multi-thread event loop: before this patch, in that; case the thread's slot number was never returned to the RSlotStack; and it could result in some misleading error messages being printed on; screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6601:120,patch,patch,120,https://root.cern,https://github.com/root-project/root/pull/6601,2,['patch'],['patch']
Deployability,"This problem happens with. * RHEL+EPEL 9 (gcc 11.3.1); * Fedora 36/37 (gcc 12.2.1); * Fedora 38/39 (gcc 13.0.1). But not with:. * RHEL+EPEL 8 (gcc 8.5.0). It seems to be related to an issue that appeared also with the previous LLVM 9 based version of ROOT when gcc 10 was introduced in Fedora 33:; https://bugzilla.redhat.com/show_bug.cgi?id=1830472. From a comment in the above bugzilla report:; On aarch64 -moutline-atomics has been turned on by default, and those symbols are solely in libgcc.a, not in libgcc_s.so.*. The problem with the old ROOT version was fixed when the libgcc_s.so symlink in gcc was replaced by a linker script. This linker script is still there:. $ cat /usr/lib/gcc/aarch64-redhat-linux/12/libgcc_s.so ; /* GNU ld script; Use the shared library, but some functions are only in; the static library, so try that secondarily. */; OUTPUT_FORMAT(elf64-littleaarch64); GROUP ( /lib64/libgcc_s.so.1 libgcc.a ). With this linker scripts ROOT worked fine on aarch64 with gcc >= 10. But with the LLVM 13 update it broke again despite the linker script still being there. It still works on RHEL+EPEL 8 with gcc 8 which seems to suggest that it is related to -moutline-atomics which became the default on aarch64 in gcc 10. I hope this will give some ideas about how to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12294#issuecomment-1435904083:1021,update,update,1021,https://root.cern,https://github.com/root-project/root/issues/12294#issuecomment-1435904083,1,['update'],['update']
Deployability,"This problem is blocking ATLAS in adopting ROOT 6.28.x in production. . We use an ATLAS specific pyROOT script 'diff-root' that compares AODs branch-by-branch in our CI and integration tests that is not working in ROOT 6.28.x with the symptoms described above. The original error message of this script is:. ```; [..]; Py:diff-root INFO comparing [2932] leaves over entries...; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPKN4xAOD28CaloClusterBadChannelData_v1ES5_EEbT_S6_T0_' unresolved while linking symbol '__cf_295'!; You are probably missing the definition of bool std::__equal<false>::equal<xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*>(xAOD::CaloClusterBadChannelData_v1; const*, xAOD::CaloClusterBadChannelData_v1 const*, xAOD::CaloClusterBadChannelData_v1 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZSteqISt6vectorIN4xAOD28CaloClusterBadChannelData_v1ESaIS2_EESaIS4_EEbRKS0_IT_T0_ESA_ }) }; IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK20TrigRoiDescriptor_p3S4_EEbT_S5_T0_' unresolved while linking symbol '__cf_452'!; You are probably missing the definition of bool std::__equal<false>::equal<TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*>(TrigRoiDescriptor_p3 const*, TrigRoiDescriptor_p3 const*, Trig; RoiDescriptor_p3 const*); Maybe you need to load the corresponding shared library?; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN16__cppyy_internal8is_equalI30TrigRoiDescriptorCollection_p3S1_EEbRKT_RKT0_ }) }; [..] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406#issuecomment-1543771925:173,integrat,integration,173,https://root.cern,https://github.com/root-project/root/issues/12406#issuecomment-1543771925,1,['integrat'],['integration']
Deployability,"This problem was solved by putting the Debian 10 machine to a colder place. The timeouts where caused by CPU throttling because the machine ran to hot. While investigating this issue, I figured out that we could also speed the tests up by using the `-O3` optimization flag (as in `Release` mode). The `RelWithDebInfo` build type that is used in the nightlies implies `-O2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14306#issuecomment-1886686200:281,Release,Release,281,https://root.cern,https://github.com/root-project/root/issues/14306#issuecomment-1886686200,1,['Release'],['Release']
Deployability,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10635:495,Update,Update,495,https://root.cern,https://github.com/root-project/root/pull/10635,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request adds [VecCore](https://gitlab.cern.ch/VecGeom/VecCore) external project and build options to ROOT. Some comments:. Vc is used by VecCore, and since it is not relocatable, it must be built by the VecCore build system in order to avoid the situation in which VecCore finds a broken temporary installed version of Vc in ROOT's `${CMAKE_BINARY_DIR}`. It is perfectly fine to use a builtin VecCore with an externally installed Vc, however. Ideally, though, both should be externally installed. When both are enabled as builtins, they will get installed at the end along with ROOT into the final prefix, with correct configurations. I can not test the build on ARM, please let me know if Jenkins shows any failures. @xvallspl Since you have been using VecCore within ROOT, could you please try this branch out? I did not find any code currently in ROOT that uses VecCore. I've marked this as work in progress to be able to make sure everything is ok prior to merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/393:308,install,installed,308,https://root.cern,https://github.com/root-project/root/pull/393,5,"['configurat', 'install']","['configurations', 'installed']"
Deployability,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10652:654,configurat,configurations,654,https://root.cern,https://github.com/root-project/root/pull/10652,3,"['Update', 'configurat', 'update']","['Update', 'configurations', 'updated']"
Deployability,"This pull request adds the attribute `uint64_t iod_flags`, introduced in DAOS v2.0, to the definition of `daos_iod_t` in our mock implementation of libdaos for development. See: https://docs.daos.io/v2.0/doxygen/html/structdaos__iod__t.html. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11683:293,update,updated,293,https://root.cern,https://github.com/root-project/root/pull/11683,1,['update'],['updated']
Deployability,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10930:890,update,updated,890,https://root.cern,https://github.com/root-project/root/pull/10930,1,['update'],['updated']
Deployability,"This pull request completes the implementation of late model extension landed in https://github.com/root-project/root/pull/12376. In particular, it allows the model to be updated at any time, even if entries have been already filled. To do so, a new flag is added to the column description, `kFlagDeferredColumn`, which indicates that the index of the first on-disk element in the column is not zero (i.e., the column was added at a later point during write). If the flag is set, an additional 64bit integer ($firstElementIndex$) specifies the global index of the first stored element.; Compliant implementations should yield synthetic data pages made up of `0x00` bytes when trying to read back elements in the range $[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12676:171,update,updated,171,https://root.cern,https://github.com/root-project/root/pull/12676,1,['update'],['updated']
Deployability,"This pull request contains the changes to add initial support for RISC-V. It was developed during the past months on a StarFive VisionFive v1 that was kindly provided to me as part of the [RISC-V Developer Boards Program](https://riscv.org/risc-v-developer-boards/). More details about the challenges are available in the form of a [blog post on my website](https://www.hahnjo.de/blog/2023/01/28/riscv-higgs.html), a [presentation at the CaaS meeting in January](https://compiler-research.org/meetings/#caas_12Jan2023), and a [recording of that talk](https://youtu.be/3PWeLGrF41g). Please note that this PR only contains the necessary changes to the build system and ROOT's configuration files and utilities. Making the interpreter actually functional requires a number of backports to ROOT's copy of LLVM 13, that are available separately in a branch (https://github.com/hahnjo/root/tree/riscv-backports).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12351:674,configurat,configuration,674,https://root.cern,https://github.com/root-project/root/pull/12351,1,['configurat'],['configuration']
Deployability,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775:1517,update,updated,1517,https://root.cern,https://github.com/root-project/root/pull/10775,1,['update'],['updated']
Deployability,This pull request extends the description of a ROOT compression block in the RNTuple binary format specification. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13549:135,update,updated,135,https://root.cern,https://github.com/root-project/root/pull/13549,1,['update'],['updated']
Deployability,This pull request fixes / improves the documentation for the `TDataMember::GetXyzTypeName()` member functions. ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13250:132,update,updated,132,https://root.cern,https://github.com/root-project/root/pull/13250,1,['update'],['updated']
Deployability,"This pull request fixes a defect in the implementation of `RColumn::AppendV()`, which resulted in `FlushShadowWritePage()` not being called in certain circumstances. This in turn resulted in a [failed assertion](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RColumn.hxx#L87) in the next call to `SwapWritePagesIfFull()`:; ```; Fatal: fWritePage[otherIdx].IsEmpty() violated at line 87 of `/home/jalopezg/CERN/repos/root/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; ```. Given that `RPage::GrowUnchecked()` affects the number of elements returned by `RPage::GetNElements()`, the main write page should only be grown after the check for flushing the shadow page. ## Checklist:; - [X] tested changes locally; - [X] `ntuple_storage` test has been updated accordingly against this bug. This PR fixes #12742.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12743:763,update,updated,763,https://root.cern,https://github.com/root-project/root/pull/12743,1,['update'],['updated']
Deployability,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:370,update,updated,370,https://root.cern,https://github.com/root-project/root/pull/12542,1,['update'],['updated']
Deployability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. After this PR and https://github.com/root-project/root/pull/12853, the remaining tests that still fail are; ```; 1: Failed Tests (2):; 1: Cling :: CodeUnloading/AtExit.C; 1: Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; , which seem to have a common underlying cause: child interpreters are unable to resolve symbols defined in the parent. @hahnjo, @vgvassilev, do you have time to take a look?; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12855:1591,update,updated,1591,https://root.cern,https://github.com/root-project/root/pull/12855,1,['update'],['updated']
Deployability,"This pull request fixes a number of failures in cling tests. See below for the specific tests that are fixed by this PR. This is a backport of PR #12855.; ; ## Changes or fixes:; - SourceCall/ErrorMacro.C: the failure here is due to `diag::warn_falloff_nonvoid_function` not being promoted from warning to error. This should always be done, regardless of the ignoring state in `FilteringDiagConsumer`.; The failure became visible after merging https://github.com/root-project/root/pull/12654, given that `IgnorePromptDiags`; now defaults to 0 in `makeDefaultCompilationOptions()`.; - CodeUnloading/Macros.C: clang diagnostic verification was unhappy with the previous state of affairs. Move affected `expected-(warning|note)` markers to `Macros.h`.; - DynamicLibraryManager/callable_lib_L_AB_order1.C: `--enable-new-dtags` is needed in some toolchains to emit the new ELF dynamic tags, i.e. RUNPATH.; Per ld(1) manual page: `By default, the new dynamic tags are not created.`; - DynamicLibraryManager/cached_realpath.C: fetching the value of `errno` only makes sense after a failed call to; `realpath()`, i.e. if the return value of the function is NULL. Fix that. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12856:1216,update,updated,1216,https://root.cern,https://github.com/root-project/root/pull/12856,1,['update'],['updated']
Deployability,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10943:481,update,updated,481,https://root.cern,https://github.com/root-project/root/pull/10943,1,['update'],['updated']
Deployability,"This pull request fixes an issue introduced accidentally in PR #12751. In particular, the `.exe` suffix is not expected in non-Windows builds. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes some failures seen in the nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12785:194,update,updated,194,https://root.cern,https://github.com/root-project/root/pull/12785,1,['update'],['updated']
Deployability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. @vgvassilev After the changes proposed in this PR, _all_ the cling tests are passing. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12900:263,upgrade,upgrade,263,https://root.cern,https://github.com/root-project/root/pull/12900,2,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"This pull request fixes the remaining failing cling tests. See below for the concrete changes. This PR is a backport of #12900. ## Changes or fixes:; - Restore symbol lookup in child interpreters: prior to the upgrade to LLVM13, child interpreters used to also lookup symbols; in their parent. This PR introduces a `DefinitionGenerator` that allows for symbol lookup across different `IncrementalJIT` instances, which restores the old behavior.; This change fixes the following tests: CodeUnloading/AtExit.C, MultipleInterpreters/MultipleInterpreters.C.; - `cling::DeclExtractor::EnforceInitOrder`: do not use `ActOnReturnStmt()`, given that the scope returned by `m_Sema->getCurScope()` might be == m_Sema->TUScope which obviously is not a function scope; use `BuildReturnStmt()` instead.; This fixes the following crash:; ```; 1: https://github.com/root-project/root/pull/3 0x0000556b6a50389e clang::Sema::ActOnReturnStmt(clang::SourceLocation, clang::Expr*, clang::Scope*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0x225389e); 1: https://github.com/root-project/root/pull/4 0x0000556b69215c56 cling::DeclExtractor::EnforceInitOrder(llvm::SmallVector<clang::Stmt*>&) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf65c56); 1: https://github.com/root-project/root/pull/5 0x0000556b69216788 cling::DeclExtractor::ExtractDecl(clang::FunctionDecl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66788); 1: https://github.com/root-project/root/pull/6 0x0000556b69216a75 cling::DeclExtractor::Transform(clang::Decl*) (/home/jalopezg/CERN/repos/root/_build/interpreter/llvm/src/bin/cling+0xf66a75); ```. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12455.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12902:210,upgrade,upgrade,210,https://root.cern,https://github.com/root-project/root/pull/12902,2,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565:1442,patch,patch,1442,https://root.cern,https://github.com/root-project/root/pull/13565,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"This pull request fixes value printing of an expression of type `AutoType`, which ended up in calling the general fallback `printValue(const void *)`.; To call the appropriate overload, the deduced type should be used instead. ## Changes or fixes:; - Value printing of expressions of type `AutoType` use the deduced type instead.; - Update CREDITS.txt file. ## Checklist:; - [X] tested changes locally. This PR fixes [ROOT-9687](https://sft.its.cern.ch/jira/browse/ROOT-9687).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9949:333,Update,Update,333,https://root.cern,https://github.com/root-project/root/pull/9949,1,['Update'],['Update']
Deployability,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:1538,Update,Update,1538,https://root.cern,https://github.com/root-project/root/pull/10860,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12380:748,update,updated,748,https://root.cern,https://github.com/root-project/root/pull/12380,1,['update'],['updated']
Deployability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Convolutions can also be nested with each other and `NSUM`s. Note: this is the corrected version of PR #846.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/853:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/853,1,['integrat'],['integrates']
Deployability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Note that convolutions can be nested with each other and `NSUM`s. Also, if you are helping me merge, please note that this pull request contains within it the `TF1NormSum` code from PR #799. . **Edit:** Due to problems with the rebase, this PR has been closed. Please see PR #853 instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/846:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/846,1,['integrat'],['integrates']
Deployability,"This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details).; The implementation provided here also fixes issue #11732.; ; ## Changes or fixes:; - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays.; - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. ; - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`; - Add array unit tests. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11756:805,Update,Update,805,https://root.cern,https://github.com/root-project/root/pull/11756,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:1847,update,updated,1847,https://root.cern,https://github.com/root-project/root/pull/11480,1,['update'],['updated']
Deployability,"This pull request is a backport of PR #13534 (a NFC; makes the code more readable) and PR #13565 (actual fix for unloading member functions of templated classes).; The aforementioned PRs have been reviewed separately. ## Changes or fixes:; For the actual list of changes, see; - https://github.com/root-project/root/pull/13534; - https://github.com/root-project/root/pull/13565. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite . This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13618:430,update,updated,430,https://root.cern,https://github.com/root-project/root/pull/13618,1,['update'],['updated']
Deployability,This pull request is a backport of https://github.com/root-project/root/pull/12298 to the `v6-28-00-patches` branch. This fixes an unfortunate memory leak we introduced in https://github.com/root-project/root/pull/10775.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12377:100,patch,patches,100,https://root.cern,https://github.com/root-project/root/pull/12377,1,['patch'],['patches']
Deployability,"This pull request is a follow-up of #13197, improving the implementation of the internal class `RCollectionClassField::RCollectionIterableOnce`. ## Changes or fixes:; - Allow for faster iteration of elements in a collection whose elements are guaranteed to be contiguous in memory (e.g. a vector), i.e. the address of each element is known given the base pointer. For such cases, a non-zero value for the `stride` argument can be provided, thus avoiding an indirect call on each `operator++` call.; - Fix and clarify the use of read/write iterators on a proxied collection. The meaning of the `read` argument in many; TVirtualCollectionProxy functions is ""read from disk"", i.e. write in memory. This should improve the situation for the PR introducing support for `std::set<T>` fields (#12948). ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13235:846,update,updated,846,https://root.cern,https://github.com/root-project/root/pull/13235,1,['update'],['updated']
Deployability,"This pull request makes `UnsealPage()` a no-op for the page zero. To this end, the prototype of `RPageSource::UnsealPage()` had to be changed to return an `RPage`, per previous conversation. The buffer for the returned page is usually allocated using the `RPageAllocatorHeap`, and thus `RPageAllocatorHeap::DeletePage()` should be called to delete the returned object. Note that storage backends may still provide their own page unsealing code, e.g. for custom memory allocation. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12958.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13208:531,update,updated,531,https://root.cern,https://github.com/root-project/root/pull/13208,1,['update'],['updated']
Deployability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:1615,update,updated,1615,https://root.cern,https://github.com/root-project/root/pull/12279,1,['update'],['updated']
Deployability,"This pull request removes deprecated RDataFrame functions marked for removal in ROOT v6.30. These changes fix the warnings reported by the CI on pull requests targeting `master`, e.g. ; ```; .../build/include/ROOT/RCsvDS.hxx:112:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attributes]; .../build/include/ROOT/RSqliteDS.hxx:117:1: warning: unknown attribute 'REMOVE_THIS_NOW' ignored [-Wunknown-attribute]; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). Sibling PR in roottest: https://github.com/root-project/roottest/pull/931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11994:485,update,updated,485,https://root.cern,https://github.com/root-project/root/pull/11994,1,['update'],['updated']
Deployability,"This pull request sets up GitHub code scanning for this repository. Once the scans have completed and the checks have passed, the analysis results for this pull request branch will appear on [this overview](/root-project/root/security/code-scanning?query=pr%3A13007+tool%3ASonarCloud+is%3Aopen). Once you merge this pull request, the 'Security' tab will show more code scanning analysis results (for example, for the default branch). Depending on your configuration and choice of analysis tool, future pull requests will be annotated with code scanning analysis results. For more information about GitHub code scanning, check out [the documentation](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13007#issuecomment-1589877841:452,configurat,configuration,452,https://root.cern,https://github.com/root-project/root/pull/13007#issuecomment-1589877841,1,['configurat'],['configuration']
Deployability,"This pull request updates the description of `TClass:CopyCollectionProxy()`, which was (sort of) misleading. Probably the name of the member function is not descriptive either, but that's a different topic. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11066:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/11066,2,['update'],"['updated', 'updates']"
Deployability,"This pull request updates the release notes (sections ""Interpreter"", ""RNTuple"", and ""Build, Configuration, and Testing Infrastructure"") for the upcoming v6.28 release. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11871:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/11871,5,"['Configurat', 'release', 'update']","['Configuration', 'release', 'updated', 'updates']"
Deployability,This pull request updates the release notes for ROOT v6.30 (changes up to 25-Jul). ## Checklist:; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13315:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/13315,3,"['release', 'update']","['release', 'updated', 'updates']"
Deployability,This pull-request adds some missing information about RNTuple and the `latest-stable` branch in the v6.26 release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9905:106,release,release,106,https://root.cern,https://github.com/root-project/root/pull/9905,1,['release'],['release']
Deployability,This pull-request adds some missing information about RNTuple and the `latest-stable` branch in the v6.26 release notes. Backport of PR #9905.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9906:106,release,release,106,https://root.cern,https://github.com/root-project/root/pull/9906,1,['release'],['release']
Deployability,"This pull-request fixes a couple of issues related to `roottest` branch sync'ing. See issue #8783 for more information. ## Changes or fixes:; - Checkout the correct `roottest` head/tag if root is at `latest-stable`. If the current checked out branch is `latest-stable`, resolve it to the latest merged head/tag (i.e. second parent of latest-stable), and use that to clone `roottest`. These two commands illustrate the proposed behavior:; ```bash; $ git for-each-ref --points-at=latest-stable^2 --format=%(refname:short); v6-24-06; $ git clone -b v6-24-06 https://github.com/root-project/roottest.git; ```. - If the checked out ref in `root` is a tag (e.g. as a result of `$ git checkout v6-24-06`), `roottest` is not cloned at the expected revision. The previous implementation relied on `git rev-parse --abbrev-ref HEAD` to get the name of the checked out branch. While this works for branch heads, it fails for tags, i.e.; ```bash; $ git checkout v6-24-06; HEAD is now at 3b796f86a3 ""Update ROOT version files to v6.24/06.""; $ git rev-parse --abbrev-ref HEAD; HEAD; ```; The proposed solution in this case is to use `git for-each-ref` (or alternatively `git describe`), i.e.; ```bash; $ git for-each-ref --points-at=HEAD --format='%(refname:short)'; v6-24-06; ```. ## Checklist:; - [X] tested changes locally. This PR fixes #8783.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9025:986,Update,Update,986,https://root.cern,https://github.com/root-project/root/pull/9025,1,['Update'],['Update']
Deployability,This pull-request updates the release notes for v6.26 and the `CREDITS` file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9034:18,update,updates,18,https://root.cern,https://github.com/root-project/root/pull/9034,2,"['release', 'update']","['release', 'updates']"
Deployability,"This reminds me of https://sft.its.cern.ch/jira/browse/ROOT-8544 and https://sft.its.cern.ch/jira/browse/ROOT-8523 which is the end where fixed by a7b0b3e647409c7510b38198b08ff94fd079f857. Most likely the way the interpreter sets up the stack frames does not match the expectation of the exception handler (usually implemented in (g)libc). It is very plausible to be a problem similar to the one leading to the ""can not reallocate code"" errors. So I see two plausible path forward: (a) fix the reallocate code error and hopefully it also fix this (b) installed a debug version of (g)libc and trace/debug the exception handlers handling of this case ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-800461229:551,install,installed,551,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-800461229,1,['install'],['installed']
Deployability,"This replaces the homegrown MnRefCountedPointer with std::shared_ptr. Using standard components is better, of course, and clang's address sanitizer has reported issues with MnRefCountedPointer, another reason to do this. I removed obsolete implementations of copy constructors, copy assignment operators and destructors from the affected classes, that just implemented the default behaviour. The patch currently looks very complicated, because I used the new clang-formatted style, but will become much more easy to read when #6917 is accepted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6918:396,patch,patch,396,https://root.cern,https://github.com/root-project/root/pull/6918,1,['patch'],['patch']
Deployability,"This resolved the problem seen at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481; and fix #9899. The problem is the rules are applied to a data member nested inside an object nested inside; an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL,; since it is a new member compared to the layout on file, none of the objects; from the new; member down to the object on which the rules need to be run) are actually streamed and the; code gathering the information to run the rule got a bit lost ; it is likely (I am checking; as we speak) that in previous release the rule was not even attempted to be run ... which; might actually be the desired behavior in this specific case. The solution is to have GatherArtificialElements stop drilling through data members which; are not stored in the existing TTree.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9913:610,release,release,610,https://root.cern,https://github.com/root-project/root/pull/9913,1,['release'],['release']
Deployability,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830:156,patch,patch,156,https://root.cern,https://github.com/root-project/root/pull/10830,1,['patch'],['patch']
Deployability,"This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13754:274,update,updated,274,https://root.cern,https://github.com/root-project/root/pull/13754,1,['update'],['updated']
Deployability,"This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7995:540,patch,patches,540,https://root.cern,https://github.com/root-project/root/pull/7995,1,['patch'],['patches']
Deployability,"This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):; ```Python; import ROOT; x = ROOT.RooRealVar(""x"",""x"",1); d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)); w = ROOT.RooWorkspace(""w""); getattr(w, 'import')(d); w.Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7994:267,release,releases,267,https://root.cern,https://github.com/root-project/root/pull/7994,2,['release'],['releases']
Deployability,"This reverts ae9f8ae62553f9150fdee1f8739be6996d539694. While the patch makes sense to me, it breaks a lot of iminuit's tests. I cannot say why, but the results are very far off in some cases. I can provide a log of the failing tests as proof if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7085:65,patch,patch,65,https://root.cern,https://github.com/root-project/root/pull/7085,1,['patch'],['patch']
Deployability,This reverts commit 0363aed.; Use llvm-upstream commit instead!# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12831:158,update,updated,158,https://root.cern,https://github.com/root-project/root/pull/12831,1,['update'],['updated']
Deployability,"This reverts commit 1e8c04dd4beff8fc3d34cfd21e45358e85ae0f79.; In this commit, main idea was to use clang binary to retrieve information; about resource-clang-dir. Sadly ROOT patched LLVM/Clang is built; without clang binary and ROOT CMake crash then with next error:. -- /home/oksana/CERN_sources/llvm-clang-root/inst/bin; CMake Error at core/clingutils/CMakeLists.txt:80 (message):; Cannot determine clang resource directory path",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:175,patch,patched,175,https://root.cern,https://github.com/root-project/root/pull/4259,1,['patch'],['patched']
Deployability,"This reverts commit 2ee691da61ca51e4dd857ac8c88f778948fb49a7, it breaks configuration with the latest XRootD 5.6.3, for example already found in EPEL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14170:72,configurat,configuration,72,https://root.cern,https://github.com/root-project/root/pull/14170,1,['configurat'],['configuration']
Deployability,This reverts commit 5f7fd3aa6007c04e9d761816fea6d9b3146bd79a. clang.git patch id: 4412120,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/684:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/684,1,['patch'],['patch']
Deployability,"This reverts commit 8bb0a978a34e8f026a98642afe118e15d2356b6c. With ACLiC, which means if you do ""root.exe hsimple.C+"", ROOT generates; library for hsimple.C and execute this library instead of interpreting it at; runtime. This didn't work with our ""preloading modules"" infrastructure,; as it's not even interpreting. We can fix this by; 1. Adding NEEDED section when generating so files.; This is like a ""static linker"" solution, which means we'll change; rootcling_impl to properly add dependency libraries.; 2. Try to get callback from library; I think this makes ACLiC slower, so I like the 1st solution. However, for now, let's just revert this patch. edit:; https://gist.github.com/yamaguchi1024/644b7ee431fce460fb27c1402e92c903; https://gist.github.com/yamaguchi1024/d5a69666d1e10f0b2cfc176a07792420",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187:649,patch,patch,649,https://root.cern,https://github.com/root-project/root/pull/2187,1,['patch'],['patch']
Deployability,This reverts commit 8e355c2c565af555f75209ea0f1c2ce255f85cc6 from #10301. /cc @ellert @bellenot . # This Pull request:. ## Changes or fixes:. Sets `builtin_gtest` to `OFF` by default. It is already the case that `builtin_gtest` will be enabled automatically if `GTest` is not found. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12149:334,update,updated,334,https://root.cern,https://github.com/root-project/root/pull/12149,1,['update'],['updated']
Deployability,This reverts commit d6b623fff5a6d47ae66ec6db09dad26e987deb4e to no longer restrict numba versions to <0.6 which also unlocks support for numpy 2.0. The corresponding PR in rootest (https://github.com/root-project/roottest/pull/1162) updates the error style in the numba test to be backwards compatible. The numpy version is temporarily locked to below 2.0 to prevent both upgrades at the same time. - [X] tested changes locally. Fixes https://github.com/root-project/root/issues/16201,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16209:233,update,updates,233,https://root.cern,https://github.com/root-project/root/pull/16209,2,"['update', 'upgrade']","['updates', 'upgrades']"
Deployability,"This reverts commit eb52895d22aaad0a88d47b8e7bb18c7f47ff35be. As discussed, we should try to make clang parse input containing solely a function-style cast (e.g. `bool(i)`) as an expression instead of a declaration. In the interim, this patch is reverted to silence unwanted warnings in third-party code.; The PR https://github.com/root-project/root/pull/9695 will also be closed. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064) and reopens issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9706:237,patch,patch,237,https://root.cern,https://github.com/root-project/root/pull/9706,1,['patch'],['patch']
Deployability,"This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but; when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c; * Modules/explicit-build-missing-files.cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633:73,patch,patch,73,https://root.cern,https://github.com/root-project/root/pull/10633,1,['patch'],['patch']
Deployability,This seems fixed with the upgrade to LLVM 18 :partying_face:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14217#issuecomment-2448515619:26,upgrade,upgrade,26,https://root.cern,https://github.com/root-project/root/issues/14217#issuecomment-2448515619,1,['upgrade'],['upgrade']
Deployability,This seems like a good step. Thanks. What is the plan to allow for the 'install' to be relocatable (eg. Can the semantic of 'modulemap.overlay.yaml' be generated at run-time)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3179#issuecomment-447875548:72,install,install,72,https://root.cern,https://github.com/root-project/root/pull/3179#issuecomment-447875548,1,['install'],['install']
Deployability,"This seems to be the only other place where the configuration setting is checked:; https://github.com/root-project/root/blob/master/io/io/src/TFile.cxx#L4201-L4209. I think people may be annoyed by the `Info` messages and we'd need some static storage to store if the message has been emitted or not for the current process, so I'm not a fan of adding it (although I have no strong feelings about this either). I will add stripping of `file://` prefix so that the behavior is consistent (always redirect) then. I tried and didn't find an easy way to get `file://` to disable the redirection in the case of `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309927766:48,configurat,configuration,48,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309927766,1,['configurat'],['configuration']
Deployability,"This seems to be using the v6.24 patch rather than the main branch. This is fine :) but I need to find out the right cmssw/root commit to use in my build, can you remind me which one correspond to that build (and/or how to find out).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-823505499:33,patch,patch,33,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-823505499,1,['patch'],['patch']
Deployability,"This seems to have a valid use case. Given the release time frame, I'd feel much more comfortable in reverting this until we figure out the corner cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4716#issuecomment-571699512:47,release,release,47,https://root.cern,https://github.com/root-project/root/pull/4716#issuecomment-571699512,1,['release'],['release']
Deployability,"This seems to work :astonished: please note that I'm not at all an expert, this was just a guessed spot where PyROOT deviates from cppyy upstream. Empirically, only forwarding these two bits seems to make all tests pass, and looking at the patch I can find some logic in it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12857#issuecomment-1554907837:240,patch,patch,240,https://root.cern,https://github.com/root-project/root/pull/12857#issuecomment-1554907837,1,['patch'],['patch']
Deployability,"This set of patches makes THDFSFile work again. ; It also enables CMake build and allows linking against libhdfs3 (experimental native HDFS client implementation). Kind of major change: HDFS URLs are now absolute instead of relative as it was before. I.e. one have to use ""hdfs:///user/username/dir1/file2.root"" notation to access file in the home directory. ; This makes HDFS URLs somewhat standard in the sense that they could be used interchangeably between ROOT and Hadoop API and command-line utilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/94:12,patch,patches,12,https://root.cern,https://github.com/root-project/root/pull/94,1,['patch'],['patches']
Deployability,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:71,patch,patch,71,https://root.cern,https://github.com/root-project/root/pull/5359,1,['patch'],['patch']
Deployability,This should be code also for next ROOT 6.26 release. Next JSROOT version will have many changes and will be applied only after 6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9336:44,release,release,44,https://root.cern,https://github.com/root-project/root/pull/9336,1,['release'],['release']
Deployability,"This should be discussed here https://github.com/VcDevel/Vc/pull/254 or here https://github.com/VcDevel/Vc/issues/253 - we want to apply the patch from Vc, whatever it will be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833#issuecomment-666280231:141,patch,patch,141,https://root.cern,https://github.com/root-project/root/pull/5833#issuecomment-666280231,1,['patch'],['patch']
Deployability,"This should be fine to go in as is. We can later use the method I suggested on mattermost, but it will require a major overhaul to how ROOT uses LLVM/Clang:; ```cmake; find_package(LLVM 5.0 REQUIRED); find_package(Clang REQUIRED); find_program(CLANG_EXECUTABLE clang HINTS ""${LLVM_TOOLS_BINARY_DIR}""). execute_process(COMMAND ${CLANG_EXECUTABLE} -print-resource-dir; OUTPUT_VARIABLE CLANG_RESOURCE_DIR OUTPUT_STRIP_TRAILING_WHITESPACE); ```; This correctly finds the resource directory for me (i.e. finds the Clang matching LLVM 5.0.x).; Clang alone is not smart enough to find itself with a version. When using only `find_package(Clang 5.0 REQUIRED)`, I get:; ```; CMake Error at CMakeLists.txt: (find_package):; Could not find a configuration file for package ""Clang"" that is compatible; with requested version ""5.0"". The following configuration files were considered but not accepted:. /usr/lib/llvm/8/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/7/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/6/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/5/lib64/cmake/clang/ClangConfig.cmake, version: unknown; /usr/lib/llvm/4/lib64/cmake/clang/ClangConfig.cmake, version: unknown; ```; (yes, I have all those installed...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3273#issuecomment-455169593:731,configurat,configuration,731,https://root.cern,https://github.com/root-project/root/pull/3273#issuecomment-455169593,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,This should be fixed with yesterday's release of 6.30.04; Please reopen if you find still an issue ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1920740298:38,release,release,38,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1920740298,1,['release'],['release']
Deployability,"This should be landed with allmodules and library loading patch, closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1835#issuecomment-388297331:58,patch,patch,58,https://root.cern,https://github.com/root-project/root/pull/1835#issuecomment-388297331,2,['patch'],['patch']
Deployability,This should be more accurate than the current check. Follow up to #3096 and will remove a patch for the conda package.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3413:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/3413,1,['patch'],['patch']
Deployability,This should fix the regressed runtime_cxxmodules on osx. Patch by Alexander Penev(@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5302:57,Patch,Patch,57,https://root.cern,https://github.com/root-project/root/pull/5302,1,['Patch'],['Patch']
Deployability,This should reduce the amount of patches we have in clang making the PCH; relocatable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/893:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/893,1,['patch'],['patches']
Deployability,"This slightly changes lookup order: Namely, the system-folder ""/usr/include/postgresql""; is now preferred over ""/usr/include/"" even if both container libpq-fe.h.; This finds the correct path on a standard Gentoo installation, where ""/usr/include/postgresql""; is a symlink to the folder with all include-files for the user-selected postgresql-version,; while ""/usr/include/libpq-fe.h"" is a single symlink provided for backwards-compatibility. Since ROOT uses also e.g. ""pg_config.h"", selecting ""/usr/include/"" over ""/usr/include/postgresql""; leads to failure on Gentoo. I hope this will not break any other existing setups but I don't see how it should. ; That should prevent any downstream-patching which Gentoo is doing right now for old-style configure once it has moved to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/159:212,install,installation,212,https://root.cern,https://github.com/root-project/root/pull/159,2,"['install', 'patch']","['installation', 'patching']"
Deployability,This supersedes https://github.com/root-project/root/pull/6248 and should fix the case when JupyROOT is installed on Python directories. Uses the same solution implemented by @eguiraud for `libROOTPythonizations`:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L145-L146,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6312:104,install,installed,104,https://root.cern,https://github.com/root-project/root/pull/6312,1,['install'],['installed']
Deployability,"This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763:98,install,installed,98,https://root.cern,https://github.com/root-project/root/pull/3763,1,['install'],['installed']
Deployability,"This teaches again the IncrementalExecutor to emit only one module at a time. In the old MCJIT days, the API worked with module sets and cling assumed llvm's jit infrastructure is moving in this direction. LLVM 5.0 moves away from this concept and works with single llvm::Modules. This patch will make the upgrade to LLVM 5.0 smoother.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050:286,patch,patch,286,https://root.cern,https://github.com/root-project/root/pull/1050,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"This tell you how you can select an ID which is inside a fragment, as it is not as doing something is the main page; But this does not help you to duplicate ID, or select sub element in a fragment; This also tell you that you can use prefix for fragment, but it is not recommended to uses that; And almost everything in the post is depreciated; it is also saied : ; - Avoid concatenating ID parts or relying on the syntax of the global ID, as mentioned in the comment as well as in the documentation . . Which is in favor of my solution, not relying on UI5 gobalID but on custom generated ones that will never change in any update",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4613#issuecomment-549335808:624,update,update,624,https://root.cern,https://github.com/root-project/root/pull/4613#issuecomment-549335808,1,['update'],['update']
Deployability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:65,install,install,65,https://root.cern,https://github.com/root-project/root/pull/15272,4,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:; https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:; https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14596:31,patch,patch,31,https://root.cern,https://github.com/root-project/root/pull/14596,1,['patch'],['patch']
Deployability,This turned out to be a problem in the prerelease version of gcc 11.2 and was fixed by an internal patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9285#issuecomment-969493009:99,patch,patch,99,https://root.cern,https://github.com/root-project/root/issues/9285#issuecomment-969493009,1,['patch'],['patch']
Deployability,This updates Minuit2 build options and uses proper configuration for OpenMP and MPI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/1699,2,"['configurat', 'update']","['configuration', 'updates']"
Deployability,This updates the checked in version of the TMVA User's guide to reflect the state of the tex sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2465:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/2465,1,['update'],['updates']
Deployability,"This updates the following cppyy packages to the indicated versions:; - cppyy: cppyy-1.5.3; - cppyy_backend: clingwrapper-1.10.3; - CPyCppyy: CPyCppyy-1.9.3. This incorporates a fix for the issue reported here:; https://bitbucket.org/wlav/cppyy/issues/160/memoryregulator-and-the-deletion-of-python. and also this PR:; https://bitbucket.org/wlav/cppyy-backend/pull-requests/21/fix-logic-and-silence-wparentheses-warning. There are still two remaining Cppyy issues not solved yet by this update, which affect a few tests:; https://bitbucket.org/wlav/cppyy/issues/136/item-assignment-not-working-in-templated; https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4386:5,update,updates,5,https://root.cern,https://github.com/root-project/root/pull/4386,2,['update'],"['update', 'updates']"
Deployability,"This warning was first seen in rootbench:. ```c++; root-benchmark/BUILDTYPE/Release/COMPILER/gcc62/LABEL/performance-cc7/build/include/ROOT/TDFActionHelpers.hxx:745:34:; warning: parameter ‘slot’ set but not used [-Wunused-but-set-parameter]; void SetBranches(unsigned int slot, BranchTypes&... values, StaticSeq<S...> /*dummy*/); ^~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1811:76,Release,Release,76,https://root.cern,https://github.com/root-project/root/pull/1811,1,['Release'],['Release']
Deployability,"This was applied from a .patch from the PR GooFit/Minuit2#1 from @gudlaugu. All credit/blame should be directed to @gudlaugu, I'm just the middleman. This patch is useful because MPI 3 no longer even includes support for the C++ bindings. I've added one small obvious fix to warnings, but otherwise all credit/blame should be directed to @gudlaugu. Original discussion in #1689.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1843:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/1843,2,['patch'],['patch']
Deployability,"This was applied from a `.patch` from the PR GooFit/Minuit2#1 from @gudlaugu. All credit/blame should be directed to @gudlaugu, I'm just the middleman. This patch is useful because apparently MPI 3 no longer even includes support for the C++ bindings. Once #1680 is merged, this will be much easier to test. For future reference, the ugly use of environment variables instead of CMake option for MPI options in the main ROOT::Minuit2 CMakeLists.txt needs to be fixed, and also could be moved to FindMPI instead of the current hardcoded method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1689:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/pull/1689,2,['patch'],['patch']
Deployability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:203,patch,patch,203,https://root.cern,https://github.com/root-project/root/pull/2764,1,['patch'],['patch']
Deployability,"This was in the context of build failures with Fedora 39 (e.g. [here](https://github.com/root-project/root/actions/runs/7555016304/job/20569070965?pr=14340)).I was hoping to escape the issue of Numba not yet supporting 3.12 by using the release candidate 0.59.0rc1 which is already available on PyPI and supports Python 3.12. But apparently the syntax used on the pip CLI is not the same as the one used in the requirements file. And anyway, this was a hack. The real fix should be having a way to tell our tests ""if this package is not available on the machine, skip the test"" (if the package is not available for good reasons like the one highlighted here). Closing this PR, will think about a better way to handle this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14371#issuecomment-1898034942:237,release,release,237,https://root.cern,https://github.com/root-project/root/pull/14371#issuecomment-1898034942,1,['release'],['release']
Deployability,This was mentioned recently again on the forum:; https://root-forum.cern.ch/t/precompiled-root-broke-after-installing-librange-v3-dev-on-ubuntu/61603,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001#issuecomment-2337625978:107,install,installing-librange-,107,https://root.cern,https://github.com/root-project/root/issues/13001#issuecomment-2337625978,1,['install'],['installing-librange-']
Deployability,"This was naturally available before commit 92807f3591 (backported in commit 281a162ace) from LLVM's configuration file. Fixes #13597, applies https://github.com/root-project/root/pull/13598 to `v6-28-00-patches` with the old, pre-monorepo path.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13599:100,configurat,configuration,100,https://root.cern,https://github.com/root-project/root/pull/13599,2,"['configurat', 'patch']","['configuration', 'patches']"
Deployability,This was naturally available before commit 92807f3591 from LLVM's configuration file. Fixes #13597,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13598:66,configurat,configuration,66,https://root.cern,https://github.com/root-project/root/pull/13598,1,['configurat'],['configuration']
Deployability,"This was the intent, the regex was simply broken and did not take the trailing versioning part into account.; Now, -patches as minor "".99"", otherwise as expected.; This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3864:116,patch,patches,116,https://root.cern,https://github.com/root-project/root/pull/3864,2,['patch'],['patches']
Deployability,This webpage will have to be updated as well https://root.cern/about/versioning/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15164#issuecomment-2061560283:29,update,updated,29,https://root.cern,https://github.com/root-project/root/pull/15164#issuecomment-2061560283,1,['update'],['updated']
Deployability,"This will be required for future LLVM upgrades that rely on a common `cmake/` directory next to `clang/` and `llvm/`. ---. To have any chance at reviewing this change, the mechanical moving is in the first commit and the other two commits are the actual changes (build system, then `llvm-diff` workflow). I will squash the commits on merge because the state after the first commit obviously won't build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13049:38,upgrade,upgrades,38,https://root.cern,https://github.com/root-project/root/pull/13049,1,['upgrade'],['upgrades']
Deployability,This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807:62,install,installed,62,https://root.cern,https://github.com/root-project/root/pull/3807,1,['install'],['installed']
Deployability,"This works now after the upgrade to LLVM 16:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 11 2023, 13:58:33 |; | From heads/master@v6-31-01-496-g020287b02c |; | With g++ (GCC) 13.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] __cplusplus; (long) 202002; root [1] #include <source_location>; root [2] auto loc = std::source_location::current();; root [3] loc; (std::source_location &) @0x7fde927b2000; root [4] loc.file_name(); (const char *) ""ROOT_prompt_2""; root [5] loc.line(); (unsigned int) 1; root [6] loc.column(); (unsigned int) 12; root [7] loc.function_name(); (const char *) ""void __cling_Un1Qu31(void *)""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12993#issuecomment-1850191503:25,upgrade,upgrade,25,https://root.cern,https://github.com/root-project/root/issues/12993#issuecomment-1850191503,1,['upgrade'],['upgrade']
Deployability,"This would be very nice to have in 6.14, as well, since that will be the first release with Minuit2 standalone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2029#issuecomment-389840816:79,release,release,79,https://root.cern,https://github.com/root-project/root/pull/2029#issuecomment-389840816,1,['release'],['release']
Deployability,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:1425,configurat,configuration,1425,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,1,['configurat'],['configuration']
Deployability,"Through continuous changes in TFile/TDirectoryFile functionality,; sub-directory support in TXMLFile was lost. Now reintroduced again. Make similar changes for TSQLFile (only for historical reasons, seems to be nobody using it). Reformat source code with clang format",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1386:8,continuous,continuous,8,https://root.cern,https://github.com/root-project/root/pull/1386,1,['continuous'],['continuous']
Deployability,Thx for the discussion! I updated the PR to deprecate the ctor in question for future removal as suggested.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15451#issuecomment-2102307507:26,update,updated,26,https://root.cern,https://github.com/root-project/root/pull/15451#issuecomment-2102307507,1,['update'],['updated']
Deployability,Title object always created - even when empty.; But if drawn - it must be hidden to remove TPave decoration. Fix problem with TFrame when `THStack` and `TMultiGraph` are drawn - frame object is required. Update JSROOT with recent changes in master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15718:204,Update,Update,204,https://root.cern,https://github.com/root-project/root/pull/15718,1,['Update'],['Update']
Deployability,To answer my own question:. The test needed to be updated and was updated by https://github.com/root-project/roottest/pull/180. Several PR and incremental failed due to the (unavoidable) lag between this PR being merged in and the roottest PR being merged in.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-390737103:50,update,updated,50,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-390737103,2,['update'],['updated']
Deployability,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501:209,update,updated,209,https://root.cern,https://github.com/root-project/root/pull/15501,1,['update'],['updated']
Deployability,"To be able compile with `-Dcxxmodules=ON`, one has to avoid `${CMAKE_BINARY_DIR}/include` in all include paths. Otherwise compiler can find same include (like `TString.h`) in ROOT source directories and in `${CMAKE_BINARY_DIR}/include`. But many builtins using `${CMAKE_BINARY_DIR}/include` to install their headers and therefore library appends that path to public include paths. . This PR tries to copy `VDT` and `TBB` includes into `ginclude` directory and use this directory for the compilation. . Solves compilation problem on Linux platform with `cxxmodules` enabled. Probably same adjustment could be done for other builtins",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5445:294,install,install,294,https://root.cern,https://github.com/root-project/root/pull/5445,1,['install'],['install']
Deployability,To be checked with the latest cppyy in the first place. Perhaps this will be fixed once we upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7686#issuecomment-1925201193:91,upgrade,upgrade,91,https://root.cern,https://github.com/root-project/root/issues/7686#issuecomment-1925201193,1,['upgrade'],['upgrade']
Deployability,"To be clear this was failing from the original LLVM update, not because of; https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/628#issuecomment-307480582:52,update,update,52,https://root.cern,https://github.com/root-project/root/pull/628#issuecomment-307480582,1,['update'],['update']
Deployability,To be done for this PR:; - Update math/unuran directory. and for next iteration try to move components to use only ROOT_STANDARD_LIBRARY_PACKAGE():; genvector & smatrix.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2737:27,Update,Update,27,https://root.cern,https://github.com/root-project/root/pull/2737,1,['Update'],['Update']
Deployability,"To be honest, my interpretation of https://github.com/root-project/root/pull/13850#issuecomment-1867519153 is that most failures are solved by the upgrade to ROOT 6.30 / LLVM 13. We will not be backporting to ROOT 6.26 / LLVM 9 and I haven't see confirmation that this fixes anything on top of LLVM 13 or LLVM 16, so it's not on the top of my priority list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1934528168:147,upgrade,upgrade,147,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1934528168,1,['upgrade'],['upgrade']
Deployability,To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15934:34,install,installed,34,https://root.cern,https://github.com/root-project/root/pull/15934,1,['install'],['installed']
Deployability,"To elaborate based on the motivation to remove `--src-root` from `llvm-config` (https://github.com/llvm/llvm-project/commit/c061892fcdbdfe46884c54a7a7bfe6df54d1df12): The returned path *might* sometimes work if LLVM was built and installed on the same machine. The likelier setup is wanting to use distributed binaries of LLVM, in which case `--src-root` doesn't exist anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13366#issuecomment-1660519259:230,install,installed,230,https://root.cern,https://github.com/root-project/root/pull/13366#issuecomment-1660519259,1,['install'],['installed']
Deployability,To enable setting default draw option before drawing a graph like TH1::SetOption. Fixes https://github.com/root-project/root/issues/14539. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14686:234,update,updated,234,https://root.cern,https://github.com/root-project/root/pull/14686,1,['update'],['updated']
Deployability,"To include the version changer the only file to be modified is htmlheader.html. I included there the code you sent me. When I install the doc locally on my machine, with this modified header, I get the following picture:. <img width=""871"" alt=""Screenshot 2020-06-22 at 13 04 35"" src=""https://user-images.githubusercontent.com/4697738/85281410-396aab80-b48a-11ea-9506-068ea491aac8.png"">. Two issues:; 1. the layout is not so good seems to me. The border around the button is round on top and does not show on bottom. I guess no border or a symmetrical one might look better (just a matter of taste).; 2. the ""version changing"" does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863#issuecomment-647452104:126,install,install,126,https://root.cern,https://github.com/root-project/root/pull/5863#issuecomment-647452104,1,['install'],['install']
Deployability,"To protect against a division by zero? The original patch is from @pzhristov, so he might have more to say.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5410#issuecomment-617036536:52,patch,patch,52,https://root.cern,https://github.com/root-project/root/pull/5410#issuecomment-617036536,1,['patch'],['patch']
Deployability,"To reproduce:. - Install protobuf from homebrew (e.g. 24.3 in our case); - Compile your own version of protobuf 21.9; - Pass `-DProtobuf_DIR=<installation path of protobuf 21.9>` to cmake. ROOT build will fail because despite the fact you passed the correct Protobuf_DIR and it was picked up correctly, as one can check in the CMakeCache.txt, somehow /opt/homebrew/include ends up in the include chain and overrides $Protobuf_DIR/include in the case of the compilation of the .pb via protobuf_generate_cpp as used in `tmva/sofie_parsers/CMakeLists.txt` .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1850679328:17,Install,Install,17,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1850679328,2,"['Install', 'install']","['Install', 'installation']"
Deployability,"To separate those we have now, a simple way is to use this add-on: https://addons.mozilla.org/en-US/firefox/addon/grayscale-browsing/. It will show https://root.cern.ch/doc/master/classTColor.html in grayscale mode. ![image](https://user-images.githubusercontent.com/10653970/117177407-47d76280-add1-11eb-9081-9bac9d4b4bd5.png). You can immediately see that the color scale in rainbow is not continuous, which is then misleading for colour-blinded in a 2D plot (not so much in a 3D surf like this one). kCMYK is also not great because it's dark, then lighter, then half-dark again. Others like kAquamarine have almost no contrast, it would be almost impossible to see sth there. So that would be a quick way to separate them. The idea is that the grayscale should be as proportional as possible, and monotonously increasing or decreasing. Unless it is symmetrical, then it is fine to have white in the borders and black in the centre (for example for example an axis that goes between -40 degrees and + 40 degrees, the 0 has a meaning). I guess one could do something similar for just removing red, green or blue from the image using GIMP, but for the moment with just grayscale it would be already a step.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-832849033:392,continuous,continuous,392,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-832849033,2,['continuous'],['continuous']
Deployability,"To summarize the current intent of the PR and my understanding of the comments here. The PR targets at limiting cling to find modulemap files all over the place. We have advanced the infrastructure so that this is feasible. If we pick up all possible modulemaps on the include paths we have less control and rootcling goes in the opposite direction -- to be able to control much better the environment in which it works (in a previous PRs we have limited the set of flags it can take). As a side effect of this it will fix the module redefinition errors seen in the LCG builds and when ROOT is installed. IIUC the comments are reasonable and suggesting to move away from the ROOT static configuration for the essential directories such as the etcdir, libdir, incdir and so on. IMO, this not part of the PR even though it touches these functions. I support fixing these issues, however, if we want to fix them we will have to write quite a bit of utility functions which already exist in libLLVMSupport. A potential way forward (outside of this PR) is to make libLLVMSupport available to FoundationUtils and then we can use getMainExecutable and so on to make ROOT detect its essential folders at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553#issuecomment-543193289:594,install,installed,594,https://root.cern,https://github.com/root-project/root/pull/4553#issuecomment-543193289,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"To understand why it's not trying, the build configuration is important. For instance, the unix authentication plugin won't be built if `XRDCL_LIB_ONLY` is true, which the builtin XRootD might be setting internally. I don't think this is a bug in XRootD, just a misconfiguration on the ROOT side. When I try from my machine, it goes via Kerberos authentication when I have a ticket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420383260:45,configurat,configuration,45,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420383260,1,['configurat'],['configuration']
Deployability,"To use C++ modules during runtime we need to generate a modulemap; and install it alongside the ROOT headers. However, right now; we need to turn on cxxmodules to generate a modulemap, which would; force experiments to fulfill all the depndencies that cxxmodules; brings with it (that is, a modern clang that can build ROOT with C++; modules). This patch untangles the modulemap generation from the cxxmodules; option, so that we always generate a modulemap even when cxxmodules; is turned off. We now also install the modulemap alongside; the ROOT headers. No functional change for normal ROOT expected here, as the modulemap; will just be ignored without having runtime C++ modules enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/700:71,install,install,71,https://root.cern,https://github.com/root-project/root/pull/700,3,"['install', 'patch']","['install', 'patch']"
Deployability,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:381,release,release,381,https://root.cern,https://github.com/root-project/root/issues/7284,1,['release'],['release']
Deployability,"Today github updated VS and now the default compiler is 'MSVC 19.28.29333.0', which has this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-731214145:13,update,updated,13,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-731214145,1,['update'],['updated']
Deployability,"Today, I discovered that `ROOT::TestSupport` does not always work as intended: Consider a ROOT7 build without IMT, and the unit tests `tree/ntuple/v7/test/ntuple_extended` and `tree/ntuple/v7/test/ntuple_storage`. Both call `ROOT::EnableImplicitMT()` which results in a warning (this should be fixed separately). `TestSupport.cxx` has a `ForbidDiagnostics noDiagCheckerInstance` that should call `SetErrorHandler` and fail the test if there is an unexpected diagnostic. It turns out this works fine for `ntuple_extended` (which is currently failing in configurations without IMT), but not for `ntuple_storage`. The reason seems to be that `ntuple_storage` doesn't use any other code from `ROOT::TestSupport`, and because it's a static library (since https://github.com/root-project/root/pull/9528) the linker can just skip it. (This was different for the object library before, there you link in the individual object files.). I'm not sure what the best solution is: Is it possible and reasonable to install object libraries? If not, an ugly approach is to emit an undefined symbol from `TestSupport.hxx` that will force the linker to add the static library...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12828:552,configurat,configurations,552,https://root.cern,https://github.com/root-project/root/issues/12828,2,"['configurat', 'install']","['configurations', 'install']"
Deployability,"Too controversial change for the upcoming release, unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311#issuecomment-2105669975:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/14311#issuecomment-2105669975,1,['release'],['release']
Deployability,"Topics to discuss:; - generating the author list from release notes is wrong, as I just realized. Those are just those people who contributed to that version, but generally don't include earlier authors. Can we use ""ROOT team"" as author? Or should we take everyone from `README/CREDITS`? Or should we skip it, at the cost of a lack of (computer-) identifiable attributions?; - we want people who dislike using Zenodo to [cite the paper](https://github.com/root-project/root/#cite). Actually, very few cite Zenodo. How do we embed that paper in `CITATION.cff`, with [references](https://github.com/citation-file-format/citation-file-format/blob/main/README.md#references-optional)? What does the BibTeX file looks like for that?. Happy to hear @jspaaks 's comments here - I do realize that some of these issues are non-technical, but I bet you've encountered them before :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876332047:54,release,release,54,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876332047,1,['release'],['release']
Deployability,Transforms\Vectorize\LLVMVectorize.dir\Release\LoopVectorize.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Vectorize\LLVMVectorize.vcxproj] ; - [2022-08-05T03:25:36.092Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\LoopFuse.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.dir\Release\LoopFuse.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-08-05T03:25:36.092Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Target\NVPTX\NVPTXImageOptimizer.cpp : fatal error C1083: Cannot open compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.dir\Release\NVPTXImageOptimizer.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Target\NVPTX\LLVMNVPTXCodeGen.vcxproj] ; - [2022-08-05T03:25:36.092Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\MergeFunctions.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.dir\Release\MergeFunctions.obj': No space left on device [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-08-05T03:25:36.368Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGFast.cpp : fatal error C1085: Cannot write compiler generated file: 'C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.dir\Release\ScheduleDAGFast.obj': No space left on device [C:\bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11121#issuecomment-1206003442:1482,Release,Release,1482,https://root.cern,https://github.com/root-project/root/pull/11121#issuecomment-1206003442,1,['Release'],['Release']
Deployability,"Trivial file tst.py; ```; import ROOT ; e = ROOT.RooCategory; ```. execute as . ```; python -Werror tst.py; ```. one gets:. ```; build$ python -Werror tst.py; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/tst.py"", line 1, in <module>; import ROOT; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. (I run my tests with `-Werror flag`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902#issuecomment-906174560:238,RELEASE,RELEASE,238,https://root.cern,https://github.com/root-project/root/issues/8902#issuecomment-906174560,1,['RELEASE'],['RELEASE']
Deployability,Trouble with CMake Integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:19,Integrat,Integration,19,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Integrat'],['Integration']
Deployability,"Try this script. Result shown in file:; [test_saveas.pdf](https://github.com/root-project/root/files/12340003/test_saveas.pdf); ```; #if __has_include(""spl_save.cc""); #include ""spl_save.cc""; #define SPL_TEST 1; #else; double spl_save(double x) { return 0; }; #endif. //--------------------------------------------------------------------; void errin_spline3() {; //--------------------------------------------------------------------. double Xmin = 0.075, Xmax = 0.375;; vector<double> y {; 1.00415, 0.975639, 0.983931, 0.995963, 0.99217, 0.991772, 1.00196; };. TSpline3* spline3 = new TSpline3("""",Xmin,Xmax,y.data(),y.size(),; ""b2e2"",0.,0.);. #ifndef SPL_TEST; spline3->SaveAs(""spl_save.cc"");; printf(""Spline is saved.""; "" Restart this function in root a second time.\n"");; return;; #endif. TCanvas* c1 = new TCanvas(""c1"",""splines"",0,0,900,700);; c1->cd();; gPad->SetGrid();. auto Lft = [](double* x,double* p) {; return spl_save(x[0]);; };; TF1* ft = new TF1(""Test TSpline.SaveAs() function"",Lft,0.05,0.40,0);; ft->SetLineColor(kRed);; ft->SetLineWidth(2);; ft->GetYaxis()->SetRangeUser(0.8,1.2);; ft->Draw(""L"");. spline3->SetLineColor(kBlue);; spline3->SetLineWidth(2);; spline3->SetMarkerColor(kBlue+2);; spline3->SetMarkerStyle(20);; spline3->SetMarkerSize(0.75);; spline3->Draw(""LCP SAME"");. TLegend* leg = new TLegend(0.60,0.75,0.88,0.88);; leg->AddEntry(spline3, ""original TSpline3"", ""LP"");; leg->AddEntry(ft, ""saved in file"", ""L"");; leg->Draw();. gPad->Update();; }; ```; Method TSpline.SaveAs() writes code with an error.; On line `if (klow < fNp-1) klow = fNp-1;` the ''<"" sign must be replaced with the "">"" sign.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13441#issuecomment-1678187182:1462,Update,Update,1462,https://root.cern,https://github.com/root-project/root/issues/13441#issuecomment-1678187182,1,['Update'],['Update']
Deployability,Try to fix build of llvm in Release mode for multi-configuration gene…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4400:28,Release,Release,28,https://root.cern,https://github.com/root-project/root/pull/4400,2,"['Release', 'configurat']","['Release', 'configuration']"
Deployability,Try to simply update xrootd version (by M.K.Simon),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:14,update,update,14,https://root.cern,https://github.com/root-project/root/pull/8963,2,['update'],['update']
Deployability,Try with `cat /etc/lsb-release`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009978691:23,release,release,23,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009978691,1,['release'],['release']
Deployability,Trying to build the head of `v6-28-00-patches` (currently 281a162ace) to reproduce against.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13461#issuecomment-1679261835:38,patch,patches,38,https://root.cern,https://github.com/root-project/root/issues/13461#issuecomment-1679261835,1,['patch'],['patches']
Deployability,"Trying to wrap up here: I do not think we have instructions to build ROOT on top of an external clang, even if the patch version of clang is built with changes we need. At the moment, we do not have at disposal enough effort to work on such a recipe. Therefore, the reply to this inquiry, unfortunately, is that there is no well tested, blessed recipe to build external llvm for ROOT. And that would be enough to close the item, in my opinion. . Of course, @cgleggett , we would warmly invite you to contribute such a recipe, helping you in the process as best as we can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250#issuecomment-2038229517:115,patch,patch,115,https://root.cern,https://github.com/root-project/root/issues/14250#issuecomment-2038229517,1,['patch'],['patch']
Deployability,"Turns out the `arrow` dependency is not installed anywhere, so this code can't be tested for now. To discuss with the RDataFrame developers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15312#issuecomment-2071932846:40,install,installed,40,https://root.cern,https://github.com/root-project/root/pull/15312#issuecomment-2071932846,1,['install'],['installed']
Deployability,"Turns out this is a bug in libcxx. I have commented here: https://reviews.llvm.org/D119036#4067105 . If you could patch libcxx, we should either apply https://reviews.llvm.org/D119468 which is wrong or drop the line `export std_config` from `/products/clang/v14_0_6c/Linux64bit+3.10-2.17/include/c++/v1/module.modulemap` as I suggested upstream.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1397698299:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1397698299,1,['patch'],['patch']
Deployability,"Two implementations are provided, i.e. for Python versions older than 3.8, for which PEP 587 is not in force, and newer. # This Pull request:. ## Changes or fixes:; Implements TPython::ExecFile for Python 3. ## Checklist:. - [v] tested changes locally; - [] updated the docs (if necessary). This PR fixes #9058",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13532:258,update,updated,258,https://root.cern,https://github.com/root-project/root/pull/13532,1,['update'],['updated']
Deployability,"Two important notes:; * The problem (with the reduced macro) does not appear with `CLING_JITLINK=0` (I tried the other way around yesterday because I forgot that we turn JITLink on by default for all macOS).; * It seems to be related to the small relocation code model; we already had problems related to this in the past on AArch64 and not setting it either on all macOS seems to fix the reduced macro and the one `test-stressgraphics-interpreted`:; ```diff; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; index 0fb4b59ba6..d8fbf13ce5 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; @@ -402,9 +402,9 @@ CreateTargetMachine(const clang::CompilerInstance& CI, bool JITLink) {; // Set the small code except for macOS on AArch64 - it results in relocation; // targets that are out-of-range.; // TODO: Investigate / report upstream and re-evaluate after a future LLVM; // upgrade.; - if (!(TT.isOSBinFormatMachO() && TT.getArch() == Triple::aarch64)); + if (!TT.isOSBinFormatMachO()); JTMB.setCodeModel(CodeModel::Small);; }; ; return cantFail(JTMB.createTargetMachine());; ```; Now I can submit this as an emergency measure, and maybe I should, but it would be really great to investigate why this is needed at all (as hinted in the comment, upstream sets the small code model whenever it turns on JITLink) and how it is related to switching the pass manager...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1931533735:1023,upgrade,upgrade,1023,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1931533735,1,['upgrade'],['upgrade']
Deployability,"Two observations:; - clang-format: I prefer not to change the structure of the code, to respect the previous formatting.; - Timescales: this should be in release for 6.30",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13664#issuecomment-1724938440:154,release,release,154,https://root.cern,https://github.com/root-project/root/pull/13664#issuecomment-1724938440,1,['release'],['release']
Deployability,Two optimizations fro the ci:; 1) Use zstd with 8 threads to compress ROOT builds for nightlies and releases.; 2) Use gzip compression level 2 instead of level 6 to compress artifacts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15802:100,release,releases,100,https://root.cern,https://github.com/root-project/root/pull/15802,1,['release'],['releases']
Deployability,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:376,rolling,rolling,376,https://root.cern,https://github.com/root-project/root/pull/12449,2,"['rollback', 'rolling']","['rollback', 'rolling']"
Deployability,Two tweaks for release notes. [Skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5875:15,release,release,15,https://root.cern,https://github.com/root-project/root/pull/5875,1,['release'],['release']
Deployability,Two updates to clingwrapper for memory management,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16014:4,update,updates,4,https://root.cern,https://github.com/root-project/root/pull/16014,1,['update'],['updates']
Deployability,"UDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. ; - [2021-02-05T16:35:12.117Z] ghprbPullLongDescription=The cling argument `--cuda-path` is necessary if the CUDA SDK is not installed under `/usr/local/cuda`, e.g. on HPC systems. The integration tests are also updated to handle a CUDA SDK under a non-standard location.\r\n\r\n# Additional diagnostic\r\n\r\nTo find the bug, I also add some diagnostic functions for the PTX compiler.\r\n\r\n1. Now error messages are prefixed in CUDA mode to better decide which of the two compiler pipelines is causing the error.\r\n\r\nexample\r\n```\r\n- example before:\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\nerror: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\nerror: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n\r\n- example after:\r\ncling: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\ncling-ptx: error: cannot find libdevice for sm_20. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.\r\ncling-ptx: error: cannot find CUDA installation. Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.\r\n```\r\n\r\n2. Now, the class `cudaIncrementalDeviceCompiler` available through reflection via the `gCling` object. . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106007/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.cling.parsing.roottest_cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6707#issuecomment-774182513:2655,install,installation,2655,https://root.cern,https://github.com/root-project/root/pull/6707#issuecomment-774182513,1,['install'],['installation']
Deployability,"UPDATE:; The RDataFrame created in each task can now be modified with the correct entry range of the task via an internal function. The internal representation in case of an RDataFrame with no data source has been modified to store a pair of integers indicating the range, instead of only one integer. This is only for internal purposes, the public API is unchanged. See https://github.com/root-project/roottest/pull/923 for test changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843:0,UPDATE,UPDATE,0,https://root.cern,https://github.com/root-project/root/pull/11843,1,['UPDATE'],['UPDATE']
Deployability,"Uh, disappointing. My repro at the top of the issue seems to be fixed:. ```; /tmp python; Python 3.10.1 (main, Dec 18 2021, 23:53:45) [GCC 11.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> print(ROOT.gSystem.GetIncludePath()); -I$ROOTSYS/include -I""/home/blue/ROOT/master/install/etc/"" -I""/home/blue/ROOT/master/install/etc//cling"" -I""/home/blue/ROOT/master/install/etc//cling/plugins/include"" -I""/home/blue/ROOT/master/install/include/"" -I""/usr/include/python3.10""; >>> ROOT.vector('int')(); <cppyy.gbl.std.vector<int> object at 0x55a00ceb0a00>; >>> print(ROOT.gSystem.GetIncludePath()); -I$ROOTSYS/include -I""/home/blue/ROOT/master/install/etc/"" -I""/home/blue/ROOT/master/install/etc//cling"" -I""/home/blue/ROOT/master/install/etc//cling/plugins/include"" -I""/home/blue/ROOT/master/install/include/"" -I""/usr/include/python3.10""; ```. (no build directory in the include paths anymore)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-1010086140:333,install,install,333,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-1010086140,8,['install'],['install']
Deployability,"Umm yes, now I realize what is going wrong: `MAKEEXE` and `MAKESHAREDLIB` just call `g++` (or `clang++` for that matter) from the `PATH`, not caring that I'm trying to use a compiler installed to a non-standard directory... And then obviously GCC 8.5.0 defines the wrong `cplusplus` value with `c++2a` (we're lucky it knows about that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747#issuecomment-1531451988:183,install,installed,183,https://root.cern,https://github.com/root-project/root/issues/12747#issuecomment-1531451988,1,['install'],['installed']
Deployability,Unable to install pytest on MacOS with python2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686:10,install,install,10,https://root.cern,https://github.com/root-project/root/issues/6686,1,['install'],['install']
Deployability,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: cms-sw/cmsdist#6314 (comment). With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. Get TClass for pair(type1, vector<type2>>; ** At this point the dictionary for vector<type2> is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the StreamerInfo for the TClass for vector<type2>, let's call it c1 but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the vector<type2>; Some other operation requires the loading of the library that contains the dictionary for vector<type2>; ** SInce c1 exists, it is replaced by the dictionary generated TClass for vector<type2>, let's call it c2; ** Part of this replacement is to transfer c1's StreamerInfo into c2 (after 'reseting` it's state); Then the StreamerInfos are copied form the input file to the output; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling AddReadAction. An STL collection's TClass (like c1 and c2)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the StreamerInfo is created it has internally a pointer to c1. The deficiency is that whenc1 is replaced by c2 and then deleted, the StreamerInfo was not updated and thus the later building of the StreamerInfo was using a stale pointer to c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6768:158,update,updates,158,https://root.cern,https://github.com/root-project/root/pull/6768,4,['update'],"['updated', 'updates']"
Deployability,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-721115953. With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. * Get `TClass` for `pair(type1, vector<type2>>`; ** At this point the dictionary for `vector<type2>` is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the `StreamerInfo` for the `TClass` for `vector<type2>`, let's call it `c1` but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the `vector<type2>`; * Some other operation requires the loading of the library that contains the dictionary for `vector<type2>`; ** SInce `c1` exists, it is replaced by the dictionary generated TClass for `vector<type2>`, let's call it `c2`; ** Part of this replacement is to transfer `c1`'s StreamerInfo into `c2` (after 'reseting` it's state); * Then the `StreamerInfos` are copied form the input file to the output ; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling `AddReadAction`. An STL collection's TClass (like `c1` and `c2`)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:195,update,updates,195,https://root.cern,https://github.com/root-project/root/issues/6767,1,['update'],['updates']
Deployability,Unfortunately I can't install Win64 version of Root 6.26 becasue of virus detection. See error during unzip and Btdefender report. ![error1](https://user-images.githubusercontent.com/75624059/193414303-f5b7d9c8-4837-431d-b7e2-e7f04c94e34b.JPG); ![error2](https://user-images.githubusercontent.com/75624059/193414309-ece88fe7-b75c-47ce-ac39-620b567ba7b3.JPG),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11473:22,install,install,22,https://root.cern,https://github.com/root-project/root/issues/11473,1,['install'],['install']
Deployability,"Unfortunately I had to comment out `#include haddCommandLineOptionsHelp.h` and the corresponding print, I don't know why that header could not be found - the ""standard"" hadd executable is the one installed in lxplus (CERN) and to be honest I have no idea how that is compiled. In any case, I'm using default options, I just noticed that it changed (101) with respect to what was set before (1), can this play a role? Did you manage to merge input files eventually? Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14910#issuecomment-1985416325:196,install,installed,196,https://root.cern,https://github.com/root-project/root/issues/14910#issuecomment-1985416325,1,['install'],['installed']
Deployability,"Unfortunately if we could reproduce this issue ourselves, on one of our private machines, we would have started the conversation itself very differently. :frowning: Unfortunately I'm afraid that setting anything up on OpenStack would just be a waste of time right now. @simonmichal, could you give us a complete list of system libraries/packages that XRootD (or at least the version of XRootD we have under `/cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib`) makes use of? With any educated guesses necessary. Then we would give this list to our grid experts, to check if they can see any difference in what is installed on the nodes on which @rdschaffer's jobs are working correctly, and on ones on which they don't. Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757849582:482,Install,InstallArea,482,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757849582,2,"['Install', 'install']","['InstallArea', 'installed']"
Deployability,"Unfortunately it still doesn't work for me, neither setting `SITECONFIG_PATH` nor installing a grid certificate (as explained in comment that was meanwhile deleted?) and then running `voms-proxy-init` :cry: is there a way to reproduce the problem without requiring that file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1683956727:82,install,installing,82,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1683956727,1,['install'],['installing']
Deployability,"Unfortunately not, from pyroot it still inserts the nullptr checks when instantiating template functions. ```; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""). import time. ROOT.gInterpreter.Declare(""""""; template <typename T>; void templateTest() {}; """"""). print(""sleep""); time.sleep(5); # I stop here manually and insert the breakpoint; print(""instantiating template""). ROOT.templateTest[""double""]; ```. ```; gdb python; GNU gdb (GDB) 11.1; Copyright (C) 2021 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from python...; (No debugging symbols found in python); (gdb) run testnullptr.py; Starting program: /opt/venv/bin/python testnullptr.py; warning: Error disabling address space randomization: Function not implemented; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:813,configurat,configuration,813,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,2,['configurat'],['configuration']
Deployability,"Unfortunately the patch was not complete and broke other use case, so it has been reverted in v6.24 while we work on it :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-867785300:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-867785300,1,['patch'],['patch']
Deployability,"Unfortunately this change was not fortunate for every single external. :frowning:. As we found in the ATLAS externals, setting [CMP0135](https://cmake.org/cmake/help/latest/policy/CMP0135.html) to `NEW` with autoconf/automake based externals is a very bad idea. Because it has a very high chance of making those projects want to re-generate their configurations with automake. But if the build machine doesn't have **exactly** the same version of automake installed that the external package was generated with originally, you run into issues like:. ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; ```. As it happens, we'll have to patch ROOT for this in: https://gitlab.cern.ch/atlas/atlasexternals/-/merge_requests/976",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11246#issuecomment-1334900909:347,configurat,configurations,347,https://root.cern,https://github.com/root-project/root/pull/11246#issuecomment-1334900909,3,"['configurat', 'install', 'patch']","['configurations', 'installed', 'patch']"
Deployability,"Unfortunately this is the sort of issue that could have been easier to track/discuss on JIRA. But since ROOT doesn't use that anymore, here we go... My suspicion is that the grid nodes in question put some locally installed XRootD version high up in the library search path of the jobs. I don't know how they would do that, but that's my educated guess. ATLAS analysis releases using ROOT 6.18/04 (https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.65/External/ROOT/CMakeLists.txt) use XRootD 4.10.0 (https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.65/External/XRootD/CMakeLists.txt). While releases using ROOT 6.16/00 (https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.60/External/ROOT/CMakeLists.txt) used XRootD 4.8.4 (https://gitlab.cern.ch/atlas/atlasexternals/-/blob/1.0.60/External/XRootD/CMakeLists.txt). My educated guess is that the XRootD version force fed into your jobs @rdschaffer is binary compatible with XRootD 4.8.4, but not with 4.10.0 (or newer). However we definitely need some follow up from our grid experts on this. @rodwalker would it be possible to look at the problematic jobs / grid nodes for this?. Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744287499:214,install,installed,214,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744287499,3,"['install', 'release']","['installed', 'releases']"
Deployability,"Unfortunately, TBB_2020_U1 (latest version provided on lcg) does not solve the problem :(; I have installed TBB 2020.02 - only it suppress warnings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5840#issuecomment-641872482:98,install,installed,98,https://root.cern,https://github.com/root-project/root/pull/5840#issuecomment-641872482,1,['install'],['installed']
Deployability,"Unfortunately, this broke things on macOS beta occasionally:; https://github.com/root-project/root/actions/runs/9177178669/job/25234168412; Note that this doesn't happen every time, to it might as well be an inconsistency in the node configuration; ```txt; 2024-05-21T15:30:21.5677370Z Undefined symbols for architecture arm64:; 2024-05-21T15:30:21.5679910Z ""_AddExtensionBlock"", referenced from:; 2024-05-21T15:30:21.5680410Z _get_gif_saved_images in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5681620Z ""_DGifCloseFile"", referenced from:; 2024-05-21T15:30:21.5682200Z _ASImage2gif in libAfterImage.a[75](export.o); 2024-05-21T15:30:21.5682650Z _ASImage2gif in libAfterImage.a[75](export.o); 2024-05-21T15:30:21.5683040Z _gif2ASImage in libAfterImage.a[77](import.o); 2024-05-21T15:30:21.5683320Z ""_DGifGetExtension"", referenced from:; 2024-05-21T15:30:21.5683610Z _get_gif_saved_images in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5684190Z ""_DGifGetExtensionNext"", referenced from:; 2024-05-21T15:30:21.5684600Z _get_gif_saved_images in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5685300Z ""_DGifGetImageDesc"", referenced from:; 2024-05-21T15:30:21.5685720Z _get_gif_image_desc in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5686420Z ""_DGifGetLine"", referenced from:; 2024-05-21T15:30:21.5686680Z _get_gif_saved_images in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5689120Z ""_DGifGetRecordType"", referenced from:; 2024-05-21T15:30:21.5689450Z _get_gif_saved_images in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5689740Z ""_DGifOpen"", referenced from:; 2024-05-21T15:30:21.5690010Z _open_gif_read in libAfterImage.a[80](ungif.o); 2024-05-21T15:30:21.5691170Z ""_EGifCloseFile"", referenced from:; 2024-05-21T15:30:21.5691590Z _ASImage2gif in libAfterImage.a[75](export.o); 2024-05-21T15:30:21.5694000Z ""_EGifOpenFileHandle"", referenced from:; 2024-05-21T15:30:21.5694590Z _ASImage2gif in libAfterImage.a[75](export.o); 2024-05-21T15:30:21.5695030Z _ASImage2gif in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15191#issuecomment-2122979638:234,configurat,configuration,234,https://root.cern,https://github.com/root-project/root/pull/15191#issuecomment-2122979638,1,['configurat'],['configuration']
Deployability,"Unfortunately, when trying to create a TCanvas, a break occurs every time. Both master and 6-28-00-patches have this problem. @Axel-Naumann . root.exe(5184,0x1effe9b40) malloc: Heap corruption detected, free list is damaged at 0x600001c18da0; *** Incorrect guard value: 0; root.exe(5184,0x1effe9b40) malloc: *** set a breakpoint in malloc_error_break to debug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1527005980:99,patch,patches,99,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1527005980,1,['patch'],['patches']
Deployability,Unify builtin PCRE configuration for UNIX and Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3284:19,configurat,configuration,19,https://root.cern,https://github.com/root-project/root/pull/3284,1,['configurat'],['configuration']
Deployability,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11183:1341,update,updated,1341,https://root.cern,https://github.com/root-project/root/pull/11183,1,['update'],['updated']
Deployability,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");; > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227#issuecomment-846080791:342,update,update,342,https://root.cern,https://github.com/root-project/root/pull/8227#issuecomment-846080791,2,['update'],['update']
Deployability,"Unsplit fields update the extra type info block in the RNTuple meta-data, which needs to be explicitly merged. Also, the unsplit field revealed a lifetime issue with the output model, which is now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15729:15,update,update,15,https://root.cern,https://github.com/root-project/root/pull/15729,1,['update'],['update']
Deployability,"Until we have solved this problem, you either have to use an older ROOT release prior to 6.30.00, or build root from source with `-Dfftw3=ON`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14162#issuecomment-1839071558:72,release,release,72,https://root.cern,https://github.com/root-project/root/issues/14162#issuecomment-1839071558,1,['release'],['release']
Deployability,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16042:1722,Update,Update,1722,https://root.cern,https://github.com/root-project/root/pull/16042,1,['Update'],['Update']
Deployability,"Up to now there was no way to draw open marker symbols or marker symbols consisting of lines with higher linewidths than the default 1.; I looked into several ways to implement this feature and at the end just added additional marker smbols above the current maximum of 50 with wider lines as proposed by @couet in #4721 . This example plot demonstrates the feature:; ![c2](https://user-images.githubusercontent.com/5320187/72336265-b7977a80-36c0-11ea-8d25-3e3aa0697211.png). Please note that I tested the feature as far as I could. However, I don't have a ROOT installation on Windows or a Mac, so I could not test the corresponding implementations which is why I consider further tests (and especially a build test) mandatory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4772:562,install,installation,562,https://root.cern,https://github.com/root-project/root/pull/4772,1,['install'],['installation']
Deployability,Update --help option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5206:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5206,1,['Update'],['Update']
Deployability,Update .gitignore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4412:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4412,1,['Update'],['Update']
Deployability,"Update 6.22 Release notes for TMVA , Math and Histogram Library",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5783:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5783,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,Update 6.32 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15611:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15611,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update CMake policy settings to use CMake version 3.4.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/958:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/958,1,['Update'],['Update']
Deployability,Update ChangeLabel and GetNlabels helps,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10290:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10290,1,['Update'],['Update']
Deployability,Update Davix builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1766:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1766,1,['Update'],['Update']
Deployability,Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14066:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14066,1,['Update'],['Update']
Deployability,Update Doxyfile to doxygen 1.9.3 (doxygen -u),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9111:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9111,1,['Update'],['Update']
Deployability,Update Doxyfile to doxygen version 1.9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8061:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8061,1,['Update'],['Update']
Deployability,Update Doxyfile to the version of doxygen ROOT is using ie: 1.9.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13204:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13204,1,['Update'],['Update']
Deployability,Update Enable If pattern in GenVector Vc test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/431:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/431,1,['Update'],['Update']
Deployability,Update FSF address,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/270:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/270,1,['Update'],['Update']
Deployability,Update FindArrow.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5405:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5405,1,['Update'],['Update']
Deployability,Update FindCFITSIO.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3942:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3942,1,['Update'],['Update']
Deployability,Update FindZSTD.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14078:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14078,1,['Update'],['Update']
Deployability,Update GitHub Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11677:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11677,1,['Update'],['Update']
Deployability,"Update IncrementalCUDADeviceCompiler.cpp - change string comparison to exact match for ""-include""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16196:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16196,1,['Update'],['Update']
Deployability,Update JSROOT after 7 release. Fix several minor issues in RCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10526:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10526,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update JSROOT and ui5 code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3885:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3885,1,['Update'],['Update']
Deployability,"Update JSROOT and ui5 code, v6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3886:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3886,1,['Update'],['Update']
Deployability,Update JSROOT release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1447:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1447,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update JSROOT with `TScatter`. Also add batch mode flag when creating JSON. Data may differ when JSON created for image production or for; interactive drawing. Like interactively TF1 can fail and request new; data with saved buffers. In batch mode saved buffer must be there; to be able do fallback immediately.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13180:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13180,1,['Update'],['Update']
Deployability,"Update JSROOT, fix small typo in geometry viewer code [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8970:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8970,1,['Update'],['Update']
Deployability,"Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7299:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7299,1,['Update'],['Update']
Deployability,Update JsMVA imports,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15427:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15427,1,['Update'],['Update']
Deployability,Update LLVM build type setup for multi-configuration generators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4348:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4348,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,Update LinkDef3.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/762:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/762,1,['Update'],['Update']
Deployability,Update MakeProject to use unique_ptr rather than auto_ptr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3861:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3861,1,['Update'],['Update']
Deployability,Update Math links,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7166:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7166,1,['Update'],['Update']
Deployability,Update PR of Oliver,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/182:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/182,1,['Update'],['Update']
Deployability,Update RCompressionSettings struct with enum value of ZSTD default c…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4839:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4839,1,['Update'],['Update']
Deployability,Update RDF code owners,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2261:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2261,1,['Update'],['Update']
Deployability,Update README.AUTH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14206:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14206,1,['Update'],['Update']
Deployability,Update README.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6534:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6534,1,['Update'],['Update']
Deployability,Update ROCCurve.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6984:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6984,1,['Update'],['Update']
Deployability,Update ROOT and Cling to LLVM 16,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13273,1,['Update'],['Update']
Deployability,Update ROOT and Cling to LLVM18,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15696:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15696,1,['Update'],['Update']
Deployability,Update ROOT's R interface for Rcpp 1.0.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16075,1,['Update'],['Update']
Deployability,Update ROOT's llvm to llvm13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10294,1,['Update'],['Update']
Deployability,Update R__DEPRECATED macros.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1820:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1820,1,['Update'],['Update']
Deployability,Update Release notes (startup speedup) [NOBUILDS],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4311:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4311,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,Update RooFit AD to support ATLAS and CMS Higgs combinations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15616,1,['Update'],['Update']
Deployability,Update RootMacros.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6306:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6306,2,['Update'],['Update']
Deployability,Update TBB to 2020_U1 version [gcc10] [skip-ci] [ROOT-10816],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5840:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5840,1,['Update'],['Update']
Deployability,Update TBranchElement docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2354:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2354,1,['Update'],['Update']
Deployability,Update TColor enum since rainbow is one word,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11850:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11850,1,['Update'],['Update']
Deployability,Update TGProgressBar.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6561:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6561,1,['Update'],['Update']
Deployability,Update TGraph2D properties before painting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13919:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13919,1,['Update'],['Update']
Deployability,Update TGraph2D properties before painting [6.30],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13920:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13920,1,['Update'],['Update']
Deployability,Update THStack documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15766:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15766,1,['Update'],['Update']
Deployability,Update TLatex.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9211:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9211,1,['Update'],['Update']
Deployability,Update TMVA BDT parallelisation PR. This is un update of PR #723,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1781:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1781,2,"['Update', 'update']","['Update', 'update']"
Deployability,"Update TMVA UsersGuide for new DeepLearning features (MethodDL, CNN, RNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5710,1,['Update'],['Update']
Deployability,Update TMVA documentation for CV + more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1851,1,['Update'],['Update']
Deployability,Update TMVA scripts for ROOT6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/53:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/53,1,['Update'],['Update']
Deployability,Update TPad.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6506:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6506,2,['Update'],['Update']
Deployability,Update TProfile2D.cxx - copy all attributes of axis to projection histograms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16194:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16194,1,['Update'],['Update']
Deployability,Update TSelector doc according to https://sft.its.cern.ch/jira/browse/ROOT-3992,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7650:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7650,1,['Update'],['Update']
Deployability,Update User's Guide pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/7279,1,['Update'],['Update']
Deployability,Update Vc to version 1.3.0 in CMake externals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/360,1,['Update'],['Update']
Deployability,Update Vc version to 1.3.2 and suppress warnings by including it as a system header,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/608:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/608,1,['Update'],['Update']
Deployability,Update Vincenzo's credits info,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5698:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5698,1,['Update'],['Update']
Deployability,Update XRootD version to cope with new compilers (gcc 8.1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1974:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1974,1,['Update'],['Update']
Deployability,Update `CladDerivator.h` to the pushforward/pullback model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/12021,1,['Update'],['Update']
Deployability,Update `clad` to master to investigate regression in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15875:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15875,2,['Update'],['Update']
Deployability,Update `geom/geodemo.C` and `geom/csgdemo.C` tutorials [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11911:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11911,1,['Update'],['Update']
Deployability,Update `root` header to current year.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/132:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/132,1,['Update'],['Update']
Deployability,Update a warning message when using RooFit::NumCpu with strategy=3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5735,1,['Update'],['Update']
Deployability,Update all TH1 derived class version number.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3619,3,['Update'],['Update']
Deployability,Update also contributor list adding the GSOC and summer student of 2021; that have contributed to the TMVA developments,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9776:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9776,1,['Update'],['Update']
Deployability,Update and improve description for fitting histograms ans graphs.; Add missing documentation for the Minimizer options in ROOT::Math::MinimizerOptions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9631:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9631,1,['Update'],['Update']
Deployability,"Update and move content into the main group page, remove duplicated pages. ```; Co-authored-by: Bertrand Bellenot <Bertrand.Bellenot@cern.ch>; Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>; ```. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9608:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9608,1,['Update'],['Update']
Deployability,Update and replace PR #723 fixing the conflict with master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1781:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1781,1,['Update'],['Update']
Deployability,Update and simplify some code for C++14,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9071:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9071,1,['Update'],['Update']
Deployability,Update basket optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/238,1,['Update'],['Update']
Deployability,Update bernstein,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4506:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4506,1,['Update'],['Update']
Deployability,Update bindings/jupyroot/README.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/16086,1,['Update'],['Update']
Deployability,Update boost.modulemap for boost 1.75,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7568:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7568,1,['Update'],['Update']
Deployability,Update build badges to point to new Jenkins instance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/742:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/742,1,['Update'],['Update']
Deployability,Update build guide for cling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/15972,1,['Update'],['Update']
Deployability,Update build system threads related variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6405:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6405,1,['Update'],['Update']
Deployability,Update builtin Davix and OpenSSL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1845:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1845,1,['Update'],['Update']
Deployability,Update builtin Davix back to version 0.6.7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1907:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1907,1,['Update'],['Update']
Deployability,Update builtin LZMA version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3290:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3290,1,['Update'],['Update']
Deployability,Update builtin OpenSSL and TBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3895:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3895,1,['Update'],['Update']
Deployability,Update builtin VecCore to 0.7.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7064:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7064,1,['Update'],['Update']
Deployability,Update builtin VecCore to 0.7.0 for ROOT 6.22,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7147:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7147,1,['Update'],['Update']
Deployability,Update builtin XRootD to v5.4.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9967,1,['Update'],['Update']
Deployability,Update builtin XRootD to version 4.9.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3868:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3868,1,['Update'],['Update']
Deployability,Update builtin openssl to 1.0.2q,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3071:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3071,1,['Update'],['Update']
Deployability,Update builtin version of OpenSSL to 1.0.2q,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3072:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3072,1,['Update'],['Update']
Deployability,Update builtin version of Vc to 1.4.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3004:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3004,1,['Update'],['Update']
Deployability,Update builtin version of VecCore to 0.5.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2641:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2641,1,['Update'],['Update']
Deployability,Update builtin version of XRootD to 4.8.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3067:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3067,1,['Update'],['Update']
Deployability,Update builtin versions of VecCore (0.5.2) and Vc (1.4.0),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2976:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2976,1,['Update'],['Update']
Deployability,Update builtins and disable Alien if XRootD is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4181:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4181,1,['Update'],['Update']
Deployability,Update civetweb to 1.16 once it's released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10403:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/10403,2,"['Update', 'release']","['Update', 'released']"
Deployability,Update clad to v0.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2462:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/2462,1,['Update'],['Update']
Deployability,Update clingUtils/CMakeLists.txt to copy module.modulemap in cling includes for Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5086,1,['Update'],['Update']
Deployability,Update comment in patch to DiagnosticsEngine::DiagStateMap::append,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4890:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4890,2,"['Update', 'patch']","['Update', 'patch']"
Deployability,Update concurrentfill.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8492:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8492,1,['Update'],['Update']
Deployability,Update credits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1452:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1452,1,['Update'],['Update']
Deployability,Update df003_profiles.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5672:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5672,1,['Update'],['Update']
Deployability,Update doc to express deprecation of genreflex and usage of rootcling as a replacement,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13481:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/13481,1,['Update'],['Update']
Deployability,"Update documentation of `TChain::Add(const char* name, Long64_t nentries ` :; * show correct way to add a file with a sub tree name using the ""?#treename"" syntax; * Provide better separation of contents, highlighting different sections according to the description of the various behaviours with respect to the input parameters; * Modernize a bit the code example to loop over the files in the chain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8894:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8894,1,['Update'],['Update']
Deployability,Update geom/geocad CMakeLists.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3031:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3031,1,['Update'],['Update']
Deployability,"Update glvox2.C tutorial, update jsroot [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14013:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14013,2,"['Update', 'update']","['Update', 'update']"
Deployability,Update gtest to latest version 1.10.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5228:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5228,1,['Update'],['Update']
Deployability,Update hadd docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11254,1,['Update'],['Update']
Deployability,Update header and footer to Doxygen 1.8.14 [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5104:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5104,1,['Update'],['Update']
Deployability,Update help,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5205:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5205,1,['Update'],['Update']
Deployability,Update higgs cpp tutorial with `DeltaR` function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4115:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4115,1,['Update'],['Update']
Deployability,Update histops tutorial to match current RHist addition semantics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5052:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5052,1,['Update'],['Update']
Deployability,Update index.md for eve-7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3086:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3086,1,['Update'],['Update']
Deployability,Update issue templates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6328:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6328,1,['Update'],['Update']
Deployability,Update issue templates [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6330:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6330,1,['Update'],['Update']
Deployability,Update jsroot with fixes for profiling tools [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7510:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7510,1,['Update'],['Update']
Deployability,"Update jsroot, fix several RCanvas problems [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10526:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10526,1,['Update'],['Update']
Deployability,Update libc.modulemap,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3574:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3574,2,['Update'],['Update']
Deployability,Update links,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8075,1,['Update'],['Update']
Deployability,Update links for documentation on contributing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/847:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/847,1,['Update'],['Update']
Deployability,Update links in TFile layout pages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8075,1,['Update'],['Update']
Deployability,Update links of the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8062:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8062,1,['Update'],['Update']
Deployability,Update links to math manual,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7148:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7148,1,['Update'],['Update']
Deployability,Update llvm to r302975,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/589,1,['Update'],['Update']
Deployability,Update llvm to release 5.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1218:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1218,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update location of stressIOPlugin eos files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7835:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7835,1,['Update'],['Update']
Deployability,Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8028:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8028,2,['Update'],['Update']
Deployability,Update masses of Omega_c0 and Xi_cc++ according to PDG 2022,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12968:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/12968,1,['Update'],['Update']
Deployability,Update minimal CMake version in favour of advances features it offers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8336,1,['Update'],['Update']
Deployability,Update minimum dask version found with cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11452:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11452,2,['Update'],['Update']
Deployability,Update minimum required version of CMake to 3.6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3036:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3036,1,['Update'],['Update']
Deployability,Update nlohmann/json.hpp to version 3.10.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11223:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/11223,1,['Update'],['Update']
Deployability,Update of the previous pull request #4077,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4078:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4078,1,['Update'],['Update']
Deployability,Update on https://github.com/root-project/root/pull/12018#issuecomment-1380575721 : currently 141B instr => 130B instr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1382084658:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1382084658,1,['Update'],['Update']
Deployability,"Update on this. I managed to drop ApMon.h from our builds, but the other problem is still there. I also managed to hide boost/program_options.hpp from ROOT in our own code, so this is not a blocker for us anymore, at least at the moment. Still, I think this is actually a regression worth investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1536163548:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1536163548,1,['Update'],['Update']
Deployability,"Update qt5web in 6.24, fix small issue in QWebEngine initialization [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7813:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7813,1,['Update'],['Update']
Deployability,Update readme about web geom viewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5075:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5075,1,['Update'],['Update']
Deployability,Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/612:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/612,10,"['Update', 'release']","['Update', 'release']"
Deployability,Update release notes for v6 24 00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7864:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7864,4,"['Update', 'release']","['Update', 'release']"
Deployability,"Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7864:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7864,4,"['Update', 'release']","['Update', 'release']"
Deployability,Update roo keys pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4440:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/4440,1,['Update'],['Update']
Deployability,Update root welcome logo to current year,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1935:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/1935,1,['Update'],['Update']
Deployability,Update script for PDG table,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13354:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13354,1,['Update'],['Update']
Deployability,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7817:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7817,1,['Update'],['Update']
Deployability,Update the TMatrix reference documentation. Fix ROOT-10726,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5539:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5539,1,['Update'],['Update']
Deployability,Update the TTree user's as requested in: ; https://sft.its.cern.ch/jira/browse/ROOT-10809,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6358:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6358,1,['Update'],['Update']
Deployability,Update the checksum for xrootd-5.4.2.tar.gz (fixes #10503),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10505:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10505,2,['Update'],['Update']
Deployability,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6219:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6219,1,['Update'],['Update']
Deployability,Update the copyright year from 2020 to 2021 (good first issue),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7227:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/7227,1,['Update'],['Update']
Deployability,Update the documentation of TRandom::GetSeed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6723:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6723,1,['Update'],['Update']
Deployability,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5120:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5120,1,['Update'],['Update']
Deployability,Update the freetype library from 2.6.1 to 2.12.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10712:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/10712,1,['Update'],['Update']
Deployability,Update the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8887,1,['Update'],['Update']
Deployability,Update thisroot.sh,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6316:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6316,1,['Update'],['Update']
Deployability,Update to NodeJS 20 and Restrict `octokit` version to 3.x.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13237:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/13237,1,['Update'],['Update']
Deployability,Update to ROOT build options,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3027:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/3027,1,['Update'],['Update']
Deployability,Update to VecCore integration in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/830,4,"['Update', 'integrat']","['Update', 'integration']"
Deployability,Update verison number for 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7456:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7456,1,['Update'],['Update']
Deployability,Update warning flag for bidi characters,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9532:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9532,1,['Update'],['Update']
Deployability,Update warning flag for bidi characters (6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9681:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/9681,1,['Update'],['Update']
Deployability,Update warning message as suggested by Stephan in https://github.com/root-project/root/pull/5724,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/5735,1,['Update'],['Update']
Deployability,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7380:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7380,6,"['Update', 'patch']","['Update', 'patch']"
Deployability,Update zlib to 1.2.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/663:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/663,1,['Update'],['Update']
Deployability,Update zlib to 1.2.8 released in Apr 2013. This is a battle tested; version which is used as a base for QAT and Cloudflare zlib forks. roottest passed with no additional issues. Signed-off-by: David Abdurachmanov <David.Abdurachmanov@cern.ch>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/663:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/663,2,"['Update', 'release']","['Update', 'released']"
Deployability,"Update. The issue appears to be some sort of race-like condition in the build configuration, as disabling parallel builds. ```; cmake --build . 2>&1 | tee ../build.log; ```. works just fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366#issuecomment-693495920:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/6366#issuecomment-693495920,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,"Update: After further testing, it works in 6.20.04 and breaks in in 6.20.06 and thereafter. I’ll look into the particular release notes for more information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250#issuecomment-854810353:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/8250#issuecomment-854810353,2,"['Update', 'release']","['Update', 'release']"
Deployability,"Update: I added the left-most column (`Entry`) to the whole fTable. Regarding the dashes (`---`) between the entries, I realized that the width of the table is not known before the full creation, since there is `EnsureWidth` method, which is called upon trying to fit an element into the table, and thus, it might happen that an element from the last row increases the total width of the fTable. And therefore, I find it expensive to go trough the whole table again just to add the dashes. I suggest that the `Print()` method includes the dashes, while `AsString()` does not. But still,`AsString()` shows the `Entry` column as it is part of the table. For example:; ```; Print():; Entry | S2 | ; ------------; 0 | 0 | ; | 0 | ; ------------; 1 | 0 | ; | 0 | ; ------------; 2 | 0 | ; | 0 | ; ------------; AsString(); Entry | S2 | ; 0 | 0 | ; | 0 | ; 1 | 0 | ; | 0 | ; 2 | 0 | ; | 0 | ; | |; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9116#issuecomment-949385614:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9116#issuecomment-949385614,1,['Update'],['Update']
Deployability,Update: I can reproduce this with the (for our tests nicer) case; ```bash; mkdir cling; chmod a-xr cling; root; ```; which gives the same diagnostics as above.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409#issuecomment-1453154771:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/12409#issuecomment-1453154771,1,['Update'],['Update']
Deployability,"Update: I have moved `NumericalDerivatorMinuit2` from roofitcore into Minuit2 and, of course, renamed it into `Minuit2::NumericalDerivator`. Originally, @lmoneta's NumericalDerivator was in mathcore. However, I think it fits well in Minuit2 as well, since the algorithms exactly try to mimic Minuit2's. Also, I have added some depedencies to Minuit2 parameter transformations that I think make it an even more logical fit in Minuit2 than to have to make mathcore depend on Minuit2. I guess in the end it's an arbitrary choice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8567#issuecomment-875917554:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/8567#issuecomment-875917554,1,['Update'],['Update']
Deployability,"Update: Meanwhile, I spoke with our software distribution team and we now build a standalone TBB in our software stack. So this issue is no longer relevant for us. You may decide to close it or follow up on it for other clients at your own discretion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9599#issuecomment-1020947270:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9599#issuecomment-1020947270,1,['Update'],['Update']
Deployability,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441#issuecomment-795619054:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/7441#issuecomment-795619054,3,"['Update', 'install']","['Update', 'installed', 'installing']"
Deployability,"Update: another problem which seems connected with this change is that **PyRDF** and **gaudi_tests** fail for the **optimized** builds, the only one we can test (see, for example, [here](http://cdash.cern.ch/testDetails.php?test=11740534&build=140717) and [here](http://cdash.cern.ch/testDetails.php?test=11738354&build=140717)). So all the LCG nightlies seem to be affected now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015620171:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015620171,1,['Update'],['Update']
Deployability,"Update: looks like I am missing client library, debugging...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-845216224:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-845216224,1,['Update'],['Update']
Deployability,Update: the issue is not reproduceable on LXPLUS 7 ROOT 6.24/04. Maybe it's platform specific.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261#issuecomment-963669827:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9261#issuecomment-963669827,1,['Update'],['Update']
Deployability,"Update: the latest version of the patch (`constexpr` data member + declaration in source) is in line with the first attempt (out of class definition of the data member); ```; master-2023-12-18-knpos-constexpr-plus-out-of-class-run.log; 307; master-2023-12-18-knpos-out-of-class-run.log; 307; ```; Also, the symbol is present only once throughout the compiled libraries; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1860040412:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1860040412,2,"['Update', 'patch']","['Update', 'patch']"
Deployability,Update: this is what I could come up with to resolve the ambiguity: https://github.com/root-project/root/commit/08ca2bbd6dd195daa1d6f635f6a5e8fed5ef4fd4 -- will propose a PR after adding a test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-854878120:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-854878120,1,['Update'],['Update']
Deployability,Update: v6-26-00-patches also affected since last night.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1014355855:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1014355855,2,"['Update', 'patch']","['Update', 'patches']"
Deployability,Update: what `TTreeFormula` does is: . https://github.com/root-project/root/blob/964b647c378f36c146291c9a060521c3c42322f7/tree/treeplayer/src/TTreeFormula.cxx#L2601-L2603. I.e. it just picks the first leaf in the branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881#issuecomment-820283137:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/6881#issuecomment-820283137,1,['Update'],['Update']
Deployability,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-708403160:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-708403160,3,"['Update', 'patch']","['Update', 'patch']"
Deployability,"Update:; I added the following line [here](https://github.com/root-project/root/blob/ba83903c708285baed8855baefa9e894aa7e513a/cmake/modules/SearchInstalledSoftware.cmake#L918) ; ```; set_property(TARGET XROOTD PROPERTY INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR} FILES MATCHING PATTERN ""libXrd*""); ```; but that didn't change the result. I also tried forcing the rpath installation path to ${CMAKE_INSTALL_FULL_LIBDIR} by calling cmake with `-Drpath=ON` option but that didn't change the result as well",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128#issuecomment-670379235:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/pull/6128#issuecomment-670379235,2,"['Update', 'install']","['Update', 'installation']"
Deployability,"Update:; Unfortunately, I couldn't manage to make docker container with both pyROOT and X11 graphics running...; So I don't have a nice reproducible for Oliver yet... However, I have tried to reproduce the same problem with plain C++.; And I have noticed something weird, when I try to match python code logic with:. ```cpp; //test.cpp; void test(){; ROOT::EnableImplicitMT();. ROOT::RDataFrame df = ROOT::RDataFrame(10);; auto df2 = df.Define(""x"", ""rdfentry_"").Define(""x2"", ""rdfentry_*rdfentry_"");; ; std::vector<TH1D*> histos;; auto h1 = df2.Histo1D({""h1"", ""h1; x; x"", 100, 0, 100}, ""x"");; auto h2 = df2.Histo1D({""h2"", ""h2; x; x2"", 100, 0, 100}, ""x2"");; histos.push_back(h1.GetPtr());; histos.push_back(h2.GetPtr());. for (auto* h : histos){; TCanvas* canvas = new TCanvas( Form(""%s"", h->GetName()) );; h->DrawClone();; std::cout<<""Successfully plotted the histogram. Please type something to get the next one: ""<<std::endl;; std::string dummy;; std::cin>> dummy;; }; }; ```; After running `root test.cpp` I get the output in the following order:. 1. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; 2. I send ""42"" for std::cin request; 3. ""Successfully plotted the histogram. Please type something to get the next one:"" from std::cout; **and single blank canvas appears**; 4. I send ""42"" for std::cin request; 5. **Two canvases filled with two histograms appear**. The order seems off from expected ""histogram per iteration"" logic and plotting happens at the very end of the for loop.; @couet could you reproduce this?. I assume this is reasonable with `ROOT::EnableImplicitMT();`, if the same happens with python then not all canvases might be alive in the end.. So far I couldn't get a seg. fault crash with C++. @eguiraud did you manage to reproduce it with lxplus or on your local setup?; If you have it reproducible on lxplus, maybe you can share it with Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1487016637:0,Update,Update,0,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1487016637,1,['Update'],['Update']
Deployability,Updated EvaluateAllMethods to output confusion matrix and 1vsRest data for both test data and training data for easier overtraining check. The TMVAMultiClassGui now supports generating 1v1 roc curves. Fixes bug where generated multiclass roc curves were not save to disk when created. Adds correctness tests for the ROCCurve class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/707:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/707,1,['Update'],['Updated']
Deployability,Updated Fibonacci sequence descripition + datatype change,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7011:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/7011,1,['Update'],['Updated']
Deployability,Updated PR for https://github.com/root-project/root/pull/1149,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1174:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/1174,1,['Update'],['Updated']
Deployability,Updated PR: https://github.com/root-project/root/pull/1012,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/926#issuecomment-330526201:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/926#issuecomment-330526201,1,['Update'],['Updated']
Deployability,Updated RModelParser_PyTorch.cxx -Fixes the bug related to build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10223:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/10223,1,['Update'],['Updated']
Deployability,Updated according to @amadio's comments,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1040#issuecomment-331940388:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/1040#issuecomment-331940388,1,['Update'],['Updated']
Deployability,"Updated code the test unit, all tests for TMVA are OK!. Cheers,; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/129:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/129,1,['Update'],['Updated']
Deployability,"Updated docs, run clang-tidy on the modified file and squashed to one commit. If tests pass I will merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8934#issuecomment-910392099:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-910392099,1,['Update'],['Updated']
Deployability,Updated documentation for TPad::GetUxmax etc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/960:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/960,1,['Update'],['Updated']
Deployability,Updated documentation in vmc:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3690:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/3690,1,['Update'],['Updated']
Deployability,Updated documentation. Ready for merge from my side.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/977#issuecomment-333080081:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/977#issuecomment-333080081,1,['Update'],['Updated']
Deployability,Updated gitignore for QtCreator files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/715:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/715,1,['Update'],['Updated']
Deployability,Updated issue template [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8805:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/8805,1,['Update'],['Updated']
Deployability,Updated markdown documentation(user guide) for ROOT-R. Cheers.; Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/131:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/131,1,['Update'],['Updated']
Deployability,Updated patch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112#issuecomment-393097716:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/2112#issuecomment-393097716,2,"['Update', 'patch']","['Updated', 'patch']"
Deployability,"Updated status after implementing the suggestions:. * The free function is declared in `RInterface.hxx` and defined in the new file `RInterface.cxx`, no need for an extra pair of header/implementation files.; * The definition is done by the fully-qualified name instead of re-opening the namespace also in the implementation file.; * The argument `RNode` is taken by const ref.; * The begin and end entries used when processing the empty source are now offset by, respectively, the values `fEmptyEntryRange.first` and `fEmptyEntryRange.second` *both* in the sequential and MT cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11843#issuecomment-1420893619:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/11843#issuecomment-1420893619,1,['Update'],['Updated']
Deployability,Updated support for CMA-ES minimizer based on libcmaes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/507,2,['Update'],['Updated']
Deployability,Updated the PR to remove the file instead,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12628#issuecomment-1498905331:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/12628#issuecomment-1498905331,1,['Update'],['Updated']
Deployability,Updated the PR with leaving `lexertk.hpp` alone and also adding missing `overrides` in compiler macros.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11285#issuecomment-1231795123:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/11285#issuecomment-1231795123,1,['Update'],['Updated']
Deployability,Updated the banner. Thanks!! Looking forward to contribute more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2564#issuecomment-422520416:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/2564#issuecomment-422520416,1,['Update'],['Updated']
Deployability,Updated the commit message as per comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1096565398:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1096565398,1,['Update'],['Updated']
Deployability,"Updated the file as per your suggestion Danilo, removing the doxygen style of comments. Left the formulation mostly intact, just a few small improvements. EDIT: ping @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1476#issuecomment-356301976:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/1476#issuecomment-356301976,1,['Update'],['Updated']
Deployability,Updated the list of jsROOT Drawables for Jupyter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1191:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/1191,1,['Update'],['Updated']
Deployability,Updated the reference file for ATLAS in stressGeometry test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3175:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/3175,1,['Update'],['Updated']
Deployability,"Updated to address the C++20ism and a few of the comments in #13000. In particular:. * Almost drop in replacement by exposing just an expand() method.; * Now also used in the SourceManager, for and additional gain of ~ 10 MB on the initial ROOT overhead (from 82 to 53MB in my synthetic test).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1717224870:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1717224870,1,['Update'],['Updated']
Deployability,Updated to remove the unnecessary bits from the CMakeLists for the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7260#issuecomment-802252062:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/7260#issuecomment-802252062,1,['Update'],['Updated']
Deployability,"Updated with a full tree search, which also lets us remove the `RNTupleModel` field name set member entirely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7480#issuecomment-807347300:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/7480#issuecomment-807347300,1,['Update'],['Updated']
Deployability,"Updated, please check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079#issuecomment-597567785:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/5079#issuecomment-597567785,1,['Update'],['Updated']
Deployability,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1047616127:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127,9,"['Update', 'patch', 'update']","['Updated', 'patch', 'updated']"
Deployability,Updated/fixed the docstrings and added ROOT-10396 to the commit message as discussed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7630#issuecomment-805870893:0,Update,Updated,0,https://root.cern,https://github.com/root-project/root/pull/7630#issuecomment-805870893,1,['Update'],['Updated']
Deployability,Updates DeclCollectorPPAdapter to new clang interface that reports an when every **#undef** encountered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/645:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/645,1,['Update'],['Updates']
Deployability,"Updates for DEB/RPM generation with CPack, and RPATH for regular tarballs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6735:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/6735,1,['Update'],['Updates']
Deployability,Updates for generation of correct relative path for core headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2554:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/2554,1,['Update'],['Updates']
Deployability,Updates of latex files of TMVA users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/5710,1,['Update'],['Updates']
Deployability,"Updates of the day:. ### 1; @Axel-Naumann suggested creating targets for the builtin_xrootd libraries . This should in theory give us the possibility of changing target properties through something like; `set(TARGET libXrdSecpwd-4 PROPERTY INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR})`. We still want to keep all the building process in the `ExternalProject_Add` step, thus these new targets would be created as IMPORTED libraries. But unfortunately, CMake doesn't allow to install IMPORTED libraries as TARGETS ([SO post](https://stackoverflow.com/a/41179630), [CMake developer citation](https://public.kitware.com/Bug/view.php?id=14311) ). ### 2; I tried to create a post install script that manually invokes `install_name_tool` to change the rpath from the build directory to the install directory. This would be called in `SearchInstalledSoftware.cmake` through something like; `install(SCRIPT ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/XROOTDPostInstall.cmake"")`; and the script itself would work along these lines; ```; file(GLOB XROOTD_ALL_LIBRARIES; ""${CMAKE_INSTALL_PREFIX}/lib/libXrd*""; ); find_program(INSTALL_NAME_TOOL install_name_tool). if(INSTALL_NAME_TOOL); foreach(XRD_LIB_PATH ${XROOTD_ALL_LIBRARIES}); set(OLD_RPATH ${CMAKE_BINARY_DIR}/lib); set(NEW_RPATH ${CMAKE_INSTALL_PREFIX}/lib); execute_process(COMMAND ${INSTALL_NAME_TOOL} -rpath ${OLD_RPATH} ${NEW_RPATH} $$; endforeach(); endif(); ```; The problem with this idea, if not for its ad-hoc nature, is that `install_name_tool` would actually be called each time `cmake --install` is called causing errors from the second time since ${OLD_RPATH} is not set to the `build` folder anymore:; ```; error: install_name_tool: no LC_RPATH load command with path: /Users/sftnight/vpadulan/build/lib found in: /Users/sftnight/vpadulan/install/lib/libXrdClient.dylib (for architecture x86_64), required for specified option ""-rpath /Users/sftnight/vpadulan/build/lib /Users/sftnight/vpadulan/install/lib""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128#issuecomment-672083860:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/6128#issuecomment-672083860,8,"['Update', 'install']","['Updates', 'install']"
Deployability,"Updates on the failing tests:; * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there.; * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-720955137:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-720955137,1,['Update'],['Updates']
Deployability,Updates the Interpreter section in the release notes for v6.24. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7548:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/7548,2,"['Update', 'release']","['Updates', 'release']"
Deployability,Updates to RooFit tutorials necessary before the next release #8808,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8927:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/8927,4,"['Update', 'release']","['Updates', 'release']"
Deployability,Updates to VecOps library to use pre-compiled templates for common types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/1896,1,['Update'],['Updates']
Deployability,"Updates to builtin Davix, including moving to latest version (0.6.7)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1890:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/1890,1,['Update'],['Updates']
Deployability,Updates to distributed RDataFrame configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11541:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/11541,2,"['Update', 'configurat']","['Updates', 'configuration']"
Deployability,Updates to latest xRooFit version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15843:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/15843,1,['Update'],['Updates']
Deployability,Updates to the build system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2505:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/2505,1,['Update'],['Updates']
Deployability,"Updates xroofit code to latest commit. No major changes to functionality, just minor bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15177:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/15177,1,['Update'],['Updates']
Deployability,"Updates:; * Changed the logic of the `GetMergeableValue` method of the action helpers: now all the information needed to create the `RMergeableValue` should be created inside the function itself, e.g. the `std::function` that merges to values of the same type held by the helper; * Added the logic for merging results of `Histo1D` action. ; * Define `GetMergeableValue` in the `FillHelper` action helper; * Define `RMergeableHisto1D` subclass of `RMergeableValue` to avoid a copy operation; * Add a test for merging two 1D histograms. TODO:; - [x] The test for histograms only works when calling the `Histo1D` action without a `TH1DModel`. In that case `ROOT::Detail::RDF::GetMergeableValue()` returns a `nullptr`. It may be that it's not using the correct helper.; - [x] Add other mergeable values.; - [x] Add docs.; - [x] Apply coding conventions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552#issuecomment-625840667:0,Update,Updates,0,https://root.cern,https://github.com/root-project/root/pull/5552#issuecomment-625840667,1,['Update'],['Updates']
Deployability,Updating release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1756:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/1756,1,['release'],['release']
Deployability,Upgrade Civetweb to v1.10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1371:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/1371,1,['Upgrade'],['Upgrade']
Deployability,Upgrade builtin xrootd version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14998:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/14998,1,['Upgrade'],['Upgrade']
Deployability,Upgrade llvm90,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/6385,1,['Upgrade'],['Upgrade']
Deployability,Upgrade lz4 builtins to 1.8.3 version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2807:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/2807,1,['Upgrade'],['Upgrade']
Deployability,Upgrade nlohmann json parser to v 3.7.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5124:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/5124,1,['Upgrade'],['Upgrade']
Deployability,Upgrade nlohmann/json to version 3.9.1 (ROOT-10993),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6662:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/6662,2,['Upgrade'],['Upgrade']
Deployability,Upgrade nlohmann/json.hpp to version 3.9.1 (ROOT-10993) v6.22,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6664:0,Upgrade,Upgrade,0,https://root.cern,https://github.com/root-project/root/pull/6664,1,['Upgrade'],['Upgrade']
Deployability,"Upgraded version of PR #4279.; Changes were necessary due to incompatibility with C++ modules. Problem: due to how rootmap works, it's not possible to have multiple versions of a pair (shared library, pcm) with the same name, even in different directories. This feature lead to the impossibility of building multiple versions of libROOTPython, which used to contain, along with the pythonizations, also the TPython library. Solution: TPython and pythonizations have been split, and are built in libROOTTPython and libROOTPythonizations respectively. We only have one version of the former (the last one built) and possibility to build multiple versions for the latter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4647:0,Upgrade,Upgraded,0,https://root.cern,https://github.com/root-project/root/pull/4647,1,['Upgrade'],['Upgraded']
Deployability,Uploaded as https://reviews.llvm.org/D39716. Will need to be a separate patch in ROOT since upstream's CMakeLists.txt has changed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1285#issuecomment-342414656:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/1285#issuecomment-342414656,1,['patch'],['patch']
Deployability,"Upon creating an RNTupleInspector, we check whether the compression settings are consistent across all columns. Some column ranges may have been constructed upon read (e.g. in the context of late model extension) and therefore have no compression settings to begin with. These column ranges should not cause the RNTupleInspector to throw. This PR partially addresses #15661. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15759:411,update,updated,411,https://root.cern,https://github.com/root-project/root/pull/15759,1,['update'],['updated']
Deployability,"Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16150:262,upgrade,upgrade,262,https://root.cern,https://github.com/root-project/root/pull/16150,1,['upgrade'],['upgrade']
Deployability,"Upstream moved away from manually declaring `*def` and `*inc` files. These are now auto-generated with tablegen. This patch does the same for cling, making it easier to rebase and maintain. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14628:118,patch,patch,118,https://root.cern,https://github.com/root-project/root/pull/14628,2,"['patch', 'update']","['patch', 'updated']"
Deployability,Use -O3 for release. (Accelerates clang by factor 3.6!),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1774:12,release,release,12,https://root.cern,https://github.com/root-project/root/pull/1774,1,['release'],['release']
Deployability,Use GetCanvasWidth()/GetCanvasHeight() for obtain proper dimension . Do not swap width/height arguments. Use correspondent JSROOT release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13645:130,release,release,130,https://root.cern,https://github.com/root-project/root/pull/13645,1,['release'],['release']
Deployability,"Use RWebWindow for main widget with buttons, help widget with infos and web-based geometry viewer for geometry display. This requires number of changes in base RWebWindow class:. 1. Let configure position and size of RWebWindow, including support in chrome, CEF and Qt5; 2. Make more methods in RWebWindow `const`, declaring used mutexes `mutable`; 3. Let submit data to web window, which is started but not yet connected to server. Redesign visiible nodes selection algorithm in geometry viewer. Now logic is similar to normal TGeoPainter of ROOT. Plus extra control over maximal allowed number of faces/vertices. Update JSROOT with latest changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4166:615,Update,Update,615,https://root.cern,https://github.com/root-project/root/pull/4166,1,['Update'],['Update']
Deployability,Use __CLING__ flag to test if interpreter is used and update the help.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5785:54,update,update,54,https://root.cern,https://github.com/root-project/root/pull/5785,1,['update'],['update']
Deployability,"Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:; ```; PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib; ```; And with only the release version:; ```; PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib; ```; So the correct one will be used.; This fixes the following error when both versions are installed:; ```; CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):; The ""optimized"" argument must be followed by a library.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13013:69,release,release,69,https://root.cern,https://github.com/root-project/root/pull/13013,10,"['install', 'release']","['installed', 'release']"
Deployability,"Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13666:61,update,update,61,https://root.cern,https://github.com/root-project/root/pull/13666,2,"['release', 'update']","['release', 'update']"
Deployability,"Use headless Chrome browser, running from file system.; No any HTTP server required.; Following formats are supported: png, pdf, svg, jpeg, webp; Requires that chrome is installed on all test machines; Tested on Linux, Mac and Windows; Exactly same code used with TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4855:170,install,installed,170,https://root.cern,https://github.com/root-project/root/pull/4855,1,['install'],['installed']
Deployability,Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';; import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path; may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10692:322,Update,Update,322,https://root.cern,https://github.com/root-project/root/pull/10692,1,['Update'],['Update']
Deployability,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8007:284,patch,patch,284,https://root.cern,https://github.com/root-project/root/pull/8007,1,['patch'],['patch']
Deployability,"Use the correct syntax for the `START` command, which is:; ```; START ""title"" [/D path] [options] ""command"" [parameters]; ```; This prevent the following error with the `.forum bug` command:; ```; root [0] .forum bug; The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"".; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13106:1325,release,release,1325,https://root.cern,https://github.com/root-project/root/pull/13106,4,"['install', 'release']","['install', 'release']"
Deployability,"User-visible places: Old release-indices, informative output of hadd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/95:25,release,release-indices,25,https://root.cern,https://github.com/root-project/root/pull/95,1,['release'],['release-indices']
Deployability,"Users can now pass a map to the `RCsvDS` constructor as an additional; argument to specify column types of their choice.; Supported types remain: double, Long64_t, bool, std::string.; Type aliases follow `TTreeReader`, i.e.:; * 'O' for boolean; * 'D' for double; * 'L' for Long64_t; * 'T' for std::string. `RCsvDS` now supports ready empty cells and now introduces special variables ""NaN"" and ""nan"" to be read as `nan`. Note that only double has actual `nan`, so for booleans and Long64_t-s, 0 is set in this case. Corresponding tests are added. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9561",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10488:582,update,updated,582,https://root.cern,https://github.com/root-project/root/pull/10488,1,['update'],['updated']
Deployability,"Users can now register one or more callbacks to TResultProxies (i.e.; the results of TDF actions). A callback is just a callable that takes; a reference to the result type as argument and is going to be invoked; by each worker thread once every N entries (users choose N). It is meant to be used to inspect partial results of the analysis; while the event loop is still running.; For example, in a single-thread event loop, one can draw a histogram; and update the canvas every 100 entries like this:; ; ```c++; auto h = tdf.Histo1D(""x"");; TCanvas c(""c"",""x hist"");; // update the canvas every 100 entries; h.RegisterCallback(100, [&c](TH1D &h_) { h_.Draw(); c.Update(); });; // trigger event loop, this `Draw` will be performed afterwards; h->Draw();; ```. Each worker thread invokes callbacks sequentially, but the same callback; might be invoked concurrently by different worker threads if implicit multi-threading; is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037:454,update,update,454,https://root.cern,https://github.com/root-project/root/pull/1037,3,"['Update', 'update']","['Update', 'update']"
Deployability,"Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3037:132,configurat,configuration,132,https://root.cern,https://github.com/root-project/root/pull/3037,2,['configurat'],['configuration']
Deployability,"Users might want to connect to a notebook server launched with; 'root --notebook' from another computer. This setting of the; Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,; binding on localhost might fail. This looks like the issue; reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3052:134,configurat,configuration,134,https://root.cern,https://github.com/root-project/root/pull/3052,2,['configurat'],['configuration']
Deployability,"Using clang 4 to build with C++ 17 support fails as `__cplusplus` is defined as [`201406L`](https://github.com/llvm-mirror/clang/blob/release_40/lib/Frontend/InitPreprocessor.cpp#L379) for `cxx17`. This is needed for the macOS conda package, but it can be left as a patch that is applied before configuring if you would rather keep the checking against the correct value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3096:266,patch,patch,266,https://root.cern,https://github.com/root-project/root/pull/3096,1,['patch'],['patch']
Deployability,"Using the `minuit2_omp` option restricts you to minimizing thread-safe functions, and RooFit models are not thread safe. Also the regular ROOT fitter interface is not thread-safe either, so this option basically breaks your build. It is intended for MInuit2 standalone builds for the specific case where you have an expensive thread-safe function where you want to parallelize the gradient calculation. Adding a warning in the configuration step with CMake hopefully keeps people and package maintainers from using it in the future:; https://github.com/root-project/root/pull/12970",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940#issuecomment-1581533040:427,configurat,configuration,427,https://root.cern,https://github.com/root-project/root/issues/12940#issuecomment-1581533040,1,['configurat'],['configuration']
Deployability,V6 08 00 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/436:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/436,1,['patch'],['patches']
Deployability,V6 12 00 patches tree cloner history tracking,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1807:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/1807,1,['patch'],['patches']
Deployability,V6 12 00 patches: Fix misnamed variable in RooRandomizeParamMCSModule,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1438:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/1438,1,['patch'],['patches']
Deployability,V6 14 00 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2369:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/2369,1,['patch'],['patches']
Deployability,V6 20 00 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5091:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/5091,1,['patch'],['patches']
Deployability,V6 20 00 patches r backport,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8865:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/8865,1,['patch'],['patches']
Deployability,V6 22 00 patches r backport,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8864:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/8864,1,['patch'],['patches']
Deployability,V6 24 00 patches r cherry pick from master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8861:9,patch,patches,9,https://root.cern,https://github.com/root-project/root/pull/8861,1,['patch'],['patches']
Deployability,V6-10-patches fix order commits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1025:6,patch,patches,6,https://root.cern,https://github.com/root-project/root/pull/1025,1,['patch'],['patches']
Deployability,"V=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 882: Environment variables:; 882: ROOT_HIST=0; 882: Test timeout computed to be: 1500; 882: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 882: error code: -529697949; 882:; 882:; 5/16 Test #882: tutorial-dataframe-df006_ranges-py .......................***Failed 4.42 sec; test 883; Start 883: tutorial-dataframe-df007_snapshot-py. 883: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df007_snapshot.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 883: Environment variables:; 883: ROOT_HIST=0; 883: Test timeout computed to be: 1500; 883: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 883: error code: -529697949; 883:; 883:; 6/16 Test #883: tutorial-dataframe-df007_snapshot-py .....................***Failed 4.47 sec; test 884; Start 884: tutorial-dataframe-df008_createDataSetFromScratch-py. 884: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df008_createDataSetFromScratch.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 884: Environment variables:; 884: ROOT_HIST=0; 884: Test timeout computed to be: 1500; 884: input_line_40:2:211: warning: missing terminating '""' character [-Winvalid-pp-token]; 884: *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:4743,release,release,4743,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['release'],['release']
Deployability,"VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5334,release,release,5334,https://root.cern,https://github.com/root-project/root/pull/12523,1,['release'],['release']
Deployability,VMC update: Added support for user defined sensitive detectors; plus few more features,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1892:4,update,update,4,https://root.cern,https://github.com/root-project/root/pull/1892,1,['update'],['update']
Deployability,VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 564K	lib/EG.pcm					 |	584K	lib/EG.pcm; 5.7M	lib/Eve.pcm					 |	5.4M	lib/Eve.pcm; 652K	lib/FitPanel.pcm				 |	656K	lib/FitPanel.pcm; 504K	lib/Foam.pcm					 |	520K	lib/Foam.pcm; 440K	lib/Fumili.pcm					 |	460K	lib/Fumili.pcm; 1.2M	lib/Gdml.pcm						1.2M	lib/Gdml.pcm; 960K	lib/Ged.pcm					 |	968K	lib/Ged.pcm; 432K	lib/Genetic.pcm					 |	456K	lib/Genetic.pcm; 2.9M	lib/GenVector.pcm				 |	2.8M	lib/GenVector.pcm; 868K	,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:1408,release,release-master,1408,https://root.cern,https://github.com/root-project/root/pull/10294,1,['release'],['release-master']
Deployability,Valgrind reports issues with ROOT release builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:34,release,release,34,https://root.cern,https://github.com/root-project/root/issues/11385,1,['release'],['release']
Deployability,"Valgrind reports these leaks in RooArgSet:; ```; ==759== 1,008,000 bytes in 1 blocks are still reachable in loss record 18,282 of 18,292; ==759== at 0x4C2A593: operator new(unsigned long) (vg_replace_malloc.c:344); ==759== by 0x15B5CF61: RooArgSet::operator new(unsigned long) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B60B12: RooArgSet::create(char const*) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15AF77B6: RooAbsCollection::snapshot(bool) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C353A9: RooProdPdf::RooProdPdf(RooProdPdf const&, char const*) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C3EC34: RooProdPdf::clone(char const*) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15AF6694: RooAbsCollection::snapshot(RooAbsCollection&, bool) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15AF77D6: RooAbsCollection::snapshot(bool) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B24D7C: RooAbsReal::fillDataHist(RooDataHist*, RooArgSet const*, double, bool, bool) const (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15B62CCA: RooBinnedGenContext::generate(double, bool, bool) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libRooFitCore.so.6.16.00); ==759== by 0x15C6F42F: RooSimSplitGenContext::generate(double, bool, bool) (in /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.16.00/x86_64-centos7-gcc48-opt/lib/libR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7890#issuecomment-820445272:308,release,releases,308,https://root.cern,https://github.com/root-project/root/issues/7890#issuecomment-820445272,4,['release'],['releases']
Deployability,"Var(f""sigma_{i}"", """", 1.3, 0, 5)); gauss_list.append(ROOT.RooGaussian(f""gauss_{i}"", """", observable, mu_list[-1], sigma_list[-1])); frac_list.append(ROOT.RooConstVar(f""frac_{i}"", """", 1/3)). gauss = ROOT.RooAddPdf(""gauss"", """", gauss_list, frac_list[:-1]); gauss.keepAlive = (gauss_list, frac_list[:-1]); return (mu_list, sigma_list), gauss. def fit_gauss(model, data, batch_mode):; # build the loss; nll = model.createNLL(data, BatchMode=batch_mode). # minimize; minimizer = ROOT.RooMinimizer(nll); minimizer.minimize(""Minuit2"", """"). result = minimizer.save(); return result. def main(n_events):; observable = ROOT.RooRealVar(""x"", """", 0, -5, 20); data1 = get_data(observable, n_events); data2 = get_data(observable, n_events); parameters1, model1 = get_model(observable); parameters2, model2 = get_model(observable). result1 = fit_gauss(model1, data1, ""cpu""); result2 = fit_gauss(model2, data2, ""cuda""). c = ROOT.TCanvas("""", """", 800, 400); c.Divide(2). c.cd(1); frame1 = observable.frame(); data1.plotOn(frame1); model1.plotOn(frame1); frame1.SetTitle(""Fit performed with the 'cpu' backend""); frame1.Draw(). c.cd(2); frame2 = observable.frame(); data2.plotOn(frame2); model2.plotOn(frame2); frame2.SetTitle(""Fit performed with the 'cuda' backend""); frame2.Draw(). c.Print(""myPlot.png""). if __name__ == ""__main__"":; main(int(1e6)); ```; Run the code as `python fit.py`. ### ROOT version. ``` bash; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 29 2023, 08:42:45 |; | From heads/master@v6-29-01-2512-gf6aeead07d |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13603:3951,Install,Installation,3951,https://root.cern,https://github.com/root-project/root/issues/13603,1,['Install'],['Installation']
Deployability,Vc: update to Vc 0.7.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/19:4,update,update,4,https://root.cern,https://github.com/root-project/root/pull/19,1,['update'],['update']
Deployability,"Vecops has different dependency than TMVA. You have there also the dictionary dependence on VDT for example. Also this is the minimal change needed.; A different approach can be discussed, but I would do after the release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2944#issuecomment-437165806:214,release,release,214,https://root.cern,https://github.com/root-project/root/pull/2944#issuecomment-437165806,1,['release'],['release']
Deployability,"Vectorcall () from /usr/lib/libpython3.10.so.1.0; #12 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #13 0x00007f23441f4cc5 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007f23442da4f6 in ?? () from /usr/lib/libpython3.10.so.1.0; #15 0x00007f23442b0024 in ?? () from /usr/lib/libpython3.10.so.1.0; #16 0x00007f2343ec0259 in start_thread () from /usr/lib/libpthread.so.0; #17 0x00007f2343fd65e3 in clone () from /usr/lib/libc.so.6. Thread 1 (Thread 0x7f2343d62740 (LWP 13922) ""python""):; #0 0x00007f2343fa3a2f in wait4 () from /usr/lib/libc.so.6; #1 0x00007f2343f21a2b in do_system () from /usr/lib/libc.so.6; #2 0x00007f23434ea0bf in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fe35ea2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2108; #3 TUnixSystem::StackTrace (this=0x55fe35ea2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f233e3d7c28 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007f233e3cbe0c in cling_runtime_internal_throwIfInvalidPointer () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007f233324203a in ?? (); #7 0x00007fff669129b0 in ?? (); #8 0x00007fff66912be0 in ?? (); #9 0x00007f233e3cbdb0 in ?? () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #10 0x00007f234368a20f in WrapperCall (method=94550400788944, nargs=0, args_=0x7fff66912be0, self=0x0, result=0x7fff669129b0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #11 0x00007f234368ad50 in CallT<double> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #12 Cppyy::CallD (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at /home/b/bendavid/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:2825,install,install,2825,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,1,['install'],['install']
Deployability,"Version 3.11 of `nlohmann/json` introduced ""versioned, ABI-tagged inline namespace""s, which breaks our forward declaration. Fortunately, we can assume the `json_fwd.hpp` header to be present starting from that same version because the `JSON_MultipleHeaders` option now defaults to `ON` and even if not, `json_fwd.hpp` is installed since patch version 3.11.2. For; earlier versions, both methods work but `json_fwd.hpp` isn't guaranteed to be installed. Still use it if available. Fixes https://github.com/root-project/root/issues/11130",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11205:321,install,installed,321,https://root.cern,https://github.com/root-project/root/pull/11205,3,"['install', 'patch']","['installed', 'patch']"
Deployability,"Version 6.26 is fine. Most probably, problem caused by llvm upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930#issuecomment-1357805375:60,upgrade,upgrade,60,https://root.cern,https://github.com/root-project/root/issues/11930#issuecomment-1357805375,1,['upgrade'],['upgrade']
Deployability,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393874952:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393874952,2,['patch'],['patch']
Deployability,Very good point! `FCNGradientBase::HasGradient()` should can be final. I'll update the PR with this before merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16393#issuecomment-2350965264:76,update,update,76,https://root.cern,https://github.com/root-project/root/pull/16393#issuecomment-2350965264,1,['update'],['update']
Deployability,"Very nice PR. The negation functionality will be a clear upgrade of the present infrastructure. For what concerns Filter and Map, I am in favour of keeping them but *maybe* it could be discussed what is their interplay with the ones provided by VecOps for TVecs (#1613). I am of course ready to revise the implementations in #1613.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1612#issuecomment-364567901:57,upgrade,upgrade,57,https://root.cern,https://github.com/root-project/root/pull/1612#issuecomment-364567901,2,['upgrade'],['upgrade']
Deployability,"Violation) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:402; #6 0x00007ff1c1e5e06f in sighandler (sig=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:3602; #7 0x00007ff1c1e47a32 in textinput::TerminalConfigUnix::HandleSignal (this=0x7ff1c2175d80 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007ff1c1e47736 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0x00007ff1b033fa7e in LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor (this=0x7ffcf3a95340, right=...) at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Functor.h:114; #11 0x00007ff1b0340b0d in __cxx_global_var_initcling_module_10_.161(void) () at /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/ParticleCuts.h:2880; #12 0x00007ff1b033c095 in __orc_init_func.cling-module-10 (); #13 0x00007ff1bb91d882 in (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize(llvm::orc::JITDylib&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; #14 0x00007ff1ba3155f3 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.30.04-dd2db/x86_64-el9-gcc13-dbg/lib/libCling.so; ```. @pikacic if `LoKi::FunctorFromFunctor<LHCb::Particle const*, double>::FunctorFromFunctor` rings a bell for you, please shout. That's what I will look into next...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2166043260:9501,patch,patches,9501,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2166043260,6,"['Install', 'patch', 'release']","['InstallArea', 'patches', 'releases']"
Deployability,"Visual Studio 2017 doesn't use the registry anymore, so no need to try to find keys. This prevent picking wrong directories in the case there is another version installed on the computer, and prevent also the following errors when starting ROOT:; RegQueryValueEx: returned 2: The system cannot find the file specified.; RegOpenKeyEx: returned 2: The system cannot find the file specified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2678:161,install,installed,161,https://root.cern,https://github.com/root-project/root/pull/2678,1,['install'],['installed']
Deployability,Vmc application update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/461:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/461,1,['update'],['update']
Deployability,"WIP: As the title says - trying to update TMVA to support cuDNN 8, but also be backwards compatible. More commits to come",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6058:35,update,update,35,https://root.cern,https://github.com/root-project/root/pull/6058,1,['update'],['update']
Deployability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6850:130,Update,UpdateListOfLoadedSharedLibraries,130,https://root.cern,https://github.com/root-project/root/pull/6850,1,['Update'],['UpdateListOfLoadedSharedLibraries']
Deployability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex. (cherry picked from commit 653d927f1d21a50812b049bc16a73e91302485d4)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6877:130,Update,UpdateListOfLoadedSharedLibraries,130,https://root.cern,https://github.com/root-project/root/pull/6877,1,['Update'],['UpdateListOfLoadedSharedLibraries']
Deployability,"Want to see something funny? I had a ROOT build in `Debug` mode laying around on `macphsft25`, added a `std::cout` to print the color value in `TPad::TPad` - and was very surprised to see `-1`. Rebuilt in `Release` mode and now it's `65535` :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7090#issuecomment-811984551:206,Release,Release,206,https://root.cern,https://github.com/root-project/root/issues/7090#issuecomment-811984551,1,['Release'],['Release']
Deployability,"Was already reverted in the ""Revert ""PCH has partial names (include/TObject.h), use them for full …; …paths."""" , but with LLVM5.0 upgrade was accidentally returned back.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1727:130,upgrade,upgrade,130,https://root.cern,https://github.com/root-project/root/pull/1727,1,['upgrade'],['upgrade']
Deployability,Was that patch a backport of something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11551#issuecomment-1278126782:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/pull/11551#issuecomment-1278126782,1,['patch'],['patch']
Deployability,Was this fix already backported to earlier ROOT releases than 6.28?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845#issuecomment-1930208899:48,release,releases,48,https://root.cern,https://github.com/root-project/root/pull/12845#issuecomment-1930208899,1,['release'],['releases']
Deployability,"We *know* C++20 is failing the test suite, make the builds green by adding C++20 support to a PR rather than master. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12837:212,update,updated,212,https://root.cern,https://github.com/root-project/root/pull/12837,1,['update'],['updated']
Deployability,"We accidentially check and annotate the return type of the function twice for; being a pointer/reference type when we do the ""else"" part of the; wrapper. This patch removes this wrong second check and extends; the tests to check that the cast in both branches of the if/else; is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/667:159,patch,patch,159,https://root.cern,https://github.com/root-project/root/pull/667,1,['patch'],['patch']
Deployability,"We already reverted this patch, but the LLVM upgrade to 5.0 seems; to have ignored this reversion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1273:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/1273,2,"['patch', 'upgrade']","['patch', 'upgrade']"
Deployability,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11846:314,update,updated,314,https://root.cern,https://github.com/root-project/root/pull/11846,1,['update'],['updated']
Deployability,"We always wanted to use ""old"", and my prior attept to convince CMake to use ""DOWNLOAD_EXTRACT_TIMESTAMP false"" did not work. So instead of passing this to each ExternalProject_Add, just switch the global policy to OLD. (cherry picked from commit 51302692c483755d4d70a87dc39706bab72b1bf7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11845:384,update,updated,384,https://root.cern,https://github.com/root-project/root/pull/11845,1,['update'],['updated']
Deployability,"We are aware of this issue. There is nothing we can do about it, only hoping that the llvm upgrade will fix the issue...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820#issuecomment-728779855:91,upgrade,upgrade,91,https://root.cern,https://github.com/root-project/root/issues/6820#issuecomment-728779855,1,['upgrade'],['upgrade']
Deployability,"We are currently discussing what the next ROOT release version number will be, and if we want to remove the deprecated methods now. To avoid the annoying warnings, change the check to 6.33.02; *if* we release a development release later this year, it would likely be called 6.33.01 or 6.33.02. Afterwards master would be bumped to 6.33.03 and we would again be reminded to remove the methods.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15148:47,release,release,47,https://root.cern,https://github.com/root-project/root/pull/15148,3,['release'],['release']
Deployability,"We are excluding directories, which are accidentaly copied via unxpected behaviour of install(DIRECTORY ..)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4792:86,install,install,86,https://root.cern,https://github.com/root-project/root/pull/4792,1,['install'],['install']
Deployability,We are not going to update the `vscode` extension in our copy of LLVM.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863#issuecomment-1344486997:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/11863#issuecomment-1344486997,3,['update'],['update']
Deployability,We are planning to migrate to VS 2022 after the ROOT v6.26.00 release,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9590#issuecomment-1014463424:62,release,release,62,https://root.cern,https://github.com/root-project/root/issues/9590#issuecomment-1014463424,1,['release'],['release']
Deployability,"We are relying on this since a while, for example for reemission of template symbols. At the moment, we get the incremental extensions because `Preprocessor::enableIncrementalProcessing()` turns them on internally, but this will change with LLVM 18 where this method only controls incremental processing of a single `Preprocessor` object. ---. This should mean no change in `master` with LLVM 16, but given that we already rely on this we should enable the incremental extensions properly outside of the upgrade to LLVM 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16191:504,upgrade,upgrade,504,https://root.cern,https://github.com/root-project/root/pull/16191,1,['upgrade'],['upgrade']
Deployability,"We are running in circles... As Axel explained on Mattermost, they were never active. Also:. > It is now also seen failing on Jenkins ([#14755 (comment)](https://github.com/root-project/root/pull/14755#issuecomment-1951712063)) which disproves the claim that it's the machine configuration - on Jenkins, there aren't the warnings about too little space on `/tmp`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14750#issuecomment-1953676037:276,configurat,configuration,276,https://root.cern,https://github.com/root-project/root/pull/14750#issuecomment-1953676037,1,['configurat'],['configuration']
Deployability,"We are tagging 6.28/08 today, to then prepare the relative LCG release immediately after in order for ATLAS to be able to pick it up for the Experiment's builds. Issue https://github.com/root-project/root/issues/13834 will not be fixed for this tag: there is not enough time given the urgency signalled by ATLAS. For this reason, we will not advertise the tag through the usual channels, but re-tag 6.28/10 and advertise it for end users in due time.; Thanks for your patience and for proactive signalling to the ROOT team the urgency of the matter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410#issuecomment-1761147284:63,release,release,63,https://root.cern,https://github.com/root-project/root/issues/13410#issuecomment-1761147284,1,['release'],['release']
Deployability,"We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies.; We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs).; We also separate events into four categories according to number of reconstructed vertices; (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently.; In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to ; all categories, because the average value of eg. b-tag output from each BDT; over full training samples reflects the fraction of b events in the training samples.; (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.); We found this feature is not preserved in the latest releases (after TMVA 4.1.2); due to the normalization procedure introduced in that version.; In result this causes significant degradation of our flavor tagging performance,; which was reported from a user using latest ROOT/TMVA.; We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1; gives very similar performance to the ROOT 5.28/TMVA 4.1.0.; Therefore, we need to switch off the normalization to keep the performance,; which is realized in an option implemented in this pull request.; We hope this will be accepted, to avoid us from patching this to every release of ROOT; we use for studies using LCFIPlus flavor tagging feature.; We set this option to non-default, so current users should not be affected by this change.; ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png); B-tag performance with the SkipNormalization option; ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png); B-tag performance without the SkipNormalization option",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/244:381,release,release,381,https://root.cern,https://github.com/root-project/root/pull/244,4,"['patch', 'release']","['patching', 'release', 'releases']"
Deployability,"We assumed that we will always have module file and unconditionally disable; header parsing on demand. However, the major use-case is gradual migration; to modules. In this scenario (tested by root-meta-fwdDecls-fwdDeclarations),; we have a dictionary which has no module file and still relies on the old; behavior. This can realistically happen when users gradually migrate to; modules. For example, we have modules-aware ROOT and untouched third party; code. This patch enables header parsing on demand when we have no module file; available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2721:466,patch,patch,466,https://root.cern,https://github.com/root-project/root/pull/2721,1,['patch'],['patch']
Deployability,"We can actually test before :-) I've updated build-root.cmake to require pyroot2, pyroot3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5500#issuecomment-621657814:37,update,updated,37,https://root.cern,https://github.com/root-project/root/pull/5500#issuecomment-621657814,1,['update'],['updated']
Deployability,"We can combine some of the commits, we can update the author - there are many things we can do :-) I can show you tomorrow. Else e.g. Javier or Stephan might be able to show.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4529#issuecomment-542212579:43,update,update,43,https://root.cern,https://github.com/root-project/root/pull/4529#issuecomment-542212579,1,['update'],['update']
Deployability,We can create a git tag but we cannot make releases anymore; not sure how useful vs confusing this would be.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010#issuecomment-923683319:43,release,releases,43,https://root.cern,https://github.com/root-project/root/pull/9010#issuecomment-923683319,1,['release'],['releases']
Deployability,"We can probably make this an output variable and fix roottest. If you are willing to go that extra mile, you can create a PR against roottest with a branch `reflGenDicFromTarget` (with the same name) and our infrastructure should be able to integrate them together. If not, resetting the `definitions` variable should allow us to make progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587562141:241,integrat,integrate,241,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587562141,1,['integrat'],['integrate']
Deployability,"We cannot use `https` as some of the tools we use (Davix) don't have access to the system CA store on macOS for now - we first need to check whether it has arrived now, and then we need to upgrade them. So let's stick with just `-L` for now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-809520433:189,upgrade,upgrade,189,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-809520433,1,['upgrade'],['upgrade']
Deployability,"We considered replacing them with https://packages.ubuntu.com/bionic/fonts-liberation. Thanks for pointing out the fedora patch - looks good, actually - too bad that never made it upstream! I'll assign to @bellenot so see which route we should take: replace the files with ""liberation"" or patch ROOT to use fontconfig.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-867694334:122,patch,patch,122,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-867694334,2,['patch'],['patch']
Deployability,"We could also tell people this (which is shown in the FAQ as well):. > Instead of creating an ""uninstall"" target, Unix users could enter this command in the shell:; ```sh; xargs rm < install_manifest.txt; ```. I think that having the uninstall target makes us liable if users end up deleting important files with `make uninstall`. For example, you may build ROOT with the default prefix `/usr/local`, and then inadvertently call only `make uninstall`, which may irreparably break, e.g., on Mac OS a ROOT that has been installed with Homebrew. @Axel-Naumann, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462652434:518,install,installed,518,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462652434,1,['install'],['installed']
Deployability,"We could, but there will probably be no new patch release anyway, since ROOT 6.34.00 is only a few weeks away. And we're not going to make a new patch release just for this bugfix. Given this information, could you live without a backport? I guess the only way in which it could help you is if you build your own ROOT from source from the tip of the 6.30 and 6.32 branches, without needing a patch release. But I guess this is not the case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773#issuecomment-2457208991:44,patch,patch,44,https://root.cern,https://github.com/root-project/root/pull/16773#issuecomment-2457208991,6,"['patch', 'release']","['patch', 'release']"
Deployability,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16201:656,release,release,656,https://root.cern,https://github.com/root-project/root/issues/16201,2,"['install', 'release']","['install', 'release']"
Deployability,"We currently fail to create a module for RootFit with the following error; message when merging a union in signal.h:; ```; In file included from input_line_12:67:; In file included from /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/RooErrorHandler.h:20:; In file included from /usr/include/signal.h:394:; /usr/include/bits/pthreadtypes.h:130:3: error: typedef redefinition with different types ('union pthread_cond_t' vs 'union pthread_cond_t'); } pthread_cond_t;; ^; /usr/include/sys/types.h:271:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'Hist.Foption.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:820:10: note: Hist.Foption.h defined here; module ""Foption.h"" { header ""Foption.h"" export * }; ^; /usr/include/signal.h:394:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'RooFitCore.RooErrorHandler.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:2449:10: note: RooFitCore.RooErrorHandler.h defined here; module ""RooErrorHandler.h"" { header ""RooErrorHandler.h"" export * }; ^; Error: /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/bin/rootcling: compilation failure (/build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/lib/libRooFitCorecbd7d3c40e_dictUmbrella.h); make[2]: *** [roofit/roofitcore/G__RooFitCore.cxx] Error 1; ```. This patch adds the header to the modulemap which prevents us from; trying to merge this struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1020:1733,patch,patch,1733,https://root.cern,https://github.com/root-project/root/pull/1020,1,['patch'],['patch']
Deployability,"We currently have two ODR errors when using modules. One is when; using setjmp, the other is coming from TException. This patch; makes TException non-textual and moves it to the config module; to prevent cyclic dependencies. We also add setjmp to the; modulemap to fix the ODR errors on the setjmp struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:122,patch,patch,122,https://root.cern,https://github.com/root-project/root/pull/876,1,['patch'],['patch']
Deployability,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391#issuecomment-284779477:45,update,update,45,https://root.cern,https://github.com/root-project/root/pull/391#issuecomment-284779477,2,"['integrat', 'update']","['integration', 'update']"
Deployability,"We deprecated for version V, and remove for version V+1. Usually, when using R__DEPRECATED, we cannot even compile the master after tagging version V because of the bump of the version number, so that's when we remove the deprecated code: right after the creation of the release branch of version V. This here does not use R__DEPRECATED so it slipped through. Is that a relevant comment or did I misunderstand your point?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12804#issuecomment-1544306062:271,release,release,271,https://root.cern,https://github.com/root-project/root/pull/12804#issuecomment-1544306062,1,['release'],['release']
Deployability,"We discussed this in the team and the conclusion is that you raised a really important point: how can people discover the binaries without such a functionality flag?. We decided against such a wrapper - mainly because it would add yet another layer of complexity (a python script then then forwards arguments etc). Instead, we will make sure that all ROOT binaries exist also as a version starting with `root`: `rootls` `root-hadd` etc, such that they are way easier to discover for instance when installed in `/usr/local/bin` next to 100s of other binaries. Thanks for suggesting this - well, something similar!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8447#issuecomment-879210583:497,install,installed,497,https://root.cern,https://github.com/root-project/root/issues/8447#issuecomment-879210583,1,['install'],['installed']
Deployability,"We do need still to update the documentation pointed by this contributing file, for example how to create a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839#issuecomment-321206694:20,update,update,20,https://root.cern,https://github.com/root-project/root/pull/839#issuecomment-321206694,1,['update'],['update']
Deployability,"We do not need TCling_UnloadMarker infrastructure anymore. It was originally fixing a problem of Belle II, however, now it breaks their code. The reason it was necessary was that `--as-needed` linker option was used which affected the new teardown order of ROOT. This patch removes the TCling_UnloadMarker and resolves ROOT-10659.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5465:268,patch,patch,268,https://root.cern,https://github.com/root-project/root/pull/5465,1,['patch'],['patch']
Deployability,"We do not need to install rdict here, because it is already installed.; Also this FIXME doesn't work as the list of pcms change; depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3228:18,install,install,18,https://root.cern,https://github.com/root-project/root/pull/3228,2,['install'],"['install', 'installed']"
Deployability,"We do not want to remember the build directory, see issue #7108. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9520:160,update,updated,160,https://root.cern,https://github.com/root-project/root/pull/9520,1,['update'],['updated']
Deployability,"We do not want to remember the build directory, see issue #7108. (cherry picked from commit c2f028feb6da152ff07020b3b4b2a961c1af315e). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9533:230,update,updated,230,https://root.cern,https://github.com/root-project/root/pull/9533,1,['update'],['updated']
Deployability,"We don't have XQuartz installed on our Macs, so testing cannot really succeed :-/ We are discussing whether we should just force cocoa for macOS and ""deprecate"" x11 on macOS (given that it might not build anymore since years...) We'll leave this open until we decide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12528#issuecomment-1483209784:22,install,installed,22,https://root.cern,https://github.com/root-project/root/pull/12528#issuecomment-1483209784,1,['install'],['installed']
Deployability,We don't need any input_line declration from rootmap for startup time. However it may cause a failure on tests when they have custom dictionaries.; ; Should give 5MB improvements for modules.; ; Patch by Yuka Takahashi and me!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3043:195,Patch,Patch,195,https://root.cern,https://github.com/root-project/root/pull/3043,1,['Patch'],['Patch']
Deployability,"We don't need it, and with the upgrade to LLVM 16 the NVPTX target (correctly) errors that there is no (direct) JIT execution support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13482:31,upgrade,upgrade,31,https://root.cern,https://github.com/root-project/root/pull/13482,1,['upgrade'],['upgrade']
Deployability,"We don't need the include of `tbb_config.h` at all, the other headers will pull the configuration in as needed and from where it is available",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239#issuecomment-849407792:84,configurat,configuration,84,https://root.cern,https://github.com/root-project/root/pull/8239#issuecomment-849407792,1,['configurat'],['configuration']
Deployability,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16419#issuecomment-2377653005:9,update,update,9,https://root.cern,https://github.com/root-project/root/issues/16419#issuecomment-2377653005,6,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"We don't use it in our configuration of civetweb, and it will be removed in upcoming versions of Fedora and RHEL:. https://github.com/dotnet/runtime/issues/104775#issuecomment-2229857943. This change is tested by all CI platforms, because globally we set `http=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16749:23,configurat,configuration,23,https://root.cern,https://github.com/root-project/root/pull/16749,1,['configurat'],['configuration']
Deployability,"We generate C++ modules, but we currently don't install them where; they belong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2024:48,install,install,48,https://root.cern,https://github.com/root-project/root/pull/2024,1,['install'],['install']
Deployability,"We have `fail-on-missing=ON` in our builds, and arrow is not installed [everywhere](http://cdash.cern.ch/viewConfigure.php?buildid=487012).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1832:61,install,installed,61,https://root.cern,https://github.com/root-project/root/pull/1832,1,['install'],['installed']
Deployability,We have added a call to `SetBit(TFile::k630forwardCompatibility)` when writing files that will need to be read by old release branches as part of our standard workflows for earlier LHC runs. This allowed the jobs using older releases to run successfully. This is necessary as the ability to simulate our Trigger is tied to the releases that were being used for data-taking at that time.; We would rather that we didn't have to do this though of course.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2228629126:118,release,release,118,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2228629126,3,['release'],"['release', 'releases']"
Deployability,We have bumped the builtin xrootd to 5.4.1 in master and v6-26-00-patches!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967#issuecomment-1055523451:66,patch,patches,66,https://root.cern,https://github.com/root-project/root/issues/9967#issuecomment-1055523451,1,['patch'],['patches']
Deployability,We have discussed that issue. It is not trivial to make `bits/stl_tree.h` a part of a single submodule due to some extra entanglement (in past? stl versions). The expectation is this to be fixed with the upcoming upgrade. Is it still an issue there?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291#issuecomment-1217908346:213,upgrade,upgrade,213,https://root.cern,https://github.com/root-project/root/issues/10291#issuecomment-1217908346,1,['upgrade'],['upgrade']
Deployability,"We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:172,patch,patches,172,https://root.cern,https://github.com/root-project/root/issues/6563,2,"['install', 'patch']","['installed', 'patches']"
Deployability,"We have moved to ROOT 6.30 for our latest production release. So this is not an issue any more for latest CMSSW releases.; For CMSSW release cycle e.g. for following release cycles which use root 6.26 we still have 25 relvals failing with error [a]; - 13.3.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_3_X (based on root commit 9583d15fbe80462d1ed555b6664aa679e4633216); - 13.2.X https://cmssdt.cern.ch/SDT/html/cmssdt-ib/#/ib/CMSSW_13_2_X (based on root commit 65c222e5118e03035be81a458ac97ce868b82478). Although CMSSW_13_0_X, CMSSW_13_1_X also are based on root 6.26 patches branches but we do not get such failures for these releases. The root differences between 13.1.X and 13.2.X are https://github.com/root-project/root/compare/38994b6a72...a25c523160 . [a] https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/raw/el8_ppc64le_gcc11/CMSSW_13_2_X_2024-02-11-2300/pyRelValMatrixLogs/run/20034.0_TTbar_14TeV+2026D86/step2_TTbar_14TeV+2026D86.log; ```; #15 0x000010080ba32c48 in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #16 0x000010080b998394 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #17 0x000010080ba4a354 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/cms-ib.cern.ch/sw/ppc64le/week0/el8_ppc64le_gcc11/cms/cmssw/CMSSW_13_2_X_2024-02-11-2300/external/el8_ppc64le_gcc11/lib/libCling.so; #18 0x000010080ba4bb50 in cling::IncrementalParser::Compile(llvm::StringRef, cling::Compilati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1940677735:53,release,release,53,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1940677735,6,"['patch', 'release']","['patches', 'release', 'releases']"
Deployability,"We have never created a branch off a release branch for a certain commit; our CI etc is not capable of handling this. If you want this please just apply the commits you need. Please note that this is not a version of ROOT that is tested, there might be interference with other commits that you would miss. The release branch contains several fixes that are likely relevant also to ATLAS. I can offer you a tag right after the commit Johannes mentioned, or a speedy patch release. Let me know, please.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515#issuecomment-1116967570:37,release,release,37,https://root.cern,https://github.com/root-project/root/issues/10515#issuecomment-1116967570,4,"['patch', 'release']","['patch', 'release']"
Deployability,We have successfully waited out the issue! ROOT 6.28 already doesn't support 4.8 anymore:; https://root.cern/install/dependencies/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370#issuecomment-1739929700:109,install,install,109,https://root.cern,https://github.com/root-project/root/issues/9370#issuecomment-1739929700,1,['install'],['install']
Deployability,"We might be in a situation where we linked the library into an executable and; our trigger function is inside it. There is no point in trying to load rdict; and pcm files as it will fail. In that case we exit early avoiding the; invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:270,patch,patch,270,https://root.cern,https://github.com/root-project/root/pull/3896,3,['patch'],['patch']
Deployability,"We might not need a general version compat check - but we absolutely need it for our backports - i.e. checking whether the selection ""libstd vs backport"" is identical for ROOT's configuration time and user code include.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8063#issuecomment-830153530:178,configurat,configuration,178,https://root.cern,https://github.com/root-project/root/issues/8063#issuecomment-830153530,1,['configurat'],['configuration']
Deployability,"We need a Clad release (or apply a patch in the ROOT sources), and re-enable the `clad` option on `mac-beta` before this issue can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15912#issuecomment-2255086709:15,release,release,15,https://root.cern,https://github.com/root-project/root/issues/15912#issuecomment-2255086709,2,"['patch', 'release']","['patch', 'release']"
Deployability,We need the VFS we generated during runtime to prevent merging; issues coming from libc/STL when running rootcling. This patch; adds the relevant flag to the normal compilation args (where; it does nothing as we don't have cxxmodules enabled by default); and then let them propagate to cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1014:121,patch,patch,121,https://root.cern,https://github.com/root-project/root/pull/1014,1,['patch'],['patch']
Deployability,We need this to avoid build errors in `yoda` and test root master in CMSSW CXXModules integration builds,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4467#issuecomment-538276379:86,integrat,integration,86,https://root.cern,https://github.com/root-project/root/pull/4467#issuecomment-538276379,1,['integrat'],['integration']
Deployability,"We need to also update the short help:; ```; epsft-53 root $ rootcling --help; Usage: rootcling [-v][-v0-4] [-f] [out.cxx] [opts] file1.h[+][-][!] file2.h[+][-][!] ...[LinkDef.h]; Only one verbose flag is authorized (one of -v, -v0, -v1, -v2, -v3, -v4); and must be before the -f flags; For more extensive help type: rootcling -h; ```; The last line should now be `For more extensive help type: rootcling --help`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3280#issuecomment-455485189:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/3280#issuecomment-455485189,1,['update'],['update']
Deployability,"We need to be able to build release binaries. This is likely somehow connected also to the new CI :-) @smuzaffar I'd be interested to hear your thoughts on this... Maybe we can address this (and still enable https://github.com/root-project/root/issues/12270) by the following sequence for the regular CI:. 1. build ROOT; 2. build the (tar.gz|rpm|deb|...) package; 4. delete build and source dir; 5. unpack the tar.gz package; 6. run roottest; 7. if release: make package available on root.cern. Installing a `.pkg` file on macOS, or an install package on Windows will be very intrusive, so maybe there we can only do steps 5 and 6 using a tar.gz / zip, but that's already better than what we have today. The goal should be to ""test what we release"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12272:28,release,release,28,https://root.cern,https://github.com/root-project/root/issues/12272,5,"['Install', 'install', 'release']","['Installing', 'install', 'release']"
Deployability,"We need to be able to specify ""`ubuntu22` combined with `-DDLLVM_BUILD_TYPE=Debug -Dsoversion=On`"". Ideally we can trigger such a bit from a PR commit. Also for the matrix specified in `.github/workflows/buildroot.yml`:; ```yaml; strategy:; matrix:; image: [""fedora37"", ""centos8"", ""ubuntu18"", ""ubuntu20"", ""ubuntu22""]; config: [""Release""]; ```; we want to specify the flags. We discussed changing this to a list; for me, `[""ubuntu22"", ""-DDLLVM_BUILD_TYPE=Debug"", ""-Dsoversion=On""]` would work well as a replacement for the current `""ubuntu22""` entry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12297:328,Release,Release,328,https://root.cern,https://github.com/root-project/root/issues/12297,1,['Release'],['Release']
Deployability,"We need to disable the validation of PCM files because rootcling; serializes what it sees. For instance, we even serialize in the PCM; file some temporary lookup buffers and the contents of the module maps. We disable the PCH validation but that is not sufficient for PCM. The; TCling code `fInterpreter->getCI()->getPreprocessorOpts().DisablePCHValidation = true`; is not enough because we rely more on the clang driver to setup correctly; our modules-aware interpreter. This patch just uses the correct flag when setting up cling. A proper fix to this issue is thoroughly described in RE-0003 (rootcling; refactor proposal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1345:477,patch,patch,477,https://root.cern,https://github.com/root-project/root/pull/1345,1,['patch'],['patch']
Deployability,"We need to do additional work to get zlib-cf fully working, reverting temporary before new release branching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1977:91,release,release,91,https://root.cern,https://github.com/root-project/root/pull/1977,1,['release'],['release']
Deployability,We need to have class.rules during configuration time to avoid silent error during generation of dictionary: Error in <TClass::ReadRules()>: Cannot find rules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4876:35,configurat,configuration,35,https://root.cern,https://github.com/root-project/root/pull/4876,1,['configurat'],['configuration']
Deployability,We need to respect the existing ExternalASTSource when setting up the; interpreter. Otherwise the ASTReader (which is the existing source); doesn't receive the required callbacks to properly load C++ modules. This patch now creates a multiplexer that contains our new; ASTSource and the existing one if it's necessary. We also; no longer attach the existing sema source which seemingly; was only a workaround that only works for the special case; were the external sema source and the external AST source; are the same object.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1284:214,patch,patch,214,https://root.cern,https://github.com/root-project/root/pull/1284,1,['patch'],['patch']
Deployability,"We needed to save and restore fHeaderParsingOnDemand value when exitting; RegisterModule function, so as not to enter wrong branch here: https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L5899. Patch by Vassil and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2785:223,Patch,Patch,223,https://root.cern,https://github.com/root-project/root/pull/2785,1,['Patch'],['Patch']
Deployability,We often parse the output of commands to get certain system; information. This however fails as soon as the system locale changes; which results in cryptic errors where certain variables have the; wrong content on an otherwise perfectly fine working system. This patch sets LANG=C from CMake to force all subprocesses that; we run to use the stable C locale that should prevent all those; errors in the future.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/780:263,patch,patch,263,https://root.cern,https://github.com/root-project/root/pull/780,1,['patch'],['patch']
Deployability,"We only have release builds for incrementals, i.e. only release builds use artifacts, so there is no point in building debug artifacts.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12593:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/12593,2,['release'],['release']
Deployability,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15646#issuecomment-2132386278:25,update,update,25,https://root.cern,https://github.com/root-project/root/pull/15646#issuecomment-2132386278,2,"['Release', 'update']","['ReleaseNotes', 'update']"
Deployability,"We removed the pytest shipped with roottest because the source code was from 2014 and incompatible with py3.9 (see #6597). However, this poses now the issue on MacOs with python2 that we have to install pytest. Without a virtual environment, MacOS does not allow to pip packages. Since roottest fails on configuration level without pytest, roottest is currently broken in this configuration. @axel @oshadura What should we do? Our CI always runs roottest against python3, so we currently don't see the issue in our infrastructure. I see three options:; 1. Ditch testing of python2 on MacOS and rely on the test coverage of other platforms (python2 is anyway dead); 2. Use a venv overlay in Jenkins for the MacOS nodes (haven't tested but it should work and is binary compatible with the system python); 3. We change the hard failure of roottest to a soft failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6686:195,install,install,195,https://root.cern,https://github.com/root-project/root/issues/6686,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11506:572,update,update,572,https://root.cern,https://github.com/root-project/root/pull/11506,1,['update'],['update']
Deployability,We see several timeouts when running in coverage mode; this might help. We also really do not care about coverage of interpreter/: there are dedicated test suites that are not run as part of testing ROOT. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13490:300,update,updated,300,https://root.cern,https://github.com/root-project/root/pull/13490,1,['update'],['updated']
Deployability,"We see the assert ""Specialization is already registered as lazy"" triggered; due to a hash collision of two sets of template arguments: the arguments; are different but the hash happens to be identical. Be more specific when; claiming that the specialization was already registered as lazy, by not; only comparing the hash, but also the template arguments we found under; that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:; $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C; where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition; |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init; | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr; | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveConstructor exists simple trivial needs_implicit; | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveAssignment exists simple trivial needs_implicit; | `-Destructor simple irrelevant trivial needs_implicit; `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:1827,update,updated,1827,https://root.cern,https://github.com/root-project/root/pull/9248,1,['update'],['updated']
Deployability,"We should also adjust the tests that expect / allow ""Pre-release format version"" in the diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16769#issuecomment-2442067542:57,release,release,57,https://root.cern,https://github.com/root-project/root/pull/16769#issuecomment-2442067542,1,['release'],['release']
Deployability,"We should also apply this patch to DistRDF. I'll let you choose if you want to put it in this PR or I will open another one later. ```diff; diff --git a/bindings/experimental/distrdf/python/DistRDF/__init__.py b/bindings/experimental/distrdf/python/DistRDF/__init__.py; index cf0d095e7a..765aea1c56 100644; --- a/bindings/experimental/distrdf/python/DistRDF/__init__.py; +++ b/bindings/experimental/distrdf/python/DistRDF/__init__.py; @@ -17,7 +17,7 @@ import types; ; import concurrent.futures; ; -from typing import TYPE_CHECKING; +from typing import Iterable, TYPE_CHECKING; ; from DistRDF.Backends import build_backends_submodules; ; @@ -71,7 +71,7 @@ def create_logger(level=""WARNING"", log_path=""./DistRDF.log""):; return logger; ; ; -def RunGraphs(proxies):; +def RunGraphs(proxies: Iterable) -> int:; """"""; Trigger the execution of multiple RDataFrame computation graphs on a certain; distributed backend. If the backend doesn't support multiple job; @@ -83,6 +83,9 @@ def RunGraphs(proxies):; actions belonging to different RDataFrame graphs will be; triggered to avoid useless calls.; ; + Return:; + (int): The number of unique computation graphs executed by this call.; +; Example:; ; @code{.py}; @@ -99,7 +102,7 @@ def RunGraphs(proxies):; ]; ; # Execute the 3 computation graphs; - RunGraphs(histoproxies); + n_graphs_run = RunGraphs(histoproxies); # Retrieve all the histograms in one go; histos = [histoproxy.GetValue() for histoproxy in histoproxies]; @endcode; @@ -121,6 +124,8 @@ def RunGraphs(proxies):; futures = [executor.submit(execute_graph, proxy.proxied_node) for proxy in uniqueproxies]; concurrent.futures.wait(futures); ; + return len(uniqueproxies); +; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13167#issuecomment-1619699859:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/pull/13167#issuecomment-1619699859,3,"['a/b', 'patch']","['a/bindings', 'patch']"
Deployability,"We should enable rootcling warnings and just fix the issues; they point out. This patch enables those warnings and; fixes the warnings that have accumulated over the past years. The specific actions to fix each warnings were:. * We remove TSchemaWarning as this class was removed in commit; 3803a99. * We remove TMPInterruptHandler as this class was removed in commit; 780e16a. * We rename the ROOT::TPoolManager selection rule to the correct; ROOT::Internal::TPoolManager. * We added the VarTransformHandler.h to the headers passed to rootcling; in TMVA. * We remove the selection rule for TMVA::DataSetFactory::EventStats; because the class is private/protected. * Fixed missing ""_t"" in the TrackMathCoreLinkDef.h.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/759:82,patch,patch,82,https://root.cern,https://github.com/root-project/root/pull/759,1,['patch'],['patch']
Deployability,"We should follow the shutdown procedure from FrontendAction::EndSourceFile which ensures clang is properly torn down. This patch allows us to write a module file without having to explicitly call CompilerInstance::clearOutputFiles. This is part of a patch intending to lay down some infrastructure to fix the conditional build of the clang-internal module _Builtin_intrinsics.pcm in the context of cmssw. I've found an easier way to do so, however, this is of generic importance for ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675:123,patch,patch,123,https://root.cern,https://github.com/root-project/root/pull/4675,2,['patch'],['patch']
Deployability,"We should not backport new features, unless an experiment really needs it. The next release is the right place for new features. But @pcanal told me CMS needs it, so please backport whatever is needed and reasonable (esp wrt stability and backward compatibility) to get this into v6-10 - your call!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1052#issuecomment-333938048:84,release,release,84,https://root.cern,https://github.com/root-project/root/pull/1052#issuecomment-333938048,1,['release'],['release']
Deployability,We should not descend into sub-declarations when the top-level declaration was not processed by rootcling. This patch should fix a recent regression in cmssw where we ask for a dictionary for tbb::detail::d1::concurrent_unordered_base<...>. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9295:112,patch,patch,112,https://root.cern,https://github.com/root-project/root/pull/9295,1,['patch'],['patch']
Deployability,We should probably move 'Revert cling patch that broke using ParentClass::Method;' in a separate PR to test if it breaks anything in regular builds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/788#issuecomment-317681393:38,patch,patch,38,https://root.cern,https://github.com/root-project/root/pull/788#issuecomment-317681393,1,['patch'],['patch']
Deployability,"We should put the Python version check at the right place. Right now, the configuration logs tell you that ROOT requires Python; 3.0, because there is no minimum version yet, which can be misleading. Also, remove some redundant comments about the minimum C++ standard for `root7` and `webgui`. This PR should maybe be backported in one of the bulk backports, so the divergence between 6.32 and `master` doesn't increase too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15168:74,configurat,configuration,74,https://root.cern,https://github.com/root-project/root/pull/15168,1,['configurat'],['configuration']
Deployability,"We should really try to stay similar with `master`. For the change in this PR, that's https://github.com/root-project/root/commit/484deb056dacf768aba4954073b41105c431bffc but https://github.com/root-project/root/pull/10734 has some more changes which should all be backported... May I ask what is the motivation to use 6.24 with Python 3.11 and not a more recent version of ROOT (we're about to release 6.30)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13974#issuecomment-1787088544:395,release,release,395,https://root.cern,https://github.com/root-project/root/pull/13974#issuecomment-1787088544,1,['release'],['release']
Deployability,We should remember to review all issues related to PyROOT once we update.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12718#issuecomment-1929122489:66,update,update,66,https://root.cern,https://github.com/root-project/root/issues/12718#issuecomment-1929122489,1,['update'],['update']
Deployability,We think the failing tests are not because of the changes in this PR but because of the configuration with `veccore` + `vc` in Jenkins. I removed a conflicting commit with master (the one changing `FitUtil::setAutomaticChunking`) and the commit with the clang-format huge diff (which was manageable after the last changes on `.clang-format`). The PR should be ready to merge when the Jenkins configuration is ready!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793#issuecomment-320708226:88,configurat,configuration,88,https://root.cern,https://github.com/root-project/root/pull/793#issuecomment-320708226,2,['configurat'],['configuration']
Deployability,We upgraded to v6-32-02 and the issue went away. I guess we can close this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2313183360:3,upgrade,upgraded,3,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2313183360,1,['upgrade'],['upgraded']
Deployability,We use a dummy map during configuration to pass the CMake compiler steps; with the enabled modulemap overlay. We later configure this overlay file; correctly to actually use the STL modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/335:26,configurat,configuration,26,https://root.cern,https://github.com/root-project/root/pull/335,1,['configurat'],['configuration']
Deployability,"We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2858:271,patch,patch,271,https://root.cern,https://github.com/root-project/root/pull/2858,1,['patch'],['patch']
Deployability,"We use the term ""backport"" when merging something from master to release branches, that confused me a couple of times here :-) I renamed the PR to ""[from upstream]"" to confuse me less, sorry about that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12678#issuecomment-1603431594:65,release,release,65,https://root.cern,https://github.com/root-project/root/pull/12678#issuecomment-1603431594,1,['release'],['release']
Deployability,"We want to avoid rebasing branches from forks altogether, and just use patches only. So once my PR to CPyCppyy is merged, these lines can be removed from the sync script. It's my fault that it didn't get merged yet. I still have to implement a unit test :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15151#issuecomment-2278395982:71,patch,patches,71,https://root.cern,https://github.com/root-project/root/pull/15151#issuecomment-2278395982,1,['patch'],['patches']
Deployability,We wanted FATAL_ERROR for our Jenkins. That has been running for many; months now; switch to WARNING for the release as this still allows; users to get a proper ROOT build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7734:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/7734,1,['release'],['release']
Deployability,We wanted FATAL_ERROR for our Jenkins. That has been running for many; months now; switch to WARNING for the release as this still allows; users to get a proper ROOT build. (cherry picked from commit 193c3160c0442e099d80e9ec43306efe299f2edc),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7743:109,release,release,109,https://root.cern,https://github.com/root-project/root/pull/7743,1,['release'],['release']
Deployability,We were indeed considering a patch release to v6.12 - also for other reasons than your commit. Could I ask for your use-case / experiment / some motivation? I.e. if this is mission critical for an experiment's DAQ (doubt it for this patch ;-) then we'll hurry up!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310#issuecomment-462309832:29,patch,patch,29,https://root.cern,https://github.com/root-project/root/pull/3310#issuecomment-462309832,3,"['patch', 'release']","['patch', 'release']"
Deployability,"We were trying to collect the owning modules of every deserialized; decl. Later, we loaded the corresponding library. This is too; much because for some entities (such as forward declarations) we; load the shared object file in vain because no CodeGen is; required.; ; This patch relies on the ASTReader to decide if a decl needs to; be CodeGenned or not. If it requires an action from CodeGen the; ASTReader passes it through the HandleInterestingDecl interface.; ; This patch brings back to normal the amount of loaded libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2006:274,patch,patch,274,https://root.cern,https://github.com/root-project/root/pull/2006,2,['patch'],['patch']
Deployability,"We will investigate and reproduce the error. I can still install Python 3.8 from the Arch User Repository, fortunately :). It's true that Python 3.8 is the oldest version that we still support. That was defined last year, because Python 3.8 was the oldest version that was not EOL yet. However, 3.8 will be end-of-life next month: https://devguide.python.org/versions/. So maybe something to ask @vepadulano: did you intend to follow the precedent of 6.32 and only support Python versions that are not EOL by the release of 6.34?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370740723:57,install,install,57,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370740723,2,"['install', 'release']","['install', 'release']"
Deployability,We will sadly loose this hypnotizing piece of art with this patch: https://teemperor.de/pub/rootio_errors.png,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/832#issuecomment-319964203:60,patch,patch,60,https://root.cern,https://github.com/root-project/root/pull/832#issuecomment-319964203,1,['patch'],['patch']
Deployability,We would also need to support this on Windows for consistency. Can you make sure that patch works on Windows too?. cc: @bellenot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-759580712:86,patch,patch,86,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-759580712,1,['patch'],['patch']
Deployability,We'll have to rebase your patches on top of mine - https://github.com/root-project/root/pull/4338 should go in first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4203#issuecomment-529318903:26,patch,patches,26,https://root.cern,https://github.com/root-project/root/pull/4203#issuecomment-529318903,1,['patch'],['patches']
Deployability,"We're building LLVM in `Release` mode (unless a developer explicitly asks for something else, and even that is only a subset of ROOT developers), so `LLVM_OPTIMIZED_TABLEGEN` will actually be *slower* because it requires an extra, internal CMake invocation. To give some context, this option is meant for upstream development if you have a `Debug` build of LLVM which makes `{llvm,clang}-tablegen` *very* slow, but aren't actually debugging the `tablegen` infrastructure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8624#issuecomment-1108919955:24,Release,Release,24,https://root.cern,https://github.com/root-project/root/issues/8624#issuecomment-1108919955,1,['Release'],['Release']
Deployability,"We're still missing a link to the new operation in the RDF docs and an update in the docs of RMergeableFill, I can add them in another PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9760#issuecomment-1027697061:71,update,update,71,https://root.cern,https://github.com/root-project/root/pull/9760#issuecomment-1027697061,1,['update'],['update']
Deployability,"We've verified that your patch fixes Root with our in-development compiler and STL, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15437#issuecomment-2102370887:25,patch,patch,25,https://root.cern,https://github.com/root-project/root/pull/15437#issuecomment-2102370887,1,['patch'],['patch']
Deployability,"We, SPI, installed a patched version of 6.24.06 for ATLAS. I think this ticket can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515#issuecomment-1134385016:9,install,installed,9,https://root.cern,https://github.com/root-project/root/issues/10515#issuecomment-1134385016,2,"['install', 'patch']","['installed', 'patched']"
Deployability,"Web-based geometry viewer now extracted into separate library. Rename classes: `REveGeomViewer` -> `RGeomViewer`. By this also simplify handling of so-called ""server-side shapes"" - less data can be transferred, no extra workaround for normals calculations. Ease usage of geometry viewer in `RBrowser`. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11554:302,Update,Update,302,https://root.cern,https://github.com/root-project/root/pull/11554,1,['Update'],['Update']
Deployability,Web-releated release notes for 6.16 branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3084:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/3084,1,['release'],['release']
Deployability,WebGui - do not produce error output when chrome not installed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4880:53,install,installed,53,https://root.cern,https://github.com/root-project/root/pull/4880,1,['install'],['installed']
Deployability,WebWindow: cummulative patch with many fixes and updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:23,patch,patch,23,https://root.cern,https://github.com/root-project/root/pull/2603,2,"['patch', 'update']","['patch', 'updates']"
Deployability,Webgui update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9094:7,update,update,7,https://root.cern,https://github.com/root-project/root/pull/9094,1,['update'],['update']
Deployability,Weird Jenkins pipeline failure again :-/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2904#issuecomment-435363512:14,pipeline,pipeline,14,https://root.cern,https://github.com/root-project/root/pull/2904#issuecomment-435363512,1,['pipeline'],['pipeline']
Deployability,"Weird errors, pretty much unrelated with the changes. I do not have them on my installation.; I'll try re-running.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3063#issuecomment-442871884:79,install,installation,79,https://root.cern,https://github.com/root-project/root/pull/3063#issuecomment-442871884,1,['install'],['installation']
Deployability,"Well that's a whole different project I guess :sweat_smile: the point of this PR is showcasing generality of reading data in TDF -- parallelism and (runtime) type safety included. > How did you prevent something 'similar' with the new parser?. TDataSource allows parallel reading by design. It provides to TDF a cursor per processing slot, and each processing slot updates the entry that the cursor points to independently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1160#issuecomment-335499653:365,update,updates,365,https://root.cern,https://github.com/root-project/root/pull/1160#issuecomment-335499653,1,['update'],['updates']
Deployability,"Well this arised particularly by trying to have a conda environment with both `root` and `zfit`. zfit depends on tensorflow and therefore tensorflow would either be installed from conda-forge or from pypi. I'm not really sure I understand your proposed solution. Can I do all that without compiling root myself and while grabbing it from conda? If so, at which point of the installation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970#issuecomment-2208640078:165,install,installed,165,https://root.cern,https://github.com/root-project/root/issues/15970#issuecomment-2208640078,2,['install'],"['installation', 'installed']"
Deployability,Well we need a stacktrace of the crash to correlate. E.g. the `TMemFile`s are generally subject to the list of cleanup thread issues (disclaimer: I didn't check the patch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333654218:165,patch,patch,165,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333654218,1,['patch'],['patch']
Deployability,"Well, I doubt there are some out-of-band data being sent/received. @rodwalker, @rdschaffer would it be possible to reproduce the problem with xrootd client logs switched on (`XRD_LOGLEVEL=Dump`)?. Regarding ABI compatibility, we ensure ABI forward compatibility, meaning that it is safe to link an application built with an older version of xrootd, with a newer version of the library (e.g. one can build his application with say `4.11.0` and then link with `4.12.0`). The opposite is not possible. Of course this applies to all releases from `4.x.x` series, the ABI has been broken when we moved to XRootD5.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-745569137:529,release,releases,529,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-745569137,1,['release'],['releases']
Deployability,"Well, I just wanted to start a discussion. Many of those files are empty or only have a single line header. I don't think there's much value in them. Also, the old versions themselves will still contain those files. In any case, if not to remove, it might make sense to at least move these directories all under `README/ReleaseNotes/old/`. I am looking to remove old/deprecated stuff and `git grep` always gets cluttered with stuff from those files, making it more time consuming to find the real code that needs to be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202#issuecomment-449051508:320,Release,ReleaseNotes,320,https://root.cern,https://github.com/root-project/root/pull/3202#issuecomment-449051508,1,['Release'],['ReleaseNotes']
Deployability,"Well, I saw *extra* issues with the patch. I'm not sure we should merge this. The current problems with MPI are known (see [ROOT-9293](https://sft.its.cern.ch/jira/browse/ROOT-9293)). Once that's fixed, we can be more confident in merging the move to C bindings, which would be nice, due to the deprecation of the C++ bindings.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1843#issuecomment-387661886:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/1843#issuecomment-387661886,1,['patch'],['patch']
Deployability,"Well, I wouldn't say I have identified solutions, I was hoping you would judge that, which is why I first opened an issue to discuss it. Anyway, [here](https://github.com/root-project/root/pull/9260) is a pull request draft which comprises all the changes mentioned here. I was able to apply this patch to the current stable release and successfully build it against glibc. With musl there are still some other errors to be solved - I will try to address these later when I have the time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963518448:297,patch,patch,297,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963518448,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Well, actually it was less work than I thought.; I implemented now all the additions, changes and suggestions from @lmoneta. I used now std::vector everywhere it's features are useful. For the rest I stayed with using arrays to stay similar to all other TGraph objects. I moved the functions GetPointX, GetPointY, SetPointX, SetPointY and GetObjectInfo to the TGraph class because they apply to any TGraph object and only were in my custom class cause I could not implement them in TGraph without using a custom Root installation. I replaced the funtion SetNErrorDimensions by the functions AddYError and DeleteYError as proposed by @lmoneta. Since I think the meaning of ""dimension"" might not be 100% clear, I exchanged it to a term claryfing that it corresponds to different y errors. Besides that I implemented some further features and fixed a memory leak in the function PaintGraphMultiErrors in the TGraphPainter class. I also added a test macro testing the most critical features like streaming the class, adding / deleting points and y errors and the summation of y errors for fitting with different methods.; Furthermore, I added a small tutorial macro that shows how to use the basic functionalities of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-559211358:517,install,installation,517,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-559211358,2,['install'],['installation']
Deployability,"Well, can you maybe try to install zlib and zstd with homebrew?; I'm not sure one can mix packages installed with different package managers, but I'm not a MacOS user...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12820#issuecomment-1549298577:27,install,install,27,https://root.cern,https://github.com/root-project/root/issues/12820#issuecomment-1549298577,2,['install'],"['install', 'installed']"
Deployability,"Well, looks like not everything is passing... I will investigate the problems and update this branch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/965#issuecomment-328119342:82,update,update,82,https://root.cern,https://github.com/root-project/root/pull/965#issuecomment-328119342,1,['update'],['update']
Deployability,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-502815892:138,install,installed,138,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-502815892,2,['install'],['installed']
Deployability,"Well, one thing that is clear is that this problem seems to be associated with specific sites. For my 'test' job:. [test job](https://bigpanda.cern.ch/task/23578674/). The sites that are successful either have local reading, or they use xrootd without problems. The latter are: ; SWT2_CPB; IN2P3-LPSC_LAKE; RAL. For the failures, these are all just xrootd problems, at sites:; IN2P3-CPPM; CERN-T0; TOKYO; BNL. So I would suspect some difference in the xrootd installation between these two sites. (I personally have no idea how to check this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747328346:459,install,installation,459,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747328346,2,['install'],['installation']
Deployability,"Well, the variable is private and the whole class is in the .cxx because it's an implementation detail. I can of course change it, but IMHO this is better checked if we start discussing how to integrate the `RCombinedDS` and we have an example for that to work correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-464018975:193,integrat,integrate,193,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-464018975,1,['integrat'],['integrate']
Deployability,"Well, there was already an existing fix for that. In this patch it just gets rearranged - pushed into `GetEstimatedClusterSize`:. https://github.com/root-project/root/pull/2412/files#diff-de4250b19a609451f620d99107b0d4a4R578. However, if `AutoFlush` is zero and `fNClusterRange` is set, it will now use the cluster information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-409952485:58,patch,patch,58,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-409952485,1,['patch'],['patch']
Deployability,"Well-known branch names, e.g. `master` or `v6-28-00-patches` always use the equivalent upstream roottest branch. However, we should be careful not to match a substring. Concretely, before this patch, `master-14449` was incorrectly taken as a well-known branch causing the error below.; ```; Cloning into 'roottest'...; fatal: Remote branch master-13449 not found in upstream origin; CMake Error at CMakeLists.txt:780 (message): Expected roottest at 'C:/ROOT-CI/src/roottest' (not a directory?); ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13504:52,patch,patches,52,https://root.cern,https://github.com/root-project/root/pull/13504,2,['patch'],"['patch', 'patches']"
Deployability,"What I see is that TTree is still about twice as slow as TTree for Jakob's benchmark, the patch does not affect the timings drastically. The number of calls to TBranch::GetEntry were counted with callgrind, the unit is retired cpu instructions. The flamegraphs seem to suggest that the bulk of the slowdown comes from the overhead of going through TTreeReaderValue::Get, GetAddress and ProxyReadTemplate instead of directly calling GetEntry. I'm away next week but you should be able to run the benchmark easily, it's at https://github.com/bluehood/iotools/tree/rootonly (branch rootonly) and the README contains instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455835746:90,patch,patch,90,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455835746,1,['patch'],['patch']
Deployability,What about including [this](https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration) in the reference guide on [this page](https://root.cern/doc/master/group__Integration.html) ?. @lmoneta what do you think ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810160931:108,integrat,integration,108,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810160931,2,['integrat'],['integration']
Deployability,"What about this: I will install civetweb on distros where it exists, and we use those. For platforms where it doesn't exist we use the builtin. :+1: :-1: ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14194#issuecomment-1847037757:24,install,install,24,https://root.cern,https://github.com/root-project/root/pull/14194#issuecomment-1847037757,1,['install'],['install']
Deployability,"What are you talking about?!?. We would like a release called v6-24-06a that is v6-24-06 with just the one update pointed out by Johannes. You could choose a different name as well. We only care about the content of the tag, not its name. ROOT often created ""special tags"" in the past. Or would you for instance not call https://github.com/root-project/root/releases/tag/v6-01-03-CMS a release? 😕 . If the version macros of v6-24-06a declare the release to be v6-24-06, then so be it. I really don't care. But you could potentially come up with something better even for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10515#issuecomment-1116936203:47,release,release,47,https://root.cern,https://github.com/root-project/root/issues/10515#issuecomment-1116936203,5,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"What do you mean by compiling ROOT yourself? What you have seems to have been installed with Portage. That should not link to external LLVM. Like with mesa, if some external project you link to as well itself links to LLVM without hiding symbols, then problems could arise. I had to revert using external LLVM in Gentoo for that reason in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180#issuecomment-843115845:78,install,installed,78,https://root.cern,https://github.com/root-project/root/issues/8180#issuecomment-843115845,1,['install'],['installed']
Deployability,"What is the status here? Should this be updated and merged, or closed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394#issuecomment-361199929:40,update,updated,40,https://root.cern,https://github.com/root-project/root/pull/1394#issuecomment-361199929,1,['update'],['updated']
Deployability,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:71,install,installed,71,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,2,['install'],['installed']
Deployability,What's the release schedule for zeromq versus our mid January ROOT v6.26?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981834872:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981834872,1,['release'],['release']
Deployability,"When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3926:13,install,installed,13,https://root.cern,https://github.com/root-project/root/pull/3926,1,['install'],['installed']
Deployability,"When I do `bin/root.exe -q -l` with this patch in release build, unsetting LD_LIBRARY_PATH and DYLD_LIBRARY_PATH, I get this error:; ```; [yuka@yuka-arch module-release]$ rm -rf /tmp/*; [yuka@yuka-arch module-release]$ source bin/thisroot.sh; [yuka@yuka-arch module-release]$ bin/root.exe -q -l; ; [yuka@yuka-arch module-release]$ unset DYLD_LIBRARY_PATH; [yuka@yuka-arch module-release]$ unset LD_LIBRARY_PATH; [yuka@yuka-arch module-release]$ bin/root.exe -q -l; input_line_1:1:10: remark: building module 'stl' as '/tmp/org.llvm.clang.yuka/ModuleCache/stl.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'stl' [-Rmodule-build]; /home/yuka/module-release/include/libc.modulemap:1:8: fatal error: module 'libc' is defined in both '/tmp/org.llvm.clang.yuka/ModuleCache/libc.pcm' and '/home/yuka/module-release/lib/libc.pcm'; module ""libc"" [system] {; ^; Error in <TCling::LoadModule>: Module libc failed to load; Error in <TCling::LoadModule>: Module libc not found!; Error in <TCling::LoadModule>: Module ROOT_Foundation_C failed to load; Error in <TCling::LoadModule>: Module ROOT_Foundation_C not found!; Error in <TCling::LoadModule>: Module ROOT_Config failed to load; Error in <TCling::LoadModule>: Module ROOT_Config not found!; Error in <TCling::LoadModule>: Module ROOT_Foundation_Stage1_NoRTTI failed to load; Error in <TCling::LoadModule>: Module ROOT_Foundation_Stage1_NoRTTI not found!; terminate called after throwing an instance of 'std::runtime_error'; what(): >>> Interpreter compilation error:; Unexpected end of file; Aborted (core dumped); ```; As shown, Clang is still trying to generate implicit modules in `/tmp/org.llvm.clang.yuka/ModuleCache/`. This patch is adding `/home/yuka/module-release/lib:.:/home/yuka/module-release/lib:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib` to TCling path, so I guess the expected result is im",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761#issuecomment-377492896:41,patch,patch,41,https://root.cern,https://github.com/root-project/root/pull/1761#issuecomment-377492896,10,"['patch', 'release']","['patch', 'release']"
Deployability,"When I install ROOT on macOS from sources the png library is found in:; ```; -- Found PNG: /usr/local/lib/libpng.dylib (found version ""1.6.40"") ; ```; And it works fine with ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825#issuecomment-1754680114:7,install,install,7,https://root.cern,https://github.com/root-project/root/issues/13825#issuecomment-1754680114,1,['install'],['install']
Deployability,"When ROOT macros running, they typically create canvas ""c1"".; If run macro again and again - new canvas will be created but old will be deleted.; This was not handled before in RBrowser.; Now widget is closed if correspondent RWebWindow is destroyed. Also change logic how TCanvas widget handle canvas pointer.; While ROOT manage canvas itself one cannot use `std::unique_ptr<TCanvas>` to hold pointer.; Instead canvas always searched by name and if gone - widget automatically closed. Update slightly client part",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16444:486,Update,Update,486,https://root.cern,https://github.com/root-project/root/pull/16444,1,['Update'],['Update']
Deployability,"When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**; Currently, the abstract interface does not have Type/Streamer info such that root complains:; `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`; How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222:96,update,updated,96,https://root.cern,https://github.com/root-project/root/pull/3222,1,['update'],['updated']
Deployability,"When TMVA is reading an input tree it is possible for the user to have forgotten; to remove pointers to out-of-scope variables. This patch prevents TMVA from; messing up the stack in that case. The user should *always* call ResetBranchAddresses on their trees; when they are done with them, but in case they forgot this can save; some debugging time at no cost.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/872:133,patch,patch,133,https://root.cern,https://github.com/root-project/root/pull/872,1,['patch'],['patch']
Deployability,"When `TButton` clicked in web canvas, button method executed on the server side. Adjust `TButton::SavePrimitive` and `TSlider::SavePrimitive` to correctly handle escape characters. Update JSROOT for future 6.28 release. Fix plugin file name for web geometry viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11893:181,Update,Update,181,https://root.cern,https://github.com/root-project/root/pull/11893,2,"['Update', 'release']","['Update', 'release']"
Deployability,"When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3986:228,install,installed,228,https://root.cern,https://github.com/root-project/root/pull/3986,1,['install'],['installed']
Deployability,"When a RooDataSet is constructed without a weight variable, weights are ignored when events; are added to the dataset. Now, there will be a clear warning notifying the user that an event; weight is being ignored.; The documentation has also been updated. See also:; https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3657:246,update,updated,246,https://root.cern,https://github.com/root-project/root/pull/3657,1,['update'],['updated']
Deployability,"When a continuous PDF is fit to binned data, bins need to be sampled more fine grained to avoid biases. This fixes; ROOT-3874; ROOT-3635. Note that the first commits before `AddRooBinSamplingPdf` are in #6693, so no need to review those.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6694:7,continuous,continuous,7,https://root.cern,https://github.com/root-project/root/pull/6694,1,['continuous'],['continuous']
Deployability,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5422:158,patch,patch,158,https://root.cern,https://github.com/root-project/root/pull/5422,1,['patch'],['patch']
Deployability,"When building ROOT in optimized mode, we enable fast math which then; disables errno on math functions. But this only happens in TCling,; so all modules built by rootcling_stage1 are suddenly out of sync; and we get errors like this:; ```; error: errno in math functions was enabled in PCH file but is currently disabled; ```. This patch just applies the same setting in _stage1. In theory we; should make a central place where we have these extra flags, but; that's out of scope for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229:332,patch,patch,332,https://root.cern,https://github.com/root-project/root/pull/1229,1,['patch'],['patch']
Deployability,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10578:294,update,updated,294,https://root.cern,https://github.com/root-project/root/issues/10578,1,['update'],['updated']
Deployability,"When building the foundation of frameworks often the dictionary modules require third party modules such as clhep, boost and tinyxml. Those modules do not require I/O information and it is permissible to be built as a part of another dictionary module build. This patch relaxes the eager check for implicit module builds by adding a flag -mByproduct which turns of the diagnostic disallowing implicit module builds. cc @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5613:264,patch,patch,264,https://root.cern,https://github.com/root-project/root/pull/5613,1,['patch'],['patch']
Deployability,"When building with CMSSW, root was being in an infinite loop when; parsing this forward declaration at TCling::RegisterModule:; `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace; name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3186:304,patch,patch,304,https://root.cern,https://github.com/root-project/root/pull/3186,1,['patch'],['patch']
Deployability,"When calling TOracleStatement::GetBinary() function, memory was; allocated with `malloc(len)` operator, but released with `delete [] buf`; Definitely wrong. Nobody was using it before - or clib was doing; something wrong. Adjust Oracle/MySQL/SQLite/ODBC/PgSQL classes to c++11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4927:108,release,released,108,https://root.cern,https://github.com/root-project/root/pull/4927,1,['release'],['released']
Deployability,"When calling rootcling we expect a set of header files and a selection file. In some cases it is more convenient to include all of them in a single header and give it to rootcling. In cases where the header files are so many and exceed the maximum characters allowed by the console the umbrella header is the only way to work it around. In cases where the umbrella header is temporary (such as in cmssw) we cannot add it as a part of the module, however, we have added its direct includes in the module definition. Then rootcling should not complain if the umbrella header file is not part of the module definition. This patch should fix the issues in cmssw when building a dictionary for DataFormats/StdDictionaries.; cc: @smuzaffar, @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4537:621,patch,patch,621,https://root.cern,https://github.com/root-project/root/pull/4537,1,['patch'],['patch']
Deployability,When can we expect this feature to be added to the ROOT releases?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12718#issuecomment-2068882698:56,release,releases,56,https://root.cern,https://github.com/root-project/root/issues/12718#issuecomment-2068882698,1,['release'],['releases']
Deployability,"When cling is embedded and the plugins are linked statically we can rely; on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely; on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2992:284,patch,patch,284,https://root.cern,https://github.com/root-project/root/pull/2992,1,['patch'],['patch']
Deployability,"When composing the expressions to jit autoparsing is redundant as we; know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of; autoparse and autoload (useful for modules); and secondly avoids deep call; chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3765:109,patch,patch,109,https://root.cern,https://github.com/root-project/root/pull/3765,1,['patch'],['patch']
Deployability,"When created JSON should be used outside ROOT application and without running THttpServer,; it is better to use batch mode for generation of JSON files. Places are:. 1. jupyter; 2. doxygen; 3. c1->SaveAs(""file.json""). Produced JSON is more robust and can be processed as is - how it is performed by the batch image production.; Main difference - extra JS modules directly embed into JSON. And `TF1` always store its values. Also configure `source_dir` of JSROOT when producing images. This let use local mathjax. Update JSROOT with Android/TGeo fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16783:513,Update,Update,513,https://root.cern,https://github.com/root-project/root/pull/16783,1,['Update'],['Update']
Deployability,"When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace).; The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me.; [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6529:607,patch,patch,607,https://root.cern,https://github.com/root-project/root/issues/6529,1,['patch'],['patch']
Deployability,When did we visibly (eg through a warning message) deprecate `-c`? We need at least one production release where this was deprecated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4360#issuecomment-529229650:99,release,release,99,https://root.cern,https://github.com/root-project/root/pull/4360#issuecomment-529229650,1,['release'],['release']
Deployability,"When drawing different projections via View -> Browse to menu; command, one have to cleanup previousely shown views.; Implement for plain three.js and JSROOT-based views,; to be implemented for `RCore` renderer.; Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7321:213,Update,Update,213,https://root.cern,https://github.com/root-project/root/pull/7321,1,['Update'],['Update']
Deployability,"When filling histograms without limits in parallel a problem to be addressed is how to make sure that the ranges are compatible for the final merging.; This PR proposes a technique based on a static reference list of TAxis, kept as a static in TH1, filled/used by the different threads. The first thread calculates the TAxis ranges and saves it into the list, the others use it. The list is protected by a RW lock .; The logic is implemented in TH1::BufferEmpty and holds for TH{1,2,3}, the specificity of each TH{1,2,3} being moved to a set of new member functions called by TH1::BufferEmpty. The change in TH1Merger is required to calculate the axis and dump the internal buffers when the internal buffersize has not yet been reached. This treatment can perhaps be improved to get the same result of the single thread case. The patch also implements the hook for a call back function to implement the same functionality in the case of multi-processing. A patch with adaptation to multiproc will follow. The tutorial mt301_fillHistAutoBin.C illustrates the usage with TThreadedObject . NB: many of the changes in TH1.h come from clang-format-{3.8, 3.9, 4.0}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/902:830,patch,patch,830,https://root.cern,https://github.com/root-project/root/pull/902,2,['patch'],['patch']
Deployability,"When gPad->Modified() called without real change in the content, produced TWebCnavas JSON will be equivalent with previous one. Therefore one can assume that newer version already was send to the client and do not need to be updated again",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13116:225,update,updated,225,https://root.cern,https://github.com/root-project/root/pull/13116,2,['update'],['updated']
Deployability,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964:5,install,installing,5,https://root.cern,https://github.com/root-project/root/issues/7964,5,['install'],"['install', 'installation', 'installations', 'installing']"
Deployability,"When integrating a region next to a narrow Crystal Ball shape, the integral; can evaluate to zero. Since RooFit cannot deal with zero integrals,; the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4000:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/4000,1,['integrat'],['integrating']
Deployability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/16099,2,['integrat'],"['integrating', 'integration']"
Deployability,"When one updates a file using `Snapshot`, one ends up with multiple cycles:; ```python; In [10]: f.hi.ls(); TDirectoryFile*		hi	hi; KEY: TTree	there;2	there; KEY: TTree	there;1	there; ```; This adds the `fOverwrite` option to the `RSnapshotOptions` class to overwrite an existing `TTree`. First mentioned in the forum [here](https://root-forum.cern.ch/t/no-way-to-overwrite-using-snapshot/37936).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4965:9,update,updates,9,https://root.cern,https://github.com/root-project/root/pull/4965,1,['update'],['updates']
Deployability,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8565:1028,patch,patch,1028,https://root.cern,https://github.com/root-project/root/pull/8565,2,['patch'],['patch']
Deployability,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10544:245,patch,patch,245,https://root.cern,https://github.com/root-project/root/pull/10544,1,['patch'],['patch']
Deployability,"When producing single image for the canvas - do not add ""%d"" qualifier,; which is required for multiple files. Update JSROOT with minor fixes in interactive functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13626:111,Update,Update,111,https://root.cern,https://github.com/root-project/root/pull/13626,1,['Update'],['Update']
Deployability,"When reading an evaluated EST, make sure we provide *that* to the; update object, instead of leaving the EST to be used for the; update uninitialized. Remove the now unused (and due to two FuncDecls fairly ambiguous); ctor from a FuncDecl. Instead, set ShouldUpdateESI explicitly in; the only case where it matters. This fixes 30ecf72, and as that; points out, should become irrelevant once; llvm-mirror/clang@5d50602; is merged into ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6161:67,update,update,67,https://root.cern,https://github.com/root-project/root/pull/6161,2,['update'],['update']
Deployability,When reading rdict files from the module we use the module name to form an; entry in a pending rdict map. It is later used when a library is loaded to; locate the corresponding rdict file. This patch resolves a potential symlinks and allows ROOT to find its rdict; files. It fixes the cmssw C++ modules setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4175:194,patch,patch,194,https://root.cern,https://github.com/root-project/root/pull/4175,1,['patch'],['patch']
Deployability,"When running ""make package"", it was observed that copying the; Python source files to runtimedir was incorrect, and the generation; of the bytecodes was failing later too as a consequence. This change ensures that the Python sources are installed; correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5663:237,install,installed,237,https://root.cern,https://github.com/root-project/root/pull/5663,1,['install'],['installed']
Deployability,"When running ccmake in a root build directory, I noticed that some variable descriptions are empty (usually one sees a one-line description stemming from cmake/modules/RootBuildOptions.cmake). This happens when their value is forced in cmake/modules/SearchInstalledSoftware.cmake. This also affects the comments in builddir/CMakeCache.txt. I claim that when forcing these variables' values, the comment is even more important than when they remain at their defaults or user-set values. In the below patch, I basically ran an editor macro retaining the values of `${opt}_description` (as set by `ROOT_BUILD_OPTION`) and adds a very brief explanation of why the value got changed (usually by inspecting the immediate control flow and/or echoing the status message that is print out anyway). The comments are sometimes sub-optimal (when values are forced to the value that the user has set themselves anyway), but … I guess it's still nice to point out ""you had no choice here"". Unrelated to the main part:. `tmva-cuda` is force set, but nowhere else used, I suspect this should've been `tmva-gpu`. In one place I replaced; ```; if (something); else(); code; ```; by; ```; if (NOT something); code; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:499,patch,patch,499,https://root.cern,https://github.com/root-project/root/pull/2056,1,['patch'],['patch']
Deployability,"When running rootcling to produce C++ modules we currently run; into this issue that is an issue in this specific LLVM revision; we are using in ROOT. The issue was fixed by Richard upstream; in r303373. The error we fix with this patch is:; ```; While building module 'Core':; While building module 'stl' imported from input_line_1:1:; In file included from <module-includes>:5:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/ccomplex:39:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/complex:42:; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:102:23: error: use of undeclared identifier '_Tp'; struct __are_same<_Tp, _Tp>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:25: error: use of undeclared identifier '_Tp'; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:29: error: expected expression; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:329:37: error: declaration of '_Tp' must be imported from module 'stl.ccomplex' before it is required; : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:327:21: note: previous declaration is here; template<typename _Tp>; ^; ```. Original patch description:. When we enter a module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016:231,patch,patch,231,https://root.cern,https://github.com/root-project/root/pull/1016,1,['patch'],['patch']
Deployability,"When running:. ```c++; #include <boost/program_options.hpp>; ```. I get the following [crash](https://github.com/root-project/root/files/11401279/crash.txt). This is on a macOS 13.3.1 M1 machine, using XCode 14.3 and the tip of the v6-28-00-patches branch, without any modifications on my side.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762:241,patch,patches,241,https://root.cern,https://github.com/root-project/root/issues/12762,1,['patch'],['patches']
Deployability,"When starting root.exe on Windows with a version of Visual Studio different than the one used to build ROOT, it mighty crash with the following error:; Assertion failed: !isNull() && ""Cannot retrieve a NULL type pointer"", file C:\build\ws\BUILDTYPE\Debug\LABEL\windows10\V\6-20\root\interpreter\llvm\src\tools\clang\include\clang/AST/Type.h, line 630; This patch fixes the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5620:357,patch,patch,357,https://root.cern,https://github.com/root-project/root/pull/5620,2,['patch'],['patch']
Deployability,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7176:176,patch,patch,176,https://root.cern,https://github.com/root-project/root/issues/7176,4,['patch'],"['patch', 'patches']"
Deployability,"When the mempool for RooArgSet was modernised to prevent crashes during the teardown of; global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed; RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3742:147,update,updated,147,https://root.cern,https://github.com/root-project/root/pull/3742,1,['update'],['updated']
Deployability,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:265,integrat,integration,265,https://root.cern,https://github.com/root-project/root/pull/10995,1,['integrat'],['integration']
Deployability,"When the output TFile of a Snapshot is opened in UPDATE mode, and; the output TTree has the same name as a TTree already in the TFile,; the expected behavior is that Snapshot writes adds a new namecycle; to the file. However, Snapshot+IMT is based on TBufferMerger, and TBufferMerger's; behavior in this scenario is to try to merge the new data with the; data already in the TFile (in the same namecycle). In order to make Snapshot+IMT behave the same as a non-IMT Snapshot,; we now always write an empty TTree (with the correct branches) to; the TFile before we start an IMT fill. This first write creates the; new namecycle (initially with no data) with which TBufferMerger will; merge its buffers. This fixes ROOT-10573.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5139:49,UPDATE,UPDATE,49,https://root.cern,https://github.com/root-project/root/pull/5139,1,['UPDATE'],['UPDATE']
Deployability,"When the output TFile of a Snapshot is opened in UPDATE mode, and; the output TTree has the same name as a TTree already in the TFile,; the expected behavior is that Snapshot writes adds a new namecycle; to the file.; However, Snapshot+IMT is based on TBufferMerger, and TBufferMerger's; behavior in this scenario is to try to merge the new data with the; data already in the TFile (in the same namecycle). In order to make Snapshot+IMT behave the same as a non-IMT Snapshot,; we now always write an empty TTree (with the correct branches) to; the TFile before we start an IMT fill. This first write creates the; new namecycle (initially with no data) with which TBufferMerger will; merge its buffers. This fixes ROOT-10573. This is a backport of #5139 to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5140:49,UPDATE,UPDATE,49,https://root.cern,https://github.com/root-project/root/pull/5140,1,['UPDATE'],['UPDATE']
Deployability,"When the user passes a gradient to the `ROOT::Math::Minimizer` via inheriting from the `ROOT::Math::IMultiGradFunction`, the error level is only considered correctly if `SetFunction()` is **called after** `SetErrorDef()`, which is completely unexpected. This should either be fixed, or if not possible, the minimizer should error out if you try to set the function too early. This bug is the reason why it took me so long to figure out to use the analytical gradient provided by `clad` in the minimizer for RooFit: I just couldn't understand why the uncertainties were wrong and until now thought it was because the gradient was wrong or not handled correctly by the minimizer. But in the end, it was all just this simple configuration problem. This code reproduces the issue with the example of finding the minimum of a simple parabola:; ```C++; double eval(double x) { return x * x; }. double evalDerivative(double x) {return 2 * x; }. class MyFunc : public ROOT::Math::IMultiGenFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }. private:; double DoEval(const double *x) const override { return eval(x[0]); }; };. class MyGradFunc : public ROOT::Math::IMultiGradFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }; private:; double DoEval(const double *x) const override { return eval(x[0]); }; double DoDerivative(const double *x, unsigned int /*icoord*/) const override { return evalDerivative(x[0]); }; };. template<class Func>; void minimize(Func const& func); {; std::unique_ptr<ROOT::Math::Minimizer> m{ROOT::Math::Factory::CreateMinimizer(""Minuit2"")};; m->SetPrintLevel(1);. // Set initial value, step size, and range; m->SetLimitedVariable(0, ""x"", 10, 1, -50, 50);. // The error level will be ignored in the IMultiGradFunction case without; // any warning to the user! Swapping the next two lines ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:722,configurat,configuration,722,https://root.cern,https://github.com/root-project/root/issues/12338,1,['configurat'],['configuration']
Deployability,"When trying to build with `-Dbuiltin_llvm=OFF` on Nixpkgs on NixOS (x86_64-linux),. ```; -- Configuring done; CMake Error at /nix/store/ixkz33c734kgvbpmyrcjclcns88gv4vj-llvm-13.0.1-dev/lib/cmake/llvm/AddLLVM.cmake:735 (add_dependencies):; The dependency target ""install-clang"" of target ""install-clang++"" does not; exist.; ```. <details>; <summary>Full build log</summary>; <pre wrap=true>; building '/nix/store/8xsj5zq00fkbndl1zzjngmxj3hhi51hd-root-6.28.00.drv'...; unpacking sources; unpacking source archive /nix/store/y5m4pr7c6vgjr34zqdz7wv819ln1mkj0-source; source root is source; patching sources; applying patch /nix/store/qljayx9yxgyx2xnf81b3rzzi99azd5d6-sw_vers.patch; patching file cmake/modules/SetUpMacOS.cmake; Hunk #1 succeeded at 8 with fuzz 1 (offset -20 lines).; Hunk #2 succeeded at 30 (offset -20 lines).; Hunk #3 succeeded at 74 (offset -34 lines).; patching file config/root-config.in; Hunk #1 succeeded at 313 (offset 1 line).; Hunk #2 succeeded at 373 (offset 1 line).; configuring; patching script interpreter paths in build/unix/; build/unix/makedistsrc.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/coreteam.sh: interpreter directive changed from ""#!/bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/compiledata.sh: interpreter directive changed from ""#!/usr/bin/env bash"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/bash""; build/unix/makepchinput.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/rootmapcat.py: interpreter directive changed from ""#! /usr/bin/env python"" to ""/nix/store/sp5x6s8n36gjlwck74xhj1i61p66vcpa-python3-3.10.9/bin/python""; build/unix/makereleasenotes.sh: interpreter directive changed from ""#! /bin/sh"" to ""/nix/store/qqa28hmysc23yy081d178jfd9a1yk8aw-bash-5.2-p15/bin/sh""; build/unix/pandoc-jira.sh: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153#issuecomment-1429284232:262,install,install-clang,262,https://root.cern,https://github.com/root-project/root/pull/12153#issuecomment-1429284232,7,"['install', 'patch']","['install-clang', 'patch', 'patching']"
Deployability,"When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. auto C = new TCanvas();; C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);; auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);; h15->Fill(12,1.);; h15->Fill(14,.5);; h15->SetLineWidth(3);. h25->Fill(1,1);; h25->Fill(6,2);; h25->Fill(11,3);; h25->Fill(16,2);; h25->Fill(23,1);; h25->SetLineColor(2);; h25->SetLineWidth(3);; h25->SetMinimum(.05);. C->cd(1);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetLogy(1);; gPad->SetGridx(1);; gPad->SetGridy(1);. C->cd(2);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetGridx(1);; gPad->SetGridy(1);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12448:399,patch,patch,399,https://root.cern,https://github.com/root-project/root/pull/12448,1,['patch'],['patch']
Deployability,"When updating `cppyy-backend` to v1.7.3 in PyROOT experimental, a compilation error appears because of a missing functionality in `TCling`, in particular a method to get using declarations of namespaces. This functionality was added to Cppyy's ROOT recently, and a patch was created for it:; https://bitbucket.org/wlav/cppyy-backend/src/59a4a747d03c6e94eaaa28062daf83104334f27d/cling/patches/using_directives.diff. This PR proposes to add such functionality to mainstream ROOT. . Inviting @Axel-Naumann and @wlav to the party.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579:265,patch,patch,265,https://root.cern,https://github.com/root-project/root/pull/3579,2,['patch'],"['patch', 'patches']"
Deployability,"When updating names in UpdateAssociativeToVector, do not use trailing…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3532:23,Update,UpdateAssociativeToVector,23,https://root.cern,https://github.com/root-project/root/pull/3532,1,['Update'],['UpdateAssociativeToVector']
Deployability,"When url has options before, it was not correctly released; Following code always produced memory leak:. TUrl url;; url.SetUrl(""http://server/file?arg=1&arg2=2"");; url.SetUrl(""http://server/file?arg=1&arg2=2"");. Simplify handling of options",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4908:50,release,released,50,https://root.cern,https://github.com/root-project/root/pull/4908,1,['release'],['released']
Deployability,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:109,integrat,integration,109,https://root.cern,https://github.com/root-project/root/issues/10763,3,['integrat'],['integration']
Deployability,"When using `TLegend::AddEntry()`, it is not necessary to get a pointer to the plotted object via `RooPlot::findObject()`. One can just use the `AddEntry` overload that takes the name as a string, and then looks up the object in the plot itself. This should be updated to avoid that users copy-paste overly verbose code from the tutorials. I noticed this when copy pasting code myself for a RooFit tutorial. Also fixes a typo in `rf711_lagrangianmorph.py`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11555:260,update,updated,260,https://root.cern,https://github.com/root-project/root/pull/11555,1,['update'],['updated']
Deployability,"When using only ```cmake ../source -DPYTHON_EXECUTABLE=/usr/bin/python3```, as suggested on the [webpage](https://root.cern/install/build_from_source/), the compiler would say that pyROOT libraries would be built for python3. When looking for the libraries at $ROOTSYS/lib, they are not there, and *import ROOT* in the python interpreter gives error. . Only after using ```cmake ../source -Dpyroot=ON -DPYTHON_EXECUTABLE=/usr/bin/python3``` that the pyROOT libraries were built and python could find them. . I'm installing ROOT on Fedora 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8095:124,install,install,124,https://root.cern,https://github.com/root-project/root/issues/8095,2,['install'],"['install', 'installing']"
Deployability,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577:102,install,installed,102,https://root.cern,https://github.com/root-project/root/pull/5577,1,['install'],['installed']
Deployability,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684:31,integrat,integrate,31,https://root.cern,https://github.com/root-project/root/issues/10684,1,['integrat'],['integrate']
Deployability,"When writing trained methods to the output file, there was a typo in the target directory. This lead to the results of a method of type ""BDT"" and name ""MyBDT"" being placed (incorrectly) in a folder named; ""Method_MyBDT/MyBDT"". This patch places the data correctly in ""Method_BDT/BDT"". This is important since e.g. the GUI relies on all BDT's being placed in the ""MethodBDT"" folder. This will affect all methods, not only BDT's. This can be seen e.g. in the output of the `TMVAClassification.C` macro with several BDT's enabled: The GUI cannot generate plots for all BDT's. That the previous implementation was a typo is corroborated by this line:; ```; Log() << kDEBUG << Form(""Dataset[%s] : "", datasetName) << "" Base Directory for ""; << GetMethodTypeName() << "" not set yet --> check if already there.."" << Endl;; ```; , where it is implied that a directory of name `GetMethodTypeName()` should be created. However, in the old implementation a directory with name `GetMethodName()` was created instead. The issue was reported [here](https://root-forum.cern.ch/t/tmvagui-not-working-for-multiple-methods-of-bdt-in-file/32267) initially.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3253:232,patch,patch,232,https://root.cern,https://github.com/root-project/root/pull/3253,1,['patch'],['patch']
Deployability,When xmin=xmax or ymin=ymax the transformed min max are Nan and this causes the; routine to find the triangles to hang forever.; Now in this case and when also no trisangles are found the default zero value is always return. Update also the documentation of the class and of TGraphDelaunay2D. This Pull request fixes #10266,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10276:225,Update,Update,225,https://root.cern,https://github.com/root-project/root/pull/10276,1,['Update'],['Update']
Deployability,"When you build ROOT master?; In the current master this option should be off by default.; You also can toggle this behavior by selecting ""Options -> Highlight Pad"" menu command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14401#issuecomment-1903686993:103,toggle,toggle,103,https://root.cern,https://github.com/root-project/root/issues/14401#issuecomment-1903686993,1,['toggle'],['toggle']
Deployability,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859#issuecomment-732364746:97,install,install,97,https://root.cern,https://github.com/root-project/root/issues/6859#issuecomment-732364746,1,['install'],['install']
Deployability,Which future ROOT release will this (likely) be included in?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-960799772:18,release,release,18,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-960799772,1,['release'],['release']
Deployability,Which is the new patch you have in mind?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697#issuecomment-377216226:17,patch,patch,17,https://root.cern,https://github.com/root-project/root/pull/1697#issuecomment-377216226,1,['patch'],['patch']
Deployability,"Which of the builtin packages can we use from the distro - are we waiting for the next release of cppzmq or zeromq, and can we use a current release for the other one? For testing we try to use distro packages wherever possible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430#issuecomment-993425466:87,release,release,87,https://root.cern,https://github.com/root-project/root/issues/9430#issuecomment-993425466,2,['release'],['release']
Deployability,"Which parameter/feature of root rules that?. ```; $ root-config --features; cxx17 asimage builtin_clang builtin_llvm dataframe davix exceptions fortran gdml gsl_shared gviz http imt mathmore mlp minuit2 opengl pyroot qt5web roofit webgui root7 shared soversion ssl tmva tmva-cpu tmva-pymva spectrum unuran x11 xml; ```; If this is libafterimage, then it is compiled to support gif:; ```; [I] media-libs/libafterimage; Available versions: 1.20-r2 1.20-r3 {+X examples gif jpeg nls opengl png +shaping shm static-libs svg tiff truetype CPU_FLAGS_X86=""mmx""}; Installed versions: 1.20-r3(03:15:10 AM 01/05/2021)(X gif jpeg nls png shaping svg tiff truetype -examples -shm -static-libs CPU_FLAGS_X86=""mmx""); Homepage: http://www.afterstep.org/afterimage/index.php; Description: Afterstep's standalone generic image manipulation library; ```; Can you also tell me which commit is about to fix it/do what you wrote above?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985#issuecomment-759096761:556,Install,Installed,556,https://root.cern,https://github.com/root-project/root/issues/6985#issuecomment-759096761,1,['Install'],['Installed']
Deployability,"Which version of ROOT, which platform (which Linux distribution, which version), how did you configure, what's your compiler?; Why do you build from source rather than just `conda install root` or `snap install root-framework` or `dnf install root` or taking one of the [binary releases](https://root.cern/releases/release-63000/)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14102#issuecomment-1825267807:180,install,install,180,https://root.cern,https://github.com/root-project/root/issues/14102#issuecomment-1825267807,6,"['install', 'release']","['install', 'release-', 'releases']"
Deployability,"While `mathjax.tar.gz` already provided with ROOT sources,; just install it inside `${CMAKE_BINARY_DIR}/js/mathjax` folder; and use it directly. Allows to stay fully local when requires `MathJax` from `RWebWindow`. Also significant upgrade of JSROOT - many changes with 7.4.0 release and after it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13085:65,install,install,65,https://root.cern,https://github.com/root-project/root/pull/13085,3,"['install', 'release', 'upgrade']","['install', 'release', 'upgrade']"
Deployability,"While benchmarking the change I discovered something fascinating.; This simple benchmark only tests retrieval of a custom column:; ```c++; TDataFrame d(1000000000ull);; d.Define(""ans"", [] { return 42; }); .Foreach([](int) {}, {""ans""});; ```. The relevant code path that changes between master and this PR is the following:; ```patch; T &TColumnValue<T>::Get(Long64_t entry); {; - if (!fReaderValues.empty()) {; - return *(fReaderValues.back()->Get());; - } else {; - fCustomColumns.back()->Update(fSlot, entry);; - return fIsDataSourceColumn ? **fDSValuePtrs.back() : *fCustomValuePtrs.back();; + switch (fColumnKind) {; + case EColumnKind::kTreeArray: /*dealt with in the other `Get` overload*/; + case EColumnKind::kTreeValue: return *(fReaderValues.back()->Get());; + case EColumnKind::kCustomColumn: fCustomColumns.back()->Update(fSlot, entry); return *fCustomValuePtrs.back();; + case EColumnKind::kDataSource: fCustomColumns.back()->Update(fSlot, entry); return **fDSValuePtrs.back();; }; +; ```; Looks _faster_ right?. On my workstation `perf stat` yields the following instruction counts and runtimes (single-thread executable compiled with `-g -O2`):; ```; # MASTER; 99,494,923,915 instructions:u; 9.844 seconds. # PR; 103,495,337,205 instructions:u; 11.049 seconds; ```. The `switch-case` is sensibly slower and results in more cpu instructions than the `if-else` over `std::vector::empty` on this artificial yet very representative benchmark. I thought this might have been a cache-friendliness issue and was almost ready to give up on this PR, but luckily plotting stacktraces showed that the culprit is inlining:. **MASTER**; ![image](https://user-images.githubusercontent.com/10999034/30910728-3b607ff4-a386-11e7-928e-6a404a485cf6.png). **PR**; ![image](https://user-images.githubusercontent.com/10999034/30910790-7f808562-a386-11e7-90f9-f1417c712f86.png). The `Get` method is not inlined when it contains the `switch-case`!; I will come up with a change that maintains inlining intact s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332489724:327,patch,patch,327,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332489724,5,"['Update', 'patch']","['Update', 'patch']"
Deployability,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7137:175,release,release,175,https://root.cern,https://github.com/root-project/root/pull/7137,1,['release'],['release']
Deployability,"While looking through the files, I noticed that we build exactly `v6.26/16` and not the latest `v6-26-00-patches` - is this intentional?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15523#issuecomment-2114108190:105,patch,patches,105,https://root.cern,https://github.com/root-project/root/pull/15523#issuecomment-2114108190,1,['patch'],['patches']
Deployability,"While testing `v6-22-00-patches` on `macphsft25`, I noticed that it fails to build in the default configuration with `imt` and `builtin_tbb` - is that expected? Disabling those makes it pass and I verified that the fix works there as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7793#issuecomment-814667556:24,patch,patches,24,https://root.cern,https://github.com/root-project/root/pull/7793#issuecomment-814667556,2,"['configurat', 'patch']","['configuration', 'patches']"
Deployability,"While the `TTreeReaderValue` is indeed not copyable for good reason, I don't see why it shouldn't be moveable (deleting the copy constructor appears to implicitly delete the move constructor). With this small patch, the following works:. ```; TFile *tf = TFile::Open(""somefile.root"");; TTreeReader reader(""T"", tf);; auto foo = std::make_tuple( TTreeReaderValue<int>(reader, ""branchname"") );; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/290:209,patch,patch,209,https://root.cern,https://github.com/root-project/root/pull/290,1,['patch'],['patch']
Deployability,"While the final review indeed needs @lmoneta here are preliminary comments:; ; - There is almost no documentation, this must be fixed before merging. Note that ROOT has changes its syntax since a couple of years, we now use doxygen.; - We need a couple of tests; - We need a tutorial; - We need a diff for the release notes. Assuming that @lmoneta accepts this PR design-wise, these issues must be addressed before we can merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792#issuecomment-326555267:310,release,release,310,https://root.cern,https://github.com/root-project/root/pull/792#issuecomment-326555267,1,['release'],['release']
Deployability,"While working on this issue, I noticed that also `RooHistPdf` is also not bug free. Here is what you can do to get strange results with it:; ```C++; // g++ $(root-config --cflags) -o testHistPdf testHistPdf.cc $(root-config --libs) -lRooFitCore -lRooFit -g. #include ""RooRealVar.h""; #include ""RooHistPdf.h""; #include ""RooDataHist.h""; #include ""TH2D.h""; #include ""TF2.h"". using namespace RooFit;. int main(int argc, char const *argv[]) {. RooRealVar x(""x"",""x"",0, 10);; RooRealVar y(""y"",""y"",0.05);; TH2D h2(""h2"",""h2"",20,0,10, 30, 0, 10);; TF2 f2(""f2"",""y < 0.1"");; h2.FillRandom(""f2"",1000);. RooArgSet argSet{x, y};. RooDataHist dh(""dh"",""dh"",argSet,&h2);; RooHistPdf phf(""phf"","""",argSet,dh);; x.setRange(""R1"",0,5);; y.setRange(""R1"",0,10);; auto int1 = phf.createIntegral(argSet,argSet);; std::cout << int1->getVal() << std::endl;; auto int2 = phf.createIntegral(argSet,argSet, ""R1"");; std::cout << int2->getVal() << std::endl;. auto int3 = phf.createIntegral(x,x);; std::cout << int3->getVal() << std::endl;; auto int4 = phf.createIntegral(x,x,""R1"");; std::cout << int4->getVal() << std::endl;. return 0;; }; ```; Obviously the integral of a constant function if you only take half of the x range should be half of the value you get for the full range, even if there is an additional variable in the slice set. However, this is what the program above outputs in ROOT master:; ```; 1; 0.493; 1; 0.164333; ```. The first 3 integrals are correct, but the final one (custom range for x and slice of y) gives the wrong result (0.493 expected). I thought about how the integration should be done correctly for all of the `RooHistPdf`, `RooHistFunc` and `RooParamHistFunc` family. Some updates to the code to fix all the issues can be found in PR https://github.com/root-project/root/pull/7271.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182#issuecomment-783663166:1560,integrat,integration,1560,https://root.cern,https://github.com/root-project/root/issues/7182#issuecomment-783663166,2,"['integrat', 'update']","['integration', 'updates']"
Deployability,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6917#issuecomment-739239862:183,patch,patch,183,https://root.cern,https://github.com/root-project/root/pull/6917#issuecomment-739239862,1,['patch'],['patch']
Deployability,"Why add a patch file? We can easily check what changes have been made to Cppyy with git.; Removing the preprocessor macro will probably not please Wim, since that turns an optional into a hard dependency on ROOT. Other than that, the changes look OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3455#issuecomment-469676935:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/3455#issuecomment-469676935,1,['patch'],['patch']
Deployability,Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985241728:210,install,install,210,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985241728,1,['install'],['install']
Deployability,"Why should it break with the broken flag? We don't build `Release` in the PRs, I guess. Is it `RelWithDebInfo`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932#issuecomment-823172071:58,Release,Release,58,https://root.cern,https://github.com/root-project/root/pull/7932#issuecomment-823172071,1,['Release'],['Release']
Deployability,Why should we remove old release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202#issuecomment-449046660:25,release,release,25,https://root.cern,https://github.com/root-project/root/pull/3202#issuecomment-449046660,1,['release'],['release']
Deployability,"Why was this deprecation not mentioned in the 6.32 release notes? https://root.cern/doc/v632/release-notes.html. The standard procedure is: if you deprecate something, write it in the release notes, including the information on when it will be eventually removed (which is usually one release later). If we don't follow our own standard here, we'll have these discussions forever :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16410#issuecomment-2345647671:51,release,release,51,https://root.cern,https://github.com/root-project/root/pull/16410#issuecomment-2345647671,4,['release'],"['release', 'release-notes']"
Deployability,"Why would you remove that line?; - This lines hides ROOT's LLVM 5 symbols from other libraries, so this should be fine is certainly what we want.; - What my patch should do is is kind of the other way around, if there are other libraries exposing LLVM symbols, ROOT should still take its own LLVM 5 symbols. In this way, other libraries do not need to hide their symbols.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561813616:157,patch,patch,157,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561813616,1,['patch'],['patch']
Deployability,"Will be merged into v6-16, too. @gganis FYI re LCG releases - please make sure we don't have mismatched expectations here :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3020:51,release,releases,51,https://root.cern,https://github.com/root-project/root/pull/3020,1,['release'],['releases']
Deployability,Will update the test with the new correct number of tasks generated before merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8565#issuecomment-870434772:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/8565#issuecomment-870434772,1,['update'],['update']
Deployability,"Wim says: adding 'shell=True' makes the command run on; /bin/sh and allows you to use shell features (such as expansion and; replacement of variables). But nothing in the command seems to need that; feature, and anyway it's a risky thing to rely on, or what am I missing?. Spawning an intermediate shell makes a mess of the environment when running; under conda on Mac in the non-build environment. Running the normal way as; per the patched line above, and all seems good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4406:434,patch,patched,434,https://root.cern,https://github.com/root-project/root/pull/4406,1,['patch'],['patched']
Deployability,Windows CMake project cannot find_library() after integrating with ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:50,integrat,integrating,50,https://root.cern,https://github.com/root-project/root/issues/15727,1,['integrat'],['integrating']
Deployability,Windows failure due to CI bug / windows roottest. Merging; we can adjust the patch once we have the differential in llvm.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7336#issuecomment-789547940:77,patch,patch,77,https://root.cern,https://github.com/root-project/root/pull/7336#issuecomment-789547940,1,['patch'],['patch']
Deployability,Windows failure is infrastructure. TMVA failure is unrelated. autocache failure requires an update to account for the caching improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2018#issuecomment-389625801:92,update,update,92,https://root.cern,https://github.com/root-project/root/pull/2018#issuecomment-389625801,1,['update'],['update']
Deployability,Windows failure is infrastructure. processExecutorH1Test is preexisting. autocache needs an update to the reference file to reflect the improved behavior.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2027#issuecomment-389832667:92,update,update,92,https://root.cern,https://github.com/root-project/root/pull/2027#issuecomment-389832667,1,['update'],['update']
Deployability,Windows installers are not signed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896:8,install,installers,8,https://root.cern,https://github.com/root-project/root/issues/15896,1,['install'],['installers']
Deployability,"Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:1096,release,release,1096,https://root.cern,https://github.com/root-project/root/pull/10247,1,['release'],['release']
Deployability,"With `-DLLVM_BUILD_TYPE=Debug`. The idea is not to change how things are currently working, just to make it work on Windows, where CMAKE_BUILD_TYPE is ignored since the generator is multi-configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4342#issuecomment-527926227:188,configurat,configuration,188,https://root.cern,https://github.com/root-project/root/pull/4342#issuecomment-527926227,1,['configurat'],['configuration']
Deployability,"With `ROOTSYS` unset and no `DISPLAY` variable, this setup causes a spurious warning about an unset `DISPLAY`. `TROOT()` calls `SetBatch(true)`, then cppyy ""agrees"", and `ROOT/__init__.py` tries to revert that. Just let everyone keep their hands off `SetBatch()` (as is done in newer cppyy anyway). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11858:394,update,updated,394,https://root.cern,https://github.com/root-project/root/pull/11858,1,['update'],['updated']
Deployability,"With a task scheduler, `RPageSinkBuf::CommitPage` copies the uncompressed page; https://github.com/root-project/root/blob/226e4c00e5dc4b7aaf881bad810a0c78c8a14185/tree/ntuple/v7/src/RPageSinkBuf.cxx#L167-L170; for asynchronous compression. However, the uncompressed page is only released in `FlushClusterImpl` which leads to significant memory overhead for high compression factors (such as CMS miniAOD). In principle, the uncompressed buffer can be released directly after compression, which is only a bit tricky because it requires the allocator to be thread-safe.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16753:279,release,released,279,https://root.cern,https://github.com/root-project/root/issues/16753,2,['release'],['released']
Deployability,"With latest `civetweb` special windows files names not working; Also disable by default directory listing, can be enabled with URL arguments; Let change custom HTTP server settings for web widgets via special `gEnv` variable; Update documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9801:226,Update,Update,226,https://root.cern,https://github.com/root-project/root/pull/9801,1,['Update'],['Update']
Deployability,"With modules, we have autoloading of library feature; (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function.; Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes; Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854:207,Patch,Patch,207,https://root.cern,https://github.com/root-project/root/pull/2854,1,['Patch'],['Patch']
Deployability,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343:1370,update,updates,1370,https://root.cern,https://github.com/root-project/root/pull/16343,1,['update'],['updates']
Deployability,With normal ROOT build I cannot reproduce problem too. @ferdymercury You say it happens with binary release. Is speedo.gif image really missing there? Or just widget not able to find it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247#issuecomment-1898318320:100,release,release,100,https://root.cern,https://github.com/root-project/root/issues/14247#issuecomment-1898318320,1,['release'],['release']
Deployability,"With root 6.22.00, the following fragment. ```; import ROOT; class Foo (ROOT.TProfile): pass. ```. gives errors:. ```; >>> import ROOT; >>> class Foo (ROOT.TProfile): pass; ... ; input_line_38:8:19: error: redeclaration of using declaration; using TProfile::BufferFill;; ~~~~~~~~~~^; input_line_38:7:19: note: previous using declaration; using TProfile::BufferFill;; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:67:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:69:9: note: declared private here; void SetBins(Int_t, const Double_t*, Int_t, const Double_t*); ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:71:9: note: declared private here; void SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, In...; ^; input_line_38:9:19: error: 'SetBins' is a private member of 'TProfile'; using TProfile::SetBins;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:73:9: note: declared private here; void SetBins(Int_t, const Double_t *, Int_t, const Double_t *, Int_t...; ^; input_line_38:10:19: error: 'Fill' is a private member of 'TProfile'; using TProfile::Fill;; ^; /cvmfs/sft.cern.ch/lcg/releases/ROOT/v6.22.00-be0a0/x86_64-centos7-gcc8-opt/include/TProfile.h:61:10: note: declared private here; Int_t Fill(Double_t) { MayNotUse(""Fill(Double_t)""); return -1;}; ^; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: no python-side overrides supported (fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6345:494,release,releases,494,https://root.cern,https://github.com/root-project/root/issues/6345,2,['release'],['releases']
Deployability,"With some more minimal cmake configurations `assert` is not declared in `RField.hxx` and needs an `#include <cassert>`. `R__ASSERT` is declared however. Additionally, this makes it more consistent with other assertions in `RField`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14737:29,configurat,configurations,29,https://root.cern,https://github.com/root-project/root/pull/14737,1,['configurat'],['configurations']
Deployability,"With the bundled MS corefonts, root license isn't completely free. What I ask is to make MS corefonts optional. A patch from Fedora is also available here https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357:114,patch,patch,114,https://root.cern,https://github.com/root-project/root/issues/8357,2,['patch'],['patch']
Deployability,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714:477,update,updated,477,https://root.cern,https://github.com/root-project/root/pull/8714,2,['update'],"['update', 'updated']"
Deployability,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743#issuecomment-1154462514:44,a/b,a/bindings,44,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514,2,['a/b'],['a/bindings']
Deployability,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11211:1052,update,updated,1052,https://root.cern,https://github.com/root-project/root/pull/11211,3,['update'],['updated']
Deployability,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11224:1196,update,updated,1196,https://root.cern,https://github.com/root-project/root/pull/11224,3,['update'],['updated']
Deployability,"With the linked patch, the valgrind log is the following . [valgrind_patch.log](https://github.com/root-project/root/files/15186136/valgrind_patch.log). Note that there is no more an indirect leak due to RDataFrame operations",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15399#issuecomment-2089985990:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/issues/15399#issuecomment-2089985990,1,['patch'],['patch']
Deployability,"With the module generation in rootcling Clang rlies on AST consumers; to do the module generation work for it. Right now this doesn't work; however with the interpreter, as we just overwrite the deserialization; listener that clang added which will cause strange errors during; the module generation (the most prompinent error is that the number; of recorded submodules will be incorrect, as this it the first thing; that Clang checks before writing a module and which is recorded by; an ASTDeserializationListener). This patch just adds a multiplexer here that allows us to keep the; old listener while also adding the one we have.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/995:522,patch,patch,522,https://root.cern,https://github.com/root-project/root/pull/995,1,['patch'],['patch']
Deployability,"With the new MacOS update python (and python2) is not existing anymore, only python3. Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time). This PR is a backport in 6.26 of PR #10160",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11568:19,update,update,19,https://root.cern,https://github.com/root-project/root/pull/11568,1,['update'],['update']
Deployability,"With the new MacOS update python (and python2) is not existing anymore, only python3.; Add then a new function TMVA::Python_executable() using ROOT config to determine if ROOT is using python version 2 or 3. In case of 3 returns as executable ""python3"". Fix also the correct location of the input ONNX file for TMVA_SOFIE_ONNX.C (copying the file at configure time)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10160:19,update,update,19,https://root.cern,https://github.com/root-project/root/pull/10160,1,['update'],['update']
Deployability,"With the original PR accepted upstream and an experiment requesting this we need good reasons (such as ""fails quite horribly in CI"" :-) ) to refuse the backport. I think we want to work with @ktf to make this PR work... @ktf the problem is that another patch release is *imminent* and this PR seems not yet ready for prime time. It will have to miss this train but take the next one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750181059:253,patch,patch,253,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750181059,2,"['patch', 'release']","['patch', 'release']"
Deployability,"With the patch at the end of this report, the test `roottest-root-io-issue-9899-read_cmssw_class_v3` fails with (partial output):; ```; Error in <readfile>: For entries 0 we have result=19200; ```; This is due to the fact that there is no branch for `w.fPersValue.fPersLowData.fProblems.fContent.fHolder` because the typeof `fHolder` : `RefVectorMemberPointersHolder` only has one transient member. Consequently, the line in `TBranchElement`'s `GatherArtificialElements` function:; ```; if (!foundRelatedSplit) {; continue;; }; ```; which is designed to avoid drilling through data members that are ""new"" in the current (in-memory) class layout. `fContent` also has no explicit branch (it is intentionally elided) but `fContent.fID` has a branch. Since the object (`fContent` is updated during the read, we should be running the I/O rules on its sub-objects ... but we don't. The issue can be senen by applying this patch to `roottest` and running `ctest -R issue-9899`. ```; diff --git a/root/io/issue-9899/read_cmssw_class_v3.cxx b/root/io/issue-9899/read_cmssw_class_v3.cxx; index 58b50a93..e0aef7e1 100644; --- a/root/io/issue-9899/read_cmssw_class_v3.cxx; +++ b/root/io/issue-9899/read_cmssw_class_v3.cxx; @@ -129,10 +129,8 @@ struct PersHighData {; }; int check(int slide = 1) {; int res = 0;; -#ifdef FIXED_ISSUE_99xx; for(auto &d : fPersLowData); res += d.check(slide, 0);; -#endif; for(auto &d : fLowData); res += d.check(slide * BIT(6), 10);; return res;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9924:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/issues/9924,3,"['patch', 'update']","['patch', 'updated']"
Deployability,"With the revert-revert, I am a bit confused. It is another attempt to apply the Cloufare patches? If so, instead of revert-revert can we do a cherry-pick of the commit to be reapplied (and/or reword the commit logs)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-430320241:89,patch,patches,89,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-430320241,1,['patch'],['patches']
Deployability,"With the upgrade to LLVM 16, `llvm::Optional` is a deprecated / legacy alias of `std::optional`: https://github.com/llvm/llvm-project/commit/2916b99182752b1aece8cc4479d8d6a20b5e02da Likewise, `llvm::None` / `llvm::NoneType` become `std::nullopt` / `std::nullopt_t`: https://github.com/llvm/llvm-project/commit/abfe65a12b77f9f0292d3ec70bd9fc3b9c13d905. These transitional aliases are removed with LLVM 17: https://github.com/llvm/llvm-project/commit/397f2e9ebee8d8e45547e90dd05228d7f965df67 To prepare for this, we should replace, in `core/metacling/` and `interpreter/cling`; * [ ] all spellings of `llvm::Optional` with `std::optional`,; * [ ] all spellings of `llvm::None` / `llvm::NoneType` with `std::nullopt` / `std::nullopt_t`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14205:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/issues/14205,1,['upgrade'],['upgrade']
Deployability,"With the upgrade to llvm-13, the JIT lost the ability to re-use existing weak symbols that the JIT had already emitted, instead only looking at dlsym. This causes a significant increase in JITted symbols, and thus a significant slow-down of cling / its JIT. This restores the old behavior, with an identical set of symbols that jet jitted. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/12018,2,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"With the upgrade to llvm-13, the JIT lost the ability to re-use existing weak; symbols that the JIT had already emitted, instead only looking at dlsym. This; causes a significant increase in JITted symbols, and thus a significant slow-down; of cling / its JIT. This restores the old behavior, with an identical set of symbols that jet jitted. (cherry picked from commit 23ca9fe)# This Pull request:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12163:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/12163,1,['upgrade'],['upgrade']
Deployability,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10898:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/issues/10898,3,"['release', 'upgrade']","['releaseMappedMemory', 'upgrade']"
Deployability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/11945,3,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:9,upgrade,upgrade,9,https://root.cern,https://github.com/root-project/root/pull/12096,3,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:18,patch,patch,18,https://root.cern,https://github.com/root-project/root/pull/11517,1,['patch'],['patch']
Deployability,"With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14131:396,update,updated,396,https://root.cern,https://github.com/root-project/root/pull/14131,1,['update'],['updated']
Deployability,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14129:464,update,updated,464,https://root.cern,https://github.com/root-project/root/pull/14129,1,['update'],['updated']
Deployability,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:1196,update,updated,1196,https://root.cern,https://github.com/root-project/root/pull/15939,1,['update'],['updated']
Deployability,"With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:; https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13750:112,configurat,configuration,112,https://root.cern,https://github.com/root-project/root/pull/13750,1,['configurat'],['configuration']
Deployability,"With this change, the use of TFile when creating an `RNTupleInspector` object from an RNTuple name and source path is removed by directly creating the page source instead. This is in accordance with other places that require the opening of an RNTuple (i.e. `RNTupleReader` and `ROOT::RDF::Experimental::FromRNTuple`). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14315:369,update,updated,369,https://root.cern,https://github.com/root-project/root/pull/14315,1,['update'],['updated']
Deployability,"With this patch (as is), we seem to no longer support an asynchronous merging. I.e. if the user would like to have TBufferMerger::Push (always) return 'immediately' and have the work done in parallel of the pushing thread continuing to work. (In addition to the CPU cost of merging, this submit the calling thread to the latency in writing to a (potential remote) disk for example ; this would become even more apparent if we reduce further the CPU cost of the merging operation). Is that correct? Is there a way to re-add it? If not, shouldn't we provide an example?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1737#issuecomment-372693999:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/1737#issuecomment-372693999,1,['patch'],['patch']
Deployability,With this patch we can finally do `make -j200`! (And I no longer have to explain to the summer students why they have to type `make Cling; make` to compile root :) ). We also get the module dependencies for rootcling right. See the specific commits for the individual fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/752:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/752,1,['patch'],['patch']
Deployability,With this patch we create chains with kWithoutGlobalRegistration in; RDF's constructors -- this is the chain object that RDF uses for; single-thread runs and to look up which branches exist and other; information about the input dataset. The deregistration of that chain from the global lists can take; some time in certain cases. This PR depends (and is based) on #11321 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11322:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/11322,1,['patch'],['patch']
Deployability,"With this patch, RResultMap points to the one and only nominal; result and we do not duplicate work for the nominal value (i.e.; we don't handle the nominal case in RVariedAction anymore).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10662:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/10662,1,['patch'],['patch']
Deployability,"With this patch, RResultMap points to the one and only nominal; result and we do not duplicate work for the nominal value (i.e.; we don't handle the nominal case in RVariedAction anymore). Vincenzo please check whether things make sense for RMergeableValues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10658:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/10658,1,['patch'],['patch']
Deployability,"With this patch, this code:. ```python; import ROOT; from dask.distributed import Client, LocalCluster. if __name__ == ""__main__"":; client = Client(LocalCluster(n_workers=1, processes=False, threads_per_worker=1)); df = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame(10, daskclient=client); df = ROOT.RDataFrame(10); c = df.Count(); cs = ROOT.RDF.Experimental.VariationsFor(c); print(cs[""nominal""]); ```. breaks with this error:. ```; Traceback (most recent call last):; File ""/tmp/distrdf.py"", line 9, in <module>; cs = ROOT.RDF.Experimental.VariationsFor(c); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/blue/ROOT/master-with-venv/cmake-build/install/lib/ROOT/_facade.py"", line 96, in variationsfor; return rdf_variationsfor(resptr); ^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Template method resolution failed:; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::Experimental::VariationsFor(ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > resPtr) =>; TypeError: could not convert argument 1; Failed to instantiate ""VariationsFor(ROOT::RDF::RResultPtr<ULong64_t>*)""; ```. Probably some issue with monkey-patching a template function, but I don't understand what goes wrong exactly or how to fix it. Needs debugging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13248#issuecomment-1641068037:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/13248#issuecomment-1641068037,3,"['install', 'patch']","['install', 'patch', 'patching']"
Deployability,"With this patch, you can find out which method causes the issue:. ```diff; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx; @@ -20,6 +20,7 @@; #include <algorithm>; #include <sstream>; #include <vector>; +#include <iostream>. namespace CPyCppyy {; @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*; //----------------------------------------------------------------------------; void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc); {; + PyObject_Print(pc->GetPrototype(), stdout, 0);; + std::cout << std::endl;; +; + PyObject_Print(pc->GetSignature(), stdout, 0);; + std::cout << std::endl;; +; + std::cout << std::endl;; // Fill in the data of a freshly created method proxy.; fMethodInfo->fMethods.push_back(pc);; fMethodInfo->fFlags &= ~CallContext::kIsSorted;; ```. It gets you to the point that you have multiple method with the same signature:. ```bash; ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'; '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'; '(unsigned long idx)'; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-804866171:10,patch,patch,10,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-804866171,2,"['a/b', 'patch']","['a/bindings', 'patch']"
Deployability,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:; ```c; #include <stdio.h>. int main() {; printf(""Hello from JIT\n"");; }; ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR.; > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419#issuecomment-799389082:1264,release,release,1264,https://root.cern,https://github.com/root-project/root/pull/7419#issuecomment-799389082,2,['release'],['release']
Deployability,"Without some of the over-ridding behavior, there would be no (easy) way to disable optimization.The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior could be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this can be fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377#issuecomment-791810191:235,configurat,configuration,235,https://root.cern,https://github.com/root-project/root/issues/7377#issuecomment-791810191,2,['configurat'],['configuration']
Deployability,"Without this patch we get:. ld: Undefined symbols:; TMacOSXSystem::TMacOSXSystem(), referenced from:; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; TMacOSXSystem::~TMacOSXSystem(), referenced from:; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o; ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o; typeinfo for TMacOSXSystem, referenced from:; ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o; clang: error: linker command failed with exit code 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14387:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/14387,1,['patch'],['patch']
Deployability,"Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7316:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/7316,1,['patch'],['patch']
Deployability,"Without this patch, using python 3.6 in anaconda3:. ```; >>> import ROOT; >>> h = ROOT.TH1D('test', 'test', 100, 0, 1); AttributeError: type object 'TArray' has no attribute '__getitem__'. The above exception was the direct cause of the following exception:. SystemError: <built-in method mro of ROOT.PyRootType object at 0x17d57b8> returned a result with an error set; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 459, in __getattr1; return getattr( self, name ); File ""/home/maxnoe/.local/root5/lib/ROOT.py"", line 486, in __getattr2; attr = _root.LookupRootEntity( name ); AttributeError: TH1D; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1005#issuecomment-330495278:13,patch,patch,13,https://root.cern,https://github.com/root-project/root/pull/1005#issuecomment-330495278,1,['patch'],['patch']
Deployability,Won't fix travis because this just reverts an existing clang patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1034#issuecomment-331126141:61,patch,patch,61,https://root.cern,https://github.com/root-project/root/pull/1034#issuecomment-331126141,1,['patch'],['patch']
Deployability,"Wonderful news, thanks, I will update.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052#issuecomment-830336761:31,update,update,31,https://root.cern,https://github.com/root-project/root/issues/8052#issuecomment-830336761,1,['update'],['update']
Deployability,"Works on lxplus with latest ROOT release 6.24.06 (6.26 is due soon); ```; [vpadulan@lxplus772 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_101/x86_64-centos7-gcc11-opt/setup.sh; [vpadulan@lxplus772 ~]$root --version; ROOT Version: 6.24/06; Built for linuxx8664gcc on Sep 02 2021, 14:20:23; From tags/v6-24-06@v6-24-06; [vpadulan@lxplus772 ~]$cat crash.cc; #include <stdio.h>. template <typename T> auto square(T x) {; auto crash = [](double x) {return x;};; return x*x;; }. void crash(); {; printf(""%d\n"",square(2));; }; [vpadulan@lxplus772 ~]$root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 02 2021, 14:20:23 |; | From tags/v6-24-06@v6-24-06 |; | With g++ (GCC) 11.1.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .x crash.cc; 4; root [1] .x crash.cc; 4; root [2] .x crash.cc; 4; root [3] .x crash.cc; 4; root [4] .x crash.cc; 4; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034750275:33,release,release,33,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034750275,1,['release'],['release']
Deployability,"Works! Example output:. ```; -- stderr output is:; CMake Error at CMakeLists.txt:61 (find_package):; Could not find a package configuration file provided by ""LLVM"" with any of; the following names:. LLVMConfig.cmake; llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set; ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM""; provides a separate development package or SDK, be sure it has been; installed.; ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6816#issuecomment-728266387:126,configurat,configuration,126,https://root.cern,https://github.com/root-project/root/pull/6816#issuecomment-728266387,3,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability,"Would it be nicer to catch and help the user ""please install python-pandas to run this tutorial"" and then exit 1 (aka error)? Else there will be an import error that users might not understand without Google's help? I'm asking, I don't have an opinion yet :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5397#issuecomment-616459516:53,install,install,53,https://root.cern,https://github.com/root-project/root/pull/5397#issuecomment-616459516,1,['install'],['install']
Deployability,"Would it be possible to backport:. https://github.com/root-project/root/pull/11060 (already merged into [root-project:master]) ; (from what I understand a followup PR is also needed). to the v6.24 branch, and retag a new version of ROOT after that is done. ; This would use use it as part of a LCG 101 patch release. Many thanks. FYI @andresailer @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11080:302,patch,patch,302,https://root.cern,https://github.com/root-project/root/issues/11080,2,"['patch', 'release']","['patch', 'release']"
Deployability,Would it be possible to mention on the https://root.cern.ch/building-root page that the preferred method is to not do `make install` but to use it from the build directory(or that one shouldn't install it in /usr/local but in an empty directory)? And also that `xargs rm < install_manifest.txt` is the way to remove the files if someone does decide to do `make install` ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3405#issuecomment-462824682:124,install,install,124,https://root.cern,https://github.com/root-project/root/pull/3405#issuecomment-462824682,3,['install'],['install']
Deployability,Wouldn't be better to deprecated it in a release and remove it in the next? This seems to be a widly use functions (Similar to `TCollection::AddAt`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7834#issuecomment-817979915:41,release,release,41,https://root.cern,https://github.com/root-project/root/pull/7834#issuecomment-817979915,1,['release'],['release']
Deployability,"Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. . BTW, when I try to run root locally, I meet some odd problems and it looks like I can proceed after cleanning the cache.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1972822091:39,patch,patch,39,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1972822091,1,['patch'],['patch']
Deployability,Wrong Xrootd SHA256 has in release v6-26-06,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11160:27,release,release,27,https://root.cern,https://github.com/root-project/root/issues/11160,1,['release'],['release']
Deployability,"X=$SOFTWARE/root/20240113 -Dimt=ON -Dbuiltin_glew=ON -Dmathmore=ON -DCMAKE_CXX_STANDARD=17 -DROOT7=ON; -- Detected ROOT_VERSION 6.26.10; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.12.0""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_INCLUDE_DIRS Python2_LIBRARIES Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed) ; Reason given by package: ; Interpreter: Wrong major version for the interpreter ""/opt/homebrew/bin/python"". -- Found a macOS system 14.2; -- Found an AArch64 system; -- ROOT Platform: macosx; -- ROOT Compiler: AppleClang 15.0.0.15000100; -- ROOT Processor: arm64; -- ROOT Architecture: macosxarm64; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.12.0; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Looking for OpenGL; -- Looking for LibXml2; -- Looking for MySQL; -- Looking for SQLite; -- Looking for FFTW3; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.0 (setting -DROOTXRDVERS=500050000); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /Users/marcomeyer/Software/xrootd/5.5.0/include/xrootd;/Users/marcomeyer/Software/root/src/proof/xrdinc; -- libraries: /Users/marcomeyer/Softwa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:1040,Release,Release,1040,https://root.cern,https://github.com/root-project/root/issues/14337,1,['Release'],['Release']
Deployability,XCode 10 comes with -fmodules-local-submodule-visibility aware toolchain. This patch adjusts a few flags to enable a cxxmodules=On builds for this; platform. This patch will pave our way for enabling runtime_cxxmodules on OSX.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2895:79,patch,patch,79,https://root.cern,https://github.com/root-project/root/pull/2895,2,['patch'],['patch']
Deployability,"XX compile features - done; -- Found Git: /usr/bin/git (found version ""1.8.3.1""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Python/3.9.6/x86_64-centos7-gcc9-dbg/bin/python (found version ""3.9.6"") found components: Interpreter Develop; ment NumPy Development.Module Development.Embed; -- Looking for a Fortran compiler; -- Looking for a Fortran compiler - /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran; -- The Fortran compiler identification is GNU 9.2.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran - skipped; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90; -- Checking whether /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gfortran supports Fortran 90 - yes; -- Found GCC. Major version 9, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 9.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = '-g'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.6; -- Looking for ZLib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:3372,release,releases,3372,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,1,['release'],['releases']
Deployability,"X] Checked for duplicates. ### Description. This https://github.com/root-project/root/pull/14703 (my guess on the changes, I did not confirm that this is the case) seems to have caused issues in python projects depending on root. E.g. https://lcgapp-services.cern.ch/cdash/testDetails.php?test=23867111&build=312289 ; ```; # setting LC_ALL to ""C""; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/__init__.py"", line 29, in <module>; from .Bindings import * # noqa: F401 F403; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/Bindings.py"", line 55, in <module>; import cppyy; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/__init__.py"", line 71, in <module>; from ._cpython_cppyy import *; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/_cpython_cppyy.py"", line 18, in <module>; c = loader.load_cpp_backend(); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; ```. and many others in the list https://lcgapp-services.cern.ch/cdash/viewTest.php?onlyfailed&buildid=312289. Are we missing some required changes to build options?. ### Reproducer. On any centos7 machine with cvmfs (or use available stack for your OS); ```; source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh; python -c ""import GaudiPython""; ```. ### ROOT version. Master from tonight.; Things were fine yesterday. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. centos7, alma9, alma8, ubuntu20, ubuntu22. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:1789,Install,Installation,1789,https://root.cern,https://github.com/root-project/root/issues/14904,1,['Install'],['Installation']
Deployability,"Xrootd v5 is too young to be set as default, I believe. But the patch can be tested with xrootd v5 as external.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6031#issuecomment-658704521:64,patch,patch,64,https://root.cern,https://github.com/root-project/root/pull/6031#issuecomment-658704521,1,['patch'],['patch']
Deployability,"Yay, thanks for your help Sergey!. I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252641668:419,install,install,419,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252641668,1,['install'],['install']
Deployability,"Yeah, I've pushed a workaround to this problem. It is not the best but gives us the desired behavior until the next major upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-377822133:122,upgrade,upgrade,122,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-377822133,1,['upgrade'],['upgrade']
Deployability,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:; 1. if $ROOTSYS/ is not writable, write to ./fonts/;; 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2172404599:222,install,installs,222,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2172404599,1,['install'],['installs']
Deployability,"Yes @vgvassilev, it is. The three tests that failed are also failing in our integration builds. See https://github.com/cms-sw/cmssw/pull/41964 (`DataFormatsScouting` are actually obsolete tests) and https://github.com/cms-sw/cmssw/issues/42206",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1624870413:76,integrat,integration,76,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1624870413,1,['integrat'],['integration']
Deployability,"Yes I did — I ended up exiting the environment I made and ROOT ended up working through Python, so maybe I fixed my error by redownloading through conda. Sent from my iPhone. > On May 31, 2022, at 2:34 PM, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ﻿; > Hi @ethereal-space-cadet16 ,; > ; > Unfortunately without seeing the code you tried to run, your OS, Python version and ROOT version, it's hard to understand the actual cause of the crash.; > ; > Let's start easy. You said you tried conda, did you explicitly try the instructions at https://root.cern/install/#conda ?; > ; > $ conda config --set channel_priority strict; > $ conda create -c conda-forge --name myenv root; > $ conda activate myenv; > Then, after the command above runs succesfully, I will take the first example available from the document you link, that is:; > ; > import ROOT; > print(""This is my script""); > If this two steps still lead to errors or crashes please report back, with your OS, Python version (the one that conda uses), the output of echo $PYTHONPATH.; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1142102654:565,install,install,565,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1142102654,1,['install'],['install']
Deployability,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785901630:115,update,update,115,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785901630,4,['update'],['update']
Deployability,"Yes I noticed that as well. I switched to 1533 and got the same seg fault. > The file `/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1519` doesn't exist/was removed. I tried to reproduce the error with `1529` by loading the stripped down header file (`root test.h`)instead and I now get a different error message.; > ; > ```; > Processing temp.h... ; > In file included from input_line_8:1: ; > In file included from /afs/cern.ch/user/d/dvalapar/temp.h:2: ; > In file included from /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20: ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:35:21: error: redefinition of 'CLID_ProtoParticle' ; > static const CLID CLID_ProtoParticle = 803; ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple times, additional include site here ; > #include ""/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h"" ; > ^ ; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/Phys/InstallArea/x86_64_v2-el9-gcc13-dbg/include/LoKi/Particles.h:20:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h' included multiple ; > times, additional include site here ; > #include ""Event/ProtoParticle.h"" ; > ^ ; > ...; > ...SKIPPED LINES; > ...; > /cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoParticle.h:55:9: error: redefinition of 'ProtoParticle' ; > class ProtoParticle final : public KeyedObject<int> { ; > ^ ; > input_line_10:1:10: note: '/cvmfs/lhcbdev.cern.ch/nightlies/lhcb-run2-patches/1529/LHCb/InstallArea/x86_64_v2-el9-gcc13-dbg/include/Event/ProtoP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511#issuecomment-2161206521:130,patch,patches,130,https://root.cern,https://github.com/root-project/root/issues/15511#issuecomment-2161206521,7,"['Install', 'patch']","['InstallArea', 'patches']"
Deployability,"Yes I noticed that, it's because Fedora37 didn't get the xrootd update:; https://bodhi.fedoraproject.org/updates/?packages=xrootd. Actually, Fedora 37 reached end of life:; https://en.wikipedia.org/wiki/Fedora_Linux. See section ""releases"". We should consider removing it from the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14180#issuecomment-1880695809:64,update,update,64,https://root.cern,https://github.com/root-project/root/pull/14180#issuecomment-1880695809,3,"['release', 'update']","['releases', 'update', 'updates']"
Deployability,"Yes absolutely, we need to put it back these packages that the physics user needs. Commercial users they can build themself a non-GPL release",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14648#issuecomment-1936997514:134,release,release,134,https://root.cern,https://github.com/root-project/root/pull/14648#issuecomment-1936997514,1,['release'],['release']
Deployability,"Yes agree, you are right. MacOSX Sequoia 15.0 Beta (24A5320a). Here are the git information I can extract in case it helps.; ```; [16:38:14] marcomeyer@MarcoMacBook-Pro:~/Software/root/20240914-src $ ; $ git status; On branch v6-32-00-patches; Your branch is up to date with 'origin/v6-32-00-patches'.; ```; I use a MacBook Pro Apple M1 Max with XCode SDK 15.0; ```; $ ls -ls /Library/Developer/CommandLineTools/SDKs/ ; total 0; 0 lrwxr-xr-x 1 root wheel 14 Jul 21 08:29 MacOSX.sdk -> MacOSX15.0.sdk; [...]; ```. Here is the result of the cmake command.; ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; -- The C compiler identification is AppleClang 16.0.0.16000022; -- The CXX compiler identification is AppleClang 16.0.0.16000022; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building ROOT version 6.32.04; -- Checking internet connectivity; -- Checking internet connectivity - found; -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard.; -- Performing Test HAS_LIBCXX11; -- Performing Test HAS_LIBCXX11 - Success; -- Found a macOS system 15.0; -- Found an AArch64 system; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled.; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:235,patch,patches,235,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,2,['patch'],['patches']
Deployability,"Yes cmake is updated, I will check where is a problem: ; ```; sftnight@macphsft23 ~ % cmake --version; cmake version 3.18.1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336#issuecomment-870527782:13,update,updated,13,https://root.cern,https://github.com/root-project/root/pull/8336#issuecomment-870527782,1,['update'],['updated']
Deployability,Yes indeed I wasn't saving the last file of the tree (see the updated gist). Sorry!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6528#issuecomment-702568065:62,update,updated,62,https://root.cern,https://github.com/root-project/root/pull/6528#issuecomment-702568065,1,['update'],['updated']
Deployability,"Yes it can be closed. Sent from my iPhone. > On May 31, 2022, at 2:59 PM, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ﻿; > Probably the previous ROOT installation was clashing with the new one you downloaded through conda, glad that you can now run the example 👍 Can this issue be closed?; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676#issuecomment-1143196406:159,install,installation,159,https://root.cern,https://github.com/root-project/root/issues/10676#issuecomment-1143196406,1,['install'],['installation']
Deployability,Yes my currently proposed patch is 'substantially' different and (independently) apply the recommendation https://github.com/root-project/root/pull/9089#issuecomment-950705276,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2374094974:26,patch,patch,26,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2374094974,1,['patch'],['patch']
Deployability,Yes of course this will be fixed in the release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885#issuecomment-1770998527:40,release,release,40,https://root.cern,https://github.com/root-project/root/pull/13885#issuecomment-1770998527,1,['release'],['release']
Deployability,"Yes please v6.18. As it's multiple commits, could you create a PR against v6-18-00-patches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3867#issuecomment-498178701:83,patch,patches,83,https://root.cern,https://github.com/root-project/root/pull/3867#issuecomment-498178701,1,['patch'],['patches']
Deployability,Yes you are right! More updates to the docs will come later for sure: this is not the last PR I intend to make for the client-server stuff.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12040#issuecomment-1385393439:24,update,updates,24,https://root.cern,https://github.com/root-project/root/pull/12040#issuecomment-1385393439,1,['update'],['updates']
Deployability,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426#issuecomment-794543576:338,install,install,338,https://root.cern,https://github.com/root-project/root/issues/7426#issuecomment-794543576,1,['install'],['install']
Deployability,"Yes, I also observing such error only when build stops and I trying to continue the run.; Try to apply patch from pr: https://github.com/root-project/root/pull/7346",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345#issuecomment-789874561:103,patch,patch,103,https://root.cern,https://github.com/root-project/root/issues/7345#issuecomment-789874561,1,['patch'],['patch']
Deployability,"Yes, I can reproduce this issue with the upgrade to LLVM 13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291#issuecomment-1217916362:41,upgrade,upgrade,41,https://root.cern,https://github.com/root-project/root/issues/10291#issuecomment-1217916362,1,['upgrade'],['upgrade']
Deployability,"Yes, I did an incremental build only. I can try a full clean build during lunch break if you think that could help... For `libclang_rt.asan-x86_64.so`, you have to install the `compiler-rt` package on Arch Linux. Also, what compiler are you building with, Clang or GCC?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11221#issuecomment-1222099145:164,install,install,164,https://root.cern,https://github.com/root-project/root/issues/11221#issuecomment-1222099145,1,['install'],['install']
Deployability,"Yes, I had to test myself, as we do not have MPI to test with the CI. After testing, I made a couple of minor changes before merging (to fix the configuration with CMake <= 3.9), that's why this shows as closed and not merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1699#issuecomment-370475407:145,configurat,configuration,145,https://root.cern,https://github.com/root-project/root/pull/1699#issuecomment-370475407,1,['configurat'],['configuration']
Deployability,"Yes, I still see the `FIXME`s in the code after the upgrade to LLVM 18. FYI @devajithvs this is the issue we were discussing yesterday...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14210#issuecomment-2342698784:52,upgrade,upgrade,52,https://root.cern,https://github.com/root-project/root/issues/14210#issuecomment-2342698784,1,['upgrade'],['upgrade']
Deployability,"Yes, I think so.; If I just call ""doxygen"" locally instead of make, it says at the end: ; ```; Patching output file 1/1; Running qhelpgenerator...; ```; And the Makefile is calling doxygen, so unless it's modifying the Doxyfile inbetween... it should.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010875837:95,Patch,Patching,95,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010875837,1,['Patch'],['Patching']
Deployability,"Yes, I was thinking about the move happening to 3.16. If it's only to 3.12 or 3.13, then the hacks need to stay. However, it's probably better to drop Debian 10 support and go to CMake 3.16. Debian 10 users can still have up to ROOT 6.24 if they don't want to install CMake by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8336#issuecomment-854532365:260,install,install,260,https://root.cern,https://github.com/root-project/root/pull/8336#issuecomment-854532365,1,['install'],['install']
Deployability,"Yes, I will update the doc and then close this report. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11280#issuecomment-1235073929:12,update,update,12,https://root.cern,https://github.com/root-project/root/issues/11280#issuecomment-1235073929,1,['update'],['update']
Deployability,"Yes, I'm trying not to use rootmap files at all (#2380), but there is still things to do such as adding support of modules to ACLiC. (This is unrelated to this patch, though)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592#issuecomment-423572368:160,patch,patch,160,https://root.cern,https://github.com/root-project/root/pull/2592#issuecomment-423572368,1,['patch'],['patch']
Deployability,"Yes, are you using system installed Vc? If so, maybe use -Dbuiltin_vc=On.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2153448137:26,install,installed,26,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2153448137,1,['install'],['installed']
Deployability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:1410,update,update,1410,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,2,['update'],['update']
Deployability,"Yes, cool, it seems to have been fixed. :); Could you try to open the resulting .qch file with ""assistant"" (you'll need ssh -X) ? (To install, sudo apt install qt5-assistant, to then run, just type assistant in the command line). Then, in Edit, Preferences, Documentation, add the qch file in question.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1046591628:134,install,install,134,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1046591628,2,['install'],['install']
Deployability,"Yes, ease of deployment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-863171947:13,deploy,deployment,13,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-863171947,1,['deploy'],['deployment']
Deployability,"Yes, https://github.com/root-project/root/pull/16039 takes care of `Long_t`, but we still need to update `RProxiedCollectionField` to remove the hard-coded fixed width integer types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11616#issuecomment-2249504235:98,update,update,98,https://root.cern,https://github.com/root-project/root/issues/11616#issuecomment-2249504235,1,['update'],['update']
Deployability,"Yes, it also affects dev4 (cf. https://github.com/root-project/root/issues/14964#issuecomment-2003453893) == 6.30-patches",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964#issuecomment-2015488801:114,patch,patches,114,https://root.cern,https://github.com/root-project/root/issues/14964#issuecomment-2015488801,1,['patch'],['patches']
Deployability,"Yes, it appears `XRootDConfig.cmake` is broken in the latest version 5.6.3; I opened https://github.com/xrootd/xrootd/pull/2142 to fix it, then we need a new release and an update in EPEL. Or maybe we can apply the fix on top of 5.6.3 already? @ellert",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1838478709:158,release,release,158,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1838478709,2,"['release', 'update']","['release', 'update']"
Deployability,"Yes, it is albeit as similar patch still needs to be applied to the genreflex code path in ROOT's cmake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312#issuecomment-1236132863:29,patch,patch,29,https://root.cern,https://github.com/root-project/root/issues/11312#issuecomment-1236132863,1,['patch'],['patch']
Deployability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:87,install,installed,87,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,2,['install'],['installed']
Deployability,"Yes, just because of the missing tests to cover the code changes of RooRealIntegral. If it's tested well enough I could even backport it to the patch release maybe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11578#issuecomment-1282326814:144,patch,patch,144,https://root.cern,https://github.com/root-project/root/issues/11578#issuecomment-1282326814,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Yes, of course. There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10749#issuecomment-1155497614:126,update,updated,126,https://root.cern,https://github.com/root-project/root/issues/10749#issuecomment-1155497614,1,['update'],['updated']
Deployability,"Yes, one per element in the `fValues` vector. Like it is done currently, just moving the casts from the `GetMergeableValue` function to the `RMergeableVariations::Merge` method. I'm trying an implementation, will update the PR with a new commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061835506:213,update,update,213,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061835506,1,['update'],['update']
Deployability,"Yes, perhaps having something in Jira for this is useful. I didn't find anything on a quick search. I know that the opinions on the topic diverge, so indeed it's best to discuss this in the appropriate channels. That said, can we merge this? It passed the checks, and is safe to merge for the release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-495188282:293,release,release,293,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-495188282,1,['release'],['release']
Deployability,"Yes, still the same problem. newdf.root is being created, but it's empty. I am 99% sure, that I didn't have this issue with root 6.24.02. The behavior changed after upgrading, hopefully, I didn't mess anything up during installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10225#issuecomment-1081486756:220,install,installation,220,https://root.cern,https://github.com/root-project/root/issues/10225#issuecomment-1081486756,1,['install'],['installation']
Deployability,"Yes, thank you @wlav for a very detailed explanation. I think it may be good to mention this in release notes and maybe even include a link to the explanation here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15153#issuecomment-2042301817:96,release,release,96,https://root.cern,https://github.com/root-project/root/issues/15153#issuecomment-2042301817,1,['release'],['release']
Deployability,"Yes, that's for sure, but what about the part of us changing the ROOT links on sourceforge? Do you have access to that?. *edit:* after discussing privately with @lmoneta, we concluded to update the links in ROOT but not change the links on `sourceforge.net`. We can't change the website ourselves, and it's not really worth the effort to identify someone who can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7627#issuecomment-1798192070:187,update,update,187,https://root.cern,https://github.com/root-project/root/issues/7627#issuecomment-1798192070,1,['update'],['update']
Deployability,"Yes, the error is unrelated to your patch (infrastructure problem).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1546#issuecomment-359856606:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/1546#issuecomment-359856606,1,['patch'],['patch']
Deployability,"Yes, the fix is already in the v6.22 patch branch and will part of the v6.22/10 releases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-813697420:37,patch,patch,37,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-813697420,2,"['patch', 'release']","['patch', 'releases']"
Deployability,"Yes, the other commits from the same PR were the obvious candidates. I'm neither claiming that the above list is the full set of fixes for Python 3.11 - hence my question towards the purpose. IMHO just making it compile but crash at runtime isn't exactly the best state for a future bug fix release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13990#issuecomment-1787439477:291,release,release,291,https://root.cern,https://github.com/root-project/root/pull/13990#issuecomment-1787439477,1,['release'],['release']
Deployability,"Yes, the patch is included in 5.1.x series: https://github.com/xrootd/xrootd/commit/5298c732c394d7ac3c24abc7d01a4631f573e692, I has been also bckported to XRootD4 in 4.12.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292#issuecomment-790696084:9,patch,patch,9,https://root.cern,https://github.com/root-project/root/issues/7292#issuecomment-790696084,1,['patch'],['patch']
Deployability,"Yes, the shaded area might be the culprit.; It's also when it was included in the release note, fourth point: https://github.com/root-project/root/blob/master/gui/doc/v600/index.md",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026601618:82,release,release,82,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026601618,1,['release'],['release']
Deployability,"Yes, the workaround is still needed for all Clang builds on EL8 (see for example also the ASan build configuration)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601#issuecomment-1926370491:101,configurat,configuration,101,https://root.cern,https://github.com/root-project/root/issues/11601#issuecomment-1926370491,1,['configurat'],['configuration']
Deployability,"Yes, this is correct: As explained in https://github.com/root-project/root/pull/12351, we didn't backport the necessary patches to LLVM 13 as found in ROOT 6.30.{02,04}. They are automatically available after the upgrade to LLVM 16 which doesn't have a ROOT release yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14509#issuecomment-1920773573:120,patch,patches,120,https://root.cern,https://github.com/root-project/root/issues/14509#issuecomment-1920773573,3,"['patch', 'release', 'upgrade']","['patches', 'release', 'upgrade']"
Deployability,"Yes, this is probably OK to merge, but I will confirm with @Axel-Naumann first that minicern is not used by external users before removing it from the installation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1643#issuecomment-366714281:151,install,installation,151,https://root.cern,https://github.com/root-project/root/pull/1643#issuecomment-366714281,1,['install'],['installation']
Deployability,"Yes, this is the list of dependencies, but they are optional, we should not emit an error if the package is not installed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553#issuecomment-1945596698:112,install,installed,112,https://root.cern,https://github.com/root-project/root/issues/14553#issuecomment-1945596698,1,['install'],['installed']
Deployability,"Yes, this works: https://github.com/root-project/root/actions/runs/8612110675/job/23600606865?pr=15172 reported `fatal: bad object 0f2bb474117bbdb396b94cead06e437471fe3ca5` (but didn't mark the job as failed?!) while https://github.com/root-project/root/actions/runs/8612131632/job/23600674821?pr=15172 correctly ran `clang-format`. Note that the action is still not ideal because `github.event.pull_request.base.sha` may be an updated commit that is not actually the merge base of the PR...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15172#issuecomment-2044364102:428,update,updated,428,https://root.cern,https://github.com/root-project/root/pull/15172#issuecomment-2044364102,1,['update'],['updated']
Deployability,Yes. It should be merged this week-end or Monday. (after additional updates),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4829#issuecomment-580837903:68,update,updates,68,https://root.cern,https://github.com/root-project/root/pull/4829#issuecomment-580837903,1,['update'],['updates']
Deployability,"You are correct about the validity of the C++ code.; However, ROOT accepts the code without complaint.; That actually is the issue. As for the ROOT version, analysis of the STAR data at Brookhaven National Lab is mature and sort of locked into this older ROOT version. Surely EIC will update to a better code base and provide an integrated development environment. Alas, progress is slow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840#issuecomment-1555278707:285,update,update,285,https://root.cern,https://github.com/root-project/root/issues/12840#issuecomment-1555278707,2,"['integrat', 'update']","['integrated', 'update']"
Deployability,"You are right! I reverted the last commit -so we preserve the old unload+load behaviour-, until we find a fix (if it is worth...). Therefore, I updated the PR title and description, and see if we can get the other changes merged: cleanup, etc. :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465#issuecomment-545832963:144,update,updated,144,https://root.cern,https://github.com/root-project/root/pull/4465#issuecomment-545832963,1,['update'],['updated']
Deployability,You are welcome! This feature will be available in the next stable release 6.32 :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14815#issuecomment-1966725608:67,release,release,67,https://root.cern,https://github.com/root-project/root/issues/14815#issuecomment-1966725608,1,['release'],['release']
Deployability,You can just install gdb in your VM and we should get a useful backtrace. Thanks for being so supportive!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1760017677:13,install,install,13,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1760017677,1,['install'],['install']
Deployability,"You can look for `std::function` in the git log, see whether there's anything easy to patch from there. ROOT likes to strip `std::`, which is problematic for non-HEP codes, so yes, I've pretty much completely removed that behavior from my fork of ROOT/meta. However, if memory serves, there was something worse with `std::function` and templates. I think it's this one: https://github.com/wlav/cppyy-backend/commit/98c21db9fad90902efe71d92adc7735cba471c1f. There's also this bug report, which may be related: https://github.com/root-project/root/issues/10680 . (That issue does not exist with cppyy master.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15062#issuecomment-2023127179:86,patch,patch,86,https://root.cern,https://github.com/root-project/root/issues/15062#issuecomment-2023127179,1,['patch'],['patch']
Deployability,"You can reproduce it on a free online Ubuntu 20 browser-box:. - Go to https://www.onworks.net/os-distributions/ubuntu-based; - Select Ubuntu 20, Start; - Open a WebBrowser within it, google ""cern ROOT install"".; - Copy the line of the ""required dependencies""; - Open a Terminal; - sudo apt update; - Paste the line of the required dependencies to install missing packages; - Go back to web browser; - Copy link to download binary release; - Back to terminal, paste it there; - tar -xzvf ...; - source root/bin/thisroot.sh; - Back to browser, search ""cern root github"", go to Issues; - Download the reproducer of this issue; - unzip; - root -l test_zoom.cpp; - Then zoom. I did the process and it's the case the artifact is there on such a fresh independent install.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026925002:201,install,install,201,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026925002,5,"['install', 'release', 'update']","['install', 'release', 'update']"
Deployability,"You don't have to delete them, it's enough that you don't have another ROOT installation already in your environment when you build ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487#issuecomment-865062817:76,install,installation,76,https://root.cern,https://github.com/root-project/root/issues/8487#issuecomment-865062817,1,['install'],['installation']
Deployability,"You don't need a license for Qt if you click on OpenSource. The option is a bit hidden, but you ll get full Qt, not just a free trial. Also, you can install just QtCreator without installing full Qt.; Yes, i think qhelpgenerator can be installed independently, check the LLVM link to see related apt packages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901815852:149,install,install,149,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901815852,3,['install'],"['install', 'installed', 'installing']"
Deployability,"You know you can do a force push with `git push -f` to your original branch to update a PR without having to create a new one, right? :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3529#issuecomment-472077886:79,update,update,79,https://root.cern,https://github.com/root-project/root/pull/3529#issuecomment-472077886,1,['update'],['update']
Deployability,You may need to update the roottest branch to fix the filemerger test.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5639#issuecomment-630991161:16,update,update,16,https://root.cern,https://github.com/root-project/root/pull/5639#issuecomment-630991161,1,['update'],['update']
Deployability,"You might take a look at #1680, that might make your life easier. (This patch is still looks like a good idea to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-369218454:72,patch,patch,72,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-369218454,1,['patch'],['patch']
Deployability,"You need to `brew update` first, bintray shut down May 1st and brew had to migrate storage providers. You need brew 3.1+ to download packages.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-840048152:18,update,update,18,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-840048152,1,['update'],['update']
Deployability,"You option 1 is more or less what we used to do, and it doesn't work when Vdt is builtin, because `INTERFACE_INCLUDE_DIRECTORIES` will be inside the build directory. Your option 2 will likely not work with static external Vdt because of `${CMAKE_STATIC_LIBRARY_PREFIX}vdt${CMAKE_SHARED_LIBRARY_SUFFIX}` used in the install interface. I agree with you, however, if your option one can be made to work correctly when Vdt is external/builtin and the several versions of CMake we support, then that would be my preferred option too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339063610:315,install,install,315,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339063610,1,['install'],['install']
Deployability,"You probably mean ""are now in development phase"".; As of today, I see that ; 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual).; 2) it is still available from the site, people may use that. ; 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785897720:536,update,updates,536,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785897720,2,['update'],['updates']
Deployability,"You probably want to test with the ""clean build"" label to make sure it actually works; incremental builds don't seem to run `cmake` configuration again (because no options changed).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13512#issuecomment-1689900123:132,configurat,configuration,132,https://root.cern,https://github.com/root-project/root/pull/13512#issuecomment-1689900123,1,['configurat'],['configuration']
Deployability,You really want to get that into v6-26-00-patches; this isn't relevant / visible in master!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10086#issuecomment-1063095716:42,patch,patches,42,https://root.cern,https://github.com/root-project/root/pull/10086#issuecomment-1063095716,1,['patch'],['patches']
Deployability,"You should be able to guarantee what gets initialized first, either in your codebase or via the linker. I wish there was a better or even feasible-to-implement way to solve this more elegantly. The underlying issue is that whenever there in unknown (to the interpreter) symbol it will ask the JIT to resolve it. It tries to resolve the symbol via the usual dynamic linker rules and as a last resort it gives the control to ROOT. ROOT, in turn, uses dlsym and dladdr (which have platform-specific bugs) to find the unknown symbol (https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L6418). Unfortunately, we do not have enough information at that point to be able to distinguish between which symbol is supposed to come from libCling or not. Thus we have a conservative strategy in resolving as much as we can from libCling and if something slips through use later-dlopened libraries. I presume a somewhat better fix would be to make a dlsym and a dlsym in libCling and always return the version of the symbol in libCling. This would be a major change which should happen after the upcoming release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564008786:1118,release,release,1118,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564008786,1,['release'],['release']
Deployability,You're welcome. I'll create a PR linking to this issue so you'll be updated about the progress on this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016312834:68,update,updated,68,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016312834,1,['update'],['updated']
Deployability,"Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15887#issuecomment-2180512770:165,install,installed,165,https://root.cern,https://github.com/root-project/root/issues/15887#issuecomment-2180512770,1,['install'],['installed']
Deployability,"Yup! As soon as PR will be green, I will merge it and please backport changes to branch v6-20-00-patches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4806#issuecomment-576352424:97,patch,patches,97,https://root.cern,https://github.com/root-project/root/pull/4806#issuecomment-576352424,1,['patch'],['patches']
Deployability,"Yup, I think I was *almost* right (always hard to reconstruct sources from the debugger's behavior): what's missing is [`7e05125` (#7283)](https://github.com/root-project/root/pull/7283/commits/7e05125f0c824ec1516620da0f914fb3d9a956d5). But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1021981792:278,release,released,278,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1021981792,3,"['patch', 'release']","['patch', 'patches', 'released']"
Deployability,"[1] .x crash.cc . *** Break *** segmentation violation; etc.... --; Michael Schmelling, MPI for Nuclear Physics; Phone:+49-6221-516-511 Fax:+49-6221-516-603. > On 10. Feb 2022, at 11:34, Vincenzo Eduardo Padulano ***@***.***> wrote:; > ; > ; > Four our reference, found the issue in ROOT 6.22.06 on lxplus with a debug build; > ; > ***@***.*** ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-dbg/setup.sh; > ***@***.*** ~]$root --version; > ROOT Version: 6.22/06; > Built for linuxx8664gcc on Nov 27 2020, 15:14:08; > From ***@***.***; > ***@***.*** ~]$cat crash.cc; > #include <stdio.h>; > ; > template <typename T> auto square(T x) {; > auto crash = [](double x) {return x;};; > return x*x;; > }; > ; > void crash(); > {; > printf(""%d\n"",square(2));; > }; > ***@***.*** ~]$root; > ------------------------------------------------------------------; > | Welcome to ROOT 6.22/06 https://root.cern |; > | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; > | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; > | From ***@***.*** |; > | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; > ------------------------------------------------------------------; > ; > root [0] .x crash.cc; > 4; > root [1] .x crash.cc; > root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1106: clang::CXXMethodDecl* clang::CXXRecordDecl::getLambdaCallOperator() const: Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; > ; > We are probably missing some backport, to be decided if it is needed.; > @michael-mpik if possible please upgrade to the latest ROOT version and let us know if the problem persists. Thanks again for your report 😄; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > Triage notifications on the go with GitHub Mobile for iOS or Android. ; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034890520:1904,upgrade,upgrade,1904,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034890520,1,['upgrade'],['upgrade']
Deployability,[6-16] Release notes backport,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3089:7,Release,Release,7,https://root.cern,https://github.com/root-project/root/pull/3089,1,['Release'],['Release']
Deployability,[6-20-backport] Remove malicious cleanup and fix installations of rdicts.pcms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4776:49,install,installations,49,https://root.cern,https://github.com/root-project/root/pull/4776,1,['install'],['installations']
Deployability,[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:6,patch,patches,6,https://root.cern,https://github.com/root-project/root/issues/12957,1,['patch'],['patches']
Deployability,[6.30] diverging branches of the release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14439:33,release,release,33,https://root.cern,https://github.com/root-project/root/issues/14439,1,['release'],['release']
Deployability,[6.30] rootls and rootprint broken on Ubuntu 22.04 binary release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14416:58,release,release,58,https://root.cern,https://github.com/root-project/root/issues/14416,1,['release'],['release']
Deployability,[632] Misc update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16571:11,update,update,11,https://root.cern,https://github.com/root-project/root/pull/16571,1,['update'],['update']
Deployability,[BP][6.30][core] Upgrade openssl and davix builtin versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15533:17,Upgrade,Upgrade,17,https://root.cern,https://github.com/root-project/root/pull/15533,1,['Upgrade'],['Upgrade']
Deployability,[BP][6.32][core] Upgrade openssl and davix builtin versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15530:17,Upgrade,Upgrade,17,https://root.cern,https://github.com/root-project/root/pull/15530,1,['Upgrade'],['Upgrade']
Deployability,[Backport 6-20] Fix installation of PCMs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4792:20,install,installation,20,https://root.cern,https://github.com/root-project/root/pull/4792,1,['install'],['installation']
Deployability,[Backport] Update cmake/modules/RootCPack.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14927:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/14927,1,['Update'],['Update']
Deployability,[Backport][DF] ProgressBar finalize update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13899:36,update,update,36,https://root.cern,https://github.com/root-project/root/pull/13899,1,['update'],['update']
Deployability,[Backport][PyROOT] Install additional PyROOT headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5992:19,Install,Install,19,https://root.cern,https://github.com/root-project/root/pull/5992,1,['Install'],['Install']
Deployability,[Backport][ROOT-9924] Fixing compile time installation of clad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3382:42,install,installation,42,https://root.cern,https://github.com/root-project/root/pull/3382,1,['install'],['installation']
Deployability,[Build system] ROOT installs its builtins directly into `CMAKE_INSTALL_PREFIX`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8655:20,install,installs,20,https://root.cern,https://github.com/root-project/root/issues/8655,1,['install'],['installs']
Deployability,[CI] Add CPU label for standard jobs; update upload-artifact action.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16591:38,update,update,38,https://root.cern,https://github.com/root-project/root/pull/16591,1,['update'],['update']
Deployability,[CI] Add a cpu label to github workflows; update actions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16590:42,update,update,42,https://root.cern,https://github.com/root-project/root/pull/16590,1,['update'],['update']
Deployability,[CI] Update runner labels to avoid running on GPUs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16581:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/16581,1,['Update'],['Update']
Deployability,"[CMS reports](https://github.com/cms-sw/cmssw/issues/31123#issuecomment-811876034) no crashes so far with this patch applied, but I haven't heard back from LLVM upstream yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7757#issuecomment-811879018:111,patch,patch,111,https://root.cern,https://github.com/root-project/root/pull/7757#issuecomment-811879018,1,['patch'],['patch']
Deployability,"[CMake] Attempt to write `ClingConfig.cmake.tmp` to the external LLVM library directory, causing configuration failure",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:97,configurat,configuration,97,https://root.cern,https://github.com/root-project/root/issues/11920,1,['configurat'],['configuration']
Deployability,[CMake] Correctly return real (safe) install paths at runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:37,install,install,37,https://root.cern,https://github.com/root-project/root/pull/5084,1,['install'],['install']
Deployability,[CMake] Don't fail configuration on macOS if textutil can't be found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433:19,configurat,configuration,19,https://root.cern,https://github.com/root-project/root/pull/16433,1,['configurat'],['configuration']
Deployability,[CMake] Improvements related to `opengl` build configuration flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16605:47,configurat,configuration,47,https://root.cern,https://github.com/root-project/root/pull/16605,1,['configurat'],['configuration']
Deployability,[CMake] Install pcms with file(GLOB ...) + install(FILES ...),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4751:8,Install,Install,8,https://root.cern,https://github.com/root-project/root/pull/4751,2,"['Install', 'install']","['Install', 'install']"
Deployability,[CMake] Move towards target-based CMake and partly fix picking up headers from an installed ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:82,install,installed,82,https://root.cern,https://github.com/root-project/root/pull/8709,1,['install'],['installed']
Deployability,[CMake] Simplify build configuration with Python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:23,configurat,configuration,23,https://root.cern,https://github.com/root-project/root/pull/15401,1,['configurat'],['configuration']
Deployability,[CMake] Small CMake updates needed for RooFit's LinkDefs and Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:20,update,updates,20,https://root.cern,https://github.com/root-project/root/pull/4968,1,['update'],['updates']
Deployability,[CMake] Temporary solution for installing pcms without using install(DIRECTORY ...),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763:31,install,installing,31,https://root.cern,https://github.com/root-project/root/pull/4763,2,['install'],"['install', 'installing']"
Deployability,[CMake] Update TBB version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/13724,1,['Update'],['Update']
Deployability,[CMake] Update Vc version to 1.4.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13823:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/13823,1,['Update'],['Update']
Deployability,[CMake] Update XRootD builtin to version 5.5.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12247:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/12247,1,['Update'],['Update']
Deployability,[CMake] Update XRootD builtin to version 5.6.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13209:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/13209,1,['Update'],['Update']
Deployability,[CMake][Backport] Update Vc version to 1.4.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13826:18,Update,Update,18,https://root.cern,https://github.com/root-project/root/pull/13826,1,['Update'],['Update']
Deployability,[CMake][Exp PyROOT] Move search for Python installations outside Sear…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939:43,install,installations,43,https://root.cern,https://github.com/root-project/root/pull/4939,2,['install'],['installations']
Deployability,[CMake][ROOT-9739] Upgrade VDT built-in version from 0.4.1 to 0.4.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2966:19,Upgrade,Upgrade,19,https://root.cern,https://github.com/root-project/root/pull/2966,1,['Upgrade'],['Upgrade']
Deployability,[Cling] Enable tarball-tag flag to build cling using LLVM binary release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4713:65,release,release,65,https://root.cern,https://github.com/root-project/root/pull/4713,1,['release'],['release']
Deployability,[Cling] Replace ROOT patches on top of Clang with backported upstream patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8173:21,patch,patches,21,https://root.cern,https://github.com/root-project/root/pull/8173,2,['patch'],['patches']
Deployability,[Cling] Update cpt to build Cling using LLVM 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7760:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/7760,1,['Update'],['Update']
Deployability,[Cling]Enable cpt to build cling using binary LLVM release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4706:51,release,release,51,https://root.cern,https://github.com/root-project/root/pull/4706,1,['release'],['release']
Deployability,[Cling][cpt]Update cpt shebang to reflect Python 3 requirement [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7376:12,Update,Update,12,https://root.cern,https://github.com/root-project/root/pull/7376,1,['Update'],['Update']
Deployability,[Core] Update year in the ROOT banner,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13756:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/13756,1,['Update'],['Update']
Deployability,[Core][ROOT-9756] Upgrade the version of TBB used as built in to 2019_U1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2876:18,Upgrade,Upgrade,18,https://root.cern,https://github.com/root-project/root/pull/2876,1,['Upgrade'],['Upgrade']
Deployability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296:340,patch,patches,340,https://root.cern,https://github.com/root-project/root/pull/16296,1,['patch'],['patches']
Deployability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:327,integrat,integrating,327,https://root.cern,https://github.com/root-project/root/pull/16814,2,"['integrat', 'patch']","['integrating', 'patches']"
Deployability,[DF] Misc non-functional changes (mostly doc upgrades),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7553:45,upgrade,upgrades,45,https://root.cern,https://github.com/root-project/root/pull/7553,1,['upgrade'],['upgrades']
Deployability,[DF] RResultPtr::Release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047:17,Release,Release,17,https://root.cern,https://github.com/root-project/root/issues/7047,1,['Release'],['Release']
Deployability,[DF] Remove RResultPtr::Release (an unreleased feature),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7485:24,Release,Release,24,https://root.cern,https://github.com/root-project/root/pull/7485,2,['Release'],['Release']
Deployability,"[DF] Throw in case of Snapshot w/ IMT + ""UPDATE"" mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5115:41,UPDATE,UPDATE,41,https://root.cern,https://github.com/root-project/root/pull/5115,2,['UPDATE'],['UPDATE']
Deployability,[DF] Update Arrow datasource to the version in v6.20,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5505:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/5505,1,['Update'],['Update']
Deployability,[DF] Update functions to use ROOT::Internal::GetDemangledTypeName,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14676:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/14676,1,['Update'],['Update']
Deployability,[DF] Update v6.24 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7545:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/7545,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DF] Upgrades to RBookedDefines in preparation for systematic variations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9466:5,Upgrade,Upgrades,5,https://root.cern,https://github.com/root-project/root/pull/9466,1,['Upgrade'],['Upgrades']
Deployability,"[DF] Use assert, not R__ASSERT when checks are unnecessary in releases",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9258:62,release,releases,62,https://root.cern,https://github.com/root-project/root/pull/9258,1,['release'],['releases']
Deployability,[DF][Doc] Updated the doc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2551:10,Update,Updated,10,https://root.cern,https://github.com/root-project/root/pull/2551,1,['Update'],['Updated']
Deployability,[DF][Doc] Updated the release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2524:10,Update,Updated,10,https://root.cern,https://github.com/root-project/root/pull/2524,2,"['Update', 'release']","['Updated', 'release']"
Deployability,[DF][Doc][NFC] Add DescribeDataset to cheat sheet and release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7962:54,release,release,54,https://root.cern,https://github.com/root-project/root/pull/7962,1,['release'],['release']
Deployability,[DF][skip-ci] Minor updates to RDF user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7797:20,update,updates,20,https://root.cern,https://github.com/root-project/root/pull/7797,2,['update'],['updates']
Deployability,[DF][skip-ci] Update v6.24 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7546:14,Update,Update,14,https://root.cern,https://github.com/root-project/root/pull/7546,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DO NOT MERGE] Update to LLVM18.1.8,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16762:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/16762,1,['Update'],['Update']
Deployability,"[DOCS] Release notes, small fix for RDF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2750:7,Release,Release,7,https://root.cern,https://github.com/root-project/root/pull/2750,1,['Release'],['Release']
Deployability,[DOCS] Update RDF release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2279:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/2279,4,"['Update', 'release']","['Update', 'release']"
Deployability,[DOCS] Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2623:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/2623,4,"['Update', 'release']","['Update', 'release']"
Deployability,[DOCS][NFC] Update v6.22 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5545:12,Update,Update,12,https://root.cern,https://github.com/root-project/root/pull/5545,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC] Add more TDF tutorials to the release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1448:36,release,release,36,https://root.cern,https://github.com/root-project/root/pull/1448,2,['release'],['release']
Deployability,[DOC] Callbacks tutorial and release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1109:29,release,release,29,https://root.cern,https://github.com/root-project/root/pull/1109,1,['release'],['release']
Deployability,[DOC] Small improvements to RDF release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2068:32,release,release,32,https://root.cern,https://github.com/root-project/root/pull/2068,1,['release'],['release']
Deployability,[DOC] Update RDF release notes with new name `SaveGraph` for method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2670:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/2670,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC] Update TDF release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/557:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/557,4,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC] Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1176:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/1176,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC] Update release notes for RDF+TTreeProcessorMT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2886:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/2886,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC][NFC][skip-ci] Update RDF release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7930:20,Update,Update,20,https://root.cern,https://github.com/root-project/root/pull/7930,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC][skip ci] Update RDF release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3453:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/3453,2,"['Update', 'release']","['Update', 'release']"
Deployability,[DOC][skip ci] Update RVec release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3634:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/3634,2,"['Update', 'release']","['Update', 'release']"
Deployability,[Do not merge] Test clad master before release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11166:39,release,release,39,https://root.cern,https://github.com/root-project/root/pull/11166,1,['release'],['release']
Deployability,[Doc] Update readme,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2665:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/2665,1,['Update'],['Update']
Deployability,[Doc][PyROOT] Update release notes for 6.22/04,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6631:14,Update,Update,14,https://root.cern,https://github.com/root-project/root/pull/6631,2,"['Update', 'release']","['Update', 'release']"
Deployability,[Doc][skip-ci] Update Minuit2 documentation page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9897:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/9897,1,['Update'],['Update']
Deployability,[Docs] Collection of documentation updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6070:35,update,updates,35,https://root.cern,https://github.com/root-project/root/pull/6070,1,['update'],['updates']
Deployability,[Docs] Incorrect URL in github release for git tag v6.32.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15881:31,release,release,31,https://root.cern,https://github.com/root-project/root/issues/15881,1,['release'],['release']
Deployability,[Docs] Remove link to non-closed bug from release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5070:42,release,release,42,https://root.cern,https://github.com/root-project/root/pull/5070,1,['release'],['release']
Deployability,[Draft] Debug test error in TError patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5803:35,patch,patches,35,https://root.cern,https://github.com/root-project/root/pull/5803,1,['patch'],['patches']
Deployability,[Exp PyROOT] Add patch for TROOT::Initialize in clingwrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4747:17,patch,patch,17,https://root.cern,https://github.com/root-project/root/pull/4747,1,['patch'],['patch']
Deployability,"[Exp PyROOT] Add pythonisation for RooWorkspace. RooWorkspace.import() cannot be called from Python. This adds a; pythonisation called RooWorkspace.Import() instead. @etejedor I updated the tutorials accordingly (they also serve as a test). A potential problem is that I didn't write a pythonisation for old PyROOT, so the tutorials won't work if somebody switches back.; Do we want to support also old PyROOT, or do we move on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5308:178,update,updated,178,https://root.cern,https://github.com/root-project/root/pull/5308,1,['update'],['updated']
Deployability,[Exp PyROOT] Cppyy update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4957:19,update,update,19,https://root.cern,https://github.com/root-project/root/pull/4957,1,['update'],['update']
Deployability,[Exp PyROOT] Fix installation bug introduced in 1d2e76,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4748:17,install,installation,17,https://root.cern,https://github.com/root-project/root/pull/4748,1,['install'],['installation']
Deployability,[Exp PyROOT] Fixes for installation of PyROOT packages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5363:23,install,installation,23,https://root.cern,https://github.com/root-project/root/pull/5363,1,['install'],['installation']
Deployability,[Exp PyROOT] Install public headers of Cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3546:13,Install,Install,13,https://root.cern,https://github.com/root-project/root/pull/3546,1,['Install'],['Install']
Deployability,[Exp PyROOT] New exception handler - cppyy patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4671:43,patch,patch,43,https://root.cern,https://github.com/root-project/root/pull/4671,1,['patch'],['patch']
Deployability,[Exp PyROOT] Release notes: multi-Python versions build and installation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4769:13,Release,Release,13,https://root.cern,https://github.com/root-project/root/pull/4769,6,"['Release', 'install']","['Release', 'installation']"
Deployability,[Exp PyROOT] Trivial changes fixing installation troubles and tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4636:36,install,installation,36,https://root.cern,https://github.com/root-project/root/pull/4636,1,['install'],['installation']
Deployability,[Exp PyROOT] Update Cppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4051:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/4051,2,['Update'],['Update']
Deployability,[Exp PyROOT] Update Cppyy to newest version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3664:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/3664,1,['Update'],['Update']
Deployability,[Exp PyROOT] Update loader with new use of CLING_STANDARD_PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/3581,1,['Update'],['Update']
Deployability,[Exp PyROOT] Update of Cppyy + test fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4264:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/4264,1,['Update'],['Update']
Deployability,[Exp PyROOT] Update the Cppyy packages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/3322,1,['Update'],['Update']
Deployability,[Geom] Update VecGeom header paths to post version 1.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11790:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/11790,1,['Update'],['Update']
Deployability,"[HF] Fix ROOT-10779, cannot update model with new histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5650:28,update,update,28,https://root.cern,https://github.com/root-project/root/pull/5650,2,['update'],['update']
Deployability,[HS3][RF] Hotfixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:10,Hotfix,Hotfixes,10,https://root.cern,https://github.com/root-project/root/pull/13813,1,['Hotfix'],['Hotfixes']
Deployability,[Hist] Call UpdateStats() in TProfile::Add for negative coefficients,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14688:12,Update,UpdateStats,12,https://root.cern,https://github.com/root-project/root/pull/14688,1,['Update'],['UpdateStats']
Deployability,[JSROOT] Release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4797:9,Release,Release,9,https://root.cern,https://github.com/root-project/root/pull/4797,1,['Release'],['Release']
Deployability,[JupyROOT] Backport 622: Support installation of JupyROOT lib on Python directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6313:33,install,installation,33,https://root.cern,https://github.com/root-project/root/pull/6313,1,['install'],['installation']
Deployability,[JupyROOT] Support installation of JupyROOT lib on Python directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6312:19,install,installation,19,https://root.cern,https://github.com/root-project/root/pull/6312,1,['install'],['installation']
Deployability,"[LLVM] Replace ""&"" printing patch with LLVM commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8066:28,patch,patch,28,https://root.cern,https://github.com/root-project/root/pull/8066,1,['patch'],['patch']
Deployability,"[Liberation fonts](https://github.com/liberationfonts/liberation-fonts/releases) seem to be a drop-in replacement with an adequate license. They are missing `symbol.ttf` which is a font we need. [Some doc](https://www.marnel.net/wp-content/uploads/2016/11/ms-fonts_alternatives.pdf) suggests ""Symbol Neu"", but [Fedora](https://src.fedoraproject.org/rpms/google-croscore-fonts/blob/rawhide/f/google-croscore-fonts.spec#_159) seems to suggest that they are not ""released"" anymore, whatever that means. Anyone knows of a FOSS `symbol.ttf`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8357#issuecomment-1727826341:71,release,releases,71,https://root.cern,https://github.com/root-project/root/issues/8357#issuecomment-1727826341,2,['release'],"['released', 'releases']"
Deployability,[MetaCling][ROOT-10872] Apply cppyy patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5925:36,patch,patch,36,https://root.cern,https://github.com/root-project/root/pull/5925,1,['patch'],['patch']
Deployability,[Metacling] Integrate cppyy patch for lambdas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:12,Integrat,Integrate,12,https://root.cern,https://github.com/root-project/root/pull/5541,2,"['Integrat', 'patch']","['Integrate', 'patch']"
Deployability,[NFC] Add release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3783:10,release,release,10,https://root.cern,https://github.com/root-project/root/pull/3783,1,['release'],['release']
Deployability,"[NFC] Remove installation instructions from README, point to website",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8457:13,install,installation,13,https://root.cern,https://github.com/root-project/root/pull/8457,1,['install'],['installation']
Deployability,[NFC] Update RVec rel notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12124:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/12124,1,['Update'],['Update']
Deployability,[NFC] Update my contact email,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5708:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/5708,1,['Update'],['Update']
Deployability,[NFC][DF] Add Ivan to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9223:22,release,release,22,https://root.cern,https://github.com/root-project/root/pull/9223,1,['release'],['release']
Deployability,[NFC][DF] Add note about ProgressBar feature to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13830:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/13830,1,['release'],['release']
Deployability,[NFC][DF] Add note about RunGraphs return value to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13828:51,release,release,51,https://root.cern,https://github.com/root-project/root/pull/13828,1,['release'],['release']
Deployability,[NFC][PyROOT] Add release notes for the ROOT.Numba.Declare feature,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5480:18,release,release,18,https://root.cern,https://github.com/root-project/root/pull/5480,1,['release'],['release']
Deployability,[NFC][RDF][Doc] Mention new analysis tutorials in the release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5512:54,release,release,54,https://root.cern,https://github.com/root-project/root/pull/5512,1,['release'],['release']
Deployability,[NFC][RF] Release notes for RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4801:10,Release,Release,10,https://root.cern,https://github.com/root-project/root/pull/4801,1,['Release'],['Release']
Deployability,[NFC][TMVA] Users guide -- update instructions for randomised trees,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3256:27,update,update,27,https://root.cern,https://github.com/root-project/root/pull/3256,2,['update'],['update']
Deployability,[NFC][skip-ci] Sall updates to RNTuple docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8687:20,update,updates,20,https://root.cern,https://github.com/root-project/root/pull/8687,1,['update'],['updates']
Deployability,[NFC][skip-ci] Update release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9497:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/9497,2,"['Update', 'release']","['Update', 'release']"
Deployability,[No CI] Update v618 I/O and TTree release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3668:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/3668,2,"['Update', 'release']","['Update', 'release']"
Deployability,[PyROOT & RDF] Release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4784:15,Release,Release,15,https://root.cern,https://github.com/root-project/root/pull/4784,1,['Release'],['Release']
Deployability,"[PyROOT] Add release notes (@pythonization, TTree.AsMatrix)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9511:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/9511,1,['release'],['release']
Deployability,[PyROOT] Add release notes for 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3806:13,release,release,13,https://root.cern,https://github.com/root-project/root/pull/3806,1,['release'],['release']
Deployability,[PyROOT] Allow customization of install dir for Python modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5907:32,install,install,32,https://root.cern,https://github.com/root-project/root/pull/5907,1,['install'],['install']
Deployability,[PyROOT] Allow customization of install dir for Python modules (v6.22 backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5908:32,install,install,32,https://root.cern,https://github.com/root-project/root/pull/5908,1,['install'],['install']
Deployability,[PyROOT] Backport fixes for installation of PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6623:28,install,installation,28,https://root.cern,https://github.com/root-project/root/pull/6623,1,['install'],['installation']
Deployability,[PyROOT] Backport: Install missing header TPyDispatcher.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6589:19,Install,Install,19,https://root.cern,https://github.com/root-project/root/pull/6589,1,['Install'],['Install']
Deployability,[PyROOT] Example with inheriting from `ROOT.Math.IMultiGenFunction` doesn't work after recent cppyy upgrade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15315:100,upgrade,upgrade,100,https://root.cern,https://github.com/root-project/root/issues/15315,1,['upgrade'],['upgrade']
Deployability,[PyROOT] Fix installation of PyROOT Python modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9469:13,install,installation,13,https://root.cern,https://github.com/root-project/root/pull/9469,1,['install'],['installation']
Deployability,[PyROOT] Install additional PyROOT headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5991:9,Install,Install,9,https://root.cern,https://github.com/root-project/root/pull/5991,1,['Install'],['Install']
Deployability,[PyROOT] Integrate JsMVA into PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:9,Integrat,Integrate,9,https://root.cern,https://github.com/root-project/root/pull/15402,1,['Integrat'],['Integrate']
Deployability,[PyROOT] Redo patch for multi-python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6618:14,patch,patch,14,https://root.cern,https://github.com/root-project/root/pull/6618,1,['patch'],['patch']
Deployability,[PyROOT] Remove string converter patches to CPyCppyy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16212:33,patch,patches,33,https://root.cern,https://github.com/root-project/root/pull/16212,1,['patch'],['patches']
Deployability,[PyROOT] Revert patch for versioned PyROOT libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14703:16,patch,patch,16,https://root.cern,https://github.com/root-project/root/pull/14703,1,['patch'],['patch']
Deployability,[PyROOT] Update GUI demo tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6627:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/6627,1,['Update'],['Update']
Deployability,[PyROOT] Update `print_roofit_pyz_doctrings.py` to work with Python 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8884:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/8884,1,['Update'],['Update']
Deployability,[PyROOT] Update cppyy to a recent version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/14507,1,['Update'],['Update']
Deployability,[RDF][NFC] Update cheat sheet with links to the RDFInterface methods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2100:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/2100,1,['Update'],['Update']
Deployability,[REve] RenderCore integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7185:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/7185,1,['integrat'],['integration']
Deployability,"[REve] Update to RenderCore release from github, deploy it as builtin tarball",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/11936,3,"['Update', 'deploy', 'release']","['Update', 'deploy', 'release']"
Deployability,[RF] Add line about SPlot to release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5017:29,release,release,29,https://root.cern,https://github.com/root-project/root/pull/5017,1,['release'],['release']
Deployability,[RF] Add the initial integration of AD to RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/11773,1,['integrat'],['integration']
Deployability,[RF] Analytical integration for RooNDKeysPdf with custom range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:16,integrat,integration,16,https://root.cern,https://github.com/root-project/root/pull/8019,1,['integrat'],['integration']
Deployability,[RF] Attempt to integrate xRooFit into RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499:16,integrat,integrate,16,https://root.cern,https://github.com/root-project/root/pull/11499,1,['integrat'],['integrate']
Deployability,[RF] Avoid any dependencies of RooFitHS3 for dictionary generation and update HistFactory::JSONTool interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10082:71,update,update,71,https://root.cern,https://github.com/root-project/root/pull/10082,1,['update'],['update']
Deployability,[RF] Collection of a few small patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6693:31,patch,patches,31,https://root.cern,https://github.com/root-project/root/pull/6693,1,['patch'],['patches']
Deployability,[RF] Collection of small code updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6111:30,update,updates,30,https://root.cern,https://github.com/root-project/root/pull/6111,1,['update'],['updates']
Deployability,[RF] Collection of small fixes and documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4739:49,update,updates,49,https://root.cern,https://github.com/root-project/root/pull/4739,1,['update'],['updates']
Deployability,[RF] Collection of small patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6626:25,patch,patches,25,https://root.cern,https://github.com/root-project/root/pull/6626,1,['patch'],['patches']
Deployability,[RF] Collection of small patches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6653:25,patch,patches,25,https://root.cern,https://github.com/root-project/root/pull/6653,1,['patch'],['patches']
Deployability,[RF] Consider rangeName for integration in RooParamHistFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7198:28,integrat,integration,28,https://root.cern,https://github.com/root-project/root/pull/7198,1,['integrat'],['integration']
Deployability,[RF] Correct RooPoisson integral if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11697:36,integrat,integrated,36,https://root.cern,https://github.com/root-project/root/pull/11697,1,['integrat'],['integrated']
Deployability,[RF] Correctly forward integrator config in RooImproperIntegrator1D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:23,integrat,integrator,23,https://root.cern,https://github.com/root-project/root/pull/11074,1,['integrat'],['integrator']
Deployability,[RF] Crash in reading some RooWorkspaces after recent TStreamerInfo update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282:68,update,update,68,https://root.cern,https://github.com/root-project/root/issues/10282,1,['update'],['update']
Deployability,[RF] Documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3834:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/3834,2,['update'],['updates']
Deployability,"[RF] Documentation updates, improvement of warning and error messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/5315,1,['update'],['updates']
Deployability,[RF] Documentation updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3611:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/3611,2,['update'],['updates']
Deployability,[RF] Documentation upgrades in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5543:19,upgrade,upgrades,19,https://root.cern,https://github.com/root-project/root/pull/5543,1,['upgrade'],['upgrades']
Deployability,[RF] Enable analytic integration of RooHistPdfs with RooLinearVars,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12482:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/12482,1,['integrat'],['integration']
Deployability,[RF] Explicitly forbid integration of a `RooAbsRealLValue`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:23,integrat,integration,23,https://root.cern,https://github.com/root-project/root/pull/11162,1,['integrat'],['integration']
Deployability,[RF] Failing tutorial when pandas not installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9357:38,install,installed,38,https://root.cern,https://github.com/root-project/root/issues/9357,1,['install'],['installed']
Deployability,[RF] Fix the integration of a cloned RooParamHistFunc with range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:13,integrat,integration,13,https://root.cern,https://github.com/root-project/root/pull/7478,2,['integrat'],['integration']
Deployability,[RF] Generalize `RooIntegrator1D` to n dimensions and merge with other Romberg integrator classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:79,integrat,integrator,79,https://root.cern,https://github.com/root-project/root/pull/13384,1,['integrat'],['integrator']
Deployability,[RF] HS3: updates to reflect the suggested changes in the RooFit JSON standard,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12207:10,update,updates,10,https://root.cern,https://github.com/root-project/root/pull/12207,1,['update'],['updates']
Deployability,[RF] Helper functions for bin integration for simultaneous fits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9358:30,integrat,integration,30,https://root.cern,https://github.com/root-project/root/pull/9358,1,['integrat'],['integration']
Deployability,[RF] Improve doxygen and add release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5555:29,release,release,29,https://root.cern,https://github.com/root-project/root/pull/5555,1,['release'],['release']
Deployability,[RF] Make headers of integrator implementations private,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146:21,integrat,integrator,21,https://root.cern,https://github.com/root-project/root/pull/12146,1,['integrat'],['integrator']
Deployability,[RF] Make integrator replaceable from outside for bin sampling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6921:10,integrat,integrator,10,https://root.cern,https://github.com/root-project/root/pull/6921,1,['integrat'],['integrator']
Deployability,[RF] Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release with `cuda=OFF`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15775:97,release,release,97,https://root.cern,https://github.com/root-project/root/pull/15775,1,['release'],['release']
Deployability,[RF] Make sure that categories in multi-layer SimPdfs get updated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3738:58,update,updated,58,https://root.cern,https://github.com/root-project/root/pull/3738,2,['update'],['updated']
Deployability,[RF] Many small updates/fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7439:16,update,updates,16,https://root.cern,https://github.com/root-project/root/pull/7439,1,['update'],['updates']
Deployability,[RF] Minor RooFit interface updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9337:28,update,updates,28,https://root.cern,https://github.com/root-project/root/pull/9337,1,['update'],['updates']
Deployability,[RF] Misc patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6531:10,patch,patches,10,https://root.cern,https://github.com/root-project/root/pull/6531,1,['patch'],['patches']
Deployability,[RF] Move RooFit pythonizations to roofit and make them pip installable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16608:60,install,installable,60,https://root.cern,https://github.com/root-project/root/pull/16608,1,['install'],['installable']
Deployability,[RF] MultiProcess README.md should be updated to include LikelihoodJob,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10967:38,update,updated,38,https://root.cern,https://github.com/root-project/root/issues/10967,1,['update'],['updated']
Deployability,[RF] Promote `ROOFIT_MEMORY_SAFE_INTERFACES` to users in release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14177:57,release,release,57,https://root.cern,https://github.com/root-project/root/pull/14177,1,['release'],['release']
Deployability,[RF] Release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5876:5,Release,Release,5,https://root.cern,https://github.com/root-project/root/pull/5876,1,['Release'],['Release']
Deployability,[RF] Remove integration code from RooEffProd,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10100:12,integrat,integration,12,https://root.cern,https://github.com/root-project/root/pull/10100,1,['integrat'],['integration']
Deployability,[RF] Remove redundant configuration members of `RooAbsMinimizerFcn`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:22,configurat,configuration,22,https://root.cern,https://github.com/root-project/root/pull/11695,1,['configurat'],['configuration']
Deployability,[RF] Reorganize RooAbsTestStatistic configuration with configuration struct,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:36,configurat,configuration,36,https://root.cern,https://github.com/root-project/root/pull/7616,2,['configurat'],['configuration']
Deployability,[RF] RooAbsData code modernization and docmumentation update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10663:54,update,update,54,https://root.cern,https://github.com/root-project/root/pull/10663,1,['update'],['update']
Deployability,[RF] RooFit open issues and backports for 6.26.00 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9508:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/9508,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.26.02 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10112:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/10112,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.26.04 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10493:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/10493,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.26.06 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10758:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/10758,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.26.08/10 releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11059:53,release,releases,53,https://root.cern,https://github.com/root-project/root/issues/11059,1,['release'],['releases']
Deployability,[RF] RooFit open issues and backports for 6.26.12 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11534:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/11534,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.28 patch releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12319:47,patch,patch,47,https://root.cern,https://github.com/root-project/root/issues/12319,2,"['patch', 'release']","['patch', 'releases']"
Deployability,[RF] RooFit open issues and backports for 6.28.00 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11856:50,release,release,50,https://root.cern,https://github.com/root-project/root/issues/11856,1,['release'],['release']
Deployability,[RF] RooFit open issues and backports for 6.30 releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13458:47,release,releases,47,https://root.cern,https://github.com/root-project/root/issues/13458,1,['release'],['releases']
Deployability,[RF] RooHypatia2 Analytical integral integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254:37,integrat,integration,37,https://root.cern,https://github.com/root-project/root/issues/7254,1,['integrat'],['integration']
Deployability,[RF] RooTruthModel analytical integrals for general integration ranges,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14021:52,integrat,integration,52,https://root.cern,https://github.com/root-project/root/pull/14021,1,['integrat'],['integration']
Deployability,[RF] Set BatchMode in `stressRooFit` via global configuration flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12719:48,configurat,configuration,48,https://root.cern,https://github.com/root-project/root/pull/12719,1,['configurat'],['configuration']
Deployability,[RF] Several improvements to the RooFit build configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13915:46,configurat,configuration,46,https://root.cern,https://github.com/root-project/root/pull/13915,1,['configurat'],['configuration']
Deployability,[RF] Some RooFit code updated with range-based loops and smart ptrs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10686:22,update,updated,22,https://root.cern,https://github.com/root-project/root/pull/10686,1,['update'],['updated']
Deployability,[RF] Some RooFit documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11420:31,update,updates,31,https://root.cern,https://github.com/root-project/root/pull/11420,1,['update'],['updates']
Deployability,[RF] Tweak release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5875:11,release,release,11,https://root.cern,https://github.com/root-project/root/pull/5875,1,['release'],['release']
Deployability,[RF] Update ParamHistFunc.cxx - remove bogus assertion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12725:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/12725,1,['Update'],['Update']
Deployability,[RF] Update Python version of rf408 tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9360:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/issues/9360,1,['Update'],['Update']
Deployability,[RF] Update Python version of rf408_RDataFrameToRooFit tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10893:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/10893,1,['Update'],['Update']
Deployability,[RF] Update RooAbsCollection.cxx - fix invalid read bug in remove,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13033:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/13033,1,['Update'],['Update']
Deployability,[RF] Update RooAbsReal to use less owning pointers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8262:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/8262,1,['Update'],['Update']
Deployability,[RF] Update RooFit AD to support ATLAS and CMS Higgs combinations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15616:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/15616,1,['Update'],['Update']
Deployability,[RF] Update RooFit `rf204b_extendedLikelihood_rangedFit` tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11378:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/11378,1,['Update'],['Update']
Deployability,[RF] Update RooFitResult.cxx - use printValue for constPars,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13056:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/13056,1,['Update'],['Update']
Deployability,[RF] Update SBI tutorials with improved plot styling and labels,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16692:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/16692,1,['Update'],['Update']
Deployability,[RF] Update crystal ball shapes in RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/issues/7258,1,['Update'],['Update']
Deployability,[RF] Update reference files for testProxiesAndCategories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8790:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/8790,1,['Update'],['Update']
Deployability,[RF] Update release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5707:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/5707,2,"['Update', 'release']","['Update', 'release']"
Deployability,[RF] Update the HS3 HistFactory implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12340:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/12340,1,['Update'],['Update']
Deployability,[RF] Update to latest xRooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13717:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/13717,1,['Update'],['Update']
Deployability,[RF] Update xRooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15301:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/15301,2,['Update'],['Update']
Deployability,[RF] Update xroofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14292:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/14292,4,['Update'],['Update']
Deployability,[RF] Update/fix a few tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5983:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/5983,1,['Update'],['Update']
Deployability,[RF] Updates to RooFit tutorials necessary before the next release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8808:5,Update,Updates,5,https://root.cern,https://github.com/root-project/root/issues/8808,2,"['Update', 'release']","['Updates', 'release']"
Deployability,[RF] Updates to the RooFit code generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16007:5,Update,Updates,5,https://root.cern,https://github.com/root-project/root/pull/16007,1,['Update'],['Updates']
Deployability,[RF] WIP RooFit codegen + AD updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13133:29,update,updates,29,https://root.cern,https://github.com/root-project/root/pull/13133,1,['update'],['updates']
Deployability,[RF] Wrong integral for RooPoisson if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10868:38,integrat,integrated,38,https://root.cern,https://github.com/root-project/root/issues/10868,1,['integrat'],['integrated']
Deployability,[RF] remove RooGradMinimizerFcn and simplify RooMinimizer configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:58,configurat,configuration,58,https://root.cern,https://github.com/root-project/root/pull/11716,2,['configurat'],['configuration']
Deployability,[RF] update MultiProcess/TestStatistics docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16788:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/16788,1,['update'],['update']
Deployability,[RF] update bernstein using std::tie for xmin and xmax,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5506:5,update,update,5,https://root.cern,https://github.com/root-project/root/pull/5506,1,['update'],['update']
Deployability,[RF] v6-26-00-patches branch fails to build on ubuntu 18.04,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:14,patch,patches,14,https://root.cern,https://github.com/root-project/root/issues/10107,1,['patch'],['patches']
Deployability,[RF] xroofit update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15843:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/15843,1,['update'],['update']
Deployability,[RF][Docs] Breaking changes of batch computation interface not documented in release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:77,release,release,77,https://root.cern,https://github.com/root-project/root/issues/7454,1,['release'],['release']
Deployability,[RF][Docs] Documentation updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4147:25,update,updates,25,https://root.cern,https://github.com/root-project/root/pull/4147,2,['update'],['updates']
Deployability,[RF][Docs] Documentation updates / fixes collected througout june.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4009:25,update,updates,25,https://root.cern,https://github.com/root-project/root/pull/4009,1,['update'],['updates']
Deployability,[RF][Docs] Documentation updates for RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7451:25,update,updates,25,https://root.cern,https://github.com/root-project/root/pull/7451,1,['update'],['updates']
Deployability,[RF][Docs] Documentation updates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6145:25,update,updates,25,https://root.cern,https://github.com/root-project/root/pull/6145,1,['update'],['updates']
Deployability,[RF][HF] Update `hf001_example` tutorial with example fit and plot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16323:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/16323,1,['Update'],['Update']
Deployability,[RF][NFC] Collection of documentation updates from june.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5964:38,update,updates,38,https://root.cern,https://github.com/root-project/root/pull/5964,1,['update'],['updates']
Deployability,[RF][No CI] Update release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3662:12,Update,Update,12,https://root.cern,https://github.com/root-project/root/pull/3662,2,"['Update', 'release']","['Update', 'release']"
Deployability,[RF][RelNotes] Final RooFit release notes and documentation changes for v626 release,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9799:28,release,release,28,https://root.cern,https://github.com/root-project/root/pull/9799,2,['release'],['release']
Deployability,"[RM] Exclude ""rdict"" from install script",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3228:26,install,install,26,https://root.cern,https://github.com/root-project/root/pull/3228,1,['install'],['install']
Deployability,"[ROOT-10093] When generating events with simultaneous PDFs that contain; further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3738:153,update,updated,153,https://root.cern,https://github.com/root-project/root/pull/3738,1,['update'],['updated']
Deployability,"[ROOT-10093] When generating events with simultaneous PDFs that contain; simultaneous PDFs as children, the category tags for the children have to; be updated before being written into a dataset. Otherwise, a dataset with; wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3739:151,update,updated,151,https://root.cern,https://github.com/root-project/root/pull/3739,1,['update'],['updated']
Deployability,[ROOT-10370] Update buitin version of CFITSIO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4566:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/4566,1,['Update'],['Update']
Deployability,[ROOT-10529] Copy class.rules during configuration time,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4876:37,configurat,configuration,37,https://root.cern,https://github.com/root-project/root/pull/4876,1,['configurat'],['configuration']
Deployability,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466:363,update,updated,363,https://root.cern,https://github.com/root-project/root/pull/5466,1,['update'],['updated']
Deployability,[ROOT-10872][PyROOT] Backport 6.22: Update Dispatcher to prevent use of deleted copy…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6020:36,Update,Update,36,https://root.cern,https://github.com/root-project/root/pull/6020,1,['Update'],['Update']
Deployability,[ROOT-10872][PyROOT] Update Dispatcher to prevent use of deleted copy…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6005:21,Update,Update,21,https://root.cern,https://github.com/root-project/root/pull/6005,1,['Update'],['Update']
Deployability,[ROOT-130] Update Minuit2 User Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/issues/14551,1,['Update'],['Update']
Deployability,[ROOT-9489] Exclude Clang from install directive when using shared LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2653:31,install,install,31,https://root.cern,https://github.com/root-project/root/pull/2653,1,['install'],['install']
Deployability,"[ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the; discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1); yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without; ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used; as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,; the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3326:402,integrat,integration,402,https://root.cern,https://github.com/root-project/root/pull/3326,1,['integrat'],['integration']
Deployability,[ROOT-9685] Fix installation of generated kernel.json file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2952:16,install,installation,16,https://root.cern,https://github.com/root-project/root/pull/2952,1,['install'],['installation']
Deployability,[ROOT-9685] Fix installation of generated kernel.json file (6.14 patches),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2969:16,install,installation,16,https://root.cern,https://github.com/root-project/root/pull/2969,2,"['install', 'patch']","['installation', 'patches']"
Deployability,[ROOT-9685] Fix installation of generated kernel.json file (6.16 patches),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2970:16,install,installation,16,https://root.cern,https://github.com/root-project/root/pull/2970,2,"['install', 'patch']","['installation', 'patches']"
Deployability,[ROOT-9924] Fix installation of clad and its headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3337:16,install,installation,16,https://root.cern,https://github.com/root-project/root/pull/3337,1,['install'],['installation']
Deployability,[RS] Update HypoTestInverterResult::ExclusionCleanup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6219:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/6219,1,['Update'],['Update']
Deployability,[RelNotes] Backport small tweaks for RF-related release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7466:48,release,release,48,https://root.cern,https://github.com/root-project/root/pull/7466,1,['release'],['release']
Deployability,[RelNotes] Clarify statement in 6.18 release notes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6909:37,release,release,37,https://root.cern,https://github.com/root-project/root/pull/6909,2,['release'],['release']
Deployability,[RelNotes] Update release notes for RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7452:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/7452,4,"['Update', 'release']","['Update', 'release']"
Deployability,[Skip-CI] Update code owners,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14377:10,Update,Update,10,https://root.cern,https://github.com/root-project/root/pull/14377,1,['Update'],['Update']
Deployability,[TCling] Updates required by Cling's Definitionshadower,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446:9,Update,Updates,9,https://root.cern,https://github.com/root-project/root/pull/4446,1,['Update'],['Updates']
Deployability,[TDF] Backport doc updates to v6.12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1537:19,update,updates,19,https://root.cern,https://github.com/root-project/root/pull/1537,1,['update'],['updates']
Deployability,[TDF] Backport latest patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1552:22,patch,patches,22,https://root.cern,https://github.com/root-project/root/pull/1552,1,['patch'],['patches']
Deployability,[TDF] Integrate TVec with TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1676:6,Integrat,Integrate,6,https://root.cern,https://github.com/root-project/root/pull/1676,1,['Integrat'],['Integrate']
Deployability,[TDF] Update user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/418:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/418,2,['Update'],['Update']
Deployability,[TDF] Update/improve naming of internal variables and methods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1902:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/1902,1,['Update'],['Update']
Deployability,[TDF][VecOps] Improve integration of VecOps and TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1679:22,integrat,integration,22,https://root.cern,https://github.com/root-project/root/pull/1679,1,['integrat'],['integration']
Deployability,[TMVA] Add new features to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4800:27,release,release,27,https://root.cern,https://github.com/root-project/root/pull/4800,1,['release'],['release']
Deployability,[TMVA] Add operations needed for performing optimizer updates:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2315:54,update,updates,54,https://root.cern,https://github.com/root-project/root/pull/2315,1,['update'],['updates']
Deployability,[TMVA] Doc - Update TMVA License location,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2410:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/2410,1,['Update'],['Update']
Deployability,[TMVA] JsMVA -- Update d3 lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2353:16,Update,Update,16,https://root.cern,https://github.com/root-project/root/pull/2353,1,['Update'],['Update']
Deployability,[TMVA] Optimizer choice simplification (Update of #3414),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:40,Update,Update,40,https://root.cern,https://github.com/root-project/root/pull/3493,1,['Update'],['Update']
Deployability,[TMVA] Update Keras tutorials using tensorflow.keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7255:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/7255,1,['Update'],['Update']
Deployability,[TMVA] Update User's Guide authors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2399:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/2399,1,['Update'],['Update']
Deployability,[TMVA] Update documentation pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2465:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/2465,1,['Update'],['Update']
Deployability,[TMVA] [SOFIE] Update SOFIE documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13095:15,Update,Update,15,https://root.cern,https://github.com/root-project/root/pull/13095,1,['Update'],['Update']
Deployability,[TRint] Properly update the prompt after incomplete input on a nested call to `TROOT::ProcessLine()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9733:17,update,update,17,https://root.cern,https://github.com/root-project/root/pull/9733,1,['update'],['update']
Deployability,[The way it is implemented](https://root.cern.ch/doc/master/TF1_8cxx_source.html#l01408) makes it mandatory to have an active pad with the TF1 drawn in it. That's why you need to add these `gPad->Update()` if you really want to use this function (see my first example). My second reply does exactly the same thing as DrawIntegral without the `GetSelectedPad()`. That's the simpler/better way when you run compiled ROOT like you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708#issuecomment-1734857976:196,Update,Update,196,https://root.cern,https://github.com/root-project/root/issues/13708#issuecomment-1734857976,1,['Update'],['Update']
Deployability,"[This issue](https://github.com/root-project/root/issues/16523) noted that the GL component of ROOT is not functioning correctly on Mac. It appears that the problem is related to the use of an incorrect OpenGL library for rendering GL images. This additional library, which comes with XQuartz, is required when installing glew. This pull request aims to ensure that the system's OpenGL library is given priority.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16543:311,install,installing,311,https://root.cern,https://github.com/root-project/root/pull/16543,1,['install'],['installing']
Deployability,[Tree][skip-ci] Update documentation of TTreeFormula,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16025:16,Update,Update,16,https://root.cern,https://github.com/root-project/root/pull/16025,1,['Update'],['Update']
Deployability,"[Tutorials] Make converttonotebook smarter, and update RF tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5913:48,update,update,48,https://root.cern,https://github.com/root-project/root/pull/5913,1,['update'],['update']
Deployability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:1,UPDATE,UPDATE,1,https://root.cern,https://github.com/root-project/root/issues/9335,1,['UPDATE'],['UPDATE']
Deployability,[WIP] Runtime modules patch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/788:22,patch,patch,22,https://root.cern,https://github.com/root-project/root/pull/788,1,['patch'],['patch']
Deployability,[WIP][cling] Review workarounds for upstreamed patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16409:47,patch,patches,47,https://root.cern,https://github.com/root-project/root/pull/16409,1,['patch'],['patches']
Deployability,[Work Product] This pull request contains the code pertaining to the **Google Summer of Code 2020** project [Development of 3D CNN in TMVA](https://summerofcode.withgoogle.com/projects/#5442246578536448). It implements the following features:. - 3D CNN layer for cpu and and tests for the same; - 3D MaxPool layer for cpu and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is Added backward pass tests([1b82793](https://github.com/root-project/root/pull/6263/commits/1b8279319807d1940b5f4a3d5278e15f74a941fa)). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6263:597,update,updates,597,https://root.cern,https://github.com/root-project/root/pull/6263,1,['update'],['updates']
Deployability,[Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same; - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3924:524,update,updates,524,https://root.cern,https://github.com/root-project/root/pull/3924,1,['update'],['updates']
Deployability,[afterimage] Update to latest config.guess,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16260:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/16260,1,['Update'],['Update']
Deployability,[asan] Fix asan configuration for MacOS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16499:16,configurat,configuration,16,https://root.cern,https://github.com/root-project/root/pull/16499,1,['configurat'],['configuration']
Deployability,[backport][NFC][DF] Add note about ProgressBar addition to release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13838:59,release,release,59,https://root.cern,https://github.com/root-project/root/pull/13838,1,['release'],['release']
Deployability,[backport][relnotes] Relnote update Marta - df106 tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13960:29,update,update,29,https://root.cern,https://github.com/root-project/root/pull/13960,1,['update'],['update']
Deployability,[bug] Update TVirtualX.cxx to fix 6483,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6547:6,Update,Update,6,https://root.cern,https://github.com/root-project/root/pull/6547,1,['Update'],['Update']
Deployability,[bugfix] Update SimplexBuilder.cxx to fix #6775,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10492:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/10492,1,['Update'],['Update']
Deployability,[builtins] Update Davix to latest available version: 0.7.6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7331:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/7331,1,['Update'],['Update']
Deployability,[builtins] Update builtin xrootd to 5.3.0 and move it to proper ROOT builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/7335,1,['Update'],['Update']
Deployability,[builtins] Update xxhash to latest version: 0.8.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7328:11,Update,Update,11,https://root.cern,https://github.com/root-project/root/pull/7328,1,['Update'],['Update']
Deployability,[cefdisplay] update CEF code [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13486:13,update,update,13,https://root.cern,https://github.com/root-project/root/pull/13486,1,['update'],['update']
Deployability,[ci-config] Add dependabot to update GitHub Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:30,update,update,30,https://root.cern,https://github.com/root-project/root/pull/14683,1,['update'],['update']
Deployability,[ci] Add Python version to Windows precomplied release title or filename,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15774:47,release,release,47,https://root.cern,https://github.com/root-project/root/issues/15774,1,['release'],['release']
Deployability,[ci] Exclude Debug configurations on Windows from the matrix [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13086:19,configurat,configurations,19,https://root.cern,https://github.com/root-project/root/pull/13086,1,['configurat'],['configurations']
Deployability,[ci] Exclude Win Debug from releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16490:28,release,releases,28,https://root.cern,https://github.com/root-project/root/pull/16490,1,['release'],['releases']
Deployability,[ci] Fix many duplications and mistakes in the CI configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14852:50,configurat,configuration,50,https://root.cern,https://github.com/root-project/root/pull/14852,1,['configurat'],['configuration']
Deployability,[ci] Fix release binaries.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13786:9,release,release,9,https://root.cern,https://github.com/root-project/root/pull/13786,1,['release'],['release']
Deployability,"[ci] For Windows, only build artifacts for Release: [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12593:43,Release,Release,43,https://root.cern,https://github.com/root-project/root/pull/12593,1,['Release'],['Release']
Deployability,[ci] Optimize total build action time acting on compression of artifacts and releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15802:77,release,releases,77,https://root.cern,https://github.com/root-project/root/pull/15802,1,['release'],['releases']
Deployability,[ci] Revert Numba restrictions and lock NumPy version for upgrades,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16209:58,upgrade,upgrades,58,https://root.cern,https://github.com/root-project/root/pull/16209,1,['upgrade'],['upgrades']
Deployability,[ci] Start integration for the v6-34-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16728:11,integrat,integration,11,https://root.cern,https://github.com/root-project/root/pull/16728,2,"['integrat', 'patch']","['integration', 'patches']"
Deployability,[ci] The only Mac in the new CI was upgraded to macOS 14.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13757:36,upgrade,upgraded,36,https://root.cern,https://github.com/root-project/root/pull/13757,1,['upgrade'],['upgraded']
Deployability,[ci] Update builtin xrootd and davix versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16665:5,Update,Update,5,https://root.cern,https://github.com/root-project/root/pull/16665,1,['Update'],['Update']
Deployability,[ci] Upgrade builtin xrootd and openssl versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14995:5,Upgrade,Upgrade,5,https://root.cern,https://github.com/root-project/root/pull/14995,1,['Upgrade'],['Upgrade']
Deployability,[clad] Also update the version on unix.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2719:12,update,update,12,https://root.cern,https://github.com/root-project/root/pull/2719,1,['update'],['update']
Deployability,[clad] Fix corrupt patch file (missing space in context).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833:19,patch,patch,19,https://root.cern,https://github.com/root-project/root/pull/12833,1,['patch'],['patch']
Deployability,[clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:19242; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/net/src/TNetFile.cxx:697:7: warning: Value stored to 'read' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'read' is never read in /opt/root_src/net/net/src/TNetFile.cxx:697; /opt/root_src/net/net/src/TNetFile.cxx:722:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/net/net/src/TNetFile.cxx:722; /opt/root_src/net/net/src/TNetFile.cxx:728:7: warning: Value stored to 'update' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'update' is never read in /opt/root_src/net/net/src/TNetFile.cxx:728; /opt/root_src/net/net/src/TSQLMonitoring.cxx:178:99: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fDB' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 2: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:89; 3: Assuming 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 4: Left side of '||' is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 5: 'values' is non-null in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 6: Left side of '&&' is true in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 7: Assuming the condition is false in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 8: Taking false branch in /opt/root_src/net/net/src/TSQLMonitoring.cxx:95; 9: Loop condition is true. Entering loop body in /opt/root_src/net/net/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:81874,update,update,81874,https://root.cern,https://github.com/root-project/root/issues/7528,1,['update'],['update']
Deployability,[clang] Backport patch to merge template member parent,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:17,patch,patch,17,https://root.cern,https://github.com/root-project/root/pull/13370,1,['patch'],['patch']
Deployability,[clang] Revert patch to `Sema::computeDeclContext`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123:15,patch,patch,15,https://root.cern,https://github.com/root-project/root/pull/13123,1,['patch'],['patch']
Deployability,[cling-cpt]Fix broken requirements check for cpt - Cling's installer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5605:59,install,installer,59,https://root.cern,https://github.com/root-project/root/pull/5605,1,['install'],['installer']
Deployability,[cling] Install the modulemap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7455:8,Install,Install,8,https://root.cern,https://github.com/root-project/root/pull/7455,1,['Install'],['Install']
Deployability,[cling] New interface to export Cling run-time configuration bits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928:47,configurat,configuration,47,https://root.cern,https://github.com/root-project/root/pull/6928,1,['configurat'],['configuration']
Deployability,[cling] Re-enable CodeGen-OptLevel after llvm13 upgrade:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:48,upgrade,upgrade,48,https://root.cern,https://github.com/root-project/root/pull/11945,1,['upgrade'],['upgrade']
Deployability,[cling] Review workarounds for upstreamed patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14210:42,patch,patches,42,https://root.cern,https://github.com/root-project/root/issues/14210,1,['patch'],['patches']
Deployability,[cling] Use canary bytes to determine whether to run dtor:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4074:12,canary,canary,12,https://root.cern,https://github.com/root-project/root/pull/4074,1,['canary'],['canary']
Deployability,[cling] backport patch from llvm 13~dev to fix problem with -fgpu-rdc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8112:17,patch,patch,17,https://root.cern,https://github.com/root-project/root/issues/8112,1,['patch'],['patch']
Deployability,[cmake] Adapt to ZeroMQ 4.3.5 being now released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14003:40,release,released,40,https://root.cern,https://github.com/root-project/root/pull/14003,1,['release'],['released']
Deployability,[cmake] Backport in 6.26 patches update of vdt to 0.4.4 to fix macOS 12.3.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10234:25,patch,patches,25,https://root.cern,https://github.com/root-project/root/pull/10234,2,"['patch', 'update']","['patches', 'update']"
Deployability,[cmake] Do not operate on install directory at build time,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10198:26,install,install,26,https://root.cern,https://github.com/root-project/root/pull/10198,1,['install'],['install']
Deployability,[cmake] Do not operate on install directory at build time (v6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10199:26,install,install,26,https://root.cern,https://github.com/root-project/root/pull/10199,1,['install'],['install']
Deployability,[cmake] Fix installation of the prepareHistFactory script on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12015:12,install,installation,12,https://root.cern,https://github.com/root-project/root/pull/12015,1,['install'],['installation']
Deployability,[cmake] Patch tbb for Apple M1 (issue #6903).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7020:8,Patch,Patch,8,https://root.cern,https://github.com/root-project/root/pull/7020,1,['Patch'],['Patch']
Deployability,[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3864:40,patch,patch,40,https://root.cern,https://github.com/root-project/root/pull/3864,1,['patch'],['patch']
Deployability,[cmake] Set the permissions for etc and other folders that are in the source tree when installing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15138:87,install,installing,87,https://root.cern,https://github.com/root-project/root/pull/15138,1,['install'],['installing']
Deployability,[cmake] Update XRootD to v5.4.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10025:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/10025,2,['Update'],['Update']
Deployability,[cmake] Update XRootD to v5.4.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/10725,2,['Update'],['Update']
Deployability,[cmake] Update XRootD to v5.5.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11328:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/11328,2,['Update'],['Update']
Deployability,[cmake] Update XRootD to v5.5.1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11613:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/11613,2,['Update'],['Update']
Deployability,[cmake] Update built-in xrootd to 4.12.3:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5874:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/5874,1,['Update'],['Update']
Deployability,[cmake] Update builtin tbb to 2021.9.0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12726:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/12726,1,['Update'],['Update']
Deployability,[cmake] Update tbb to 2019U9:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4593:8,Update,Update,8,https://root.cern,https://github.com/root-project/root/pull/4593,1,['Update'],['Update']
Deployability,[cmake] macOS: prefer user-provided Python install over Framework:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6789:43,install,install,43,https://root.cern,https://github.com/root-project/root/pull/6789,1,['install'],['install']
Deployability,[cmake] update urls in windows installer [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8506:8,update,update,8,https://root.cern,https://github.com/root-project/root/pull/8506,2,"['install', 'update']","['installer', 'update']"
Deployability,[cmake][PyROOT] Pythonizations in build directory don't get updated in incremental builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11233:60,update,updated,60,https://root.cern,https://github.com/root-project/root/issues/11233,1,['update'],['updated']
Deployability,[cmake][windows] Don't install system DLLs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15114:23,install,install,23,https://root.cern,https://github.com/root-project/root/pull/15114,1,['install'],['install']
Deployability,[config] remove install of removed root-help.el,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13711:16,install,install,16,https://root.cern,https://github.com/root-project/root/pull/13711,1,['install'],['install']
Deployability,[core] Add installation step for gitinfo.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13794:11,install,installation,11,https://root.cern,https://github.com/root-project/root/pull/13794,1,['install'],['installation']
Deployability,[core] Don't split TStorage::UpdateIsOnHeap declaration and definition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10500:29,Update,UpdateIsOnHeap,29,https://root.cern,https://github.com/root-project/root/pull/10500,1,['Update'],['UpdateIsOnHeap']
Deployability,[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8924:47,update,update,47,https://root.cern,https://github.com/root-project/root/pull/8924,1,['update'],['update']
Deployability,"[core] Update ""logo"" to 2022 (NFC).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10129:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/10129,1,['Update'],['Update']
Deployability,[core] Update RStringView.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8108:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/8108,1,['Update'],['Update']
Deployability,[core] Update TCollection.cxx to prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6634:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/6634,1,['Update'],['Update']
Deployability,[core] Update davix to 0.8.6 and openssl to 3.0.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15466:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/15466,1,['Update'],['Update']
Deployability,[cxxmodules] Also install generated C++ modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2024:18,install,install,18,https://root.cern,https://github.com/root-project/root/pull/2024,1,['install'],['install']
Deployability,[cxxmodules] Also install the overlay file and modulemaps,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2023:18,install,install,18,https://root.cern,https://github.com/root-project/root/pull/2023,1,['install'],['install']
Deployability,[cxxmodules] Complain if glibc is not installed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9057:38,install,installed,38,https://root.cern,https://github.com/root-project/root/pull/9057,1,['install'],['installed']
Deployability,[cxxmodules] Create a overlay file for installed directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3179:39,install,installed,39,https://root.cern,https://github.com/root-project/root/pull/3179,1,['install'],['installed']
Deployability,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:69,patch,patch,69,https://root.cern,https://github.com/root-project/root/pull/7398,3,['patch'],['patch']
Deployability,[cxxmodules] Install all pcms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3181:13,Install,Install,13,https://root.cern,https://github.com/root-project/root/pull/3181,1,['Install'],['Install']
Deployability,[cxxmodules] Install vc.modulemap unconditionally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7348:13,Install,Install,13,https://root.cern,https://github.com/root-project/root/pull/7348,2,['Install'],['Install']
Deployability,[cxxmodules] Revert broken VFS CMake patch / add -vfsoverlay to rootcling/TCling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1015:37,patch,patch,37,https://root.cern,https://github.com/root-project/root/pull/1015,1,['patch'],['patch']
Deployability,[cxxmodules] Revert broken cling patch again,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1273:33,patch,patch,33,https://root.cern,https://github.com/root-project/root/pull/1273,1,['patch'],['patch']
Deployability,[cxxmodules] Update redeclaration chain after loading modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/11423,1,['Update'],['Update']
Deployability,[cxxmodules] Update the requires clauses of the modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10320:13,Update,Update,13,https://root.cern,https://github.com/root-project/root/pull/10320,2,['Update'],['Update']
Deployability,[daos] Generalize daos_mock's fetch/update to accept multiple I/O descriptors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10388:36,update,update,36,https://root.cern,https://github.com/root-project/root/pull/10388,1,['update'],['update']
Deployability,[df] Correctly update sample info when dataset is in TFile subdirectory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15907:15,update,update,15,https://root.cern,https://github.com/root-project/root/pull/15907,1,['update'],['update']
Deployability,[doc][math] Update Minimizer documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12819:12,Update,Update,12,https://root.cern,https://github.com/root-project/root/pull/12819,1,['Update'],['Update']
Deployability,[docu] Update THttpServer documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10733:7,Update,Update,7,https://root.cern,https://github.com/root-project/root/pull/10733,1,['Update'],['Update']
Deployability,[doxy] upgrade to Mathjax3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067:7,upgrade,upgrade,7,https://root.cern,https://github.com/root-project/root/issues/10067,1,['upgrade'],['upgrade']
Deployability,"[eve7] Silence ""unused par"" warning on Mac release builds:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13957:43,release,release,43,https://root.cern,https://github.com/root-project/root/pull/13957,1,['release'],['release']
Deployability,[eve7] repair GL scene update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4631:23,update,update,23,https://root.cern,https://github.com/root-project/root/pull/4631,1,['update'],['update']
Deployability,[eve] update alice_esd_split.C tutorial [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7203:6,update,update,6,https://root.cern,https://github.com/root-project/root/pull/7203,1,['update'],['update']
Deployability,[geom] Updated reference docs for hyperboloid.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12700:7,Update,Updated,7,https://root.cern,https://github.com/root-project/root/pull/12700,1,['Update'],['Updated']
Deployability,[github] Update code owners. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7049:9,Update,Update,9,https://root.cern,https://github.com/root-project/root/pull/7049,1,['Update'],['Update']
Deployability,[gpad] silence unused variable in release mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16174:34,release,release,34,https://root.cern,https://github.com/root-project/root/pull/16174,1,['release'],['release']
